(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{106:function(t,e,o){var n={".":[25,9],"./":[25,9],"./index":[25,9],"./index.vue":[25,9],"./jsDemo":[95,7,3],"./jsDemo.js":[95,7,3],"./lottieComponent":[85,9],"./lottieComponent.vue":[85,9],"./q4-bg":[96,3,5],"./q4-bg.json":[96,3,5],"./q8-bg-3":[97,3,6],"./q8-bg-3.json":[97,3,6]};function s(t){if(!o.o(n,t))return Promise.resolve().then((function(){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}));var e=n[t],s=e[0];return Promise.all(e.slice(2).map(o.e)).then((function(){return o.t(s,e[1])}))}s.keys=function(){return Object.keys(n)},s.id=106,t.exports=s},107:function(t,e,o){"use strict";var n=o(30);o.n(n).a},108:function(t,e,o){"use strict";var n=o(32);o.n(n).a},25:function(t,e,o){"use strict";o.r(e);var n={components:{lottieComponent:o(85).default},mounted(){document.title="lottie Demo"},data:()=>({jsUrlList:["./q8-bg-3.json"]})},s=(o(108),o(5)),i=Object(s.a)(n,(function(){var t=this.$createElement,e=this._self._c||t;return e("section",{staticClass:"animate-wrapper"},[this._v("\n    this is lottie img test 12345\n    "),this._l(this.jsUrlList,(function(t,o){return e("section",{key:o},[e("lottie-component",{staticClass:"img-item",attrs:{jsUrl:t}})],1)}))],2)}),[],!1,null,"4ed37d9d",null);e.default=i.exports},30:function(t,e,o){var n=o(7),s=o(31);"string"==typeof(s=s.__esModule?s.default:s)&&(s=[[t.i,s,""]]);var i={insert:"head",singleton:!1},a=n(s,i),l=s.locals?s.locals:{};s.locals||t.hot.accept(31,(function(){var e=o(31);"string"==typeof(e=e.__esModule?e.default:e)&&(e=[[t.i,e,""]]),a(e)})),t.hot.dispose((function(){a()})),t.exports=l},31:function(t,e,o){(e=o(8)(!1)).push([t.i,'.lottie-wrapper[data-v-ac43d0c6]{height:160vw;content:"viewport-units-buggyfill; height: 160vw"}',""]),t.exports=e},32:function(t,e,o){var n=o(7),s=o(33);"string"==typeof(s=s.__esModule?s.default:s)&&(s=[[t.i,s,""]]);var i={insert:"head",singleton:!1},a=n(s,i),l=s.locals?s.locals:{};s.locals||t.hot.accept(33,(function(){var e=o(33);"string"==typeof(e=e.__esModule?e.default:e)&&(e=[[t.i,e,""]]),a(e)})),t.hot.dispose((function(){a()})),t.exports=l},33:function(t,e,o){(e=o(8)(!1)).push([t.i,'section[data-v-4ed37d9d]{display:block;overflow:hidden;box-sizing:border-box}.animate-wrapper[data-v-4ed37d9d]{height:100%;overflow-y:scroll}.img-item[data-v-4ed37d9d]{height:160vw;border:1px solid red;content:"viewport-units-buggyfill; height: 160vw"}',""]),t.exports=e},85:function(t,e,o){"use strict";o.r(e);var n=o(105),s=o.n(n),i={props:{jsUrl:{type:String,default:""}},data:()=>({remoteJsonUrl:"http://192.168.31.252:9080/lottie.json",remoteJsUrl:"http://192.168.31.252:9080/jsDemoA.js",jsonImgUrl:"./q4-bg.json",style:{height:""}}),mounted(){this._loadJsonImg()},methods:{_loadJsonImg(){let t=this;this.$refs.lottieCon;o(106)(""+this.jsUrl).then(e=>{this.style={height:`${e.h/2}px`},requestAnimationFrame(()=>{console.log(this.style,44),s.a.loadAnimation({container:t.$refs.lottieCon,renderer:"canvas",loop:!1,autoplay:!0,animationData:e,className:"canvas-default",rendererSettings:{}})})})},_loadRemoteJs(){let t=document.createElement("script");t.src=this.jsUrl,window.executeJson=t=>{console.log("executeJson",t,26)},document.getElementsByTagName("head")[0].append(t)},_loadRemoteJson(){},_loadLocalJson(){}}},a=(o(107),o(5)),l=Object(a.a)(i,(function(){var t=this.$createElement;return(this._self._c||t)("section",{ref:"lottieCon",staticClass:"lottie-wrapper",style:this.style})}),[],!1,null,"ac43d0c6",null);e.default=l.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,