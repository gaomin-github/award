(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{120:function(e,t,s){"use strict";var r=s(46);s.n(r).a},146:function(e,t,s){"use strict";s.r(t);var r=s(3),a=s(17),i={computed:{},data:()=>({users:[]}),computed:{...Object(r.d)("weekly",["pathArr"])},mounted(){this._initUsers(),this.pathArr&&this.pathArr.length>0||this.pushPathArr("user")},methods:{...Object(r.c)("weekly",["updateCurUser","pushPathArr"]),_initUsers(){a.a.get("/task/users").then(e=>{200===e.status&&e.data&&(this.users=e.data)})},selectUser(e){this.updateCurUser(e),this.pushPathArr("task")}}},u=(s(120),s(5)),n=Object(u.a)(i,(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"user-wrapper"},[s("header"),e._v(" "),e.users&&e.users.length>0?s("div",{staticClass:"user"},e._l(e.users,(function(t){return s("div",{key:t.userId,staticClass:"user-item",on:{click:function(s){return e.selectUser(t)}}},[e._v(e._s(t.userName))])})),0):e._e()])}),[],!1,null,"1ebcbe25",null);t.default=n.exports},17:function(e,t,s){"use strict";var r=s(18);let a=s.n(r).a.create({timeout:3e4,headers:{}});t.a=a},46:function(e,t,s){var r=s(8),a=s(47);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var i={insert:"head",singleton:!1},u=r(a,i),n=a.locals?a.locals:{};a.locals||e.hot.accept(47,(function(){var t=s(47);"string"==typeof(t=t.__esModule?t.default:t)&&(t=[[e.i,t,""]]),u(t)})),e.hot.dispose((function(){u()})),e.exports=n},47:function(e,t,s){(t=s(9)(!1)).push([e.i,".user-wrapper[data-v-1ebcbe25]{position:absolute;width:100%;height:100%;top:0px;bottom:0px}.user-item[data-v-1ebcbe25]{margin:10px 0px;text-align:center;line-height:36px;background-color:#f6f5dc}\n",""]),e.exports=t}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,