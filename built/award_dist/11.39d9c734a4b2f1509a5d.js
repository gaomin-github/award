(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{100:function(t,e,o){"use strict";var n=o(26);o.n(n).a},101:function(t,e,o){"use strict";var n=o(28);o.n(n).a},21:function(t,e,o){"use strict";o.r(e);var n={components:{lottieComponent:o(78).default},mounted(){document.title="lottie Demo"},data:()=>({jsUrlList:["./q8-bg-3.json"]})},s=(o(101),o(5)),i=Object(s.a)(n,(function(){var t=this.$createElement,e=this._self._c||t;return e("section",{staticClass:"animate-wrapper"},[this._v("\n    this is lottie img test 12345\n    "),this._l(this.jsUrlList,(function(t,o){return e("section",{key:o},[e("lottie-component",{staticClass:"img-item",attrs:{jsUrl:t}})],1)}))],2)}),[],!1,null,"173d0a6c",null);e.default=i.exports},26:function(t,e,o){var n=o(7),s=o(27);"string"==typeof(s=s.__esModule?s.default:s)&&(s=[[t.i,s,""]]);var i={insert:"head",singleton:!1},a=n(s,i),l=s.locals?s.locals:{};s.locals||t.hot.accept(27,(function(){var e=o(27);"string"==typeof(e=e.__esModule?e.default:e)&&(e=[[t.i,e,""]]),a(e)})),t.hot.dispose((function(){a()})),t.exports=l},27:function(t,e,o){(e=o(8)(!1)).push([t.i,'.lottie-wrapper[data-v-0b3104f4]{height:160vw;content:"viewport-units-buggyfill; height: 160vw"}',""]),t.exports=e},28:function(t,e,o){var n=o(7),s=o(29);"string"==typeof(s=s.__esModule?s.default:s)&&(s=[[t.i,s,""]]);var i={insert:"head",singleton:!1},a=n(s,i),l=s.locals?s.locals:{};s.locals||t.hot.accept(29,(function(){var e=o(29);"string"==typeof(e=e.__esModule?e.default:e)&&(e=[[t.i,e,""]]),a(e)})),t.hot.dispose((function(){a()})),t.exports=l},29:function(t,e,o){(e=o(8)(!1)).push([t.i,'section[data-v-173d0a6c]{display:block;overflow:hidden;box-sizing:border-box}.animate-wrapper[data-v-173d0a6c]{height:100%;overflow-y:scroll}.img-item[data-v-173d0a6c]{height:160vw;border:1px solid red;content:"viewport-units-buggyfill; height: 160vw"}',""]),t.exports=e},78:function(t,e,o){"use strict";o.r(e);var n=o(98),s=o.n(n),i={props:{jsUrl:{type:String,default:""}},data:()=>({remoteJsonUrl:"http://192.168.31.252:9080/lottie.json",remoteJsUrl:"http://192.168.31.252:9080/jsDemoA.js",jsonImgUrl:"./q4-bg.json",style:{height:""}}),mounted(){this._loadJsonImg()},methods:{_loadJsonImg(){let t=this;this.$refs.lottieCon;o(99)(""+this.jsUrl).then(e=>{this.style={height:`${e.h/2}px`},requestAnimationFrame(()=>{console.log(this.style,44),s.a.loadAnimation({container:t.$refs.lottieCon,renderer:"canvas",loop:!1,autoplay:!0,animationData:e,className:"canvas-default",rendererSettings:{}})})})},_loadRemoteJs(){let t=document.createElement("script");t.src=this.jsUrl,window.executeJson=t=>{console.log("executeJson",t,26)},document.getElementsByTagName("head")[0].append(t)},_loadRemoteJson(){},_loadLocalJson(){}}},a=(o(100),o(5)),l=Object(a.a)(i,(function(){var t=this.$createElement;return(this._self._c||t)("section",{ref:"lottieCon",staticClass:"lottie-wrapper",style:this.style})}),[],!1,null,"0b3104f4",null);e.default=l.exports},99:function(t,e,o){var n={".":[21,9],"./":[21,9],"./index":[21,9],"./index.vue":[21,9],"./jsDemo":[88,7,3],"./jsDemo.js":[88,7,3],"./lottieComponent":[78,9],"./lottieComponent.vue":[78,9],"./q4-bg":[89,3,5],"./q4-bg.json":[89,3,5],"./q8-bg-3":[90,3,6],"./q8-bg-3.json":[90,3,6]};function s(t){if(!o.o(n,t))return Promise.resolve().then((function(){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}));var e=n[t],s=e[0];return Promise.all(e.slice(2).map(o.e)).then((function(){return o.t(s,e[1])}))}s.keys=function(){return Object.keys(n)},s.id=99,t.exports=s}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,