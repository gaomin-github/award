(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{10:function(e,t,s){"use strict";var r=s(12),u=s.n(r),n=s(4),a=s.n(n);s(2);var i={namespaced:!0,state:()=>({taskId:"",scheduleList:null,curUser:null,curSchedule:null,subId:"",taskHistory:null,editing:!1,pathArr:"",pageMove:""}),getters:{totalValue:e=>{if(!e.scheduleList||0==e.scheduleList.length)return 0;if(1===e.scheduleList.length)return Number(e.scheduleList[0].worth);let t=e.scheduleList.reduce((e,t,s)=>1===s?Number(e.worth)+Number(t.worth):Number(e)+Number(t.worth));return Number(t)},score:e=>{if(!e.scheduleList||0==e.scheduleList.length)return 0;if(1===e.scheduleList.length)return Number(e.scheduleList[0].process);let t=e.scheduleList.reduce((e,t,s)=>1===s?Number(e.process)+Number(t.process):Number(e)+Number(t.process));return Number(t)}},mutations:{initTask(e,t){e.scheduleList=t.schedules,e.taskId=t.taskId},insertSchedule(e,t){e.scheduleList.push(t)},updateSchedule(e,t){let s=e.scheduleList.findIndex(e=>{if(t.subId===e.subId)return!0});s>=0&&e.scheduleList.splice(s,1,t)},deleteSchedule(e,t){let s=e.scheduleList.findIndex(e=>{if(t.subid===e.subid)return!0});e.scheduleList.splice(s,1)},updateCurUser(e,t){e.curUser=t},updateCurSchedule(e,t){e.curSchedule=t},updateSubId(e,t){e.subId=t},updateEditing(e,t){e.editing=t},pushPathArr(e,t){e.pathArr+="/"+t},popPathArr(e){let t=e.pathArr.split("/");t.pop(),e.pathArr=t.join("/")},setPageMove(e,t){e.pageMove=t}}};var o={namespaced:!0,state:()=>({curArea:null}),getters:{getCurArea:e=>e.curArea},mutations:{setCurArea(e,t){e.curArea=t}}};var d={namespaced:!0,state:()=>({userInfo:{userId:"",token:""}}),getters:{getUserInfo:e=>{if(e.userInfo&&e.userInfo.token)return e.userInfo;let t=localStorage.getItem("userInfo");return t?(e.userInfo=JSON.parse(t),JSON.parse(t)):null}},mutations:{updateUserInfo(e,t){console.log(t,"params",25),e.userInfo=t}}};var l=new a.a.Store({modules:{weekly:i,estate:o,rbac:d}});let c=u.a.create({timeout:3e4,headers:{}});c.interceptors.request.use(e=>{let t=l.getters["rbac/getUserInfo"];return e.headers.Authorization=""+(t&&t.token||""),e}),c.interceptors.response.use(e=>{if(401!==e.status)return e;location.reload()});t.a=c},131:function(e,t,s){"use strict";s.r(t);var r=s(4),u=s(10),n={components:{menuNode:()=>s.e(26).then(s.bind(null,142))},data:()=>({menuList:[]}),computed:{...Object(r.mapState)("rbac",["userInfo"]),...Object(r.mapGetters)("rbac",["getUserInfo"])},mounted(){console.log("sidebar mounted"),this._initPermissionRoute()},methods:{async _initPermissionRoute(){let e=this.getUserInfo;console.log(e,22);let t=await Object(u.a)({url:"/backend_rbac/userAuth",method:"get",params:{userId:e.userId}});200===t.status&&(this.menuList=t.data)}}},a=s(1),i=Object(a.a)(n,(function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"sidebar-wrapper"},this._l(this.menuList,(function(e){return t("div",{key:e.id},[t("menu-node",{attrs:{nodeParam:e}})],1)})),0)}),[],!1,null,"1e798c1a",null);t.default=i.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,