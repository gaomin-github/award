(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{113:function(t,e,n){"use strict";n.r(e);try{console.log(_hmt)}catch(t){console.log(t,20),a()}function a(){return new Promise((t,e)=>{let n=document.createElement("script");n.src="https://hm.baidu.com/hm.js?aed5b22f977f7df51e0f9e87402eb81b";let a=document.getElementsByTagName("script");a[0].parentNode.insertBefore(n,a[0]),n.onload=()=>t()})}async function o(t,e){try{if(!_hmt)return void console.log("baidutongji.js 引入失败",3);"pv"===t?_hmt.push(["_trackPageview",e]):"event"===t&&_hmt.push(["_trackEvent",...e])}catch(n){await a(),o(t,e)}}var i={},s=(n(88),n(1)),c=Object(s.a)(i,(function(){var t=this.$createElement;return(this._self._c||t)("div",{staticClass:"b-wrapper"})}),[],!1,null,"1cf493ba",null).exports,r={},l=(n(89),{data:()=>({comList:["aCom","bCom","cCom"],curCom:"aCom",animDuration:0,transitionName:"",scrollTop:0,hmObj:null}),components:{bCom:c,cCom:Object(s.a)(r,(function(){var t=this.$createElement;return(this._self._c||t)("div",{staticClass:"c-wrapper"})}),[],!1,null,"e102cab4",null).exports,aCom:()=>n.e(21).then(n.bind(null,135))},mounted(){this._initHm()},activated(){},deactivated(){console.log(this.scrollTop,51)},methods:{_initHm(){o("pv","animTest")},changeCom(t){this.curCom=t,o("event",["search","click",t,(new Date).getTime()])},handleEnter(){this.transitionName="com",this.animDuration="300",console.log("handleEnter",31)},stepTo(t){this.$router.push({name:"scrollTest",query:{pageIndex:t}})}}}),m=(n(90),Object(s.a)(l,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"anim-wrapper"},[t._l(t.comList,(function(e){return n("div",{key:e,staticClass:"bar",on:{click:function(n){return t.changeCom(e)}}},[t._v(t._s(e))])})),t._v(" "),n("div",{staticClass:"item"},[n("transition",{attrs:{name:t.transitionName},on:{enter:t.handleEnter}},[n("keep-alive",[n(t.curCom,{tag:"component",staticClass:"item-con"})],1)],1)],1)],2)}),[],!1,null,"20e7d361",null));e.default=m.exports},22:function(t,e,n){},23:function(t,e,n){},24:function(t,e,n){},88:function(t,e,n){"use strict";var a=n(22);n.n(a).a},89:function(t,e,n){"use strict";var a=n(23);n.n(a).a},90:function(t,e,n){"use strict";var a=n(24);n.n(a).a}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,