(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{12:function(t,e,n){"use strict";n.r(e);var o={components:{lottieComponent:n(43).default},mounted(){document.title="lottie Demo"},data:()=>({jsUrlList:["./q8-bg-3.json"]})},s=(n(62),n(1)),i=Object(s.a)(o,(function(){var t=this.$createElement,e=this._self._c||t;return e("section",{staticClass:"animate-wrapper"},[this._v("\n    this is lottie img test 12345\n    "),this._l(this.jsUrlList,(function(t,n){return e("section",{key:n},[e("lottie-component",{staticClass:"img-item",attrs:{jsUrl:t}})],1)}))],2)}),[],!1,null,"173d0a6c",null);e.default=i.exports},15:function(t,e,n){},16:function(t,e,n){},43:function(t,e,n){"use strict";n.r(e);var o=n(59),s=n.n(o),i={props:{jsUrl:{type:String,default:""}},data:()=>({remoteJsonUrl:"http://192.168.31.252:9080/lottie.json",remoteJsUrl:"http://192.168.31.252:9080/jsDemoA.js",jsonImgUrl:"./q4-bg.json",style:{height:""}}),mounted(){this._loadJsonImg()},methods:{_loadJsonImg(){let t=this;this.$refs.lottieCon;n(60)(""+this.jsUrl).then(e=>{this.style={height:e.h/2+"px"},requestAnimationFrame(()=>{console.log(this.style,44),s.a.loadAnimation({container:t.$refs.lottieCon,renderer:"canvas",loop:!1,autoplay:!0,animationData:e,className:"canvas-default",rendererSettings:{}})})})},_loadRemoteJs(){let t=document.createElement("script");t.src=this.jsUrl,window.executeJson=t=>{console.log("executeJson",t,26)},document.getElementsByTagName("head")[0].append(t)},_loadRemoteJson(){},_loadLocalJson(){}}},r=(n(61),n(1)),a=Object(r.a)(i,(function(){var t=this.$createElement;return(this._self._c||t)("section",{ref:"lottieCon",staticClass:"lottie-wrapper",style:this.style})}),[],!1,null,"0b3104f4",null);e.default=a.exports},60:function(t,e,n){var o={".":[12,9],"./":[12,9],"./index":[12,9],"./index.vue":[12,9],"./jsDemo":[53,7,3],"./jsDemo.js":[53,7,3],"./lottieComponent":[43,9],"./lottieComponent.vue":[43,9],"./q4-bg":[54,3,5],"./q4-bg.json":[54,3,5],"./q8-bg-3":[55,3,6],"./q8-bg-3.json":[55,3,6]};function s(t){if(!n.o(o,t))return Promise.resolve().then((function(){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}));var e=o[t],s=e[0];return Promise.all(e.slice(2).map(n.e)).then((function(){return n.t(s,e[1])}))}s.keys=function(){return Object.keys(o)},s.id=60,t.exports=s},61:function(t,e,n){"use strict";var o=n(15);n.n(o).a},62:function(t,e,n){"use strict";var o=n(16);n.n(o).a}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,