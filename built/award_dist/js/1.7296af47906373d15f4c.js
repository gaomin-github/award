(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{10:function(e,t,n){"use strict";n.r(t);var o={components:{test2:()=>n.e(3).then(n.bind(null,19)),safeTest:()=>n.e(6).then(n.bind(null,20)),changeTest:()=>n.e(5).then(n.bind(null,21))},data:()=>({timeMsg:""}),mounted(){this._initTimeMsg(),setTimeout(()=>{},1e3)},methods:{_initTimeMsg(){let e=new Date("2020-10-20T23:23:23"),t=Math.floor((e.getTime()-(new Date).getTime())/1e3);if(t<=0)return void(this.timeMsg="");let n=t%60,o=Math.floor(t%3600/60),i=Math.floor(t%86400/3600),s=Math.floor(t/86400);this.timeMsg=`${s}天${i}时${o}分${n}秒`,setTimeout(()=>{this._initTimeMsg()},1e3)},changeImportHandler(){console.log(name,"test_index",18),changeName("com1")},changeRequireHandler(){console.log(r_name,"test_index",32),console.log(r_data),r_changeName("com1"),r_changeData({id:"index",name:"index"})}}},i=(n(16),n(11)),s=Object(i.a)(o,(function(){var e=this.$createElement,t=this._self._c||e;return t("section",{staticClass:"test-wrapper"},[t("router-view"),this._v(" "),t("safe-test")],1)}),[],!1,null,"91a9131e",null);t.default=s.exports},11:function(e,t,n){"use strict";function o(e,t,n,o,i,s,r,a){var c,l="function"==typeof e?e.options:e;if(t&&(l.render=t,l.staticRenderFns=n,l._compiled=!0),o&&(l.functional=!0),s&&(l._scopeId="data-v-"+s),r?(c=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(r)},l._ssrRegister=c):i&&(c=a?function(){i.call(this,this.$root.$options.shadowRoot)}:i),c)if(l.functional){l._injectStyles=c;var d=l.render;l.render=function(e,t){return c.call(t),d(e,t)}}else{var u=l.beforeCreate;l.beforeCreate=u?[].concat(u,c):[c]}return{exports:e,options:l}}n.d(t,"a",(function(){return o}))},13:function(e,t,n){},16:function(e,t,n){"use strict";var o=n(13);n.n(o).a}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,