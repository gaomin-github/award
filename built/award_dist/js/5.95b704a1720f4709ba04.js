(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{21:function(t,e,n){"use strict";n.r(e);var a={data:()=>({arr:[1,2,3],keyObj:{},obj:{name:"anna",info:{age:32}},txt:"txt content"}),mounted(){},methods:{changeObj(){this.obj.info.age++,this.obj[Math.random()]="addNew"},changeTxt(){this.txt+="1-"},changeArr(){this.arr[1]=this.arr[1]+"a"},pushArr(){this.arr.push(Math.random())},addKeyObj(){let t=(new Date).getTime();this.$set(this.keyObj,""+t,{type:t%2,value:t}),console.log(this.keyObj,61)},getFullInfo(){return`name:${this.obj.name},age:${this.obj.info.age},txt:${this.txt}`},getArrLen(){return this.arr.length},getObjNum(t){return console.log("getObjNum",68),Object.keys(this.keyObj).filter(e=>this.keyObj[e].type===t).length}}},r=n(11),s=Object(r.a)(a,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"change-wrapper"},[t._v("\n  change test---obj:"+t._s(t.obj.info.age)+","+t._s(t.obj.name)+",txt:"+t._s(t.txt)+"\n  "),n("div",[t._v(t._s(t.getFullInfo()))]),t._v(" "),n("div",[t._v(t._s(JSON.stringify(t.obj)))]),t._v(" "),n("div",[t._v("getArrLen:"+t._s(t.getArrLen()))]),t._v(" "),n("div",[t._v(t._s(t.keyObj))]),t._v(" "),n("div",[t._v("oddNum:"+t._s(t.getObjNum(1))+",eddNum:"+t._s(t.getObjNum(0)))]),t._v(" "),n("div",[n("button",{on:{click:t.changeObj}},[t._v("changeObj")]),t._v(" "),n("button",{on:{click:t.changeTxt}},[t._v("changeTxt")]),t._v(" "),n("button",{on:{click:t.changeArr}},[t._v("changeArr")]),t._v(" "),n("button",{on:{click:t.pushArr}},[t._v("pushArr")]),t._v(" "),n("button",{on:{click:t.addKeyObj}},[t._v("addKeyObj")])])])}),[],!1,null,null,null);e.default=s.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,