(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{104:function(t,s,i){"use strict";var e=i(35);i.n(e).a},136:function(t,s,i){"use strict";i.r(s);var e=i(4),a=i(10),n={data:()=>({buildings:[]}),computed:{...Object(e.mapGetters)("estate",["getCurArea"])},mounted(){this._getBuildingInfo()},methods:{_getBuildingInfo(){a.a.get("/xian/estateBuildings?areaId="+this.getCurArea.areaId).then(t=>{200===t.status&&(this.buildings=t.data)})}}},c=(i(104),i(1)),l=Object(c.a)(n,(function(){var t=this,s=t.$createElement,i=t._self._c||s;return i("div",{staticClass:"building-wrapper"},[t.buildings&&t.buildings.length>0?i("section",{staticClass:"horz building-title"},[i("section",{staticClass:"name"},[t._v("房间号")]),t._v(" "),i("section",{staticClass:"space"},[t._v("面积")]),t._v(" "),i("section",{staticClass:"unit-price"},[t._v("单价(元)")]),t._v(" "),i("section",{staticClass:"total-price"},[t._v("总价(万元)")])]):t._e(),t._v(" "),t.buildings&&t.buildings.length>0?i("section",{staticClass:"building-list"},t._l(t.buildings,(function(s,e){return i("section",{key:e,staticClass:"building-list-item horz"},[i("section",{staticClass:"name"},[t._v(t._s(s.buildingId))]),t._v(" "),i("section",{staticClass:"space"},[t._v(t._s(s.space))]),t._v(" "),i("section",{staticClass:"unit-price"},[t._v(t._s(s.unitPrice))]),t._v(" "),i("section",{staticClass:"total-price"},[t._v(t._s(Math.ceil(parseInt(s.totalPrice)/1e4)))])])})),0):t._e()])}),[],!1,null,"74407c64",null);s.default=l.exports},35:function(t,s,i){}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,