(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{10:function(t,e,n){},15:function(t,e,n){"use strict";var s=n(10);n.n(s).a},16:function(t,e,n){"use strict";n.r(e);function s(){return t="http://h5-test.sys.tv.mi.com/service/vote/getWechatVoteStatus?deviceId=001&actName=sofa0&source=mobile",new Promise((e,n)=>{var s="jsonp_"+Math.floor(1e5*Math.random()).toString().substring(2,10);window[s]=function(t){return window[s]=null,s=null,e(t)};let o=document.createElement("script");o.src=`${t}&callback=${s}`,document.getElementsByTagName("script")[0].appendChild(o)});var t}var o=n(11);let{r_name:c,r_data:a,r_changeName:i,r_changeData:l}=n(12);var r={mounted(){console.log("this is debug log",22),console.log("this is online log",22)},methods:{async jsonpReq(){await s()},changeImportHandler(){console.log(o.c,"test_com2",18),console.log(a),Object(o.a)("com2")},changeRequireHandler(){console.log(c,"test_2",25),console.log(a),i("com2"),l({id:"test2",name:"test2"})}}},u=(n(15),n(13)),m=Object(u.a)(r,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("section",{staticClass:"test2-wrapper"},[n("section",{staticClass:"btn-list-item",on:{click:t.changeImportHandler}},[t._v("test2 import")]),t._v(" "),n("section",{staticClass:"btn-list-item",on:{click:t.changeRequireHandler}},[t._v("test2 require")]),t._v(" "),n("section",{staticClass:"btn-list-item",on:{click:t.jsonpReq}},[t._v("jsonp test")])])}),[],!1,null,"bb3d662a",null);e.default=m.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,