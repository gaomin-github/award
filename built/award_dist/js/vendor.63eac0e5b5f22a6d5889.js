/*! For license information please see vendor.63eac0e5b5f22a6d5889.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[5],[function(t,e,n){"use strict";(function(t,n){var r=Object.freeze({});function i(t){return null==t}function a(t){return null!=t}function o(t){return!0===t}function s(t){return"string"==typeof t||"number"==typeof t||"symbol"==typeof t||"boolean"==typeof t}function u(t){return null!==t&&"object"==typeof t}var l=Object.prototype.toString;function c(t){return"[object Object]"===l.call(t)}function p(t){return"[object RegExp]"===l.call(t)}function h(t){var e=parseFloat(String(t));return e>=0&&Math.floor(e)===e&&isFinite(t)}function f(t){return a(t)&&"function"==typeof t.then&&"function"==typeof t.catch}function d(t){return null==t?"":Array.isArray(t)||c(t)&&t.toString===l?JSON.stringify(t,null,2):String(t)}function _(t){var e=parseFloat(t);return isNaN(e)?t:e}function v(t,e){for(var n=Object.create(null),r=t.split(","),i=0;i<r.length;i++)n[r[i]]=!0;return e?function(t){return n[t.toLowerCase()]}:function(t){return n[t]}}var m=v("slot,component",!0),g=v("key,ref,slot,slot-scope,is");function b(t,e){if(t.length){var n=t.indexOf(e);if(n>-1)return t.splice(n,1)}}var y=Object.prototype.hasOwnProperty;function w(t,e){return y.call(t,e)}function x(t){var e=Object.create(null);return function(n){return e[n]||(e[n]=t(n))}}var k=/-(\w)/g,$=x((function(t){return t.replace(k,(function(t,e){return e?e.toUpperCase():""}))})),O=x((function(t){return t.charAt(0).toUpperCase()+t.slice(1)})),E=/\B([A-Z])/g,A=x((function(t){return t.replace(E,"-$1").toLowerCase()}));var C=Function.prototype.bind?function(t,e){return t.bind(e)}:function(t,e){function n(n){var r=arguments.length;return r?r>1?t.apply(e,arguments):t.call(e,n):t.call(e)}return n._length=t.length,n};function j(t,e){e=e||0;for(var n=t.length-e,r=new Array(n);n--;)r[n]=t[n+e];return r}function S(t,e){for(var n in e)t[n]=e[n];return t}function T(t){for(var e={},n=0;n<t.length;n++)t[n]&&S(e,t[n]);return e}function P(t,e,n){}var R=function(t,e,n){return!1},D=function(t){return t};function M(t,e){if(t===e)return!0;var n=u(t),r=u(e);if(!n||!r)return!n&&!r&&String(t)===String(e);try{var i=Array.isArray(t),a=Array.isArray(e);if(i&&a)return t.length===e.length&&t.every((function(t,n){return M(t,e[n])}));if(t instanceof Date&&e instanceof Date)return t.getTime()===e.getTime();if(i||a)return!1;var o=Object.keys(t),s=Object.keys(e);return o.length===s.length&&o.every((function(n){return M(t[n],e[n])}))}catch(t){return!1}}function L(t,e){for(var n=0;n<t.length;n++)if(M(t[n],e))return n;return-1}function N(t){var e=!1;return function(){e||(e=!0,t.apply(this,arguments))}}var F=["component","directive","filter"],I=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],z={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:R,isReservedAttr:R,isUnknownElement:R,getTagNamespace:P,parsePlatformTagName:D,mustUseProp:R,async:!0,_lifecycleHooks:I},H=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function B(t){var e=(t+"").charCodeAt(0);return 36===e||95===e}function U(t,e,n,r){Object.defineProperty(t,e,{value:n,enumerable:!!r,writable:!0,configurable:!0})}var q=new RegExp("[^"+H.source+".$_\\d]");var G,K="__proto__"in{},W="undefined"!=typeof window,V="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,X=V&&WXEnvironment.platform.toLowerCase(),J=W&&window.navigator.userAgent.toLowerCase(),Y=J&&/msie|trident/.test(J),Q=J&&J.indexOf("msie 9.0")>0,Z=J&&J.indexOf("edge/")>0,tt=(J&&J.indexOf("android"),J&&/iphone|ipad|ipod|ios/.test(J)||"ios"===X),et=(J&&/chrome\/\d+/.test(J),J&&/phantomjs/.test(J),J&&J.match(/firefox\/(\d+)/)),nt={}.watch,rt=!1;if(W)try{var it={};Object.defineProperty(it,"passive",{get:function(){rt=!0}}),window.addEventListener("test-passive",null,it)}catch(t){}var at=function(){return void 0===G&&(G=!W&&!V&&void 0!==t&&(t.process&&"server"===t.process.env.VUE_ENV)),G},ot=W&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function st(t){return"function"==typeof t&&/native code/.test(t.toString())}var ut,lt="undefined"!=typeof Symbol&&st(Symbol)&&"undefined"!=typeof Reflect&&st(Reflect.ownKeys);ut="undefined"!=typeof Set&&st(Set)?Set:function(){function t(){this.set=Object.create(null)}return t.prototype.has=function(t){return!0===this.set[t]},t.prototype.add=function(t){this.set[t]=!0},t.prototype.clear=function(){this.set=Object.create(null)},t}();var ct=P,pt=0,ht=function(){this.id=pt++,this.subs=[]};ht.prototype.addSub=function(t){this.subs.push(t)},ht.prototype.removeSub=function(t){b(this.subs,t)},ht.prototype.depend=function(){ht.target&&ht.target.addDep(this)},ht.prototype.notify=function(){var t=this.subs.slice();for(var e=0,n=t.length;e<n;e++)t[e].update()},ht.target=null;var ft=[];function dt(t){ft.push(t),ht.target=t}function _t(){ft.pop(),ht.target=ft[ft.length-1]}var vt=function(t,e,n,r,i,a,o,s){this.tag=t,this.data=e,this.children=n,this.text=r,this.elm=i,this.ns=void 0,this.context=a,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=o,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},mt={child:{configurable:!0}};mt.child.get=function(){return this.componentInstance},Object.defineProperties(vt.prototype,mt);var gt=function(t){void 0===t&&(t="");var e=new vt;return e.text=t,e.isComment=!0,e};function bt(t){return new vt(void 0,void 0,void 0,String(t))}function yt(t){var e=new vt(t.tag,t.data,t.children&&t.children.slice(),t.text,t.elm,t.context,t.componentOptions,t.asyncFactory);return e.ns=t.ns,e.isStatic=t.isStatic,e.key=t.key,e.isComment=t.isComment,e.fnContext=t.fnContext,e.fnOptions=t.fnOptions,e.fnScopeId=t.fnScopeId,e.asyncMeta=t.asyncMeta,e.isCloned=!0,e}var wt=Array.prototype,xt=Object.create(wt);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(t){var e=wt[t];U(xt,t,(function(){for(var n=[],r=arguments.length;r--;)n[r]=arguments[r];var i,a=e.apply(this,n),o=this.__ob__;switch(t){case"push":case"unshift":i=n;break;case"splice":i=n.slice(2)}return i&&o.observeArray(i),o.dep.notify(),a}))}));var kt=Object.getOwnPropertyNames(xt),$t=!0;function Ot(t){$t=t}var Et=function(t){this.value=t,this.dep=new ht,this.vmCount=0,U(t,"__ob__",this),Array.isArray(t)?(K?function(t,e){t.__proto__=e}(t,xt):function(t,e,n){for(var r=0,i=n.length;r<i;r++){var a=n[r];U(t,a,e[a])}}(t,xt,kt),this.observeArray(t)):this.walk(t)};function At(t,e){var n;if(u(t)&&!(t instanceof vt))return w(t,"__ob__")&&t.__ob__ instanceof Et?n=t.__ob__:$t&&!at()&&(Array.isArray(t)||c(t))&&Object.isExtensible(t)&&!t._isVue&&(n=new Et(t)),e&&n&&n.vmCount++,n}function Ct(t,e,n,r,i){var a=new ht,o=Object.getOwnPropertyDescriptor(t,e);if(!o||!1!==o.configurable){var s=o&&o.get,u=o&&o.set;s&&!u||2!==arguments.length||(n=t[e]);var l=!i&&At(n);Object.defineProperty(t,e,{enumerable:!0,configurable:!0,get:function(){var e=s?s.call(t):n;return ht.target&&(a.depend(),l&&(l.dep.depend(),Array.isArray(e)&&Tt(e))),e},set:function(e){var r=s?s.call(t):n;e===r||e!=e&&r!=r||s&&!u||(u?u.call(t,e):n=e,l=!i&&At(e),a.notify())}})}}function jt(t,e,n){if(Array.isArray(t)&&h(e))return t.length=Math.max(t.length,e),t.splice(e,1,n),n;if(e in t&&!(e in Object.prototype))return t[e]=n,n;var r=t.__ob__;return t._isVue||r&&r.vmCount?n:r?(Ct(r.value,e,n),r.dep.notify(),n):(t[e]=n,n)}function St(t,e){if(Array.isArray(t)&&h(e))t.splice(e,1);else{var n=t.__ob__;t._isVue||n&&n.vmCount||w(t,e)&&(delete t[e],n&&n.dep.notify())}}function Tt(t){for(var e=void 0,n=0,r=t.length;n<r;n++)(e=t[n])&&e.__ob__&&e.__ob__.dep.depend(),Array.isArray(e)&&Tt(e)}Et.prototype.walk=function(t){for(var e=Object.keys(t),n=0;n<e.length;n++)Ct(t,e[n])},Et.prototype.observeArray=function(t){for(var e=0,n=t.length;e<n;e++)At(t[e])};var Pt=z.optionMergeStrategies;function Rt(t,e){if(!e)return t;for(var n,r,i,a=lt?Reflect.ownKeys(e):Object.keys(e),o=0;o<a.length;o++)"__ob__"!==(n=a[o])&&(r=t[n],i=e[n],w(t,n)?r!==i&&c(r)&&c(i)&&Rt(r,i):jt(t,n,i));return t}function Dt(t,e,n){return n?function(){var r="function"==typeof e?e.call(n,n):e,i="function"==typeof t?t.call(n,n):t;return r?Rt(r,i):i}:e?t?function(){return Rt("function"==typeof e?e.call(this,this):e,"function"==typeof t?t.call(this,this):t)}:e:t}function Mt(t,e){var n=e?t?t.concat(e):Array.isArray(e)?e:[e]:t;return n?function(t){for(var e=[],n=0;n<t.length;n++)-1===e.indexOf(t[n])&&e.push(t[n]);return e}(n):n}function Lt(t,e,n,r){var i=Object.create(t||null);return e?S(i,e):i}Pt.data=function(t,e,n){return n?Dt(t,e,n):e&&"function"!=typeof e?t:Dt(t,e)},I.forEach((function(t){Pt[t]=Mt})),F.forEach((function(t){Pt[t+"s"]=Lt})),Pt.watch=function(t,e,n,r){if(t===nt&&(t=void 0),e===nt&&(e=void 0),!e)return Object.create(t||null);if(!t)return e;var i={};for(var a in S(i,t),e){var o=i[a],s=e[a];o&&!Array.isArray(o)&&(o=[o]),i[a]=o?o.concat(s):Array.isArray(s)?s:[s]}return i},Pt.props=Pt.methods=Pt.inject=Pt.computed=function(t,e,n,r){if(!t)return e;var i=Object.create(null);return S(i,t),e&&S(i,e),i},Pt.provide=Dt;var Nt=function(t,e){return void 0===e?t:e};function Ft(t,e,n){if("function"==typeof e&&(e=e.options),function(t,e){var n=t.props;if(n){var r,i,a={};if(Array.isArray(n))for(r=n.length;r--;)"string"==typeof(i=n[r])&&(a[$(i)]={type:null});else if(c(n))for(var o in n)i=n[o],a[$(o)]=c(i)?i:{type:i};else 0;t.props=a}}(e),function(t,e){var n=t.inject;if(n){var r=t.inject={};if(Array.isArray(n))for(var i=0;i<n.length;i++)r[n[i]]={from:n[i]};else if(c(n))for(var a in n){var o=n[a];r[a]=c(o)?S({from:a},o):{from:o}}else 0}}(e),function(t){var e=t.directives;if(e)for(var n in e){var r=e[n];"function"==typeof r&&(e[n]={bind:r,update:r})}}(e),!e._base&&(e.extends&&(t=Ft(t,e.extends,n)),e.mixins))for(var r=0,i=e.mixins.length;r<i;r++)t=Ft(t,e.mixins[r],n);var a,o={};for(a in t)s(a);for(a in e)w(t,a)||s(a);function s(r){var i=Pt[r]||Nt;o[r]=i(t[r],e[r],n,r)}return o}function It(t,e,n,r){if("string"==typeof n){var i=t[e];if(w(i,n))return i[n];var a=$(n);if(w(i,a))return i[a];var o=O(a);return w(i,o)?i[o]:i[n]||i[a]||i[o]}}function zt(t,e,n,r){var i=e[t],a=!w(n,t),o=n[t],s=Ut(Boolean,i.type);if(s>-1)if(a&&!w(i,"default"))o=!1;else if(""===o||o===A(t)){var u=Ut(String,i.type);(u<0||s<u)&&(o=!0)}if(void 0===o){o=function(t,e,n){if(!w(e,"default"))return;var r=e.default;0;if(t&&t.$options.propsData&&void 0===t.$options.propsData[n]&&void 0!==t._props[n])return t._props[n];return"function"==typeof r&&"Function"!==Ht(e.type)?r.call(t):r}(r,i,t);var l=$t;Ot(!0),At(o),Ot(l)}return o}function Ht(t){var e=t&&t.toString().match(/^\s*function (\w+)/);return e?e[1]:""}function Bt(t,e){return Ht(t)===Ht(e)}function Ut(t,e){if(!Array.isArray(e))return Bt(e,t)?0:-1;for(var n=0,r=e.length;n<r;n++)if(Bt(e[n],t))return n;return-1}function qt(t,e,n){dt();try{if(e)for(var r=e;r=r.$parent;){var i=r.$options.errorCaptured;if(i)for(var a=0;a<i.length;a++)try{if(!1===i[a].call(r,t,e,n))return}catch(t){Kt(t,r,"errorCaptured hook")}}Kt(t,e,n)}finally{_t()}}function Gt(t,e,n,r,i){var a;try{(a=n?t.apply(e,n):t.call(e))&&!a._isVue&&f(a)&&!a._handled&&(a.catch((function(t){return qt(t,r,i+" (Promise/async)")})),a._handled=!0)}catch(t){qt(t,r,i)}return a}function Kt(t,e,n){if(z.errorHandler)try{return z.errorHandler.call(null,t,e,n)}catch(e){e!==t&&Wt(e,null,"config.errorHandler")}Wt(t,e,n)}function Wt(t,e,n){if(!W&&!V||"undefined"==typeof console)throw t;console.error(t)}var Vt,Xt=!1,Jt=[],Yt=!1;function Qt(){Yt=!1;var t=Jt.slice(0);Jt.length=0;for(var e=0;e<t.length;e++)t[e]()}if("undefined"!=typeof Promise&&st(Promise)){var Zt=Promise.resolve();Vt=function(){Zt.then(Qt),tt&&setTimeout(P)},Xt=!0}else if(Y||"undefined"==typeof MutationObserver||!st(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Vt=void 0!==n&&st(n)?function(){n(Qt)}:function(){setTimeout(Qt,0)};else{var te=1,ee=new MutationObserver(Qt),ne=document.createTextNode(String(te));ee.observe(ne,{characterData:!0}),Vt=function(){te=(te+1)%2,ne.data=String(te)},Xt=!0}function re(t,e){var n;if(Jt.push((function(){if(t)try{t.call(e)}catch(t){qt(t,e,"nextTick")}else n&&n(e)})),Yt||(Yt=!0,Vt()),!t&&"undefined"!=typeof Promise)return new Promise((function(t){n=t}))}var ie=new ut;function ae(t){!function t(e,n){var r,i,a=Array.isArray(e);if(!a&&!u(e)||Object.isFrozen(e)||e instanceof vt)return;if(e.__ob__){var o=e.__ob__.dep.id;if(n.has(o))return;n.add(o)}if(a)for(r=e.length;r--;)t(e[r],n);else for(i=Object.keys(e),r=i.length;r--;)t(e[i[r]],n)}(t,ie),ie.clear()}var oe=x((function(t){var e="&"===t.charAt(0),n="~"===(t=e?t.slice(1):t).charAt(0),r="!"===(t=n?t.slice(1):t).charAt(0);return{name:t=r?t.slice(1):t,once:n,capture:r,passive:e}}));function se(t,e){function n(){var t=arguments,r=n.fns;if(!Array.isArray(r))return Gt(r,null,arguments,e,"v-on handler");for(var i=r.slice(),a=0;a<i.length;a++)Gt(i[a],null,t,e,"v-on handler")}return n.fns=t,n}function ue(t,e,n,r,a,s){var u,l,c,p;for(u in t)l=t[u],c=e[u],p=oe(u),i(l)||(i(c)?(i(l.fns)&&(l=t[u]=se(l,s)),o(p.once)&&(l=t[u]=a(p.name,l,p.capture)),n(p.name,l,p.capture,p.passive,p.params)):l!==c&&(c.fns=l,t[u]=c));for(u in e)i(t[u])&&r((p=oe(u)).name,e[u],p.capture)}function le(t,e,n){var r;t instanceof vt&&(t=t.data.hook||(t.data.hook={}));var s=t[e];function u(){n.apply(this,arguments),b(r.fns,u)}i(s)?r=se([u]):a(s.fns)&&o(s.merged)?(r=s).fns.push(u):r=se([s,u]),r.merged=!0,t[e]=r}function ce(t,e,n,r,i){if(a(e)){if(w(e,n))return t[n]=e[n],i||delete e[n],!0;if(w(e,r))return t[n]=e[r],i||delete e[r],!0}return!1}function pe(t){return s(t)?[bt(t)]:Array.isArray(t)?function t(e,n){var r,u,l,c,p=[];for(r=0;r<e.length;r++)i(u=e[r])||"boolean"==typeof u||(l=p.length-1,c=p[l],Array.isArray(u)?u.length>0&&(he((u=t(u,(n||"")+"_"+r))[0])&&he(c)&&(p[l]=bt(c.text+u[0].text),u.shift()),p.push.apply(p,u)):s(u)?he(c)?p[l]=bt(c.text+u):""!==u&&p.push(bt(u)):he(u)&&he(c)?p[l]=bt(c.text+u.text):(o(e._isVList)&&a(u.tag)&&i(u.key)&&a(n)&&(u.key="__vlist"+n+"_"+r+"__"),p.push(u)));return p}(t):void 0}function he(t){return a(t)&&a(t.text)&&!1===t.isComment}function fe(t,e){if(t){for(var n=Object.create(null),r=lt?Reflect.ownKeys(t):Object.keys(t),i=0;i<r.length;i++){var a=r[i];if("__ob__"!==a){for(var o=t[a].from,s=e;s;){if(s._provided&&w(s._provided,o)){n[a]=s._provided[o];break}s=s.$parent}if(!s)if("default"in t[a]){var u=t[a].default;n[a]="function"==typeof u?u.call(e):u}else 0}}return n}}function de(t,e){if(!t||!t.length)return{};for(var n={},r=0,i=t.length;r<i;r++){var a=t[r],o=a.data;if(o&&o.attrs&&o.attrs.slot&&delete o.attrs.slot,a.context!==e&&a.fnContext!==e||!o||null==o.slot)(n.default||(n.default=[])).push(a);else{var s=o.slot,u=n[s]||(n[s]=[]);"template"===a.tag?u.push.apply(u,a.children||[]):u.push(a)}}for(var l in n)n[l].every(_e)&&delete n[l];return n}function _e(t){return t.isComment&&!t.asyncFactory||" "===t.text}function ve(t,e,n){var i,a=Object.keys(e).length>0,o=t?!!t.$stable:!a,s=t&&t.$key;if(t){if(t._normalized)return t._normalized;if(o&&n&&n!==r&&s===n.$key&&!a&&!n.$hasNormal)return n;for(var u in i={},t)t[u]&&"$"!==u[0]&&(i[u]=me(e,u,t[u]))}else i={};for(var l in e)l in i||(i[l]=ge(e,l));return t&&Object.isExtensible(t)&&(t._normalized=i),U(i,"$stable",o),U(i,"$key",s),U(i,"$hasNormal",a),i}function me(t,e,n){var r=function(){var t=arguments.length?n.apply(null,arguments):n({});return(t=t&&"object"==typeof t&&!Array.isArray(t)?[t]:pe(t))&&(0===t.length||1===t.length&&t[0].isComment)?void 0:t};return n.proxy&&Object.defineProperty(t,e,{get:r,enumerable:!0,configurable:!0}),r}function ge(t,e){return function(){return t[e]}}function be(t,e){var n,r,i,o,s;if(Array.isArray(t)||"string"==typeof t)for(n=new Array(t.length),r=0,i=t.length;r<i;r++)n[r]=e(t[r],r);else if("number"==typeof t)for(n=new Array(t),r=0;r<t;r++)n[r]=e(r+1,r);else if(u(t))if(lt&&t[Symbol.iterator]){n=[];for(var l=t[Symbol.iterator](),c=l.next();!c.done;)n.push(e(c.value,n.length)),c=l.next()}else for(o=Object.keys(t),n=new Array(o.length),r=0,i=o.length;r<i;r++)s=o[r],n[r]=e(t[s],s,r);return a(n)||(n=[]),n._isVList=!0,n}function ye(t,e,n,r){var i,a=this.$scopedSlots[t];a?(n=n||{},r&&(n=S(S({},r),n)),i=a(n)||e):i=this.$slots[t]||e;var o=n&&n.slot;return o?this.$createElement("template",{slot:o},i):i}function we(t){return It(this.$options,"filters",t)||D}function xe(t,e){return Array.isArray(t)?-1===t.indexOf(e):t!==e}function ke(t,e,n,r,i){var a=z.keyCodes[e]||n;return i&&r&&!z.keyCodes[e]?xe(i,r):a?xe(a,t):r?A(r)!==e:void 0}function $e(t,e,n,r,i){if(n)if(u(n)){var a;Array.isArray(n)&&(n=T(n));var o=function(o){if("class"===o||"style"===o||g(o))a=t;else{var s=t.attrs&&t.attrs.type;a=r||z.mustUseProp(e,s,o)?t.domProps||(t.domProps={}):t.attrs||(t.attrs={})}var u=$(o),l=A(o);u in a||l in a||(a[o]=n[o],i&&((t.on||(t.on={}))["update:"+o]=function(t){n[o]=t}))};for(var s in n)o(s)}else;return t}function Oe(t,e){var n=this._staticTrees||(this._staticTrees=[]),r=n[t];return r&&!e||Ae(r=n[t]=this.$options.staticRenderFns[t].call(this._renderProxy,null,this),"__static__"+t,!1),r}function Ee(t,e,n){return Ae(t,"__once__"+e+(n?"_"+n:""),!0),t}function Ae(t,e,n){if(Array.isArray(t))for(var r=0;r<t.length;r++)t[r]&&"string"!=typeof t[r]&&Ce(t[r],e+"_"+r,n);else Ce(t,e,n)}function Ce(t,e,n){t.isStatic=!0,t.key=e,t.isOnce=n}function je(t,e){if(e)if(c(e)){var n=t.on=t.on?S({},t.on):{};for(var r in e){var i=n[r],a=e[r];n[r]=i?[].concat(i,a):a}}else;return t}function Se(t,e,n,r){e=e||{$stable:!n};for(var i=0;i<t.length;i++){var a=t[i];Array.isArray(a)?Se(a,e,n):a&&(a.proxy&&(a.fn.proxy=!0),e[a.key]=a.fn)}return r&&(e.$key=r),e}function Te(t,e){for(var n=0;n<e.length;n+=2){var r=e[n];"string"==typeof r&&r&&(t[e[n]]=e[n+1])}return t}function Pe(t,e){return"string"==typeof t?e+t:t}function Re(t){t._o=Ee,t._n=_,t._s=d,t._l=be,t._t=ye,t._q=M,t._i=L,t._m=Oe,t._f=we,t._k=ke,t._b=$e,t._v=bt,t._e=gt,t._u=Se,t._g=je,t._d=Te,t._p=Pe}function De(t,e,n,i,a){var s,u=this,l=a.options;w(i,"_uid")?(s=Object.create(i))._original=i:(s=i,i=i._original);var c=o(l._compiled),p=!c;this.data=t,this.props=e,this.children=n,this.parent=i,this.listeners=t.on||r,this.injections=fe(l.inject,i),this.slots=function(){return u.$slots||ve(t.scopedSlots,u.$slots=de(n,i)),u.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return ve(t.scopedSlots,this.slots())}}),c&&(this.$options=l,this.$slots=this.slots(),this.$scopedSlots=ve(t.scopedSlots,this.$slots)),l._scopeId?this._c=function(t,e,n,r){var a=He(s,t,e,n,r,p);return a&&!Array.isArray(a)&&(a.fnScopeId=l._scopeId,a.fnContext=i),a}:this._c=function(t,e,n,r){return He(s,t,e,n,r,p)}}function Me(t,e,n,r,i){var a=yt(t);return a.fnContext=n,a.fnOptions=r,e.slot&&((a.data||(a.data={})).slot=e.slot),a}function Le(t,e){for(var n in e)t[$(n)]=e[n]}Re(De.prototype);var Ne={init:function(t,e){if(t.componentInstance&&!t.componentInstance._isDestroyed&&t.data.keepAlive){var n=t;Ne.prepatch(n,n)}else{(t.componentInstance=function(t,e){var n={_isComponent:!0,_parentVnode:t,parent:e},r=t.data.inlineTemplate;a(r)&&(n.render=r.render,n.staticRenderFns=r.staticRenderFns);return new t.componentOptions.Ctor(n)}(t,Ye)).$mount(e?t.elm:void 0,e)}},prepatch:function(t,e){var n=e.componentOptions;!function(t,e,n,i,a){0;var o=i.data.scopedSlots,s=t.$scopedSlots,u=!!(o&&!o.$stable||s!==r&&!s.$stable||o&&t.$scopedSlots.$key!==o.$key),l=!!(a||t.$options._renderChildren||u);t.$options._parentVnode=i,t.$vnode=i,t._vnode&&(t._vnode.parent=i);if(t.$options._renderChildren=a,t.$attrs=i.data.attrs||r,t.$listeners=n||r,e&&t.$options.props){Ot(!1);for(var c=t._props,p=t.$options._propKeys||[],h=0;h<p.length;h++){var f=p[h],d=t.$options.props;c[f]=zt(f,d,e,t)}Ot(!0),t.$options.propsData=e}n=n||r;var _=t.$options._parentListeners;t.$options._parentListeners=n,Je(t,n,_),l&&(t.$slots=de(a,i.context),t.$forceUpdate());0}(e.componentInstance=t.componentInstance,n.propsData,n.listeners,e,n.children)},insert:function(t){var e,n=t.context,r=t.componentInstance;r._isMounted||(r._isMounted=!0,en(r,"mounted")),t.data.keepAlive&&(n._isMounted?((e=r)._inactive=!1,rn.push(e)):tn(r,!0))},destroy:function(t){var e=t.componentInstance;e._isDestroyed||(t.data.keepAlive?function t(e,n){if(n&&(e._directInactive=!0,Ze(e)))return;if(!e._inactive){e._inactive=!0;for(var r=0;r<e.$children.length;r++)t(e.$children[r]);en(e,"deactivated")}}(e,!0):e.$destroy())}},Fe=Object.keys(Ne);function Ie(t,e,n,s,l){if(!i(t)){var c=n.$options._base;if(u(t)&&(t=c.extend(t)),"function"==typeof t){var p;if(i(t.cid)&&void 0===(t=function(t,e){if(o(t.error)&&a(t.errorComp))return t.errorComp;if(a(t.resolved))return t.resolved;var n=Ue;n&&a(t.owners)&&-1===t.owners.indexOf(n)&&t.owners.push(n);if(o(t.loading)&&a(t.loadingComp))return t.loadingComp;if(n&&!a(t.owners)){var r=t.owners=[n],s=!0,l=null,c=null;n.$on("hook:destroyed",(function(){return b(r,n)}));var p=function(t){for(var e=0,n=r.length;e<n;e++)r[e].$forceUpdate();t&&(r.length=0,null!==l&&(clearTimeout(l),l=null),null!==c&&(clearTimeout(c),c=null))},h=N((function(n){t.resolved=qe(n,e),s?r.length=0:p(!0)})),d=N((function(e){a(t.errorComp)&&(t.error=!0,p(!0))})),_=t(h,d);return u(_)&&(f(_)?i(t.resolved)&&_.then(h,d):f(_.component)&&(_.component.then(h,d),a(_.error)&&(t.errorComp=qe(_.error,e)),a(_.loading)&&(t.loadingComp=qe(_.loading,e),0===_.delay?t.loading=!0:l=setTimeout((function(){l=null,i(t.resolved)&&i(t.error)&&(t.loading=!0,p(!1))}),_.delay||200)),a(_.timeout)&&(c=setTimeout((function(){c=null,i(t.resolved)&&d(null)}),_.timeout)))),s=!1,t.loading?t.loadingComp:t.resolved}}(p=t,c)))return function(t,e,n,r,i){var a=gt();return a.asyncFactory=t,a.asyncMeta={data:e,context:n,children:r,tag:i},a}(p,e,n,s,l);e=e||{},$n(t),a(e.model)&&function(t,e){var n=t.model&&t.model.prop||"value",r=t.model&&t.model.event||"input";(e.attrs||(e.attrs={}))[n]=e.model.value;var i=e.on||(e.on={}),o=i[r],s=e.model.callback;a(o)?(Array.isArray(o)?-1===o.indexOf(s):o!==s)&&(i[r]=[s].concat(o)):i[r]=s}(t.options,e);var h=function(t,e,n){var r=e.options.props;if(!i(r)){var o={},s=t.attrs,u=t.props;if(a(s)||a(u))for(var l in r){var c=A(l);ce(o,u,l,c,!0)||ce(o,s,l,c,!1)}return o}}(e,t);if(o(t.options.functional))return function(t,e,n,i,o){var s=t.options,u={},l=s.props;if(a(l))for(var c in l)u[c]=zt(c,l,e||r);else a(n.attrs)&&Le(u,n.attrs),a(n.props)&&Le(u,n.props);var p=new De(n,u,o,i,t),h=s.render.call(null,p._c,p);if(h instanceof vt)return Me(h,n,p.parent,s,p);if(Array.isArray(h)){for(var f=pe(h)||[],d=new Array(f.length),_=0;_<f.length;_++)d[_]=Me(f[_],n,p.parent,s,p);return d}}(t,h,e,n,s);var d=e.on;if(e.on=e.nativeOn,o(t.options.abstract)){var _=e.slot;e={},_&&(e.slot=_)}!function(t){for(var e=t.hook||(t.hook={}),n=0;n<Fe.length;n++){var r=Fe[n],i=e[r],a=Ne[r];i===a||i&&i._merged||(e[r]=i?ze(a,i):a)}}(e);var v=t.options.name||l;return new vt("vue-component-"+t.cid+(v?"-"+v:""),e,void 0,void 0,void 0,n,{Ctor:t,propsData:h,listeners:d,tag:l,children:s},p)}}}function ze(t,e){var n=function(n,r){t(n,r),e(n,r)};return n._merged=!0,n}function He(t,e,n,r,l,c){return(Array.isArray(n)||s(n))&&(l=r,r=n,n=void 0),o(c)&&(l=2),function(t,e,n,r,s){if(a(n)&&a(n.__ob__))return gt();a(n)&&a(n.is)&&(e=n.is);if(!e)return gt();0;Array.isArray(r)&&"function"==typeof r[0]&&((n=n||{}).scopedSlots={default:r[0]},r.length=0);2===s?r=pe(r):1===s&&(r=function(t){for(var e=0;e<t.length;e++)if(Array.isArray(t[e]))return Array.prototype.concat.apply([],t);return t}(r));var l,c;if("string"==typeof e){var p;c=t.$vnode&&t.$vnode.ns||z.getTagNamespace(e),l=z.isReservedTag(e)?new vt(z.parsePlatformTagName(e),n,r,void 0,void 0,t):n&&n.pre||!a(p=It(t.$options,"components",e))?new vt(e,n,r,void 0,void 0,t):Ie(p,n,t,r,e)}else l=Ie(e,n,t,r);return Array.isArray(l)?l:a(l)?(a(c)&&function t(e,n,r){e.ns=n,"foreignObject"===e.tag&&(n=void 0,r=!0);if(a(e.children))for(var s=0,u=e.children.length;s<u;s++){var l=e.children[s];a(l.tag)&&(i(l.ns)||o(r)&&"svg"!==l.tag)&&t(l,n,r)}}(l,c),a(n)&&function(t){u(t.style)&&ae(t.style);u(t.class)&&ae(t.class)}(n),l):gt()}(t,e,n,r,l)}var Be,Ue=null;function qe(t,e){return(t.__esModule||lt&&"Module"===t[Symbol.toStringTag])&&(t=t.default),u(t)?e.extend(t):t}function Ge(t){return t.isComment&&t.asyncFactory}function Ke(t){if(Array.isArray(t))for(var e=0;e<t.length;e++){var n=t[e];if(a(n)&&(a(n.componentOptions)||Ge(n)))return n}}function We(t,e){Be.$on(t,e)}function Ve(t,e){Be.$off(t,e)}function Xe(t,e){var n=Be;return function r(){var i=e.apply(null,arguments);null!==i&&n.$off(t,r)}}function Je(t,e,n){Be=t,ue(e,n||{},We,Ve,Xe,t),Be=void 0}var Ye=null;function Qe(t){var e=Ye;return Ye=t,function(){Ye=e}}function Ze(t){for(;t&&(t=t.$parent);)if(t._inactive)return!0;return!1}function tn(t,e){if(e){if(t._directInactive=!1,Ze(t))return}else if(t._directInactive)return;if(t._inactive||null===t._inactive){t._inactive=!1;for(var n=0;n<t.$children.length;n++)tn(t.$children[n]);en(t,"activated")}}function en(t,e){dt();var n=t.$options[e],r=e+" hook";if(n)for(var i=0,a=n.length;i<a;i++)Gt(n[i],t,null,t,r);t._hasHookEvent&&t.$emit("hook:"+e),_t()}var nn=[],rn=[],an={},on=!1,sn=!1,un=0;var ln=0,cn=Date.now;if(W&&!Y){var pn=window.performance;pn&&"function"==typeof pn.now&&cn()>document.createEvent("Event").timeStamp&&(cn=function(){return pn.now()})}function hn(){var t,e;for(ln=cn(),sn=!0,nn.sort((function(t,e){return t.id-e.id})),un=0;un<nn.length;un++)(t=nn[un]).before&&t.before(),e=t.id,an[e]=null,t.run();var n=rn.slice(),r=nn.slice();un=nn.length=rn.length=0,an={},on=sn=!1,function(t){for(var e=0;e<t.length;e++)t[e]._inactive=!0,tn(t[e],!0)}(n),function(t){var e=t.length;for(;e--;){var n=t[e],r=n.vm;r._watcher===n&&r._isMounted&&!r._isDestroyed&&en(r,"updated")}}(r),ot&&z.devtools&&ot.emit("flush")}var fn=0,dn=function(t,e,n,r,i){this.vm=t,i&&(t._watcher=this),t._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++fn,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new ut,this.newDepIds=new ut,this.expression="","function"==typeof e?this.getter=e:(this.getter=function(t){if(!q.test(t)){var e=t.split(".");return function(t){for(var n=0;n<e.length;n++){if(!t)return;t=t[e[n]]}return t}}}(e),this.getter||(this.getter=P)),this.value=this.lazy?void 0:this.get()};dn.prototype.get=function(){var t;dt(this);var e=this.vm;try{t=this.getter.call(e,e)}catch(t){if(!this.user)throw t;qt(t,e,'getter for watcher "'+this.expression+'"')}finally{this.deep&&ae(t),_t(),this.cleanupDeps()}return t},dn.prototype.addDep=function(t){var e=t.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(t),this.depIds.has(e)||t.addSub(this))},dn.prototype.cleanupDeps=function(){for(var t=this.deps.length;t--;){var e=this.deps[t];this.newDepIds.has(e.id)||e.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},dn.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(t){var e=t.id;if(null==an[e]){if(an[e]=!0,sn){for(var n=nn.length-1;n>un&&nn[n].id>t.id;)n--;nn.splice(n+1,0,t)}else nn.push(t);on||(on=!0,re(hn))}}(this)},dn.prototype.run=function(){if(this.active){var t=this.get();if(t!==this.value||u(t)||this.deep){var e=this.value;if(this.value=t,this.user)try{this.cb.call(this.vm,t,e)}catch(t){qt(t,this.vm,'callback for watcher "'+this.expression+'"')}else this.cb.call(this.vm,t,e)}}},dn.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},dn.prototype.depend=function(){for(var t=this.deps.length;t--;)this.deps[t].depend()},dn.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||b(this.vm._watchers,this);for(var t=this.deps.length;t--;)this.deps[t].removeSub(this);this.active=!1}};var _n={enumerable:!0,configurable:!0,get:P,set:P};function vn(t,e,n){_n.get=function(){return this[e][n]},_n.set=function(t){this[e][n]=t},Object.defineProperty(t,n,_n)}function mn(t){t._watchers=[];var e=t.$options;e.props&&function(t,e){var n=t.$options.propsData||{},r=t._props={},i=t.$options._propKeys=[];t.$parent&&Ot(!1);var a=function(a){i.push(a);var o=zt(a,e,n,t);Ct(r,a,o),a in t||vn(t,"_props",a)};for(var o in e)a(o);Ot(!0)}(t,e.props),e.methods&&function(t,e){t.$options.props;for(var n in e)t[n]="function"!=typeof e[n]?P:C(e[n],t)}(t,e.methods),e.data?function(t){var e=t.$options.data;c(e=t._data="function"==typeof e?function(t,e){dt();try{return t.call(e,e)}catch(t){return qt(t,e,"data()"),{}}finally{_t()}}(e,t):e||{})||(e={});var n=Object.keys(e),r=t.$options.props,i=(t.$options.methods,n.length);for(;i--;){var a=n[i];0,r&&w(r,a)||B(a)||vn(t,"_data",a)}At(e,!0)}(t):At(t._data={},!0),e.computed&&function(t,e){var n=t._computedWatchers=Object.create(null),r=at();for(var i in e){var a=e[i],o="function"==typeof a?a:a.get;0,r||(n[i]=new dn(t,o||P,P,gn)),i in t||bn(t,i,a)}}(t,e.computed),e.watch&&e.watch!==nt&&function(t,e){for(var n in e){var r=e[n];if(Array.isArray(r))for(var i=0;i<r.length;i++)xn(t,n,r[i]);else xn(t,n,r)}}(t,e.watch)}var gn={lazy:!0};function bn(t,e,n){var r=!at();"function"==typeof n?(_n.get=r?yn(e):wn(n),_n.set=P):(_n.get=n.get?r&&!1!==n.cache?yn(e):wn(n.get):P,_n.set=n.set||P),Object.defineProperty(t,e,_n)}function yn(t){return function(){var e=this._computedWatchers&&this._computedWatchers[t];if(e)return e.dirty&&e.evaluate(),ht.target&&e.depend(),e.value}}function wn(t){return function(){return t.call(this,this)}}function xn(t,e,n,r){return c(n)&&(r=n,n=n.handler),"string"==typeof n&&(n=t[n]),t.$watch(e,n,r)}var kn=0;function $n(t){var e=t.options;if(t.super){var n=$n(t.super);if(n!==t.superOptions){t.superOptions=n;var r=function(t){var e,n=t.options,r=t.sealedOptions;for(var i in n)n[i]!==r[i]&&(e||(e={}),e[i]=n[i]);return e}(t);r&&S(t.extendOptions,r),(e=t.options=Ft(n,t.extendOptions)).name&&(e.components[e.name]=t)}}return e}function On(t){this._init(t)}function En(t){t.cid=0;var e=1;t.extend=function(t){t=t||{};var n=this,r=n.cid,i=t._Ctor||(t._Ctor={});if(i[r])return i[r];var a=t.name||n.options.name;var o=function(t){this._init(t)};return(o.prototype=Object.create(n.prototype)).constructor=o,o.cid=e++,o.options=Ft(n.options,t),o.super=n,o.options.props&&function(t){var e=t.options.props;for(var n in e)vn(t.prototype,"_props",n)}(o),o.options.computed&&function(t){var e=t.options.computed;for(var n in e)bn(t.prototype,n,e[n])}(o),o.extend=n.extend,o.mixin=n.mixin,o.use=n.use,F.forEach((function(t){o[t]=n[t]})),a&&(o.options.components[a]=o),o.superOptions=n.options,o.extendOptions=t,o.sealedOptions=S({},o.options),i[r]=o,o}}function An(t){return t&&(t.Ctor.options.name||t.tag)}function Cn(t,e){return Array.isArray(t)?t.indexOf(e)>-1:"string"==typeof t?t.split(",").indexOf(e)>-1:!!p(t)&&t.test(e)}function jn(t,e){var n=t.cache,r=t.keys,i=t._vnode;for(var a in n){var o=n[a];if(o){var s=An(o.componentOptions);s&&!e(s)&&Sn(n,a,r,i)}}}function Sn(t,e,n,r){var i=t[e];!i||r&&i.tag===r.tag||i.componentInstance.$destroy(),t[e]=null,b(n,e)}!function(t){t.prototype._init=function(t){var e=this;e._uid=kn++,e._isVue=!0,t&&t._isComponent?function(t,e){var n=t.$options=Object.create(t.constructor.options),r=e._parentVnode;n.parent=e.parent,n._parentVnode=r;var i=r.componentOptions;n.propsData=i.propsData,n._parentListeners=i.listeners,n._renderChildren=i.children,n._componentTag=i.tag,e.render&&(n.render=e.render,n.staticRenderFns=e.staticRenderFns)}(e,t):e.$options=Ft($n(e.constructor),t||{},e),e._renderProxy=e,e._self=e,function(t){var e=t.$options,n=e.parent;if(n&&!e.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(t)}t.$parent=n,t.$root=n?n.$root:t,t.$children=[],t.$refs={},t._watcher=null,t._inactive=null,t._directInactive=!1,t._isMounted=!1,t._isDestroyed=!1,t._isBeingDestroyed=!1}(e),function(t){t._events=Object.create(null),t._hasHookEvent=!1;var e=t.$options._parentListeners;e&&Je(t,e)}(e),function(t){t._vnode=null,t._staticTrees=null;var e=t.$options,n=t.$vnode=e._parentVnode,i=n&&n.context;t.$slots=de(e._renderChildren,i),t.$scopedSlots=r,t._c=function(e,n,r,i){return He(t,e,n,r,i,!1)},t.$createElement=function(e,n,r,i){return He(t,e,n,r,i,!0)};var a=n&&n.data;Ct(t,"$attrs",a&&a.attrs||r,null,!0),Ct(t,"$listeners",e._parentListeners||r,null,!0)}(e),en(e,"beforeCreate"),function(t){var e=fe(t.$options.inject,t);e&&(Ot(!1),Object.keys(e).forEach((function(n){Ct(t,n,e[n])})),Ot(!0))}(e),mn(e),function(t){var e=t.$options.provide;e&&(t._provided="function"==typeof e?e.call(t):e)}(e),en(e,"created"),e.$options.el&&e.$mount(e.$options.el)}}(On),function(t){var e={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(t.prototype,"$data",e),Object.defineProperty(t.prototype,"$props",n),t.prototype.$set=jt,t.prototype.$delete=St,t.prototype.$watch=function(t,e,n){if(c(e))return xn(this,t,e,n);(n=n||{}).user=!0;var r=new dn(this,t,e,n);if(n.immediate)try{e.call(this,r.value)}catch(t){qt(t,this,'callback for immediate watcher "'+r.expression+'"')}return function(){r.teardown()}}}(On),function(t){var e=/^hook:/;t.prototype.$on=function(t,n){var r=this;if(Array.isArray(t))for(var i=0,a=t.length;i<a;i++)r.$on(t[i],n);else(r._events[t]||(r._events[t]=[])).push(n),e.test(t)&&(r._hasHookEvent=!0);return r},t.prototype.$once=function(t,e){var n=this;function r(){n.$off(t,r),e.apply(n,arguments)}return r.fn=e,n.$on(t,r),n},t.prototype.$off=function(t,e){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(t)){for(var r=0,i=t.length;r<i;r++)n.$off(t[r],e);return n}var a,o=n._events[t];if(!o)return n;if(!e)return n._events[t]=null,n;for(var s=o.length;s--;)if((a=o[s])===e||a.fn===e){o.splice(s,1);break}return n},t.prototype.$emit=function(t){var e=this,n=e._events[t];if(n){n=n.length>1?j(n):n;for(var r=j(arguments,1),i='event handler for "'+t+'"',a=0,o=n.length;a<o;a++)Gt(n[a],e,r,e,i)}return e}}(On),function(t){t.prototype._update=function(t,e){var n=this,r=n.$el,i=n._vnode,a=Qe(n);n._vnode=t,n.$el=i?n.__patch__(i,t):n.__patch__(n.$el,t,e,!1),a(),r&&(r.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},t.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},t.prototype.$destroy=function(){var t=this;if(!t._isBeingDestroyed){en(t,"beforeDestroy"),t._isBeingDestroyed=!0;var e=t.$parent;!e||e._isBeingDestroyed||t.$options.abstract||b(e.$children,t),t._watcher&&t._watcher.teardown();for(var n=t._watchers.length;n--;)t._watchers[n].teardown();t._data.__ob__&&t._data.__ob__.vmCount--,t._isDestroyed=!0,t.__patch__(t._vnode,null),en(t,"destroyed"),t.$off(),t.$el&&(t.$el.__vue__=null),t.$vnode&&(t.$vnode.parent=null)}}}(On),function(t){Re(t.prototype),t.prototype.$nextTick=function(t){return re(t,this)},t.prototype._render=function(){var t,e=this,n=e.$options,r=n.render,i=n._parentVnode;i&&(e.$scopedSlots=ve(i.data.scopedSlots,e.$slots,e.$scopedSlots)),e.$vnode=i;try{Ue=e,t=r.call(e._renderProxy,e.$createElement)}catch(n){qt(n,e,"render"),t=e._vnode}finally{Ue=null}return Array.isArray(t)&&1===t.length&&(t=t[0]),t instanceof vt||(t=gt()),t.parent=i,t}}(On);var Tn=[String,RegExp,Array],Pn={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Tn,exclude:Tn,max:[String,Number]},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var t in this.cache)Sn(this.cache,t,this.keys)},mounted:function(){var t=this;this.$watch("include",(function(e){jn(t,(function(t){return Cn(e,t)}))})),this.$watch("exclude",(function(e){jn(t,(function(t){return!Cn(e,t)}))}))},render:function(){var t=this.$slots.default,e=Ke(t),n=e&&e.componentOptions;if(n){var r=An(n),i=this.include,a=this.exclude;if(i&&(!r||!Cn(i,r))||a&&r&&Cn(a,r))return e;var o=this.cache,s=this.keys,u=null==e.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):e.key;o[u]?(e.componentInstance=o[u].componentInstance,b(s,u),s.push(u)):(o[u]=e,s.push(u),this.max&&s.length>parseInt(this.max)&&Sn(o,s[0],s,this._vnode)),e.data.keepAlive=!0}return e||t&&t[0]}}};!function(t){var e={get:function(){return z}};Object.defineProperty(t,"config",e),t.util={warn:ct,extend:S,mergeOptions:Ft,defineReactive:Ct},t.set=jt,t.delete=St,t.nextTick=re,t.observable=function(t){return At(t),t},t.options=Object.create(null),F.forEach((function(e){t.options[e+"s"]=Object.create(null)})),t.options._base=t,S(t.options.components,Pn),function(t){t.use=function(t){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(t)>-1)return this;var n=j(arguments,1);return n.unshift(this),"function"==typeof t.install?t.install.apply(t,n):"function"==typeof t&&t.apply(null,n),e.push(t),this}}(t),function(t){t.mixin=function(t){return this.options=Ft(this.options,t),this}}(t),En(t),function(t){F.forEach((function(e){t[e]=function(t,n){return n?("component"===e&&c(n)&&(n.name=n.name||t,n=this.options._base.extend(n)),"directive"===e&&"function"==typeof n&&(n={bind:n,update:n}),this.options[e+"s"][t]=n,n):this.options[e+"s"][t]}}))}(t)}(On),Object.defineProperty(On.prototype,"$isServer",{get:at}),Object.defineProperty(On.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(On,"FunctionalRenderContext",{value:De}),On.version="2.6.11";var Rn=v("style,class"),Dn=v("input,textarea,option,select,progress"),Mn=function(t,e,n){return"value"===n&&Dn(t)&&"button"!==e||"selected"===n&&"option"===t||"checked"===n&&"input"===t||"muted"===n&&"video"===t},Ln=v("contenteditable,draggable,spellcheck"),Nn=v("events,caret,typing,plaintext-only"),Fn=v("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"),In="http://www.w3.org/1999/xlink",zn=function(t){return":"===t.charAt(5)&&"xlink"===t.slice(0,5)},Hn=function(t){return zn(t)?t.slice(6,t.length):""},Bn=function(t){return null==t||!1===t};function Un(t){for(var e=t.data,n=t,r=t;a(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(e=qn(r.data,e));for(;a(n=n.parent);)n&&n.data&&(e=qn(e,n.data));return function(t,e){if(a(t)||a(e))return Gn(t,Kn(e));return""}(e.staticClass,e.class)}function qn(t,e){return{staticClass:Gn(t.staticClass,e.staticClass),class:a(t.class)?[t.class,e.class]:e.class}}function Gn(t,e){return t?e?t+" "+e:t:e||""}function Kn(t){return Array.isArray(t)?function(t){for(var e,n="",r=0,i=t.length;r<i;r++)a(e=Kn(t[r]))&&""!==e&&(n&&(n+=" "),n+=e);return n}(t):u(t)?function(t){var e="";for(var n in t)t[n]&&(e&&(e+=" "),e+=n);return e}(t):"string"==typeof t?t:""}var Wn={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Vn=v("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Xn=v("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Jn=function(t){return Vn(t)||Xn(t)};function Yn(t){return Xn(t)?"svg":"math"===t?"math":void 0}var Qn=Object.create(null);var Zn=v("text,number,password,search,email,tel,url");function tr(t){if("string"==typeof t){var e=document.querySelector(t);return e||document.createElement("div")}return t}var er=Object.freeze({createElement:function(t,e){var n=document.createElement(t);return"select"!==t||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n},createElementNS:function(t,e){return document.createElementNS(Wn[t],e)},createTextNode:function(t){return document.createTextNode(t)},createComment:function(t){return document.createComment(t)},insertBefore:function(t,e,n){t.insertBefore(e,n)},removeChild:function(t,e){t.removeChild(e)},appendChild:function(t,e){t.appendChild(e)},parentNode:function(t){return t.parentNode},nextSibling:function(t){return t.nextSibling},tagName:function(t){return t.tagName},setTextContent:function(t,e){t.textContent=e},setStyleScope:function(t,e){t.setAttribute(e,"")}}),nr={create:function(t,e){rr(e)},update:function(t,e){t.data.ref!==e.data.ref&&(rr(t,!0),rr(e))},destroy:function(t){rr(t,!0)}};function rr(t,e){var n=t.data.ref;if(a(n)){var r=t.context,i=t.componentInstance||t.elm,o=r.$refs;e?Array.isArray(o[n])?b(o[n],i):o[n]===i&&(o[n]=void 0):t.data.refInFor?Array.isArray(o[n])?o[n].indexOf(i)<0&&o[n].push(i):o[n]=[i]:o[n]=i}}var ir=new vt("",{},[]),ar=["create","activate","update","remove","destroy"];function or(t,e){return t.key===e.key&&(t.tag===e.tag&&t.isComment===e.isComment&&a(t.data)===a(e.data)&&function(t,e){if("input"!==t.tag)return!0;var n,r=a(n=t.data)&&a(n=n.attrs)&&n.type,i=a(n=e.data)&&a(n=n.attrs)&&n.type;return r===i||Zn(r)&&Zn(i)}(t,e)||o(t.isAsyncPlaceholder)&&t.asyncFactory===e.asyncFactory&&i(e.asyncFactory.error))}function sr(t,e,n){var r,i,o={};for(r=e;r<=n;++r)a(i=t[r].key)&&(o[i]=r);return o}var ur={create:lr,update:lr,destroy:function(t){lr(t,ir)}};function lr(t,e){(t.data.directives||e.data.directives)&&function(t,e){var n,r,i,a=t===ir,o=e===ir,s=pr(t.data.directives,t.context),u=pr(e.data.directives,e.context),l=[],c=[];for(n in u)r=s[n],i=u[n],r?(i.oldValue=r.value,i.oldArg=r.arg,fr(i,"update",e,t),i.def&&i.def.componentUpdated&&c.push(i)):(fr(i,"bind",e,t),i.def&&i.def.inserted&&l.push(i));if(l.length){var p=function(){for(var n=0;n<l.length;n++)fr(l[n],"inserted",e,t)};a?le(e,"insert",p):p()}c.length&&le(e,"postpatch",(function(){for(var n=0;n<c.length;n++)fr(c[n],"componentUpdated",e,t)}));if(!a)for(n in s)u[n]||fr(s[n],"unbind",t,t,o)}(t,e)}var cr=Object.create(null);function pr(t,e){var n,r,i=Object.create(null);if(!t)return i;for(n=0;n<t.length;n++)(r=t[n]).modifiers||(r.modifiers=cr),i[hr(r)]=r,r.def=It(e.$options,"directives",r.name);return i}function hr(t){return t.rawName||t.name+"."+Object.keys(t.modifiers||{}).join(".")}function fr(t,e,n,r,i){var a=t.def&&t.def[e];if(a)try{a(n.elm,t,n,r,i)}catch(r){qt(r,n.context,"directive "+t.name+" "+e+" hook")}}var dr=[nr,ur];function _r(t,e){var n=e.componentOptions;if(!(a(n)&&!1===n.Ctor.options.inheritAttrs||i(t.data.attrs)&&i(e.data.attrs))){var r,o,s=e.elm,u=t.data.attrs||{},l=e.data.attrs||{};for(r in a(l.__ob__)&&(l=e.data.attrs=S({},l)),l)o=l[r],u[r]!==o&&vr(s,r,o);for(r in(Y||Z)&&l.value!==u.value&&vr(s,"value",l.value),u)i(l[r])&&(zn(r)?s.removeAttributeNS(In,Hn(r)):Ln(r)||s.removeAttribute(r))}}function vr(t,e,n){t.tagName.indexOf("-")>-1?mr(t,e,n):Fn(e)?Bn(n)?t.removeAttribute(e):(n="allowfullscreen"===e&&"EMBED"===t.tagName?"true":e,t.setAttribute(e,n)):Ln(e)?t.setAttribute(e,function(t,e){return Bn(e)||"false"===e?"false":"contenteditable"===t&&Nn(e)?e:"true"}(e,n)):zn(e)?Bn(n)?t.removeAttributeNS(In,Hn(e)):t.setAttributeNS(In,e,n):mr(t,e,n)}function mr(t,e,n){if(Bn(n))t.removeAttribute(e);else{if(Y&&!Q&&"TEXTAREA"===t.tagName&&"placeholder"===e&&""!==n&&!t.__ieph){var r=function(e){e.stopImmediatePropagation(),t.removeEventListener("input",r)};t.addEventListener("input",r),t.__ieph=!0}t.setAttribute(e,n)}}var gr={create:_r,update:_r};function br(t,e){var n=e.elm,r=e.data,o=t.data;if(!(i(r.staticClass)&&i(r.class)&&(i(o)||i(o.staticClass)&&i(o.class)))){var s=Un(e),u=n._transitionClasses;a(u)&&(s=Gn(s,Kn(u))),s!==n._prevClass&&(n.setAttribute("class",s),n._prevClass=s)}}var yr,wr,xr,kr,$r,Or,Er={create:br,update:br},Ar=/[\w).+\-_$\]]/;function Cr(t){var e,n,r,i,a,o=!1,s=!1,u=!1,l=!1,c=0,p=0,h=0,f=0;for(r=0;r<t.length;r++)if(n=e,e=t.charCodeAt(r),o)39===e&&92!==n&&(o=!1);else if(s)34===e&&92!==n&&(s=!1);else if(u)96===e&&92!==n&&(u=!1);else if(l)47===e&&92!==n&&(l=!1);else if(124!==e||124===t.charCodeAt(r+1)||124===t.charCodeAt(r-1)||c||p||h){switch(e){case 34:s=!0;break;case 39:o=!0;break;case 96:u=!0;break;case 40:h++;break;case 41:h--;break;case 91:p++;break;case 93:p--;break;case 123:c++;break;case 125:c--}if(47===e){for(var d=r-1,_=void 0;d>=0&&" "===(_=t.charAt(d));d--);_&&Ar.test(_)||(l=!0)}}else void 0===i?(f=r+1,i=t.slice(0,r).trim()):v();function v(){(a||(a=[])).push(t.slice(f,r).trim()),f=r+1}if(void 0===i?i=t.slice(0,r).trim():0!==f&&v(),a)for(r=0;r<a.length;r++)i=jr(i,a[r]);return i}function jr(t,e){var n=e.indexOf("(");if(n<0)return'_f("'+e+'")('+t+")";var r=e.slice(0,n),i=e.slice(n+1);return'_f("'+r+'")('+t+(")"!==i?","+i:i)}function Sr(t,e){console.error("[Vue compiler]: "+t)}function Tr(t,e){return t?t.map((function(t){return t[e]})).filter((function(t){return t})):[]}function Pr(t,e,n,r,i){(t.props||(t.props=[])).push(Hr({name:e,value:n,dynamic:i},r)),t.plain=!1}function Rr(t,e,n,r,i){(i?t.dynamicAttrs||(t.dynamicAttrs=[]):t.attrs||(t.attrs=[])).push(Hr({name:e,value:n,dynamic:i},r)),t.plain=!1}function Dr(t,e,n,r){t.attrsMap[e]=n,t.attrsList.push(Hr({name:e,value:n},r))}function Mr(t,e,n,r,i,a,o,s){(t.directives||(t.directives=[])).push(Hr({name:e,rawName:n,value:r,arg:i,isDynamicArg:a,modifiers:o},s)),t.plain=!1}function Lr(t,e,n){return n?"_p("+e+',"'+t+'")':t+e}function Nr(t,e,n,i,a,o,s,u){var l;(i=i||r).right?u?e="("+e+")==='click'?'contextmenu':("+e+")":"click"===e&&(e="contextmenu",delete i.right):i.middle&&(u?e="("+e+")==='click'?'mouseup':("+e+")":"click"===e&&(e="mouseup")),i.capture&&(delete i.capture,e=Lr("!",e,u)),i.once&&(delete i.once,e=Lr("~",e,u)),i.passive&&(delete i.passive,e=Lr("&",e,u)),i.native?(delete i.native,l=t.nativeEvents||(t.nativeEvents={})):l=t.events||(t.events={});var c=Hr({value:n.trim(),dynamic:u},s);i!==r&&(c.modifiers=i);var p=l[e];Array.isArray(p)?a?p.unshift(c):p.push(c):l[e]=p?a?[c,p]:[p,c]:c,t.plain=!1}function Fr(t,e,n){var r=Ir(t,":"+e)||Ir(t,"v-bind:"+e);if(null!=r)return Cr(r);if(!1!==n){var i=Ir(t,e);if(null!=i)return JSON.stringify(i)}}function Ir(t,e,n){var r;if(null!=(r=t.attrsMap[e]))for(var i=t.attrsList,a=0,o=i.length;a<o;a++)if(i[a].name===e){i.splice(a,1);break}return n&&delete t.attrsMap[e],r}function zr(t,e){for(var n=t.attrsList,r=0,i=n.length;r<i;r++){var a=n[r];if(e.test(a.name))return n.splice(r,1),a}}function Hr(t,e){return e&&(null!=e.start&&(t.start=e.start),null!=e.end&&(t.end=e.end)),t}function Br(t,e,n){var r=n||{},i=r.number,a="$$v";r.trim&&(a="(typeof $$v === 'string'? $$v.trim(): $$v)"),i&&(a="_n("+a+")");var o=Ur(e,a);t.model={value:"("+e+")",expression:JSON.stringify(e),callback:"function ($$v) {"+o+"}"}}function Ur(t,e){var n=function(t){if(t=t.trim(),yr=t.length,t.indexOf("[")<0||t.lastIndexOf("]")<yr-1)return(kr=t.lastIndexOf("."))>-1?{exp:t.slice(0,kr),key:'"'+t.slice(kr+1)+'"'}:{exp:t,key:null};wr=t,kr=$r=Or=0;for(;!Gr();)Kr(xr=qr())?Vr(xr):91===xr&&Wr(xr);return{exp:t.slice(0,$r),key:t.slice($r+1,Or)}}(t);return null===n.key?t+"="+e:"$set("+n.exp+", "+n.key+", "+e+")"}function qr(){return wr.charCodeAt(++kr)}function Gr(){return kr>=yr}function Kr(t){return 34===t||39===t}function Wr(t){var e=1;for($r=kr;!Gr();)if(Kr(t=qr()))Vr(t);else if(91===t&&e++,93===t&&e--,0===e){Or=kr;break}}function Vr(t){for(var e=t;!Gr()&&(t=qr())!==e;);}var Xr;function Jr(t,e,n){var r=Xr;return function i(){var a=e.apply(null,arguments);null!==a&&Zr(t,i,n,r)}}var Yr=Xt&&!(et&&Number(et[1])<=53);function Qr(t,e,n,r){if(Yr){var i=ln,a=e;e=a._wrapper=function(t){if(t.target===t.currentTarget||t.timeStamp>=i||t.timeStamp<=0||t.target.ownerDocument!==document)return a.apply(this,arguments)}}Xr.addEventListener(t,e,rt?{capture:n,passive:r}:n)}function Zr(t,e,n,r){(r||Xr).removeEventListener(t,e._wrapper||e,n)}function ti(t,e){if(!i(t.data.on)||!i(e.data.on)){var n=e.data.on||{},r=t.data.on||{};Xr=e.elm,function(t){if(a(t.__r)){var e=Y?"change":"input";t[e]=[].concat(t.__r,t[e]||[]),delete t.__r}a(t.__c)&&(t.change=[].concat(t.__c,t.change||[]),delete t.__c)}(n),ue(n,r,Qr,Zr,Jr,e.context),Xr=void 0}}var ei,ni={create:ti,update:ti};function ri(t,e){if(!i(t.data.domProps)||!i(e.data.domProps)){var n,r,o=e.elm,s=t.data.domProps||{},u=e.data.domProps||{};for(n in a(u.__ob__)&&(u=e.data.domProps=S({},u)),s)n in u||(o[n]="");for(n in u){if(r=u[n],"textContent"===n||"innerHTML"===n){if(e.children&&(e.children.length=0),r===s[n])continue;1===o.childNodes.length&&o.removeChild(o.childNodes[0])}if("value"===n&&"PROGRESS"!==o.tagName){o._value=r;var l=i(r)?"":String(r);ii(o,l)&&(o.value=l)}else if("innerHTML"===n&&Xn(o.tagName)&&i(o.innerHTML)){(ei=ei||document.createElement("div")).innerHTML="<svg>"+r+"</svg>";for(var c=ei.firstChild;o.firstChild;)o.removeChild(o.firstChild);for(;c.firstChild;)o.appendChild(c.firstChild)}else if(r!==s[n])try{o[n]=r}catch(t){}}}}function ii(t,e){return!t.composing&&("OPTION"===t.tagName||function(t,e){var n=!0;try{n=document.activeElement!==t}catch(t){}return n&&t.value!==e}(t,e)||function(t,e){var n=t.value,r=t._vModifiers;if(a(r)){if(r.number)return _(n)!==_(e);if(r.trim)return n.trim()!==e.trim()}return n!==e}(t,e))}var ai={create:ri,update:ri},oi=x((function(t){var e={},n=/:(.+)/;return t.split(/;(?![^(]*\))/g).forEach((function(t){if(t){var r=t.split(n);r.length>1&&(e[r[0].trim()]=r[1].trim())}})),e}));function si(t){var e=ui(t.style);return t.staticStyle?S(t.staticStyle,e):e}function ui(t){return Array.isArray(t)?T(t):"string"==typeof t?oi(t):t}var li,ci=/^--/,pi=/\s*!important$/,hi=function(t,e,n){if(ci.test(e))t.style.setProperty(e,n);else if(pi.test(n))t.style.setProperty(A(e),n.replace(pi,""),"important");else{var r=di(e);if(Array.isArray(n))for(var i=0,a=n.length;i<a;i++)t.style[r]=n[i];else t.style[r]=n}},fi=["Webkit","Moz","ms"],di=x((function(t){if(li=li||document.createElement("div").style,"filter"!==(t=$(t))&&t in li)return t;for(var e=t.charAt(0).toUpperCase()+t.slice(1),n=0;n<fi.length;n++){var r=fi[n]+e;if(r in li)return r}}));function _i(t,e){var n=e.data,r=t.data;if(!(i(n.staticStyle)&&i(n.style)&&i(r.staticStyle)&&i(r.style))){var o,s,u=e.elm,l=r.staticStyle,c=r.normalizedStyle||r.style||{},p=l||c,h=ui(e.data.style)||{};e.data.normalizedStyle=a(h.__ob__)?S({},h):h;var f=function(t,e){var n,r={};if(e)for(var i=t;i.componentInstance;)(i=i.componentInstance._vnode)&&i.data&&(n=si(i.data))&&S(r,n);(n=si(t.data))&&S(r,n);for(var a=t;a=a.parent;)a.data&&(n=si(a.data))&&S(r,n);return r}(e,!0);for(s in p)i(f[s])&&hi(u,s,"");for(s in f)(o=f[s])!==p[s]&&hi(u,s,null==o?"":o)}}var vi={create:_i,update:_i},mi=/\s+/;function gi(t,e){if(e&&(e=e.trim()))if(t.classList)e.indexOf(" ")>-1?e.split(mi).forEach((function(e){return t.classList.add(e)})):t.classList.add(e);else{var n=" "+(t.getAttribute("class")||"")+" ";n.indexOf(" "+e+" ")<0&&t.setAttribute("class",(n+e).trim())}}function bi(t,e){if(e&&(e=e.trim()))if(t.classList)e.indexOf(" ")>-1?e.split(mi).forEach((function(e){return t.classList.remove(e)})):t.classList.remove(e),t.classList.length||t.removeAttribute("class");else{for(var n=" "+(t.getAttribute("class")||"")+" ",r=" "+e+" ";n.indexOf(r)>=0;)n=n.replace(r," ");(n=n.trim())?t.setAttribute("class",n):t.removeAttribute("class")}}function yi(t){if(t){if("object"==typeof t){var e={};return!1!==t.css&&S(e,wi(t.name||"v")),S(e,t),e}return"string"==typeof t?wi(t):void 0}}var wi=x((function(t){return{enterClass:t+"-enter",enterToClass:t+"-enter-to",enterActiveClass:t+"-enter-active",leaveClass:t+"-leave",leaveToClass:t+"-leave-to",leaveActiveClass:t+"-leave-active"}})),xi=W&&!Q,ki="transition",$i="transitionend",Oi="animation",Ei="animationend";xi&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(ki="WebkitTransition",$i="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Oi="WebkitAnimation",Ei="webkitAnimationEnd"));var Ai=W?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(t){return t()};function Ci(t){Ai((function(){Ai(t)}))}function ji(t,e){var n=t._transitionClasses||(t._transitionClasses=[]);n.indexOf(e)<0&&(n.push(e),gi(t,e))}function Si(t,e){t._transitionClasses&&b(t._transitionClasses,e),bi(t,e)}function Ti(t,e,n){var r=Ri(t,e),i=r.type,a=r.timeout,o=r.propCount;if(!i)return n();var s="transition"===i?$i:Ei,u=0,l=function(){t.removeEventListener(s,c),n()},c=function(e){e.target===t&&++u>=o&&l()};setTimeout((function(){u<o&&l()}),a+1),t.addEventListener(s,c)}var Pi=/\b(transform|all)(,|$)/;function Ri(t,e){var n,r=window.getComputedStyle(t),i=(r[ki+"Delay"]||"").split(", "),a=(r[ki+"Duration"]||"").split(", "),o=Di(i,a),s=(r[Oi+"Delay"]||"").split(", "),u=(r[Oi+"Duration"]||"").split(", "),l=Di(s,u),c=0,p=0;return"transition"===e?o>0&&(n="transition",c=o,p=a.length):"animation"===e?l>0&&(n="animation",c=l,p=u.length):p=(n=(c=Math.max(o,l))>0?o>l?"transition":"animation":null)?"transition"===n?a.length:u.length:0,{type:n,timeout:c,propCount:p,hasTransform:"transition"===n&&Pi.test(r[ki+"Property"])}}function Di(t,e){for(;t.length<e.length;)t=t.concat(t);return Math.max.apply(null,e.map((function(e,n){return Mi(e)+Mi(t[n])})))}function Mi(t){return 1e3*Number(t.slice(0,-1).replace(",","."))}function Li(t,e){var n=t.elm;a(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var r=yi(t.data.transition);if(!i(r)&&!a(n._enterCb)&&1===n.nodeType){for(var o=r.css,s=r.type,l=r.enterClass,c=r.enterToClass,p=r.enterActiveClass,h=r.appearClass,f=r.appearToClass,d=r.appearActiveClass,v=r.beforeEnter,m=r.enter,g=r.afterEnter,b=r.enterCancelled,y=r.beforeAppear,w=r.appear,x=r.afterAppear,k=r.appearCancelled,$=r.duration,O=Ye,E=Ye.$vnode;E&&E.parent;)O=E.context,E=E.parent;var A=!O._isMounted||!t.isRootInsert;if(!A||w||""===w){var C=A&&h?h:l,j=A&&d?d:p,S=A&&f?f:c,T=A&&y||v,P=A&&"function"==typeof w?w:m,R=A&&x||g,D=A&&k||b,M=_(u($)?$.enter:$);0;var L=!1!==o&&!Q,F=Ii(P),I=n._enterCb=N((function(){L&&(Si(n,S),Si(n,j)),I.cancelled?(L&&Si(n,C),D&&D(n)):R&&R(n),n._enterCb=null}));t.data.show||le(t,"insert",(function(){var e=n.parentNode,r=e&&e._pending&&e._pending[t.key];r&&r.tag===t.tag&&r.elm._leaveCb&&r.elm._leaveCb(),P&&P(n,I)})),T&&T(n),L&&(ji(n,C),ji(n,j),Ci((function(){Si(n,C),I.cancelled||(ji(n,S),F||(Fi(M)?setTimeout(I,M):Ti(n,s,I)))}))),t.data.show&&(e&&e(),P&&P(n,I)),L||F||I()}}}function Ni(t,e){var n=t.elm;a(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var r=yi(t.data.transition);if(i(r)||1!==n.nodeType)return e();if(!a(n._leaveCb)){var o=r.css,s=r.type,l=r.leaveClass,c=r.leaveToClass,p=r.leaveActiveClass,h=r.beforeLeave,f=r.leave,d=r.afterLeave,v=r.leaveCancelled,m=r.delayLeave,g=r.duration,b=!1!==o&&!Q,y=Ii(f),w=_(u(g)?g.leave:g);0;var x=n._leaveCb=N((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[t.key]=null),b&&(Si(n,c),Si(n,p)),x.cancelled?(b&&Si(n,l),v&&v(n)):(e(),d&&d(n)),n._leaveCb=null}));m?m(k):k()}function k(){x.cancelled||(!t.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[t.key]=t),h&&h(n),b&&(ji(n,l),ji(n,p),Ci((function(){Si(n,l),x.cancelled||(ji(n,c),y||(Fi(w)?setTimeout(x,w):Ti(n,s,x)))}))),f&&f(n,x),b||y||x())}}function Fi(t){return"number"==typeof t&&!isNaN(t)}function Ii(t){if(i(t))return!1;var e=t.fns;return a(e)?Ii(Array.isArray(e)?e[0]:e):(t._length||t.length)>1}function zi(t,e){!0!==e.data.show&&Li(e)}var Hi=function(t){var e,n,r={},u=t.modules,l=t.nodeOps;for(e=0;e<ar.length;++e)for(r[ar[e]]=[],n=0;n<u.length;++n)a(u[n][ar[e]])&&r[ar[e]].push(u[n][ar[e]]);function c(t){var e=l.parentNode(t);a(e)&&l.removeChild(e,t)}function p(t,e,n,i,s,u,c){if(a(t.elm)&&a(u)&&(t=u[c]=yt(t)),t.isRootInsert=!s,!function(t,e,n,i){var s=t.data;if(a(s)){var u=a(t.componentInstance)&&s.keepAlive;if(a(s=s.hook)&&a(s=s.init)&&s(t,!1),a(t.componentInstance))return h(t,e),f(n,t.elm,i),o(u)&&function(t,e,n,i){var o,s=t;for(;s.componentInstance;)if(s=s.componentInstance._vnode,a(o=s.data)&&a(o=o.transition)){for(o=0;o<r.activate.length;++o)r.activate[o](ir,s);e.push(s);break}f(n,t.elm,i)}(t,e,n,i),!0}}(t,e,n,i)){var p=t.data,_=t.children,v=t.tag;a(v)?(t.elm=t.ns?l.createElementNS(t.ns,v):l.createElement(v,t),g(t),d(t,_,e),a(p)&&m(t,e),f(n,t.elm,i)):o(t.isComment)?(t.elm=l.createComment(t.text),f(n,t.elm,i)):(t.elm=l.createTextNode(t.text),f(n,t.elm,i))}}function h(t,e){a(t.data.pendingInsert)&&(e.push.apply(e,t.data.pendingInsert),t.data.pendingInsert=null),t.elm=t.componentInstance.$el,_(t)?(m(t,e),g(t)):(rr(t),e.push(t))}function f(t,e,n){a(t)&&(a(n)?l.parentNode(n)===t&&l.insertBefore(t,e,n):l.appendChild(t,e))}function d(t,e,n){if(Array.isArray(e)){0;for(var r=0;r<e.length;++r)p(e[r],n,t.elm,null,!0,e,r)}else s(t.text)&&l.appendChild(t.elm,l.createTextNode(String(t.text)))}function _(t){for(;t.componentInstance;)t=t.componentInstance._vnode;return a(t.tag)}function m(t,n){for(var i=0;i<r.create.length;++i)r.create[i](ir,t);a(e=t.data.hook)&&(a(e.create)&&e.create(ir,t),a(e.insert)&&n.push(t))}function g(t){var e;if(a(e=t.fnScopeId))l.setStyleScope(t.elm,e);else for(var n=t;n;)a(e=n.context)&&a(e=e.$options._scopeId)&&l.setStyleScope(t.elm,e),n=n.parent;a(e=Ye)&&e!==t.context&&e!==t.fnContext&&a(e=e.$options._scopeId)&&l.setStyleScope(t.elm,e)}function b(t,e,n,r,i,a){for(;r<=i;++r)p(n[r],a,t,e,!1,n,r)}function y(t){var e,n,i=t.data;if(a(i))for(a(e=i.hook)&&a(e=e.destroy)&&e(t),e=0;e<r.destroy.length;++e)r.destroy[e](t);if(a(e=t.children))for(n=0;n<t.children.length;++n)y(t.children[n])}function w(t,e,n){for(;e<=n;++e){var r=t[e];a(r)&&(a(r.tag)?(x(r),y(r)):c(r.elm))}}function x(t,e){if(a(e)||a(t.data)){var n,i=r.remove.length+1;for(a(e)?e.listeners+=i:e=function(t,e){function n(){0==--n.listeners&&c(t)}return n.listeners=e,n}(t.elm,i),a(n=t.componentInstance)&&a(n=n._vnode)&&a(n.data)&&x(n,e),n=0;n<r.remove.length;++n)r.remove[n](t,e);a(n=t.data.hook)&&a(n=n.remove)?n(t,e):e()}else c(t.elm)}function k(t,e,n,r){for(var i=n;i<r;i++){var o=e[i];if(a(o)&&or(t,o))return i}}function $(t,e,n,s,u,c){if(t!==e){a(e.elm)&&a(s)&&(e=s[u]=yt(e));var h=e.elm=t.elm;if(o(t.isAsyncPlaceholder))a(e.asyncFactory.resolved)?A(t.elm,e,n):e.isAsyncPlaceholder=!0;else if(o(e.isStatic)&&o(t.isStatic)&&e.key===t.key&&(o(e.isCloned)||o(e.isOnce)))e.componentInstance=t.componentInstance;else{var f,d=e.data;a(d)&&a(f=d.hook)&&a(f=f.prepatch)&&f(t,e);var v=t.children,m=e.children;if(a(d)&&_(e)){for(f=0;f<r.update.length;++f)r.update[f](t,e);a(f=d.hook)&&a(f=f.update)&&f(t,e)}i(e.text)?a(v)&&a(m)?v!==m&&function(t,e,n,r,o){var s,u,c,h=0,f=0,d=e.length-1,_=e[0],v=e[d],m=n.length-1,g=n[0],y=n[m],x=!o;for(0;h<=d&&f<=m;)i(_)?_=e[++h]:i(v)?v=e[--d]:or(_,g)?($(_,g,r,n,f),_=e[++h],g=n[++f]):or(v,y)?($(v,y,r,n,m),v=e[--d],y=n[--m]):or(_,y)?($(_,y,r,n,m),x&&l.insertBefore(t,_.elm,l.nextSibling(v.elm)),_=e[++h],y=n[--m]):or(v,g)?($(v,g,r,n,f),x&&l.insertBefore(t,v.elm,_.elm),v=e[--d],g=n[++f]):(i(s)&&(s=sr(e,h,d)),i(u=a(g.key)?s[g.key]:k(g,e,h,d))?p(g,r,t,_.elm,!1,n,f):or(c=e[u],g)?($(c,g,r,n,f),e[u]=void 0,x&&l.insertBefore(t,c.elm,_.elm)):p(g,r,t,_.elm,!1,n,f),g=n[++f]);h>d?b(t,i(n[m+1])?null:n[m+1].elm,n,f,m,r):f>m&&w(e,h,d)}(h,v,m,n,c):a(m)?(a(t.text)&&l.setTextContent(h,""),b(h,null,m,0,m.length-1,n)):a(v)?w(v,0,v.length-1):a(t.text)&&l.setTextContent(h,""):t.text!==e.text&&l.setTextContent(h,e.text),a(d)&&a(f=d.hook)&&a(f=f.postpatch)&&f(t,e)}}}function O(t,e,n){if(o(n)&&a(t.parent))t.parent.data.pendingInsert=e;else for(var r=0;r<e.length;++r)e[r].data.hook.insert(e[r])}var E=v("attrs,class,staticClass,staticStyle,key");function A(t,e,n,r){var i,s=e.tag,u=e.data,l=e.children;if(r=r||u&&u.pre,e.elm=t,o(e.isComment)&&a(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(a(u)&&(a(i=u.hook)&&a(i=i.init)&&i(e,!0),a(i=e.componentInstance)))return h(e,n),!0;if(a(s)){if(a(l))if(t.hasChildNodes())if(a(i=u)&&a(i=i.domProps)&&a(i=i.innerHTML)){if(i!==t.innerHTML)return!1}else{for(var c=!0,p=t.firstChild,f=0;f<l.length;f++){if(!p||!A(p,l[f],n,r)){c=!1;break}p=p.nextSibling}if(!c||p)return!1}else d(e,l,n);if(a(u)){var _=!1;for(var v in u)if(!E(v)){_=!0,m(e,n);break}!_&&u.class&&ae(u.class)}}else t.data!==e.text&&(t.data=e.text);return!0}return function(t,e,n,s){if(!i(e)){var u,c=!1,h=[];if(i(t))c=!0,p(e,h);else{var f=a(t.nodeType);if(!f&&or(t,e))$(t,e,h,null,null,s);else{if(f){if(1===t.nodeType&&t.hasAttribute("data-server-rendered")&&(t.removeAttribute("data-server-rendered"),n=!0),o(n)&&A(t,e,h))return O(e,h,!0),t;u=t,t=new vt(l.tagName(u).toLowerCase(),{},[],void 0,u)}var d=t.elm,v=l.parentNode(d);if(p(e,h,d._leaveCb?null:v,l.nextSibling(d)),a(e.parent))for(var m=e.parent,g=_(e);m;){for(var b=0;b<r.destroy.length;++b)r.destroy[b](m);if(m.elm=e.elm,g){for(var x=0;x<r.create.length;++x)r.create[x](ir,m);var k=m.data.hook.insert;if(k.merged)for(var E=1;E<k.fns.length;E++)k.fns[E]()}else rr(m);m=m.parent}a(v)?w([t],0,0):a(t.tag)&&y(t)}}return O(e,h,c),e.elm}a(t)&&y(t)}}({nodeOps:er,modules:[gr,Er,ni,ai,vi,W?{create:zi,activate:zi,remove:function(t,e){!0!==t.data.show?Ni(t,e):e()}}:{}].concat(dr)});Q&&document.addEventListener("selectionchange",(function(){var t=document.activeElement;t&&t.vmodel&&Xi(t,"input")}));var Bi={inserted:function(t,e,n,r){"select"===n.tag?(r.elm&&!r.elm._vOptions?le(n,"postpatch",(function(){Bi.componentUpdated(t,e,n)})):Ui(t,e,n.context),t._vOptions=[].map.call(t.options,Ki)):("textarea"===n.tag||Zn(t.type))&&(t._vModifiers=e.modifiers,e.modifiers.lazy||(t.addEventListener("compositionstart",Wi),t.addEventListener("compositionend",Vi),t.addEventListener("change",Vi),Q&&(t.vmodel=!0)))},componentUpdated:function(t,e,n){if("select"===n.tag){Ui(t,e,n.context);var r=t._vOptions,i=t._vOptions=[].map.call(t.options,Ki);if(i.some((function(t,e){return!M(t,r[e])})))(t.multiple?e.value.some((function(t){return Gi(t,i)})):e.value!==e.oldValue&&Gi(e.value,i))&&Xi(t,"change")}}};function Ui(t,e,n){qi(t,e,n),(Y||Z)&&setTimeout((function(){qi(t,e,n)}),0)}function qi(t,e,n){var r=e.value,i=t.multiple;if(!i||Array.isArray(r)){for(var a,o,s=0,u=t.options.length;s<u;s++)if(o=t.options[s],i)a=L(r,Ki(o))>-1,o.selected!==a&&(o.selected=a);else if(M(Ki(o),r))return void(t.selectedIndex!==s&&(t.selectedIndex=s));i||(t.selectedIndex=-1)}}function Gi(t,e){return e.every((function(e){return!M(e,t)}))}function Ki(t){return"_value"in t?t._value:t.value}function Wi(t){t.target.composing=!0}function Vi(t){t.target.composing&&(t.target.composing=!1,Xi(t.target,"input"))}function Xi(t,e){var n=document.createEvent("HTMLEvents");n.initEvent(e,!0,!0),t.dispatchEvent(n)}function Ji(t){return!t.componentInstance||t.data&&t.data.transition?t:Ji(t.componentInstance._vnode)}var Yi={model:Bi,show:{bind:function(t,e,n){var r=e.value,i=(n=Ji(n)).data&&n.data.transition,a=t.__vOriginalDisplay="none"===t.style.display?"":t.style.display;r&&i?(n.data.show=!0,Li(n,(function(){t.style.display=a}))):t.style.display=r?a:"none"},update:function(t,e,n){var r=e.value;!r!=!e.oldValue&&((n=Ji(n)).data&&n.data.transition?(n.data.show=!0,r?Li(n,(function(){t.style.display=t.__vOriginalDisplay})):Ni(n,(function(){t.style.display="none"}))):t.style.display=r?t.__vOriginalDisplay:"none")},unbind:function(t,e,n,r,i){i||(t.style.display=t.__vOriginalDisplay)}}},Qi={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Zi(t){var e=t&&t.componentOptions;return e&&e.Ctor.options.abstract?Zi(Ke(e.children)):t}function ta(t){var e={},n=t.$options;for(var r in n.propsData)e[r]=t[r];var i=n._parentListeners;for(var a in i)e[$(a)]=i[a];return e}function ea(t,e){if(/\d-keep-alive$/.test(e.tag))return t("keep-alive",{props:e.componentOptions.propsData})}var na=function(t){return t.tag||Ge(t)},ra=function(t){return"show"===t.name},ia={name:"transition",props:Qi,abstract:!0,render:function(t){var e=this,n=this.$slots.default;if(n&&(n=n.filter(na)).length){0;var r=this.mode;0;var i=n[0];if(function(t){for(;t=t.parent;)if(t.data.transition)return!0}(this.$vnode))return i;var a=Zi(i);if(!a)return i;if(this._leaving)return ea(t,i);var o="__transition-"+this._uid+"-";a.key=null==a.key?a.isComment?o+"comment":o+a.tag:s(a.key)?0===String(a.key).indexOf(o)?a.key:o+a.key:a.key;var u=(a.data||(a.data={})).transition=ta(this),l=this._vnode,c=Zi(l);if(a.data.directives&&a.data.directives.some(ra)&&(a.data.show=!0),c&&c.data&&!function(t,e){return e.key===t.key&&e.tag===t.tag}(a,c)&&!Ge(c)&&(!c.componentInstance||!c.componentInstance._vnode.isComment)){var p=c.data.transition=S({},u);if("out-in"===r)return this._leaving=!0,le(p,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),ea(t,i);if("in-out"===r){if(Ge(a))return l;var h,f=function(){h()};le(u,"afterEnter",f),le(u,"enterCancelled",f),le(p,"delayLeave",(function(t){h=t}))}}return i}}},aa=S({tag:String,moveClass:String},Qi);function oa(t){t.elm._moveCb&&t.elm._moveCb(),t.elm._enterCb&&t.elm._enterCb()}function sa(t){t.data.newPos=t.elm.getBoundingClientRect()}function ua(t){var e=t.data.pos,n=t.data.newPos,r=e.left-n.left,i=e.top-n.top;if(r||i){t.data.moved=!0;var a=t.elm.style;a.transform=a.WebkitTransform="translate("+r+"px,"+i+"px)",a.transitionDuration="0s"}}delete aa.mode;var la={Transition:ia,TransitionGroup:{props:aa,beforeMount:function(){var t=this,e=this._update;this._update=function(n,r){var i=Qe(t);t.__patch__(t._vnode,t.kept,!1,!0),t._vnode=t.kept,i(),e.call(t,n,r)}},render:function(t){for(var e=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),r=this.prevChildren=this.children,i=this.$slots.default||[],a=this.children=[],o=ta(this),s=0;s<i.length;s++){var u=i[s];if(u.tag)if(null!=u.key&&0!==String(u.key).indexOf("__vlist"))a.push(u),n[u.key]=u,(u.data||(u.data={})).transition=o;else;}if(r){for(var l=[],c=[],p=0;p<r.length;p++){var h=r[p];h.data.transition=o,h.data.pos=h.elm.getBoundingClientRect(),n[h.key]?l.push(h):c.push(h)}this.kept=t(e,null,l),this.removed=c}return t(e,null,a)},updated:function(){var t=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";t.length&&this.hasMove(t[0].elm,e)&&(t.forEach(oa),t.forEach(sa),t.forEach(ua),this._reflow=document.body.offsetHeight,t.forEach((function(t){if(t.data.moved){var n=t.elm,r=n.style;ji(n,e),r.transform=r.WebkitTransform=r.transitionDuration="",n.addEventListener($i,n._moveCb=function t(r){r&&r.target!==n||r&&!/transform$/.test(r.propertyName)||(n.removeEventListener($i,t),n._moveCb=null,Si(n,e))})}})))},methods:{hasMove:function(t,e){if(!xi)return!1;if(this._hasMove)return this._hasMove;var n=t.cloneNode();t._transitionClasses&&t._transitionClasses.forEach((function(t){bi(n,t)})),gi(n,e),n.style.display="none",this.$el.appendChild(n);var r=Ri(n);return this.$el.removeChild(n),this._hasMove=r.hasTransform}}}};On.config.mustUseProp=Mn,On.config.isReservedTag=Jn,On.config.isReservedAttr=Rn,On.config.getTagNamespace=Yn,On.config.isUnknownElement=function(t){if(!W)return!0;if(Jn(t))return!1;if(t=t.toLowerCase(),null!=Qn[t])return Qn[t];var e=document.createElement(t);return t.indexOf("-")>-1?Qn[t]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:Qn[t]=/HTMLUnknownElement/.test(e.toString())},S(On.options.directives,Yi),S(On.options.components,la),On.prototype.__patch__=W?Hi:P,On.prototype.$mount=function(t,e){return function(t,e,n){var r;return t.$el=e,t.$options.render||(t.$options.render=gt),en(t,"beforeMount"),r=function(){t._update(t._render(),n)},new dn(t,r,P,{before:function(){t._isMounted&&!t._isDestroyed&&en(t,"beforeUpdate")}},!0),n=!1,null==t.$vnode&&(t._isMounted=!0,en(t,"mounted")),t}(this,t=t&&W?tr(t):void 0,e)},W&&setTimeout((function(){z.devtools&&ot&&ot.emit("init",On)}),0);var ca=/\{\{((?:.|\r?\n)+?)\}\}/g,pa=/[-.*+?^${}()|[\]\/\\]/g,ha=x((function(t){var e=t[0].replace(pa,"\\$&"),n=t[1].replace(pa,"\\$&");return new RegExp(e+"((?:.|\\n)+?)"+n,"g")}));var fa={staticKeys:["staticClass"],transformNode:function(t,e){e.warn;var n=Ir(t,"class");n&&(t.staticClass=JSON.stringify(n));var r=Fr(t,"class",!1);r&&(t.classBinding=r)},genData:function(t){var e="";return t.staticClass&&(e+="staticClass:"+t.staticClass+","),t.classBinding&&(e+="class:"+t.classBinding+","),e}};var da,_a={staticKeys:["staticStyle"],transformNode:function(t,e){e.warn;var n=Ir(t,"style");n&&(t.staticStyle=JSON.stringify(oi(n)));var r=Fr(t,"style",!1);r&&(t.styleBinding=r)},genData:function(t){var e="";return t.staticStyle&&(e+="staticStyle:"+t.staticStyle+","),t.styleBinding&&(e+="style:("+t.styleBinding+"),"),e}},va=function(t){return(da=da||document.createElement("div")).innerHTML=t,da.textContent},ma=v("area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr"),ga=v("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source"),ba=v("address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track"),ya=/^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,wa=/^\s*((?:v-[\w-]+:|@|:|#)\[[^=]+\][^\s"'<>\/=]*)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,xa="[a-zA-Z_][\\-\\.0-9_a-zA-Z"+H.source+"]*",ka="((?:"+xa+"\\:)?"+xa+")",$a=new RegExp("^<"+ka),Oa=/^\s*(\/?)>/,Ea=new RegExp("^<\\/"+ka+"[^>]*>"),Aa=/^<!DOCTYPE [^>]+>/i,Ca=/^<!\--/,ja=/^<!\[/,Sa=v("script,style,textarea",!0),Ta={},Pa={"&lt;":"<","&gt;":">","&quot;":'"',"&amp;":"&","&#10;":"\n","&#9;":"\t","&#39;":"'"},Ra=/&(?:lt|gt|quot|amp|#39);/g,Da=/&(?:lt|gt|quot|amp|#39|#10|#9);/g,Ma=v("pre,textarea",!0),La=function(t,e){return t&&Ma(t)&&"\n"===e[0]};function Na(t,e){var n=e?Da:Ra;return t.replace(n,(function(t){return Pa[t]}))}var Fa,Ia,za,Ha,Ba,Ua,qa,Ga,Ka=/^@|^v-on:/,Wa=/^v-|^@|^:|^#/,Va=/([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/,Xa=/,([^,\}\]]*)(?:,([^,\}\]]*))?$/,Ja=/^\(|\)$/g,Ya=/^\[.*\]$/,Qa=/:(.*)$/,Za=/^:|^\.|^v-bind:/,to=/\.[^.\]]+(?=[^\]]*$)/g,eo=/^v-slot(:|$)|^#/,no=/[\r\n]/,ro=/\s+/g,io=x(va);function ao(t,e,n){return{type:1,tag:t,attrsList:e,attrsMap:ho(e),rawAttrsMap:{},parent:n,children:[]}}function oo(t,e){Fa=e.warn||Sr,Ua=e.isPreTag||R,qa=e.mustUseProp||R,Ga=e.getTagNamespace||R;var n=e.isReservedTag||R;(function(t){return!!t.component||!n(t.tag)}),za=Tr(e.modules,"transformNode"),Ha=Tr(e.modules,"preTransformNode"),Ba=Tr(e.modules,"postTransformNode"),Ia=e.delimiters;var r,i,a=[],o=!1!==e.preserveWhitespace,s=e.whitespace,u=!1,l=!1;function c(t){if(p(t),u||t.processed||(t=so(t,e)),a.length||t===r||r.if&&(t.elseif||t.else)&&lo(r,{exp:t.elseif,block:t}),i&&!t.forbidden)if(t.elseif||t.else)o=t,(s=function(t){for(var e=t.length;e--;){if(1===t[e].type)return t[e];t.pop()}}(i.children))&&s.if&&lo(s,{exp:o.elseif,block:o});else{if(t.slotScope){var n=t.slotTarget||'"default"';(i.scopedSlots||(i.scopedSlots={}))[n]=t}i.children.push(t),t.parent=i}var o,s;t.children=t.children.filter((function(t){return!t.slotScope})),p(t),t.pre&&(u=!1),Ua(t.tag)&&(l=!1);for(var c=0;c<Ba.length;c++)Ba[c](t,e)}function p(t){if(!l)for(var e;(e=t.children[t.children.length-1])&&3===e.type&&" "===e.text;)t.children.pop()}return function(t,e){for(var n,r,i=[],a=e.expectHTML,o=e.isUnaryTag||R,s=e.canBeLeftOpenTag||R,u=0;t;){if(n=t,r&&Sa(r)){var l=0,c=r.toLowerCase(),p=Ta[c]||(Ta[c]=new RegExp("([\\s\\S]*?)(</"+c+"[^>]*>)","i")),h=t.replace(p,(function(t,n,r){return l=r.length,Sa(c)||"noscript"===c||(n=n.replace(/<!\--([\s\S]*?)-->/g,"$1").replace(/<!\[CDATA\[([\s\S]*?)]]>/g,"$1")),La(c,n)&&(n=n.slice(1)),e.chars&&e.chars(n),""}));u+=t.length-h.length,t=h,E(c,u-l,u)}else{var f=t.indexOf("<");if(0===f){if(Ca.test(t)){var d=t.indexOf("--\x3e");if(d>=0){e.shouldKeepComment&&e.comment(t.substring(4,d),u,u+d+3),k(d+3);continue}}if(ja.test(t)){var _=t.indexOf("]>");if(_>=0){k(_+2);continue}}var v=t.match(Aa);if(v){k(v[0].length);continue}var m=t.match(Ea);if(m){var g=u;k(m[0].length),E(m[1],g,u);continue}var b=$();if(b){O(b),La(b.tagName,t)&&k(1);continue}}var y=void 0,w=void 0,x=void 0;if(f>=0){for(w=t.slice(f);!(Ea.test(w)||$a.test(w)||Ca.test(w)||ja.test(w)||(x=w.indexOf("<",1))<0);)f+=x,w=t.slice(f);y=t.substring(0,f)}f<0&&(y=t),y&&k(y.length),e.chars&&y&&e.chars(y,u-y.length,u)}if(t===n){e.chars&&e.chars(t);break}}function k(e){u+=e,t=t.substring(e)}function $(){var e=t.match($a);if(e){var n,r,i={tagName:e[1],attrs:[],start:u};for(k(e[0].length);!(n=t.match(Oa))&&(r=t.match(wa)||t.match(ya));)r.start=u,k(r[0].length),r.end=u,i.attrs.push(r);if(n)return i.unarySlash=n[1],k(n[0].length),i.end=u,i}}function O(t){var n=t.tagName,u=t.unarySlash;a&&("p"===r&&ba(n)&&E(r),s(n)&&r===n&&E(n));for(var l=o(n)||!!u,c=t.attrs.length,p=new Array(c),h=0;h<c;h++){var f=t.attrs[h],d=f[3]||f[4]||f[5]||"",_="a"===n&&"href"===f[1]?e.shouldDecodeNewlinesForHref:e.shouldDecodeNewlines;p[h]={name:f[1],value:Na(d,_)}}l||(i.push({tag:n,lowerCasedTag:n.toLowerCase(),attrs:p,start:t.start,end:t.end}),r=n),e.start&&e.start(n,p,l,t.start,t.end)}function E(t,n,a){var o,s;if(null==n&&(n=u),null==a&&(a=u),t)for(s=t.toLowerCase(),o=i.length-1;o>=0&&i[o].lowerCasedTag!==s;o--);else o=0;if(o>=0){for(var l=i.length-1;l>=o;l--)e.end&&e.end(i[l].tag,n,a);i.length=o,r=o&&i[o-1].tag}else"br"===s?e.start&&e.start(t,[],!0,n,a):"p"===s&&(e.start&&e.start(t,[],!1,n,a),e.end&&e.end(t,n,a))}E()}(t,{warn:Fa,expectHTML:e.expectHTML,isUnaryTag:e.isUnaryTag,canBeLeftOpenTag:e.canBeLeftOpenTag,shouldDecodeNewlines:e.shouldDecodeNewlines,shouldDecodeNewlinesForHref:e.shouldDecodeNewlinesForHref,shouldKeepComment:e.comments,outputSourceRange:e.outputSourceRange,start:function(t,n,o,s,p){var h=i&&i.ns||Ga(t);Y&&"svg"===h&&(n=function(t){for(var e=[],n=0;n<t.length;n++){var r=t[n];fo.test(r.name)||(r.name=r.name.replace(_o,""),e.push(r))}return e}(n));var f,d=ao(t,n,i);h&&(d.ns=h),"style"!==(f=d).tag&&("script"!==f.tag||f.attrsMap.type&&"text/javascript"!==f.attrsMap.type)||at()||(d.forbidden=!0);for(var _=0;_<Ha.length;_++)d=Ha[_](d,e)||d;u||(!function(t){null!=Ir(t,"v-pre")&&(t.pre=!0)}(d),d.pre&&(u=!0)),Ua(d.tag)&&(l=!0),u?function(t){var e=t.attrsList,n=e.length;if(n)for(var r=t.attrs=new Array(n),i=0;i<n;i++)r[i]={name:e[i].name,value:JSON.stringify(e[i].value)},null!=e[i].start&&(r[i].start=e[i].start,r[i].end=e[i].end);else t.pre||(t.plain=!0)}(d):d.processed||(uo(d),function(t){var e=Ir(t,"v-if");if(e)t.if=e,lo(t,{exp:e,block:t});else{null!=Ir(t,"v-else")&&(t.else=!0);var n=Ir(t,"v-else-if");n&&(t.elseif=n)}}(d),function(t){null!=Ir(t,"v-once")&&(t.once=!0)}(d)),r||(r=d),o?c(d):(i=d,a.push(d))},end:function(t,e,n){var r=a[a.length-1];a.length-=1,i=a[a.length-1],c(r)},chars:function(t,e,n){if(i&&(!Y||"textarea"!==i.tag||i.attrsMap.placeholder!==t)){var r,a,c,p=i.children;if(t=l||t.trim()?"script"===(r=i).tag||"style"===r.tag?t:io(t):p.length?s?"condense"===s&&no.test(t)?"":" ":o?" ":"":"")l||"condense"!==s||(t=t.replace(ro," ")),!u&&" "!==t&&(a=function(t,e){var n=e?ha(e):ca;if(n.test(t)){for(var r,i,a,o=[],s=[],u=n.lastIndex=0;r=n.exec(t);){(i=r.index)>u&&(s.push(a=t.slice(u,i)),o.push(JSON.stringify(a)));var l=Cr(r[1].trim());o.push("_s("+l+")"),s.push({"@binding":l}),u=i+r[0].length}return u<t.length&&(s.push(a=t.slice(u)),o.push(JSON.stringify(a))),{expression:o.join("+"),tokens:s}}}(t,Ia))?c={type:2,expression:a.expression,tokens:a.tokens,text:t}:" "===t&&p.length&&" "===p[p.length-1].text||(c={type:3,text:t}),c&&p.push(c)}},comment:function(t,e,n){if(i){var r={type:3,text:t,isComment:!0};0,i.children.push(r)}}}),r}function so(t,e){var n;!function(t){var e=Fr(t,"key");if(e){t.key=e}}(t),t.plain=!t.key&&!t.scopedSlots&&!t.attrsList.length,function(t){var e=Fr(t,"ref");e&&(t.ref=e,t.refInFor=function(t){var e=t;for(;e;){if(void 0!==e.for)return!0;e=e.parent}return!1}(t))}(t),function(t){var e;"template"===t.tag?(e=Ir(t,"scope"),t.slotScope=e||Ir(t,"slot-scope")):(e=Ir(t,"slot-scope"))&&(t.slotScope=e);var n=Fr(t,"slot");n&&(t.slotTarget='""'===n?'"default"':n,t.slotTargetDynamic=!(!t.attrsMap[":slot"]&&!t.attrsMap["v-bind:slot"]),"template"===t.tag||t.slotScope||Rr(t,"slot",n,function(t,e){return t.rawAttrsMap[":"+e]||t.rawAttrsMap["v-bind:"+e]||t.rawAttrsMap[e]}(t,"slot")));if("template"===t.tag){var r=zr(t,eo);if(r){0;var i=co(r),a=i.name,o=i.dynamic;t.slotTarget=a,t.slotTargetDynamic=o,t.slotScope=r.value||"_empty_"}}else{var s=zr(t,eo);if(s){0;var u=t.scopedSlots||(t.scopedSlots={}),l=co(s),c=l.name,p=l.dynamic,h=u[c]=ao("template",[],t);h.slotTarget=c,h.slotTargetDynamic=p,h.children=t.children.filter((function(t){if(!t.slotScope)return t.parent=h,!0})),h.slotScope=s.value||"_empty_",t.children=[],t.plain=!1}}}(t),"slot"===(n=t).tag&&(n.slotName=Fr(n,"name")),function(t){var e;(e=Fr(t,"is"))&&(t.component=e);null!=Ir(t,"inline-template")&&(t.inlineTemplate=!0)}(t);for(var r=0;r<za.length;r++)t=za[r](t,e)||t;return function(t){var e,n,r,i,a,o,s,u,l=t.attrsList;for(e=0,n=l.length;e<n;e++){if(r=i=l[e].name,a=l[e].value,Wa.test(r))if(t.hasBindings=!0,(o=po(r.replace(Wa,"")))&&(r=r.replace(to,"")),Za.test(r))r=r.replace(Za,""),a=Cr(a),(u=Ya.test(r))&&(r=r.slice(1,-1)),o&&(o.prop&&!u&&"innerHtml"===(r=$(r))&&(r="innerHTML"),o.camel&&!u&&(r=$(r)),o.sync&&(s=Ur(a,"$event"),u?Nr(t,'"update:"+('+r+")",s,null,!1,0,l[e],!0):(Nr(t,"update:"+$(r),s,null,!1,0,l[e]),A(r)!==$(r)&&Nr(t,"update:"+A(r),s,null,!1,0,l[e])))),o&&o.prop||!t.component&&qa(t.tag,t.attrsMap.type,r)?Pr(t,r,a,l[e],u):Rr(t,r,a,l[e],u);else if(Ka.test(r))r=r.replace(Ka,""),(u=Ya.test(r))&&(r=r.slice(1,-1)),Nr(t,r,a,o,!1,0,l[e],u);else{var c=(r=r.replace(Wa,"")).match(Qa),p=c&&c[1];u=!1,p&&(r=r.slice(0,-(p.length+1)),Ya.test(p)&&(p=p.slice(1,-1),u=!0)),Mr(t,r,i,a,p,u,o,l[e])}else Rr(t,r,JSON.stringify(a),l[e]),!t.component&&"muted"===r&&qa(t.tag,t.attrsMap.type,r)&&Pr(t,r,"true",l[e])}}(t),t}function uo(t){var e;if(e=Ir(t,"v-for")){var n=function(t){var e=t.match(Va);if(!e)return;var n={};n.for=e[2].trim();var r=e[1].trim().replace(Ja,""),i=r.match(Xa);i?(n.alias=r.replace(Xa,"").trim(),n.iterator1=i[1].trim(),i[2]&&(n.iterator2=i[2].trim())):n.alias=r;return n}(e);n&&S(t,n)}}function lo(t,e){t.ifConditions||(t.ifConditions=[]),t.ifConditions.push(e)}function co(t){var e=t.name.replace(eo,"");return e||"#"!==t.name[0]&&(e="default"),Ya.test(e)?{name:e.slice(1,-1),dynamic:!0}:{name:'"'+e+'"',dynamic:!1}}function po(t){var e=t.match(to);if(e){var n={};return e.forEach((function(t){n[t.slice(1)]=!0})),n}}function ho(t){for(var e={},n=0,r=t.length;n<r;n++)e[t[n].name]=t[n].value;return e}var fo=/^xmlns:NS\d+/,_o=/^NS\d+:/;function vo(t){return ao(t.tag,t.attrsList.slice(),t.parent)}var mo=[fa,_a,{preTransformNode:function(t,e){if("input"===t.tag){var n,r=t.attrsMap;if(!r["v-model"])return;if((r[":type"]||r["v-bind:type"])&&(n=Fr(t,"type")),r.type||n||!r["v-bind"]||(n="("+r["v-bind"]+").type"),n){var i=Ir(t,"v-if",!0),a=i?"&&("+i+")":"",o=null!=Ir(t,"v-else",!0),s=Ir(t,"v-else-if",!0),u=vo(t);uo(u),Dr(u,"type","checkbox"),so(u,e),u.processed=!0,u.if="("+n+")==='checkbox'"+a,lo(u,{exp:u.if,block:u});var l=vo(t);Ir(l,"v-for",!0),Dr(l,"type","radio"),so(l,e),lo(u,{exp:"("+n+")==='radio'"+a,block:l});var c=vo(t);return Ir(c,"v-for",!0),Dr(c,":type",n),so(c,e),lo(u,{exp:i,block:c}),o?u.else=!0:s&&(u.elseif=s),u}}}}];var go,bo,yo={expectHTML:!0,modules:mo,directives:{model:function(t,e,n){n;var r=e.value,i=e.modifiers,a=t.tag,o=t.attrsMap.type;if(t.component)return Br(t,r,i),!1;if("select"===a)!function(t,e,n){var r='var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return '+(n&&n.number?"_n(val)":"val")+"});";r=r+" "+Ur(e,"$event.target.multiple ? $$selectedVal : $$selectedVal[0]"),Nr(t,"change",r,null,!0)}(t,r,i);else if("input"===a&&"checkbox"===o)!function(t,e,n){var r=n&&n.number,i=Fr(t,"value")||"null",a=Fr(t,"true-value")||"true",o=Fr(t,"false-value")||"false";Pr(t,"checked","Array.isArray("+e+")?_i("+e+","+i+")>-1"+("true"===a?":("+e+")":":_q("+e+","+a+")")),Nr(t,"change","var $$a="+e+",$$el=$event.target,$$c=$$el.checked?("+a+"):("+o+");if(Array.isArray($$a)){var $$v="+(r?"_n("+i+")":i)+",$$i=_i($$a,$$v);if($$el.checked){$$i<0&&("+Ur(e,"$$a.concat([$$v])")+")}else{$$i>-1&&("+Ur(e,"$$a.slice(0,$$i).concat($$a.slice($$i+1))")+")}}else{"+Ur(e,"$$c")+"}",null,!0)}(t,r,i);else if("input"===a&&"radio"===o)!function(t,e,n){var r=n&&n.number,i=Fr(t,"value")||"null";Pr(t,"checked","_q("+e+","+(i=r?"_n("+i+")":i)+")"),Nr(t,"change",Ur(e,i),null,!0)}(t,r,i);else if("input"===a||"textarea"===a)!function(t,e,n){var r=t.attrsMap.type;0;var i=n||{},a=i.lazy,o=i.number,s=i.trim,u=!a&&"range"!==r,l=a?"change":"range"===r?"__r":"input",c="$event.target.value";s&&(c="$event.target.value.trim()");o&&(c="_n("+c+")");var p=Ur(e,c);u&&(p="if($event.target.composing)return;"+p);Pr(t,"value","("+e+")"),Nr(t,l,p,null,!0),(s||o)&&Nr(t,"blur","$forceUpdate()")}(t,r,i);else{if(!z.isReservedTag(a))return Br(t,r,i),!1}return!0},text:function(t,e){e.value&&Pr(t,"textContent","_s("+e.value+")",e)},html:function(t,e){e.value&&Pr(t,"innerHTML","_s("+e.value+")",e)}},isPreTag:function(t){return"pre"===t},isUnaryTag:ma,mustUseProp:Mn,canBeLeftOpenTag:ga,isReservedTag:Jn,getTagNamespace:Yn,staticKeys:function(t){return t.reduce((function(t,e){return t.concat(e.staticKeys||[])}),[]).join(",")}(mo)},wo=x((function(t){return v("type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap"+(t?","+t:""))}));function xo(t,e){t&&(go=wo(e.staticKeys||""),bo=e.isReservedTag||R,function t(e){if(e.static=function(t){if(2===t.type)return!1;if(3===t.type)return!0;return!(!t.pre&&(t.hasBindings||t.if||t.for||m(t.tag)||!bo(t.tag)||function(t){for(;t.parent;){if("template"!==(t=t.parent).tag)return!1;if(t.for)return!0}return!1}(t)||!Object.keys(t).every(go)))}(e),1===e.type){if(!bo(e.tag)&&"slot"!==e.tag&&null==e.attrsMap["inline-template"])return;for(var n=0,r=e.children.length;n<r;n++){var i=e.children[n];t(i),i.static||(e.static=!1)}if(e.ifConditions)for(var a=1,o=e.ifConditions.length;a<o;a++){var s=e.ifConditions[a].block;t(s),s.static||(e.static=!1)}}}(t),function t(e,n){if(1===e.type){if((e.static||e.once)&&(e.staticInFor=n),e.static&&e.children.length&&(1!==e.children.length||3!==e.children[0].type))return void(e.staticRoot=!0);if(e.staticRoot=!1,e.children)for(var r=0,i=e.children.length;r<i;r++)t(e.children[r],n||!!e.for);if(e.ifConditions)for(var a=1,o=e.ifConditions.length;a<o;a++)t(e.ifConditions[a].block,n)}}(t,!1))}var ko=/^([\w$_]+|\([^)]*?\))\s*=>|^function(?:\s+[\w$]+)?\s*\(/,$o=/\([^)]*?\);*$/,Oo=/^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/,Eo={esc:27,tab:9,enter:13,space:32,up:38,left:37,right:39,down:40,delete:[8,46]},Ao={esc:["Esc","Escape"],tab:"Tab",enter:"Enter",space:[" ","Spacebar"],up:["Up","ArrowUp"],left:["Left","ArrowLeft"],right:["Right","ArrowRight"],down:["Down","ArrowDown"],delete:["Backspace","Delete","Del"]},Co=function(t){return"if("+t+")return null;"},jo={stop:"$event.stopPropagation();",prevent:"$event.preventDefault();",self:Co("$event.target !== $event.currentTarget"),ctrl:Co("!$event.ctrlKey"),shift:Co("!$event.shiftKey"),alt:Co("!$event.altKey"),meta:Co("!$event.metaKey"),left:Co("'button' in $event && $event.button !== 0"),middle:Co("'button' in $event && $event.button !== 1"),right:Co("'button' in $event && $event.button !== 2")};function So(t,e){var n=e?"nativeOn:":"on:",r="",i="";for(var a in t){var o=To(t[a]);t[a]&&t[a].dynamic?i+=a+","+o+",":r+='"'+a+'":'+o+","}return r="{"+r.slice(0,-1)+"}",i?n+"_d("+r+",["+i.slice(0,-1)+"])":n+r}function To(t){if(!t)return"function(){}";if(Array.isArray(t))return"["+t.map((function(t){return To(t)})).join(",")+"]";var e=Oo.test(t.value),n=ko.test(t.value),r=Oo.test(t.value.replace($o,""));if(t.modifiers){var i="",a="",o=[];for(var s in t.modifiers)if(jo[s])a+=jo[s],Eo[s]&&o.push(s);else if("exact"===s){var u=t.modifiers;a+=Co(["ctrl","shift","alt","meta"].filter((function(t){return!u[t]})).map((function(t){return"$event."+t+"Key"})).join("||"))}else o.push(s);return o.length&&(i+=function(t){return"if(!$event.type.indexOf('key')&&"+t.map(Po).join("&&")+")return null;"}(o)),a&&(i+=a),"function($event){"+i+(e?"return "+t.value+"($event)":n?"return ("+t.value+")($event)":r?"return "+t.value:t.value)+"}"}return e||n?t.value:"function($event){"+(r?"return "+t.value:t.value)+"}"}function Po(t){var e=parseInt(t,10);if(e)return"$event.keyCode!=="+e;var n=Eo[t],r=Ao[t];return"_k($event.keyCode,"+JSON.stringify(t)+","+JSON.stringify(n)+",$event.key,"+JSON.stringify(r)+")"}var Ro={on:function(t,e){t.wrapListeners=function(t){return"_g("+t+","+e.value+")"}},bind:function(t,e){t.wrapData=function(n){return"_b("+n+",'"+t.tag+"',"+e.value+","+(e.modifiers&&e.modifiers.prop?"true":"false")+(e.modifiers&&e.modifiers.sync?",true":"")+")"}},cloak:P},Do=function(t){this.options=t,this.warn=t.warn||Sr,this.transforms=Tr(t.modules,"transformCode"),this.dataGenFns=Tr(t.modules,"genData"),this.directives=S(S({},Ro),t.directives);var e=t.isReservedTag||R;this.maybeComponent=function(t){return!!t.component||!e(t.tag)},this.onceId=0,this.staticRenderFns=[],this.pre=!1};function Mo(t,e){var n=new Do(e);return{render:"with(this){return "+(t?Lo(t,n):'_c("div")')+"}",staticRenderFns:n.staticRenderFns}}function Lo(t,e){if(t.parent&&(t.pre=t.pre||t.parent.pre),t.staticRoot&&!t.staticProcessed)return No(t,e);if(t.once&&!t.onceProcessed)return Fo(t,e);if(t.for&&!t.forProcessed)return zo(t,e);if(t.if&&!t.ifProcessed)return Io(t,e);if("template"!==t.tag||t.slotTarget||e.pre){if("slot"===t.tag)return function(t,e){var n=t.slotName||'"default"',r=qo(t,e),i="_t("+n+(r?","+r:""),a=t.attrs||t.dynamicAttrs?Wo((t.attrs||[]).concat(t.dynamicAttrs||[]).map((function(t){return{name:$(t.name),value:t.value,dynamic:t.dynamic}}))):null,o=t.attrsMap["v-bind"];!a&&!o||r||(i+=",null");a&&(i+=","+a);o&&(i+=(a?"":",null")+","+o);return i+")"}(t,e);var n;if(t.component)n=function(t,e,n){var r=e.inlineTemplate?null:qo(e,n,!0);return"_c("+t+","+Ho(e,n)+(r?","+r:"")+")"}(t.component,t,e);else{var r;(!t.plain||t.pre&&e.maybeComponent(t))&&(r=Ho(t,e));var i=t.inlineTemplate?null:qo(t,e,!0);n="_c('"+t.tag+"'"+(r?","+r:"")+(i?","+i:"")+")"}for(var a=0;a<e.transforms.length;a++)n=e.transforms[a](t,n);return n}return qo(t,e)||"void 0"}function No(t,e){t.staticProcessed=!0;var n=e.pre;return t.pre&&(e.pre=t.pre),e.staticRenderFns.push("with(this){return "+Lo(t,e)+"}"),e.pre=n,"_m("+(e.staticRenderFns.length-1)+(t.staticInFor?",true":"")+")"}function Fo(t,e){if(t.onceProcessed=!0,t.if&&!t.ifProcessed)return Io(t,e);if(t.staticInFor){for(var n="",r=t.parent;r;){if(r.for){n=r.key;break}r=r.parent}return n?"_o("+Lo(t,e)+","+e.onceId+++","+n+")":Lo(t,e)}return No(t,e)}function Io(t,e,n,r){return t.ifProcessed=!0,function t(e,n,r,i){if(!e.length)return i||"_e()";var a=e.shift();return a.exp?"("+a.exp+")?"+o(a.block)+":"+t(e,n,r,i):""+o(a.block);function o(t){return r?r(t,n):t.once?Fo(t,n):Lo(t,n)}}(t.ifConditions.slice(),e,n,r)}function zo(t,e,n,r){var i=t.for,a=t.alias,o=t.iterator1?","+t.iterator1:"",s=t.iterator2?","+t.iterator2:"";return t.forProcessed=!0,(r||"_l")+"(("+i+"),function("+a+o+s+"){return "+(n||Lo)(t,e)+"})"}function Ho(t,e){var n="{",r=function(t,e){var n=t.directives;if(!n)return;var r,i,a,o,s="directives:[",u=!1;for(r=0,i=n.length;r<i;r++){a=n[r],o=!0;var l=e.directives[a.name];l&&(o=!!l(t,a,e.warn)),o&&(u=!0,s+='{name:"'+a.name+'",rawName:"'+a.rawName+'"'+(a.value?",value:("+a.value+"),expression:"+JSON.stringify(a.value):"")+(a.arg?",arg:"+(a.isDynamicArg?a.arg:'"'+a.arg+'"'):"")+(a.modifiers?",modifiers:"+JSON.stringify(a.modifiers):"")+"},")}if(u)return s.slice(0,-1)+"]"}(t,e);r&&(n+=r+","),t.key&&(n+="key:"+t.key+","),t.ref&&(n+="ref:"+t.ref+","),t.refInFor&&(n+="refInFor:true,"),t.pre&&(n+="pre:true,"),t.component&&(n+='tag:"'+t.tag+'",');for(var i=0;i<e.dataGenFns.length;i++)n+=e.dataGenFns[i](t);if(t.attrs&&(n+="attrs:"+Wo(t.attrs)+","),t.props&&(n+="domProps:"+Wo(t.props)+","),t.events&&(n+=So(t.events,!1)+","),t.nativeEvents&&(n+=So(t.nativeEvents,!0)+","),t.slotTarget&&!t.slotScope&&(n+="slot:"+t.slotTarget+","),t.scopedSlots&&(n+=function(t,e,n){var r=t.for||Object.keys(e).some((function(t){var n=e[t];return n.slotTargetDynamic||n.if||n.for||Bo(n)})),i=!!t.if;if(!r)for(var a=t.parent;a;){if(a.slotScope&&"_empty_"!==a.slotScope||a.for){r=!0;break}a.if&&(i=!0),a=a.parent}var o=Object.keys(e).map((function(t){return Uo(e[t],n)})).join(",");return"scopedSlots:_u(["+o+"]"+(r?",null,true":"")+(!r&&i?",null,false,"+function(t){var e=5381,n=t.length;for(;n;)e=33*e^t.charCodeAt(--n);return e>>>0}(o):"")+")"}(t,t.scopedSlots,e)+","),t.model&&(n+="model:{value:"+t.model.value+",callback:"+t.model.callback+",expression:"+t.model.expression+"},"),t.inlineTemplate){var a=function(t,e){var n=t.children[0];0;if(n&&1===n.type){var r=Mo(n,e.options);return"inlineTemplate:{render:function(){"+r.render+"},staticRenderFns:["+r.staticRenderFns.map((function(t){return"function(){"+t+"}"})).join(",")+"]}"}}(t,e);a&&(n+=a+",")}return n=n.replace(/,$/,"")+"}",t.dynamicAttrs&&(n="_b("+n+',"'+t.tag+'",'+Wo(t.dynamicAttrs)+")"),t.wrapData&&(n=t.wrapData(n)),t.wrapListeners&&(n=t.wrapListeners(n)),n}function Bo(t){return 1===t.type&&("slot"===t.tag||t.children.some(Bo))}function Uo(t,e){var n=t.attrsMap["slot-scope"];if(t.if&&!t.ifProcessed&&!n)return Io(t,e,Uo,"null");if(t.for&&!t.forProcessed)return zo(t,e,Uo);var r="_empty_"===t.slotScope?"":String(t.slotScope),i="function("+r+"){return "+("template"===t.tag?t.if&&n?"("+t.if+")?"+(qo(t,e)||"undefined")+":undefined":qo(t,e)||"undefined":Lo(t,e))+"}",a=r?"":",proxy:true";return"{key:"+(t.slotTarget||'"default"')+",fn:"+i+a+"}"}function qo(t,e,n,r,i){var a=t.children;if(a.length){var o=a[0];if(1===a.length&&o.for&&"template"!==o.tag&&"slot"!==o.tag){var s=n?e.maybeComponent(o)?",1":",0":"";return""+(r||Lo)(o,e)+s}var u=n?function(t,e){for(var n=0,r=0;r<t.length;r++){var i=t[r];if(1===i.type){if(Go(i)||i.ifConditions&&i.ifConditions.some((function(t){return Go(t.block)}))){n=2;break}(e(i)||i.ifConditions&&i.ifConditions.some((function(t){return e(t.block)})))&&(n=1)}}return n}(a,e.maybeComponent):0,l=i||Ko;return"["+a.map((function(t){return l(t,e)})).join(",")+"]"+(u?","+u:"")}}function Go(t){return void 0!==t.for||"template"===t.tag||"slot"===t.tag}function Ko(t,e){return 1===t.type?Lo(t,e):3===t.type&&t.isComment?function(t){return"_e("+JSON.stringify(t.text)+")"}(t):function(t){return"_v("+(2===t.type?t.expression:Vo(JSON.stringify(t.text)))+")"}(t)}function Wo(t){for(var e="",n="",r=0;r<t.length;r++){var i=t[r],a=Vo(i.value);i.dynamic?n+=i.name+","+a+",":e+='"'+i.name+'":'+a+","}return e="{"+e.slice(0,-1)+"}",n?"_d("+e+",["+n.slice(0,-1)+"])":e}function Vo(t){return t.replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")}new RegExp("\\b"+"do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,super,throw,while,yield,delete,export,import,return,switch,default,extends,finally,continue,debugger,function,arguments".split(",").join("\\b|\\b")+"\\b"),new RegExp("\\b"+"delete,typeof,void".split(",").join("\\s*\\([^\\)]*\\)|\\b")+"\\s*\\([^\\)]*\\)");function Xo(t,e){try{return new Function(t)}catch(n){return e.push({err:n,code:t}),P}}function Jo(t){var e=Object.create(null);return function(n,r,i){(r=S({},r)).warn;delete r.warn;var a=r.delimiters?String(r.delimiters)+n:n;if(e[a])return e[a];var o=t(n,r);var s={},u=[];return s.render=Xo(o.render,u),s.staticRenderFns=o.staticRenderFns.map((function(t){return Xo(t,u)})),e[a]=s}}var Yo,Qo,Zo=(Yo=function(t,e){var n=oo(t.trim(),e);!1!==e.optimize&&xo(n,e);var r=Mo(n,e);return{ast:n,render:r.render,staticRenderFns:r.staticRenderFns}},function(t){function e(e,n){var r=Object.create(t),i=[],a=[];if(n)for(var o in n.modules&&(r.modules=(t.modules||[]).concat(n.modules)),n.directives&&(r.directives=S(Object.create(t.directives||null),n.directives)),n)"modules"!==o&&"directives"!==o&&(r[o]=n[o]);r.warn=function(t,e,n){(n?a:i).push(t)};var s=Yo(e.trim(),r);return s.errors=i,s.tips=a,s}return{compile:e,compileToFunctions:Jo(e)}})(yo),ts=(Zo.compile,Zo.compileToFunctions);function es(t){return(Qo=Qo||document.createElement("div")).innerHTML=t?'<a href="\n"/>':'<div a="\n"/>',Qo.innerHTML.indexOf("&#10;")>0}var ns=!!W&&es(!1),rs=!!W&&es(!0),is=x((function(t){var e=tr(t);return e&&e.innerHTML})),as=On.prototype.$mount;On.prototype.$mount=function(t,e){if((t=t&&tr(t))===document.body||t===document.documentElement)return this;var n=this.$options;if(!n.render){var r=n.template;if(r)if("string"==typeof r)"#"===r.charAt(0)&&(r=is(r));else{if(!r.nodeType)return this;r=r.innerHTML}else t&&(r=function(t){if(t.outerHTML)return t.outerHTML;var e=document.createElement("div");return e.appendChild(t.cloneNode(!0)),e.innerHTML}(t));if(r){0;var i=ts(r,{outputSourceRange:!1,shouldDecodeNewlines:ns,shouldDecodeNewlinesForHref:rs,delimiters:n.delimiters,comments:n.comments},this),a=i.render,o=i.staticRenderFns;n.render=a,n.staticRenderFns=o}}return as.call(this,t,e)},On.compile=ts,e.a=On}).call(this,n(1),n(9).setImmediate)},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},,function(t,e,n){"use strict";(function(t){n.d(e,"d",(function(){return b})),n.d(e,"c",(function(){return y})),n.d(e,"b",(function(){return w}));var r=("undefined"!=typeof window?window:void 0!==t?t:{}).__VUE_DEVTOOLS_GLOBAL_HOOK__;function i(t,e){Object.keys(t).forEach((function(n){return e(t[n],n)}))}function a(t){return null!==t&&"object"==typeof t}var o=function(t,e){this.runtime=e,this._children=Object.create(null),this._rawModule=t;var n=t.state;this.state=("function"==typeof n?n():n)||{}},s={namespaced:{configurable:!0}};s.namespaced.get=function(){return!!this._rawModule.namespaced},o.prototype.addChild=function(t,e){this._children[t]=e},o.prototype.removeChild=function(t){delete this._children[t]},o.prototype.getChild=function(t){return this._children[t]},o.prototype.hasChild=function(t){return t in this._children},o.prototype.update=function(t){this._rawModule.namespaced=t.namespaced,t.actions&&(this._rawModule.actions=t.actions),t.mutations&&(this._rawModule.mutations=t.mutations),t.getters&&(this._rawModule.getters=t.getters)},o.prototype.forEachChild=function(t){i(this._children,t)},o.prototype.forEachGetter=function(t){this._rawModule.getters&&i(this._rawModule.getters,t)},o.prototype.forEachAction=function(t){this._rawModule.actions&&i(this._rawModule.actions,t)},o.prototype.forEachMutation=function(t){this._rawModule.mutations&&i(this._rawModule.mutations,t)},Object.defineProperties(o.prototype,s);var u=function(t){this.register([],t,!1)};u.prototype.get=function(t){return t.reduce((function(t,e){return t.getChild(e)}),this.root)},u.prototype.getNamespace=function(t){var e=this.root;return t.reduce((function(t,n){return t+((e=e.getChild(n)).namespaced?n+"/":"")}),"")},u.prototype.update=function(t){!function t(e,n,r){0;if(n.update(r),r.modules)for(var i in r.modules){if(!n.getChild(i))return void 0;t(e.concat(i),n.getChild(i),r.modules[i])}}([],this.root,t)},u.prototype.register=function(t,e,n){var r=this;void 0===n&&(n=!0);var a=new o(e,n);0===t.length?this.root=a:this.get(t.slice(0,-1)).addChild(t[t.length-1],a);e.modules&&i(e.modules,(function(e,i){r.register(t.concat(i),e,n)}))},u.prototype.unregister=function(t){var e=this.get(t.slice(0,-1)),n=t[t.length-1];e.getChild(n).runtime&&e.removeChild(n)},u.prototype.isRegistered=function(t){var e=this.get(t.slice(0,-1)),n=t[t.length-1];return e.hasChild(n)};var l;var c=function(t){var e=this;void 0===t&&(t={}),!l&&"undefined"!=typeof window&&window.Vue&&g(window.Vue);var n=t.plugins;void 0===n&&(n=[]);var i=t.strict;void 0===i&&(i=!1),this._committing=!1,this._actions=Object.create(null),this._actionSubscribers=[],this._mutations=Object.create(null),this._wrappedGetters=Object.create(null),this._modules=new u(t),this._modulesNamespaceMap=Object.create(null),this._subscribers=[],this._watcherVM=new l,this._makeLocalGettersCache=Object.create(null);var a=this,o=this.dispatch,s=this.commit;this.dispatch=function(t,e){return o.call(a,t,e)},this.commit=function(t,e,n){return s.call(a,t,e,n)},this.strict=i;var c=this._modules.root.state;_(this,c,[],this._modules.root),d(this,c),n.forEach((function(t){return t(e)})),(void 0!==t.devtools?t.devtools:l.config.devtools)&&function(t){r&&(t._devtoolHook=r,r.emit("vuex:init",t),r.on("vuex:travel-to-state",(function(e){t.replaceState(e)})),t.subscribe((function(t,e){r.emit("vuex:mutation",t,e)}),{prepend:!0}),t.subscribeAction((function(t,e){r.emit("vuex:action",t,e)}),{prepend:!0}))}(this)},p={state:{configurable:!0}};function h(t,e,n){return e.indexOf(t)<0&&(n&&n.prepend?e.unshift(t):e.push(t)),function(){var n=e.indexOf(t);n>-1&&e.splice(n,1)}}function f(t,e){t._actions=Object.create(null),t._mutations=Object.create(null),t._wrappedGetters=Object.create(null),t._modulesNamespaceMap=Object.create(null);var n=t.state;_(t,n,[],t._modules.root,!0),d(t,n,e)}function d(t,e,n){var r=t._vm;t.getters={},t._makeLocalGettersCache=Object.create(null);var a=t._wrappedGetters,o={};i(a,(function(e,n){o[n]=function(t,e){return function(){return t(e)}}(e,t),Object.defineProperty(t.getters,n,{get:function(){return t._vm[n]},enumerable:!0})}));var s=l.config.silent;l.config.silent=!0,t._vm=new l({data:{$$state:e},computed:o}),l.config.silent=s,t.strict&&function(t){t._vm.$watch((function(){return this._data.$$state}),(function(){0}),{deep:!0,sync:!0})}(t),r&&(n&&t._withCommit((function(){r._data.$$state=null})),l.nextTick((function(){return r.$destroy()})))}function _(t,e,n,r,i){var a=!n.length,o=t._modules.getNamespace(n);if(r.namespaced&&(t._modulesNamespaceMap[o],t._modulesNamespaceMap[o]=r),!a&&!i){var s=v(e,n.slice(0,-1)),u=n[n.length-1];t._withCommit((function(){l.set(s,u,r.state)}))}var c=r.context=function(t,e,n){var r=""===e,i={dispatch:r?t.dispatch:function(n,r,i){var a=m(n,r,i),o=a.payload,s=a.options,u=a.type;return s&&s.root||(u=e+u),t.dispatch(u,o)},commit:r?t.commit:function(n,r,i){var a=m(n,r,i),o=a.payload,s=a.options,u=a.type;s&&s.root||(u=e+u),t.commit(u,o,s)}};return Object.defineProperties(i,{getters:{get:r?function(){return t.getters}:function(){return function(t,e){if(!t._makeLocalGettersCache[e]){var n={},r=e.length;Object.keys(t.getters).forEach((function(i){if(i.slice(0,r)===e){var a=i.slice(r);Object.defineProperty(n,a,{get:function(){return t.getters[i]},enumerable:!0})}})),t._makeLocalGettersCache[e]=n}return t._makeLocalGettersCache[e]}(t,e)}},state:{get:function(){return v(t.state,n)}}}),i}(t,o,n);r.forEachMutation((function(e,n){!function(t,e,n,r){(t._mutations[e]||(t._mutations[e]=[])).push((function(e){n.call(t,r.state,e)}))}(t,o+n,e,c)})),r.forEachAction((function(e,n){var r=e.root?n:o+n,i=e.handler||e;!function(t,e,n,r){(t._actions[e]||(t._actions[e]=[])).push((function(e){var i,a=n.call(t,{dispatch:r.dispatch,commit:r.commit,getters:r.getters,state:r.state,rootGetters:t.getters,rootState:t.state},e);return(i=a)&&"function"==typeof i.then||(a=Promise.resolve(a)),t._devtoolHook?a.catch((function(e){throw t._devtoolHook.emit("vuex:error",e),e})):a}))}(t,r,i,c)})),r.forEachGetter((function(e,n){!function(t,e,n,r){if(t._wrappedGetters[e])return void 0;t._wrappedGetters[e]=function(t){return n(r.state,r.getters,t.state,t.getters)}}(t,o+n,e,c)})),r.forEachChild((function(r,a){_(t,e,n.concat(a),r,i)}))}function v(t,e){return e.reduce((function(t,e){return t[e]}),t)}function m(t,e,n){return a(t)&&t.type&&(n=e,e=t,t=t.type),{type:t,payload:e,options:n}}function g(t){l&&t===l||function(t){if(Number(t.version.split(".")[0])>=2)t.mixin({beforeCreate:n});else{var e=t.prototype._init;t.prototype._init=function(t){void 0===t&&(t={}),t.init=t.init?[n].concat(t.init):n,e.call(this,t)}}function n(){var t=this.$options;t.store?this.$store="function"==typeof t.store?t.store():t.store:t.parent&&t.parent.$store&&(this.$store=t.parent.$store)}}(l=t)}p.state.get=function(){return this._vm._data.$$state},p.state.set=function(t){0},c.prototype.commit=function(t,e,n){var r=this,i=m(t,e,n),a=i.type,o=i.payload,s=(i.options,{type:a,payload:o}),u=this._mutations[a];u&&(this._withCommit((function(){u.forEach((function(t){t(o)}))})),this._subscribers.slice().forEach((function(t){return t(s,r.state)})))},c.prototype.dispatch=function(t,e){var n=this,r=m(t,e),i=r.type,a=r.payload,o={type:i,payload:a},s=this._actions[i];if(s){try{this._actionSubscribers.slice().filter((function(t){return t.before})).forEach((function(t){return t.before(o,n.state)}))}catch(t){0}return(s.length>1?Promise.all(s.map((function(t){return t(a)}))):s[0](a)).then((function(t){try{n._actionSubscribers.filter((function(t){return t.after})).forEach((function(t){return t.after(o,n.state)}))}catch(t){0}return t}))}},c.prototype.subscribe=function(t,e){return h(t,this._subscribers,e)},c.prototype.subscribeAction=function(t,e){return h("function"==typeof t?{before:t}:t,this._actionSubscribers,e)},c.prototype.watch=function(t,e,n){var r=this;return this._watcherVM.$watch((function(){return t(r.state,r.getters)}),e,n)},c.prototype.replaceState=function(t){var e=this;this._withCommit((function(){e._vm._data.$$state=t}))},c.prototype.registerModule=function(t,e,n){void 0===n&&(n={}),"string"==typeof t&&(t=[t]),this._modules.register(t,e),_(this,this.state,t,this._modules.get(t),n.preserveState),d(this,this.state)},c.prototype.unregisterModule=function(t){var e=this;"string"==typeof t&&(t=[t]),this._modules.unregister(t),this._withCommit((function(){var n=v(e.state,t.slice(0,-1));l.delete(n,t[t.length-1])})),f(this)},c.prototype.hasModule=function(t){return"string"==typeof t&&(t=[t]),this._modules.isRegistered(t)},c.prototype.hotUpdate=function(t){this._modules.update(t),f(this,!0)},c.prototype._withCommit=function(t){var e=this._committing;this._committing=!0,t(),this._committing=e},Object.defineProperties(c.prototype,p);var b=$((function(t,e){var n={};return k(e).forEach((function(e){var r=e.key,i=e.val;n[r]=function(){var e=this.$store.state,n=this.$store.getters;if(t){var r=O(this.$store,"mapState",t);if(!r)return;e=r.context.state,n=r.context.getters}return"function"==typeof i?i.call(this,e,n):e[i]},n[r].vuex=!0})),n})),y=$((function(t,e){var n={};return k(e).forEach((function(e){var r=e.key,i=e.val;n[r]=function(){for(var e=[],n=arguments.length;n--;)e[n]=arguments[n];var r=this.$store.commit;if(t){var a=O(this.$store,"mapMutations",t);if(!a)return;r=a.context.commit}return"function"==typeof i?i.apply(this,[r].concat(e)):r.apply(this.$store,[i].concat(e))}})),n})),w=$((function(t,e){var n={};return k(e).forEach((function(e){var r=e.key,i=e.val;i=t+i,n[r]=function(){if(!t||O(this.$store,"mapGetters",t))return this.$store.getters[i]},n[r].vuex=!0})),n})),x=$((function(t,e){var n={};return k(e).forEach((function(e){var r=e.key,i=e.val;n[r]=function(){for(var e=[],n=arguments.length;n--;)e[n]=arguments[n];var r=this.$store.dispatch;if(t){var a=O(this.$store,"mapActions",t);if(!a)return;r=a.context.dispatch}return"function"==typeof i?i.apply(this,[r].concat(e)):r.apply(this.$store,[i].concat(e))}})),n}));function k(t){return function(t){return Array.isArray(t)||a(t)}(t)?Array.isArray(t)?t.map((function(t){return{key:t,val:t}})):Object.keys(t).map((function(e){return{key:e,val:t[e]}})):[]}function $(t){return function(e,n){return"string"!=typeof e?(n=e,e=""):"/"!==e.charAt(e.length-1)&&(e+="/"),t(e,n)}}function O(t,e,n){return t._modulesNamespaceMap[n]}var E={Store:c,install:g,version:"3.3.0",mapState:b,mapMutations:y,mapGetters:w,mapActions:x,createNamespacedHelpers:function(t){return{mapState:b.bind(null,t),mapGetters:w.bind(null,t),mapMutations:y.bind(null,t),mapActions:x.bind(null,t)}}};e.a=E}).call(this,n(1))},function(t,e,n){"use strict";function r(t){return Object.prototype.toString.call(t).indexOf("Error")>-1}function i(t,e){return e instanceof t||e&&(e.name===t.name||e._name===t._name)}function a(t,e){for(var n in e)t[n]=e[n];return t}var o={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(t,e){var n=e.props,r=e.children,i=e.parent,o=e.data;o.routerView=!0;for(var u=i.$createElement,l=n.name,c=i.$route,p=i._routerViewCache||(i._routerViewCache={}),h=0,f=!1;i&&i._routerRoot!==i;){var d=i.$vnode?i.$vnode.data:{};d.routerView&&h++,d.keepAlive&&i._directInactive&&i._inactive&&(f=!0),i=i.$parent}if(o.routerViewDepth=h,f){var _=p[l],v=_&&_.component;return v?(_.configProps&&s(v,o,_.route,_.configProps),u(v,o,r)):u()}var m=c.matched[h],g=m&&m.components[l];if(!m||!g)return p[l]=null,u();p[l]={component:g},o.registerRouteInstance=function(t,e){var n=m.instances[l];(e&&n!==t||!e&&n===t)&&(m.instances[l]=e)},(o.hook||(o.hook={})).prepatch=function(t,e){m.instances[l]=e.componentInstance},o.hook.init=function(t){t.data.keepAlive&&t.componentInstance&&t.componentInstance!==m.instances[l]&&(m.instances[l]=t.componentInstance)};var b=m.props&&m.props[l];return b&&(a(p[l],{route:c,configProps:b}),s(g,o,c,b)),u(g,o,r)}};function s(t,e,n,r){var i=e.props=function(t,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(t);case"boolean":return e?t.params:void 0;default:0}}(n,r);if(i){i=e.props=a({},i);var o=e.attrs=e.attrs||{};for(var s in i)t.props&&s in t.props||(o[s]=i[s],delete i[s])}}var u=/[!'()*]/g,l=function(t){return"%"+t.charCodeAt(0).toString(16)},c=/%2C/g,p=function(t){return encodeURIComponent(t).replace(u,l).replace(c,",")},h=decodeURIComponent;function f(t){var e={};return(t=t.trim().replace(/^(\?|#|&)/,""))?(t.split("&").forEach((function(t){var n=t.replace(/\+/g," ").split("="),r=h(n.shift()),i=n.length>0?h(n.join("=")):null;void 0===e[r]?e[r]=i:Array.isArray(e[r])?e[r].push(i):e[r]=[e[r],i]})),e):e}function d(t){var e=t?Object.keys(t).map((function(e){var n=t[e];if(void 0===n)return"";if(null===n)return p(e);if(Array.isArray(n)){var r=[];return n.forEach((function(t){void 0!==t&&(null===t?r.push(p(e)):r.push(p(e)+"="+p(t)))})),r.join("&")}return p(e)+"="+p(n)})).filter((function(t){return t.length>0})).join("&"):null;return e?"?"+e:""}var _=/\/?$/;function v(t,e,n,r){var i=r&&r.options.stringifyQuery,a=e.query||{};try{a=m(a)}catch(t){}var o={name:e.name||t&&t.name,meta:t&&t.meta||{},path:e.path||"/",hash:e.hash||"",query:a,params:e.params||{},fullPath:y(e,i),matched:t?b(t):[]};return n&&(o.redirectedFrom=y(n,i)),Object.freeze(o)}function m(t){if(Array.isArray(t))return t.map(m);if(t&&"object"==typeof t){var e={};for(var n in t)e[n]=m(t[n]);return e}return t}var g=v(null,{path:"/"});function b(t){for(var e=[];t;)e.unshift(t),t=t.parent;return e}function y(t,e){var n=t.path,r=t.query;void 0===r&&(r={});var i=t.hash;return void 0===i&&(i=""),(n||"/")+(e||d)(r)+i}function w(t,e){return e===g?t===e:!!e&&(t.path&&e.path?t.path.replace(_,"")===e.path.replace(_,"")&&t.hash===e.hash&&x(t.query,e.query):!(!t.name||!e.name)&&(t.name===e.name&&t.hash===e.hash&&x(t.query,e.query)&&x(t.params,e.params)))}function x(t,e){if(void 0===t&&(t={}),void 0===e&&(e={}),!t||!e)return t===e;var n=Object.keys(t),r=Object.keys(e);return n.length===r.length&&n.every((function(n){var r=t[n],i=e[n];return"object"==typeof r&&"object"==typeof i?x(r,i):String(r)===String(i)}))}function k(t,e,n){var r=t.charAt(0);if("/"===r)return t;if("?"===r||"#"===r)return e+t;var i=e.split("/");n&&i[i.length-1]||i.pop();for(var a=t.replace(/^\//,"").split("/"),o=0;o<a.length;o++){var s=a[o];".."===s?i.pop():"."!==s&&i.push(s)}return""!==i[0]&&i.unshift(""),i.join("/")}function $(t){return t.replace(/\/\//g,"/")}var O=Array.isArray||function(t){return"[object Array]"==Object.prototype.toString.call(t)},E=z,A=P,C=function(t,e){return D(P(t,e))},j=D,S=I,T=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function P(t,e){for(var n,r=[],i=0,a=0,o="",s=e&&e.delimiter||"/";null!=(n=T.exec(t));){var u=n[0],l=n[1],c=n.index;if(o+=t.slice(a,c),a=c+u.length,l)o+=l[1];else{var p=t[a],h=n[2],f=n[3],d=n[4],_=n[5],v=n[6],m=n[7];o&&(r.push(o),o="");var g=null!=h&&null!=p&&p!==h,b="+"===v||"*"===v,y="?"===v||"*"===v,w=n[2]||s,x=d||_;r.push({name:f||i++,prefix:h||"",delimiter:w,optional:y,repeat:b,partial:g,asterisk:!!m,pattern:x?L(x):m?".*":"[^"+M(w)+"]+?"})}}return a<t.length&&(o+=t.substr(a)),o&&r.push(o),r}function R(t){return encodeURI(t).replace(/[\/?#]/g,(function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()}))}function D(t){for(var e=new Array(t.length),n=0;n<t.length;n++)"object"==typeof t[n]&&(e[n]=new RegExp("^(?:"+t[n].pattern+")$"));return function(n,r){for(var i="",a=n||{},o=(r||{}).pretty?R:encodeURIComponent,s=0;s<t.length;s++){var u=t[s];if("string"!=typeof u){var l,c=a[u.name];if(null==c){if(u.optional){u.partial&&(i+=u.prefix);continue}throw new TypeError('Expected "'+u.name+'" to be defined')}if(O(c)){if(!u.repeat)throw new TypeError('Expected "'+u.name+'" to not repeat, but received `'+JSON.stringify(c)+"`");if(0===c.length){if(u.optional)continue;throw new TypeError('Expected "'+u.name+'" to not be empty')}for(var p=0;p<c.length;p++){if(l=o(c[p]),!e[s].test(l))throw new TypeError('Expected all "'+u.name+'" to match "'+u.pattern+'", but received `'+JSON.stringify(l)+"`");i+=(0===p?u.prefix:u.delimiter)+l}}else{if(l=u.asterisk?encodeURI(c).replace(/[?#]/g,(function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()})):o(c),!e[s].test(l))throw new TypeError('Expected "'+u.name+'" to match "'+u.pattern+'", but received "'+l+'"');i+=u.prefix+l}}else i+=u}return i}}function M(t){return t.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function L(t){return t.replace(/([=!:$\/()])/g,"\\$1")}function N(t,e){return t.keys=e,t}function F(t){return t.sensitive?"":"i"}function I(t,e,n){O(e)||(n=e||n,e=[]);for(var r=(n=n||{}).strict,i=!1!==n.end,a="",o=0;o<t.length;o++){var s=t[o];if("string"==typeof s)a+=M(s);else{var u=M(s.prefix),l="(?:"+s.pattern+")";e.push(s),s.repeat&&(l+="(?:"+u+l+")*"),a+=l=s.optional?s.partial?u+"("+l+")?":"(?:"+u+"("+l+"))?":u+"("+l+")"}}var c=M(n.delimiter||"/"),p=a.slice(-c.length)===c;return r||(a=(p?a.slice(0,-c.length):a)+"(?:"+c+"(?=$))?"),a+=i?"$":r&&p?"":"(?="+c+"|$)",N(new RegExp("^"+a,F(n)),e)}function z(t,e,n){return O(e)||(n=e||n,e=[]),n=n||{},t instanceof RegExp?function(t,e){var n=t.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)e.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return N(t,e)}(t,e):O(t)?function(t,e,n){for(var r=[],i=0;i<t.length;i++)r.push(z(t[i],e,n).source);return N(new RegExp("(?:"+r.join("|")+")",F(n)),e)}(t,e,n):function(t,e,n){return I(P(t,n),e,n)}(t,e,n)}E.parse=A,E.compile=C,E.tokensToFunction=j,E.tokensToRegExp=S;var H=Object.create(null);function B(t,e,n){e=e||{};try{var r=H[t]||(H[t]=E.compile(t));return e.pathMatch&&(e[0]=e.pathMatch),r(e,{pretty:!0})}catch(t){return""}finally{delete e[0]}}function U(t,e,n,r){var i="string"==typeof t?{path:t}:t;if(i._normalized)return i;if(i.name){var o=(i=a({},t)).params;return o&&"object"==typeof o&&(i.params=a({},o)),i}if(!i.path&&i.params&&e){(i=a({},i))._normalized=!0;var s=a(a({},e.params),i.params);if(e.name)i.name=e.name,i.params=s;else if(e.matched.length){var u=e.matched[e.matched.length-1].path;i.path=B(u,s,e.path)}else 0;return i}var l=function(t){var e="",n="",r=t.indexOf("#");r>=0&&(e=t.slice(r),t=t.slice(0,r));var i=t.indexOf("?");return i>=0&&(n=t.slice(i+1),t=t.slice(0,i)),{path:t,query:n,hash:e}}(i.path||""),c=e&&e.path||"/",p=l.path?k(l.path,c,n||i.append):c,h=function(t,e,n){void 0===e&&(e={});var r,i=n||f;try{r=i(t||"")}catch(t){r={}}for(var a in e)r[a]=e[a];return r}(l.query,i.query,r&&r.options.parseQuery),d=i.hash||l.hash;return d&&"#"!==d.charAt(0)&&(d="#"+d),{_normalized:!0,path:p,query:h,hash:d}}var q,G=function(){},K={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},exact:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,event:{type:[String,Array],default:"click"}},render:function(t){var e=this,n=this.$router,r=this.$route,i=n.resolve(this.to,r,this.append),o=i.location,s=i.route,u=i.href,l={},c=n.options.linkActiveClass,p=n.options.linkExactActiveClass,h=null==c?"router-link-active":c,f=null==p?"router-link-exact-active":p,d=null==this.activeClass?h:this.activeClass,m=null==this.exactActiveClass?f:this.exactActiveClass,g=s.redirectedFrom?v(null,U(s.redirectedFrom),null,n):s;l[m]=w(r,g),l[d]=this.exact?l[m]:function(t,e){return 0===t.path.replace(_,"/").indexOf(e.path.replace(_,"/"))&&(!e.hash||t.hash===e.hash)&&function(t,e){for(var n in e)if(!(n in t))return!1;return!0}(t.query,e.query)}(r,g);var b=function(t){W(t)&&(e.replace?n.replace(o,G):n.push(o,G))},y={click:W};Array.isArray(this.event)?this.event.forEach((function(t){y[t]=b})):y[this.event]=b;var x={class:l},k=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:u,route:s,navigate:b,isActive:l[d],isExactActive:l[m]});if(k){if(1===k.length)return k[0];if(k.length>1||!k.length)return 0===k.length?t():t("span",{},k)}if("a"===this.tag)x.on=y,x.attrs={href:u};else{var $=function t(e){var n;if(e)for(var r=0;r<e.length;r++){if("a"===(n=e[r]).tag)return n;if(n.children&&(n=t(n.children)))return n}}(this.$slots.default);if($){$.isStatic=!1;var O=$.data=a({},$.data);for(var E in O.on=O.on||{},O.on){var A=O.on[E];E in y&&(O.on[E]=Array.isArray(A)?A:[A])}for(var C in y)C in O.on?O.on[C].push(y[C]):O.on[C]=b;($.data.attrs=a({},$.data.attrs)).href=u}else x.on=y}return t(this.tag,x,this.$slots.default)}};function W(t){if(!(t.metaKey||t.altKey||t.ctrlKey||t.shiftKey||t.defaultPrevented||void 0!==t.button&&0!==t.button)){if(t.currentTarget&&t.currentTarget.getAttribute){var e=t.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return t.preventDefault&&t.preventDefault(),!0}}var V="undefined"!=typeof window;function X(t,e,n,r){var i=e||[],a=n||Object.create(null),o=r||Object.create(null);t.forEach((function(t){!function t(e,n,r,i,a,o){var s=i.path,u=i.name;0;var l=i.pathToRegexpOptions||{},c=function(t,e,n){n||(t=t.replace(/\/$/,""));if("/"===t[0])return t;if(null==e)return t;return $(e.path+"/"+t)}(s,a,l.strict);"boolean"==typeof i.caseSensitive&&(l.sensitive=i.caseSensitive);var p={path:c,regex:J(c,l),components:i.components||{default:i.component},instances:{},name:u,parent:a,matchAs:o,redirect:i.redirect,beforeEnter:i.beforeEnter,meta:i.meta||{},props:null==i.props?{}:i.components?i.props:{default:i.props}};i.children&&i.children.forEach((function(i){var a=o?$(o+"/"+i.path):void 0;t(e,n,r,i,p,a)}));n[p.path]||(e.push(p.path),n[p.path]=p);if(void 0!==i.alias)for(var h=Array.isArray(i.alias)?i.alias:[i.alias],f=0;f<h.length;++f){0;var d={path:h[f],children:i.children};t(e,n,r,d,a,p.path||"/")}u&&(r[u]||(r[u]=p))}(i,a,o,t)}));for(var s=0,u=i.length;s<u;s++)"*"===i[s]&&(i.push(i.splice(s,1)[0]),u--,s--);return{pathList:i,pathMap:a,nameMap:o}}function J(t,e){return E(t,[],e)}function Y(t,e){var n=X(t),r=n.pathList,i=n.pathMap,a=n.nameMap;function o(t,n,o){var s=U(t,n,!1,e),l=s.name;if(l){var c=a[l];if(!c)return u(null,s);var p=c.regex.keys.filter((function(t){return!t.optional})).map((function(t){return t.name}));if("object"!=typeof s.params&&(s.params={}),n&&"object"==typeof n.params)for(var h in n.params)!(h in s.params)&&p.indexOf(h)>-1&&(s.params[h]=n.params[h]);return s.path=B(c.path,s.params),u(c,s,o)}if(s.path){s.params={};for(var f=0;f<r.length;f++){var d=r[f],_=i[d];if(Q(_.regex,s.path,s.params))return u(_,s,o)}}return u(null,s)}function s(t,n){var r=t.redirect,i="function"==typeof r?r(v(t,n,null,e)):r;if("string"==typeof i&&(i={path:i}),!i||"object"!=typeof i)return u(null,n);var s=i,l=s.name,c=s.path,p=n.query,h=n.hash,f=n.params;if(p=s.hasOwnProperty("query")?s.query:p,h=s.hasOwnProperty("hash")?s.hash:h,f=s.hasOwnProperty("params")?s.params:f,l){a[l];return o({_normalized:!0,name:l,query:p,hash:h,params:f},void 0,n)}if(c){var d=function(t,e){return k(t,e.parent?e.parent.path:"/",!0)}(c,t);return o({_normalized:!0,path:B(d,f),query:p,hash:h},void 0,n)}return u(null,n)}function u(t,n,r){return t&&t.redirect?s(t,r||n):t&&t.matchAs?function(t,e,n){var r=o({_normalized:!0,path:B(n,e.params)});if(r){var i=r.matched,a=i[i.length-1];return e.params=r.params,u(a,e)}return u(null,e)}(0,n,t.matchAs):v(t,n,r,e)}return{match:o,addRoutes:function(t){X(t,r,i,a)}}}function Q(t,e,n){var r=e.match(t);if(!r)return!1;if(!n)return!0;for(var i=1,a=r.length;i<a;++i){var o=t.keys[i-1],s="string"==typeof r[i]?decodeURIComponent(r[i]):r[i];o&&(n[o.name||"pathMatch"]=s)}return!0}var Z=V&&window.performance&&window.performance.now?window.performance:Date;function tt(){return Z.now().toFixed(3)}var et=tt();function nt(){return et}function rt(t){return et=t}var it=Object.create(null);function at(){var t=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(t,"");window.history.replaceState({key:nt()},"",e),window.addEventListener("popstate",(function(t){st(),t.state&&t.state.key&&rt(t.state.key)}))}function ot(t,e,n,r){if(t.app){var i=t.options.scrollBehavior;i&&t.app.$nextTick((function(){var a=function(){var t=nt();if(t)return it[t]}(),o=i.call(t,e,n,r?a:null);o&&("function"==typeof o.then?o.then((function(t){ht(t,a)})).catch((function(t){0})):ht(o,a))}))}}function st(){var t=nt();t&&(it[t]={x:window.pageXOffset,y:window.pageYOffset})}function ut(t){return ct(t.x)||ct(t.y)}function lt(t){return{x:ct(t.x)?t.x:window.pageXOffset,y:ct(t.y)?t.y:window.pageYOffset}}function ct(t){return"number"==typeof t}var pt=/^#\d/;function ht(t,e){var n,r="object"==typeof t;if(r&&"string"==typeof t.selector){var i=pt.test(t.selector)?document.getElementById(t.selector.slice(1)):document.querySelector(t.selector);if(i){var a=t.offset&&"object"==typeof t.offset?t.offset:{};e=function(t,e){var n=document.documentElement.getBoundingClientRect(),r=t.getBoundingClientRect();return{x:r.left-n.left-e.x,y:r.top-n.top-e.y}}(i,a={x:ct((n=a).x)?n.x:0,y:ct(n.y)?n.y:0})}else ut(t)&&(e=lt(t))}else r&&ut(t)&&(e=lt(t));e&&window.scrollTo(e.x,e.y)}var ft,dt=V&&((-1===(ft=window.navigator.userAgent).indexOf("Android 2.")&&-1===ft.indexOf("Android 4.0")||-1===ft.indexOf("Mobile Safari")||-1!==ft.indexOf("Chrome")||-1!==ft.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history);function _t(t,e){st();var n=window.history;try{if(e){var r=a({},n.state);r.key=nt(),n.replaceState(r,"",t)}else n.pushState({key:rt(tt())},"",t)}catch(n){window.location[e?"replace":"assign"](t)}}function vt(t){_t(t,!0)}function mt(t,e,n){var r=function(i){i>=t.length?n():t[i]?e(t[i],(function(){r(i+1)})):r(i+1)};r(0)}function gt(t){return function(e,n,i){var a=!1,o=0,s=null;bt(t,(function(t,e,n,u){if("function"==typeof t&&void 0===t.cid){a=!0,o++;var l,c=xt((function(e){var r;((r=e).__esModule||wt&&"Module"===r[Symbol.toStringTag])&&(e=e.default),t.resolved="function"==typeof e?e:q.extend(e),n.components[u]=e,--o<=0&&i()})),p=xt((function(t){var e="Failed to resolve async component "+u+": "+t;s||(s=r(t)?t:new Error(e),i(s))}));try{l=t(c,p)}catch(t){p(t)}if(l)if("function"==typeof l.then)l.then(c,p);else{var h=l.component;h&&"function"==typeof h.then&&h.then(c,p)}}})),a||i()}}function bt(t,e){return yt(t.map((function(t){return Object.keys(t.components).map((function(n){return e(t.components[n],t.instances[n],t,n)}))})))}function yt(t){return Array.prototype.concat.apply([],t)}var wt="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function xt(t){var e=!1;return function(){for(var n=[],r=arguments.length;r--;)n[r]=arguments[r];if(!e)return e=!0,t.apply(this,n)}}var kt=function(t){function e(e){t.call(this),this.name=this._name="NavigationDuplicated",this.message='Navigating to current location ("'+e.fullPath+'") is not allowed',Object.defineProperty(this,"stack",{value:(new t).stack,writable:!0,configurable:!0})}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(Error);kt._name="NavigationDuplicated";var $t=function(t,e){this.router=t,this.base=function(t){if(!t)if(V){var e=document.querySelector("base");t=(t=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else t="/";"/"!==t.charAt(0)&&(t="/"+t);return t.replace(/\/$/,"")}(e),this.current=g,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[]};function Ot(t,e,n,r){var i=bt(t,(function(t,r,i,a){var o=function(t,e){"function"!=typeof t&&(t=q.extend(t));return t.options[e]}(t,e);if(o)return Array.isArray(o)?o.map((function(t){return n(t,r,i,a)})):n(o,r,i,a)}));return yt(r?i.reverse():i)}function Et(t,e){if(e)return function(){return t.apply(e,arguments)}}$t.prototype.listen=function(t){this.cb=t},$t.prototype.onReady=function(t,e){this.ready?t():(this.readyCbs.push(t),e&&this.readyErrorCbs.push(e))},$t.prototype.onError=function(t){this.errorCbs.push(t)},$t.prototype.transitionTo=function(t,e,n){var r=this,i=this.router.match(t,this.current);this.confirmTransition(i,(function(){r.updateRoute(i),e&&e(i),r.ensureURL(),r.ready||(r.ready=!0,r.readyCbs.forEach((function(t){t(i)})))}),(function(t){n&&n(t),t&&!r.ready&&(r.ready=!0,r.readyErrorCbs.forEach((function(e){e(t)})))}))},$t.prototype.confirmTransition=function(t,e,n){var a=this,o=this.current,s=function(t){!i(kt,t)&&r(t)&&(a.errorCbs.length?a.errorCbs.forEach((function(e){e(t)})):console.error(t)),n&&n(t)};if(w(t,o)&&t.matched.length===o.matched.length)return this.ensureURL(),s(new kt(t));var u=function(t,e){var n,r=Math.max(t.length,e.length);for(n=0;n<r&&t[n]===e[n];n++);return{updated:e.slice(0,n),activated:e.slice(n),deactivated:t.slice(n)}}(this.current.matched,t.matched),l=u.updated,c=u.deactivated,p=u.activated,h=[].concat(function(t){return Ot(t,"beforeRouteLeave",Et,!0)}(c),this.router.beforeHooks,function(t){return Ot(t,"beforeRouteUpdate",Et)}(l),p.map((function(t){return t.beforeEnter})),gt(p));this.pending=t;var f=function(e,n){if(a.pending!==t)return s();try{e(t,o,(function(t){!1===t||r(t)?(a.ensureURL(!0),s(t)):"string"==typeof t||"object"==typeof t&&("string"==typeof t.path||"string"==typeof t.name)?(s(),"object"==typeof t&&t.replace?a.replace(t):a.push(t)):n(t)}))}catch(t){s(t)}};mt(h,f,(function(){var n=[];mt(function(t,e,n){return Ot(t,"beforeRouteEnter",(function(t,r,i,a){return function(t,e,n,r,i){return function(a,o,s){return t(a,o,(function(t){"function"==typeof t&&r.push((function(){!function t(e,n,r,i){n[r]&&!n[r]._isBeingDestroyed?e(n[r]):i()&&setTimeout((function(){t(e,n,r,i)}),16)}(t,e.instances,n,i)})),s(t)}))}}(t,i,a,e,n)}))}(p,n,(function(){return a.current===t})).concat(a.router.resolveHooks),f,(function(){if(a.pending!==t)return s();a.pending=null,e(t),a.router.app&&a.router.app.$nextTick((function(){n.forEach((function(t){t()}))}))}))}))},$t.prototype.updateRoute=function(t){var e=this.current;this.current=t,this.cb&&this.cb(t),this.router.afterHooks.forEach((function(n){n&&n(t,e)}))};var At=function(t){function e(e,n){var r=this;t.call(this,e,n);var i=e.options.scrollBehavior,a=dt&&i;a&&at();var o=Ct(this.base);window.addEventListener("popstate",(function(t){var n=r.current,i=Ct(r.base);r.current===g&&i===o||r.transitionTo(i,(function(t){a&&ot(e,t,n,!0)}))}))}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.go=function(t){window.history.go(t)},e.prototype.push=function(t,e,n){var r=this,i=this.current;this.transitionTo(t,(function(t){_t($(r.base+t.fullPath)),ot(r.router,t,i,!1),e&&e(t)}),n)},e.prototype.replace=function(t,e,n){var r=this,i=this.current;this.transitionTo(t,(function(t){vt($(r.base+t.fullPath)),ot(r.router,t,i,!1),e&&e(t)}),n)},e.prototype.ensureURL=function(t){if(Ct(this.base)!==this.current.fullPath){var e=$(this.base+this.current.fullPath);t?_t(e):vt(e)}},e.prototype.getCurrentLocation=function(){return Ct(this.base)},e}($t);function Ct(t){var e=decodeURI(window.location.pathname);return t&&0===e.indexOf(t)&&(e=e.slice(t.length)),(e||"/")+window.location.search+window.location.hash}var jt=function(t){function e(e,n,r){t.call(this,e,n),r&&function(t){var e=Ct(t);if(!/^\/#/.test(e))return window.location.replace($(t+"/#"+e)),!0}(this.base)||St()}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var t=this,e=this.router.options.scrollBehavior,n=dt&&e;n&&at(),window.addEventListener(dt?"popstate":"hashchange",(function(){var e=t.current;St()&&t.transitionTo(Tt(),(function(r){n&&ot(t.router,r,e,!0),dt||Dt(r.fullPath)}))}))},e.prototype.push=function(t,e,n){var r=this,i=this.current;this.transitionTo(t,(function(t){Rt(t.fullPath),ot(r.router,t,i,!1),e&&e(t)}),n)},e.prototype.replace=function(t,e,n){var r=this,i=this.current;this.transitionTo(t,(function(t){Dt(t.fullPath),ot(r.router,t,i,!1),e&&e(t)}),n)},e.prototype.go=function(t){window.history.go(t)},e.prototype.ensureURL=function(t){var e=this.current.fullPath;Tt()!==e&&(t?Rt(e):Dt(e))},e.prototype.getCurrentLocation=function(){return Tt()},e}($t);function St(){var t=Tt();return"/"===t.charAt(0)||(Dt("/"+t),!1)}function Tt(){var t=window.location.href,e=t.indexOf("#");if(e<0)return"";var n=(t=t.slice(e+1)).indexOf("?");if(n<0){var r=t.indexOf("#");t=r>-1?decodeURI(t.slice(0,r))+t.slice(r):decodeURI(t)}else t=decodeURI(t.slice(0,n))+t.slice(n);return t}function Pt(t){var e=window.location.href,n=e.indexOf("#");return(n>=0?e.slice(0,n):e)+"#"+t}function Rt(t){dt?_t(Pt(t)):window.location.hash=t}function Dt(t){dt?vt(Pt(t)):window.location.replace(Pt(t))}var Mt=function(t){function e(e,n){t.call(this,e,n),this.stack=[],this.index=-1}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.push=function(t,e,n){var r=this;this.transitionTo(t,(function(t){r.stack=r.stack.slice(0,r.index+1).concat(t),r.index++,e&&e(t)}),n)},e.prototype.replace=function(t,e,n){var r=this;this.transitionTo(t,(function(t){r.stack=r.stack.slice(0,r.index).concat(t),e&&e(t)}),n)},e.prototype.go=function(t){var e=this,n=this.index+t;if(!(n<0||n>=this.stack.length)){var r=this.stack[n];this.confirmTransition(r,(function(){e.index=n,e.updateRoute(r)}),(function(t){i(kt,t)&&(e.index=n)}))}},e.prototype.getCurrentLocation=function(){var t=this.stack[this.stack.length-1];return t?t.fullPath:"/"},e.prototype.ensureURL=function(){},e}($t),Lt=function(t){void 0===t&&(t={}),this.app=null,this.apps=[],this.options=t,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Y(t.routes||[],this);var e=t.mode||"hash";switch(this.fallback="history"===e&&!dt&&!1!==t.fallback,this.fallback&&(e="hash"),V||(e="abstract"),this.mode=e,e){case"history":this.history=new At(this,t.base);break;case"hash":this.history=new jt(this,t.base,this.fallback);break;case"abstract":this.history=new Mt(this,t.base);break;default:0}},Nt={currentRoute:{configurable:!0}};function Ft(t,e){return t.push(e),function(){var n=t.indexOf(e);n>-1&&t.splice(n,1)}}Lt.prototype.match=function(t,e,n){return this.matcher.match(t,e,n)},Nt.currentRoute.get=function(){return this.history&&this.history.current},Lt.prototype.init=function(t){var e=this;if(this.apps.push(t),t.$once("hook:destroyed",(function(){var n=e.apps.indexOf(t);n>-1&&e.apps.splice(n,1),e.app===t&&(e.app=e.apps[0]||null)})),!this.app){this.app=t;var n=this.history;if(n instanceof At)n.transitionTo(n.getCurrentLocation());else if(n instanceof jt){var r=function(){n.setupListeners()};n.transitionTo(n.getCurrentLocation(),r,r)}n.listen((function(t){e.apps.forEach((function(e){e._route=t}))}))}},Lt.prototype.beforeEach=function(t){return Ft(this.beforeHooks,t)},Lt.prototype.beforeResolve=function(t){return Ft(this.resolveHooks,t)},Lt.prototype.afterEach=function(t){return Ft(this.afterHooks,t)},Lt.prototype.onReady=function(t,e){this.history.onReady(t,e)},Lt.prototype.onError=function(t){this.history.onError(t)},Lt.prototype.push=function(t,e,n){var r=this;if(!e&&!n&&"undefined"!=typeof Promise)return new Promise((function(e,n){r.history.push(t,e,n)}));this.history.push(t,e,n)},Lt.prototype.replace=function(t,e,n){var r=this;if(!e&&!n&&"undefined"!=typeof Promise)return new Promise((function(e,n){r.history.replace(t,e,n)}));this.history.replace(t,e,n)},Lt.prototype.go=function(t){this.history.go(t)},Lt.prototype.back=function(){this.go(-1)},Lt.prototype.forward=function(){this.go(1)},Lt.prototype.getMatchedComponents=function(t){var e=t?t.matched?t:this.resolve(t).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(t){return Object.keys(t.components).map((function(e){return t.components[e]}))}))):[]},Lt.prototype.resolve=function(t,e,n){var r=U(t,e=e||this.history.current,n,this),i=this.match(r,e),a=i.redirectedFrom||i.fullPath;return{location:r,route:i,href:function(t,e,n){var r="hash"===n?"#"+e:e;return t?$(t+"/"+r):r}(this.history.base,a,this.mode),normalizedTo:r,resolved:i}},Lt.prototype.addRoutes=function(t){this.matcher.addRoutes(t),this.history.current!==g&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Lt.prototype,Nt),Lt.install=function t(e){if(!t.installed||q!==e){t.installed=!0,q=e;var n=function(t){return void 0!==t},r=function(t,e){var r=t.$options._parentVnode;n(r)&&n(r=r.data)&&n(r=r.registerRouteInstance)&&r(t,e)};e.mixin({beforeCreate:function(){n(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",o),e.component("RouterLink",K);var i=e.config.optionMergeStrategies;i.beforeRouteEnter=i.beforeRouteLeave=i.beforeRouteUpdate=i.created}},Lt.version="3.1.5",V&&window.Vue&&window.Vue.use(Lt),e.a=Lt},function(t,e,n){"use strict";function r(t,e,n,r,i,a,o,s){var u,l="function"==typeof t?t.options:t;if(e&&(l.render=e,l.staticRenderFns=n,l._compiled=!0),r&&(l.functional=!0),a&&(l._scopeId="data-v-"+a),o?(u=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),i&&i.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(o)},l._ssrRegister=u):i&&(u=s?function(){i.call(this,this.$root.$options.shadowRoot)}:i),u)if(l.functional){l._injectStyles=u;var c=l.render;l.render=function(t,e){return u.call(e),c(t,e)}}else{var p=l.beforeCreate;l.beforeCreate=p?[].concat(p,u):[u]}return{exports:t,options:l}}n.d(e,"a",(function(){return r}))},function(module,exports,__webpack_require__){var factory;factory=function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={exports:{},id:r,loaded:!1};return t[r].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}return n.m=t,n.c=e,n.p="",n(0)}([function(t,e,n){var r,i=n(1),a=n(3),o=n(5),s=n(20),u=n(23),l=n(25);"undefined"!=typeof window&&(r=n(27));var c={Handler:i,Random:o,Util:a,XHR:r,RE:s,toJSONSchema:u,valid:l,heredoc:a.heredoc,setup:function(t){return r.setup(t)},_mocked:{},version:"1.0.1-beta3"};r&&(r.Mock=c),c.mock=function(t,e,n){return 1===arguments.length?i.gen(t):(2===arguments.length&&(n=e,e=void 0),r&&(window.XMLHttpRequest=r),c._mocked[t+(e||"")]={rurl:t,rtype:e,template:n},c)},t.exports=c},function(module,exports,__webpack_require__){var Constant=__webpack_require__(2),Util=__webpack_require__(3),Parser=__webpack_require__(4),Random=__webpack_require__(5),RE=__webpack_require__(20),Handler={extend:Util.extend,gen:function(t,e,n){e=null==e?"":e+"",n={path:(n=n||{}).path||[Constant.GUID],templatePath:n.templatePath||[Constant.GUID++],currentContext:n.currentContext,templateCurrentContext:n.templateCurrentContext||t,root:n.root||n.currentContext,templateRoot:n.templateRoot||n.templateCurrentContext||t};var r,i=Parser.parse(e),a=Util.type(t);return Handler[a]?(r=Handler[a]({type:a,template:t,name:e,parsedName:e?e.replace(Constant.RE_KEY,"$1"):e,rule:i,context:n}),n.root||(n.root=r),r):t}};Handler.extend({array:function(t){var e,n,r=[];if(0===t.template.length)return r;if(t.rule.parameters)if(1===t.rule.min&&void 0===t.rule.max)t.context.path.push(t.name),t.context.templatePath.push(t.name),r=Random.pick(Handler.gen(t.template,void 0,{path:t.context.path,templatePath:t.context.templatePath,currentContext:r,templateCurrentContext:t.template,root:t.context.root||r,templateRoot:t.context.templateRoot||t.template})),t.context.path.pop(),t.context.templatePath.pop();else if(t.rule.parameters[2])t.template.__order_index=t.template.__order_index||0,t.context.path.push(t.name),t.context.templatePath.push(t.name),r=Handler.gen(t.template,void 0,{path:t.context.path,templatePath:t.context.templatePath,currentContext:r,templateCurrentContext:t.template,root:t.context.root||r,templateRoot:t.context.templateRoot||t.template})[t.template.__order_index%t.template.length],t.template.__order_index+=+t.rule.parameters[2],t.context.path.pop(),t.context.templatePath.pop();else for(e=0;e<t.rule.count;e++)for(n=0;n<t.template.length;n++)t.context.path.push(r.length),t.context.templatePath.push(n),r.push(Handler.gen(t.template[n],r.length,{path:t.context.path,templatePath:t.context.templatePath,currentContext:r,templateCurrentContext:t.template,root:t.context.root||r,templateRoot:t.context.templateRoot||t.template})),t.context.path.pop(),t.context.templatePath.pop();else for(e=0;e<t.template.length;e++)t.context.path.push(e),t.context.templatePath.push(e),r.push(Handler.gen(t.template[e],e,{path:t.context.path,templatePath:t.context.templatePath,currentContext:r,templateCurrentContext:t.template,root:t.context.root||r,templateRoot:t.context.templateRoot||t.template})),t.context.path.pop(),t.context.templatePath.pop();return r},object:function(t){var e,n,r,i,a,o,s={};if(null!=t.rule.min)for(e=Util.keys(t.template),e=(e=Random.shuffle(e)).slice(0,t.rule.count),o=0;o<e.length;o++)i=(r=e[o]).replace(Constant.RE_KEY,"$1"),t.context.path.push(i),t.context.templatePath.push(r),s[i]=Handler.gen(t.template[r],r,{path:t.context.path,templatePath:t.context.templatePath,currentContext:s,templateCurrentContext:t.template,root:t.context.root||s,templateRoot:t.context.templateRoot||t.template}),t.context.path.pop(),t.context.templatePath.pop();else{for(r in e=[],n=[],t.template)("function"==typeof t.template[r]?n:e).push(r);for(e=e.concat(n),o=0;o<e.length;o++)i=(r=e[o]).replace(Constant.RE_KEY,"$1"),t.context.path.push(i),t.context.templatePath.push(r),s[i]=Handler.gen(t.template[r],r,{path:t.context.path,templatePath:t.context.templatePath,currentContext:s,templateCurrentContext:t.template,root:t.context.root||s,templateRoot:t.context.templateRoot||t.template}),t.context.path.pop(),t.context.templatePath.pop(),(a=r.match(Constant.RE_KEY))&&a[2]&&"number"===Util.type(t.template[r])&&(t.template[r]+=parseInt(a[2],10))}return s},number:function(t){var e,n;if(t.rule.decimal){for(t.template+="",(n=t.template.split("."))[0]=t.rule.range?t.rule.count:n[0],n[1]=(n[1]||"").slice(0,t.rule.dcount);n[1].length<t.rule.dcount;)n[1]+=n[1].length<t.rule.dcount-1?Random.character("number"):Random.character("123456789");e=parseFloat(n.join("."),10)}else e=t.rule.range&&!t.rule.parameters[2]?t.rule.count:t.template;return e},boolean:function(t){return t.rule.parameters?Random.bool(t.rule.min,t.rule.max,t.template):t.template},string:function(t){var e,n,r,i,a="";if(t.template.length){for(null==t.rule.count&&(a+=t.template),e=0;e<t.rule.count;e++)a+=t.template;for(n=a.match(Constant.RE_PLACEHOLDER)||[],e=0;e<n.length;e++)if(r=n[e],/^\\/.test(r))n.splice(e--,1);else{if(i=Handler.placeholder(r,t.context.currentContext,t.context.templateCurrentContext,t),1===n.length&&r===a&&typeof i!=typeof a){a=i;break}a=a.replace(r,i)}}else a=t.rule.range?Random.string(t.rule.count):t.template;return a},function:function(t){return t.template.call(t.context.currentContext,t)},regexp:function(t){var e="";null==t.rule.count&&(e+=t.template.source);for(var n=0;n<t.rule.count;n++)e+=t.template.source;return RE.Handler.gen(RE.Parser.parse(e))}}),Handler.extend({_all:function(){var t={};for(var e in Random)t[e.toLowerCase()]=e;return t},placeholder:function(placeholder,obj,templateContext,options){Constant.RE_PLACEHOLDER.exec("");var parts=Constant.RE_PLACEHOLDER.exec(placeholder),key=parts&&parts[1],lkey=key&&key.toLowerCase(),okey=this._all()[lkey],params=parts&&parts[2]||"",pathParts=this.splitPathToArray(key);try{params=eval("(function(){ return [].splice.call(arguments, 0 ) })("+params+")")}catch(t){params=parts[2].split(/,\s*/)}if(obj&&key in obj)return obj[key];if("/"===key.charAt(0)||pathParts.length>1)return this.getValueByKeyPath(key,options);if(templateContext&&"object"==typeof templateContext&&key in templateContext&&placeholder!==templateContext[key])return templateContext[key]=Handler.gen(templateContext[key],key,{currentContext:obj,templateCurrentContext:templateContext}),templateContext[key];if(!(key in Random)&&!(lkey in Random)&&!(okey in Random))return placeholder;for(var i=0;i<params.length;i++)Constant.RE_PLACEHOLDER.exec(""),Constant.RE_PLACEHOLDER.test(params[i])&&(params[i]=Handler.placeholder(params[i],obj,templateContext,options));var handle=Random[key]||Random[lkey]||Random[okey];switch(Util.type(handle)){case"array":return Random.pick(handle);case"function":handle.options=options;var re=handle.apply(Random,params);return void 0===re&&(re=""),delete handle.options,re}},getValueByKeyPath:function(t,e){var n=t,r=this.splitPathToArray(t),i=[];"/"===t.charAt(0)?i=[e.context.path[0]].concat(this.normalizePath(r)):r.length>1&&((i=e.context.path.slice(0)).pop(),i=this.normalizePath(i.concat(r)));try{t=r[r.length-1];for(var a=e.context.root,o=e.context.templateRoot,s=1;s<i.length-1;s++)a=a[i[s]],o=o[i[s]];if(a&&t in a)return a[t];if(o&&"object"==typeof o&&t in o&&n!==o[t])return o[t]=Handler.gen(o[t],t,{currentContext:a,templateCurrentContext:o}),o[t]}catch(t){}return"@"+r.join("/")},normalizePath:function(t){for(var e=[],n=0;n<t.length;n++)switch(t[n]){case"..":e.pop();break;case".":break;default:e.push(t[n])}return e},splitPathToArray:function(t){var e=t.split(/\/+/);return e[e.length-1]||(e=e.slice(0,-1)),e[0]||(e=e.slice(1)),e}}),module.exports=Handler},function(t,e){t.exports={GUID:1,RE_KEY:/(.+)\|(?:\+(\d+)|([\+\-]?\d+-?[\+\-]?\d*)?(?:\.(\d+-?\d*))?)/,RE_RANGE:/([\+\-]?\d+)-?([\+\-]?\d+)?/,RE_PLACEHOLDER:/\\*@([^@#%&()\?\s]+)(?:\((.*?)\))?/g}},function(t,e){var n={extend:function(){var t,e,r,i,a,o=arguments[0]||{},s=1,u=arguments.length;for(1===u&&(o=this,s=0);s<u;s++)if(t=arguments[s])for(e in t)r=o[e],o!==(i=t[e])&&void 0!==i&&(n.isArray(i)||n.isObject(i)?(n.isArray(i)&&(a=r&&n.isArray(r)?r:[]),n.isObject(i)&&(a=r&&n.isObject(r)?r:{}),o[e]=n.extend(a,i)):o[e]=i);return o},each:function(t,e,n){var r,i;if("number"===this.type(t))for(r=0;r<t;r++)e(r,r);else if(t.length===+t.length)for(r=0;r<t.length&&!1!==e.call(n,t[r],r,t);r++);else for(i in t)if(!1===e.call(n,t[i],i,t))break},type:function(t){return null==t?String(t):Object.prototype.toString.call(t).match(/\[object (\w+)\]/)[1].toLowerCase()}};n.each("String Object Array RegExp Function".split(" "),(function(t){n["is"+t]=function(e){return n.type(e)===t.toLowerCase()}})),n.isObjectOrArray=function(t){return n.isObject(t)||n.isArray(t)},n.isNumeric=function(t){return!isNaN(parseFloat(t))&&isFinite(t)},n.keys=function(t){var e=[];for(var n in t)t.hasOwnProperty(n)&&e.push(n);return e},n.values=function(t){var e=[];for(var n in t)t.hasOwnProperty(n)&&e.push(t[n]);return e},n.heredoc=function(t){return t.toString().replace(/^[^\/]+\/\*!?/,"").replace(/\*\/[^\/]+$/,"").replace(/^[\s\xA0]+/,"").replace(/[\s\xA0]+$/,"")},n.noop=function(){},t.exports=n},function(t,e,n){var r=n(2),i=n(5);t.exports={parse:function(t){var e=((t=null==t?"":t+"")||"").match(r.RE_KEY),n=e&&e[3]&&e[3].match(r.RE_RANGE),a=n&&n[1]&&parseInt(n[1],10),o=n&&n[2]&&parseInt(n[2],10),s=n?n[2]?i.integer(a,o):parseInt(n[1],10):void 0,u=e&&e[4]&&e[4].match(r.RE_RANGE),l=u&&u[1]&&parseInt(u[1],10),c=u&&u[2]&&parseInt(u[2],10),p={parameters:e,range:n,min:a,max:o,count:s,decimal:u,dmin:l,dmax:c,dcount:u?!u[2]&&parseInt(u[1],10)||i.integer(l,c):void 0};for(var h in p)if(null!=p[h])return p;return{}}}},function(t,e,n){var r={extend:n(3).extend};r.extend(n(6)),r.extend(n(7)),r.extend(n(8)),r.extend(n(10)),r.extend(n(13)),r.extend(n(15)),r.extend(n(16)),r.extend(n(17)),r.extend(n(14)),r.extend(n(19)),t.exports=r},function(t,e){t.exports={boolean:function(t,e,n){return void 0!==n?(t=void 0===t||isNaN(t)?1:parseInt(t,10),e=void 0===e||isNaN(e)?1:parseInt(e,10),Math.random()>1/(t+e)*t?!n:n):Math.random()>=.5},bool:function(t,e,n){return this.boolean(t,e,n)},natural:function(t,e){return t=void 0!==t?parseInt(t,10):0,e=void 0!==e?parseInt(e,10):9007199254740992,Math.round(Math.random()*(e-t))+t},integer:function(t,e){return t=void 0!==t?parseInt(t,10):-9007199254740992,e=void 0!==e?parseInt(e,10):9007199254740992,Math.round(Math.random()*(e-t))+t},int:function(t,e){return this.integer(t,e)},float:function(t,e,n,r){n=void 0===n?0:n,n=Math.max(Math.min(n,17),0),r=void 0===r?17:r,r=Math.max(Math.min(r,17),0);for(var i=this.integer(t,e)+".",a=0,o=this.natural(n,r);a<o;a++)i+=a<o-1?this.character("number"):this.character("123456789");return parseFloat(i,10)},character:function(t){var e={lower:"abcdefghijklmnopqrstuvwxyz",upper:"ABCDEFGHIJKLMNOPQRSTUVWXYZ",number:"0123456789",symbol:"!@#$%^&*()[]"};return e.alpha=e.lower+e.upper,e[void 0]=e.lower+e.upper+e.number+e.symbol,(t=e[(""+t).toLowerCase()]||t).charAt(this.natural(0,t.length-1))},char:function(t){return this.character(t)},string:function(t,e,n){var r;switch(arguments.length){case 0:r=this.natural(3,7);break;case 1:r=t,t=void 0;break;case 2:"string"==typeof arguments[0]?r=e:(r=this.natural(t,e),t=void 0);break;case 3:r=this.natural(e,n)}for(var i="",a=0;a<r;a++)i+=this.character(t);return i},str:function(){return this.string.apply(this,arguments)},range:function(t,e,n){arguments.length<=1&&(e=t||0,t=0),t=+t,e=+e,n=+(n=arguments[2]||1);for(var r=Math.max(Math.ceil((e-t)/n),0),i=0,a=new Array(r);i<r;)a[i++]=t,t+=n;return a}}},function(t,e){var n={yyyy:"getFullYear",yy:function(t){return(""+t.getFullYear()).slice(2)},y:"yy",MM:function(t){var e=t.getMonth()+1;return e<10?"0"+e:e},M:function(t){return t.getMonth()+1},dd:function(t){var e=t.getDate();return e<10?"0"+e:e},d:"getDate",HH:function(t){var e=t.getHours();return e<10?"0"+e:e},H:"getHours",hh:function(t){var e=t.getHours()%12;return e<10?"0"+e:e},h:function(t){return t.getHours()%12},mm:function(t){var e=t.getMinutes();return e<10?"0"+e:e},m:"getMinutes",ss:function(t){var e=t.getSeconds();return e<10?"0"+e:e},s:"getSeconds",SS:function(t){var e=t.getMilliseconds();return e<10&&"00"+e||e<100&&"0"+e||e},S:"getMilliseconds",A:function(t){return t.getHours()<12?"AM":"PM"},a:function(t){return t.getHours()<12?"am":"pm"},T:"getTime"};t.exports={_patternLetters:n,_rformat:new RegExp(function(){var t=[];for(var e in n)t.push(e);return"("+t.join("|")+")"}(),"g"),_formatDate:function(t,e){return e.replace(this._rformat,(function e(r,i){return"function"==typeof n[i]?n[i](t):n[i]in n?e(r,n[i]):t[n[i]]()}))},_randomDate:function(t,e){return t=void 0===t?new Date(0):t,e=void 0===e?new Date:e,new Date(Math.random()*(e.getTime()-t.getTime()))},date:function(t){return t=t||"yyyy-MM-dd",this._formatDate(this._randomDate(),t)},time:function(t){return t=t||"HH:mm:ss",this._formatDate(this._randomDate(),t)},datetime:function(t){return t=t||"yyyy-MM-dd HH:mm:ss",this._formatDate(this._randomDate(),t)},now:function(t,e){1===arguments.length&&(/year|month|day|hour|minute|second|week/.test(t)||(e=t,t="")),t=(t||"").toLowerCase(),e=e||"yyyy-MM-dd HH:mm:ss";var n=new Date;switch(t){case"year":n.setMonth(0);case"month":n.setDate(1);case"week":case"day":n.setHours(0);case"hour":n.setMinutes(0);case"minute":n.setSeconds(0);case"second":n.setMilliseconds(0)}switch(t){case"week":n.setDate(n.getDate()-n.getDay())}return this._formatDate(n,e)}}},function(t,e,n){(function(t){t.exports={_adSize:["300x250","250x250","240x400","336x280","180x150","720x300","468x60","234x60","88x31","120x90","120x60","120x240","125x125","728x90","160x600","120x600","300x600"],_screenSize:["320x200","320x240","640x480","800x480","800x480","1024x600","1024x768","1280x800","1440x900","1920x1200","2560x1600"],_videoSize:["720x480","768x576","1280x720","1920x1080"],image:function(t,e,n,r,i){return 4===arguments.length&&(i=r,r=void 0),3===arguments.length&&(i=n,n=void 0),t||(t=this.pick(this._adSize)),e&&~e.indexOf("#")&&(e=e.slice(1)),n&&~n.indexOf("#")&&(n=n.slice(1)),"http://dummyimage.com/"+t+(e?"/"+e:"")+(n?"/"+n:"")+(r?"."+r:"")+(i?"&text="+i:"")},img:function(){return this.image.apply(this,arguments)},_brandColors:{"4ormat":"#fb0a2a","500px":"#02adea","About.me (blue)":"#00405d","About.me (yellow)":"#ffcc33",Addvocate:"#ff6138",Adobe:"#ff0000",Aim:"#fcd20b",Amazon:"#e47911",Android:"#a4c639","Angie's List":"#7fbb00",AOL:"#0060a3",Atlassian:"#003366",Behance:"#053eff","Big Cartel":"#97b538",bitly:"#ee6123",Blogger:"#fc4f08",Boeing:"#0039a6","Booking.com":"#003580",Carbonmade:"#613854",Cheddar:"#ff7243","Code School":"#3d4944",Delicious:"#205cc0",Dell:"#3287c1",Designmoo:"#e54a4f",Deviantart:"#4e6252","Designer News":"#2d72da",Devour:"#fd0001",DEWALT:"#febd17","Disqus (blue)":"#59a3fc","Disqus (orange)":"#db7132",Dribbble:"#ea4c89",Dropbox:"#3d9ae8",Drupal:"#0c76ab",Dunked:"#2a323a",eBay:"#89c507",Ember:"#f05e1b",Engadget:"#00bdf6",Envato:"#528036",Etsy:"#eb6d20",Evernote:"#5ba525","Fab.com":"#dd0017",Facebook:"#3b5998",Firefox:"#e66000","Flickr (blue)":"#0063dc","Flickr (pink)":"#ff0084",Forrst:"#5b9a68",Foursquare:"#25a0ca",Garmin:"#007cc3",GetGlue:"#2d75a2",Gimmebar:"#f70078",GitHub:"#171515","Google Blue":"#0140ca","Google Green":"#16a61e","Google Red":"#dd1812","Google Yellow":"#fcca03","Google+":"#dd4b39",Grooveshark:"#f77f00",Groupon:"#82b548","Hacker News":"#ff6600",HelloWallet:"#0085ca","Heroku (light)":"#c7c5e6","Heroku (dark)":"#6567a5",HootSuite:"#003366",Houzz:"#73ba37",HTML5:"#ec6231",IKEA:"#ffcc33",IMDb:"#f3ce13",Instagram:"#3f729b",Intel:"#0071c5",Intuit:"#365ebf",Kickstarter:"#76cc1e",kippt:"#e03500",Kodery:"#00af81",LastFM:"#c3000d",LinkedIn:"#0e76a8",Livestream:"#cf0005",Lumo:"#576396",Mixpanel:"#a086d3",Meetup:"#e51937",Nokia:"#183693",NVIDIA:"#76b900",Opera:"#cc0f16",Path:"#e41f11","PayPal (dark)":"#1e477a","PayPal (light)":"#3b7bbf",Pinboard:"#0000e6",Pinterest:"#c8232c",PlayStation:"#665cbe",Pocket:"#ee4056",Prezi:"#318bff",Pusha:"#0f71b4",Quora:"#a82400","QUOTE.fm":"#66ceff",Rdio:"#008fd5",Readability:"#9c0000","Red Hat":"#cc0000",Resource:"#7eb400",Rockpack:"#0ba6ab",Roon:"#62b0d9",RSS:"#ee802f",Salesforce:"#1798c1",Samsung:"#0c4da2",Shopify:"#96bf48",Skype:"#00aff0",Snagajob:"#f47a20",Softonic:"#008ace",SoundCloud:"#ff7700","Space Box":"#f86960",Spotify:"#81b71a",Sprint:"#fee100",Squarespace:"#121212",StackOverflow:"#ef8236",Staples:"#cc0000","Status Chart":"#d7584f",Stripe:"#008cdd",StudyBlue:"#00afe1",StumbleUpon:"#f74425","T-Mobile":"#ea0a8e",Technorati:"#40a800","The Next Web":"#ef4423",Treehouse:"#5cb868",Trulia:"#5eab1f",Tumblr:"#34526f","Twitch.tv":"#6441a5",Twitter:"#00acee",TYPO3:"#ff8700",Ubuntu:"#dd4814",Ustream:"#3388ff",Verizon:"#ef1d1d",Vimeo:"#86c9ef",Vine:"#00a478",Virb:"#06afd8","Virgin Media":"#cc0000",Wooga:"#5b009c","WordPress (blue)":"#21759b","WordPress (orange)":"#d54e21","WordPress (grey)":"#464646",Wunderlist:"#2b88d9",XBOX:"#9bc848",XING:"#126567","Yahoo!":"#720e9e",Yandex:"#ffcc00",Yelp:"#c41200",YouTube:"#c4302b",Zalongo:"#5498dc",Zendesk:"#78a300",Zerply:"#9dcc7a",Zootool:"#5e8b1d"},_brandNames:function(){var t=[];for(var e in this._brandColors)t.push(e);return t},dataImage:function(e,n){var r,i=(r="undefined"!=typeof document?document.createElement("canvas"):new(t.require("canvas")))&&r.getContext&&r.getContext("2d");if(!r||!i)return"";e||(e=this.pick(this._adSize)),n=void 0!==n?n:e,e=e.split("x");var a=parseInt(e[0],10),o=parseInt(e[1],10),s=this._brandColors[this.pick(this._brandNames())];return r.width=a,r.height=o,i.textAlign="center",i.textBaseline="middle",i.fillStyle=s,i.fillRect(0,0,a,o),i.fillStyle="#FFF",i.font="bold 14px sans-serif",i.fillText(n,a/2,o/2,a),r.toDataURL("image/png")}}}).call(e,n(9)(t))},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children=[],t.webpackPolyfill=1),t}},function(t,e,n){var r=n(11),i=n(12);t.exports={color:function(t){return t||i[t]?i[t].nicer:this.hex()},hex:function(){var t=this._goldenRatioColor(),e=r.hsv2rgb(t);return r.rgb2hex(e[0],e[1],e[2])},rgb:function(){var t=this._goldenRatioColor(),e=r.hsv2rgb(t);return"rgb("+parseInt(e[0],10)+", "+parseInt(e[1],10)+", "+parseInt(e[2],10)+")"},rgba:function(){var t=this._goldenRatioColor(),e=r.hsv2rgb(t);return"rgba("+parseInt(e[0],10)+", "+parseInt(e[1],10)+", "+parseInt(e[2],10)+", "+Math.random().toFixed(2)+")"},hsl:function(){var t=this._goldenRatioColor(),e=r.hsv2hsl(t);return"hsl("+parseInt(e[0],10)+", "+parseInt(e[1],10)+", "+parseInt(e[2],10)+")"},_goldenRatioColor:function(t,e){return this._goldenRatio=.618033988749895,this._hue=this._hue||Math.random(),this._hue+=this._goldenRatio,this._hue%=1,"number"!=typeof t&&(t=.5),"number"!=typeof e&&(e=.95),[360*this._hue,100*t,100*e]}}},function(t,e){t.exports={rgb2hsl:function(t){var e,n,r=t[0]/255,i=t[1]/255,a=t[2]/255,o=Math.min(r,i,a),s=Math.max(r,i,a),u=s-o;return s==o?e=0:r==s?e=(i-a)/u:i==s?e=2+(a-r)/u:a==s&&(e=4+(r-i)/u),(e=Math.min(60*e,360))<0&&(e+=360),n=(o+s)/2,[e,100*(s==o?0:n<=.5?u/(s+o):u/(2-s-o)),100*n]},rgb2hsv:function(t){var e,n,r=t[0],i=t[1],a=t[2],o=Math.min(r,i,a),s=Math.max(r,i,a),u=s-o;return n=0===s?0:u/s*1e3/10,s==o?e=0:r==s?e=(i-a)/u:i==s?e=2+(a-r)/u:a==s&&(e=4+(r-i)/u),(e=Math.min(60*e,360))<0&&(e+=360),[e,n,s/255*1e3/10]},hsl2rgb:function(t){var e,n,r,i,a,o=t[0]/360,s=t[1]/100,u=t[2]/100;if(0===s)return[a=255*u,a,a];e=2*u-(n=u<.5?u*(1+s):u+s-u*s),i=[0,0,0];for(var l=0;l<3;l++)(r=o+1/3*-(l-1))<0&&r++,r>1&&r--,a=6*r<1?e+6*(n-e)*r:2*r<1?n:3*r<2?e+(n-e)*(2/3-r)*6:e,i[l]=255*a;return i},hsl2hsv:function(t){var e=t[0],n=t[1]/100,r=t[2]/100;return[e,2*(n*=(r*=2)<=1?r:2-r)/(r+n)*100,(r+n)/2*100]},hsv2rgb:function(t){var e=t[0]/60,n=t[1]/100,r=t[2]/100,i=Math.floor(e)%6,a=e-Math.floor(e),o=255*r*(1-n),s=255*r*(1-n*a),u=255*r*(1-n*(1-a));switch(r*=255,i){case 0:return[r,u,o];case 1:return[s,r,o];case 2:return[o,r,u];case 3:return[o,s,r];case 4:return[u,o,r];case 5:return[r,o,s]}},hsv2hsl:function(t){var e,n,r=t[0],i=t[1]/100,a=t[2]/100;return e=i*a,[r,100*(e/=(n=(2-i)*a)<=1?n:2-n),100*(n/=2)]},rgb2hex:function(t,e,n){return"#"+((256+t<<8|e)<<8|n).toString(16).slice(1)},hex2rgb:function(t){return[(t="0x"+t.slice(1).replace(t.length>4?t:/./g,"$&$&")|0)>>16,t>>8&255,255&t]}}},function(t,e){t.exports={navy:{value:"#000080",nicer:"#001F3F"},blue:{value:"#0000ff",nicer:"#0074D9"},aqua:{value:"#00ffff",nicer:"#7FDBFF"},teal:{value:"#008080",nicer:"#39CCCC"},olive:{value:"#008000",nicer:"#3D9970"},green:{value:"#008000",nicer:"#2ECC40"},lime:{value:"#00ff00",nicer:"#01FF70"},yellow:{value:"#ffff00",nicer:"#FFDC00"},orange:{value:"#ffa500",nicer:"#FF851B"},red:{value:"#ff0000",nicer:"#FF4136"},maroon:{value:"#800000",nicer:"#85144B"},fuchsia:{value:"#ff00ff",nicer:"#F012BE"},purple:{value:"#800080",nicer:"#B10DC9"},silver:{value:"#c0c0c0",nicer:"#DDDDDD"},gray:{value:"#808080",nicer:"#AAAAAA"},black:{value:"#000000",nicer:"#111111"},white:{value:"#FFFFFF",nicer:"#FFFFFF"}}},function(t,e,n){var r=n(6),i=n(14);function a(t,e,n,i){return void 0===n?r.natural(t,e):void 0===i?n:r.natural(parseInt(n,10),parseInt(i,10))}t.exports={paragraph:function(t,e){for(var n=a(3,7,t,e),r=[],i=0;i<n;i++)r.push(this.sentence());return r.join(" ")},cparagraph:function(t,e){for(var n=a(3,7,t,e),r=[],i=0;i<n;i++)r.push(this.csentence());return r.join("")},sentence:function(t,e){for(var n=a(12,18,t,e),r=[],o=0;o<n;o++)r.push(this.word());return i.capitalize(r.join(" "))+"."},csentence:function(t,e){for(var n=a(12,18,t,e),r=[],i=0;i<n;i++)r.push(this.cword());return r.join("")+"。"},word:function(t,e){for(var n=a(3,10,t,e),i="",o=0;o<n;o++)i+=r.character("lower");return i},cword:function(t,e,n){var r,i="的一是在不了有和人这中大为上个国我以要他时来用们生到作地于出就分对成会可主发年动同工也能下过子说产种面而方后多定行学法所民得经十三之进着等部度家电力里如水化高自二理起小物现实加量都两体制机当使点从业本去把性好应开它合还因由其些然前外天政四日那社义事平形相全表间样与关各重新线内数正心反你明看原又么利比或但质气第向道命此变条只没结解问意建月公无系军很情者最立代想已通并提直题党程展五果料象员革位入常文总次品式活设及管特件长求老头基资边流路级少图山统接知较将组见计别她手角期根论运农指几九区强放决西被干做必战先回则任取据处队南给色光门即保治北造百规热领七海口东导器压志世金增争济阶油思术极交受联什认六共权收证改清己美再采转更单风切打白教速花带安场身车例真务具万每目至达走积示议声报斗完类八离华名确才科张信马节话米整空元况今集温传土许步群广石记需段研界拉林律叫且究观越织装影算低持音众书布复容儿须际商非验连断深难近矿千周委素技备半办青省列习响约支般史感劳便团往酸历市克何除消构府称太准精值号率族维划选标写存候毛亲快效斯院查江型眼王按格养易置派层片始却专状育厂京识适属圆包火住调满县局照参红细引听该铁价严龙飞";switch(arguments.length){case 0:t=i,r=1;break;case 1:"string"==typeof arguments[0]?r=1:(r=t,t=i);break;case 2:"string"==typeof arguments[0]?r=e:(r=this.natural(t,e),t=i);break;case 3:r=this.natural(e,n)}for(var a="",o=0;o<r;o++)a+=t.charAt(this.natural(0,t.length-1));return a},title:function(t,e){for(var n=a(3,7,t,e),r=[],i=0;i<n;i++)r.push(this.capitalize(this.word()));return r.join(" ")},ctitle:function(t,e){for(var n=a(3,7,t,e),r=[],i=0;i<n;i++)r.push(this.cword());return r.join("")}}},function(t,e,n){var r=n(3);t.exports={capitalize:function(t){return(t+"").charAt(0).toUpperCase()+(t+"").substr(1)},upper:function(t){return(t+"").toUpperCase()},lower:function(t){return(t+"").toLowerCase()},pick:function(t,e,n){return r.isArray(t)?(void 0===e&&(e=1),void 0===n&&(n=e)):(t=[].slice.call(arguments),e=1,n=1),1===e&&1===n?t[this.natural(0,t.length-1)]:this.shuffle(t,e,n)},shuffle:function(t,e,n){for(var r=(t=t||[]).slice(0),i=[],a=0,o=r.length,s=0;s<o;s++)a=this.natural(0,r.length-1),i.push(r[a]),r.splice(a,1);switch(arguments.length){case 0:case 1:return i;case 2:n=e;case 3:return e=parseInt(e,10),n=parseInt(n,10),i.slice(0,this.natural(e,n))}},order:function t(e){t.cache=t.cache||{},arguments.length>1&&(e=[].slice.call(arguments,0));var n=t.options,r=n.context.templatePath.join("."),i=t.cache[r]=t.cache[r]||{index:0,array:e};return i.array[i.index++%i.array.length]}}},function(t,e){t.exports={first:function(){var t=["James","John","Robert","Michael","William","David","Richard","Charles","Joseph","Thomas","Christopher","Daniel","Paul","Mark","Donald","George","Kenneth","Steven","Edward","Brian","Ronald","Anthony","Kevin","Jason","Matthew","Gary","Timothy","Jose","Larry","Jeffrey","Frank","Scott","Eric"].concat(["Mary","Patricia","Linda","Barbara","Elizabeth","Jennifer","Maria","Susan","Margaret","Dorothy","Lisa","Nancy","Karen","Betty","Helen","Sandra","Donna","Carol","Ruth","Sharon","Michelle","Laura","Sarah","Kimberly","Deborah","Jessica","Shirley","Cynthia","Angela","Melissa","Brenda","Amy","Anna"]);return this.pick(t)},last:function(){return this.pick(["Smith","Johnson","Williams","Brown","Jones","Miller","Davis","Garcia","Rodriguez","Wilson","Martinez","Anderson","Taylor","Thomas","Hernandez","Moore","Martin","Jackson","Thompson","White","Lopez","Lee","Gonzalez","Harris","Clark","Lewis","Robinson","Walker","Perez","Hall","Young","Allen"])},name:function(t){return this.first()+" "+(t?this.first()+" ":"")+this.last()},cfirst:function(){var t="王 李 张 刘 陈 杨 赵 黄 周 吴 徐 孙 胡 朱 高 林 何 郭 马 罗 梁 宋 郑 谢 韩 唐 冯 于 董 萧 程 曹 袁 邓 许 傅 沈 曾 彭 吕 苏 卢 蒋 蔡 贾 丁 魏 薛 叶 阎 余 潘 杜 戴 夏 锺 汪 田 任 姜 范 方 石 姚 谭 廖 邹 熊 金 陆 郝 孔 白 崔 康 毛 邱 秦 江 史 顾 侯 邵 孟 龙 万 段 雷 钱 汤 尹 黎 易 常 武 乔 贺 赖 龚 文".split(" ");return this.pick(t)},clast:function(){var t="伟 芳 娜 秀英 敏 静 丽 强 磊 军 洋 勇 艳 杰 娟 涛 明 超 秀兰 霞 平 刚 桂英".split(" ");return this.pick(t)},cname:function(){return this.cfirst()+this.clast()}}},function(t,e){t.exports={url:function(t,e){return(t||this.protocol())+"://"+(e||this.domain())+"/"+this.word()},protocol:function(){return this.pick("http ftp gopher mailto mid cid news nntp prospero telnet rlogin tn3270 wais".split(" "))},domain:function(t){return this.word()+"."+(t||this.tld())},tld:function(){return this.pick("com net org edu gov int mil cn com.cn net.cn gov.cn org.cn 中国 中国互联.公司 中国互联.网络 tel biz cc tv info name hk mobi asia cd travel pro museum coop aero ad ae af ag ai al am an ao aq ar as at au aw az ba bb bd be bf bg bh bi bj bm bn bo br bs bt bv bw by bz ca cc cf cg ch ci ck cl cm cn co cq cr cu cv cx cy cz de dj dk dm do dz ec ee eg eh es et ev fi fj fk fm fo fr ga gb gd ge gf gh gi gl gm gn gp gr gt gu gw gy hk hm hn hr ht hu id ie il in io iq ir is it jm jo jp ke kg kh ki km kn kp kr kw ky kz la lb lc li lk lr ls lt lu lv ly ma mc md mg mh ml mm mn mo mp mq mr ms mt mv mw mx my mz na nc ne nf ng ni nl no np nr nt nu nz om qa pa pe pf pg ph pk pl pm pn pr pt pw py re ro ru rw sa sb sc sd se sg sh si sj sk sl sm sn so sr st su sy sz tc td tf tg th tj tk tm tn to tp tr tt tv tw tz ua ug uk us uy va vc ve vg vn vu wf ws ye yu za zm zr zw".split(" "))},email:function(t){return this.character("lower")+"."+this.word()+"@"+(t||this.word()+"."+this.tld())},ip:function(){return this.natural(0,255)+"."+this.natural(0,255)+"."+this.natural(0,255)+"."+this.natural(0,255)}}},function(t,e,n){var r=n(18),i=["东北","华北","华东","华中","华南","西南","西北"];t.exports={region:function(){return this.pick(i)},province:function(){return this.pick(r).name},city:function(t){var e=this.pick(r),n=this.pick(e.children);return t?[e.name,n.name].join(" "):n.name},county:function(t){var e=this.pick(r),n=this.pick(e.children),i=this.pick(n.children)||{name:"-"};return t?[e.name,n.name,i.name].join(" "):i.name},zip:function(t){for(var e="",n=0;n<(t||6);n++)e+=this.natural(0,9);return e}}},function(t,e){var n={11e4:"北京",110100:"北京市",110101:"东城区",110102:"西城区",110105:"朝阳区",110106:"丰台区",110107:"石景山区",110108:"海淀区",110109:"门头沟区",110111:"房山区",110112:"通州区",110113:"顺义区",110114:"昌平区",110115:"大兴区",110116:"怀柔区",110117:"平谷区",110228:"密云县",110229:"延庆县",110230:"其它区",12e4:"天津",120100:"天津市",120101:"和平区",120102:"河东区",120103:"河西区",120104:"南开区",120105:"河北区",120106:"红桥区",120110:"东丽区",120111:"西青区",120112:"津南区",120113:"北辰区",120114:"武清区",120115:"宝坻区",120116:"滨海新区",120221:"宁河县",120223:"静海县",120225:"蓟县",120226:"其它区",13e4:"河北省",130100:"石家庄市",130102:"长安区",130103:"桥东区",130104:"桥西区",130105:"新华区",130107:"井陉矿区",130108:"裕华区",130121:"井陉县",130123:"正定县",130124:"栾城县",130125:"行唐县",130126:"灵寿县",130127:"高邑县",130128:"深泽县",130129:"赞皇县",130130:"无极县",130131:"平山县",130132:"元氏县",130133:"赵县",130181:"辛集市",130182:"藁城市",130183:"晋州市",130184:"新乐市",130185:"鹿泉市",130186:"其它区",130200:"唐山市",130202:"路南区",130203:"路北区",130204:"古冶区",130205:"开平区",130207:"丰南区",130208:"丰润区",130223:"滦县",130224:"滦南县",130225:"乐亭县",130227:"迁西县",130229:"玉田县",130230:"曹妃甸区",130281:"遵化市",130283:"迁安市",130284:"其它区",130300:"秦皇岛市",130302:"海港区",130303:"山海关区",130304:"北戴河区",130321:"青龙满族自治县",130322:"昌黎县",130323:"抚宁县",130324:"卢龙县",130398:"其它区",130400:"邯郸市",130402:"邯山区",130403:"丛台区",130404:"复兴区",130406:"峰峰矿区",130421:"邯郸县",130423:"临漳县",130424:"成安县",130425:"大名县",130426:"涉县",130427:"磁县",130428:"肥乡县",130429:"永年县",130430:"邱县",130431:"鸡泽县",130432:"广平县",130433:"馆陶县",130434:"魏县",130435:"曲周县",130481:"武安市",130482:"其它区",130500:"邢台市",130502:"桥东区",130503:"桥西区",130521:"邢台县",130522:"临城县",130523:"内丘县",130524:"柏乡县",130525:"隆尧县",130526:"任县",130527:"南和县",130528:"宁晋县",130529:"巨鹿县",130530:"新河县",130531:"广宗县",130532:"平乡县",130533:"威县",130534:"清河县",130535:"临西县",130581:"南宫市",130582:"沙河市",130583:"其它区",130600:"保定市",130602:"新市区",130603:"北市区",130604:"南市区",130621:"满城县",130622:"清苑县",130623:"涞水县",130624:"阜平县",130625:"徐水县",130626:"定兴县",130627:"唐县",130628:"高阳县",130629:"容城县",130630:"涞源县",130631:"望都县",130632:"安新县",130633:"易县",130634:"曲阳县",130635:"蠡县",130636:"顺平县",130637:"博野县",130638:"雄县",130681:"涿州市",130682:"定州市",130683:"安国市",130684:"高碑店市",130699:"其它区",130700:"张家口市",130702:"桥东区",130703:"桥西区",130705:"宣化区",130706:"下花园区",130721:"宣化县",130722:"张北县",130723:"康保县",130724:"沽源县",130725:"尚义县",130726:"蔚县",130727:"阳原县",130728:"怀安县",130729:"万全县",130730:"怀来县",130731:"涿鹿县",130732:"赤城县",130733:"崇礼县",130734:"其它区",130800:"承德市",130802:"双桥区",130803:"双滦区",130804:"鹰手营子矿区",130821:"承德县",130822:"兴隆县",130823:"平泉县",130824:"滦平县",130825:"隆化县",130826:"丰宁满族自治县",130827:"宽城满族自治县",130828:"围场满族蒙古族自治县",130829:"其它区",130900:"沧州市",130902:"新华区",130903:"运河区",130921:"沧县",130922:"青县",130923:"东光县",130924:"海兴县",130925:"盐山县",130926:"肃宁县",130927:"南皮县",130928:"吴桥县",130929:"献县",130930:"孟村回族自治县",130981:"泊头市",130982:"任丘市",130983:"黄骅市",130984:"河间市",130985:"其它区",131e3:"廊坊市",131002:"安次区",131003:"广阳区",131022:"固安县",131023:"永清县",131024:"香河县",131025:"大城县",131026:"文安县",131028:"大厂回族自治县",131081:"霸州市",131082:"三河市",131083:"其它区",131100:"衡水市",131102:"桃城区",131121:"枣强县",131122:"武邑县",131123:"武强县",131124:"饶阳县",131125:"安平县",131126:"故城县",131127:"景县",131128:"阜城县",131181:"冀州市",131182:"深州市",131183:"其它区",14e4:"山西省",140100:"太原市",140105:"小店区",140106:"迎泽区",140107:"杏花岭区",140108:"尖草坪区",140109:"万柏林区",140110:"晋源区",140121:"清徐县",140122:"阳曲县",140123:"娄烦县",140181:"古交市",140182:"其它区",140200:"大同市",140202:"城区",140203:"矿区",140211:"南郊区",140212:"新荣区",140221:"阳高县",140222:"天镇县",140223:"广灵县",140224:"灵丘县",140225:"浑源县",140226:"左云县",140227:"大同县",140228:"其它区",140300:"阳泉市",140302:"城区",140303:"矿区",140311:"郊区",140321:"平定县",140322:"盂县",140323:"其它区",140400:"长治市",140421:"长治县",140423:"襄垣县",140424:"屯留县",140425:"平顺县",140426:"黎城县",140427:"壶关县",140428:"长子县",140429:"武乡县",140430:"沁县",140431:"沁源县",140481:"潞城市",140482:"城区",140483:"郊区",140485:"其它区",140500:"晋城市",140502:"城区",140521:"沁水县",140522:"阳城县",140524:"陵川县",140525:"泽州县",140581:"高平市",140582:"其它区",140600:"朔州市",140602:"朔城区",140603:"平鲁区",140621:"山阴县",140622:"应县",140623:"右玉县",140624:"怀仁县",140625:"其它区",140700:"晋中市",140702:"榆次区",140721:"榆社县",140722:"左权县",140723:"和顺县",140724:"昔阳县",140725:"寿阳县",140726:"太谷县",140727:"祁县",140728:"平遥县",140729:"灵石县",140781:"介休市",140782:"其它区",140800:"运城市",140802:"盐湖区",140821:"临猗县",140822:"万荣县",140823:"闻喜县",140824:"稷山县",140825:"新绛县",140826:"绛县",140827:"垣曲县",140828:"夏县",140829:"平陆县",140830:"芮城县",140881:"永济市",140882:"河津市",140883:"其它区",140900:"忻州市",140902:"忻府区",140921:"定襄县",140922:"五台县",140923:"代县",140924:"繁峙县",140925:"宁武县",140926:"静乐县",140927:"神池县",140928:"五寨县",140929:"岢岚县",140930:"河曲县",140931:"保德县",140932:"偏关县",140981:"原平市",140982:"其它区",141e3:"临汾市",141002:"尧都区",141021:"曲沃县",141022:"翼城县",141023:"襄汾县",141024:"洪洞县",141025:"古县",141026:"安泽县",141027:"浮山县",141028:"吉县",141029:"乡宁县",141030:"大宁县",141031:"隰县",141032:"永和县",141033:"蒲县",141034:"汾西县",141081:"侯马市",141082:"霍州市",141083:"其它区",141100:"吕梁市",141102:"离石区",141121:"文水县",141122:"交城县",141123:"兴县",141124:"临县",141125:"柳林县",141126:"石楼县",141127:"岚县",141128:"方山县",141129:"中阳县",141130:"交口县",141181:"孝义市",141182:"汾阳市",141183:"其它区",15e4:"内蒙古自治区",150100:"呼和浩特市",150102:"新城区",150103:"回民区",150104:"玉泉区",150105:"赛罕区",150121:"土默特左旗",150122:"托克托县",150123:"和林格尔县",150124:"清水河县",150125:"武川县",150126:"其它区",150200:"包头市",150202:"东河区",150203:"昆都仑区",150204:"青山区",150205:"石拐区",150206:"白云鄂博矿区",150207:"九原区",150221:"土默特右旗",150222:"固阳县",150223:"达尔罕茂明安联合旗",150224:"其它区",150300:"乌海市",150302:"海勃湾区",150303:"海南区",150304:"乌达区",150305:"其它区",150400:"赤峰市",150402:"红山区",150403:"元宝山区",150404:"松山区",150421:"阿鲁科尔沁旗",150422:"巴林左旗",150423:"巴林右旗",150424:"林西县",150425:"克什克腾旗",150426:"翁牛特旗",150428:"喀喇沁旗",150429:"宁城县",150430:"敖汉旗",150431:"其它区",150500:"通辽市",150502:"科尔沁区",150521:"科尔沁左翼中旗",150522:"科尔沁左翼后旗",150523:"开鲁县",150524:"库伦旗",150525:"奈曼旗",150526:"扎鲁特旗",150581:"霍林郭勒市",150582:"其它区",150600:"鄂尔多斯市",150602:"东胜区",150621:"达拉特旗",150622:"准格尔旗",150623:"鄂托克前旗",150624:"鄂托克旗",150625:"杭锦旗",150626:"乌审旗",150627:"伊金霍洛旗",150628:"其它区",150700:"呼伦贝尔市",150702:"海拉尔区",150703:"扎赉诺尔区",150721:"阿荣旗",150722:"莫力达瓦达斡尔族自治旗",150723:"鄂伦春自治旗",150724:"鄂温克族自治旗",150725:"陈巴尔虎旗",150726:"新巴尔虎左旗",150727:"新巴尔虎右旗",150781:"满洲里市",150782:"牙克石市",150783:"扎兰屯市",150784:"额尔古纳市",150785:"根河市",150786:"其它区",150800:"巴彦淖尔市",150802:"临河区",150821:"五原县",150822:"磴口县",150823:"乌拉特前旗",150824:"乌拉特中旗",150825:"乌拉特后旗",150826:"杭锦后旗",150827:"其它区",150900:"乌兰察布市",150902:"集宁区",150921:"卓资县",150922:"化德县",150923:"商都县",150924:"兴和县",150925:"凉城县",150926:"察哈尔右翼前旗",150927:"察哈尔右翼中旗",150928:"察哈尔右翼后旗",150929:"四子王旗",150981:"丰镇市",150982:"其它区",152200:"兴安盟",152201:"乌兰浩特市",152202:"阿尔山市",152221:"科尔沁右翼前旗",152222:"科尔沁右翼中旗",152223:"扎赉特旗",152224:"突泉县",152225:"其它区",152500:"锡林郭勒盟",152501:"二连浩特市",152502:"锡林浩特市",152522:"阿巴嘎旗",152523:"苏尼特左旗",152524:"苏尼特右旗",152525:"东乌珠穆沁旗",152526:"西乌珠穆沁旗",152527:"太仆寺旗",152528:"镶黄旗",152529:"正镶白旗",152530:"正蓝旗",152531:"多伦县",152532:"其它区",152900:"阿拉善盟",152921:"阿拉善左旗",152922:"阿拉善右旗",152923:"额济纳旗",152924:"其它区",21e4:"辽宁省",210100:"沈阳市",210102:"和平区",210103:"沈河区",210104:"大东区",210105:"皇姑区",210106:"铁西区",210111:"苏家屯区",210112:"东陵区",210113:"新城子区",210114:"于洪区",210122:"辽中县",210123:"康平县",210124:"法库县",210181:"新民市",210184:"沈北新区",210185:"其它区",210200:"大连市",210202:"中山区",210203:"西岗区",210204:"沙河口区",210211:"甘井子区",210212:"旅顺口区",210213:"金州区",210224:"长海县",210281:"瓦房店市",210282:"普兰店市",210283:"庄河市",210298:"其它区",210300:"鞍山市",210302:"铁东区",210303:"铁西区",210304:"立山区",210311:"千山区",210321:"台安县",210323:"岫岩满族自治县",210381:"海城市",210382:"其它区",210400:"抚顺市",210402:"新抚区",210403:"东洲区",210404:"望花区",210411:"顺城区",210421:"抚顺县",210422:"新宾满族自治县",210423:"清原满族自治县",210424:"其它区",210500:"本溪市",210502:"平山区",210503:"溪湖区",210504:"明山区",210505:"南芬区",210521:"本溪满族自治县",210522:"桓仁满族自治县",210523:"其它区",210600:"丹东市",210602:"元宝区",210603:"振兴区",210604:"振安区",210624:"宽甸满族自治县",210681:"东港市",210682:"凤城市",210683:"其它区",210700:"锦州市",210702:"古塔区",210703:"凌河区",210711:"太和区",210726:"黑山县",210727:"义县",210781:"凌海市",210782:"北镇市",210783:"其它区",210800:"营口市",210802:"站前区",210803:"西市区",210804:"鲅鱼圈区",210811:"老边区",210881:"盖州市",210882:"大石桥市",210883:"其它区",210900:"阜新市",210902:"海州区",210903:"新邱区",210904:"太平区",210905:"清河门区",210911:"细河区",210921:"阜新蒙古族自治县",210922:"彰武县",210923:"其它区",211e3:"辽阳市",211002:"白塔区",211003:"文圣区",211004:"宏伟区",211005:"弓长岭区",211011:"太子河区",211021:"辽阳县",211081:"灯塔市",211082:"其它区",211100:"盘锦市",211102:"双台子区",211103:"兴隆台区",211121:"大洼县",211122:"盘山县",211123:"其它区",211200:"铁岭市",211202:"银州区",211204:"清河区",211221:"铁岭县",211223:"西丰县",211224:"昌图县",211281:"调兵山市",211282:"开原市",211283:"其它区",211300:"朝阳市",211302:"双塔区",211303:"龙城区",211321:"朝阳县",211322:"建平县",211324:"喀喇沁左翼蒙古族自治县",211381:"北票市",211382:"凌源市",211383:"其它区",211400:"葫芦岛市",211402:"连山区",211403:"龙港区",211404:"南票区",211421:"绥中县",211422:"建昌县",211481:"兴城市",211482:"其它区",22e4:"吉林省",220100:"长春市",220102:"南关区",220103:"宽城区",220104:"朝阳区",220105:"二道区",220106:"绿园区",220112:"双阳区",220122:"农安县",220181:"九台市",220182:"榆树市",220183:"德惠市",220188:"其它区",220200:"吉林市",220202:"昌邑区",220203:"龙潭区",220204:"船营区",220211:"丰满区",220221:"永吉县",220281:"蛟河市",220282:"桦甸市",220283:"舒兰市",220284:"磐石市",220285:"其它区",220300:"四平市",220302:"铁西区",220303:"铁东区",220322:"梨树县",220323:"伊通满族自治县",220381:"公主岭市",220382:"双辽市",220383:"其它区",220400:"辽源市",220402:"龙山区",220403:"西安区",220421:"东丰县",220422:"东辽县",220423:"其它区",220500:"通化市",220502:"东昌区",220503:"二道江区",220521:"通化县",220523:"辉南县",220524:"柳河县",220581:"梅河口市",220582:"集安市",220583:"其它区",220600:"白山市",220602:"浑江区",220621:"抚松县",220622:"靖宇县",220623:"长白朝鲜族自治县",220625:"江源区",220681:"临江市",220682:"其它区",220700:"松原市",220702:"宁江区",220721:"前郭尔罗斯蒙古族自治县",220722:"长岭县",220723:"乾安县",220724:"扶余市",220725:"其它区",220800:"白城市",220802:"洮北区",220821:"镇赉县",220822:"通榆县",220881:"洮南市",220882:"大安市",220883:"其它区",222400:"延边朝鲜族自治州",222401:"延吉市",222402:"图们市",222403:"敦化市",222404:"珲春市",222405:"龙井市",222406:"和龙市",222424:"汪清县",222426:"安图县",222427:"其它区",23e4:"黑龙江省",230100:"哈尔滨市",230102:"道里区",230103:"南岗区",230104:"道外区",230106:"香坊区",230108:"平房区",230109:"松北区",230111:"呼兰区",230123:"依兰县",230124:"方正县",230125:"宾县",230126:"巴彦县",230127:"木兰县",230128:"通河县",230129:"延寿县",230181:"阿城区",230182:"双城市",230183:"尚志市",230184:"五常市",230186:"其它区",230200:"齐齐哈尔市",230202:"龙沙区",230203:"建华区",230204:"铁锋区",230205:"昂昂溪区",230206:"富拉尔基区",230207:"碾子山区",230208:"梅里斯达斡尔族区",230221:"龙江县",230223:"依安县",230224:"泰来县",230225:"甘南县",230227:"富裕县",230229:"克山县",230230:"克东县",230231:"拜泉县",230281:"讷河市",230282:"其它区",230300:"鸡西市",230302:"鸡冠区",230303:"恒山区",230304:"滴道区",230305:"梨树区",230306:"城子河区",230307:"麻山区",230321:"鸡东县",230381:"虎林市",230382:"密山市",230383:"其它区",230400:"鹤岗市",230402:"向阳区",230403:"工农区",230404:"南山区",230405:"兴安区",230406:"东山区",230407:"兴山区",230421:"萝北县",230422:"绥滨县",230423:"其它区",230500:"双鸭山市",230502:"尖山区",230503:"岭东区",230505:"四方台区",230506:"宝山区",230521:"集贤县",230522:"友谊县",230523:"宝清县",230524:"饶河县",230525:"其它区",230600:"大庆市",230602:"萨尔图区",230603:"龙凤区",230604:"让胡路区",230605:"红岗区",230606:"大同区",230621:"肇州县",230622:"肇源县",230623:"林甸县",230624:"杜尔伯特蒙古族自治县",230625:"其它区",230700:"伊春市",230702:"伊春区",230703:"南岔区",230704:"友好区",230705:"西林区",230706:"翠峦区",230707:"新青区",230708:"美溪区",230709:"金山屯区",230710:"五营区",230711:"乌马河区",230712:"汤旺河区",230713:"带岭区",230714:"乌伊岭区",230715:"红星区",230716:"上甘岭区",230722:"嘉荫县",230781:"铁力市",230782:"其它区",230800:"佳木斯市",230803:"向阳区",230804:"前进区",230805:"东风区",230811:"郊区",230822:"桦南县",230826:"桦川县",230828:"汤原县",230833:"抚远县",230881:"同江市",230882:"富锦市",230883:"其它区",230900:"七台河市",230902:"新兴区",230903:"桃山区",230904:"茄子河区",230921:"勃利县",230922:"其它区",231e3:"牡丹江市",231002:"东安区",231003:"阳明区",231004:"爱民区",231005:"西安区",231024:"东宁县",231025:"林口县",231081:"绥芬河市",231083:"海林市",231084:"宁安市",231085:"穆棱市",231086:"其它区",231100:"黑河市",231102:"爱辉区",231121:"嫩江县",231123:"逊克县",231124:"孙吴县",231181:"北安市",231182:"五大连池市",231183:"其它区",231200:"绥化市",231202:"北林区",231221:"望奎县",231222:"兰西县",231223:"青冈县",231224:"庆安县",231225:"明水县",231226:"绥棱县",231281:"安达市",231282:"肇东市",231283:"海伦市",231284:"其它区",232700:"大兴安岭地区",232702:"松岭区",232703:"新林区",232704:"呼中区",232721:"呼玛县",232722:"塔河县",232723:"漠河县",232724:"加格达奇区",232725:"其它区",31e4:"上海",310100:"上海市",310101:"黄浦区",310104:"徐汇区",310105:"长宁区",310106:"静安区",310107:"普陀区",310108:"闸北区",310109:"虹口区",310110:"杨浦区",310112:"闵行区",310113:"宝山区",310114:"嘉定区",310115:"浦东新区",310116:"金山区",310117:"松江区",310118:"青浦区",310120:"奉贤区",310230:"崇明县",310231:"其它区",32e4:"江苏省",320100:"南京市",320102:"玄武区",320104:"秦淮区",320105:"建邺区",320106:"鼓楼区",320111:"浦口区",320113:"栖霞区",320114:"雨花台区",320115:"江宁区",320116:"六合区",320124:"溧水区",320125:"高淳区",320126:"其它区",320200:"无锡市",320202:"崇安区",320203:"南长区",320204:"北塘区",320205:"锡山区",320206:"惠山区",320211:"滨湖区",320281:"江阴市",320282:"宜兴市",320297:"其它区",320300:"徐州市",320302:"鼓楼区",320303:"云龙区",320305:"贾汪区",320311:"泉山区",320321:"丰县",320322:"沛县",320323:"铜山区",320324:"睢宁县",320381:"新沂市",320382:"邳州市",320383:"其它区",320400:"常州市",320402:"天宁区",320404:"钟楼区",320405:"戚墅堰区",320411:"新北区",320412:"武进区",320481:"溧阳市",320482:"金坛市",320483:"其它区",320500:"苏州市",320505:"虎丘区",320506:"吴中区",320507:"相城区",320508:"姑苏区",320581:"常熟市",320582:"张家港市",320583:"昆山市",320584:"吴江区",320585:"太仓市",320596:"其它区",320600:"南通市",320602:"崇川区",320611:"港闸区",320612:"通州区",320621:"海安县",320623:"如东县",320681:"启东市",320682:"如皋市",320684:"海门市",320694:"其它区",320700:"连云港市",320703:"连云区",320705:"新浦区",320706:"海州区",320721:"赣榆县",320722:"东海县",320723:"灌云县",320724:"灌南县",320725:"其它区",320800:"淮安市",320802:"清河区",320803:"淮安区",320804:"淮阴区",320811:"清浦区",320826:"涟水县",320829:"洪泽县",320830:"盱眙县",320831:"金湖县",320832:"其它区",320900:"盐城市",320902:"亭湖区",320903:"盐都区",320921:"响水县",320922:"滨海县",320923:"阜宁县",320924:"射阳县",320925:"建湖县",320981:"东台市",320982:"大丰市",320983:"其它区",321e3:"扬州市",321002:"广陵区",321003:"邗江区",321023:"宝应县",321081:"仪征市",321084:"高邮市",321088:"江都区",321093:"其它区",321100:"镇江市",321102:"京口区",321111:"润州区",321112:"丹徒区",321181:"丹阳市",321182:"扬中市",321183:"句容市",321184:"其它区",321200:"泰州市",321202:"海陵区",321203:"高港区",321281:"兴化市",321282:"靖江市",321283:"泰兴市",321284:"姜堰区",321285:"其它区",321300:"宿迁市",321302:"宿城区",321311:"宿豫区",321322:"沭阳县",321323:"泗阳县",321324:"泗洪县",321325:"其它区",33e4:"浙江省",330100:"杭州市",330102:"上城区",330103:"下城区",330104:"江干区",330105:"拱墅区",330106:"西湖区",330108:"滨江区",330109:"萧山区",330110:"余杭区",330122:"桐庐县",330127:"淳安县",330182:"建德市",330183:"富阳市",330185:"临安市",330186:"其它区",330200:"宁波市",330203:"海曙区",330204:"江东区",330205:"江北区",330206:"北仑区",330211:"镇海区",330212:"鄞州区",330225:"象山县",330226:"宁海县",330281:"余姚市",330282:"慈溪市",330283:"奉化市",330284:"其它区",330300:"温州市",330302:"鹿城区",330303:"龙湾区",330304:"瓯海区",330322:"洞头县",330324:"永嘉县",330326:"平阳县",330327:"苍南县",330328:"文成县",330329:"泰顺县",330381:"瑞安市",330382:"乐清市",330383:"其它区",330400:"嘉兴市",330402:"南湖区",330411:"秀洲区",330421:"嘉善县",330424:"海盐县",330481:"海宁市",330482:"平湖市",330483:"桐乡市",330484:"其它区",330500:"湖州市",330502:"吴兴区",330503:"南浔区",330521:"德清县",330522:"长兴县",330523:"安吉县",330524:"其它区",330600:"绍兴市",330602:"越城区",330621:"绍兴县",330624:"新昌县",330681:"诸暨市",330682:"上虞市",330683:"嵊州市",330684:"其它区",330700:"金华市",330702:"婺城区",330703:"金东区",330723:"武义县",330726:"浦江县",330727:"磐安县",330781:"兰溪市",330782:"义乌市",330783:"东阳市",330784:"永康市",330785:"其它区",330800:"衢州市",330802:"柯城区",330803:"衢江区",330822:"常山县",330824:"开化县",330825:"龙游县",330881:"江山市",330882:"其它区",330900:"舟山市",330902:"定海区",330903:"普陀区",330921:"岱山县",330922:"嵊泗县",330923:"其它区",331e3:"台州市",331002:"椒江区",331003:"黄岩区",331004:"路桥区",331021:"玉环县",331022:"三门县",331023:"天台县",331024:"仙居县",331081:"温岭市",331082:"临海市",331083:"其它区",331100:"丽水市",331102:"莲都区",331121:"青田县",331122:"缙云县",331123:"遂昌县",331124:"松阳县",331125:"云和县",331126:"庆元县",331127:"景宁畲族自治县",331181:"龙泉市",331182:"其它区",34e4:"安徽省",340100:"合肥市",340102:"瑶海区",340103:"庐阳区",340104:"蜀山区",340111:"包河区",340121:"长丰县",340122:"肥东县",340123:"肥西县",340192:"其它区",340200:"芜湖市",340202:"镜湖区",340203:"弋江区",340207:"鸠江区",340208:"三山区",340221:"芜湖县",340222:"繁昌县",340223:"南陵县",340224:"其它区",340300:"蚌埠市",340302:"龙子湖区",340303:"蚌山区",340304:"禹会区",340311:"淮上区",340321:"怀远县",340322:"五河县",340323:"固镇县",340324:"其它区",340400:"淮南市",340402:"大通区",340403:"田家庵区",340404:"谢家集区",340405:"八公山区",340406:"潘集区",340421:"凤台县",340422:"其它区",340500:"马鞍山市",340503:"花山区",340504:"雨山区",340506:"博望区",340521:"当涂县",340522:"其它区",340600:"淮北市",340602:"杜集区",340603:"相山区",340604:"烈山区",340621:"濉溪县",340622:"其它区",340700:"铜陵市",340702:"铜官山区",340703:"狮子山区",340711:"郊区",340721:"铜陵县",340722:"其它区",340800:"安庆市",340802:"迎江区",340803:"大观区",340811:"宜秀区",340822:"怀宁县",340823:"枞阳县",340824:"潜山县",340825:"太湖县",340826:"宿松县",340827:"望江县",340828:"岳西县",340881:"桐城市",340882:"其它区",341e3:"黄山市",341002:"屯溪区",341003:"黄山区",341004:"徽州区",341021:"歙县",341022:"休宁县",341023:"黟县",341024:"祁门县",341025:"其它区",341100:"滁州市",341102:"琅琊区",341103:"南谯区",341122:"来安县",341124:"全椒县",341125:"定远县",341126:"凤阳县",341181:"天长市",341182:"明光市",341183:"其它区",341200:"阜阳市",341202:"颍州区",341203:"颍东区",341204:"颍泉区",341221:"临泉县",341222:"太和县",341225:"阜南县",341226:"颍上县",341282:"界首市",341283:"其它区",341300:"宿州市",341302:"埇桥区",341321:"砀山县",341322:"萧县",341323:"灵璧县",341324:"泗县",341325:"其它区",341400:"巢湖市",341421:"庐江县",341422:"无为县",341423:"含山县",341424:"和县",341500:"六安市",341502:"金安区",341503:"裕安区",341521:"寿县",341522:"霍邱县",341523:"舒城县",341524:"金寨县",341525:"霍山县",341526:"其它区",341600:"亳州市",341602:"谯城区",341621:"涡阳县",341622:"蒙城县",341623:"利辛县",341624:"其它区",341700:"池州市",341702:"贵池区",341721:"东至县",341722:"石台县",341723:"青阳县",341724:"其它区",341800:"宣城市",341802:"宣州区",341821:"郎溪县",341822:"广德县",341823:"泾县",341824:"绩溪县",341825:"旌德县",341881:"宁国市",341882:"其它区",35e4:"福建省",350100:"福州市",350102:"鼓楼区",350103:"台江区",350104:"仓山区",350105:"马尾区",350111:"晋安区",350121:"闽侯县",350122:"连江县",350123:"罗源县",350124:"闽清县",350125:"永泰县",350128:"平潭县",350181:"福清市",350182:"长乐市",350183:"其它区",350200:"厦门市",350203:"思明区",350205:"海沧区",350206:"湖里区",350211:"集美区",350212:"同安区",350213:"翔安区",350214:"其它区",350300:"莆田市",350302:"城厢区",350303:"涵江区",350304:"荔城区",350305:"秀屿区",350322:"仙游县",350323:"其它区",350400:"三明市",350402:"梅列区",350403:"三元区",350421:"明溪县",350423:"清流县",350424:"宁化县",350425:"大田县",350426:"尤溪县",350427:"沙县",350428:"将乐县",350429:"泰宁县",350430:"建宁县",350481:"永安市",350482:"其它区",350500:"泉州市",350502:"鲤城区",350503:"丰泽区",350504:"洛江区",350505:"泉港区",350521:"惠安县",350524:"安溪县",350525:"永春县",350526:"德化县",350527:"金门县",350581:"石狮市",350582:"晋江市",350583:"南安市",350584:"其它区",350600:"漳州市",350602:"芗城区",350603:"龙文区",350622:"云霄县",350623:"漳浦县",350624:"诏安县",350625:"长泰县",350626:"东山县",350627:"南靖县",350628:"平和县",350629:"华安县",350681:"龙海市",350682:"其它区",350700:"南平市",350702:"延平区",350721:"顺昌县",350722:"浦城县",350723:"光泽县",350724:"松溪县",350725:"政和县",350781:"邵武市",350782:"武夷山市",350783:"建瓯市",350784:"建阳市",350785:"其它区",350800:"龙岩市",350802:"新罗区",350821:"长汀县",350822:"永定县",350823:"上杭县",350824:"武平县",350825:"连城县",350881:"漳平市",350882:"其它区",350900:"宁德市",350902:"蕉城区",350921:"霞浦县",350922:"古田县",350923:"屏南县",350924:"寿宁县",350925:"周宁县",350926:"柘荣县",350981:"福安市",350982:"福鼎市",350983:"其它区",36e4:"江西省",360100:"南昌市",360102:"东湖区",360103:"西湖区",360104:"青云谱区",360105:"湾里区",360111:"青山湖区",360121:"南昌县",360122:"新建县",360123:"安义县",360124:"进贤县",360128:"其它区",360200:"景德镇市",360202:"昌江区",360203:"珠山区",360222:"浮梁县",360281:"乐平市",360282:"其它区",360300:"萍乡市",360302:"安源区",360313:"湘东区",360321:"莲花县",360322:"上栗县",360323:"芦溪县",360324:"其它区",360400:"九江市",360402:"庐山区",360403:"浔阳区",360421:"九江县",360423:"武宁县",360424:"修水县",360425:"永修县",360426:"德安县",360427:"星子县",360428:"都昌县",360429:"湖口县",360430:"彭泽县",360481:"瑞昌市",360482:"其它区",360483:"共青城市",360500:"新余市",360502:"渝水区",360521:"分宜县",360522:"其它区",360600:"鹰潭市",360602:"月湖区",360622:"余江县",360681:"贵溪市",360682:"其它区",360700:"赣州市",360702:"章贡区",360721:"赣县",360722:"信丰县",360723:"大余县",360724:"上犹县",360725:"崇义县",360726:"安远县",360727:"龙南县",360728:"定南县",360729:"全南县",360730:"宁都县",360731:"于都县",360732:"兴国县",360733:"会昌县",360734:"寻乌县",360735:"石城县",360781:"瑞金市",360782:"南康市",360783:"其它区",360800:"吉安市",360802:"吉州区",360803:"青原区",360821:"吉安县",360822:"吉水县",360823:"峡江县",360824:"新干县",360825:"永丰县",360826:"泰和县",360827:"遂川县",360828:"万安县",360829:"安福县",360830:"永新县",360881:"井冈山市",360882:"其它区",360900:"宜春市",360902:"袁州区",360921:"奉新县",360922:"万载县",360923:"上高县",360924:"宜丰县",360925:"靖安县",360926:"铜鼓县",360981:"丰城市",360982:"樟树市",360983:"高安市",360984:"其它区",361e3:"抚州市",361002:"临川区",361021:"南城县",361022:"黎川县",361023:"南丰县",361024:"崇仁县",361025:"乐安县",361026:"宜黄县",361027:"金溪县",361028:"资溪县",361029:"东乡县",361030:"广昌县",361031:"其它区",361100:"上饶市",361102:"信州区",361121:"上饶县",361122:"广丰县",361123:"玉山县",361124:"铅山县",361125:"横峰县",361126:"弋阳县",361127:"余干县",361128:"鄱阳县",361129:"万年县",361130:"婺源县",361181:"德兴市",361182:"其它区",37e4:"山东省",370100:"济南市",370102:"历下区",370103:"市中区",370104:"槐荫区",370105:"天桥区",370112:"历城区",370113:"长清区",370124:"平阴县",370125:"济阳县",370126:"商河县",370181:"章丘市",370182:"其它区",370200:"青岛市",370202:"市南区",370203:"市北区",370211:"黄岛区",370212:"崂山区",370213:"李沧区",370214:"城阳区",370281:"胶州市",370282:"即墨市",370283:"平度市",370285:"莱西市",370286:"其它区",370300:"淄博市",370302:"淄川区",370303:"张店区",370304:"博山区",370305:"临淄区",370306:"周村区",370321:"桓台县",370322:"高青县",370323:"沂源县",370324:"其它区",370400:"枣庄市",370402:"市中区",370403:"薛城区",370404:"峄城区",370405:"台儿庄区",370406:"山亭区",370481:"滕州市",370482:"其它区",370500:"东营市",370502:"东营区",370503:"河口区",370521:"垦利县",370522:"利津县",370523:"广饶县",370591:"其它区",370600:"烟台市",370602:"芝罘区",370611:"福山区",370612:"牟平区",370613:"莱山区",370634:"长岛县",370681:"龙口市",370682:"莱阳市",370683:"莱州市",370684:"蓬莱市",370685:"招远市",370686:"栖霞市",370687:"海阳市",370688:"其它区",370700:"潍坊市",370702:"潍城区",370703:"寒亭区",370704:"坊子区",370705:"奎文区",370724:"临朐县",370725:"昌乐县",370781:"青州市",370782:"诸城市",370783:"寿光市",370784:"安丘市",370785:"高密市",370786:"昌邑市",370787:"其它区",370800:"济宁市",370802:"市中区",370811:"任城区",370826:"微山县",370827:"鱼台县",370828:"金乡县",370829:"嘉祥县",370830:"汶上县",370831:"泗水县",370832:"梁山县",370881:"曲阜市",370882:"兖州市",370883:"邹城市",370884:"其它区",370900:"泰安市",370902:"泰山区",370903:"岱岳区",370921:"宁阳县",370923:"东平县",370982:"新泰市",370983:"肥城市",370984:"其它区",371e3:"威海市",371002:"环翠区",371081:"文登市",371082:"荣成市",371083:"乳山市",371084:"其它区",371100:"日照市",371102:"东港区",371103:"岚山区",371121:"五莲县",371122:"莒县",371123:"其它区",371200:"莱芜市",371202:"莱城区",371203:"钢城区",371204:"其它区",371300:"临沂市",371302:"兰山区",371311:"罗庄区",371312:"河东区",371321:"沂南县",371322:"郯城县",371323:"沂水县",371324:"苍山县",371325:"费县",371326:"平邑县",371327:"莒南县",371328:"蒙阴县",371329:"临沭县",371330:"其它区",371400:"德州市",371402:"德城区",371421:"陵县",371422:"宁津县",371423:"庆云县",371424:"临邑县",371425:"齐河县",371426:"平原县",371427:"夏津县",371428:"武城县",371481:"乐陵市",371482:"禹城市",371483:"其它区",371500:"聊城市",371502:"东昌府区",371521:"阳谷县",371522:"莘县",371523:"茌平县",371524:"东阿县",371525:"冠县",371526:"高唐县",371581:"临清市",371582:"其它区",371600:"滨州市",371602:"滨城区",371621:"惠民县",371622:"阳信县",371623:"无棣县",371624:"沾化县",371625:"博兴县",371626:"邹平县",371627:"其它区",371700:"菏泽市",371702:"牡丹区",371721:"曹县",371722:"单县",371723:"成武县",371724:"巨野县",371725:"郓城县",371726:"鄄城县",371727:"定陶县",371728:"东明县",371729:"其它区",41e4:"河南省",410100:"郑州市",410102:"中原区",410103:"二七区",410104:"管城回族区",410105:"金水区",410106:"上街区",410108:"惠济区",410122:"中牟县",410181:"巩义市",410182:"荥阳市",410183:"新密市",410184:"新郑市",410185:"登封市",410188:"其它区",410200:"开封市",410202:"龙亭区",410203:"顺河回族区",410204:"鼓楼区",410205:"禹王台区",410211:"金明区",410221:"杞县",410222:"通许县",410223:"尉氏县",410224:"开封县",410225:"兰考县",410226:"其它区",410300:"洛阳市",410302:"老城区",410303:"西工区",410304:"瀍河回族区",410305:"涧西区",410306:"吉利区",410307:"洛龙区",410322:"孟津县",410323:"新安县",410324:"栾川县",410325:"嵩县",410326:"汝阳县",410327:"宜阳县",410328:"洛宁县",410329:"伊川县",410381:"偃师市",410400:"平顶山市",410402:"新华区",410403:"卫东区",410404:"石龙区",410411:"湛河区",410421:"宝丰县",410422:"叶县",410423:"鲁山县",410425:"郏县",410481:"舞钢市",410482:"汝州市",410483:"其它区",410500:"安阳市",410502:"文峰区",410503:"北关区",410505:"殷都区",410506:"龙安区",410522:"安阳县",410523:"汤阴县",410526:"滑县",410527:"内黄县",410581:"林州市",410582:"其它区",410600:"鹤壁市",410602:"鹤山区",410603:"山城区",410611:"淇滨区",410621:"浚县",410622:"淇县",410623:"其它区",410700:"新乡市",410702:"红旗区",410703:"卫滨区",410704:"凤泉区",410711:"牧野区",410721:"新乡县",410724:"获嘉县",410725:"原阳县",410726:"延津县",410727:"封丘县",410728:"长垣县",410781:"卫辉市",410782:"辉县市",410783:"其它区",410800:"焦作市",410802:"解放区",410803:"中站区",410804:"马村区",410811:"山阳区",410821:"修武县",410822:"博爱县",410823:"武陟县",410825:"温县",410881:"济源市",410882:"沁阳市",410883:"孟州市",410884:"其它区",410900:"濮阳市",410902:"华龙区",410922:"清丰县",410923:"南乐县",410926:"范县",410927:"台前县",410928:"濮阳县",410929:"其它区",411e3:"许昌市",411002:"魏都区",411023:"许昌县",411024:"鄢陵县",411025:"襄城县",411081:"禹州市",411082:"长葛市",411083:"其它区",411100:"漯河市",411102:"源汇区",411103:"郾城区",411104:"召陵区",411121:"舞阳县",411122:"临颍县",411123:"其它区",411200:"三门峡市",411202:"湖滨区",411221:"渑池县",411222:"陕县",411224:"卢氏县",411281:"义马市",411282:"灵宝市",411283:"其它区",411300:"南阳市",411302:"宛城区",411303:"卧龙区",411321:"南召县",411322:"方城县",411323:"西峡县",411324:"镇平县",411325:"内乡县",411326:"淅川县",411327:"社旗县",411328:"唐河县",411329:"新野县",411330:"桐柏县",411381:"邓州市",411382:"其它区",411400:"商丘市",411402:"梁园区",411403:"睢阳区",411421:"民权县",411422:"睢县",411423:"宁陵县",411424:"柘城县",411425:"虞城县",411426:"夏邑县",411481:"永城市",411482:"其它区",411500:"信阳市",411502:"浉河区",411503:"平桥区",411521:"罗山县",411522:"光山县",411523:"新县",411524:"商城县",411525:"固始县",411526:"潢川县",411527:"淮滨县",411528:"息县",411529:"其它区",411600:"周口市",411602:"川汇区",411621:"扶沟县",411622:"西华县",411623:"商水县",411624:"沈丘县",411625:"郸城县",411626:"淮阳县",411627:"太康县",411628:"鹿邑县",411681:"项城市",411682:"其它区",411700:"驻马店市",411702:"驿城区",411721:"西平县",411722:"上蔡县",411723:"平舆县",411724:"正阳县",411725:"确山县",411726:"泌阳县",411727:"汝南县",411728:"遂平县",411729:"新蔡县",411730:"其它区",42e4:"湖北省",420100:"武汉市",420102:"江岸区",420103:"江汉区",420104:"硚口区",420105:"汉阳区",420106:"武昌区",420107:"青山区",420111:"洪山区",420112:"东西湖区",420113:"汉南区",420114:"蔡甸区",420115:"江夏区",420116:"黄陂区",420117:"新洲区",420118:"其它区",420200:"黄石市",420202:"黄石港区",420203:"西塞山区",420204:"下陆区",420205:"铁山区",420222:"阳新县",420281:"大冶市",420282:"其它区",420300:"十堰市",420302:"茅箭区",420303:"张湾区",420321:"郧县",420322:"郧西县",420323:"竹山县",420324:"竹溪县",420325:"房县",420381:"丹江口市",420383:"其它区",420500:"宜昌市",420502:"西陵区",420503:"伍家岗区",420504:"点军区",420505:"猇亭区",420506:"夷陵区",420525:"远安县",420526:"兴山县",420527:"秭归县",420528:"长阳土家族自治县",420529:"五峰土家族自治县",420581:"宜都市",420582:"当阳市",420583:"枝江市",420584:"其它区",420600:"襄阳市",420602:"襄城区",420606:"樊城区",420607:"襄州区",420624:"南漳县",420625:"谷城县",420626:"保康县",420682:"老河口市",420683:"枣阳市",420684:"宜城市",420685:"其它区",420700:"鄂州市",420702:"梁子湖区",420703:"华容区",420704:"鄂城区",420705:"其它区",420800:"荆门市",420802:"东宝区",420804:"掇刀区",420821:"京山县",420822:"沙洋县",420881:"钟祥市",420882:"其它区",420900:"孝感市",420902:"孝南区",420921:"孝昌县",420922:"大悟县",420923:"云梦县",420981:"应城市",420982:"安陆市",420984:"汉川市",420985:"其它区",421e3:"荆州市",421002:"沙市区",421003:"荆州区",421022:"公安县",421023:"监利县",421024:"江陵县",421081:"石首市",421083:"洪湖市",421087:"松滋市",421088:"其它区",421100:"黄冈市",421102:"黄州区",421121:"团风县",421122:"红安县",421123:"罗田县",421124:"英山县",421125:"浠水县",421126:"蕲春县",421127:"黄梅县",421181:"麻城市",421182:"武穴市",421183:"其它区",421200:"咸宁市",421202:"咸安区",421221:"嘉鱼县",421222:"通城县",421223:"崇阳县",421224:"通山县",421281:"赤壁市",421283:"其它区",421300:"随州市",421302:"曾都区",421321:"随县",421381:"广水市",421382:"其它区",422800:"恩施土家族苗族自治州",422801:"恩施市",422802:"利川市",422822:"建始县",422823:"巴东县",422825:"宣恩县",422826:"咸丰县",422827:"来凤县",422828:"鹤峰县",422829:"其它区",429004:"仙桃市",429005:"潜江市",429006:"天门市",429021:"神农架林区",43e4:"湖南省",430100:"长沙市",430102:"芙蓉区",430103:"天心区",430104:"岳麓区",430105:"开福区",430111:"雨花区",430121:"长沙县",430122:"望城区",430124:"宁乡县",430181:"浏阳市",430182:"其它区",430200:"株洲市",430202:"荷塘区",430203:"芦淞区",430204:"石峰区",430211:"天元区",430221:"株洲县",430223:"攸县",430224:"茶陵县",430225:"炎陵县",430281:"醴陵市",430282:"其它区",430300:"湘潭市",430302:"雨湖区",430304:"岳塘区",430321:"湘潭县",430381:"湘乡市",430382:"韶山市",430383:"其它区",430400:"衡阳市",430405:"珠晖区",430406:"雁峰区",430407:"石鼓区",430408:"蒸湘区",430412:"南岳区",430421:"衡阳县",430422:"衡南县",430423:"衡山县",430424:"衡东县",430426:"祁东县",430481:"耒阳市",430482:"常宁市",430483:"其它区",430500:"邵阳市",430502:"双清区",430503:"大祥区",430511:"北塔区",430521:"邵东县",430522:"新邵县",430523:"邵阳县",430524:"隆回县",430525:"洞口县",430527:"绥宁县",430528:"新宁县",430529:"城步苗族自治县",430581:"武冈市",430582:"其它区",430600:"岳阳市",430602:"岳阳楼区",430603:"云溪区",430611:"君山区",430621:"岳阳县",430623:"华容县",430624:"湘阴县",430626:"平江县",430681:"汨罗市",430682:"临湘市",430683:"其它区",430700:"常德市",430702:"武陵区",430703:"鼎城区",430721:"安乡县",430722:"汉寿县",430723:"澧县",430724:"临澧县",430725:"桃源县",430726:"石门县",430781:"津市市",430782:"其它区",430800:"张家界市",430802:"永定区",430811:"武陵源区",430821:"慈利县",430822:"桑植县",430823:"其它区",430900:"益阳市",430902:"资阳区",430903:"赫山区",430921:"南县",430922:"桃江县",430923:"安化县",430981:"沅江市",430982:"其它区",431e3:"郴州市",431002:"北湖区",431003:"苏仙区",431021:"桂阳县",431022:"宜章县",431023:"永兴县",431024:"嘉禾县",431025:"临武县",431026:"汝城县",431027:"桂东县",431028:"安仁县",431081:"资兴市",431082:"其它区",431100:"永州市",431102:"零陵区",431103:"冷水滩区",431121:"祁阳县",431122:"东安县",431123:"双牌县",431124:"道县",431125:"江永县",431126:"宁远县",431127:"蓝山县",431128:"新田县",431129:"江华瑶族自治县",431130:"其它区",431200:"怀化市",431202:"鹤城区",431221:"中方县",431222:"沅陵县",431223:"辰溪县",431224:"溆浦县",431225:"会同县",431226:"麻阳苗族自治县",431227:"新晃侗族自治县",431228:"芷江侗族自治县",431229:"靖州苗族侗族自治县",431230:"通道侗族自治县",431281:"洪江市",431282:"其它区",431300:"娄底市",431302:"娄星区",431321:"双峰县",431322:"新化县",431381:"冷水江市",431382:"涟源市",431383:"其它区",433100:"湘西土家族苗族自治州",433101:"吉首市",433122:"泸溪县",433123:"凤凰县",433124:"花垣县",433125:"保靖县",433126:"古丈县",433127:"永顺县",433130:"龙山县",433131:"其它区",44e4:"广东省",440100:"广州市",440103:"荔湾区",440104:"越秀区",440105:"海珠区",440106:"天河区",440111:"白云区",440112:"黄埔区",440113:"番禺区",440114:"花都区",440115:"南沙区",440116:"萝岗区",440183:"增城市",440184:"从化市",440189:"其它区",440200:"韶关市",440203:"武江区",440204:"浈江区",440205:"曲江区",440222:"始兴县",440224:"仁化县",440229:"翁源县",440232:"乳源瑶族自治县",440233:"新丰县",440281:"乐昌市",440282:"南雄市",440283:"其它区",440300:"深圳市",440303:"罗湖区",440304:"福田区",440305:"南山区",440306:"宝安区",440307:"龙岗区",440308:"盐田区",440309:"其它区",440320:"光明新区",440321:"坪山新区",440322:"大鹏新区",440323:"龙华新区",440400:"珠海市",440402:"香洲区",440403:"斗门区",440404:"金湾区",440488:"其它区",440500:"汕头市",440507:"龙湖区",440511:"金平区",440512:"濠江区",440513:"潮阳区",440514:"潮南区",440515:"澄海区",440523:"南澳县",440524:"其它区",440600:"佛山市",440604:"禅城区",440605:"南海区",440606:"顺德区",440607:"三水区",440608:"高明区",440609:"其它区",440700:"江门市",440703:"蓬江区",440704:"江海区",440705:"新会区",440781:"台山市",440783:"开平市",440784:"鹤山市",440785:"恩平市",440786:"其它区",440800:"湛江市",440802:"赤坎区",440803:"霞山区",440804:"坡头区",440811:"麻章区",440823:"遂溪县",440825:"徐闻县",440881:"廉江市",440882:"雷州市",440883:"吴川市",440884:"其它区",440900:"茂名市",440902:"茂南区",440903:"茂港区",440923:"电白县",440981:"高州市",440982:"化州市",440983:"信宜市",440984:"其它区",441200:"肇庆市",441202:"端州区",441203:"鼎湖区",441223:"广宁县",441224:"怀集县",441225:"封开县",441226:"德庆县",441283:"高要市",441284:"四会市",441285:"其它区",441300:"惠州市",441302:"惠城区",441303:"惠阳区",441322:"博罗县",441323:"惠东县",441324:"龙门县",441325:"其它区",441400:"梅州市",441402:"梅江区",441421:"梅县",441422:"大埔县",441423:"丰顺县",441424:"五华县",441426:"平远县",441427:"蕉岭县",441481:"兴宁市",441482:"其它区",441500:"汕尾市",441502:"城区",441521:"海丰县",441523:"陆河县",441581:"陆丰市",441582:"其它区",441600:"河源市",441602:"源城区",441621:"紫金县",441622:"龙川县",441623:"连平县",441624:"和平县",441625:"东源县",441626:"其它区",441700:"阳江市",441702:"江城区",441721:"阳西县",441723:"阳东县",441781:"阳春市",441782:"其它区",441800:"清远市",441802:"清城区",441821:"佛冈县",441823:"阳山县",441825:"连山壮族瑶族自治县",441826:"连南瑶族自治县",441827:"清新区",441881:"英德市",441882:"连州市",441883:"其它区",441900:"东莞市",442e3:"中山市",442101:"东沙群岛",445100:"潮州市",445102:"湘桥区",445121:"潮安区",445122:"饶平县",445186:"其它区",445200:"揭阳市",445202:"榕城区",445221:"揭东区",445222:"揭西县",445224:"惠来县",445281:"普宁市",445285:"其它区",445300:"云浮市",445302:"云城区",445321:"新兴县",445322:"郁南县",445323:"云安县",445381:"罗定市",445382:"其它区",45e4:"广西壮族自治区",450100:"南宁市",450102:"兴宁区",450103:"青秀区",450105:"江南区",450107:"西乡塘区",450108:"良庆区",450109:"邕宁区",450122:"武鸣县",450123:"隆安县",450124:"马山县",450125:"上林县",450126:"宾阳县",450127:"横县",450128:"其它区",450200:"柳州市",450202:"城中区",450203:"鱼峰区",450204:"柳南区",450205:"柳北区",450221:"柳江县",450222:"柳城县",450223:"鹿寨县",450224:"融安县",450225:"融水苗族自治县",450226:"三江侗族自治县",450227:"其它区",450300:"桂林市",450302:"秀峰区",450303:"叠彩区",450304:"象山区",450305:"七星区",450311:"雁山区",450321:"阳朔县",450322:"临桂区",450323:"灵川县",450324:"全州县",450325:"兴安县",450326:"永福县",450327:"灌阳县",450328:"龙胜各族自治县",450329:"资源县",450330:"平乐县",450331:"荔浦县",450332:"恭城瑶族自治县",450333:"其它区",450400:"梧州市",450403:"万秀区",450405:"长洲区",450406:"龙圩区",450421:"苍梧县",450422:"藤县",450423:"蒙山县",450481:"岑溪市",450482:"其它区",450500:"北海市",450502:"海城区",450503:"银海区",450512:"铁山港区",450521:"合浦县",450522:"其它区",450600:"防城港市",450602:"港口区",450603:"防城区",450621:"上思县",450681:"东兴市",450682:"其它区",450700:"钦州市",450702:"钦南区",450703:"钦北区",450721:"灵山县",450722:"浦北县",450723:"其它区",450800:"贵港市",450802:"港北区",450803:"港南区",450804:"覃塘区",450821:"平南县",450881:"桂平市",450882:"其它区",450900:"玉林市",450902:"玉州区",450903:"福绵区",450921:"容县",450922:"陆川县",450923:"博白县",450924:"兴业县",450981:"北流市",450982:"其它区",451e3:"百色市",451002:"右江区",451021:"田阳县",451022:"田东县",451023:"平果县",451024:"德保县",451025:"靖西县",451026:"那坡县",451027:"凌云县",451028:"乐业县",451029:"田林县",451030:"西林县",451031:"隆林各族自治县",451032:"其它区",451100:"贺州市",451102:"八步区",451119:"平桂管理区",451121:"昭平县",451122:"钟山县",451123:"富川瑶族自治县",451124:"其它区",451200:"河池市",451202:"金城江区",451221:"南丹县",451222:"天峨县",451223:"凤山县",451224:"东兰县",451225:"罗城仫佬族自治县",451226:"环江毛南族自治县",451227:"巴马瑶族自治县",451228:"都安瑶族自治县",451229:"大化瑶族自治县",451281:"宜州市",451282:"其它区",451300:"来宾市",451302:"兴宾区",451321:"忻城县",451322:"象州县",451323:"武宣县",451324:"金秀瑶族自治县",451381:"合山市",451382:"其它区",451400:"崇左市",451402:"江州区",451421:"扶绥县",451422:"宁明县",451423:"龙州县",451424:"大新县",451425:"天等县",451481:"凭祥市",451482:"其它区",46e4:"海南省",460100:"海口市",460105:"秀英区",460106:"龙华区",460107:"琼山区",460108:"美兰区",460109:"其它区",460200:"三亚市",460300:"三沙市",460321:"西沙群岛",460322:"南沙群岛",460323:"中沙群岛的岛礁及其海域",469001:"五指山市",469002:"琼海市",469003:"儋州市",469005:"文昌市",469006:"万宁市",469007:"东方市",469025:"定安县",469026:"屯昌县",469027:"澄迈县",469028:"临高县",469030:"白沙黎族自治县",469031:"昌江黎族自治县",469033:"乐东黎族自治县",469034:"陵水黎族自治县",469035:"保亭黎族苗族自治县",469036:"琼中黎族苗族自治县",471005:"其它区",5e5:"重庆",500100:"重庆市",500101:"万州区",500102:"涪陵区",500103:"渝中区",500104:"大渡口区",500105:"江北区",500106:"沙坪坝区",500107:"九龙坡区",500108:"南岸区",500109:"北碚区",500110:"万盛区",500111:"双桥区",500112:"渝北区",500113:"巴南区",500114:"黔江区",500115:"长寿区",500222:"綦江区",500223:"潼南县",500224:"铜梁县",500225:"大足区",500226:"荣昌县",500227:"璧山县",500228:"梁平县",500229:"城口县",500230:"丰都县",500231:"垫江县",500232:"武隆县",500233:"忠县",500234:"开县",500235:"云阳县",500236:"奉节县",500237:"巫山县",500238:"巫溪县",500240:"石柱土家族自治县",500241:"秀山土家族苗族自治县",500242:"酉阳土家族苗族自治县",500243:"彭水苗族土家族自治县",500381:"江津区",500382:"合川区",500383:"永川区",500384:"南川区",500385:"其它区",51e4:"四川省",510100:"成都市",510104:"锦江区",510105:"青羊区",510106:"金牛区",510107:"武侯区",510108:"成华区",510112:"龙泉驿区",510113:"青白江区",510114:"新都区",510115:"温江区",510121:"金堂县",510122:"双流县",510124:"郫县",510129:"大邑县",510131:"蒲江县",510132:"新津县",510181:"都江堰市",510182:"彭州市",510183:"邛崃市",510184:"崇州市",510185:"其它区",510300:"自贡市",510302:"自流井区",510303:"贡井区",510304:"大安区",510311:"沿滩区",510321:"荣县",510322:"富顺县",510323:"其它区",510400:"攀枝花市",510402:"东区",510403:"西区",510411:"仁和区",510421:"米易县",510422:"盐边县",510423:"其它区",510500:"泸州市",510502:"江阳区",510503:"纳溪区",510504:"龙马潭区",510521:"泸县",510522:"合江县",510524:"叙永县",510525:"古蔺县",510526:"其它区",510600:"德阳市",510603:"旌阳区",510623:"中江县",510626:"罗江县",510681:"广汉市",510682:"什邡市",510683:"绵竹市",510684:"其它区",510700:"绵阳市",510703:"涪城区",510704:"游仙区",510722:"三台县",510723:"盐亭县",510724:"安县",510725:"梓潼县",510726:"北川羌族自治县",510727:"平武县",510781:"江油市",510782:"其它区",510800:"广元市",510802:"利州区",510811:"昭化区",510812:"朝天区",510821:"旺苍县",510822:"青川县",510823:"剑阁县",510824:"苍溪县",510825:"其它区",510900:"遂宁市",510903:"船山区",510904:"安居区",510921:"蓬溪县",510922:"射洪县",510923:"大英县",510924:"其它区",511e3:"内江市",511002:"市中区",511011:"东兴区",511024:"威远县",511025:"资中县",511028:"隆昌县",511029:"其它区",511100:"乐山市",511102:"市中区",511111:"沙湾区",511112:"五通桥区",511113:"金口河区",511123:"犍为县",511124:"井研县",511126:"夹江县",511129:"沐川县",511132:"峨边彝族自治县",511133:"马边彝族自治县",511181:"峨眉山市",511182:"其它区",511300:"南充市",511302:"顺庆区",511303:"高坪区",511304:"嘉陵区",511321:"南部县",511322:"营山县",511323:"蓬安县",511324:"仪陇县",511325:"西充县",511381:"阆中市",511382:"其它区",511400:"眉山市",511402:"东坡区",511421:"仁寿县",511422:"彭山县",511423:"洪雅县",511424:"丹棱县",511425:"青神县",511426:"其它区",511500:"宜宾市",511502:"翠屏区",511521:"宜宾县",511522:"南溪区",511523:"江安县",511524:"长宁县",511525:"高县",511526:"珙县",511527:"筠连县",511528:"兴文县",511529:"屏山县",511530:"其它区",511600:"广安市",511602:"广安区",511603:"前锋区",511621:"岳池县",511622:"武胜县",511623:"邻水县",511681:"华蓥市",511683:"其它区",511700:"达州市",511702:"通川区",511721:"达川区",511722:"宣汉县",511723:"开江县",511724:"大竹县",511725:"渠县",511781:"万源市",511782:"其它区",511800:"雅安市",511802:"雨城区",511821:"名山区",511822:"荥经县",511823:"汉源县",511824:"石棉县",511825:"天全县",511826:"芦山县",511827:"宝兴县",511828:"其它区",511900:"巴中市",511902:"巴州区",511903:"恩阳区",511921:"通江县",511922:"南江县",511923:"平昌县",511924:"其它区",512e3:"资阳市",512002:"雁江区",512021:"安岳县",512022:"乐至县",512081:"简阳市",512082:"其它区",513200:"阿坝藏族羌族自治州",513221:"汶川县",513222:"理县",513223:"茂县",513224:"松潘县",513225:"九寨沟县",513226:"金川县",513227:"小金县",513228:"黑水县",513229:"马尔康县",513230:"壤塘县",513231:"阿坝县",513232:"若尔盖县",513233:"红原县",513234:"其它区",513300:"甘孜藏族自治州",513321:"康定县",513322:"泸定县",513323:"丹巴县",513324:"九龙县",513325:"雅江县",513326:"道孚县",513327:"炉霍县",513328:"甘孜县",513329:"新龙县",513330:"德格县",513331:"白玉县",513332:"石渠县",513333:"色达县",513334:"理塘县",513335:"巴塘县",513336:"乡城县",513337:"稻城县",513338:"得荣县",513339:"其它区",513400:"凉山彝族自治州",513401:"西昌市",513422:"木里藏族自治县",513423:"盐源县",513424:"德昌县",513425:"会理县",513426:"会东县",513427:"宁南县",513428:"普格县",513429:"布拖县",513430:"金阳县",513431:"昭觉县",513432:"喜德县",513433:"冕宁县",513434:"越西县",513435:"甘洛县",513436:"美姑县",513437:"雷波县",513438:"其它区",52e4:"贵州省",520100:"贵阳市",520102:"南明区",520103:"云岩区",520111:"花溪区",520112:"乌当区",520113:"白云区",520121:"开阳县",520122:"息烽县",520123:"修文县",520151:"观山湖区",520181:"清镇市",520182:"其它区",520200:"六盘水市",520201:"钟山区",520203:"六枝特区",520221:"水城县",520222:"盘县",520223:"其它区",520300:"遵义市",520302:"红花岗区",520303:"汇川区",520321:"遵义县",520322:"桐梓县",520323:"绥阳县",520324:"正安县",520325:"道真仡佬族苗族自治县",520326:"务川仡佬族苗族自治县",520327:"凤冈县",520328:"湄潭县",520329:"余庆县",520330:"习水县",520381:"赤水市",520382:"仁怀市",520383:"其它区",520400:"安顺市",520402:"西秀区",520421:"平坝县",520422:"普定县",520423:"镇宁布依族苗族自治县",520424:"关岭布依族苗族自治县",520425:"紫云苗族布依族自治县",520426:"其它区",522200:"铜仁市",522201:"碧江区",522222:"江口县",522223:"玉屏侗族自治县",522224:"石阡县",522225:"思南县",522226:"印江土家族苗族自治县",522227:"德江县",522228:"沿河土家族自治县",522229:"松桃苗族自治县",522230:"万山区",522231:"其它区",522300:"黔西南布依族苗族自治州",522301:"兴义市",522322:"兴仁县",522323:"普安县",522324:"晴隆县",522325:"贞丰县",522326:"望谟县",522327:"册亨县",522328:"安龙县",522329:"其它区",522400:"毕节市",522401:"七星关区",522422:"大方县",522423:"黔西县",522424:"金沙县",522425:"织金县",522426:"纳雍县",522427:"威宁彝族回族苗族自治县",522428:"赫章县",522429:"其它区",522600:"黔东南苗族侗族自治州",522601:"凯里市",522622:"黄平县",522623:"施秉县",522624:"三穗县",522625:"镇远县",522626:"岑巩县",522627:"天柱县",522628:"锦屏县",522629:"剑河县",522630:"台江县",522631:"黎平县",522632:"榕江县",522633:"从江县",522634:"雷山县",522635:"麻江县",522636:"丹寨县",522637:"其它区",522700:"黔南布依族苗族自治州",522701:"都匀市",522702:"福泉市",522722:"荔波县",522723:"贵定县",522725:"瓮安县",522726:"独山县",522727:"平塘县",522728:"罗甸县",522729:"长顺县",522730:"龙里县",522731:"惠水县",522732:"三都水族自治县",522733:"其它区",53e4:"云南省",530100:"昆明市",530102:"五华区",530103:"盘龙区",530111:"官渡区",530112:"西山区",530113:"东川区",530121:"呈贡区",530122:"晋宁县",530124:"富民县",530125:"宜良县",530126:"石林彝族自治县",530127:"嵩明县",530128:"禄劝彝族苗族自治县",530129:"寻甸回族彝族自治县",530181:"安宁市",530182:"其它区",530300:"曲靖市",530302:"麒麟区",530321:"马龙县",530322:"陆良县",530323:"师宗县",530324:"罗平县",530325:"富源县",530326:"会泽县",530328:"沾益县",530381:"宣威市",530382:"其它区",530400:"玉溪市",530402:"红塔区",530421:"江川县",530422:"澄江县",530423:"通海县",530424:"华宁县",530425:"易门县",530426:"峨山彝族自治县",530427:"新平彝族傣族自治县",530428:"元江哈尼族彝族傣族自治县",530429:"其它区",530500:"保山市",530502:"隆阳区",530521:"施甸县",530522:"腾冲县",530523:"龙陵县",530524:"昌宁县",530525:"其它区",530600:"昭通市",530602:"昭阳区",530621:"鲁甸县",530622:"巧家县",530623:"盐津县",530624:"大关县",530625:"永善县",530626:"绥江县",530627:"镇雄县",530628:"彝良县",530629:"威信县",530630:"水富县",530631:"其它区",530700:"丽江市",530702:"古城区",530721:"玉龙纳西族自治县",530722:"永胜县",530723:"华坪县",530724:"宁蒗彝族自治县",530725:"其它区",530800:"普洱市",530802:"思茅区",530821:"宁洱哈尼族彝族自治县",530822:"墨江哈尼族自治县",530823:"景东彝族自治县",530824:"景谷傣族彝族自治县",530825:"镇沅彝族哈尼族拉祜族自治县",530826:"江城哈尼族彝族自治县",530827:"孟连傣族拉祜族佤族自治县",530828:"澜沧拉祜族自治县",530829:"西盟佤族自治县",530830:"其它区",530900:"临沧市",530902:"临翔区",530921:"凤庆县",530922:"云县",530923:"永德县",530924:"镇康县",530925:"双江拉祜族佤族布朗族傣族自治县",530926:"耿马傣族佤族自治县",530927:"沧源佤族自治县",530928:"其它区",532300:"楚雄彝族自治州",532301:"楚雄市",532322:"双柏县",532323:"牟定县",532324:"南华县",532325:"姚安县",532326:"大姚县",532327:"永仁县",532328:"元谋县",532329:"武定县",532331:"禄丰县",532332:"其它区",532500:"红河哈尼族彝族自治州",532501:"个旧市",532502:"开远市",532522:"蒙自市",532523:"屏边苗族自治县",532524:"建水县",532525:"石屏县",532526:"弥勒市",532527:"泸西县",532528:"元阳县",532529:"红河县",532530:"金平苗族瑶族傣族自治县",532531:"绿春县",532532:"河口瑶族自治县",532533:"其它区",532600:"文山壮族苗族自治州",532621:"文山市",532622:"砚山县",532623:"西畴县",532624:"麻栗坡县",532625:"马关县",532626:"丘北县",532627:"广南县",532628:"富宁县",532629:"其它区",532800:"西双版纳傣族自治州",532801:"景洪市",532822:"勐海县",532823:"勐腊县",532824:"其它区",532900:"大理白族自治州",532901:"大理市",532922:"漾濞彝族自治县",532923:"祥云县",532924:"宾川县",532925:"弥渡县",532926:"南涧彝族自治县",532927:"巍山彝族回族自治县",532928:"永平县",532929:"云龙县",532930:"洱源县",532931:"剑川县",532932:"鹤庆县",532933:"其它区",533100:"德宏傣族景颇族自治州",533102:"瑞丽市",533103:"芒市",533122:"梁河县",533123:"盈江县",533124:"陇川县",533125:"其它区",533300:"怒江傈僳族自治州",533321:"泸水县",533323:"福贡县",533324:"贡山独龙族怒族自治县",533325:"兰坪白族普米族自治县",533326:"其它区",533400:"迪庆藏族自治州",533421:"香格里拉县",533422:"德钦县",533423:"维西傈僳族自治县",533424:"其它区",54e4:"西藏自治区",540100:"拉萨市",540102:"城关区",540121:"林周县",540122:"当雄县",540123:"尼木县",540124:"曲水县",540125:"堆龙德庆县",540126:"达孜县",540127:"墨竹工卡县",540128:"其它区",542100:"昌都地区",542121:"昌都县",542122:"江达县",542123:"贡觉县",542124:"类乌齐县",542125:"丁青县",542126:"察雅县",542127:"八宿县",542128:"左贡县",542129:"芒康县",542132:"洛隆县",542133:"边坝县",542134:"其它区",542200:"山南地区",542221:"乃东县",542222:"扎囊县",542223:"贡嘎县",542224:"桑日县",542225:"琼结县",542226:"曲松县",542227:"措美县",542228:"洛扎县",542229:"加查县",542231:"隆子县",542232:"错那县",542233:"浪卡子县",542234:"其它区",542300:"日喀则地区",542301:"日喀则市",542322:"南木林县",542323:"江孜县",542324:"定日县",542325:"萨迦县",542326:"拉孜县",542327:"昂仁县",542328:"谢通门县",542329:"白朗县",542330:"仁布县",542331:"康马县",542332:"定结县",542333:"仲巴县",542334:"亚东县",542335:"吉隆县",542336:"聂拉木县",542337:"萨嘎县",542338:"岗巴县",542339:"其它区",542400:"那曲地区",542421:"那曲县",542422:"嘉黎县",542423:"比如县",542424:"聂荣县",542425:"安多县",542426:"申扎县",542427:"索县",542428:"班戈县",542429:"巴青县",542430:"尼玛县",542431:"其它区",542432:"双湖县",542500:"阿里地区",542521:"普兰县",542522:"札达县",542523:"噶尔县",542524:"日土县",542525:"革吉县",542526:"改则县",542527:"措勤县",542528:"其它区",542600:"林芝地区",542621:"林芝县",542622:"工布江达县",542623:"米林县",542624:"墨脱县",542625:"波密县",542626:"察隅县",542627:"朗县",542628:"其它区",61e4:"陕西省",610100:"西安市",610102:"新城区",610103:"碑林区",610104:"莲湖区",610111:"灞桥区",610112:"未央区",610113:"雁塔区",610114:"阎良区",610115:"临潼区",610116:"长安区",610122:"蓝田县",610124:"周至县",610125:"户县",610126:"高陵县",610127:"其它区",610200:"铜川市",610202:"王益区",610203:"印台区",610204:"耀州区",610222:"宜君县",610223:"其它区",610300:"宝鸡市",610302:"渭滨区",610303:"金台区",610304:"陈仓区",610322:"凤翔县",610323:"岐山县",610324:"扶风县",610326:"眉县",610327:"陇县",610328:"千阳县",610329:"麟游县",610330:"凤县",610331:"太白县",610332:"其它区",610400:"咸阳市",610402:"秦都区",610403:"杨陵区",610404:"渭城区",610422:"三原县",610423:"泾阳县",610424:"乾县",610425:"礼泉县",610426:"永寿县",610427:"彬县",610428:"长武县",610429:"旬邑县",610430:"淳化县",610431:"武功县",610481:"兴平市",610482:"其它区",610500:"渭南市",610502:"临渭区",610521:"华县",610522:"潼关县",610523:"大荔县",610524:"合阳县",610525:"澄城县",610526:"蒲城县",610527:"白水县",610528:"富平县",610581:"韩城市",610582:"华阴市",610583:"其它区",610600:"延安市",610602:"宝塔区",610621:"延长县",610622:"延川县",610623:"子长县",610624:"安塞县",610625:"志丹县",610626:"吴起县",610627:"甘泉县",610628:"富县",610629:"洛川县",610630:"宜川县",610631:"黄龙县",610632:"黄陵县",610633:"其它区",610700:"汉中市",610702:"汉台区",610721:"南郑县",610722:"城固县",610723:"洋县",610724:"西乡县",610725:"勉县",610726:"宁强县",610727:"略阳县",610728:"镇巴县",610729:"留坝县",610730:"佛坪县",610731:"其它区",610800:"榆林市",610802:"榆阳区",610821:"神木县",610822:"府谷县",610823:"横山县",610824:"靖边县",610825:"定边县",610826:"绥德县",610827:"米脂县",610828:"佳县",610829:"吴堡县",610830:"清涧县",610831:"子洲县",610832:"其它区",610900:"安康市",610902:"汉滨区",610921:"汉阴县",610922:"石泉县",610923:"宁陕县",610924:"紫阳县",610925:"岚皋县",610926:"平利县",610927:"镇坪县",610928:"旬阳县",610929:"白河县",610930:"其它区",611e3:"商洛市",611002:"商州区",611021:"洛南县",611022:"丹凤县",611023:"商南县",611024:"山阳县",611025:"镇安县",611026:"柞水县",611027:"其它区",62e4:"甘肃省",620100:"兰州市",620102:"城关区",620103:"七里河区",620104:"西固区",620105:"安宁区",620111:"红古区",620121:"永登县",620122:"皋兰县",620123:"榆中县",620124:"其它区",620200:"嘉峪关市",620300:"金昌市",620302:"金川区",620321:"永昌县",620322:"其它区",620400:"白银市",620402:"白银区",620403:"平川区",620421:"靖远县",620422:"会宁县",620423:"景泰县",620424:"其它区",620500:"天水市",620502:"秦州区",620503:"麦积区",620521:"清水县",620522:"秦安县",620523:"甘谷县",620524:"武山县",620525:"张家川回族自治县",620526:"其它区",620600:"武威市",620602:"凉州区",620621:"民勤县",620622:"古浪县",620623:"天祝藏族自治县",620624:"其它区",620700:"张掖市",620702:"甘州区",620721:"肃南裕固族自治县",620722:"民乐县",620723:"临泽县",620724:"高台县",620725:"山丹县",620726:"其它区",620800:"平凉市",620802:"崆峒区",620821:"泾川县",620822:"灵台县",620823:"崇信县",620824:"华亭县",620825:"庄浪县",620826:"静宁县",620827:"其它区",620900:"酒泉市",620902:"肃州区",620921:"金塔县",620922:"瓜州县",620923:"肃北蒙古族自治县",620924:"阿克塞哈萨克族自治县",620981:"玉门市",620982:"敦煌市",620983:"其它区",621e3:"庆阳市",621002:"西峰区",621021:"庆城县",621022:"环县",621023:"华池县",621024:"合水县",621025:"正宁县",621026:"宁县",621027:"镇原县",621028:"其它区",621100:"定西市",621102:"安定区",621121:"通渭县",621122:"陇西县",621123:"渭源县",621124:"临洮县",621125:"漳县",621126:"岷县",621127:"其它区",621200:"陇南市",621202:"武都区",621221:"成县",621222:"文县",621223:"宕昌县",621224:"康县",621225:"西和县",621226:"礼县",621227:"徽县",621228:"两当县",621229:"其它区",622900:"临夏回族自治州",622901:"临夏市",622921:"临夏县",622922:"康乐县",622923:"永靖县",622924:"广河县",622925:"和政县",622926:"东乡族自治县",622927:"积石山保安族东乡族撒拉族自治县",622928:"其它区",623e3:"甘南藏族自治州",623001:"合作市",623021:"临潭县",623022:"卓尼县",623023:"舟曲县",623024:"迭部县",623025:"玛曲县",623026:"碌曲县",623027:"夏河县",623028:"其它区",63e4:"青海省",630100:"西宁市",630102:"城东区",630103:"城中区",630104:"城西区",630105:"城北区",630121:"大通回族土族自治县",630122:"湟中县",630123:"湟源县",630124:"其它区",632100:"海东市",632121:"平安县",632122:"民和回族土族自治县",632123:"乐都区",632126:"互助土族自治县",632127:"化隆回族自治县",632128:"循化撒拉族自治县",632129:"其它区",632200:"海北藏族自治州",632221:"门源回族自治县",632222:"祁连县",632223:"海晏县",632224:"刚察县",632225:"其它区",632300:"黄南藏族自治州",632321:"同仁县",632322:"尖扎县",632323:"泽库县",632324:"河南蒙古族自治县",632325:"其它区",632500:"海南藏族自治州",632521:"共和县",632522:"同德县",632523:"贵德县",632524:"兴海县",632525:"贵南县",632526:"其它区",632600:"果洛藏族自治州",632621:"玛沁县",632622:"班玛县",632623:"甘德县",632624:"达日县",632625:"久治县",632626:"玛多县",632627:"其它区",632700:"玉树藏族自治州",632721:"玉树市",632722:"杂多县",632723:"称多县",632724:"治多县",632725:"囊谦县",632726:"曲麻莱县",632727:"其它区",632800:"海西蒙古族藏族自治州",632801:"格尔木市",632802:"德令哈市",632821:"乌兰县",632822:"都兰县",632823:"天峻县",632824:"其它区",64e4:"宁夏回族自治区",640100:"银川市",640104:"兴庆区",640105:"西夏区",640106:"金凤区",640121:"永宁县",640122:"贺兰县",640181:"灵武市",640182:"其它区",640200:"石嘴山市",640202:"大武口区",640205:"惠农区",640221:"平罗县",640222:"其它区",640300:"吴忠市",640302:"利通区",640303:"红寺堡区",640323:"盐池县",640324:"同心县",640381:"青铜峡市",640382:"其它区",640400:"固原市",640402:"原州区",640422:"西吉县",640423:"隆德县",640424:"泾源县",640425:"彭阳县",640426:"其它区",640500:"中卫市",640502:"沙坡头区",640521:"中宁县",640522:"海原县",640523:"其它区",65e4:"新疆维吾尔自治区",650100:"乌鲁木齐市",650102:"天山区",650103:"沙依巴克区",650104:"新市区",650105:"水磨沟区",650106:"头屯河区",650107:"达坂城区",650109:"米东区",650121:"乌鲁木齐县",650122:"其它区",650200:"克拉玛依市",650202:"独山子区",650203:"克拉玛依区",650204:"白碱滩区",650205:"乌尔禾区",650206:"其它区",652100:"吐鲁番地区",652101:"吐鲁番市",652122:"鄯善县",652123:"托克逊县",652124:"其它区",652200:"哈密地区",652201:"哈密市",652222:"巴里坤哈萨克自治县",652223:"伊吾县",652224:"其它区",652300:"昌吉回族自治州",652301:"昌吉市",652302:"阜康市",652323:"呼图壁县",652324:"玛纳斯县",652325:"奇台县",652327:"吉木萨尔县",652328:"木垒哈萨克自治县",652329:"其它区",652700:"博尔塔拉蒙古自治州",652701:"博乐市",652702:"阿拉山口市",652722:"精河县",652723:"温泉县",652724:"其它区",652800:"巴音郭楞蒙古自治州",652801:"库尔勒市",652822:"轮台县",652823:"尉犁县",652824:"若羌县",652825:"且末县",652826:"焉耆回族自治县",652827:"和静县",652828:"和硕县",652829:"博湖县",652830:"其它区",652900:"阿克苏地区",652901:"阿克苏市",652922:"温宿县",652923:"库车县",652924:"沙雅县",652925:"新和县",652926:"拜城县",652927:"乌什县",652928:"阿瓦提县",652929:"柯坪县",652930:"其它区",653e3:"克孜勒苏柯尔克孜自治州",653001:"阿图什市",653022:"阿克陶县",653023:"阿合奇县",653024:"乌恰县",653025:"其它区",653100:"喀什地区",653101:"喀什市",653121:"疏附县",653122:"疏勒县",653123:"英吉沙县",653124:"泽普县",653125:"莎车县",653126:"叶城县",653127:"麦盖提县",653128:"岳普湖县",653129:"伽师县",653130:"巴楚县",653131:"塔什库尔干塔吉克自治县",653132:"其它区",653200:"和田地区",653201:"和田市",653221:"和田县",653222:"墨玉县",653223:"皮山县",653224:"洛浦县",653225:"策勒县",653226:"于田县",653227:"民丰县",653228:"其它区",654e3:"伊犁哈萨克自治州",654002:"伊宁市",654003:"奎屯市",654021:"伊宁县",654022:"察布查尔锡伯自治县",654023:"霍城县",654024:"巩留县",654025:"新源县",654026:"昭苏县",654027:"特克斯县",654028:"尼勒克县",654029:"其它区",654200:"塔城地区",654201:"塔城市",654202:"乌苏市",654221:"额敏县",654223:"沙湾县",654224:"托里县",654225:"裕民县",654226:"和布克赛尔蒙古自治县",654227:"其它区",654300:"阿勒泰地区",654301:"阿勒泰市",654321:"布尔津县",654322:"富蕴县",654323:"福海县",654324:"哈巴河县",654325:"青河县",654326:"吉木乃县",654327:"其它区",659001:"石河子市",659002:"阿拉尔市",659003:"图木舒克市",659004:"五家渠市",71e4:"台湾",710100:"台北市",710101:"中正区",710102:"大同区",710103:"中山区",710104:"松山区",710105:"大安区",710106:"万华区",710107:"信义区",710108:"士林区",710109:"北投区",710110:"内湖区",710111:"南港区",710112:"文山区",710113:"其它区",710200:"高雄市",710201:"新兴区",710202:"前金区",710203:"芩雅区",710204:"盐埕区",710205:"鼓山区",710206:"旗津区",710207:"前镇区",710208:"三民区",710209:"左营区",710210:"楠梓区",710211:"小港区",710212:"其它区",710241:"苓雅区",710242:"仁武区",710243:"大社区",710244:"冈山区",710245:"路竹区",710246:"阿莲区",710247:"田寮区",710248:"燕巢区",710249:"桥头区",710250:"梓官区",710251:"弥陀区",710252:"永安区",710253:"湖内区",710254:"凤山区",710255:"大寮区",710256:"林园区",710257:"鸟松区",710258:"大树区",710259:"旗山区",710260:"美浓区",710261:"六龟区",710262:"内门区",710263:"杉林区",710264:"甲仙区",710265:"桃源区",710266:"那玛夏区",710267:"茂林区",710268:"茄萣区",710300:"台南市",710301:"中西区",710302:"东区",710303:"南区",710304:"北区",710305:"安平区",710306:"安南区",710307:"其它区",710339:"永康区",710340:"归仁区",710341:"新化区",710342:"左镇区",710343:"玉井区",710344:"楠西区",710345:"南化区",710346:"仁德区",710347:"关庙区",710348:"龙崎区",710349:"官田区",710350:"麻豆区",710351:"佳里区",710352:"西港区",710353:"七股区",710354:"将军区",710355:"学甲区",710356:"北门区",710357:"新营区",710358:"后壁区",710359:"白河区",710360:"东山区",710361:"六甲区",710362:"下营区",710363:"柳营区",710364:"盐水区",710365:"善化区",710366:"大内区",710367:"山上区",710368:"新市区",710369:"安定区",710400:"台中市",710401:"中区",710402:"东区",710403:"南区",710404:"西区",710405:"北区",710406:"北屯区",710407:"西屯区",710408:"南屯区",710409:"其它区",710431:"太平区",710432:"大里区",710433:"雾峰区",710434:"乌日区",710435:"丰原区",710436:"后里区",710437:"石冈区",710438:"东势区",710439:"和平区",710440:"新社区",710441:"潭子区",710442:"大雅区",710443:"神冈区",710444:"大肚区",710445:"沙鹿区",710446:"龙井区",710447:"梧栖区",710448:"清水区",710449:"大甲区",710450:"外埔区",710451:"大安区",710500:"金门县",710507:"金沙镇",710508:"金湖镇",710509:"金宁乡",710510:"金城镇",710511:"烈屿乡",710512:"乌坵乡",710600:"南投县",710614:"南投市",710615:"中寮乡",710616:"草屯镇",710617:"国姓乡",710618:"埔里镇",710619:"仁爱乡",710620:"名间乡",710621:"集集镇",710622:"水里乡",710623:"鱼池乡",710624:"信义乡",710625:"竹山镇",710626:"鹿谷乡",710700:"基隆市",710701:"仁爱区",710702:"信义区",710703:"中正区",710704:"中山区",710705:"安乐区",710706:"暖暖区",710707:"七堵区",710708:"其它区",710800:"新竹市",710801:"东区",710802:"北区",710803:"香山区",710804:"其它区",710900:"嘉义市",710901:"东区",710902:"西区",710903:"其它区",711100:"新北市",711130:"万里区",711131:"金山区",711132:"板桥区",711133:"汐止区",711134:"深坑区",711135:"石碇区",711136:"瑞芳区",711137:"平溪区",711138:"双溪区",711139:"贡寮区",711140:"新店区",711141:"坪林区",711142:"乌来区",711143:"永和区",711144:"中和区",711145:"土城区",711146:"三峡区",711147:"树林区",711148:"莺歌区",711149:"三重区",711150:"新庄区",711151:"泰山区",711152:"林口区",711153:"芦洲区",711154:"五股区",711155:"八里区",711156:"淡水区",711157:"三芝区",711158:"石门区",711200:"宜兰县",711214:"宜兰市",711215:"头城镇",711216:"礁溪乡",711217:"壮围乡",711218:"员山乡",711219:"罗东镇",711220:"三星乡",711221:"大同乡",711222:"五结乡",711223:"冬山乡",711224:"苏澳镇",711225:"南澳乡",711226:"钓鱼台",711300:"新竹县",711314:"竹北市",711315:"湖口乡",711316:"新丰乡",711317:"新埔镇",711318:"关西镇",711319:"芎林乡",711320:"宝山乡",711321:"竹东镇",711322:"五峰乡",711323:"横山乡",711324:"尖石乡",711325:"北埔乡",711326:"峨眉乡",711400:"桃园县",711414:"中坜市",711415:"平镇市",711416:"龙潭乡",711417:"杨梅市",711418:"新屋乡",711419:"观音乡",711420:"桃园市",711421:"龟山乡",711422:"八德市",711423:"大溪镇",711424:"复兴乡",711425:"大园乡",711426:"芦竹乡",711500:"苗栗县",711519:"竹南镇",711520:"头份镇",711521:"三湾乡",711522:"南庄乡",711523:"狮潭乡",711524:"后龙镇",711525:"通霄镇",711526:"苑里镇",711527:"苗栗市",711528:"造桥乡",711529:"头屋乡",711530:"公馆乡",711531:"大湖乡",711532:"泰安乡",711533:"铜锣乡",711534:"三义乡",711535:"西湖乡",711536:"卓兰镇",711700:"彰化县",711727:"彰化市",711728:"芬园乡",711729:"花坛乡",711730:"秀水乡",711731:"鹿港镇",711732:"福兴乡",711733:"线西乡",711734:"和美镇",711735:"伸港乡",711736:"员林镇",711737:"社头乡",711738:"永靖乡",711739:"埔心乡",711740:"溪湖镇",711741:"大村乡",711742:"埔盐乡",711743:"田中镇",711744:"北斗镇",711745:"田尾乡",711746:"埤头乡",711747:"溪州乡",711748:"竹塘乡",711749:"二林镇",711750:"大城乡",711751:"芳苑乡",711752:"二水乡",711900:"嘉义县",711919:"番路乡",711920:"梅山乡",711921:"竹崎乡",711922:"阿里山乡",711923:"中埔乡",711924:"大埔乡",711925:"水上乡",711926:"鹿草乡",711927:"太保市",711928:"朴子市",711929:"东石乡",711930:"六脚乡",711931:"新港乡",711932:"民雄乡",711933:"大林镇",711934:"溪口乡",711935:"义竹乡",711936:"布袋镇",712100:"云林县",712121:"斗南镇",712122:"大埤乡",712123:"虎尾镇",712124:"土库镇",712125:"褒忠乡",712126:"东势乡",712127:"台西乡",712128:"仑背乡",712129:"麦寮乡",712130:"斗六市",712131:"林内乡",712132:"古坑乡",712133:"莿桐乡",712134:"西螺镇",712135:"二仑乡",712136:"北港镇",712137:"水林乡",712138:"口湖乡",712139:"四湖乡",712140:"元长乡",712400:"屏东县",712434:"屏东市",712435:"三地门乡",712436:"雾台乡",712437:"玛家乡",712438:"九如乡",712439:"里港乡",712440:"高树乡",712441:"盐埔乡",712442:"长治乡",712443:"麟洛乡",712444:"竹田乡",712445:"内埔乡",712446:"万丹乡",712447:"潮州镇",712448:"泰武乡",712449:"来义乡",712450:"万峦乡",712451:"崁顶乡",712452:"新埤乡",712453:"南州乡",712454:"林边乡",712455:"东港镇",712456:"琉球乡",712457:"佳冬乡",712458:"新园乡",712459:"枋寮乡",712460:"枋山乡",712461:"春日乡",712462:"狮子乡",712463:"车城乡",712464:"牡丹乡",712465:"恒春镇",712466:"满州乡",712500:"台东县",712517:"台东市",712518:"绿岛乡",712519:"兰屿乡",712520:"延平乡",712521:"卑南乡",712522:"鹿野乡",712523:"关山镇",712524:"海端乡",712525:"池上乡",712526:"东河乡",712527:"成功镇",712528:"长滨乡",712529:"金峰乡",712530:"大武乡",712531:"达仁乡",712532:"太麻里乡",712600:"花莲县",712615:"花莲市",712616:"新城乡",712617:"太鲁阁",712618:"秀林乡",712619:"吉安乡",712620:"寿丰乡",712621:"凤林镇",712622:"光复乡",712623:"丰滨乡",712624:"瑞穗乡",712625:"万荣乡",712626:"玉里镇",712627:"卓溪乡",712628:"富里乡",712700:"澎湖县",712707:"马公市",712708:"西屿乡",712709:"望安乡",712710:"七美乡",712711:"白沙乡",712712:"湖西乡",712800:"连江县",712805:"南竿乡",712806:"北竿乡",712807:"莒光乡",712808:"东引乡",81e4:"香港特别行政区",810100:"香港岛",810101:"中西区",810102:"湾仔",810103:"东区",810104:"南区",810200:"九龙",810201:"九龙城区",810202:"油尖旺区",810203:"深水埗区",810204:"黄大仙区",810205:"观塘区",810300:"新界",810301:"北区",810302:"大埔区",810303:"沙田区",810304:"西贡区",810305:"元朗区",810306:"屯门区",810307:"荃湾区",810308:"葵青区",810309:"离岛区",82e4:"澳门特别行政区",820100:"澳门半岛",820200:"离岛",99e4:"海外",990100:"海外"},r=function(){var t=[];for(var e in n){var r="0000"===e.slice(2,6)?void 0:"00"==e.slice(4,6)?e.slice(0,2)+"0000":e.slice(0,4)+"00";t.push({id:e,pid:r,name:n[e]})}return function(t){for(var e,n={},r=0;r<t.length;r++)(e=t[r])&&e.id&&(n[e.id]=e);for(var i=[],a=0;a<t.length;a++)if(e=t[a])if(null!=e.pid||null!=e.parentId){var o=n[e.pid]||n[e.parentId];o&&(o.children||(o.children=[]),o.children.push(e))}else i.push(e);return i}(t)}();t.exports=r},function(t,e,n){var r,i=n(18);t.exports={d4:function(){return this.natural(1,4)},d6:function(){return this.natural(1,6)},d8:function(){return this.natural(1,8)},d12:function(){return this.natural(1,12)},d20:function(){return this.natural(1,20)},d100:function(){return this.natural(1,100)},guid:function(){var t="abcdefABCDEF1234567890";return this.string(t,8)+"-"+this.string(t,4)+"-"+this.string(t,4)+"-"+this.string(t,4)+"-"+this.string(t,12)},uuid:function(){return this.guid()},id:function(){var t,e=0,n=["7","9","10","5","8","4","2","1","6","3","7","9","10","5","8","4","2"];t=this.pick(i).id+this.date("yyyyMMdd")+this.string("number",3);for(var r=0;r<t.length;r++)e+=t[r]*n[r];return t+=["1","0","X","9","8","7","6","5","4","3","2"][e%11]},increment:(r=0,function(t){return r+=+t||1}),inc:function(t){return this.increment(t)}}},function(t,e,n){var r=n(21),i=n(22);t.exports={Parser:r,Handler:i}},function(t,e){function n(t){this.type=t,this.offset=n.offset(),this.text=n.text()}function r(t,e){n.call(this,"alternate"),this.left=t,this.right=e}function i(t){n.call(this,"match"),this.body=t.filter(Boolean)}function a(t,e){n.call(this,t),this.body=e}function o(t){a.call(this,"capture-group"),this.index=b[this.offset]||(b[this.offset]=g++),this.body=t}function s(t,e){n.call(this,"quantified"),this.body=t,this.quantifier=e}function u(t,e){n.call(this,"quantifier"),this.min=t,this.max=e,this.greedy=!0}function l(t,e){n.call(this,"charset"),this.invert=t,this.body=e}function c(t,e){n.call(this,"range"),this.start=t,this.end=e}function p(t){n.call(this,"literal"),this.body=t,this.escaped=this.body!=this.text}function h(t){n.call(this,"unicode"),this.code=t.toUpperCase()}function f(t){n.call(this,"hex"),this.code=t.toUpperCase()}function d(t){n.call(this,"octal"),this.code=t.toUpperCase()}function _(t){n.call(this,"back-reference"),this.code=t.toUpperCase()}function v(t){n.call(this,"control-character"),this.code=t.toUpperCase()}var m=function(){function t(t,e,n,r,i){this.expected=t,this.found=e,this.offset=n,this.line=r,this.column=i,this.name="SyntaxError",this.message=function(t,e){var n;switch(t.length){case 0:n="end of input";break;case 1:n=t[0];break;default:n=t.slice(0,-1).join(", ")+" or "+t[t.length-1]}return"Expected "+n+" but "+(e?'"'+function(t){function e(t){return t.charCodeAt(0).toString(16).toUpperCase()}return t.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\x08/g,"\\b").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\f/g,"\\f").replace(/\r/g,"\\r").replace(/[\x00-\x07\x0B\x0E\x0F]/g,(function(t){return"\\x0"+e(t)})).replace(/[\x10-\x1F\x80-\xFF]/g,(function(t){return"\\x"+e(t)})).replace(/[\u0180-\u0FFF]/g,(function(t){return"\\u0"+e(t)})).replace(/[\u1080-\uFFFF]/g,(function(t){return"\\u"+e(t)}))}(e)+'"':"end of input")+" found."}(t,e)}return function(t,e){function n(){this.constructor=t}n.prototype=e.prototype,t.prototype=new n}(t,Error),{SyntaxError:t,parse:function(e){function m(){return e.substring(Zn,Qn)}function g(){return Zn}function b(t){return tr!==t&&(tr>t&&(tr=0,er={line:1,column:1,seenCR:!1}),function(t,n,r){var i,a;for(i=n;r>i;i++)"\n"===(a=e.charAt(i))?(t.seenCR||t.line++,t.column=1,t.seenCR=!1):"\r"===a||"\u2028"===a||"\u2029"===a?(t.line++,t.column=1,t.seenCR=!0):(t.column++,t.seenCR=!1)}(er,tr,t),tr=t),er}function y(t){nr>Qn||(Qn>nr&&(nr=Qn,rr=[]),rr.push(t))}function w(t){var e=0;for(t.sort();e<t.length;)t[e-1]===t[e]?t.splice(e,1):e++}function x(){var t,n,r,i,a;return t=Qn,null!==(n=k())?(r=Qn,124===e.charCodeAt(Qn)?(i=Ot,Qn++):(i=null,0===ir&&y(Et)),null!==i&&null!==(a=x())?r=i=[i,a]:(Qn=r,r=kt),null===r&&(r=$t),null!==r?(Zn=t,null===(n=At(n,r))?(Qn=t,t=n):t=n):(Qn=t,t=kt)):(Qn=t,t=kt),t}function k(){var t,e,n,r,i;if(t=Qn,null===(e=O())&&(e=$t),null!==e)if(n=Qn,ir++,r=C(),ir--,null===r?n=$t:(Qn=n,n=kt),null!==n){for(r=[],null===(i=A())&&(i=$());null!==i;)r.push(i),null===(i=A())&&(i=$());null!==r?(null===(i=E())&&(i=$t),null!==i?(Zn=t,null===(e=Ct(e,r,i))?(Qn=t,t=e):t=e):(Qn=t,t=kt)):(Qn=t,t=kt)}else Qn=t,t=kt;else Qn=t,t=kt;return t}function $(){var t;return null===(t=F())&&null===(t=U())&&(t=V()),t}function O(){var t,n;return t=Qn,94===e.charCodeAt(Qn)?(n=jt,Qn++):(n=null,0===ir&&y(St)),null!==n&&(Zn=t,n=Tt()),null===n?(Qn=t,t=n):t=n,t}function E(){var t,n;return t=Qn,36===e.charCodeAt(Qn)?(n=Pt,Qn++):(n=null,0===ir&&y(Rt)),null!==n&&(Zn=t,n=Dt()),null===n?(Qn=t,t=n):t=n,t}function A(){var t,e,n;return t=Qn,null!==(e=$())&&null!==(n=C())?(Zn=t,null===(e=Mt(e,n))?(Qn=t,t=e):t=e):(Qn=t,t=kt),t}function C(){var t,e,n;return ir++,t=Qn,null!==(e=j())?(null===(n=L())&&(n=$t),null!==n?(Zn=t,null===(e=Nt(e,n))?(Qn=t,t=e):t=e):(Qn=t,t=kt)):(Qn=t,t=kt),ir--,null===t&&(e=null,0===ir&&y(Lt)),t}function j(){var t;return null===(t=S())&&null===(t=T())&&null===(t=P())&&null===(t=R())&&null===(t=D())&&(t=M()),t}function S(){var t,n,r,i,a,o;return t=Qn,123===e.charCodeAt(Qn)?(n=Ft,Qn++):(n=null,0===ir&&y(It)),null!==n&&null!==(r=N())?(44===e.charCodeAt(Qn)?(i=zt,Qn++):(i=null,0===ir&&y(Ht)),null!==i&&null!==(a=N())?(125===e.charCodeAt(Qn)?(o=Bt,Qn++):(o=null,0===ir&&y(Ut)),null!==o?(Zn=t,null===(n=qt(r,a))?(Qn=t,t=n):t=n):(Qn=t,t=kt)):(Qn=t,t=kt)):(Qn=t,t=kt),t}function T(){var t,n,r,i;return t=Qn,123===e.charCodeAt(Qn)?(n=Ft,Qn++):(n=null,0===ir&&y(It)),null!==n&&null!==(r=N())?(e.substr(Qn,2)===Gt?(i=Gt,Qn+=2):(i=null,0===ir&&y(Kt)),null!==i?(Zn=t,null===(n=Wt(r))?(Qn=t,t=n):t=n):(Qn=t,t=kt)):(Qn=t,t=kt),t}function P(){var t,n,r,i;return t=Qn,123===e.charCodeAt(Qn)?(n=Ft,Qn++):(n=null,0===ir&&y(It)),null!==n&&null!==(r=N())?(125===e.charCodeAt(Qn)?(i=Bt,Qn++):(i=null,0===ir&&y(Ut)),null!==i?(Zn=t,null===(n=Vt(r))?(Qn=t,t=n):t=n):(Qn=t,t=kt)):(Qn=t,t=kt),t}function R(){var t,n;return t=Qn,43===e.charCodeAt(Qn)?(n=Xt,Qn++):(n=null,0===ir&&y(Jt)),null!==n&&(Zn=t,n=Yt()),null===n?(Qn=t,t=n):t=n,t}function D(){var t,n;return t=Qn,42===e.charCodeAt(Qn)?(n=Qt,Qn++):(n=null,0===ir&&y(Zt)),null!==n&&(Zn=t,n=te()),null===n?(Qn=t,t=n):t=n,t}function M(){var t,n;return t=Qn,63===e.charCodeAt(Qn)?(n=ee,Qn++):(n=null,0===ir&&y(ne)),null!==n&&(Zn=t,n=re()),null===n?(Qn=t,t=n):t=n,t}function L(){var t;return 63===e.charCodeAt(Qn)?(t=ee,Qn++):(t=null,0===ir&&y(ne)),t}function N(){var t,n,r;if(t=Qn,n=[],ie.test(e.charAt(Qn))?(r=e.charAt(Qn),Qn++):(r=null,0===ir&&y(ae)),null!==r)for(;null!==r;)n.push(r),ie.test(e.charAt(Qn))?(r=e.charAt(Qn),Qn++):(r=null,0===ir&&y(ae));else n=kt;return null!==n&&(Zn=t,n=oe(n)),null===n?(Qn=t,t=n):t=n,t}function F(){var t,n,r,i;return t=Qn,40===e.charCodeAt(Qn)?(n=se,Qn++):(n=null,0===ir&&y(ue)),null!==n?(null===(r=H())&&null===(r=B())&&null===(r=z())&&(r=I()),null!==r?(41===e.charCodeAt(Qn)?(i=le,Qn++):(i=null,0===ir&&y(ce)),null!==i?(Zn=t,null===(n=pe(r))?(Qn=t,t=n):t=n):(Qn=t,t=kt)):(Qn=t,t=kt)):(Qn=t,t=kt),t}function I(){var t,e;return t=Qn,null!==(e=x())&&(Zn=t,e=he(e)),null===e?(Qn=t,t=e):t=e,t}function z(){var t,n,r;return t=Qn,e.substr(Qn,2)===fe?(n=fe,Qn+=2):(n=null,0===ir&&y(de)),null!==n&&null!==(r=x())?(Zn=t,null===(n=_e(r))?(Qn=t,t=n):t=n):(Qn=t,t=kt),t}function H(){var t,n,r;return t=Qn,e.substr(Qn,2)===ve?(n=ve,Qn+=2):(n=null,0===ir&&y(me)),null!==n&&null!==(r=x())?(Zn=t,null===(n=ge(r))?(Qn=t,t=n):t=n):(Qn=t,t=kt),t}function B(){var t,n,r;return t=Qn,e.substr(Qn,2)===be?(n=be,Qn+=2):(n=null,0===ir&&y(ye)),null!==n&&null!==(r=x())?(Zn=t,null===(n=we(r))?(Qn=t,t=n):t=n):(Qn=t,t=kt),t}function U(){var t,n,r,i,a;if(ir++,t=Qn,91===e.charCodeAt(Qn)?(n=ke,Qn++):(n=null,0===ir&&y($e)),null!==n)if(94===e.charCodeAt(Qn)?(r=jt,Qn++):(r=null,0===ir&&y(St)),null===r&&(r=$t),null!==r){for(i=[],null===(a=q())&&(a=G());null!==a;)i.push(a),null===(a=q())&&(a=G());null!==i?(93===e.charCodeAt(Qn)?(a=Oe,Qn++):(a=null,0===ir&&y(Ee)),null!==a?(Zn=t,null===(n=Ae(r,i))?(Qn=t,t=n):t=n):(Qn=t,t=kt)):(Qn=t,t=kt)}else Qn=t,t=kt;else Qn=t,t=kt;return ir--,null===t&&(n=null,0===ir&&y(xe)),t}function q(){var t,n,r,i;return ir++,t=Qn,null!==(n=G())?(45===e.charCodeAt(Qn)?(r=je,Qn++):(r=null,0===ir&&y(Se)),null!==r&&null!==(i=G())?(Zn=t,null===(n=Te(n,i))?(Qn=t,t=n):t=n):(Qn=t,t=kt)):(Qn=t,t=kt),ir--,null===t&&(n=null,0===ir&&y(Ce)),t}function G(){var t;return ir++,null===(t=W())&&(t=K()),ir--,null===t&&0===ir&&y(Pe),t}function K(){var t,n;return t=Qn,Re.test(e.charAt(Qn))?(n=e.charAt(Qn),Qn++):(n=null,0===ir&&y(De)),null!==n&&(Zn=t,n=Me(n)),null===n?(Qn=t,t=n):t=n,t}function W(){var t;return null===(t=Q())&&null===(t=ht())&&null===(t=et())&&null===(t=nt())&&null===(t=rt())&&null===(t=it())&&null===(t=at())&&null===(t=ot())&&null===(t=st())&&null===(t=ut())&&null===(t=lt())&&null===(t=ct())&&null===(t=pt())&&null===(t=dt())&&null===(t=_t())&&null===(t=vt())&&null===(t=mt())&&(t=gt()),t}function V(){var t;return null===(t=X())&&null===(t=Y())&&(t=J()),t}function X(){var t,n;return t=Qn,46===e.charCodeAt(Qn)?(n=Le,Qn++):(n=null,0===ir&&y(Ne)),null!==n&&(Zn=t,n=Fe()),null===n?(Qn=t,t=n):t=n,t}function J(){var t,n;return ir++,t=Qn,ze.test(e.charAt(Qn))?(n=e.charAt(Qn),Qn++):(n=null,0===ir&&y(He)),null!==n&&(Zn=t,n=Me(n)),null===n?(Qn=t,t=n):t=n,ir--,null===t&&(n=null,0===ir&&y(Ie)),t}function Y(){var t;return null===(t=Z())&&null===(t=tt())&&null===(t=ht())&&null===(t=et())&&null===(t=nt())&&null===(t=rt())&&null===(t=it())&&null===(t=at())&&null===(t=ot())&&null===(t=st())&&null===(t=ut())&&null===(t=lt())&&null===(t=ct())&&null===(t=pt())&&null===(t=ft())&&null===(t=dt())&&null===(t=_t())&&null===(t=vt())&&null===(t=mt())&&(t=gt()),t}function Q(){var t,n;return t=Qn,e.substr(Qn,2)===Be?(n=Be,Qn+=2):(n=null,0===ir&&y(Ue)),null!==n&&(Zn=t,n=qe()),null===n?(Qn=t,t=n):t=n,t}function Z(){var t,n;return t=Qn,e.substr(Qn,2)===Be?(n=Be,Qn+=2):(n=null,0===ir&&y(Ue)),null!==n&&(Zn=t,n=Ge()),null===n?(Qn=t,t=n):t=n,t}function tt(){var t,n;return t=Qn,e.substr(Qn,2)===Ke?(n=Ke,Qn+=2):(n=null,0===ir&&y(We)),null!==n&&(Zn=t,n=Ve()),null===n?(Qn=t,t=n):t=n,t}function et(){var t,n;return t=Qn,e.substr(Qn,2)===Xe?(n=Xe,Qn+=2):(n=null,0===ir&&y(Je)),null!==n&&(Zn=t,n=Ye()),null===n?(Qn=t,t=n):t=n,t}function nt(){var t,n;return t=Qn,e.substr(Qn,2)===Qe?(n=Qe,Qn+=2):(n=null,0===ir&&y(Ze)),null!==n&&(Zn=t,n=tn()),null===n?(Qn=t,t=n):t=n,t}function rt(){var t,n;return t=Qn,e.substr(Qn,2)===en?(n=en,Qn+=2):(n=null,0===ir&&y(nn)),null!==n&&(Zn=t,n=rn()),null===n?(Qn=t,t=n):t=n,t}function it(){var t,n;return t=Qn,e.substr(Qn,2)===an?(n=an,Qn+=2):(n=null,0===ir&&y(on)),null!==n&&(Zn=t,n=sn()),null===n?(Qn=t,t=n):t=n,t}function at(){var t,n;return t=Qn,e.substr(Qn,2)===un?(n=un,Qn+=2):(n=null,0===ir&&y(ln)),null!==n&&(Zn=t,n=cn()),null===n?(Qn=t,t=n):t=n,t}function ot(){var t,n;return t=Qn,e.substr(Qn,2)===pn?(n=pn,Qn+=2):(n=null,0===ir&&y(hn)),null!==n&&(Zn=t,n=fn()),null===n?(Qn=t,t=n):t=n,t}function st(){var t,n;return t=Qn,e.substr(Qn,2)===dn?(n=dn,Qn+=2):(n=null,0===ir&&y(_n)),null!==n&&(Zn=t,n=vn()),null===n?(Qn=t,t=n):t=n,t}function ut(){var t,n;return t=Qn,e.substr(Qn,2)===mn?(n=mn,Qn+=2):(n=null,0===ir&&y(gn)),null!==n&&(Zn=t,n=bn()),null===n?(Qn=t,t=n):t=n,t}function lt(){var t,n;return t=Qn,e.substr(Qn,2)===yn?(n=yn,Qn+=2):(n=null,0===ir&&y(wn)),null!==n&&(Zn=t,n=xn()),null===n?(Qn=t,t=n):t=n,t}function ct(){var t,n;return t=Qn,e.substr(Qn,2)===kn?(n=kn,Qn+=2):(n=null,0===ir&&y($n)),null!==n&&(Zn=t,n=On()),null===n?(Qn=t,t=n):t=n,t}function pt(){var t,n;return t=Qn,e.substr(Qn,2)===En?(n=En,Qn+=2):(n=null,0===ir&&y(An)),null!==n&&(Zn=t,n=Cn()),null===n?(Qn=t,t=n):t=n,t}function ht(){var t,n,r;return t=Qn,e.substr(Qn,2)===jn?(n=jn,Qn+=2):(n=null,0===ir&&y(Sn)),null!==n?(e.length>Qn?(r=e.charAt(Qn),Qn++):(r=null,0===ir&&y(Tn)),null!==r?(Zn=t,null===(n=Pn(r))?(Qn=t,t=n):t=n):(Qn=t,t=kt)):(Qn=t,t=kt),t}function ft(){var t,n,r;return t=Qn,92===e.charCodeAt(Qn)?(n=Rn,Qn++):(n=null,0===ir&&y(Dn)),null!==n?(Mn.test(e.charAt(Qn))?(r=e.charAt(Qn),Qn++):(r=null,0===ir&&y(Ln)),null!==r?(Zn=t,null===(n=Nn(r))?(Qn=t,t=n):t=n):(Qn=t,t=kt)):(Qn=t,t=kt),t}function dt(){var t,n,r,i;if(t=Qn,e.substr(Qn,2)===Fn?(n=Fn,Qn+=2):(n=null,0===ir&&y(In)),null!==n){if(r=[],zn.test(e.charAt(Qn))?(i=e.charAt(Qn),Qn++):(i=null,0===ir&&y(Hn)),null!==i)for(;null!==i;)r.push(i),zn.test(e.charAt(Qn))?(i=e.charAt(Qn),Qn++):(i=null,0===ir&&y(Hn));else r=kt;null!==r?(Zn=t,null===(n=Bn(r))?(Qn=t,t=n):t=n):(Qn=t,t=kt)}else Qn=t,t=kt;return t}function _t(){var t,n,r,i;if(t=Qn,e.substr(Qn,2)===Un?(n=Un,Qn+=2):(n=null,0===ir&&y(qn)),null!==n){if(r=[],Gn.test(e.charAt(Qn))?(i=e.charAt(Qn),Qn++):(i=null,0===ir&&y(Kn)),null!==i)for(;null!==i;)r.push(i),Gn.test(e.charAt(Qn))?(i=e.charAt(Qn),Qn++):(i=null,0===ir&&y(Kn));else r=kt;null!==r?(Zn=t,null===(n=Wn(r))?(Qn=t,t=n):t=n):(Qn=t,t=kt)}else Qn=t,t=kt;return t}function vt(){var t,n,r,i;if(t=Qn,e.substr(Qn,2)===Vn?(n=Vn,Qn+=2):(n=null,0===ir&&y(Xn)),null!==n){if(r=[],Gn.test(e.charAt(Qn))?(i=e.charAt(Qn),Qn++):(i=null,0===ir&&y(Kn)),null!==i)for(;null!==i;)r.push(i),Gn.test(e.charAt(Qn))?(i=e.charAt(Qn),Qn++):(i=null,0===ir&&y(Kn));else r=kt;null!==r?(Zn=t,null===(n=Jn(r))?(Qn=t,t=n):t=n):(Qn=t,t=kt)}else Qn=t,t=kt;return t}function mt(){var t,n;return t=Qn,e.substr(Qn,2)===Fn?(n=Fn,Qn+=2):(n=null,0===ir&&y(In)),null!==n&&(Zn=t,n=Yn()),null===n?(Qn=t,t=n):t=n,t}function gt(){var t,n,r;return t=Qn,92===e.charCodeAt(Qn)?(n=Rn,Qn++):(n=null,0===ir&&y(Dn)),null!==n?(e.length>Qn?(r=e.charAt(Qn),Qn++):(r=null,0===ir&&y(Tn)),null!==r?(Zn=t,null===(n=Me(r))?(Qn=t,t=n):t=n):(Qn=t,t=kt)):(Qn=t,t=kt),t}var bt,yt=arguments.length>1?arguments[1]:{},wt={regexp:x},xt=x,kt=null,$t="",Ot="|",Et='"|"',At=function(t,e){return e?new r(t,e[1]):t},Ct=function(t,e,n){return new i([t].concat(e).concat([n]))},jt="^",St='"^"',Tt=function(){return new n("start")},Pt="$",Rt='"$"',Dt=function(){return new n("end")},Mt=function(t,e){return new s(t,e)},Lt="Quantifier",Nt=function(t,e){return e&&(t.greedy=!1),t},Ft="{",It='"{"',zt=",",Ht='","',Bt="}",Ut='"}"',qt=function(t,e){return new u(t,e)},Gt=",}",Kt='",}"',Wt=function(t){return new u(t,1/0)},Vt=function(t){return new u(t,t)},Xt="+",Jt='"+"',Yt=function(){return new u(1,1/0)},Qt="*",Zt='"*"',te=function(){return new u(0,1/0)},ee="?",ne='"?"',re=function(){return new u(0,1)},ie=/^[0-9]/,ae="[0-9]",oe=function(t){return+t.join("")},se="(",ue='"("',le=")",ce='")"',pe=function(t){return t},he=function(t){return new o(t)},fe="?:",de='"?:"',_e=function(t){return new a("non-capture-group",t)},ve="?=",me='"?="',ge=function(t){return new a("positive-lookahead",t)},be="?!",ye='"?!"',we=function(t){return new a("negative-lookahead",t)},xe="CharacterSet",ke="[",$e='"["',Oe="]",Ee='"]"',Ae=function(t,e){return new l(!!t,e)},Ce="CharacterRange",je="-",Se='"-"',Te=function(t,e){return new c(t,e)},Pe="Character",Re=/^[^\\\]]/,De="[^\\\\\\]]",Me=function(t){return new p(t)},Le=".",Ne='"."',Fe=function(){return new n("any-character")},Ie="Literal",ze=/^[^|\\\/.[()?+*$\^]/,He="[^|\\\\\\/.[()?+*$\\^]",Be="\\b",Ue='"\\\\b"',qe=function(){return new n("backspace")},Ge=function(){return new n("word-boundary")},Ke="\\B",We='"\\\\B"',Ve=function(){return new n("non-word-boundary")},Xe="\\d",Je='"\\\\d"',Ye=function(){return new n("digit")},Qe="\\D",Ze='"\\\\D"',tn=function(){return new n("non-digit")},en="\\f",nn='"\\\\f"',rn=function(){return new n("form-feed")},an="\\n",on='"\\\\n"',sn=function(){return new n("line-feed")},un="\\r",ln='"\\\\r"',cn=function(){return new n("carriage-return")},pn="\\s",hn='"\\\\s"',fn=function(){return new n("white-space")},dn="\\S",_n='"\\\\S"',vn=function(){return new n("non-white-space")},mn="\\t",gn='"\\\\t"',bn=function(){return new n("tab")},yn="\\v",wn='"\\\\v"',xn=function(){return new n("vertical-tab")},kn="\\w",$n='"\\\\w"',On=function(){return new n("word")},En="\\W",An='"\\\\W"',Cn=function(){return new n("non-word")},jn="\\c",Sn='"\\\\c"',Tn="any character",Pn=function(t){return new v(t)},Rn="\\",Dn='"\\\\"',Mn=/^[1-9]/,Ln="[1-9]",Nn=function(t){return new _(t)},Fn="\\0",In='"\\\\0"',zn=/^[0-7]/,Hn="[0-7]",Bn=function(t){return new d(t.join(""))},Un="\\x",qn='"\\\\x"',Gn=/^[0-9a-fA-F]/,Kn="[0-9a-fA-F]",Wn=function(t){return new f(t.join(""))},Vn="\\u",Xn='"\\\\u"',Jn=function(t){return new h(t.join(""))},Yn=function(){return new n("null-character")},Qn=0,Zn=0,tr=0,er={line:1,column:1,seenCR:!1},nr=0,rr=[],ir=0;if("startRule"in yt){if(!(yt.startRule in wt))throw new Error("Can't start parsing from rule \""+yt.startRule+'".');xt=wt[yt.startRule]}if(n.offset=g,n.text=m,null!==(bt=xt())&&Qn===e.length)return bt;throw w(rr),Zn=Math.max(Qn,nr),new t(rr,Zn<e.length?e.charAt(Zn):null,Zn,b(Zn).line,b(Zn).column)}}}(),g=1,b={};t.exports=m},function(t,e,n){var r=n(3),i=n(5),a={extend:r.extend},o=f(97,122),s=f(65,90),u=f(48,57),l=f(32,47)+f(58,64)+f(91,96)+f(123,126),c=f(32,126),p=" \f\n\r\t\v \u2028\u2029",h={"\\w":o+s+u+"_","\\W":l.replace("_",""),"\\s":p,"\\S":function(){for(var t=c,e=0;e<p.length;e++)t=t.replace(p[e],"");return t}(),"\\d":u,"\\D":o+s+l};function f(t,e){for(var n="",r=t;r<=e;r++)n+=String.fromCharCode(r);return n}a.gen=function(t,e,n){return n=n||{guid:1},a[t.type]?a[t.type](t,e,n):a.token(t,e,n)},a.extend({token:function(t,e,n){switch(t.type){case"start":case"end":return"";case"any-character":return i.character();case"backspace":case"word-boundary":return"";case"non-word-boundary":break;case"digit":return i.pick(u.split(""));case"non-digit":return i.pick((o+s+l).split(""));case"form-feed":break;case"line-feed":return t.body||t.text;case"carriage-return":break;case"white-space":return i.pick(p.split(""));case"non-white-space":return i.pick((o+s+u).split(""));case"tab":case"vertical-tab":break;case"word":return i.pick((o+s+u).split(""));case"non-word":return i.pick(l.replace("_","").split(""))}return t.body||t.text},alternate:function(t,e,n){return this.gen(i.boolean()?t.left:t.right,e,n)},match:function(t,e,n){e="";for(var r=0;r<t.body.length;r++)e+=this.gen(t.body[r],e,n);return e},"capture-group":function(t,e,n){return e=this.gen(t.body,e,n),n[n.guid++]=e,e},"non-capture-group":function(t,e,n){return this.gen(t.body,e,n)},"positive-lookahead":function(t,e,n){return this.gen(t.body,e,n)},"negative-lookahead":function(t,e,n){return""},quantified:function(t,e,n){e="";for(var r=this.quantifier(t.quantifier),i=0;i<r;i++)e+=this.gen(t.body,e,n);return e},quantifier:function(t,e,n){var r=Math.max(t.min,0),a=isFinite(t.max)?t.max:r+i.integer(3,7);return i.integer(r,a)},charset:function(t,e,n){if(t.invert)return this["invert-charset"](t,e,n);var r=i.pick(t.body);return this.gen(r,e,n)},"invert-charset":function(t,e,n){for(var r,a=c,o=0;o<t.body.length;o++)switch((r=t.body[o]).type){case"literal":a=a.replace(r.body,"");break;case"range":for(var s=this.gen(r.start,e,n).charCodeAt(),u=this.gen(r.end,e,n).charCodeAt(),l=s;l<=u;l++)a=a.replace(String.fromCharCode(l),"");default:var p=h[r.text];if(p)for(var f=0;f<=p.length;f++)a=a.replace(p[f],"")}return i.pick(a.split(""))},range:function(t,e,n){var r=this.gen(t.start,e,n).charCodeAt(),a=this.gen(t.end,e,n).charCodeAt();return String.fromCharCode(i.integer(r,a))},literal:function(t,e,n){return t.escaped?t.body:t.text},unicode:function(t,e,n){return String.fromCharCode(parseInt(t.code,16))},hex:function(t,e,n){return String.fromCharCode(parseInt(t.code,16))},octal:function(t,e,n){return String.fromCharCode(parseInt(t.code,8))},"back-reference":function(t,e,n){return n[t.code]||""},CONTROL_CHARACTER_MAP:function(){for(var t="@ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z [ \\ ] ^ _".split(" "),e="\0        \b \t \n \v \f \r                  ".split(" "),n={},r=0;r<t.length;r++)n[t[r]]=e[r];return n}(),"control-character":function(t,e,n){return this.CONTROL_CHARACTER_MAP[t.code]}}),t.exports=a},function(t,e,n){t.exports=n(24)},function(t,e,n){var r=n(2),i=n(3),a=n(4);t.exports=function t(e,n,o){o=o||[];var s={name:"string"==typeof n?n.replace(r.RE_KEY,"$1"):n,template:e,type:i.type(e),rule:a.parse(n)};switch(s.path=o.slice(0),s.path.push(void 0===n?"ROOT":s.name),s.type){case"array":s.items=[],i.each(e,(function(e,n){s.items.push(t(e,n,s.path))}));break;case"object":s.properties=[],i.each(e,(function(e,n){s.properties.push(t(e,n,s.path))}))}return s}},function(t,e,n){t.exports=n(26)},function(t,e,n){var r=n(2),i=n(3),a=n(23);function o(t,e){for(var n=a(t),r=s.diff(n,e),i=0;i<r.length;i++);return r}var s={diff:function(t,e,n){var r=[];return this.name(t,e,n,r)&&this.type(t,e,n,r)&&(this.value(t,e,n,r),this.properties(t,e,n,r),this.items(t,e,n,r)),r},name:function(t,e,n,r){var i=r.length;return u.equal("name",t.path,n+"",t.name+"",r),r.length===i},type:function(t,e,n,a){var o=a.length;switch(t.type){case"string":if(t.template.match(r.RE_PLACEHOLDER))return!0;break;case"array":if(t.rule.parameters){if(void 0!==t.rule.min&&void 0===t.rule.max&&1===t.rule.count)return!0;if(t.rule.parameters[2])return!0}break;case"function":return!0}return u.equal("type",t.path,i.type(e),t.type,a),a.length===o},value:function(t,e,n,i){var a,o=i.length,s=t.rule,l=t.type;if("object"===l||"array"===l||"function"===l)return!0;if(!s.parameters){switch(l){case"regexp":return u.match("value",t.path,e,t.template,i),i.length===o;case"string":if(t.template.match(r.RE_PLACEHOLDER))return i.length===o}return u.equal("value",t.path,e,t.template,i),i.length===o}switch(l){case"number":var c=(e+"").split(".");c[0]=+c[0],void 0!==s.min&&void 0!==s.max&&(u.greaterThanOrEqualTo("value",t.path,c[0],Math.min(s.min,s.max),i),u.lessThanOrEqualTo("value",t.path,c[0],Math.max(s.min,s.max),i)),void 0!==s.min&&void 0===s.max&&u.equal("value",t.path,c[0],s.min,i,"[value] "+n),s.decimal&&(void 0!==s.dmin&&void 0!==s.dmax&&(u.greaterThanOrEqualTo("value",t.path,c[1].length,s.dmin,i),u.lessThanOrEqualTo("value",t.path,c[1].length,s.dmax,i)),void 0!==s.dmin&&void 0===s.dmax&&u.equal("value",t.path,c[1].length,s.dmin,i));break;case"boolean":break;case"string":a=(a=e.match(new RegExp(t.template,"g")))?a.length:0,void 0!==s.min&&void 0!==s.max&&(u.greaterThanOrEqualTo("repeat count",t.path,a,s.min,i),u.lessThanOrEqualTo("repeat count",t.path,a,s.max,i)),void 0!==s.min&&void 0===s.max&&u.equal("repeat count",t.path,a,s.min,i);break;case"regexp":a=(a=e.match(new RegExp(t.template.source.replace(/^\^|\$$/g,""),"g")))?a.length:0,void 0!==s.min&&void 0!==s.max&&(u.greaterThanOrEqualTo("repeat count",t.path,a,s.min,i),u.lessThanOrEqualTo("repeat count",t.path,a,s.max,i)),void 0!==s.min&&void 0===s.max&&u.equal("repeat count",t.path,a,s.min,i)}return i.length===o},properties:function(t,e,n,r){var a=r.length,o=t.rule,s=i.keys(e);if(t.properties){if(t.rule.parameters?(void 0!==o.min&&void 0!==o.max&&(u.greaterThanOrEqualTo("properties length",t.path,s.length,Math.min(o.min,o.max),r),u.lessThanOrEqualTo("properties length",t.path,s.length,Math.max(o.min,o.max),r)),void 0!==o.min&&void 0===o.max&&1!==o.count&&u.equal("properties length",t.path,s.length,o.min,r)):u.equal("properties length",t.path,s.length,t.properties.length,r),r.length!==a)return!1;for(var l=0;l<s.length;l++)r.push.apply(r,this.diff(function(){var e;return i.each(t.properties,(function(t){t.name===s[l]&&(e=t)})),e||t.properties[l]}(),e[s[l]],s[l]));return r.length===a}},items:function(t,e,n,r){var i=r.length;if(t.items){var a=t.rule;if(t.rule.parameters){if(void 0!==a.min&&void 0!==a.max&&(u.greaterThanOrEqualTo("items",t.path,e.length,Math.min(a.min,a.max)*t.items.length,r,"[{utype}] array is too short: {path} must have at least {expected} elements but instance has {actual} elements"),u.lessThanOrEqualTo("items",t.path,e.length,Math.max(a.min,a.max)*t.items.length,r,"[{utype}] array is too long: {path} must have at most {expected} elements but instance has {actual} elements")),void 0!==a.min&&void 0===a.max){if(1===a.count)return r.length===i;u.equal("items length",t.path,e.length,a.min*t.items.length,r)}if(a.parameters[2])return r.length===i}else u.equal("items length",t.path,e.length,t.items.length,r);if(r.length!==i)return!1;for(var o=0;o<e.length;o++)r.push.apply(r,this.diff(t.items[o%t.items.length],e[o],o%t.items.length));return r.length===i}}},u={message:function(t){return(t.message||"[{utype}] Expect {path}'{ltype} {action} {expected}, but is {actual}").replace("{utype}",t.type.toUpperCase()).replace("{ltype}",t.type.toLowerCase()).replace("{path}",i.isArray(t.path)&&t.path.join(".")||t.path).replace("{action}",t.action).replace("{expected}",t.expected).replace("{actual}",t.actual)},equal:function(t,e,n,r,i,a){if(n===r)return!0;switch(t){case"type":if("regexp"===r&&"string"===n)return!0}var o={path:e,type:t,actual:n,expected:r,action:"is equal to",message:a};return o.message=u.message(o),i.push(o),!1},match:function(t,e,n,r,i,a){if(r.test(n))return!0;var o={path:e,type:t,actual:n,expected:r,action:"matches",message:a};return o.message=u.message(o),i.push(o),!1},notEqual:function(t,e,n,r,i,a){if(n!==r)return!0;var o={path:e,type:t,actual:n,expected:r,action:"is not equal to",message:a};return o.message=u.message(o),i.push(o),!1},greaterThan:function(t,e,n,r,i,a){if(n>r)return!0;var o={path:e,type:t,actual:n,expected:r,action:"is greater than",message:a};return o.message=u.message(o),i.push(o),!1},lessThan:function(t,e,n,r,i,a){if(n<r)return!0;var o={path:e,type:t,actual:n,expected:r,action:"is less to",message:a};return o.message=u.message(o),i.push(o),!1},greaterThanOrEqualTo:function(t,e,n,r,i,a){if(n>=r)return!0;var o={path:e,type:t,actual:n,expected:r,action:"is greater than or equal to",message:a};return o.message=u.message(o),i.push(o),!1},lessThanOrEqualTo:function(t,e,n,r,i,a){if(n<=r)return!0;var o={path:e,type:t,actual:n,expected:r,action:"is less than or equal to",message:a};return o.message=u.message(o),i.push(o),!1}};o.Diff=s,o.Assert=u,t.exports=o},function(t,e,n){t.exports=n(28)},function(t,e,n){var r=n(3);window._XMLHttpRequest=window.XMLHttpRequest,window._ActiveXObject=window.ActiveXObject;try{new window.Event("custom")}catch(t){window.Event=function(t,e,n,r){var i=document.createEvent("CustomEvent");return i.initCustomEvent(t,e,n,r),i}}var i={UNSENT:0,OPENED:1,HEADERS_RECEIVED:2,LOADING:3,DONE:4},a="readystatechange loadstart progress abort error load timeout loadend".split(" "),o="timeout withCredentials".split(" "),s="readyState responseURL status statusText responseType response responseText responseXML".split(" "),u="OK";function l(){this.custom={events:{},requestHeaders:{},responseHeaders:{}}}l._settings={timeout:"10-100"},l.setup=function(t){return r.extend(l._settings,t),l._settings},r.extend(l,i),r.extend(l.prototype,i),l.prototype.mock=!0,l.prototype.match=!1,r.extend(l.prototype,{open:function(t,e,n,i,u){var c=this;r.extend(this.custom,{method:t,url:e,async:"boolean"!=typeof n||n,username:i,password:u,options:{url:e,type:t}}),this.custom.timeout=function(t){if("number"==typeof t)return t;if("string"==typeof t&&!~t.indexOf("-"))return parseInt(t,10);if("string"==typeof t&&~t.indexOf("-")){var e=t.split("-"),n=parseInt(e[0],10),r=parseInt(e[1],10);return Math.round(Math.random()*(r-n))+n}}(l._settings.timeout);var p=function(t){for(var e in l.Mock._mocked){var n=l.Mock._mocked[e];if((!n.rurl||i(n.rurl,t.url))&&(!n.rtype||i(n.rtype,t.type.toLowerCase())))return n}function i(t,e){return"string"===r.type(t)?t===e:"regexp"===r.type(t)?t.test(e):void 0}}(this.custom.options);function h(t){for(var e=0;e<s.length;e++)try{c[s[e]]=f[s[e]]}catch(t){}c.dispatchEvent(new Event(t.type))}if(p)this.match=!0,this.custom.template=p,this.readyState=l.OPENED,this.dispatchEvent(new Event("readystatechange"));else{var f=function(){var t,e,n=(t=location.href,e=/^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/.exec(t.toLowerCase())||[],/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(e[1]));return window.ActiveXObject?!n&&r()||function(){try{return new window._ActiveXObject("Microsoft.XMLHTTP")}catch(t){}}():r();function r(){try{return new window._XMLHttpRequest}catch(t){}}}();this.custom.xhr=f;for(var d=0;d<a.length;d++)f.addEventListener(a[d],h);i?f.open(t,e,n,i,u):f.open(t,e,n);for(var _=0;_<o.length;_++)try{f[o[_]]=c[o[_]]}catch(t){}}},setRequestHeader:function(t,e){if(this.match){var n=this.custom.requestHeaders;n[t]?n[t]+=","+e:n[t]=e}else this.custom.xhr.setRequestHeader(t,e)},timeout:0,withCredentials:!1,upload:{},send:function(t){var e=this;function n(){var t,n;e.readyState=l.HEADERS_RECEIVED,e.dispatchEvent(new Event("readystatechange")),e.readyState=l.LOADING,e.dispatchEvent(new Event("readystatechange")),e.status=200,e.statusText=u,e.response=e.responseText=JSON.stringify((t=e.custom.template,n=e.custom.options,r.isFunction(t.template)?t.template(n):l.Mock.mock(t.template)),null,4),e.readyState=l.DONE,e.dispatchEvent(new Event("readystatechange")),e.dispatchEvent(new Event("load")),e.dispatchEvent(new Event("loadend"))}this.custom.options.body=t,this.match?(this.setRequestHeader("X-Requested-With","MockXMLHttpRequest"),this.dispatchEvent(new Event("loadstart")),this.custom.async?setTimeout(n,this.custom.timeout):n()):this.custom.xhr.send(t)},abort:function(){this.match?(this.readyState=l.UNSENT,this.dispatchEvent(new Event("abort",!1,!1,this)),this.dispatchEvent(new Event("error",!1,!1,this))):this.custom.xhr.abort()}}),r.extend(l.prototype,{responseURL:"",status:l.UNSENT,statusText:"",getResponseHeader:function(t){return this.match?this.custom.responseHeaders[t.toLowerCase()]:this.custom.xhr.getResponseHeader(t)},getAllResponseHeaders:function(){if(!this.match)return this.custom.xhr.getAllResponseHeaders();var t=this.custom.responseHeaders,e="";for(var n in t)t.hasOwnProperty(n)&&(e+=n+": "+t[n]+"\r\n");return e},overrideMimeType:function(){},responseType:"",response:null,responseText:"",responseXML:null}),r.extend(l.prototype,{addEventListener:function(t,e){var n=this.custom.events;n[t]||(n[t]=[]),n[t].push(e)},removeEventListener:function(t,e){for(var n=this.custom.events[t]||[],r=0;r<n.length;r++)n[r]===e&&n.splice(r--,1)},dispatchEvent:function(t){for(var e=this.custom.events[t.type]||[],n=0;n<e.length;n++)e[n].call(this,t);var r="on"+t.type;this[r]&&this[r](t)}}),t.exports=l}])},module.exports=factory()},function(t,e){var n,r,i=t.exports={};function a(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function s(t){if(n===setTimeout)return setTimeout(t,0);if((n===a||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:a}catch(t){n=a}try{r="function"==typeof clearTimeout?clearTimeout:o}catch(t){r=o}}();var u,l=[],c=!1,p=-1;function h(){c&&u&&(c=!1,u.length?l=u.concat(l):p=-1,l.length&&f())}function f(){if(!c){var t=s(h);c=!0;for(var e=l.length;e;){for(u=l,l=[];++p<e;)u&&u[p].run();p=-1,e=l.length}u=null,c=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===o||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function d(t,e){this.fun=t,this.array=e}function _(){}i.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];l.push(new d(t,e)),1!==l.length||c||s(f)},d.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=_,i.addListener=_,i.once=_,i.off=_,i.removeListener=_,i.removeAllListeners=_,i.emit=_,i.prependListener=_,i.prependOnceListener=_,i.listeners=function(t){return[]},i.binding=function(t){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(t){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},,function(t,e,n){(function(t){var r=void 0!==t&&t||"undefined"!=typeof self&&self||window,i=Function.prototype.apply;function a(t,e){this._id=t,this._clearFn=e}e.setTimeout=function(){return new a(i.call(setTimeout,r,arguments),clearTimeout)},e.setInterval=function(){return new a(i.call(setInterval,r,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(t){t&&t.close()},a.prototype.unref=a.prototype.ref=function(){},a.prototype.close=function(){this._clearFn.call(r,this._id)},e.enroll=function(t,e){clearTimeout(t._idleTimeoutId),t._idleTimeout=e},e.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},e._unrefActive=e.active=function(t){clearTimeout(t._idleTimeoutId);var e=t._idleTimeout;e>=0&&(t._idleTimeoutId=setTimeout((function(){t._onTimeout&&t._onTimeout()}),e))},n(10),e.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==t&&t.setImmediate||this&&this.setImmediate,e.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==t&&t.clearImmediate||this&&this.clearImmediate}).call(this,n(1))},function(t,e,n){(function(t,e){!function(t,n){"use strict";if(!t.setImmediate){var r,i,a,o,s,u=1,l={},c=!1,p=t.document,h=Object.getPrototypeOf&&Object.getPrototypeOf(t);h=h&&h.setTimeout?h:t,"[object process]"==={}.toString.call(t.process)?r=function(t){e.nextTick((function(){d(t)}))}:!function(){if(t.postMessage&&!t.importScripts){var e=!0,n=t.onmessage;return t.onmessage=function(){e=!1},t.postMessage("","*"),t.onmessage=n,e}}()?t.MessageChannel?((a=new MessageChannel).port1.onmessage=function(t){d(t.data)},r=function(t){a.port2.postMessage(t)}):p&&"onreadystatechange"in p.createElement("script")?(i=p.documentElement,r=function(t){var e=p.createElement("script");e.onreadystatechange=function(){d(t),e.onreadystatechange=null,i.removeChild(e),e=null},i.appendChild(e)}):r=function(t){setTimeout(d,0,t)}:(o="setImmediate$"+Math.random()+"$",s=function(e){e.source===t&&"string"==typeof e.data&&0===e.data.indexOf(o)&&d(+e.data.slice(o.length))},t.addEventListener?t.addEventListener("message",s,!1):t.attachEvent("onmessage",s),r=function(e){t.postMessage(o+e,"*")}),h.setImmediate=function(t){"function"!=typeof t&&(t=new Function(""+t));for(var e=new Array(arguments.length-1),n=0;n<e.length;n++)e[n]=arguments[n+1];var i={callback:t,args:e};return l[u]=i,r(u),u++},h.clearImmediate=f}function f(t){delete l[t]}function d(t){if(c)setTimeout(d,0,t);else{var e=l[t];if(e){c=!0;try{!function(t){var e=t.callback,n=t.args;switch(n.length){case 0:e();break;case 1:e(n[0]);break;case 2:e(n[0],n[1]);break;case 3:e(n[0],n[1],n[2]);break;default:e.apply(void 0,n)}}(e)}finally{f(t),c=!1}}}}}("undefined"==typeof self?void 0===t?this:t:self)}).call(this,n(1),n(7))},function(t,e,n){window,t.exports=function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="/assets/",n(n.s=30)}([function(t,e,n){"use strict";(function(t,r,i){n.d(e,"bb",(function(){return A})),n.d(e,"Y",(function(){return C})),n.d(e,"U",(function(){return j})),n.d(e,"ib",(function(){return D})),n.d(e,"Z",(function(){return F})),n.d(e,"zb",(function(){return U})),n.d(e,"ab",(function(){return X})),n.d(e,"t",(function(){return Y})),n.d(e,"v",(function(){return tt})),n.d(e,"w",(function(){return et})),n.d(e,"x",(function(){return rt})),n.d(e,"y",(function(){return it})),n.d(e,"A",(function(){return at})),n.d(e,"C",(function(){return ot})),n.d(e,"Eb",(function(){return st})),n.d(e,"E",(function(){return ut})),n.d(e,"G",(function(){return ht})),n.d(e,"qb",(function(){return dt})),n.d(e,"N",(function(){return mt})),n.d(e,"T",(function(){return yt})),n.d(e,"u",(function(){return xt})),n.d(e,"X",(function(){return Et})),n.d(e,"m",(function(){return At})),n.d(e,"L",(function(){return Ct})),n.d(e,"H",(function(){return jt})),n.d(e,"tb",(function(){return St})),n.d(e,"I",(function(){return Tt})),n.d(e,"K",(function(){return Pt})),n.d(e,"M",(function(){return Rt})),n.d(e,"O",(function(){return Dt})),n.d(e,"P",(function(){return Nt})),n.d(e,"Q",(function(){return It})),n.d(e,"R",(function(){return Bt})),n.d(e,"S",(function(){return Ut})),n.d(e,"V",(function(){return qt})),n.d(e,"W",(function(){return Kt})),n.d(e,"db",(function(){return Vt})),n.d(e,"eb",(function(){return Xt})),n.d(e,"o",(function(){return Qt})),n.d(e,"B",(function(){return ne})),n.d(e,"Db",(function(){return ie})),n.d(e,"r",(function(){return oe})),n.d(e,"F",(function(){return se})),n.d(e,"z",(function(){return ue})),n.d(e,"j",(function(){return le})),n.d(e,"n",(function(){return ce})),n.d(e,"fb",(function(){return pe})),n.d(e,"p",(function(){return he})),n.d(e,"wb",(function(){return de})),n.d(e,"b",(function(){return _e})),n.d(e,"f",(function(){return me})),n.d(e,"g",(function(){return Ce})),n.d(e,"l",(function(){return Te})),n.d(e,"k",(function(){return Re})),n.d(e,"a",(function(){return Le})),n.d(e,"rb",(function(){return Fe})),n.d(e,"yb",(function(){return ze})),n.d(e,"gb",(function(){return He})),n.d(e,"xb",(function(){return Be})),n.d(e,"s",(function(){return Ue})),n.d(e,"hb",(function(){return qe})),n.d(e,"jb",(function(){return Ge})),n.d(e,"c",(function(){return Ve})),n.d(e,"e",(function(){return Xe})),n.d(e,"J",(function(){return Ye})),n.d(e,"kb",(function(){return Ze})),n.d(e,"lb",(function(){return tn})),n.d(e,"mb",(function(){return en})),n.d(e,"nb",(function(){return nn})),n.d(e,"ob",(function(){return rn})),n.d(e,"pb",(function(){return an})),n.d(e,"Ab",(function(){return sn})),n.d(e,"cb",(function(){return ln})),n.d(e,"h",(function(){return pn})),n.d(e,"D",(function(){return hn})),n.d(e,"i",(function(){return fn})),n.d(e,"sb",(function(){return dn})),n.d(e,"d",(function(){return mn})),n.d(e,"ub",(function(){return gn})),n.d(e,"vb",(function(){return bn})),n.d(e,"Bb",(function(){return yn})),n.d(e,"Cb",(function(){return wn})),n.d(e,"Fb",(function(){return xn})),n.d(e,"Gb",(function(){return kn})),n.d(e,"Hb",(function(){return $n}));var a,o,s,u,l,c,p,h,f,d,_,v,m,g,b,y,w,x,k,$=n(12),O=n.n($),E={},A=E.last=function(t){var e=t?t.length:0;if(e)return t[e-1]},C=E.isUndef=function(t){return void 0===t},j=E.isObj=function(t){var e=O()(t);return!!t&&("function"===e||"object"===e)},S=E.has=(a=Object.prototype.hasOwnProperty,function(t,e){return a.call(t,e)}),T=E.slice=function(t,e,n){var r=t.length;e=null==e?0:e<0?Math.max(r+e,0):Math.min(e,r),n=null==n?r:n<0?Math.max(r+n,0):Math.min(n,r);for(var i=[];e<n;)i.push(t[e++]);return i},P=E.reverse=function(t){var e=t.length,n=Array(e);e--;for(var r=0;r<=e;r++)n[e-r]=t[r];return n},R=E.isBrowser="object"===("undefined"==typeof window?"undefined":O()(window))&&"object"===("undefined"==typeof document?"undefined":O()(document))&&9===document.nodeType,D=E.noop=function(){},M=E.before=function(t,e){var n;return function(){return--t>0&&(n=e.apply(this,arguments)),t<=1&&(e=null),n}},L=E.splitCase=(o=/([A-Z])/g,s=/[_.\- ]+/g,u=/(^-)|(-$)/g,function(t){return(t=t.replace(o,"-$1").toLowerCase().replace(s,"-").replace(u,"")).split("-")}),N=E.camelCase=function(t){function e(t,e){this[e]=t.replace(/\w/,(function(t){return t.toUpperCase()}))}return function(t){var n=L(t),r=n[0];return n.shift(),n.forEach(e,n),r+n.join("")}}(),F=E.kebabCase=function(t){return L(t).join("-")},I=E.clamp=function(t,e,n){return C(n)&&(n=e,e=void 0),!C(e)&&t<e?e:t>n?n:t},z=E.idxOf=function(t,e,n){return Array.prototype.indexOf.call(t,e,n)},H=E.create=function(t){t=function(t){if(!j(t))return{};if(e)return e(t);function n(){}return n.prototype=t,new n};var e=Object.create;return t}({}),B=E.inherits=function(t,e){t.prototype=H(e.prototype)},U=E.toStr=function(t){return null==t?"":t.toString()},q=E.debounce=function(t,e,n){var r;return function(){var i=this,a=arguments,o=function(){r=null,t.apply(i,a)};n||clearTimeout(r),n&&r||(r=setTimeout(o,e))}},G=E.ucs2={encode:function(t){return String.fromCodePoint.apply(String,t)},decode:function(t){for(var e=[],n=0,r=t.length;n<r;){var i=t.charCodeAt(n++);if(i>=55296&&i<=56319&&n<r){var a=t.charCodeAt(n++);56320==(64512&a)?e.push(((1023&i)<<10)+(1023&a)+65536):(e.push(i),n--)}else e.push(i)}return e}},K=E.utf8=function(t){t={encode:function(t){for(var e=G.decode(t),n="",r=0,i=e.length;r<i;r++)n+=c(e[r]);return n},decode:function(t,l){e=G.decode(t),n=0,r=e.length,i=0,a=0,o=0,s=128,u=191;for(var c,h=[];!1!==(c=p(l));)h.push(c);return G.encode(h)}};var e,n,r,i,a,o,s,u,l=String.fromCharCode;function c(t){if(0==(4294967168&t))return l(t);var e,n,r="";for(0==(4294965248&t)?(e=1,n=192):0==(4294901760&t)?(e=2,n=224):0==(4292870144&t)&&(e=3,n=240),r+=l((t>>6*e)+n);e>0;)r+=l(128|63&t>>6*(e-1)),e--;return r}function p(t){for(;;){if(n>=r&&o){if(t)return h();throw new Error("Invalid byte index")}if(n===r)return!1;var l=e[n];if(n++,o){if(l<s||l>u){if(t)return n--,h();throw new Error("Invalid continuation byte")}if(s=128,u=191,i=i<<6|63&l,++a===o){var c=i;return i=0,o=0,a=0,c}}else{if(0==(128&l))return l;if(192==(224&l))o=1,i=31&l;else if(224==(240&l))224===l&&(s=160),237===l&&(u=159),o=2,i=15&l;else{if(240!=(248&l)){if(t)return h();throw new Error("Invalid UTF-8 detected")}240===l&&(s=144),244===l&&(u=143),o=3,i=7&l}}}}function h(){var t=n-a-1;return n=t+1,i=0,o=0,a=0,s=128,u=191,e[t]}return t}({}),W=E.root=R?window:t,V=E.detectMocha=function(t){t=function(){for(var t=0,n=e.length;t<n;t++){var r=e[t];if("function"!=typeof W[r])return!1}return!0};var e=["afterEach","after","beforeEach","before","describe","it"];return t}({}),X=E.keys=Object.keys&&!V()?Object.keys:function(t){var e=[];for(var n in t)S(t,n)&&e.push(n);return e},J=E.freeze=function(t){return Object.freeze?Object.freeze(t):(X(t).forEach((function(e){Object.getOwnPropertyDescriptor(t,e).configurable&&Object.defineProperty(t,e,{writable:!1,configurable:!1})})),t)},Y=E.detectOs=function(t){if(t=(t=t||(R?navigator.userAgent:"")).toLowerCase(),e("windows phone"))return"windows phone";if(e("win"))return"windows";if(e("android"))return"android";if(e("ipad")||e("iphone")||e("ipod"))return"ios";if(e("mac"))return"os x";if(e("linux"))return"linux";function e(e){return t.indexOf(e)>-1}return"unknown"},Q=E.restArgs=function(t,e){return e=null==e?t.length-1:+e,function(){var n,r=Math.max(arguments.length-e,0),i=new Array(r);for(n=0;n<r;n++)i[n]=arguments[n+e];switch(e){case 0:return t.call(this,i);case 1:return t.call(this,arguments[0],i);case 2:return t.call(this,arguments[0],arguments[1],i)}var a=new Array(e+1);for(n=0;n<e;n++)a[n]=arguments[n];return a[e]=i,t.apply(this,a)}},Z=E.optimizeCb=function(t,e,n){if(C(e))return t;switch(null==n?3:n){case 1:return function(n){return t.call(e,n)};case 3:return function(n,r,i){return t.call(e,n,r,i)};case 4:return function(n,r,i,a){return t.call(e,n,r,i,a)}}return function(){return t.apply(e,arguments)}},tt=(E.types={},E.endWith=function(t,e){var n=t.length-e.length;return n>=0&&t.indexOf(e,n)===n}),et=E.escape=function(t){var e=(t=function(t){return r.test(t)?t.replace(i,a):t}).map={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},n="(?:"+X(e).join("|")+")",r=new RegExp(n),i=new RegExp(n,"g"),a=function(t){return e[t]};return t}({}),nt=E.escapeJsStr=function(t){t=function(t){return U(t).replace(e,(function(t){switch(t){case'"':case"'":case"\\":return"\\"+t;case"\n":return"\\n";case"\r":return"\\r";case"\u2028":return"\\u2028";case"\u2029":return"\\u2029"}}))};var e=/["'\\\n\r\u2028\u2029]/g;return t}({}),rt=E.escapeJsonStr=function(t){return nt(t).replace(/\\'/g,"'").replace(/\t/g,"\\t")},it=E.escapeRegExp=function(t){return t.replace(/\W/g,"\\$&")},at=E.fileSize=function(t){t=function(t){if(t<=0)return"0";var n=Math.floor(Math.log(t)/Math.log(1024));return+(t/Math.pow(2,10*n)).toFixed(2)+e[n]};var e=["","K","M","G","T"];return t}({}),ot=E.fullUrl=(l=document.createElement("a"),function(t){return l.href=t,l.protocol+"//"+l.host+l.pathname+l.search+l.hash}),st=E.upperFirst=function(t){return t.length<1?t:t[0].toUpperCase()+t.slice(1)},ut=E.getObjType=function(t){return t.constructor&&t.constructor.name?t.constructor.name:st({}.toString.call(t).replace(/(\[object )|]/g,""))},lt=E.identity=function(t){return t},ct=E.objToStr=(c=Object.prototype.toString,function(t){return c.call(t)}),pt=E.isArgs=function(t){return"[object Arguments]"===ct(t)},ht=E.isArr=Array.isArray||function(t){return"[object Array]"===ct(t)},ft=E.castPath=function(t){t=function(t,r){if(ht(t))return t;if(r&&S(r,t))return[t];var i=[];return t.replace(e,(function(t,e,r,a){i.push(r?a.replace(n,"$1"):e||t)})),i};var e=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,n=/\\(\\)?/g;return t}({}),dt=E.safeGet=function(t,e){var n;for(n=(e=ft(e,t)).shift();!C(n);){if(null==(t=t[n]))return;n=e.shift()}return t},_t=E.flatten=function(t){return function t(e,n){for(var r,i=e.length,a=-1;i--;)r=e[++a],ht(r)?t(r,n):n.push(r);return n}(t,[])},vt=E.isDate=function(t){return"[object Date]"===ct(t)},mt=E.isFn=function(t){var e=ct(t);return"[object Function]"===e||"[object GeneratorFunction]"===e||"[object AsyncFunction]"===e},gt=E.getProto=(p=Object.getPrototypeOf,h={}.constructor,function(t){if(j(t)){if(p)return p(t);var e=t.__proto__;return e||null===e?e:mt(t.constructor)?t.constructor.prototype:t instanceof h?h.prototype:void 0}}),bt=E.isMiniProgram="undefined"!=typeof wx&&mt(wx.openLocation),yt=E.isNum=function(t){return"[object Number]"===ct(t)},wt=E.isArrLike=(f=Math.pow(2,53)-1,function(t){if(!t)return!1;var e=t.length;return yt(e)&&e>=0&&e<=f&&!mt(t)}),xt=E.each=function(t,e,n){var r,i;if(e=Z(e,n),wt(t))for(r=0,i=t.length;r<i;r++)e(t[r],r,t);else{var a=X(t);for(r=0,i=a.length;r<i;r++)e(t[a[r]],a[r],t)}return t},kt=E.createAssigner=function(t,e){return function(n){return xt(arguments,(function(r,i){if(0!==i){var a=t(r);xt(a,(function(t){e&&!C(n[t])||(n[t]=r[t])}))}})),n}},$t=E.extendOwn=kt(X),Ot=E.values=function(t){var e=[];return xt(t,(function(t){e.push(t)})),e},Et=E.isStr=function(t){return"[object String]"===ct(t)},At=E.contain=function(t,e){return Et(t)?t.indexOf(e)>-1:(wt(t)||(t=Ot(t)),z(t,e)>=0)},Ct=E.isEmpty=function(t){return null==t||(wt(t)&&(ht(t)||Et(t)||pt(t))?0===t.length:0===X(t).length)},jt=E.isBool=function(t){return!0===t||!1===t},St=E.startWith=function(t,e){return 0===t.indexOf(e)},Tt=E.isCrossOrig=(d=window.location.origin,function(t){return!St(t,d)}),Pt=E.isEl=function(t){return!(!t||1!==t.nodeType)},Rt=E.isErr=function(t){return"[object Error]"===ct(t)},Dt=E.isHidden=function(t){var e=W.getComputedStyle,n=W.document;function r(t,e){return t.right<e.left||t.left>e.right||t.bottom<e.top||t.top>e.bottom}return function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=i.display,o=void 0===a||a,s=i.visibility,u=void 0!==s&&s,l=i.opacity,c=void 0!==l&&l,p=i.size,h=void 0!==p&&p,f=i.viewport,d=void 0!==f&&f,_=i.overflow,v=void 0!==_&&_;if(o)return null===t.offsetParent;var m=e(t);if(u&&"hidden"===m.visibility)return!0;if(c){if("0"===m.opacity)return!0;for(var g=t;g=g.parentElement;){var b=e(g);if("0"===b.opacity)return!0}}var y=t.getBoundingClientRect();if(h&&(0===y.width||0===y.height))return!0;if(d){var w={top:0,left:0,right:n.documentElement.clientWidth,bottom:n.documentElement.clientHeight};return r(y,w)}if(v)for(var x=t;x=x.parentElement;){var k=e(x),$=k.overflow;if("scroll"===$||"hidden"===$){var O=x.getBoundingClientRect();if(r(y,O))return!0}}return!1}}(),Mt=E.isMatch=function(t,e){var n=X(e),r=n.length;if(null==t)return!r;t=Object(t);for(var i=0;i<r;i++){var a=n[i];if(e[a]!==t[a]||!(a in t))return!1}return!0},Lt=E.memoize=function(t,e){var n=function n(r){var i=n.cache,a=""+(e?e.apply(this,arguments):r);return S(i,a)||(i[a]=t.apply(this,arguments)),i[a]};return n.cache={},n},Nt=E.isMobile=(_=/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i,v=/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i,Lt((function(t){return t=t||(R?navigator.userAgent:""),_.test(t)||v.test(t.substr(0,4))}))),Ft=E.prefix=function(t){(t=Lt((function(t){if(t=t.replace(n,""),t=N(t),S(r,t))return t;for(var i=e.length;i--;){var a=e[i]+st(t);if(S(r,a))return a}return t}))).dash=Lt((function(e){var r=t(e);return(n.test(r)?"-":"")+F(r)}));var e=["O","ms","Moz","Webkit"],n=/^(O)|(ms)|(Moz)|(Webkit)|(-o-)|(-ms-)|(-moz-)|(-webkit-)/g,r=document.createElement("p").style;return t}({}),It=E.isNaN=function(t){return yt(t)&&t!==+t},zt=E.isNil=function(t){return null==t},Ht=E.toSrc=function(t){t=function(t){if(zt(t))return"";try{return e.call(t)}catch(t){}try{return t+""}catch(t){}return""};var e=Function.prototype.toString;return t}({}),Bt=E.isNative=function(t){t=function(t){return!!j(t)&&(mt(t)?n.test(Ht(t)):r.test(Ht(t)))};var e=Object.prototype.hasOwnProperty,n=new RegExp("^"+Ht(e).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),r=/^\[object .+?Constructor\]$/;return t}({}),Ut=E.isNull=function(t){return null===t},qt=E.isPrimitive=function(t){var e=O()(t);return null==t||"function"!==e&&"object"!==e},Gt=E.isPromise=function(t){return j(t)&&mt(t.then)},Kt=E.isRegExp=function(t){return"[object RegExp]"===ct(t)},Wt=E.isSorted=(m={},(m=function(t){for(var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:m.defComparator,n=0,r=t.length;n<r-1;n++)if(e(t[n],t[n+1])>0)return!1;return!0}).defComparator=function(t,e){return t<e?-1:t>e?1:0},m),Vt=E.loadJs=function(t,e){var n=document.createElement("script");n.src=t,n.onload=function(){var t=n.readyState&&"complete"!=n.readyState&&"loaded"!=n.readyState;e&&e(!t)},document.body.appendChild(n)},Xt=E.lowerCase=function(t){return U(t).toLocaleLowerCase()},Jt=E.repeat=function(t,e){var n="";if(e<1)return"";for(;e>0;)1&e&&(n+=t),e>>=1,t+=t;return n},Yt=E.lpad=function(t,e,n){var r=(t=U(t)).length;return n=n||" ",r<e&&(t=(Jt(n,e-r)+t).slice(-e)),t},Qt=E.dateFormat=function(t){t=function(o,s,u,l){1===arguments.length&&Et(o)&&!i.test(o)&&(s=o,o=void 0),o=o||new Date,vt(o)||(o=new Date(o));var c=(s=U(t.masks[s]||s||t.masks.default)).slice(0,4);"UTC:"!==c&&"GMT:"!==c||(s=s.slice(4),u=!0,"GMT:"===c&&(l=!0));var p=u?"getUTC":"get",h=o[p+"Date"](),f=o[p+"Day"](),d=o[p+"Month"](),_=o[p+"FullYear"](),v=o[p+"Hours"](),m=o[p+"Minutes"](),g=o[p+"Seconds"](),b=o[p+"Milliseconds"](),y=u?0:o.getTimezoneOffset(),w={d:h,dd:e(h),ddd:t.i18n.dayNames[f],dddd:t.i18n.dayNames[f+7],m:d+1,mm:e(d+1),mmm:t.i18n.monthNames[d],mmmm:t.i18n.monthNames[d+12],yy:U(_).slice(2),yyyy:_,h:v%12||12,hh:e(v%12||12),H:v,HH:e(v),M:m,MM:e(m),s:g,ss:e(g),l:e(b,3),L:e(Math.round(b/10)),t:v<12?"a":"p",tt:v<12?"am":"pm",T:v<12?"A":"P",TT:v<12?"AM":"PM",Z:l?"GMT":u?"UTC":(U(o).match(r)||[""]).pop().replace(a,""),o:(y>0?"-":"+")+e(100*Math.floor(Math.abs(y)/60)+Math.abs(y)%60,4),S:["th","st","nd","rd"][h%10>3?0:(h%100-h%10!=10)*h%10]};return s.replace(n,(function(t){return t in w?w[t]:t.slice(1,t.length-1)}))};var e=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return Yt(U(t),e,"0")},n=/d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZWN]|"[^"]*"|'[^']*'/g,r=/\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g,i=/\d/,a=/[^-+\dA-Z]/g;return t.masks={default:"ddd mmm dd yyyy HH:MM:ss",shortDate:"m/d/yy",mediumDate:"mmm d, yyyy",longDate:"mmmm d, yyyy",fullDate:"dddd, mmmm d, yyyy",shortTime:"h:MM TT",mediumTime:"h:MM:ss TT",longTime:"h:MM:ss TT Z",isoDate:"yyyy-mm-dd",isoTime:"HH:MM:ss",isoDateTime:"yyyy-mm-dd'T'HH:MM:sso",isoUtcDateTime:"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'",expiresHeaderFormat:"ddd, dd mmm yyyy HH:MM:ss Z"},t.i18n={dayNames:["Sun","Mon","Tue","Wed","Thu","Fri","Sat","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],monthNames:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","January","February","March","April","May","June","July","August","September","October","November","December"]},t}({}),Zt=E.ltrim=(g=/^\s+/,function(t,e){if(null==e)return t.replace(g,"");for(var n,r,i=0,a=t.length,o=e.length,s=!0;s&&i<a;)for(s=!1,n=-1,r=t.charAt(i);++n<o;)if(r===e[n]){s=!0,i++;break}return i>=a?"":t.substr(i,a)}),te=E.matcher=function(t){return t=$t({},t),function(e){return Mt(e,t)}},ee=E.safeCb=function(t,e,n){return null==t?lt:mt(t)?Z(t,e,n):j(t)?te(t):function(t){return function(e){return null==e?void 0:e[t]}}},ne=E.filter=function(t,e,n){var r=[];return e=ee(e,n),xt(t,(function(t,n,i){e(t,n,i)&&r.push(t)})),r},re=E.difference=Q((function(t,e){return e=_t(e),ne(t,(function(t){return!At(e,t)}))})),ie=E.unique=function(t){function e(t,e){return t===e}return function(t,n){return n=n||e,ne(t,(function(t,e,r){for(var i=r.length;++e<i;)if(n(t,r[e]))return!1;return!0}))}}(),ae=E.allKeys=(b=Object.getOwnPropertyNames,y=Object.getOwnPropertySymbols,function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.prototype,r=void 0===n||n,i=e.unenumerable,a=void 0!==i&&i,o=e.symbol,s=void 0!==o&&o,u=[];if((a||s)&&b){var l=X;a&&b&&(l=b);do{u=u.concat(l(t)),s&&y&&(u=u.concat(y(t)))}while(r&&(t=gt(t))&&t!==Object.prototype);u=ie(u)}else if(r)for(var c in t)u.push(c);else u=X(t);return u}),oe=E.defaults=kt(ae,!0),se=E.highlight=function(t){t=function(r){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"js",a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};oe(a,e),r=r.replace(/</g,"&lt;").replace(/>/g,"&gt;"),i=n[i];var o=0,s=[];xt(i,(function(e){e.language&&(r=r.replace(e.re,(function(n,r){return s[o++]=t(r,e.language,a),n.replace(r,"___subtmpl"+(o-1)+"___")})))})),xt(i,(function(t,e){n[t.language]||(r=r.replace(t.re,"___"+e+"___$1___end"+e+"___"))}));var u=[];return r=r.replace(/___(?!subtmpl)\w+?___/g,(function(t){var e="end"===t.substr(3,3),n=(e?t.substr(6):t.substr(3)).replace(/_/g,""),r=u.length>0?u[u.length-1]:null;return!e&&(null==r||n==r||null!=r&&i[r]&&null!=i[r].embed&&i[r].embed.indexOf(n)>-1)?(u.push(n),t):e&&n==r?(u.pop(),t):""})),xt(i,(function(t,e){r=r.replace(new RegExp("___end"+e+"___","g"),"</span>").replace(new RegExp("___"+e+"___","g"),'<span style="'+a[t.style]+'">')})),xt(i,(function(t){t.language&&(r=r.replace(/___subtmpl\d+___/g,(function(t){var e=parseInt(t.replace(/___subtmpl(\d+)___/,"$1"),10);return s[e]})))})),r};var e={comment:"color:#63a35c;",string:"color:#183691;",number:"color:#0086b3;",keyword:"color:#a71d5d;",operator:"color:#994500;"},n={js:{comment:{re:/(\/\/.*|\/\*([\s\S]*?)\*\/)/g,style:"comment"},string:{re:/(('.*?')|(".*?"))/g,style:"string"},numbers:{re:/(-?(\d+|\d+\.\d+|\.\d+))/g,style:"number"},keywords:{re:/(?:\b)(function|for|foreach|while|if|else|elseif|switch|break|as|return|this|class|self|default|var|const|let|false|true|null|undefined)(?:\b)/gi,style:"keyword"},operator:{re:/(\+|-|\/|\*|%|=|&lt;|&gt;|\||\?|\.)/g,style:"operator"}}};return n.html={comment:{re:/(&lt;!--([\s\S]*?)--&gt;)/g,style:"comment"},tag:{re:/(&lt;\/?\w(.|\n)*?\/?&gt;)/g,style:"keyword",embed:["string"]},string:n.js.string,css:{re:/(?:&lt;style.*?&gt;)([\s\S]*)?(?:&lt;\/style&gt;)/gi,language:"css"},script:{re:/(?:&lt;script.*?&gt;)([\s\S]*?)(?:&lt;\/script&gt;)/gi,language:"js"}},n.css={comment:n.js.comment,string:n.js.string,numbers:{re:/((-?(\d+|\d+\.\d+|\.\d+)(%|px|em|pt|in)?)|#[0-9a-fA-F]{3}[0-9a-fA-F]{3})/g,style:"number"},keywords:{re:/(@\w+|:?:\w+|[a-z-]+:)/g,style:"keyword"}},t}({}),ue=E.extend=kt(ae),le=E.clone=function(t){return j(t)?ht(t)?t.slice():ue({},t):t},ce=E.copy=function(t,e){e=e||D;var n=document.createElement("textarea"),r=document.body;ue(n.style,{fontSize:"12pt",border:"0",padding:"0",margin:"0",position:"absolute",left:"-9999px"}),n.value=t,r.appendChild(n),n.setAttribute("readonly",""),n.select(),n.setSelectionRange(0,t.length);try{document.execCommand("copy"),e()}catch(t){e(t)}finally{r.removeChild(n)}},pe=E.map=function(t,e,n){e=ee(e,n);for(var r=!wt(t)&&X(t),i=(r||t).length,a=Array(i),o=0;o<i;o++){var s=r?r[o]:o;a[o]=e(t[s],s,t)}return a},he=E.decodeUriComponent=function(t){function e(t){return+("0x"+t)}t=function(t){try{return decodeURIComponent(t)}catch(i){var r=t.match(n);return r?(xt(r,(function(n){t=t.replace(n,function(t){t=t.split("%").slice(1);var n=pe(t,e);return t=G.encode(n),K.decode(t,!0)}(n))})),t):t}};var n=/(%[a-f0-9]{2})+/gi;return t}({}),fe=E.cookie=function(t){var e={path:"/"};function n(n,r,i){if(!C(r)){if(i=oe(i=i||{},e),yt(i.expires)){var a=new Date;a.setMilliseconds(a.getMilliseconds()+864e5*i.expires),i.expires=a}return r=encodeURIComponent(r),n=encodeURIComponent(n),document.cookie=[n,"=",r,i.expires&&"; expires="+i.expires.toUTCString(),i.path&&"; path="+i.path,i.domain&&"; domain="+i.domain,i.secure?"; secure":""].join(""),t}for(var o=document.cookie?document.cookie.split("; "):[],s=n?void 0:{},u=0,l=o.length;u<l;u++){var c=o[u],p=c.split("="),h=he(p.shift());if(c=p.join("="),c=he(c),n===h){s=c;break}n||(s[h]=c)}return s}return t={get:n,set:n,remove:function(t,e){return(e=e||{}).expires=-1,n(t,"",e)}}}({}),de=E.toArr=function(t){return t?ht(t)?t:wt(t)&&!Et(t)?pe(t):[t]:[]},_e=E.Class=function(t){var e=(t=function(t,n){return e.extend(t,n)}).Base=function t(e,n,r){r=r||{};var i,a=n.className||dt(n,"initialize.name")||"";return delete n.className,i=bt?function(){var t=de(arguments);return this.initialize&&this.initialize.apply(this,t)||this}:new Function("toArr","return function "+a+"(){var args = toArr(arguments);return this.initialize ? this.initialize.apply(this, args) || this : this;};")(de),B(i,e),i.prototype.constructor=i,i.extend=function(e,n){return t(i,e,n)},i.inherits=function(t){B(i,t)},i.methods=function(t){return ue(i.prototype,t),i},i.statics=function(t){return ue(i,t),i},i.methods(n).statics(r),i}(Object,{className:"Base",callSuper:function(t,e,n){return t.prototype[e].apply(this,n)},toString:function(){return this.constructor.name}});return t}({}),ve=E.Enum=_e({initialize:function(t){ht(t)?(this.size=t.length,xt(t,(function(t,e){this[t]=e}),this)):(this.size=X(t).length,xt(t,(function(t,e){this[e]=t}),this)),J(this)}}),me=E.MutationObserver=function(t){return(t=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver)||(t=_e({initialize:function(){},observe:function(){},disconnect:function(){},takeRecords:function(){}})),t}({}),ge=E.Select=function(t){var e=new(t=_e({className:"Select",initialize:function(t){return this.length=0,t?Et(t)?e.find(t):void(t.nodeType&&(this[0]=t,this.length=1)):this},find:function(e){var n=new t;return this.each((function(){!function(t,e){for(var n=e.length,r=t.length,i=0;i<n;i++)t[r++]=e[i];t.length=r}(n,this.querySelectorAll(e))})),n},each:function(t){return xt(this,(function(e,n){t.call(e,n,e)})),this}}))(document);return t}({}),be=E.$safeEls=function(t){return de(Et(t)?new ge(t):t)},ye=E.$attr=function(t){return(t=function(t,e,n){if(t=be(t),C(n)&&Et(e))return function(t,e){return t.getAttribute(e)}(t[0],e);var r=e;j(r)||((r={})[e]=n),function(t,e){xt(t,(function(t){xt(e,(function(e,n){t.setAttribute(n,e)}))}))}(t,r)}).remove=function(t,e){t=be(t),e=de(e),xt(t,(function(t){xt(e,(function(e){t.removeAttribute(e)}))}))},t}({}),we=E.$css=function(t){t=function(t,n,r){if(t=be(t),C(r)&&Et(n))return function(t,e){return t.style[Ft(e)]||getComputedStyle(t,"").getPropertyValue(e)}(t[0],n);var i=n;j(i)||((i={})[n]=r),function(t,n){xt(t,(function(t){var r=";";xt(n,(function(t,n){n=Ft.dash(n),r+=n+":"+function(t,n){return yt(n)&&!At(e,F(t))?n+"px":n}(n,t)+";"})),t.style.cssText+=r}))}(t,i)};var e=["column-count","columns","font-weight","line-weight","opacity","z-index","zoom"];return t}({}),xe=E.$data=function(t,e,n){var r=e;return Et(e)&&(r="data-"+e),j(e)&&(r={},xt(e,(function(t,e){r["data-"+e]=t}))),ye(t,r,n)},ke=E.$insert=function(t){function e(t){return function(e,n){e=be(e),xt(e,(function(e){e.insertAdjacentHTML(t,n)}))}}return{before:e("beforebegin"),after:e("afterend"),append:e("beforeend"),prepend:e("afterbegin")}}(),$e=E.$offset=function(t){var e=(t=be(t))[0].getBoundingClientRect();return{left:e.left+window.pageXOffset,top:e.top+window.pageYOffset,width:Math.round(e.width),height:Math.round(e.height)}},Oe=E.$property=function(t){function e(t){return function(e,n){var r=(e=be(e))[0];if(C(n))return r?r[t]:"";r&&xt(e,(function(e){e[t]=n}))}}return{html:e("innerHTML"),text:e("textContent"),val:e("value")}}(),Ee=E.$remove=function(t){t=be(t),xt(t,(function(t){var e=t.parentNode;e&&e.removeChild(t)}))},Ae=E.$show=function(t){t=function(t){t=be(t),xt(t,(function(t){(function(t){return"none"==getComputedStyle(t,"").getPropertyValue("display")})(t)&&(t.style.display=function(t){var n,r;return e[t]||(n=document.createElement(t),document.documentElement.appendChild(n),r=getComputedStyle(n,"").getPropertyValue("display"),n.parentNode.removeChild(n),"none"==r&&(r="block"),e[t]=r),e[t]}(t.nodeName))}))};var e={};return t}({}),Ce=E.Stack=_e({initialize:function(){this.clear()},clear:function(){this._items=[],this.size=0},push:function(t){return this._items.push(t),++this.size},pop:function(){if(this.size)return this.size--,this._items.pop()},peek:function(){return this._items[this.size-1]},forEach:function(t,e){e=arguments.length>1?e:this;for(var n=this._items,r=this.size-1,i=0;r>=0;r--,i++)t.call(e,n[r],i,this)},toArr:function(){return P(this._items)}}),je=E.delegate=function(t){function e(){return!0}function n(){return!1}function r(e){var n,r=this.events[e.type],a=i.call(this,e,r);e=new t.Event(e);for(var o,s,u=0;(s=a[u++])&&!e.isPropagationStopped();)for(e.curTarget=s.el,o=0;(n=s.handlers[o++])&&!e.isImmediatePropagationStopped();)!1===n.handler.apply(s.el,[e])&&(e.preventDefault(),e.stopPropagation())}function i(t,e){var n,r,i,a,o=t.target,s=[],u=e.delegateCount;if(o.nodeType)for(;o!==this;o=o.parentNode||this){for(r=[],a=0;a<u;a++)void 0===r[n=(i=e[a]).selector+" "]&&(r[n]=At(this.querySelectorAll(n),o)),r[n]&&r.push(i);r.length&&s.push({el:o,handlers:r})}return u<e.length&&s.push({el:this,handlers:e.slice(u)}),s}return t={add:function(t,e,n,i){var a,o={selector:n,handler:i};t.events||(t.events={}),(a=t.events[e])||((a=t.events[e]=[]).delegateCount=0,t.addEventListener(e,(function(){r.apply(t,arguments)}),!1)),n?a.splice(a.delegateCount++,0,o):a.push(o)},remove:function(t,e,n,r){var i=t.events;if(i&&i[e])for(var a,o=i[e],s=o.length;s--;)a=o[s],n&&a.selector!=n||a.handler!=r||(o.splice(s,1),a.selector&&o.delegateCount--)},Event:_e({className:"Event",initialize:function(t){this.origEvent=t},isDefaultPrevented:n,isPropagationStopped:n,isImmediatePropagationStopped:n,preventDefault:function(){var t=this.origEvent;this.isDefaultPrevented=e,t&&t.preventDefault&&t.preventDefault()},stopPropagation:function(){var t=this.origEvent;this.isPropagationStopped=e,t&&t.stopPropagation&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.origEvent;this.isImmediatePropagationStopped=e,t&&t.stopImmediatePropagation&&t.stopImmediatePropagation(),this.stopPropagation()}})}}({}),Se=E.$event=function(t){function e(t){return function(e,n,r,i){e=be(e),C(i)&&(i=r,r=void 0),xt(e,(function(e){je[t](e,n,r,i)}))}}return{on:e("add"),off:e("remove")}}(),Te=E.concat=function(){for(var t=de(arguments),e=[],n=0,r=t.length;n<r;n++)e=e.concat(de(t[n]));return e},Pe=E.mapObj=function(t,e,n){e=ee(e,n);for(var r=X(t),i=r.length,a={},o=0;o<i;o++){var s=r[o];a[s]=e(t[s],s,t)}return a},Re=E.cloneDeep=(w={},w=function(t){return ht(t)?t.map((function(t){return w(t)})):j(t)&&!mt(t)?Pe(t,(function(t){return w(t)})):t}),De=E.some=function(t,e,n){e=ee(e,n);for(var r=!wt(t)&&X(t),i=(r||t).length,a=0;a<i;a++){var o=r?r[a]:a;if(e(t[o],o,t))return!0}return!1},Me=E.$class=function(t){function e(t){return Et(t)?t.split(/\s+/):de(t)}return t={add:function(n,r){n=be(n);var i=e(r);xt(n,(function(e){var n=[];xt(i,(function(r){t.has(e,r)||n.push(r)})),0!==n.length&&(e.className+=(e.className?" ":"")+n.join(" "))}))},has:function(t,e){t=be(t);var n=new RegExp("(^|\\s)"+e+"(\\s|$)");return De(t,(function(t){return n.test(t.className)}))},toggle:function(e,n){e=be(e),xt(e,(function(e){if(!t.has(e,n))return t.add(e,n);t.remove(e,n)}))},remove:function(t,n){t=be(t);var r=e(n);xt(t,(function(t){xt(r,(function(e){t.classList.remove(e)}))}))}}}({}),Le=E.$=function(t){t=function(t){return new ge(t)},ge.methods({offset:function(){return $e(this)},hide:function(){return this.css("display","none")},show:function(){return Ae(this),this},first:function(){return t(this[0])},last:function(){return t(A(this))},get:function(t){return this[t]},eq:function(e){return t(this[e])},on:function(t,e,n){return Se.on(this,t,e,n),this},off:function(t,e,n){return Se.off(this,t,e,n),this},html:function(t){var e=Oe.html(this,t);return C(t)?e:this},text:function(t){var e=Oe.text(this,t);return C(t)?e:this},val:function(t){var e=Oe.val(this,t);return C(t)?e:this},css:function(t,n){var r=we(this,t,n);return e(t,n)?r:this},attr:function(t,n){var r=ye(this,t,n);return e(t,n)?r:this},data:function(t,n){var r=xe(this,t,n);return e(t,n)?r:this},rmAttr:function(t){return ye.remove(this,t),this},remove:function(){return Ee(this),this},addClass:function(t){return Me.add(this,t),this},rmClass:function(t){return Me.remove(this,t),this},toggleClass:function(t){return Me.toggle(this,t),this},hasClass:function(t){return Me.has(this,t)},parent:function(){return t(this[0].parentNode)},append:function(t){return ke.append(this,t),this},prepend:function(t){return ke.prepend(this,t),this},before:function(t){return ke.before(this,t),this},after:function(t){return ke.after(this,t),this}});var e=function(t,e){return C(e)&&Et(t)};return t}({}),Ne=E.memStorage=function(t){t={getItem:function(t){return(n[t]?e[t]:this[t])||null},setItem:function(t,r){n[t]?e[t]=r:this[t]=r},removeItem:function(t){n[t]?delete e[t]:delete this[t]},key:function(t){var e=r();return t>=0&&t<e.length?e[t]:null},clear:function(){for(var t,n=i(),r=0;t=n[r];r++)delete this[t];n=a();for(var o,s=0;o=n[s];s++)delete e[o]}},Object.defineProperty(t,"length",{enumerable:!1,configurable:!0,get:function(){return r().length}});var e={},n={getItem:1,setItem:1,removeItem:1,key:1,clear:1,length:1};function r(){return i().concat(a())}function i(){return X(t).filter((function(t){return!n[t]}))}function a(){return X(e)}return t}({}),Fe=E.safeStorage=function(t){var e;switch(t=t||"local"){case"local":e=window.localStorage;break;case"session":e=window.sessionStorage}try{var n="test-localStorage-"+Date.now();e.setItem(n,n);var r=e.getItem(n);if(e.removeItem(n),r!==n)throw new Error}catch(t){return Ne}return e},Ie=E.meta=function(t){(t=function(t,i){if(C(t))return a={},n((function(t,e){a[t]=e})),a;var a;if(Et(t)&&C(i)||ht(t))return function(t){if(!Et(t)){var e={};return n((function(n,r){At(t,n)&&(e[n]=r)})),e}var i=r(t);if(i)return i.getAttribute("content")}(t);var o=t;j(o)||((o={})[t]=i),function(t){xt(t,(function(t,n){var i=r(n);if(i)return i.setAttribute("content",t);(i=e.createElement("meta")).setAttribute("name",n),i.setAttribute("content",t),e.head.appendChild(i)}))}(o)}).remove=function(t){t=de(t),xt(t,(function(t){var n=r(t);n&&e.head.removeChild(n)}))};var e=document;function n(t){var n=e.querySelectorAll("meta");xt(n,(function(e){var n=e.getAttribute("name"),r=e.getAttribute("content");n&&r&&t(n,r)}))}function r(t){return e.querySelector('meta[name="'+t+'"]')}return t}({}),ze=E.toNum=function(t){if(yt(t))return t;if(j(t)){var e=mt(t.valueOf)?t.valueOf():t;t=j(e)?e+"":e}return Et(t)?+t:0===t?t:+t},He=E.ms=function(t){t=function(t){if(Et(t)){var i=t.match(r);return i?ze(i[1])*e[i[2]||"ms"]:0}for(var a=t,o="ms",s=0,u=n.length;s<u;s++)if(a>=e[n[s]]){o=n[s];break}return+(a/e[o]).toFixed(2)+o};var e={ms:1,s:1e3};e.m=60*e.s,e.h=60*e.m,e.d=24*e.h,e.y=365.25*e.d;var n=["y","d","h","m","s"],r=/^((?:\d+)?\.?\d+) *(s|m|h|d|y)?$/;return t}({}),Be=E.toInt=function(t){return t?(t=ze(t))-t%1:0===t?t:0},Ue=E.detectBrowser=function(t){t=function(t){var a=i(t=(t=t||(R?navigator.userAgent:"")).toLowerCase(),"msie ");if(a)return{version:a,name:"ie"};if(n.test(t))return{version:11,name:"ie"};for(var o=0,s=r.length;o<s;o++){var u=r[o],l=t.match(e[u]);if(null!=l){var c=Be(l[1].split(".")[0]);return"opera"===u&&(c=i(t,"version/")||c),{name:u,version:c}}}return{name:"unknown",version:-1}};var e={edge:/edge\/([0-9._]+)/,firefox:/firefox\/([0-9.]+)(?:\s|$)/,opera:/opera\/([0-9.]+)(?:\s|$)/,android:/android\s([0-9.]+)/,ios:/version\/([0-9._]+).*mobile.*safari.*/,safari:/version\/([0-9._]+).*safari/,chrome:/(?!chrom.*opr)chrom(?:e|ium)\/([0-9.]+)(:?\s|$)/},n=/trident\/7\./,r=X(e);function i(t,e){var n=t.indexOf(e);if(n>-1)return Be(t.substring(n+e.length,t.indexOf(".",n)))}return t}({}),qe=E.nextTick=function(t){function e(t){if("function"!=typeof t)throw new TypeError(t+" is not a function");return t}return"object"===(void 0===r?"undefined":O()(r))&&r.nextTick?r.nextTick:"function"==typeof i?function(t){i(e(t))}:function(t){setTimeout(e(t),0)}}(),Ge=E.now=Date.now||function(){return(new Date).getTime()},Ke=E.partial=Q((function(t,e){return function(){var n=[];return n=(n=n.concat(e)).concat(de(arguments)),t.apply(this,n)}})),We=E.once=Ke(M,2),Ve=E.Emitter=function(t){return t=_e({initialize:function(){this._events=this._events||{}},on:function(t,e){return this._events[t]=this._events[t]||[],this._events[t].push(e),this},off:function(t,e){if(S(this._events,t))return this._events[t].splice(this._events[t].indexOf(e),1),this},once:function(t,e){return this.on(t,We(e)),this},emit:function(t){if(S(this._events,t)){var e=T(arguments,1);return xt(this._events[t],(function(t){t.apply(this,e)}),this),this}}},{mixin:function(e){xt(["on","off","once","emit"],(function(n){e[n]=t.prototype[n]})),e._events=e._events||{}}})}({}),Xe=E.Logger=function(t){return t=Ve.extend({initialize:function(e,n){this.name=e,this.setLevel(C(n)?t.level.DEBUG:n),this.callSuper(Ve,"initialize",arguments)},setLevel:function(e){return Et(e)?((e=t.level[e.toUpperCase()])&&(this._level=e),this):(yt(e)&&(this._level=e),this)},getLevel:function(){return this._level},formatter:function(t,e){return e},trace:function(){return this._log("trace",arguments)},debug:function(){return this._log("debug",arguments)},info:function(){return this._log("info",arguments)},warn:function(){return this._log("warn",arguments)},error:function(){return this._log("error",arguments)},_log:function(e,n){return 0===(n=de(n)).length||(this.emit("all",e,le(n)),t.level[e.toUpperCase()]<this._level||(this.emit(e,le(n)),("debug"===e?console.log:console[e]).apply(console,this.formatter(e,n)))),this}},{level:new ve({TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5})})}({}),Je=E.MediaQuery=Ve.extend({className:"MediaQuery",initialize:function(t){var e=this;this.callSuper(Ve,"initialize"),this._mql=window.matchMedia(t),this._mql.addListener((function(){e.emit(e.isMatch()?"match":"unmatch")}))},isMatch:function(){return this._mql.matches}}),Ye=E.isDarkMode=(x=new Je("(prefers-color-scheme: dark)"),function(){return x.isMatch()}),Qe=E.Store=Ve.extend({initialize:function(t){this.callSuper(Ve,"initialize",arguments),this._data=t||{},this.save(this._data)},set:function(t,e){var n;Et(t)?(n={})[t]=e:j(t)&&(n=t);var r=this;xt(n,(function(t,e){var n=r._data[e];r._data[e]=t,r.emit("change",e,t,n)})),this.save(this._data)},get:function(t){var e=this._data;if(Et(t))return e[t];var n={};return xt(t,(function(t){n[t]=e[t]})),n},remove:function(t){t=de(t);var e=this._data;xt(t,(function(t){delete e[t]})),this.save(e)},clear:function(){this._data={},this.save(this._data)},each:function(t){xt(this._data,t)},save:function(t){this._data=t}}),Ze=E.orientation=function(t){var e=window.screen;return t={get:function(){if(e){var t=dt(e,"orientation.type");if(t)return t.split("-").shift()}return window.innerWidth>window.innerHeight?"landscape":"portrait"}},Ve.mixin(t),window.addEventListener("orientationchange",(function(){setTimeout((function(){t.emit("change",t.get())}),200)}),!1),t}({}),tn=E.perfNow=function(t){var e,n=W.performance,r=W.process;if(n&&n.now)t=function(){return n.now()};else if(r&&r.hrtime){var i=function(){var t=r.hrtime();return 1e9*t[0]+t[1]};e=i()-1e9*r.uptime(),t=function(){return(i()-e)/1e6}}else e=Ge(),t=function(){return Ge()-e};return t}({}),en=E.pick=function(t,e,n){if(Et(e)&&(e=[e]),ht(e)){var r=e;e=function(t,e){return At(r,e)}}var i={},a=function(t,n){e(t,n)&&(i[n]=t)};return n&&(a=function(t,n){e(t,n)||(i[n]=t)}),xt(t,a),i},nn=E.pxToNum=function(t){return ze(t.replace("px",""))},rn=E.raf=function(t){var e,n,r=0;if(R){e=window.requestAnimationFrame,n=window.cancelAnimationFrame;for(var i=["ms","moz","webkit","o"],a=0,o=i.length;a<o&&!e;a++)e=window[i[a]+"RequestAnimationFrame"],n=window[i[a]+"CancelAnimationFrame"]||window[i[a]+"CancelRequestAnimationFrame"]}return n=n||function(t){clearTimeout(t)},(e=e||function(t){var e=Ge(),n=Math.max(0,16-(e-r)),i=setTimeout((function(){t(e+n)}),n);return r=e+n,i}).cancel=n,e}(),an=E.rmCookie=function(t){var e,n=window.location,r=n.hostname,i=n.pathname,a=r.split("."),o=i.split("/"),s="",u=o.length;if(!f())for(var l=a.length-1;l>=0;l--){var c=a[l];if(""!==c){if(f({domain:s=""===s?c:c+"."+s,path:e="/"})||f({domain:s}))return;for(var p=0;p<u;p++){var h=o[p];if(""!==h){if(f({domain:s,path:e+=h})||f({path:e}))return;if(f({domain:s,path:e+="/"})||f({path:e}))return}}}}function f(e){return e=e||{},fe.remove(t,e),!fe.get(t)}},on=E.rtrim=function(t){var e=/\s+$/;return function(t,n){if(null==n)return t.replace(e,"");for(var r,i,a=t.length-1,o=n.length,s=!0;s&&a>=0;)for(s=!1,r=-1,i=t.charAt(a);++r<o;)if(i===n[r]){s=!0,a--;break}return a>=0?t.substring(0,a+1):""}}(),sn=E.trim=function(t){var e=/^\s+|\s+$/g;return function(t,n){return null==n?t.replace(e,""):Zt(on(t,n),n)}}(),un=E.extractUrls=function(t){t=function(t){var n=de(t.match(e));return ie(pe(n,(function(t){return sn(t)})))};var e=/((https?)|(ftp)):\/\/[\w.]+[^ \f\n\r\t\v"\\<>[\]\u2100-\uFFFF(),]*/gi;return t}({}),ln=E.linkify=function(t){function e(t){return'<a href="'+t+'">'+t+"</a>"}return function(t,n){n=n||e;var r=un(t);return xt(r,(function(e){t=t.replace(new RegExp(it(e),"g"),n)})),t}}(),cn=E.query=function(t){t={parse:function(t){var n={};return t=sn(t).replace(e,""),xt(t.split("&"),(function(t){var e=t.split("="),r=e.shift(),i=e.length>0?e.join("="):null;r=decodeURIComponent(r),i=decodeURIComponent(i),C(n[r])?n[r]=i:ht(n[r])?n[r].push(i):n[r]=[n[r],i]})),n},stringify:function(e,n){return ne(pe(e,(function(e,r){return j(e)&&Ct(e)?"":ht(e)?t.stringify(e,r):(n?encodeURIComponent(n):encodeURIComponent(r))+"="+encodeURIComponent(e)})),(function(t){return t.length>0})).join("&")}};var e=/^(\?|#|&)/g;return t}({}),pn=E.Url=function(t){t=_e({className:"Url",initialize:function(e){!e&&R&&(e=window.location.href),ue(this,t.parse(e||""))},setQuery:function(t,e){var n=this.query;return j(t)?xt(t,(function(t,e){n[e]=t})):n[t]=e,this},rmQuery:function(t){var e=this.query;return ht(t)||(t=de(t)),xt(t,(function(t){delete e[t]})),this},toString:function(){return t.stringify(this)}},{parse:function(t){var i={protocol:"",auth:"",hostname:"",hash:"",query:{},port:"",pathname:"",slashes:!1},a=sn(t),o=!1,s=a.match(e);if(s&&(s=s[0],i.protocol=s.toLowerCase(),a=a.substr(s.length)),s&&(o="//"===a.substr(0,2))&&(a=a.slice(2),i.slashes=!0),o){for(var u=a,l=-1,c=0,p=r.length;c<p;c++){var h=a.indexOf(r[c]);-1!==h&&(-1===l||h<l)&&(l=h)}l>-1&&(u=a.slice(0,l),a=a.slice(l));var f=u.lastIndexOf("@");-1!==f&&(i.auth=decodeURIComponent(u.slice(0,f)),u=u.slice(f+1)),i.hostname=u;var d=u.match(n);d&&(":"!==(d=d[0])&&(i.port=d.substr(1)),i.hostname=u.substr(0,u.length-d.length))}var _=a.indexOf("#");-1!==_&&(i.hash=a.substr(_),a=a.slice(0,_));var v=a.indexOf("?");return-1!==v&&(i.query=cn.parse(a.substr(v+1)),a=a.slice(0,v)),i.pathname=a||"/",i},stringify:function(t){var e=t.protocol+(t.slashes?"//":"")+(t.auth?encodeURIComponent(t.auth)+"@":"")+t.hostname+(t.port?":"+t.port:"")+t.pathname;return Ct(t.query)||(e+="?"+cn.stringify(t.query)),t.hash&&(e+=t.hash),e}});var e=/^([a-z0-9.+-]+:)/i,n=/:[0-9]*$/,r=["/","?","#"];return t}({}),hn=E.getFileName=function(t){var e=A(t.split("/"));return e.indexOf("?")>-1&&(e=sn(e.split("?")[0])),""===e&&(e=(t=new pn(t)).hostname),e},fn=E.ajax=function(t){function e(t,e,n,r){return mt(e)&&(r=n,n=e,e={}),{url:t,data:e,success:n,dataType:r}}return(t=function(e){oe(e,t.setting);var n,r=e.type,i=e.url,a=e.data,o=e.dataType,s=e.success,u=e.error,l=e.timeout,c=e.complete,p=e.xhr();return p.onreadystatechange=function(){if(4===p.readyState){var t;clearTimeout(n);var e=p.status;if(e>=200&&e<300||304===e){t=p.responseText,"xml"===o&&(t=p.responseXML);try{"json"===o&&(t=JSON.parse(t))}catch(t){}s(t,p)}else u(p);c(p)}},"GET"===r?(a=cn.stringify(a),i+=i.indexOf("?")>-1?"&"+a:"?"+a):"application/x-www-form-urlencoded"===e.contentType?j(a)&&(a=cn.stringify(a)):"application/json"===e.contentType&&j(a)&&(a=JSON.stringify(a)),p.open(r,i,!0),p.setRequestHeader("Content-Type",e.contentType),l>0&&(n=setTimeout((function(){p.onreadystatechange=D,p.abort(),u(p,"timeout"),c(p)}),l)),p.send("GET"===r?null:a),p}).setting={type:"GET",success:D,error:D,complete:D,dataType:"json",contentType:"application/x-www-form-urlencoded",data:{},xhr:function(){return new XMLHttpRequest},timeout:0},t.get=function(){return t(e.apply(null,arguments))},t.post=function(){var n=e.apply(null,arguments);return n.type="POST",t(n)},t}({}),dn=E.sortKeys=function(t){t=function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};oe(n,e);var r=n.deep,i=n.comparator,a=[],o=[];function s(t){var e,n=a.indexOf(t);if(n>-1)return o[n];if(ht(t)){e=[],a.push(t),o.push(e);for(var u=0,l=t.length;u<l;u++){var c=t[u];r&&j(c)?e[u]=s(c):e[u]=c}}else{e={},a.push(t),o.push(e);for(var p=X(t).sort(i),h=0,f=p.length;h<f;h++){var d=p[h],_=t[d];r&&j(_)?e[d]=s(_):e[d]=_}}return e}return s(t)};var e={deep:!1,comparator:Wt.defComparator};return t}({}),_n=E.type=function(t){t=function(t){var n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(null===t)return n?"null":"Null";if(void 0===t)return n?"undefined":"Undefined";if(It(t))return n?"nan":"NaN";var r=ct(t).match(e);return r?n?r[1].toLowerCase():r[1]:""};var e=/^\[object\s+(.*?)]$/;return t}({}),vn=E.stringify=function(t,e){return JSON.stringify(t,function(){var t=[],e=[];return function(n,r){if(t.length>0){var i=t.indexOf(this);i>-1?(t.splice(i+1),e.splice(i,1/0,n)):(t.push(this),e.push(n));var a=t.indexOf(r);a>-1&&(r=t[0]===r?"[Circular ~]":"[Circular ~."+e.slice(0,a).join(".")+"]")}else t.push(r);return Kt(r)||mt(r)?r="["+st(_n(r))+" "+U(r)+"]":C(r)&&(r=null),r}}(),e)},mn=E.LocalStore=function(t){var e=Fe("local");return Qe.extend({initialize:function(t,n){this._name=t,n=n||{};var r=e.getItem(t);try{r=JSON.parse(r)}catch(t){r={}}j(r)||(r={}),n=oe(r,n),this.callSuper(Qe,"initialize",[n])},save:function(t){if(Ct(t))return e.removeItem(this._name);e.setItem(this._name,vn(t))}})}(),gn=E.stringifyAll=function(t){function e(e,r,i,a){var o=[];return xt(r,(function(e){var r,s=Object.getOwnPropertyDescriptor(i,e),u=s&&s.get,l=s&&s.set;if(!a.accessGetter&&u)r="(...)";else try{if(r=i[e],At(a.ignore,r))return;Gt(r)&&r.catch((function(){}))}catch(t){r=t.message}o.push("".concat(n(e),":").concat(t(r,a))),u&&o.push("".concat(n("get "+U(e)),":").concat(t(s.get,a))),l&&o.push("".concat(n("set "+U(e)),":").concat(t(s.set,a)))})),'"'.concat(e,'":{')+o.join(",")+"}"}function n(t){return'"'.concat(i(t),'"')}function r(t){return'"'.concat(i(U(t)),'"')}function i(t){return nt(t).replace(/\\'/g,"'").replace(/\t/g,"\\t")}t=function(n){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=i.self,s=i.startTime,u=void 0===s?Ge():s,l=i.timeout,c=void 0===l?0:l,p=i.depth,h=void 0===p?0:p,f=i.curDepth,d=void 0===f?1:f,_=i.visitor,v=void 0===_?new a:_,m=i.unenumerable,g=void 0!==m&&m,b=i.symbol,y=void 0!==b&&b,w=i.accessGetter,x=void 0!==w&&w,k=i.ignore,$=void 0===k?[]:k,E="",A={visitor:v,unenumerable:g,symbol:y,accessGetter:x,depth:h,curDepth:d+1,timeout:c,startTime:u,ignore:$},C=_n(n,!1);if("String"===C)E=r(n);else if("Number"===C)E=U(n),tt(E,"Infinity")&&(E='{"value":"'.concat(E,'","type":"Number"}'));else if("NaN"===C)E='{"value":"NaN","type":"Number"}';else if("Boolean"===C)E=n?"true":"false";else if("Null"===C)E="null";else if("Undefined"===C)E='{"type":"Undefined"}';else if("Symbol"===C){var j="Symbol";try{j=U(n)}catch(t){}E='{"value":'.concat(r(j),',"type":"Symbol"}')}else{if(c&&Ge()-u>c)return r("Timeout");if(h&&d>h)return r("{...}");E="{";var S,T=[],P=v.get(n);if(P?(S=P.id,T.push('"reference":'.concat(S))):(S=v.set(n),T.push('"id":'.concat(S))),T.push('"type":"'.concat(C,'"')),tt(C,"Function")?T.push('"value":'.concat(r(Ht(n)))):"RegExp"===C&&T.push('"value":'.concat(r(n))),!P){var R=X(n);if(R.length&&T.push(e("enumerable",R,o||n,A)),g){var D=re(ae(n,{prototype:!1,unenumerable:!0}),R);D.length&&T.push(e("unenumerable",D,o||n,A))}if(y){var M=ne(ae(n,{prototype:!1,symbol:!0}),(function(t){return"symbol"===O()(t)}));M.length&&T.push(e("symbol",M,o||n,A))}var L=gt(n);if(L&&!At($,L)){var N='"proto":'.concat(t(L,ue(A,{self:o||n})));T.push(N)}}E+=T.join(",")+"}"}return E};var a=_e({initialize:function(){this.id=0,this.visited=[]},set:function(t){var e=this.visited,n=this.id,r={id:n,val:t};return e.push(r),this.id++,n},get:function(t){for(var e=this.visited,n=0,r=e.length;n<r;n++){var i=e[n];if(t===i.val)return i}return!1}});return t}({}),bn=E.throttle=function(t,e){return q(t,e,!0)},yn=E.uncaught=function(t){var e=[],n=!1;function i(t){if(n)for(var r=0,i=e.length;r<i;r++)e[r](t)}return t={start:function(){n=!0},stop:function(){n=!1},addListener:function(t){e.push(t)},rmListener:function(t){var n=e.indexOf(t);n>-1&&e.splice(n,1)},rmAllListeners:function(){e=[]}},R?(window.addEventListener("error",(function(t){i(t.error)})),window.addEventListener("unhandledrejection",(function(t){i(t.reason)}))):(r.on("uncaughtException",i),r.on("unhandledRejection",i)),t}({}),wn=E.uniqId=(k=0,function(t){var e=++k+"";return t?t+e:e}),xn=E.viewportScale=function(){var t=Ie("viewport");if(!t)return 1;t=pe(t.split(","),(function(t){return sn(t)}));var e=.25,n=5,r=1;xt(t,(function(t){var i=(t=t.split("="))[0];t=t[1],"initial-scale"===i&&(r=+t),"maximum-scale"===i&&(n=+t),"minimum-scale"===i&&(e=+t)}));var i=I(r,e,n);return It(i)?1:i},kn=E.wrap=function(t,e){return Ke(e,t)},$n=E.xpath=function(t){for(var e=[],n=document.evaluate(t,document,null,XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,null),r=0;r<n.snapshotLength;r++)e.push(n.snapshotItem(r));return e};e.q=E}).call(this,n(16),n(21),n(35).setImmediate)},function(t,e){function n(e){return t.exports=n=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},n(e)}t.exports=n},function(t,e){t.exports=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}},function(t,e){function n(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}t.exports=function(t,e,r){return e&&n(t.prototype,e),r&&n(t,r),t}},function(t,e,n){var r=n(12),i=n(9);t.exports=function(t,e){return!e||"object"!==r(e)&&"function"!=typeof e?i(t):e}},function(t,e,n){var r=n(20);t.exports=function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&r(t,e)}},function(t,e,n){var r=n(37);function i(e,n,a){return"undefined"!=typeof Reflect&&Reflect.get?t.exports=i=Reflect.get:t.exports=i=function(t,e,n){var i=r(t,e);if(i){var a=Object.getOwnPropertyDescriptor(i,e);return a.get?a.get.call(n):a.value}},i(e,n,a||e)}t.exports=i},function(t,e,n){var r=n(40);r.registerHelper("repeat",(function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1?arguments[1]:void 0;if(t<1)return e.inverse(this);var n=1,r=0,i=t*n+r,a=r,o="";do{var s={index:a,count:t,start:r,step:n,first:a===r,last:a>=i-n},u=[a,s];o+=e.fn(this,{data:s,blockParams:u}),a+=s.step}while(a<i);return o})),r.registerHelper("class",(function(t){var e=t.split(/\s+/);return e=e.map((function(t){return"eruda-".concat(t)})),'class="'.concat(e.join(" "),'"')})),r.registerHelper("concat",(function(){for(var t="",e=0,n=arguments.length;e<n;e++){var r=arguments[e];"string"==typeof r&&(t+=r)}return t})),t.exports=r},function(t,e,n){"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=function(t,e){var n,r,i,a=t[1]||"",o=t[3];if(!o)return a;if(e&&"function"==typeof btoa){var s=(n=o,r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),"/*# ".concat(i," */")),u=o.sources.map((function(t){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(t," */")}));return[a].concat(u).concat([s]).join("\n")}return[a].join("\n")}(e,t);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,r){"string"==typeof t&&(t=[[null,t,""]]);var i={};if(r)for(var a=0;a<this.length;a++){var o=this[a][0];null!=o&&(i[o]=!0)}for(var s=0;s<t.length;s++){var u=[].concat(t[s]);r&&i[u[0]]||(n&&(u[2]?u[2]="".concat(n," and ").concat(u[2]):u[2]=n),e.push(u))}},e}},function(t,e){t.exports=function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}},function(t,e,n){"use strict";e.__esModule=!0,e.extend=s,e.indexOf=function(t,e){for(var n=0,r=t.length;n<r;n++)if(t[n]===e)return n;return-1},e.escapeExpression=function(t){if("string"!=typeof t){if(t&&t.toHTML)return t.toHTML();if(null==t)return"";if(!t)return t+"";t=""+t}return a.test(t)?t.replace(i,o):t},e.isEmpty=function(t){return!t&&0!==t||!(!c(t)||0!==t.length)},e.createFrame=function(t){var e=s({},t);return e._parent=t,e},e.blockParams=function(t,e){return t.path=e,t},e.appendContextPath=function(t,e){return(t?t+".":"")+e};var r={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;","=":"&#x3D;"},i=/[&<>"'`=]/g,a=/[&<>"'`=]/;function o(t){return r[t]}function s(t){for(var e=1;e<arguments.length;e++)for(var n in arguments[e])Object.prototype.hasOwnProperty.call(arguments[e],n)&&(t[n]=arguments[e][n]);return t}var u=Object.prototype.toString;e.toString=u;var l=function(t){return"function"==typeof t};l(/x/)&&(e.isFunction=l=function(t){return"function"==typeof t&&"[object Function]"===u.call(t)}),e.isFunction=l;var c=Array.isArray||function(t){return!(!t||"object"!=typeof t)&&"[object Array]"===u.call(t)};e.isArray=c},function(t,e,n){"use strict";var r,i;r=[n(18),n(19),n(67)],void 0===(i=function(t,e,n){return function(t,e,n){var r=function(e,n){return t.js_beautify(e,n)};return r.js=t.js_beautify,r.css=e.css_beautify,r.html=n.html_beautify,r.js_beautify=t.js_beautify,r.css_beautify=e.css_beautify,r.html_beautify=n.html_beautify,r}(t,e,n)}.apply(e,r))||(t.exports=i)},function(t,e){function n(e){return"function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?t.exports=n=function(t){return typeof t}:t.exports=n=function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},n(e)}t.exports=n},function(t,e,n){"use strict";e.__esModule=!0;var r=["description","fileName","lineNumber","endLineNumber","message","name","number","stack"];function i(t,e){var n=e&&e.loc,a=void 0,o=void 0,s=void 0,u=void 0;n&&(a=n.start.line,o=n.end.line,s=n.start.column,u=n.end.column,t+=" - "+a+":"+s);for(var l=Error.prototype.constructor.call(this,t),c=0;c<r.length;c++)this[r[c]]=l[r[c]];Error.captureStackTrace&&Error.captureStackTrace(this,i);try{n&&(this.lineNumber=a,this.endLineNumber=o,Object.defineProperty?(Object.defineProperty(this,"column",{value:s,enumerable:!0}),Object.defineProperty(this,"endColumn",{value:u,enumerable:!0})):(this.column=s,this.endColumn=u))}catch(t){}}i.prototype=new Error,e.default=i,t.exports=e.default},function(t,e){t.exports=function(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}},function(t,e,n){var r=n(63),i=n(64),a=n(65);t.exports=function(t,e){return r(t)||i(t,e)||a()}},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){window,t.exports=function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="/assets/",n(n.s=39)}([function(t,e,n){var r=n(8),i=n(4),a=n(23);n(12),e=function(t,e,n){var o,s;if(e=a(e,n),r(t))for(o=0,s=t.length;o<s;o++)e(t[o],o,t);else{var u=i(t);for(o=0,s=u.length;o<s;o++)e(t[u[o]],u[o],t)}return t},t.exports=e},function(t,e,n){var r=n(9);e=function(t){return"[object String]"===r(t)},t.exports=e},function(t,e){e=function(t){var e=typeof t;return!!t&&("function"===e||"object"===e)},t.exports=e},function(t,e,n){var r=n(1),i=n(11),a=n(31);e=function(t){return i(r(t)?new a(t):t)},t.exports=e},function(t,e,n){var r=n(10),i=n(40);e=Object.keys&&!i()?Object.keys:function(t){var e=[];for(var n in t)r(t,n)&&e.push(n);return e},t.exports=e},function(t,e){e=function(t){return void 0===t},t.exports=e},function(t,e,n){var r=n(9);e=function(t){return"[object Number]"===r(t)},t.exports=e},function(t,e,n){var r=n(9);e=function(t){var e=r(t);return"[object Function]"===e||"[object GeneratorFunction]"===e||"[object AsyncFunction]"===e},t.exports=e},function(t,e,n){var r=n(6),i=n(7),a=Math.pow(2,53)-1;e=function(t){if(!t)return!1;var e=t.length;return r(e)&&e>=0&&e<=a&&!i(t)},t.exports=e},function(t,e){var n=Object.prototype.toString;e=function(t){return n.call(t)},t.exports=e},function(t,e){var n=Object.prototype.hasOwnProperty;e=function(t,e){return n.call(t,e)},t.exports=e},function(t,e,n){var r=n(8),i=n(49),a=n(13),o=n(1);e=function(t){return t?a(t)?t:r(t)&&!o(t)?i(t):[t]:[]},t.exports=e},function(t,e){e={},t.exports=e},function(t,e,n){var r=n(9);e=Array.isArray||function(t){return"[object Array]"===r(t)},t.exports=e},function(t,e,n){var r=n(21),i=n(11),a=n(50),o=n(52),s=n(54),u=(e=function(t,e){return u.extend(t,e)}).Base=function t(e,n,u){u=u||{};var l,c=n.className||o(n,"initialize.name")||"";return delete n.className,l=s?function(){var t=i(arguments);return this.initialize&&this.initialize.apply(this,t)||this}:new Function("toArr","return function "+c+"(){var args = toArr(arguments);return this.initialize ? this.initialize.apply(this, args) || this : this;};")(i),a(l,e),l.prototype.constructor=l,l.extend=function(e,n){return t(l,e,n)},l.inherits=function(t){a(l,t)},l.methods=function(t){return r(l.prototype,t),l},l.statics=function(t){return r(l,t),l},l.methods(n).statics(u),l}(Object,{className:"Base",callSuper:function(t,e,n){return t.prototype[e].apply(this,n)},toString:function(){return this.constructor.name}});t.exports=e},function(t,e,n){var r=n(16),i=n(0);n(12),e=function(t,e,n){var a=[];return e=r(e,n),i(t,(function(t,n,r){e(t,n,r)&&a.push(t)})),a},t.exports=e},function(t,e,n){var r=n(7),i=n(2),a=n(23),o=n(45),s=n(48);e=function(t,e,n){return null==t?s:r(t)?a(t,e,n):i(t)?o(t):function(t){return function(e){return null==e?void 0:e[t]}}},t.exports=e},function(t,e){e=function(t){return null==t?"":t.toString()},t.exports=e},function(t,e){e=function(t){return t.length<1?t:t[0].toUpperCase()+t.slice(1)},t.exports=e},function(t,e,n){var r=n(66),i=n(1),a=n(8),o=n(67);e=function(t,e){return i(t)?t.indexOf(e)>-1:(a(t)||(t=o(t)),r(t,e)>=0)},t.exports=e},function(t,e,n){var r=n(14),i=n(10),a=n(0),o=n(55),s=n(56);e=r({initialize:function(){this._events=this._events||{}},on:function(t,e){return this._events[t]=this._events[t]||[],this._events[t].push(e),this},off:function(t,e){if(i(this._events,t))return this._events[t].splice(this._events[t].indexOf(e),1),this},once:function(t,e){return this.on(t,s(e)),this},emit:function(t){if(i(this._events,t)){var e=o(arguments,1);return a(this._events[t],(function(t){t.apply(this,e)}),this),this}}},{mixin:function(t){a(["on","off","once","emit"],(function(n){t[n]=e.prototype[n]})),t._events=t._events||{}}}),t.exports=e},function(t,e,n){e=n(22)(n(24)),t.exports=e},function(t,e,n){var r=n(5),i=n(0);e=function(t,e){return function(n){return i(arguments,(function(a,o){if(0!==o){var s=t(a);i(s,(function(t){e&&!r(n[t])||(n[t]=a[t])}))}})),n}},t.exports=e},function(t,e,n){var r=n(5);e=function(t,e,n){if(r(e))return t;switch(null==n?3:n){case 1:return function(n){return t.call(e,n)};case 3:return function(n,r,i){return t.call(e,n,r,i)};case 4:return function(n,r,i,a){return t.call(e,n,r,i,a)}}return function(){return t.apply(e,arguments)}},t.exports=e},function(t,e,n){var r=n(4),i=n(25),a=n(44),o=Object.getOwnPropertyNames,s=Object.getOwnPropertySymbols;e=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.prototype,u=void 0===n||n,l=e.unenumerable,c=void 0!==l&&l,p=e.symbol,h=void 0!==p&&p,f=[];if((c||h)&&o){var d=r;c&&o&&(d=o);do{f=f.concat(d(t)),h&&s&&(f=f.concat(s(t)))}while(u&&(t=i(t))&&t!==Object.prototype);f=a(f)}else if(u)for(var _ in t)f.push(_);else f=r(t);return f},t.exports=e},function(t,e,n){var r=n(2),i=n(7),a=Object.getPrototypeOf,o={}.constructor;e=function(t){if(r(t)){if(a)return a(t);var e=t.__proto__;return e||null===e?e:i(t.constructor)?t.constructor.prototype:t instanceof o?o.prototype:void 0}},t.exports=e},function(t,e){e=function(t,e){return e=null==e?t.length-1:+e,function(){var n,r=Math.max(arguments.length-e,0),i=new Array(r);for(n=0;n<r;n++)i[n]=arguments[n+e];switch(e){case 0:return t.call(this,i);case 1:return t.call(this,arguments[0],i);case 2:return t.call(this,arguments[0],arguments[1],i)}var a=new Array(e+1);for(n=0;n<e;n++)a[n]=arguments[n];return a[e]=i,t.apply(this,a)}},t.exports=e},function(t,e){e=function(t){return!0===t||!1===t},t.exports=e},function(t,e,n){var r=n(17);e=function(t){return r(t).toLocaleLowerCase()},t.exports=e},function(t,e,n){var r=n(6);e=function(t){return r(t)&&t!==+t},t.exports=e},function(t,e,n){var r=n(31),i=n(63),a=n(64),o=n(65),s=n(34),u=n(71),l=n(72),c=n(73),p=n(74),h=n(75),f=n(77),d=n(79),_=n(5),v=n(1);e=function(t){return new r(t)},r.methods({offset:function(){return i(this)},hide:function(){return this.css("display","none")},show:function(){return a(this),this},first:function(){return e(this[0])},last:function(){return e(l(this))},get:function(t){return this[t]},eq:function(t){return e(this[t])},on:function(t,e,n){return h.on(this,t,e,n),this},off:function(t,e,n){return h.off(this,t,e,n),this},html:function(t){var e=u.html(this,t);return _(t)?e:this},text:function(t){var e=u.text(this,t);return _(t)?e:this},val:function(t){var e=u.val(this,t);return _(t)?e:this},css:function(t,e){var n=o(this,t,e);return m(t,e)?n:this},attr:function(t,e){var n=s(this,t,e);return m(t,e)?n:this},data:function(t,e){var n=p(this,t,e);return m(t,e)?n:this},rmAttr:function(t){return s.remove(this,t),this},remove:function(){return c(this),this},addClass:function(t){return f.add(this,t),this},rmClass:function(t){return f.remove(this,t),this},toggleClass:function(t){return f.toggle(this,t),this},hasClass:function(t){return f.has(this,t)},parent:function(){return e(this[0].parentNode)},append:function(t){return d.append(this,t),this},prepend:function(t){return d.prepend(this,t),this},before:function(t){return d.before(this,t),this},after:function(t){return d.after(this,t),this}});var m=function(t,e){return _(e)&&v(t)};t.exports=e},function(t,e,n){var r=n(14),i=n(1),a=n(0),o=new(e=r({className:"Select",initialize:function(t){return this.length=0,t?i(t)?o.find(t):void(t.nodeType&&(this[0]=t,this.length=1)):this},find:function(t){var n=new e;return this.each((function(){!function(t,e){for(var n=e.length,r=t.length,i=0;i<n;i++)t[r++]=e[i];t.length=r}(n,this.querySelectorAll(t))})),n},each:function(t){return a(this,(function(e,n){t.call(e,n,e)})),this}}))(document);t.exports=e},function(t,e,n){var r=n(33);e=function(t){return r(t).join("-")},t.exports=e},function(t,e){var n=/([A-Z])/g,r=/[_.\- ]+/g,i=/(^-)|(-$)/g;e=function(t){return(t=t.replace(n,"-$1").toLowerCase().replace(r,"-").replace(i,"")).split("-")},t.exports=e},function(t,e,n){var r=n(11),i=n(2),a=n(1),o=n(0),s=n(5),u=n(3);(e=function(t,e,n){if(t=u(t),s(n)&&a(e))return function(t,e){return t.getAttribute(e)}(t[0],e);var r=e;i(r)||((r={})[e]=n),function(t,e){o(t,(function(t){o(e,(function(e,n){t.setAttribute(n,e)}))}))}(t,r)}).remove=function(t,e){t=u(t),e=r(e),o(t,(function(t){o(e,(function(e){t.removeAttribute(e)}))}))},t.exports=e},function(t,e){e=function(t,e){var n=[];e=e||1;for(var r=0,i=Math.ceil(t.length/e);r<i;r++){var a=r*e,o=a+e;n.push(t.slice(a,o))}return n},t.exports=e},function(t,e,n){"use strict";var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var i=r(n(17)),a=r(n(84)),o=r(n(37)),s=r(n(38)),u=r(n(87));e.encode=function(t){return u.default(i.default(t)).replace(/\n/g,"↵").replace(/\f|\r|\t/g,"")},e.getFnAbstract=function(t){return t.length>500&&(t=t.slice(0,500)+"..."),"ƒ "+a.default(function(t){var e=t.match(l);return e?e[0]:t}(t).replace("function",""))};var l=/function(.*?)\((.*?)\)/;function c(t,e){return(t=p(t))>(e=p(e))?1:t<e?-1:0}function p(t){return 95===t?123:t}e.sortObjName=function(t,e){t=i.default(t),e=i.default(e);var n=o.default(t),r=o.default(e);if(!isNaN(n)&&!isNaN(r))return n>r?1:n<r?-1:0;(s.default(t,"get ")||s.default(t,"set "))&&(t=t.slice(4)),(s.default(e,"get ")||s.default(e,"set "))&&(e=e.slice(4));for(var a=t.length,u=e.length,l=a>u?u:a,p=0;p<l;p++){var h=c(t.charCodeAt(p),e.charCodeAt(p));if(0!==h)return h}return a>u?1:a<u?-1:0}},function(t,e,n){var r=n(6),i=n(2),a=n(7),o=n(1);e=function(t){if(r(t))return t;if(i(t)){var e=a(t.valueOf)?t.valueOf():t;t=i(e)?e+"":e}return o(t)?+t:0===t?t:+t},t.exports=e},function(t,e){e=function(t,e){return 0===t.indexOf(e)},t.exports=e},function(t,e,n){"use strict";var r,i,a=this&&this.__extends||(r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var s=o(n(20)),u=o(n(25)),l=o(n(6)),c=o(n(27)),p=o(n(28)),h=o(n(2)),f=o(n(13)),d=o(n(18)),_=o(n(4)),v=o(n(0)),m=o(n(59)),g=o(n(61)),b=o(n(62)),y=o(n(30)),w=o(n(80)),x=o(n(24)),k=o(n(15)),$=o(n(35)),O=o(n(17)),E=o(n(82)),A=o(n(83)),C=n(36),j=o(n(88));n(90);var S="luna-object-viewer-";t.exports=((i=function(t){function e(e,n){var r=void 0===n?{}:n,i=r.unenumerable,a=void 0!==i&&i,o=r.accessGetter,s=void 0!==o&&o,u=t.call(this)||this;return u.$container=y.default(e),u.$container.addClass("luna-object-viewer"),u.unenumerable=a,u.accessGetter=s,u.bindEvent(),u}return a(e,t),e.prototype.set=function(t){this.data=[t],this.visitor=new A.default,this.map={},this.appendTpl()},e.prototype.objToHtml=function(t,e){var n=this,r=this.visitor,i=t,a=!1,o=r.get(t);o&&o.self&&(i=o.self);var s="",l=["enumerable"],c=_.default(t),p=[],h=[],d=[],m={};if(this.unenumerable&&!e&&(l.push("unenumerable"),l.push("symbol"),p=w.default(x.default(t,{prototype:!1,unenumerable:!0}),c),h=k.default(x.default(t,{prototype:!1,symbol:!0}),(function(t){return"symbol"==typeof t}))),f.default(t)&&t.length>100){l.unshift("virtual"),a=!0;var b=0,y={};v.default($.default(t,100),(function(t){var e=Object.create(null),n=b,r="["+n;v.default(t,(function(t){e[b]=t,y[b]=!0,b++}));var i=b-1;m[r+=(i-n>0?" … "+i:"")+"]"]=e})),d=_.default(m),c=k.default(c,(function(t){return!y[t]}))}v.default(l,(function(r){var o=[];o="symbol"===r?h:"unenumerable"===r?p:"virtual"===r?d:c,a||o.sort(C.sortObjName);for(var u=0,l=o.length;u<l;u++){var f=O.default(o[u]),_="",v=Object.getOwnPropertyDescriptor(t,f),b=v&&v.get,y=v&&v.set;if(b&&!n.accessGetter)_="(...)";else try{_="virtual"===r?m[f]:i[f],g.default(_)&&_.catch(E.default)}catch(t){_=t.message}s+=n.createEl(f,t,_,r,e),b&&(s+=n.createEl("get "+f,t,v.get,r,e)),y&&(s+=n.createEl("set "+f,t,v.set,r,e))}}));var A=u.default(t);if(!e&&A)if(""===s){var j=r.set(A,{self:t});this.map[j]=A,s=this.objToHtml(A)}else s+=this.createEl("__proto__",i||t,A,"proto");return s},e.prototype.createEl=function(t,e,n,r,i){void 0===i&&(i=!1);var a=this.visitor,o=typeof n,s=b.default(n,!1);if("virtual"===r&&(s=t),null===n)return"<li>"+y(t)+'<span class="'+S+'null">null</span></li>';if(l.default(n)||c.default(n))return"<li>"+y(t)+'<span class="'+(S+o)+'">'+C.encode(n)+"</span></li>";if("RegExp"===s&&(o="regexp"),"Number"===s&&(o="number"),"Number"===s||"RegExp"===s)return"<li>"+y(t)+'<span class="'+(S+o)+'">'+C.encode(n.value)+"</span></li>";if("Undefined"===s||"Symbol"===s)return"<li>"+y(t)+'<span class="'+S+'special">'+p.default(s)+"</span></li>";if("(...)"===n)return"<li>"+y(t)+'<span class="'+S+'special">'+n+"</span></li>";if(h.default(n)){var u=a.get(n),f=void 0;if(u)f=u.id;else{var _={};"proto"===r&&(_.self=e),f=a.set(n,_),this.map[f]=n}var v=function(t,e){if(e)return"Function"===e?C.getFnAbstract(m.default(t)):"Array"===e?"Array("+t.length+")":e}(n,s)||d.default(o),g="<li "+(i?'data-first-level="true"':"")+' data-object-id="'+f+'"><span class="'+(i?"":S+"expanded "+S+"collapsed")+'"></span>'+y(t)+'<span class="'+S+'open">'+(i?"":v)+'</span><ul class="'+(S+o)+'" '+(i?"":'style="display:none"')+">";return i&&(g+=this.objToHtml(n)),g+'</ul><span class="'+S+'close"></span></li>'}function y(t){if(i)return"";if(h.default(n)&&"virtual"===r)return"";var e=S+"key";return"unenumerable"!==r&&"proto"!==r&&"symbol"!==r||(e=S+"key-lighter"),'<span class="'+e+'">'+C.encode(t)+"</span>: "}return"<li>"+y(t)+'<span class="'+S+typeof n+'">"'+C.encode(n)+'"</span></li>'},e.prototype.appendTpl=function(){this.$container.html(this.objToHtml(this.data,!0))},e.prototype.bindEvent=function(){var t=this;this.$container.on("click","li",(function(e){var n=t.map,r=y.default(this),i=r.data("object-id"),a=y.default(this).find("span").eq(0);if(!r.data("first-level")&&(i&&(r.find("ul").html(t.objToHtml(n[i],!1)),r.rmAttr("data-object-id")),e.stopImmediatePropagation(),a.hasClass(S+"expanded"))){var o=r.find("ul").eq(0);a.hasClass(S+"collapsed")?(a.rmClass(S+"collapsed"),o.show()):(a.addClass(S+"collapsed"),o.hide()),t.emit("change")}}))},e}(s.default)).Static=j.default,i)},function(t,e,n){var r=n(41);e=function(){for(var t=0,e=i.length;t<e;t++){var n=i[t];if("function"!=typeof r[n])return!1}return!0};var i=["afterEach","after","beforeEach","before","describe","it"];t.exports=e},function(t,e,n){(function(r){var i=n(43);e=i?window:r,t.exports=e}).call(this,n(42))},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e){e="object"==typeof window&&"object"==typeof document&&9===document.nodeType,t.exports=e},function(t,e,n){var r=n(15);function i(t,e){return t===e}e=function(t,e){return e=e||i,r(t,(function(t,n,r){for(var i=r.length;++n<i;)if(e(t,r[n]))return!1;return!0}))},t.exports=e},function(t,e,n){var r=n(46),i=n(47);e=function(t){return t=r({},t),function(e){return i(e,t)}},t.exports=e},function(t,e,n){var r=n(4);e=n(22)(r),t.exports=e},function(t,e,n){var r=n(4);e=function(t,e){var n=r(e),i=n.length;if(null==t)return!i;t=Object(t);for(var a=0;a<i;a++){var o=n[a];if(e[o]!==t[o]||!(o in t))return!1}return!0},t.exports=e},function(t,e){e=function(t){return t},t.exports=e},function(t,e,n){var r=n(16),i=n(4),a=n(8);n(12),e=function(t,e,n){e=r(e,n);for(var o=!a(t)&&i(t),s=(o||t).length,u=Array(s),l=0;l<s;l++){var c=o?o[l]:l;u[l]=e(t[c],c,t)}return u},t.exports=e},function(t,e,n){var r=n(51);e=function(t,e){t.prototype=r(e.prototype)},t.exports=e},function(t,e,n){var r=n(2);e=function(t){if(!r(t))return{};if(i)return i(t);function e(){}return e.prototype=t,new e};var i=Object.create;t.exports=e},function(t,e,n){var r=n(5),i=n(53);e=function(t,e){var n;for(n=(e=i(e,t)).shift();!r(n);){if(null==(t=t[n]))return;n=e.shift()}return t},t.exports=e},function(t,e,n){var r=n(10),i=n(13);e=function(t,e){if(i(t))return t;if(e&&r(e,t))return[t];var n=[];return t.replace(a,(function(t,e,r,i){n.push(r?i.replace(o,"$1"):e||t)})),n};var a=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,o=/\\(\\)?/g;t.exports=e},function(t,e,n){var r=n(7);e="undefined"!=typeof wx&&r(wx.openLocation),t.exports=e},function(t,e){e=function(t,e,n){var r=t.length;e=null==e?0:e<0?Math.max(r+e,0):Math.min(e,r),n=null==n?r:n<0?Math.max(r+n,0):Math.min(n,r);for(var i=[];e<n;)i.push(t[e++]);return i},t.exports=e},function(t,e,n){e=n(57)(n(58),2),t.exports=e},function(t,e,n){var r=n(26),i=n(11);e=r((function(t,e){return function(){var n=[];return n=(n=n.concat(e)).concat(i(arguments)),t.apply(this,n)}})),t.exports=e},function(t,e){e=function(t,e){var n;return function(){return--t>0&&(n=e.apply(this,arguments)),t<=1&&(e=null),n}},t.exports=e},function(t,e,n){var r=n(60);e=function(t){if(r(t))return"";try{return i.call(t)}catch(t){}try{return t+""}catch(t){}return""};var i=Function.prototype.toString;t.exports=e},function(t,e){e=function(t){return null==t},t.exports=e},function(t,e,n){var r=n(2),i=n(7);e=function(t){return r(t)&&i(t.then)},t.exports=e},function(t,e,n){var r=n(9),i=n(29);e=function(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(null===t)return e?"null":"Null";if(void 0===t)return e?"undefined":"Undefined";if(i(t))return e?"nan":"NaN";var n=r(t).match(a);return n?e?n[1].toLowerCase():n[1]:""};var a=/^\[object\s+(.*?)]$/;t.exports=e},function(t,e,n){var r=n(3);e=function(t){var e=(t=r(t))[0].getBoundingClientRect();return{left:e.left+window.pageXOffset,top:e.top+window.pageYOffset,width:Math.round(e.width),height:Math.round(e.height)}},t.exports=e},function(t,e,n){var r=n(0),i=n(3);e=function(t){t=i(t),r(t,(function(t){(function(t){return"none"==getComputedStyle(t,"").getPropertyValue("display")})(t)&&(t.style.display=function(t){var e,n;return a[t]||(e=document.createElement(t),document.documentElement.appendChild(e),n=getComputedStyle(e,"").getPropertyValue("display"),e.parentNode.removeChild(e),"none"==n&&(n="block"),a[t]=n),a[t]}(t.nodeName))}))};var a={};t.exports=e},function(t,e,n){var r=n(1),i=n(2),a=n(32),o=n(5),s=n(19),u=n(6),l=n(3),c=n(68),p=n(0);e=function(t,e,n){if(t=l(t),o(n)&&r(e))return function(t,e){return t.style[c(e)]||getComputedStyle(t,"").getPropertyValue(e)}(t[0],e);var f=e;i(f)||((f={})[e]=n),function(t,e){p(t,(function(t){var n=";";p(e,(function(t,e){e=c.dash(e),n+=e+":"+function(t,e){return u(e)&&!s(h,a(t))?e+"px":e}(e,t)+";"})),t.style.cssText+=n}))}(t,f)};var h=["column-count","columns","font-weight","line-weight","opacity","z-index","zoom"];t.exports=e},function(t,e){e=function(t,e,n){return Array.prototype.indexOf.call(t,e,n)},t.exports=e},function(t,e,n){var r=n(0);e=function(t){var e=[];return r(t,(function(t){e.push(t)})),e},t.exports=e},function(t,e,n){var r=n(69),i=n(70),a=n(18),o=n(10),s=n(32);(e=r((function(t){if(t=t.replace(l,""),t=i(t),o(c,t))return t;for(var e=u.length;e--;){var n=u[e]+a(t);if(o(c,n))return n}return t}))).dash=r((function(t){var n=e(t);return(l.test(n)?"-":"")+s(n)}));var u=["O","ms","Moz","Webkit"],l=/^(O)|(ms)|(Moz)|(Webkit)|(-o-)|(-ms-)|(-moz-)|(-webkit-)/g,c=document.createElement("p").style;t.exports=e},function(t,e,n){var r=n(10);e=function(t,e){var n=function(i){var a=n.cache,o=""+(e?e.apply(this,arguments):i);return r(a,o)||(a[o]=t.apply(this,arguments)),a[o]};return n.cache={},n},t.exports=e},function(t,e,n){var r=n(33);function i(t,e){this[e]=t.replace(/\w/,(function(t){return t.toUpperCase()}))}e=function(t){var e=r(t),n=e[0];return e.shift(),e.forEach(i,e),n+e.join("")},t.exports=e},function(t,e,n){var r=n(5),i=n(0),a=n(3);function o(t){return function(e,n){var o=(e=a(e))[0];if(r(n))return o?o[t]:"";o&&i(e,(function(e){e[t]=n}))}}e={html:o("innerHTML"),text:o("textContent"),val:o("value")},t.exports=e},function(t,e){e=function(t){var e=t?t.length:0;if(e)return t[e-1]},t.exports=e},function(t,e,n){var r=n(0),i=n(3);e=function(t){t=i(t),r(t,(function(t){var e=t.parentNode;e&&e.removeChild(t)}))},t.exports=e},function(t,e,n){var r=n(34),i=n(1),a=n(2),o=n(0);n(3),e=function(t,e,n){var s=e;return i(e)&&(s="data-"+e),a(e)&&(s={},o(e,(function(t,e){s["data-"+e]=t}))),r(t,s,n)},t.exports=e},function(t,e,n){var r=n(76),i=n(5),a=n(3),o=n(0);function s(t){return function(e,n,s,u){e=a(e),i(u)&&(u=s,s=void 0),o(e,(function(e){r[t](e,n,s,u)}))}}e={on:s("add"),off:s("remove")},t.exports=e},function(t,e,n){var r=n(14),i=n(19);function a(){return!0}function o(){return!1}function s(t){var n,r=this.events[t.type],i=u.call(this,t,r);t=new e.Event(t);for(var a,o,s=0;(o=i[s++])&&!t.isPropagationStopped();)for(t.curTarget=o.el,a=0;(n=o.handlers[a++])&&!t.isImmediatePropagationStopped();)!1===n.handler.apply(o.el,[t])&&(t.preventDefault(),t.stopPropagation())}function u(t,e){var n,r,a,o,s=t.target,u=[],l=e.delegateCount;if(s.nodeType)for(;s!==this;s=s.parentNode||this){for(r=[],o=0;o<l;o++)void 0===r[n=(a=e[o]).selector+" "]&&(r[n]=i(this.querySelectorAll(n),s)),r[n]&&r.push(a);r.length&&u.push({el:s,handlers:r})}return l<e.length&&u.push({el:this,handlers:e.slice(l)}),u}e={add:function(t,e,n,r){var i,a={selector:n,handler:r};t.events||(t.events={}),(i=t.events[e])||((i=t.events[e]=[]).delegateCount=0,t.addEventListener(e,(function(){s.apply(t,arguments)}),!1)),n?i.splice(i.delegateCount++,0,a):i.push(a)},remove:function(t,e,n,r){var i=t.events;if(i&&i[e])for(var a,o=i[e],s=o.length;s--;)a=o[s],n&&a.selector!=n||a.handler!=r||(o.splice(s,1),a.selector&&o.delegateCount--)},Event:r({className:"Event",initialize:function(t){this.origEvent=t},isDefaultPrevented:o,isPropagationStopped:o,isImmediatePropagationStopped:o,preventDefault:function(){var t=this.origEvent;this.isDefaultPrevented=a,t&&t.preventDefault&&t.preventDefault()},stopPropagation:function(){var t=this.origEvent;this.isPropagationStopped=a,t&&t.stopPropagation&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.origEvent;this.isImmediatePropagationStopped=a,t&&t.stopImmediatePropagation&&t.stopImmediatePropagation(),this.stopPropagation()}})},t.exports=e},function(t,e,n){var r=n(11),i=n(78),a=n(3),o=n(1),s=n(0);function u(t){return o(t)?t.split(/\s+/):r(t)}e={add:function(t,n){t=a(t);var r=u(n);s(t,(function(t){var n=[];s(r,(function(r){e.has(t,r)||n.push(r)})),0!==n.length&&(t.className+=(t.className?" ":"")+n.join(" "))}))},has:function(t,e){t=a(t);var n=new RegExp("(^|\\s)"+e+"(\\s|$)");return i(t,(function(t){return n.test(t.className)}))},toggle:function(t,n){t=a(t),s(t,(function(t){if(!e.has(t,n))return e.add(t,n);e.remove(t,n)}))},remove:function(t,e){t=a(t);var n=u(e);s(t,(function(t){s(n,(function(e){t.classList.remove(e)}))}))}},t.exports=e},function(t,e,n){var r=n(16),i=n(8),a=n(4);n(12),e=function(t,e,n){e=r(e,n);for(var o=!i(t)&&a(t),s=(o||t).length,u=0;u<s;u++){var l=o?o[u]:u;if(e(t[l],l,t))return!0}return!1},t.exports=e},function(t,e,n){var r=n(0),i=n(3);function a(t){return function(e,n){e=i(e),r(e,(function(e){e.insertAdjacentHTML(t,n)}))}}e={before:a("beforebegin"),after:a("afterend"),append:a("beforeend"),prepend:a("afterbegin")},t.exports=e},function(t,e,n){var r=n(26),i=n(81),a=n(15),o=n(19);e=r((function(t,e){return e=i(e),a(t,(function(t){return!o(e,t)}))})),t.exports=e},function(t,e,n){var r=n(13);e=function(t){return function t(e,n){for(var i,a=e.length,o=-1;a--;)i=e[++o],r(i)?t(i,n):n.push(i);return n}(t,[])},t.exports=e},function(t,e){e=function(){},t.exports=e},function(t,e,n){"use strict";var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var i=r(n(21)),a=function(){function t(){this.id=0,this.visited=[]}return t.prototype.set=function(t,e){var n=this.visited,r=this.id,a={id:r,val:t};return i.default(a,e),n.push(a),this.id++,r},t.prototype.get=function(t){for(var e=this.visited,n=0,r=e.length;n<r;n++){var i=e[n];if(t===i.val)return i}return!1},t}();e.default=a},function(t,e,n){var r=n(85),i=n(86),a=/^\s+|\s+$/g;e=function(t,e){return null==e?t.replace(a,""):r(i(t,e),e)},t.exports=e},function(t,e){var n=/^\s+/;e=function(t,e){if(null==e)return t.replace(n,"");for(var r,i,a=0,o=t.length,s=e.length,u=!0;u&&a<o;)for(u=!1,r=-1,i=t.charAt(a);++r<s;)if(i===e[r]){u=!0,a++;break}return a>=o?"":t.substr(a,o)},t.exports=e},function(t,e){var n=/\s+$/;e=function(t,e){if(null==e)return t.replace(n,"");for(var r,i,a=t.length-1,o=e.length,s=!0;s&&a>=0;)for(s=!1,r=-1,i=t.charAt(a);++r<o;)if(i===e[r]){s=!0,a--;break}return a>=0?t.substring(0,a+1):""},t.exports=e},function(t,e,n){var r=n(4),i=(e=function(t){return o.test(t)?t.replace(s,u):t}).map={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},a="(?:"+r(i).join("|")+")",o=new RegExp(a),s=new RegExp(a,"g"),u=function(t){return i[t]};t.exports=e},function(t,e,n){"use strict";var r,i=this&&this.__extends||(r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),a=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var o=a(n(30)),s=a(n(38)),u=a(n(2)),l=a(n(89)),c=a(n(18)),p=a(n(37)),h=a(n(35)),f=a(n(0)),d=a(n(29)),_=a(n(6)),v=a(n(27)),m=a(n(1)),g=a(n(4)),b=a(n(28)),y=a(n(20)),w=n(36),x="luna-object-viewer-",k=function(t){function e(e){var n=t.call(this)||this;return n.$container=o.default(e),n.$container.addClass("luna-object-viewer"),n.bindEvent(),n}return i(e,t),e.prototype.set=function(t){m.default(t)&&(t=JSON.parse(t)),this.data={id:l.default("json"),enumerable:{0:t}},this.map={},function t(e,n){var r=n.id;if(r||0===r){if(n.type&&s.default(n.type,"Array")&&n.enumerable){var i=function(t,e,n){var r=[],i={};return f.default(t.enumerable,(function(t,e){var n=p.default(e);d.default(n)?i[e]=t:r[n]=t})),r.enumerable=i,r.type=n,r.id=e,t.unenumerable&&(r.unenumerable=t.unenumerable),t.symbol&&(r.symbol=t.symbol),t.proto&&(r.proto=t.proto),r}(n,r,n.type);i.length>100&&(n=function(t){var e=0,n={};f.default(h.default(t,100),(function(t){var r={},i=e;r.type="["+i,r.enumerable={},f.default(t,(function(t){r.enumerable[e]=t,e+=1}));var a=e-1;r.type+=(a-i>0?" … "+a:"")+"]",r.id=l.default("json"),r.jsonSplitArr=!0,n[e]=r}));var r={};return r.enumerable=n,r.id=t.id,r.type=t.type,t.unenumerable&&(r.unenumerable=t.unenumerable),t.symbol&&(r.symbol=t.symbol),t.proto&&(r.proto=t.proto),r}(i))}e[r]=n;var a=[];f.default(["enumerable","unenumerable","symbol"],(function(t){if(n[t])for(var e in n[t])a.push(n[t][e])})),n.proto&&a.push(n.proto);for(var o=0,c=a.length;o<c;o++){var _=a[o];u.default(_)&&t(e,_)}}}(this.map,this.data),this.appendTpl()},e.prototype.objToHtml=function(t,e){var n=this,r="";return f.default(["enumerable","unenumerable","symbol"],(function(i){if(t[i]){var a=g.default(t[i]);a.sort(w.sortObjName);for(var o=0,s=a.length;o<s;o++){var u=a[o];r+=n.createEl(u,t[i][u],i,e)}}})),t.proto&&(""===r?r=this.objToHtml(t.proto):r+=this.createEl("__proto__",t.proto,"proto")),r},e.prototype.createEl=function(t,e,n,r){void 0===r&&(r=!1);var i=typeof e;if(null===e)return"<li>"+p(t)+'<span class="'+x+'null">null</span></li>';if(_.default(e)||v.default(e))return"<li>"+p(t)+'<span class="'+(x+i)+'">'+w.encode(e)+"</span></li>";if("RegExp"===e.type&&(i="regexp"),"Number"===e.type&&(i="number"),"Number"===e.type||"RegExp"===e.type)return"<li>"+p(t)+'<span class="'+(x+i)+'">'+w.encode(e.value)+"</span></li>";if("Undefined"===e.type||"Symbol"===e.type)return"<li>"+p(t)+'<span class="'+x+'special">'+b.default(e.type)+"</span></li>";if("(...)"===e)return"<li>"+p(t)+'<span class="'+x+'special">'+e+"</span></li>";if(u.default(e)){var a=e.id,o=e.reference,s=$(e)||c.default(i),l="<li "+(r?'data-first-level="true"':"")+' data-object-id="'+(o||a)+'"><span class="'+(r?"":x+"expanded "+x+"collapsed")+'"></span>'+p(t)+'<span class="'+x+'open">'+(r?"":s)+'</span><ul class="'+(x+i)+'" '+(r?"":'style="display:none"')+">";return r&&(l+=this.objToHtml(this.map[a])),l+'</ul><span class="'+x+'close"></span></li>'}function p(t){if(r)return"";if(u.default(e)&&e.jsonSplitArr)return"";var i=x+"key";return"unenumerable"!==n&&"proto"!==n&&"symbol"!==n||(i=x+"key-lighter"),'<span class="'+i+'">'+w.encode(t)+"</span>: "}return"<li>"+p(t)+'<span class="'+x+typeof e+'">"'+w.encode(e)+'"</span></li>'},e.prototype.appendTpl=function(){var t=this.map[this.data.id];this.$container.html(this.objToHtml(t,!0))},e.prototype.bindEvent=function(){var t=this;this.$container.on("click","li",(function(e){var n=t.map,r=o.default(this),i=r.data("object-id"),a=o.default(this).find("span").eq(0);if(!r.data("first-level")&&(i&&(r.find("ul").html(t.objToHtml(n[i],!1)),r.rmAttr("data-object-id")),e.stopImmediatePropagation(),a.hasClass(x+"expanded"))){var s=r.find("ul").eq(0);a.hasClass(x+"collapsed")?(a.rmClass(x+"collapsed"),s.show()):(a.addClass(x+"collapsed"),s.hide()),t.emit("change")}}))},e}(y.default);function $(t){var e=t.type,n=t.value;if(e)return"Function"===e?w.getFnAbstract(n):"Array"===e&&t.unenumerable?"Array("+t.unenumerable.length+")":t.type}e.default=k,e.getObjAbstract=$},function(t,e){var n=0;e=function(t){var e=++n+"";return t?t+e:e},t.exports=e},function(t,e,n){}])},function(t,e,n){var r,i;i=function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";var r=n(1).Beautifier,i=n(5).Options;t.exports=function(t,e){return new r(t,e).beautify()},t.exports.defaultOptions=function(){return new i}},function(t,e,n){"use strict";var r=n(2).Output,i=n(3).Token,a=n(4),o=n(5).Options,s=n(7).Tokenizer,u=n(7).line_starters,l=n(7).positionable_operators,c=n(7).TOKEN;function p(t,e){return-1!==e.indexOf(t)}function h(t,e){return t&&t.type===c.RESERVED&&t.text===e}function f(t,e){return t&&t.type===c.RESERVED&&p(t.text,e)}var d=["case","return","do","if","throw","else","await","break","continue","async"],_=function(t){for(var e={},n=0;n<t.length;n++)e[t[n].replace(/-/g,"_")]=t[n];return e}(["before-newline","after-newline","preserve-newline"]),v=[_.before_newline,_.preserve_newline],m="BlockStatement",g="Statement",b="ObjectLiteral",y="ArrayLiteral",w="ForInitializer",x="Conditional",k="Expression";function $(t,e){e.multiline_frame||e.mode===w||e.mode===x||t.remove_indent(e.start_line_index)}function O(t){return t===y}function E(t){return p(t,[k,w,x])}function A(t,e){e=e||{},this._source_text=t||"",this._output=null,this._tokens=null,this._last_last_text=null,this._flags=null,this._previous_flags=null,this._flag_store=null,this._options=new o(e)}A.prototype.create_flags=function(t,e){var n=0;return t&&(n=t.indentation_level,!this._output.just_added_newline()&&t.line_indent_level>n&&(n=t.line_indent_level)),{mode:e,parent:t,last_token:t?t.last_token:new i(c.START_BLOCK,""),last_word:t?t.last_word:"",declaration_statement:!1,declaration_assignment:!1,multiline_frame:!1,inline_frame:!1,if_block:!1,else_block:!1,do_block:!1,do_while:!1,import_block:!1,in_case_statement:!1,in_case:!1,case_body:!1,indentation_level:n,alignment:0,line_indent_level:t?t.line_indent_level:n,start_line_index:this._output.get_line_number(),ternary_depth:0}},A.prototype._reset=function(t){var e=t.match(/^[\t ]*/)[0];this._last_last_text="",this._output=new r(this._options,e),this._output.raw=this._options.test_output_raw,this._flag_store=[],this.set_mode(m);var n=new s(t,this._options);return this._tokens=n.tokenize(),t},A.prototype.beautify=function(){if(this._options.disabled)return this._source_text;var t=this._reset(this._source_text),e=this._options.eol;"auto"===this._options.eol&&(e="\n",t&&a.lineBreak.test(t||"")&&(e=t.match(a.lineBreak)[0]));for(var n=this._tokens.next();n;)this.handle_token(n),this._last_last_text=this._flags.last_token.text,this._flags.last_token=n,n=this._tokens.next();return this._output.get_code(e)},A.prototype.handle_token=function(t,e){t.type===c.START_EXPR?this.handle_start_expr(t):t.type===c.END_EXPR?this.handle_end_expr(t):t.type===c.START_BLOCK?this.handle_start_block(t):t.type===c.END_BLOCK?this.handle_end_block(t):t.type===c.WORD||t.type===c.RESERVED?this.handle_word(t):t.type===c.SEMICOLON?this.handle_semicolon(t):t.type===c.STRING?this.handle_string(t):t.type===c.EQUALS?this.handle_equals(t):t.type===c.OPERATOR?this.handle_operator(t):t.type===c.COMMA?this.handle_comma(t):t.type===c.BLOCK_COMMENT?this.handle_block_comment(t,e):t.type===c.COMMENT?this.handle_comment(t,e):t.type===c.DOT?this.handle_dot(t):t.type===c.EOF?this.handle_eof(t):(t.type,c.UNKNOWN,this.handle_unknown(t,e))},A.prototype.handle_whitespace_and_comments=function(t,e){var n=t.newlines,r=this._options.keep_array_indentation&&O(this._flags.mode);if(t.comments_before)for(var i=t.comments_before.next();i;)this.handle_whitespace_and_comments(i,e),this.handle_token(i,e),i=t.comments_before.next();if(r)for(var a=0;a<n;a+=1)this.print_newline(a>0,e);else if(this._options.max_preserve_newlines&&n>this._options.max_preserve_newlines&&(n=this._options.max_preserve_newlines),this._options.preserve_newlines&&n>1){this.print_newline(!1,e);for(var o=1;o<n;o+=1)this.print_newline(!0,e)}};var C=["async","break","continue","return","throw","yield"];A.prototype.allow_wrap_or_preserved_newline=function(t,e){if(e=void 0!==e&&e,!this._output.just_added_newline()){var n=this._options.preserve_newlines&&t.newlines||e;if(p(this._flags.last_token.text,l)||p(t.text,l)){var r=p(this._flags.last_token.text,l)&&p(this._options.operator_position,v)||p(t.text,l);n=n&&r}if(n)this.print_newline(!1,!0);else if(this._options.wrap_line_length){if(f(this._flags.last_token,C))return;this._output.set_wrap_point()}}},A.prototype.print_newline=function(t,e){if(!e&&";"!==this._flags.last_token.text&&","!==this._flags.last_token.text&&"="!==this._flags.last_token.text&&(this._flags.last_token.type!==c.OPERATOR||"--"===this._flags.last_token.text||"++"===this._flags.last_token.text))for(var n=this._tokens.peek();!(this._flags.mode!==g||this._flags.if_block&&h(n,"else")||this._flags.do_block);)this.restore_mode();this._output.add_new_line(t)&&(this._flags.multiline_frame=!0)},A.prototype.print_token_line_indentation=function(t){this._output.just_added_newline()&&(this._options.keep_array_indentation&&t.newlines&&("["===t.text||O(this._flags.mode))?(this._output.current_line.set_indent(-1),this._output.current_line.push(t.whitespace_before),this._output.space_before_token=!1):this._output.set_indent(this._flags.indentation_level,this._flags.alignment)&&(this._flags.line_indent_level=this._flags.indentation_level))},A.prototype.print_token=function(t){if(this._output.raw)this._output.add_raw_token(t);else{if(this._options.comma_first&&t.previous&&t.previous.type===c.COMMA&&this._output.just_added_newline()&&","===this._output.previous_line.last()){var e=this._output.previous_line.pop();this._output.previous_line.is_empty()&&(this._output.previous_line.push(e),this._output.trim(!0),this._output.current_line.pop(),this._output.trim()),this.print_token_line_indentation(t),this._output.add_token(","),this._output.space_before_token=!0}this.print_token_line_indentation(t),this._output.non_breaking_space=!0,this._output.add_token(t.text),this._output.previous_token_wrapped&&(this._flags.multiline_frame=!0)}},A.prototype.indent=function(){this._flags.indentation_level+=1,this._output.set_indent(this._flags.indentation_level,this._flags.alignment)},A.prototype.deindent=function(){this._flags.indentation_level>0&&(!this._flags.parent||this._flags.indentation_level>this._flags.parent.indentation_level)&&(this._flags.indentation_level-=1,this._output.set_indent(this._flags.indentation_level,this._flags.alignment))},A.prototype.set_mode=function(t){this._flags?(this._flag_store.push(this._flags),this._previous_flags=this._flags):this._previous_flags=this.create_flags(null,t),this._flags=this.create_flags(this._previous_flags,t),this._output.set_indent(this._flags.indentation_level,this._flags.alignment)},A.prototype.restore_mode=function(){this._flag_store.length>0&&(this._previous_flags=this._flags,this._flags=this._flag_store.pop(),this._previous_flags.mode===g&&$(this._output,this._previous_flags),this._output.set_indent(this._flags.indentation_level,this._flags.alignment))},A.prototype.start_of_object_property=function(){return this._flags.parent.mode===b&&this._flags.mode===g&&(":"===this._flags.last_token.text&&0===this._flags.ternary_depth||f(this._flags.last_token,["get","set"]))},A.prototype.start_of_statement=function(t){var e=!1;return!!(e=(e=(e=(e=(e=(e=(e=e||f(this._flags.last_token,["var","let","const"])&&t.type===c.WORD)||h(this._flags.last_token,"do"))||!(this._flags.parent.mode===b&&this._flags.mode===g)&&f(this._flags.last_token,C)&&!t.newlines)||h(this._flags.last_token,"else")&&!(h(t,"if")&&!t.comments_before))||this._flags.last_token.type===c.END_EXPR&&(this._previous_flags.mode===w||this._previous_flags.mode===x))||this._flags.last_token.type===c.WORD&&this._flags.mode===m&&!this._flags.in_case&&!("--"===t.text||"++"===t.text)&&"function"!==this._last_last_text&&t.type!==c.WORD&&t.type!==c.RESERVED)||this._flags.mode===b&&(":"===this._flags.last_token.text&&0===this._flags.ternary_depth||f(this._flags.last_token,["get","set"])))&&(this.set_mode(g),this.indent(),this.handle_whitespace_and_comments(t,!0),this.start_of_object_property()||this.allow_wrap_or_preserved_newline(t,f(t,["do","for","if","while"])),!0)},A.prototype.handle_start_expr=function(t){this.start_of_statement(t)||this.handle_whitespace_and_comments(t);var e=k;if("["===t.text){if(this._flags.last_token.type===c.WORD||")"===this._flags.last_token.text)return f(this._flags.last_token,u)&&(this._output.space_before_token=!0),this.print_token(t),this.set_mode(e),this.indent(),void(this._options.space_in_paren&&(this._output.space_before_token=!0));e=y,O(this._flags.mode)&&("["!==this._flags.last_token.text&&(","!==this._flags.last_token.text||"]"!==this._last_last_text&&"}"!==this._last_last_text)||this._options.keep_array_indentation||this.print_newline()),p(this._flags.last_token.type,[c.START_EXPR,c.END_EXPR,c.WORD,c.OPERATOR])||(this._output.space_before_token=!0)}else{if(this._flags.last_token.type===c.RESERVED)"for"===this._flags.last_token.text?(this._output.space_before_token=this._options.space_before_conditional,e=w):p(this._flags.last_token.text,["if","while"])?(this._output.space_before_token=this._options.space_before_conditional,e=x):p(this._flags.last_word,["await","async"])?this._output.space_before_token=!0:"import"===this._flags.last_token.text&&""===t.whitespace_before?this._output.space_before_token=!1:(p(this._flags.last_token.text,u)||"catch"===this._flags.last_token.text)&&(this._output.space_before_token=!0);else if(this._flags.last_token.type===c.EQUALS||this._flags.last_token.type===c.OPERATOR)this.start_of_object_property()||this.allow_wrap_or_preserved_newline(t);else if(this._flags.last_token.type===c.WORD){this._output.space_before_token=!1;var n=this._tokens.peek(-3);if(this._options.space_after_named_function&&n){var r=this._tokens.peek(-4);f(n,["async","function"])||"*"===n.text&&f(r,["async","function"])?this._output.space_before_token=!0:this._flags.mode===b&&("{"!==n.text&&","!==n.text&&("*"!==n.text||"{"!==r.text&&","!==r.text)||(this._output.space_before_token=!0))}}else this.allow_wrap_or_preserved_newline(t);(this._flags.last_token.type===c.RESERVED&&("function"===this._flags.last_word||"typeof"===this._flags.last_word)||"*"===this._flags.last_token.text&&(p(this._last_last_text,["function","yield"])||this._flags.mode===b&&p(this._last_last_text,["{",","])))&&(this._output.space_before_token=this._options.space_after_anon_function)}";"===this._flags.last_token.text||this._flags.last_token.type===c.START_BLOCK?this.print_newline():this._flags.last_token.type!==c.END_EXPR&&this._flags.last_token.type!==c.START_EXPR&&this._flags.last_token.type!==c.END_BLOCK&&"."!==this._flags.last_token.text&&this._flags.last_token.type!==c.COMMA||this.allow_wrap_or_preserved_newline(t,t.newlines),this.print_token(t),this.set_mode(e),this._options.space_in_paren&&(this._output.space_before_token=!0),this.indent()},A.prototype.handle_end_expr=function(t){for(;this._flags.mode===g;)this.restore_mode();this.handle_whitespace_and_comments(t),this._flags.multiline_frame&&this.allow_wrap_or_preserved_newline(t,"]"===t.text&&O(this._flags.mode)&&!this._options.keep_array_indentation),this._options.space_in_paren&&(this._flags.last_token.type!==c.START_EXPR||this._options.space_in_empty_paren?this._output.space_before_token=!0:(this._output.trim(),this._output.space_before_token=!1)),this.deindent(),this.print_token(t),this.restore_mode(),$(this._output,this._previous_flags),this._flags.do_while&&this._previous_flags.mode===x&&(this._previous_flags.mode=k,this._flags.do_block=!1,this._flags.do_while=!1)},A.prototype.handle_start_block=function(t){this.handle_whitespace_and_comments(t);var e=this._tokens.peek(),n=this._tokens.peek(1);"switch"===this._flags.last_word&&this._flags.last_token.type===c.END_EXPR?(this.set_mode(m),this._flags.in_case_statement=!0):this._flags.case_body?this.set_mode(m):n&&(p(n.text,[":",","])&&p(e.type,[c.STRING,c.WORD,c.RESERVED])||p(e.text,["get","set","..."])&&p(n.type,[c.WORD,c.RESERVED]))?p(this._last_last_text,["class","interface"])?this.set_mode(m):this.set_mode(b):this._flags.last_token.type===c.OPERATOR&&"=>"===this._flags.last_token.text?this.set_mode(m):p(this._flags.last_token.type,[c.EQUALS,c.START_EXPR,c.COMMA,c.OPERATOR])||f(this._flags.last_token,["return","throw","import","default"])?this.set_mode(b):this.set_mode(m);var r=!e.comments_before&&"}"===e.text,i=r&&"function"===this._flags.last_word&&this._flags.last_token.type===c.END_EXPR;if(this._options.brace_preserve_inline){var a=0,o=null;this._flags.inline_frame=!0;do{if(a+=1,(o=this._tokens.peek(a-1)).newlines){this._flags.inline_frame=!1;break}}while(o.type!==c.EOF&&(o.type!==c.END_BLOCK||o.opened!==t))}("expand"===this._options.brace_style||"none"===this._options.brace_style&&t.newlines)&&!this._flags.inline_frame?this._flags.last_token.type!==c.OPERATOR&&(i||this._flags.last_token.type===c.EQUALS||f(this._flags.last_token,d)&&"else"!==this._flags.last_token.text)?this._output.space_before_token=!0:this.print_newline(!1,!0):(!O(this._previous_flags.mode)||this._flags.last_token.type!==c.START_EXPR&&this._flags.last_token.type!==c.COMMA||((this._flags.last_token.type===c.COMMA||this._options.space_in_paren)&&(this._output.space_before_token=!0),(this._flags.last_token.type===c.COMMA||this._flags.last_token.type===c.START_EXPR&&this._flags.inline_frame)&&(this.allow_wrap_or_preserved_newline(t),this._previous_flags.multiline_frame=this._previous_flags.multiline_frame||this._flags.multiline_frame,this._flags.multiline_frame=!1)),this._flags.last_token.type!==c.OPERATOR&&this._flags.last_token.type!==c.START_EXPR&&(this._flags.last_token.type!==c.START_BLOCK||this._flags.inline_frame?this._output.space_before_token=!0:this.print_newline())),this.print_token(t),this.indent(),r||this._options.brace_preserve_inline&&this._flags.inline_frame||this.print_newline()},A.prototype.handle_end_block=function(t){for(this.handle_whitespace_and_comments(t);this._flags.mode===g;)this.restore_mode();var e=this._flags.last_token.type===c.START_BLOCK;this._flags.inline_frame&&!e?this._output.space_before_token=!0:"expand"===this._options.brace_style?e||this.print_newline():e||(O(this._flags.mode)&&this._options.keep_array_indentation?(this._options.keep_array_indentation=!1,this.print_newline(),this._options.keep_array_indentation=!0):this.print_newline()),this.restore_mode(),this.print_token(t)},A.prototype.handle_word=function(t){if(t.type===c.RESERVED&&(p(t.text,["set","get"])&&this._flags.mode!==b||"import"===t.text&&"("===this._tokens.peek().text||p(t.text,["as","from"])&&!this._flags.import_block||this._flags.mode===b&&":"===this._tokens.peek().text)&&(t.type=c.WORD),this.start_of_statement(t)?f(this._flags.last_token,["var","let","const"])&&t.type===c.WORD&&(this._flags.declaration_statement=!0):!t.newlines||E(this._flags.mode)||this._flags.last_token.type===c.OPERATOR&&"--"!==this._flags.last_token.text&&"++"!==this._flags.last_token.text||this._flags.last_token.type===c.EQUALS||!this._options.preserve_newlines&&f(this._flags.last_token,["var","let","const","set","get"])?this.handle_whitespace_and_comments(t):(this.handle_whitespace_and_comments(t),this.print_newline()),this._flags.do_block&&!this._flags.do_while){if(h(t,"while"))return this._output.space_before_token=!0,this.print_token(t),this._output.space_before_token=!0,void(this._flags.do_while=!0);this.print_newline(),this._flags.do_block=!1}if(this._flags.if_block)if(!this._flags.else_block&&h(t,"else"))this._flags.else_block=!0;else{for(;this._flags.mode===g;)this.restore_mode();this._flags.if_block=!1,this._flags.else_block=!1}if(this._flags.in_case_statement&&f(t,["case","default"]))return this.print_newline(),this._flags.last_token.type!==c.END_BLOCK&&(this._flags.case_body||this._options.jslint_happy)&&this.deindent(),this._flags.case_body=!1,this.print_token(t),void(this._flags.in_case=!0);if(this._flags.last_token.type!==c.COMMA&&this._flags.last_token.type!==c.START_EXPR&&this._flags.last_token.type!==c.EQUALS&&this._flags.last_token.type!==c.OPERATOR||this.start_of_object_property()||this.allow_wrap_or_preserved_newline(t),h(t,"function"))return(p(this._flags.last_token.text,["}",";"])||this._output.just_added_newline()&&!p(this._flags.last_token.text,["(","[","{",":","=",","])&&this._flags.last_token.type!==c.OPERATOR)&&(this._output.just_added_blankline()||t.comments_before||(this.print_newline(),this.print_newline(!0))),this._flags.last_token.type===c.RESERVED||this._flags.last_token.type===c.WORD?f(this._flags.last_token,["get","set","new","export"])||f(this._flags.last_token,C)||h(this._flags.last_token,"default")&&"export"===this._last_last_text||"declare"===this._flags.last_token.text?this._output.space_before_token=!0:this.print_newline():this._flags.last_token.type===c.OPERATOR||"="===this._flags.last_token.text?this._output.space_before_token=!0:(this._flags.multiline_frame||!E(this._flags.mode)&&!O(this._flags.mode))&&this.print_newline(),this.print_token(t),void(this._flags.last_word=t.text);var e="NONE";this._flags.last_token.type===c.END_BLOCK?this._previous_flags.inline_frame?e="SPACE":f(t,["else","catch","finally","from"])?"expand"===this._options.brace_style||"end-expand"===this._options.brace_style||"none"===this._options.brace_style&&t.newlines?e="NEWLINE":(e="SPACE",this._output.space_before_token=!0):e="NEWLINE":this._flags.last_token.type===c.SEMICOLON&&this._flags.mode===m?e="NEWLINE":this._flags.last_token.type===c.SEMICOLON&&E(this._flags.mode)?e="SPACE":this._flags.last_token.type===c.STRING?e="NEWLINE":this._flags.last_token.type===c.RESERVED||this._flags.last_token.type===c.WORD||"*"===this._flags.last_token.text&&(p(this._last_last_text,["function","yield"])||this._flags.mode===b&&p(this._last_last_text,["{",","]))?e="SPACE":this._flags.last_token.type===c.START_BLOCK?e=this._flags.inline_frame?"SPACE":"NEWLINE":this._flags.last_token.type===c.END_EXPR&&(this._output.space_before_token=!0,e="NEWLINE"),f(t,u)&&")"!==this._flags.last_token.text&&(e=this._flags.inline_frame||"else"===this._flags.last_token.text||"export"===this._flags.last_token.text?"SPACE":"NEWLINE"),f(t,["else","catch","finally"])?(this._flags.last_token.type!==c.END_BLOCK||this._previous_flags.mode!==m||"expand"===this._options.brace_style||"end-expand"===this._options.brace_style||"none"===this._options.brace_style&&t.newlines)&&!this._flags.inline_frame?this.print_newline():(this._output.trim(!0),"}"!==this._output.current_line.last()&&this.print_newline(),this._output.space_before_token=!0):"NEWLINE"===e?f(this._flags.last_token,d)||"declare"===this._flags.last_token.text&&f(t,["var","let","const"])?this._output.space_before_token=!0:this._flags.last_token.type!==c.END_EXPR?this._flags.last_token.type===c.START_EXPR&&f(t,["var","let","const"])||":"===this._flags.last_token.text||(h(t,"if")&&h(t.previous,"else")?this._output.space_before_token=!0:this.print_newline()):f(t,u)&&")"!==this._flags.last_token.text&&this.print_newline():this._flags.multiline_frame&&O(this._flags.mode)&&","===this._flags.last_token.text&&"}"===this._last_last_text?this.print_newline():"SPACE"===e&&(this._output.space_before_token=!0),!t.previous||t.previous.type!==c.WORD&&t.previous.type!==c.RESERVED||(this._output.space_before_token=!0),this.print_token(t),this._flags.last_word=t.text,t.type===c.RESERVED&&("do"===t.text?this._flags.do_block=!0:"if"===t.text?this._flags.if_block=!0:"import"===t.text?this._flags.import_block=!0:this._flags.import_block&&h(t,"from")&&(this._flags.import_block=!1))},A.prototype.handle_semicolon=function(t){this.start_of_statement(t)?this._output.space_before_token=!1:this.handle_whitespace_and_comments(t);for(var e=this._tokens.peek();!(this._flags.mode!==g||this._flags.if_block&&h(e,"else")||this._flags.do_block);)this.restore_mode();this._flags.import_block&&(this._flags.import_block=!1),this.print_token(t)},A.prototype.handle_string=function(t){this.start_of_statement(t)?this._output.space_before_token=!0:(this.handle_whitespace_and_comments(t),this._flags.last_token.type===c.RESERVED||this._flags.last_token.type===c.WORD||this._flags.inline_frame?this._output.space_before_token=!0:this._flags.last_token.type===c.COMMA||this._flags.last_token.type===c.START_EXPR||this._flags.last_token.type===c.EQUALS||this._flags.last_token.type===c.OPERATOR?this.start_of_object_property()||this.allow_wrap_or_preserved_newline(t):this.print_newline()),this.print_token(t)},A.prototype.handle_equals=function(t){this.start_of_statement(t)||this.handle_whitespace_and_comments(t),this._flags.declaration_statement&&(this._flags.declaration_assignment=!0),this._output.space_before_token=!0,this.print_token(t),this._output.space_before_token=!0},A.prototype.handle_comma=function(t){this.handle_whitespace_and_comments(t,!0),this.print_token(t),this._output.space_before_token=!0,this._flags.declaration_statement?(E(this._flags.parent.mode)&&(this._flags.declaration_assignment=!1),this._flags.declaration_assignment?(this._flags.declaration_assignment=!1,this.print_newline(!1,!0)):this._options.comma_first&&this.allow_wrap_or_preserved_newline(t)):this._flags.mode===b||this._flags.mode===g&&this._flags.parent.mode===b?(this._flags.mode===g&&this.restore_mode(),this._flags.inline_frame||this.print_newline()):this._options.comma_first&&this.allow_wrap_or_preserved_newline(t)},A.prototype.handle_operator=function(t){var e="*"===t.text&&(f(this._flags.last_token,["function","yield"])||p(this._flags.last_token.type,[c.START_BLOCK,c.COMMA,c.END_BLOCK,c.SEMICOLON])),n=p(t.text,["-","+"])&&(p(this._flags.last_token.type,[c.START_BLOCK,c.START_EXPR,c.EQUALS,c.OPERATOR])||p(this._flags.last_token.text,u)||","===this._flags.last_token.text);if(this.start_of_statement(t));else{var r=!e;this.handle_whitespace_and_comments(t,r)}if(f(this._flags.last_token,d))return this._output.space_before_token=!0,void this.print_token(t);if("*"!==t.text||this._flags.last_token.type!==c.DOT)if("::"!==t.text){if(this._flags.last_token.type===c.OPERATOR&&p(this._options.operator_position,v)&&this.allow_wrap_or_preserved_newline(t),":"===t.text&&this._flags.in_case)return this.print_token(t),this._flags.in_case=!1,this._flags.case_body=!0,void(this._tokens.peek().type!==c.START_BLOCK?(this.indent(),this.print_newline()):this._output.space_before_token=!0);var i=!0,a=!0,o=!1;if(":"===t.text?0===this._flags.ternary_depth?i=!1:(this._flags.ternary_depth-=1,o=!0):"?"===t.text&&(this._flags.ternary_depth+=1),!n&&!e&&this._options.preserve_newlines&&p(t.text,l)){var s=":"===t.text,h=s&&o,b=s&&!o;switch(this._options.operator_position){case _.before_newline:return this._output.space_before_token=!b,this.print_token(t),s&&!h||this.allow_wrap_or_preserved_newline(t),void(this._output.space_before_token=!0);case _.after_newline:return this._output.space_before_token=!0,!s||h?this._tokens.peek().newlines?this.print_newline(!1,!0):this.allow_wrap_or_preserved_newline(t):this._output.space_before_token=!1,this.print_token(t),void(this._output.space_before_token=!0);case _.preserve_newline:return b||this.allow_wrap_or_preserved_newline(t),i=!(this._output.just_added_newline()||b),this._output.space_before_token=i,this.print_token(t),void(this._output.space_before_token=!0)}}if(e){this.allow_wrap_or_preserved_newline(t),i=!1;var y=this._tokens.peek();a=y&&p(y.type,[c.WORD,c.RESERVED])}else"..."===t.text?(this.allow_wrap_or_preserved_newline(t),i=this._flags.last_token.type===c.START_BLOCK,a=!1):(p(t.text,["--","++","!","~"])||n)&&(this._flags.last_token.type!==c.COMMA&&this._flags.last_token.type!==c.START_EXPR||this.allow_wrap_or_preserved_newline(t),i=!1,a=!1,!t.newlines||"--"!==t.text&&"++"!==t.text||this.print_newline(!1,!0),";"===this._flags.last_token.text&&E(this._flags.mode)&&(i=!0),this._flags.last_token.type===c.RESERVED?i=!0:this._flags.last_token.type===c.END_EXPR?i=!("]"===this._flags.last_token.text&&("--"===t.text||"++"===t.text)):this._flags.last_token.type===c.OPERATOR&&(i=p(t.text,["--","-","++","+"])&&p(this._flags.last_token.text,["--","-","++","+"]),p(t.text,["+","-"])&&p(this._flags.last_token.text,["--","++"])&&(a=!0)),(this._flags.mode!==m||this._flags.inline_frame)&&this._flags.mode!==g||"{"!==this._flags.last_token.text&&";"!==this._flags.last_token.text||this.print_newline());this._output.space_before_token=this._output.space_before_token||i,this.print_token(t),this._output.space_before_token=a}else this.print_token(t);else this.print_token(t)},A.prototype.handle_block_comment=function(t,e){return this._output.raw?(this._output.add_raw_token(t),void(t.directives&&"end"===t.directives.preserve&&(this._output.raw=this._options.test_output_raw))):t.directives?(this.print_newline(!1,e),this.print_token(t),"start"===t.directives.preserve&&(this._output.raw=!0),void this.print_newline(!1,!0)):a.newline.test(t.text)||t.newlines?void this.print_block_commment(t,e):(this._output.space_before_token=!0,this.print_token(t),void(this._output.space_before_token=!0))},A.prototype.print_block_commment=function(t,e){var n,r=function(t){for(var e=[],n=(t=t.replace(a.allLineBreaks,"\n")).indexOf("\n");-1!==n;)e.push(t.substring(0,n)),n=(t=t.substring(n+1)).indexOf("\n");return t.length&&e.push(t),e}(t.text),i=!1,o=!1,s=t.whitespace_before,u=s.length;if(this.print_newline(!1,e),this.print_token_line_indentation(t),this._output.add_token(r[0]),this.print_newline(!1,e),r.length>1){for(i=function(t,e){for(var n=0;n<t.length;n++)if("*"!==t[n].trim().charAt(0))return!1;return!0}(r=r.slice(1)),o=function(t,e){for(var n,r=0,i=t.length;r<i;r++)if((n=t[r])&&0!==n.indexOf(e))return!1;return!0}(r,s),i&&(this._flags.alignment=1),n=0;n<r.length;n++)i?(this.print_token_line_indentation(t),this._output.add_token(r[n].replace(/^\s+/g,""))):o&&r[n]?(this.print_token_line_indentation(t),this._output.add_token(r[n].substring(u))):(this._output.current_line.set_indent(-1),this._output.add_token(r[n])),this.print_newline(!1,e);this._flags.alignment=0}},A.prototype.handle_comment=function(t,e){t.newlines?this.print_newline(!1,e):this._output.trim(!0),this._output.space_before_token=!0,this.print_token(t),this.print_newline(!1,e)},A.prototype.handle_dot=function(t){this.start_of_statement(t)||this.handle_whitespace_and_comments(t,!0),f(this._flags.last_token,d)?this._output.space_before_token=!1:this.allow_wrap_or_preserved_newline(t,")"===this._flags.last_token.text&&this._options.break_chained_methods),this._options.unindent_chained_methods&&this._output.just_added_newline()&&this.deindent(),this.print_token(t)},A.prototype.handle_unknown=function(t,e){this.print_token(t),"\n"===t.text[t.text.length-1]&&this.print_newline(!1,e)},A.prototype.handle_eof=function(t){for(;this._flags.mode===g;)this.restore_mode();this.handle_whitespace_and_comments(t)},t.exports.Beautifier=A},function(t,e,n){"use strict";function r(t){this.__parent=t,this.__character_count=0,this.__indent_count=-1,this.__alignment_count=0,this.__wrap_point_index=0,this.__wrap_point_character_count=0,this.__wrap_point_indent_count=-1,this.__wrap_point_alignment_count=0,this.__items=[]}function i(t,e){this.__cache=[""],this.__indent_size=t.indent_size,this.__indent_string=t.indent_char,t.indent_with_tabs||(this.__indent_string=new Array(t.indent_size+1).join(t.indent_char)),e=e||"",t.indent_level>0&&(e=new Array(t.indent_level+1).join(this.__indent_string)),this.__base_string=e,this.__base_string_length=e.length}function a(t,e){this.__indent_cache=new i(t,e),this.raw=!1,this._end_with_newline=t.end_with_newline,this.indent_size=t.indent_size,this.wrap_line_length=t.wrap_line_length,this.indent_empty_lines=t.indent_empty_lines,this.__lines=[],this.previous_line=null,this.current_line=null,this.next_line=new r(this),this.space_before_token=!1,this.non_breaking_space=!1,this.previous_token_wrapped=!1,this.__add_outputline()}r.prototype.clone_empty=function(){var t=new r(this.__parent);return t.set_indent(this.__indent_count,this.__alignment_count),t},r.prototype.item=function(t){return t<0?this.__items[this.__items.length+t]:this.__items[t]},r.prototype.has_match=function(t){for(var e=this.__items.length-1;e>=0;e--)if(this.__items[e].match(t))return!0;return!1},r.prototype.set_indent=function(t,e){this.is_empty()&&(this.__indent_count=t||0,this.__alignment_count=e||0,this.__character_count=this.__parent.get_indent_size(this.__indent_count,this.__alignment_count))},r.prototype._set_wrap_point=function(){this.__parent.wrap_line_length&&(this.__wrap_point_index=this.__items.length,this.__wrap_point_character_count=this.__character_count,this.__wrap_point_indent_count=this.__parent.next_line.__indent_count,this.__wrap_point_alignment_count=this.__parent.next_line.__alignment_count)},r.prototype._should_wrap=function(){return this.__wrap_point_index&&this.__character_count>this.__parent.wrap_line_length&&this.__wrap_point_character_count>this.__parent.next_line.__character_count},r.prototype._allow_wrap=function(){if(this._should_wrap()){this.__parent.add_new_line();var t=this.__parent.current_line;return t.set_indent(this.__wrap_point_indent_count,this.__wrap_point_alignment_count),t.__items=this.__items.slice(this.__wrap_point_index),this.__items=this.__items.slice(0,this.__wrap_point_index),t.__character_count+=this.__character_count-this.__wrap_point_character_count,this.__character_count=this.__wrap_point_character_count," "===t.__items[0]&&(t.__items.splice(0,1),t.__character_count-=1),!0}return!1},r.prototype.is_empty=function(){return 0===this.__items.length},r.prototype.last=function(){return this.is_empty()?null:this.__items[this.__items.length-1]},r.prototype.push=function(t){this.__items.push(t);var e=t.lastIndexOf("\n");-1!==e?this.__character_count=t.length-e:this.__character_count+=t.length},r.prototype.pop=function(){var t=null;return this.is_empty()||(t=this.__items.pop(),this.__character_count-=t.length),t},r.prototype._remove_indent=function(){this.__indent_count>0&&(this.__indent_count-=1,this.__character_count-=this.__parent.indent_size)},r.prototype._remove_wrap_indent=function(){this.__wrap_point_indent_count>0&&(this.__wrap_point_indent_count-=1)},r.prototype.trim=function(){for(;" "===this.last();)this.__items.pop(),this.__character_count-=1},r.prototype.toString=function(){var t="";return this.is_empty()?this.__parent.indent_empty_lines&&(t=this.__parent.get_indent_string(this.__indent_count)):(t=this.__parent.get_indent_string(this.__indent_count,this.__alignment_count),t+=this.__items.join("")),t},i.prototype.get_indent_size=function(t,e){var n=this.__base_string_length;return e=e||0,t<0&&(n=0),(n+=t*this.__indent_size)+e},i.prototype.get_indent_string=function(t,e){var n=this.__base_string;return e=e||0,t<0&&(t=0,n=""),e+=t*this.__indent_size,this.__ensure_cache(e),n+this.__cache[e]},i.prototype.__ensure_cache=function(t){for(;t>=this.__cache.length;)this.__add_column()},i.prototype.__add_column=function(){var t=this.__cache.length,e=0,n="";this.__indent_size&&t>=this.__indent_size&&(t-=(e=Math.floor(t/this.__indent_size))*this.__indent_size,n=new Array(e+1).join(this.__indent_string)),t&&(n+=new Array(t+1).join(" ")),this.__cache.push(n)},a.prototype.__add_outputline=function(){this.previous_line=this.current_line,this.current_line=this.next_line.clone_empty(),this.__lines.push(this.current_line)},a.prototype.get_line_number=function(){return this.__lines.length},a.prototype.get_indent_string=function(t,e){return this.__indent_cache.get_indent_string(t,e)},a.prototype.get_indent_size=function(t,e){return this.__indent_cache.get_indent_size(t,e)},a.prototype.is_empty=function(){return!this.previous_line&&this.current_line.is_empty()},a.prototype.add_new_line=function(t){return!(this.is_empty()||!t&&this.just_added_newline()||(this.raw||this.__add_outputline(),0))},a.prototype.get_code=function(t){this.trim(!0);var e=this.current_line.pop();e&&("\n"===e[e.length-1]&&(e=e.replace(/\n+$/g,"")),this.current_line.push(e)),this._end_with_newline&&this.__add_outputline();var n=this.__lines.join("\n");return"\n"!==t&&(n=n.replace(/[\n]/g,t)),n},a.prototype.set_wrap_point=function(){this.current_line._set_wrap_point()},a.prototype.set_indent=function(t,e){return t=t||0,e=e||0,this.next_line.set_indent(t,e),this.__lines.length>1?(this.current_line.set_indent(t,e),!0):(this.current_line.set_indent(),!1)},a.prototype.add_raw_token=function(t){for(var e=0;e<t.newlines;e++)this.__add_outputline();this.current_line.set_indent(-1),this.current_line.push(t.whitespace_before),this.current_line.push(t.text),this.space_before_token=!1,this.non_breaking_space=!1,this.previous_token_wrapped=!1},a.prototype.add_token=function(t){this.__add_space_before_token(),this.current_line.push(t),this.space_before_token=!1,this.non_breaking_space=!1,this.previous_token_wrapped=this.current_line._allow_wrap()},a.prototype.__add_space_before_token=function(){this.space_before_token&&!this.just_added_newline()&&(this.non_breaking_space||this.set_wrap_point(),this.current_line.push(" "))},a.prototype.remove_indent=function(t){for(var e=this.__lines.length;t<e;)this.__lines[t]._remove_indent(),t++;this.current_line._remove_wrap_indent()},a.prototype.trim=function(t){for(t=void 0!==t&&t,this.current_line.trim();t&&this.__lines.length>1&&this.current_line.is_empty();)this.__lines.pop(),this.current_line=this.__lines[this.__lines.length-1],this.current_line.trim();this.previous_line=this.__lines.length>1?this.__lines[this.__lines.length-2]:null},a.prototype.just_added_newline=function(){return this.current_line.is_empty()},a.prototype.just_added_blankline=function(){return this.is_empty()||this.current_line.is_empty()&&this.previous_line.is_empty()},a.prototype.ensure_empty_line_above=function(t,e){for(var n=this.__lines.length-2;n>=0;){var i=this.__lines[n];if(i.is_empty())break;if(0!==i.item(0).indexOf(t)&&i.item(-1)!==e){this.__lines.splice(n+1,0,new r(this)),this.previous_line=this.__lines[this.__lines.length-2];break}n--}},t.exports.Output=a},function(t,e,n){"use strict";t.exports.Token=function(t,e,n,r){this.type=t,this.text=e,this.comments_before=null,this.newlines=n||0,this.whitespace_before=r||"",this.parent=null,this.next=null,this.previous=null,this.opened=null,this.closed=null,this.directives=null}},function(t,e,n){"use strict";var r="\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc",i="(?:\\\\u[0-9a-fA-F]{4}|[\\x23\\x24\\x40\\x41-\\x5a\\x5f\\x61-\\x7a"+r+"])";e.identifier=new RegExp(i+"(?:\\\\u[0-9a-fA-F]{4}|[\\x24\\x30-\\x39\\x41-\\x5a\\x5f\\x61-\\x7a\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f])*","g"),e.identifierStart=new RegExp(i),e.identifierMatch=new RegExp("(?:\\\\u[0-9a-fA-F]{4}|[\\x24\\x30-\\x39\\x41-\\x5a\\x5f\\x61-\\x7a"+r+"\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f])+"),e.newline=/[\n\r\u2028\u2029]/,e.lineBreak=new RegExp("\r\n|"+e.newline.source),e.allLineBreaks=new RegExp(e.lineBreak.source,"g")},function(t,e,n){"use strict";var r=n(6).Options,i=["before-newline","after-newline","preserve-newline"];function a(t){r.call(this,t,"js");var e=this.raw_options.brace_style||null;"expand-strict"===e?this.raw_options.brace_style="expand":"collapse-preserve-inline"===e?this.raw_options.brace_style="collapse,preserve-inline":void 0!==this.raw_options.braces_on_own_line&&(this.raw_options.brace_style=this.raw_options.braces_on_own_line?"expand":"collapse");var n=this._get_selection_list("brace_style",["collapse","expand","end-expand","none","preserve-inline"]);this.brace_preserve_inline=!1,this.brace_style="collapse";for(var a=0;a<n.length;a++)"preserve-inline"===n[a]?this.brace_preserve_inline=!0:this.brace_style=n[a];this.unindent_chained_methods=this._get_boolean("unindent_chained_methods"),this.break_chained_methods=this._get_boolean("break_chained_methods"),this.space_in_paren=this._get_boolean("space_in_paren"),this.space_in_empty_paren=this._get_boolean("space_in_empty_paren"),this.jslint_happy=this._get_boolean("jslint_happy"),this.space_after_anon_function=this._get_boolean("space_after_anon_function"),this.space_after_named_function=this._get_boolean("space_after_named_function"),this.keep_array_indentation=this._get_boolean("keep_array_indentation"),this.space_before_conditional=this._get_boolean("space_before_conditional",!0),this.unescape_strings=this._get_boolean("unescape_strings"),this.e4x=this._get_boolean("e4x"),this.comma_first=this._get_boolean("comma_first"),this.operator_position=this._get_selection("operator_position",i),this.test_output_raw=this._get_boolean("test_output_raw"),this.jslint_happy&&(this.space_after_anon_function=!0)}a.prototype=new r,t.exports.Options=a},function(t,e,n){"use strict";function r(t,e){this.raw_options=i(t,e),this.disabled=this._get_boolean("disabled"),this.eol=this._get_characters("eol","auto"),this.end_with_newline=this._get_boolean("end_with_newline"),this.indent_size=this._get_number("indent_size",4),this.indent_char=this._get_characters("indent_char"," "),this.indent_level=this._get_number("indent_level"),this.preserve_newlines=this._get_boolean("preserve_newlines",!0),this.max_preserve_newlines=this._get_number("max_preserve_newlines",32786),this.preserve_newlines||(this.max_preserve_newlines=0),this.indent_with_tabs=this._get_boolean("indent_with_tabs","\t"===this.indent_char),this.indent_with_tabs&&(this.indent_char="\t",1===this.indent_size&&(this.indent_size=4)),this.wrap_line_length=this._get_number("wrap_line_length",this._get_number("max_char")),this.indent_empty_lines=this._get_boolean("indent_empty_lines"),this.templating=this._get_selection_list("templating",["auto","none","django","erb","handlebars","php"],["auto"])}function i(t,e){var n,r={};for(n in t=a(t))n!==e&&(r[n]=t[n]);if(e&&t[e])for(n in t[e])r[n]=t[e][n];return r}function a(t){var e,n={};for(e in t)n[e.replace(/-/g,"_")]=t[e];return n}r.prototype._get_array=function(t,e){var n=this.raw_options[t],r=e||[];return"object"==typeof n?null!==n&&"function"==typeof n.concat&&(r=n.concat()):"string"==typeof n&&(r=n.split(/[^a-zA-Z0-9_\/\-]+/)),r},r.prototype._get_boolean=function(t,e){var n=this.raw_options[t];return void 0===n?!!e:!!n},r.prototype._get_characters=function(t,e){var n=this.raw_options[t],r=e||"";return"string"==typeof n&&(r=n.replace(/\\r/,"\r").replace(/\\n/,"\n").replace(/\\t/,"\t")),r},r.prototype._get_number=function(t,e){var n=this.raw_options[t];e=parseInt(e,10),isNaN(e)&&(e=0);var r=parseInt(n,10);return isNaN(r)&&(r=e),r},r.prototype._get_selection=function(t,e,n){var r=this._get_selection_list(t,e,n);if(1!==r.length)throw new Error("Invalid Option Value: The option '"+t+"' can only be one of the following values:\n"+e+"\nYou passed in: '"+this.raw_options[t]+"'");return r[0]},r.prototype._get_selection_list=function(t,e,n){if(!e||0===e.length)throw new Error("Selection list cannot be empty.");if(n=n||[e[0]],!this._is_valid_selection(n,e))throw new Error("Invalid Default Value!");var r=this._get_array(t,n);if(!this._is_valid_selection(r,e))throw new Error("Invalid Option Value: The option '"+t+"' can contain only the following values:\n"+e+"\nYou passed in: '"+this.raw_options[t]+"'");return r},r.prototype._is_valid_selection=function(t,e){return t.length&&e.length&&!t.some((function(t){return-1===e.indexOf(t)}))},t.exports.Options=r,t.exports.normalizeOpts=a,t.exports.mergeOpts=i},function(t,e,n){"use strict";var r=n(8).InputScanner,i=n(9).Tokenizer,a=n(9).TOKEN,o=n(13).Directives,s=n(4),u=n(12).Pattern,l=n(14).TemplatablePattern;function c(t,e){return-1!==e.indexOf(t)}var p={START_EXPR:"TK_START_EXPR",END_EXPR:"TK_END_EXPR",START_BLOCK:"TK_START_BLOCK",END_BLOCK:"TK_END_BLOCK",WORD:"TK_WORD",RESERVED:"TK_RESERVED",SEMICOLON:"TK_SEMICOLON",STRING:"TK_STRING",EQUALS:"TK_EQUALS",OPERATOR:"TK_OPERATOR",COMMA:"TK_COMMA",BLOCK_COMMENT:"TK_BLOCK_COMMENT",COMMENT:"TK_COMMENT",DOT:"TK_DOT",UNKNOWN:"TK_UNKNOWN",START:a.START,RAW:a.RAW,EOF:a.EOF},h=new o(/\/\*/,/\*\//),f=/0[xX][0123456789abcdefABCDEF]*|0[oO][01234567]*|0[bB][01]*|\d+n|(?:\.\d+|\d+\.?\d*)(?:[eE][+-]?\d+)?/,d=/[0-9]/,_=/[^\d\.]/,v=">>> === !== << && >= ** != == <= >> || < / - + > : & % ? ^ | *".split(" "),m=">>>= ... >>= <<= === >>> !== **= => ^= :: /= << <= == && -= >= >> != -- += ** || ++ %= &= *= |= = ! ? > < : / ^ - + * & % ~ |";m=(m=m.replace(/[-[\]{}()*+?.,\\^$|#]/g,"\\$&")).replace(/ /g,"|");var g,b=new RegExp(m),y="continue,try,throw,return,var,let,const,if,switch,case,default,for,while,break,function,import,export".split(","),w=y.concat(["do","in","of","else","get","set","new","catch","finally","typeof","yield","async","await","from","as"]),x=new RegExp("^(?:"+w.join("|")+")$"),k=function(t,e){i.call(this,t,e),this._patterns.whitespace=this._patterns.whitespace.matching(/\u00A0\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff/.source,/\u2028\u2029/.source);var n=new u(this._input),r=new l(this._input).read_options(this._options);this.__patterns={template:r,identifier:r.starting_with(s.identifier).matching(s.identifierMatch),number:n.matching(f),punct:n.matching(b),comment:n.starting_with(/\/\//).until(/[\n\r\u2028\u2029]/),block_comment:n.starting_with(/\/\*/).until_after(/\*\//),html_comment_start:n.matching(/<!--/),html_comment_end:n.matching(/-->/),include:n.starting_with(/#include/).until_after(s.lineBreak),shebang:n.starting_with(/#!/).until_after(s.lineBreak),xml:n.matching(/[\s\S]*?<(\/?)([-a-zA-Z:0-9_.]+|{[\s\S]+?}|!\[CDATA\[[\s\S]*?\]\])(\s+{[\s\S]+?}|\s+[-a-zA-Z:0-9_.]+|\s+[-a-zA-Z:0-9_.]+\s*=\s*('[^']*'|"[^"]*"|{[\s\S]+?}))*\s*(\/?)\s*>/),single_quote:r.until(/['\\\n\r\u2028\u2029]/),double_quote:r.until(/["\\\n\r\u2028\u2029]/),template_text:r.until(/[`\\$]/),template_expression:r.until(/[`}\\]/)}};(k.prototype=new i)._is_comment=function(t){return t.type===p.COMMENT||t.type===p.BLOCK_COMMENT||t.type===p.UNKNOWN},k.prototype._is_opening=function(t){return t.type===p.START_BLOCK||t.type===p.START_EXPR},k.prototype._is_closing=function(t,e){return(t.type===p.END_BLOCK||t.type===p.END_EXPR)&&e&&("]"===t.text&&"["===e.text||")"===t.text&&"("===e.text||"}"===t.text&&"{"===e.text)},k.prototype._reset=function(){g=!1},k.prototype._get_next_token=function(t,e){var n=null;this._readWhitespace();var r=this._input.peek();return null===r?this._create_token(p.EOF,""):n=(n=(n=(n=(n=(n=(n=(n=(n=n||this._read_non_javascript(r))||this._read_string(r))||this._read_word(t))||this._read_singles(r))||this._read_comment(r))||this._read_regexp(r,t))||this._read_xml(r,t))||this._read_punctuation())||this._create_token(p.UNKNOWN,this._input.next())},k.prototype._read_word=function(t){var e;return""!==(e=this.__patterns.identifier.read())?(e=e.replace(s.allLineBreaks,"\n"),t.type!==p.DOT&&(t.type!==p.RESERVED||"set"!==t.text&&"get"!==t.text)&&x.test(e)?"in"===e||"of"===e?this._create_token(p.OPERATOR,e):this._create_token(p.RESERVED,e):this._create_token(p.WORD,e)):""!==(e=this.__patterns.number.read())?this._create_token(p.WORD,e):void 0},k.prototype._read_singles=function(t){var e=null;return"("===t||"["===t?e=this._create_token(p.START_EXPR,t):")"===t||"]"===t?e=this._create_token(p.END_EXPR,t):"{"===t?e=this._create_token(p.START_BLOCK,t):"}"===t?e=this._create_token(p.END_BLOCK,t):";"===t?e=this._create_token(p.SEMICOLON,t):"."===t&&_.test(this._input.peek(1))?e=this._create_token(p.DOT,t):","===t&&(e=this._create_token(p.COMMA,t)),e&&this._input.next(),e},k.prototype._read_punctuation=function(){var t=this.__patterns.punct.read();if(""!==t)return"="===t?this._create_token(p.EQUALS,t):this._create_token(p.OPERATOR,t)},k.prototype._read_non_javascript=function(t){var e="";if("#"===t){if(this._is_first_token()&&(e=this.__patterns.shebang.read()))return this._create_token(p.UNKNOWN,e.trim()+"\n");if(e=this.__patterns.include.read())return this._create_token(p.UNKNOWN,e.trim()+"\n");t=this._input.next();var n="#";if(this._input.hasNext()&&this._input.testChar(d)){do{n+=t=this._input.next()}while(this._input.hasNext()&&"#"!==t&&"="!==t);return"#"===t||("["===this._input.peek()&&"]"===this._input.peek(1)?(n+="[]",this._input.next(),this._input.next()):"{"===this._input.peek()&&"}"===this._input.peek(1)&&(n+="{}",this._input.next(),this._input.next())),this._create_token(p.WORD,n)}this._input.back()}else if("<"===t&&this._is_first_token()){if(e=this.__patterns.html_comment_start.read()){for(;this._input.hasNext()&&!this._input.testChar(s.newline);)e+=this._input.next();return g=!0,this._create_token(p.COMMENT,e)}}else if(g&&"-"===t&&(e=this.__patterns.html_comment_end.read()))return g=!1,this._create_token(p.COMMENT,e);return null},k.prototype._read_comment=function(t){var e=null;if("/"===t){var n="";if("*"===this._input.peek(1)){n=this.__patterns.block_comment.read();var r=h.get_directives(n);r&&"start"===r.ignore&&(n+=h.readIgnored(this._input)),n=n.replace(s.allLineBreaks,"\n"),(e=this._create_token(p.BLOCK_COMMENT,n)).directives=r}else"/"===this._input.peek(1)&&(n=this.__patterns.comment.read(),e=this._create_token(p.COMMENT,n))}return e},k.prototype._read_string=function(t){if("`"===t||"'"===t||'"'===t){var e=this._input.next();return this.has_char_escapes=!1,e+="`"===t?this._read_string_recursive("`",!0,"${"):this._read_string_recursive(t),this.has_char_escapes&&this._options.unescape_strings&&(e=function(t){for(var e="",n=0,i=new r(t),a=null;i.hasNext();)if((a=i.match(/([\s]|[^\\]|\\\\)+/g))&&(e+=a[0]),"\\"===i.peek()){if(i.next(),"x"===i.peek())a=i.match(/x([0-9A-Fa-f]{2})/g);else{if("u"!==i.peek()){e+="\\",i.hasNext()&&(e+=i.next());continue}a=i.match(/u([0-9A-Fa-f]{4})/g)}if(!a)return t;if((n=parseInt(a[1],16))>126&&n<=255&&0===a[0].indexOf("x"))return t;if(n>=0&&n<32){e+="\\"+a[0];continue}e+=34===n||39===n||92===n?"\\"+String.fromCharCode(n):String.fromCharCode(n)}return e}(e)),this._input.peek()===t&&(e+=this._input.next()),e=e.replace(s.allLineBreaks,"\n"),this._create_token(p.STRING,e)}return null},k.prototype._allow_regexp_or_xml=function(t){return t.type===p.RESERVED&&c(t.text,["return","case","throw","else","do","typeof","yield"])||t.type===p.END_EXPR&&")"===t.text&&t.opened.previous.type===p.RESERVED&&c(t.opened.previous.text,["if","while","for"])||c(t.type,[p.COMMENT,p.START_EXPR,p.START_BLOCK,p.START,p.END_BLOCK,p.OPERATOR,p.EQUALS,p.EOF,p.SEMICOLON,p.COMMA])},k.prototype._read_regexp=function(t,e){if("/"===t&&this._allow_regexp_or_xml(e)){for(var n=this._input.next(),r=!1,i=!1;this._input.hasNext()&&(r||i||this._input.peek()!==t)&&!this._input.testChar(s.newline);)n+=this._input.peek(),r?r=!1:(r="\\"===this._input.peek(),"["===this._input.peek()?i=!0:"]"===this._input.peek()&&(i=!1)),this._input.next();return this._input.peek()===t&&(n+=this._input.next(),n+=this._input.read(s.identifier)),this._create_token(p.STRING,n)}return null},k.prototype._read_xml=function(t,e){if(this._options.e4x&&"<"===t&&this._allow_regexp_or_xml(e)){var n="",r=this.__patterns.xml.read_match();if(r){for(var i=r[2].replace(/^{\s+/,"{").replace(/\s+}$/,"}"),a=0===i.indexOf("{"),o=0;r;){var u=!!r[1],l=r[2];if(!(r[r.length-1]||"![CDATA["===l.slice(0,8))&&(l===i||a&&l.replace(/^{\s+/,"{").replace(/\s+}$/,"}"))&&(u?--o:++o),n+=r[0],o<=0)break;r=this.__patterns.xml.read_match()}return r||(n+=this._input.match(/[\s\S]*/g)[0]),n=n.replace(s.allLineBreaks,"\n"),this._create_token(p.STRING,n)}}return null},k.prototype._read_string_recursive=function(t,e,n){var r,i;"'"===t?i=this.__patterns.single_quote:'"'===t?i=this.__patterns.double_quote:"`"===t?i=this.__patterns.template_text:"}"===t&&(i=this.__patterns.template_expression);for(var a=i.read(),o="";this._input.hasNext();){if((o=this._input.next())===t||!e&&s.newline.test(o)){this._input.back();break}"\\"===o&&this._input.hasNext()?("x"===(r=this._input.peek())||"u"===r?this.has_char_escapes=!0:"\r"===r&&"\n"===this._input.peek(1)&&this._input.next(),o+=this._input.next()):n&&("${"===n&&"$"===o&&"{"===this._input.peek()&&(o+=this._input.next()),n===o&&(o+="`"===t?this._read_string_recursive("}",e,"`"):this._read_string_recursive("`",e,"${"),this._input.hasNext()&&(o+=this._input.next()))),a+=o+=i.read()}return a},t.exports.Tokenizer=k,t.exports.TOKEN=p,t.exports.positionable_operators=v.slice(),t.exports.line_starters=y.slice()},function(t,e,n){"use strict";var r=RegExp.prototype.hasOwnProperty("sticky");function i(t){this.__input=t||"",this.__input_length=this.__input.length,this.__position=0}i.prototype.restart=function(){this.__position=0},i.prototype.back=function(){this.__position>0&&(this.__position-=1)},i.prototype.hasNext=function(){return this.__position<this.__input_length},i.prototype.next=function(){var t=null;return this.hasNext()&&(t=this.__input.charAt(this.__position),this.__position+=1),t},i.prototype.peek=function(t){var e=null;return t=t||0,(t+=this.__position)>=0&&t<this.__input_length&&(e=this.__input.charAt(t)),e},i.prototype.__match=function(t,e){t.lastIndex=e;var n=t.exec(this.__input);return!n||r&&t.sticky||n.index!==e&&(n=null),n},i.prototype.test=function(t,e){return e=e||0,(e+=this.__position)>=0&&e<this.__input_length&&!!this.__match(t,e)},i.prototype.testChar=function(t,e){var n=this.peek(e);return t.lastIndex=0,null!==n&&t.test(n)},i.prototype.match=function(t){var e=this.__match(t,this.__position);return e?this.__position+=e[0].length:e=null,e},i.prototype.read=function(t,e,n){var r,i="";return t&&(r=this.match(t))&&(i+=r[0]),!e||!r&&t||(i+=this.readUntil(e,n)),i},i.prototype.readUntil=function(t,e){var n,r=this.__position;t.lastIndex=this.__position;var i=t.exec(this.__input);return i?(r=i.index,e&&(r+=i[0].length)):r=this.__input_length,n=this.__input.substring(this.__position,r),this.__position=r,n},i.prototype.readUntilAfter=function(t){return this.readUntil(t,!0)},i.prototype.get_regexp=function(t,e){var n=null,i="g";return e&&r&&(i="y"),"string"==typeof t&&""!==t?n=new RegExp(t,i):t&&(n=new RegExp(t.source,i)),n},i.prototype.get_literal_regexp=function(t){return RegExp(t.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&"))},i.prototype.peekUntilAfter=function(t){var e=this.__position,n=this.readUntilAfter(t);return this.__position=e,n},i.prototype.lookBack=function(t){var e=this.__position-1;return e>=t.length&&this.__input.substring(e-t.length,e).toLowerCase()===t},t.exports.InputScanner=i},function(t,e,n){"use strict";var r=n(8).InputScanner,i=n(3).Token,a=n(10).TokenStream,o=n(11).WhitespacePattern,s={START:"TK_START",RAW:"TK_RAW",EOF:"TK_EOF"},u=function(t,e){this._input=new r(t),this._options=e||{},this.__tokens=null,this._patterns={},this._patterns.whitespace=new o(this._input)};u.prototype.tokenize=function(){var t;this._input.restart(),this.__tokens=new a,this._reset();for(var e=new i(s.START,""),n=null,r=[],o=new a;e.type!==s.EOF;){for(t=this._get_next_token(e,n);this._is_comment(t);)o.add(t),t=this._get_next_token(e,n);o.isEmpty()||(t.comments_before=o,o=new a),t.parent=n,this._is_opening(t)?(r.push(n),n=t):n&&this._is_closing(t,n)&&(t.opened=n,n.closed=t,n=r.pop(),t.parent=n),t.previous=e,e.next=t,this.__tokens.add(t),e=t}return this.__tokens},u.prototype._is_first_token=function(){return this.__tokens.isEmpty()},u.prototype._reset=function(){},u.prototype._get_next_token=function(t,e){this._readWhitespace();var n=this._input.read(/.+/g);return n?this._create_token(s.RAW,n):this._create_token(s.EOF,"")},u.prototype._is_comment=function(t){return!1},u.prototype._is_opening=function(t){return!1},u.prototype._is_closing=function(t,e){return!1},u.prototype._create_token=function(t,e){return new i(t,e,this._patterns.whitespace.newline_count,this._patterns.whitespace.whitespace_before_token)},u.prototype._readWhitespace=function(){return this._patterns.whitespace.read()},t.exports.Tokenizer=u,t.exports.TOKEN=s},function(t,e,n){"use strict";function r(t){this.__tokens=[],this.__tokens_length=this.__tokens.length,this.__position=0,this.__parent_token=t}r.prototype.restart=function(){this.__position=0},r.prototype.isEmpty=function(){return 0===this.__tokens_length},r.prototype.hasNext=function(){return this.__position<this.__tokens_length},r.prototype.next=function(){var t=null;return this.hasNext()&&(t=this.__tokens[this.__position],this.__position+=1),t},r.prototype.peek=function(t){var e=null;return t=t||0,(t+=this.__position)>=0&&t<this.__tokens_length&&(e=this.__tokens[t]),e},r.prototype.add=function(t){this.__parent_token&&(t.parent=this.__parent_token),this.__tokens.push(t),this.__tokens_length+=1},t.exports.TokenStream=r},function(t,e,n){"use strict";var r=n(12).Pattern;function i(t,e){r.call(this,t,e),e?this._line_regexp=this._input.get_regexp(e._line_regexp):this.__set_whitespace_patterns("",""),this.newline_count=0,this.whitespace_before_token=""}i.prototype=new r,i.prototype.__set_whitespace_patterns=function(t,e){t+="\\t ",e+="\\n\\r",this._match_pattern=this._input.get_regexp("["+t+e+"]+",!0),this._newline_regexp=this._input.get_regexp("\\r\\n|["+e+"]")},i.prototype.read=function(){this.newline_count=0,this.whitespace_before_token="";var t=this._input.read(this._match_pattern);if(" "===t)this.whitespace_before_token=" ";else if(t){var e=this.__split(this._newline_regexp,t);this.newline_count=e.length-1,this.whitespace_before_token=e[this.newline_count]}return t},i.prototype.matching=function(t,e){var n=this._create();return n.__set_whitespace_patterns(t,e),n._update(),n},i.prototype._create=function(){return new i(this._input,this)},i.prototype.__split=function(t,e){t.lastIndex=0;for(var n=0,r=[],i=t.exec(e);i;)r.push(e.substring(n,i.index)),n=i.index+i[0].length,i=t.exec(e);return n<e.length?r.push(e.substring(n,e.length)):r.push(""),r},t.exports.WhitespacePattern=i},function(t,e,n){"use strict";function r(t,e){this._input=t,this._starting_pattern=null,this._match_pattern=null,this._until_pattern=null,this._until_after=!1,e&&(this._starting_pattern=this._input.get_regexp(e._starting_pattern,!0),this._match_pattern=this._input.get_regexp(e._match_pattern,!0),this._until_pattern=this._input.get_regexp(e._until_pattern),this._until_after=e._until_after)}r.prototype.read=function(){var t=this._input.read(this._starting_pattern);return this._starting_pattern&&!t||(t+=this._input.read(this._match_pattern,this._until_pattern,this._until_after)),t},r.prototype.read_match=function(){return this._input.match(this._match_pattern)},r.prototype.until_after=function(t){var e=this._create();return e._until_after=!0,e._until_pattern=this._input.get_regexp(t),e._update(),e},r.prototype.until=function(t){var e=this._create();return e._until_after=!1,e._until_pattern=this._input.get_regexp(t),e._update(),e},r.prototype.starting_with=function(t){var e=this._create();return e._starting_pattern=this._input.get_regexp(t,!0),e._update(),e},r.prototype.matching=function(t){var e=this._create();return e._match_pattern=this._input.get_regexp(t,!0),e._update(),e},r.prototype._create=function(){return new r(this._input,this)},r.prototype._update=function(){},t.exports.Pattern=r},function(t,e,n){"use strict";function r(t,e){t="string"==typeof t?t:t.source,e="string"==typeof e?e:e.source,this.__directives_block_pattern=new RegExp(t+/ beautify( \w+[:]\w+)+ /.source+e,"g"),this.__directive_pattern=/ (\w+)[:](\w+)/g,this.__directives_end_ignore_pattern=new RegExp(t+/\sbeautify\signore:end\s/.source+e,"g")}r.prototype.get_directives=function(t){if(!t.match(this.__directives_block_pattern))return null;var e={};this.__directive_pattern.lastIndex=0;for(var n=this.__directive_pattern.exec(t);n;)e[n[1]]=n[2],n=this.__directive_pattern.exec(t);return e},r.prototype.readIgnored=function(t){return t.readUntilAfter(this.__directives_end_ignore_pattern)},t.exports.Directives=r},function(t,e,n){"use strict";var r=n(12).Pattern,i={django:!1,erb:!1,handlebars:!1,php:!1};function a(t,e){r.call(this,t,e),this.__template_pattern=null,this._disabled=Object.assign({},i),this._excluded=Object.assign({},i),e&&(this.__template_pattern=this._input.get_regexp(e.__template_pattern),this._excluded=Object.assign(this._excluded,e._excluded),this._disabled=Object.assign(this._disabled,e._disabled));var n=new r(t);this.__patterns={handlebars_comment:n.starting_with(/{{!--/).until_after(/--}}/),handlebars_unescaped:n.starting_with(/{{{/).until_after(/}}}/),handlebars:n.starting_with(/{{/).until_after(/}}/),php:n.starting_with(/<\?(?:[=]|php)/).until_after(/\?>/),erb:n.starting_with(/<%[^%]/).until_after(/[^%]%>/),django:n.starting_with(/{%/).until_after(/%}/),django_value:n.starting_with(/{{/).until_after(/}}/),django_comment:n.starting_with(/{#/).until_after(/#}/)}}a.prototype=new r,a.prototype._create=function(){return new a(this._input,this)},a.prototype._update=function(){this.__set_templated_pattern()},a.prototype.disable=function(t){var e=this._create();return e._disabled[t]=!0,e._update(),e},a.prototype.read_options=function(t){var e=this._create();for(var n in i)e._disabled[n]=-1===t.templating.indexOf(n);return e._update(),e},a.prototype.exclude=function(t){var e=this._create();return e._excluded[t]=!0,e._update(),e},a.prototype.read=function(){var t="";t=this._match_pattern?this._input.read(this._starting_pattern):this._input.read(this._starting_pattern,this.__template_pattern);for(var e=this._read_template();e;)this._match_pattern?e+=this._input.read(this._match_pattern):e+=this._input.readUntil(this.__template_pattern),t+=e,e=this._read_template();return this._until_after&&(t+=this._input.readUntilAfter(this._until_pattern)),t},a.prototype.__set_templated_pattern=function(){var t=[];this._disabled.php||t.push(this.__patterns.php._starting_pattern.source),this._disabled.handlebars||t.push(this.__patterns.handlebars._starting_pattern.source),this._disabled.erb||t.push(this.__patterns.erb._starting_pattern.source),this._disabled.django||(t.push(this.__patterns.django._starting_pattern.source),t.push(this.__patterns.django_value._starting_pattern.source),t.push(this.__patterns.django_comment._starting_pattern.source)),this._until_pattern&&t.push(this._until_pattern.source),this.__template_pattern=this._input.get_regexp("(?:"+t.join("|")+")")},a.prototype._read_template=function(){var t="",e=this._input.peek();if("<"===e){var n=this._input.peek(1);this._disabled.php||this._excluded.php||"?"!==n||(t=t||this.__patterns.php.read()),this._disabled.erb||this._excluded.erb||"%"!==n||(t=t||this.__patterns.erb.read())}else"{"===e&&(this._disabled.handlebars||this._excluded.handlebars||(t=(t=(t=t||this.__patterns.handlebars_comment.read())||this.__patterns.handlebars_unescaped.read())||this.__patterns.handlebars.read()),this._disabled.django||(this._excluded.django||this._excluded.handlebars||(t=t||this.__patterns.django_value.read()),this._excluded.django||(t=(t=t||this.__patterns.django_comment.read())||this.__patterns.django.read())));return t},t.exports.TemplatablePattern=a}]),void 0===(r=function(){return{js_beautify:i}}.apply(e,[]))||(t.exports=r)},function(t,e,n){var r,i;i=function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=15)}([,,function(t,e,n){"use strict";function r(t){this.__parent=t,this.__character_count=0,this.__indent_count=-1,this.__alignment_count=0,this.__wrap_point_index=0,this.__wrap_point_character_count=0,this.__wrap_point_indent_count=-1,this.__wrap_point_alignment_count=0,this.__items=[]}function i(t,e){this.__cache=[""],this.__indent_size=t.indent_size,this.__indent_string=t.indent_char,t.indent_with_tabs||(this.__indent_string=new Array(t.indent_size+1).join(t.indent_char)),e=e||"",t.indent_level>0&&(e=new Array(t.indent_level+1).join(this.__indent_string)),this.__base_string=e,this.__base_string_length=e.length}function a(t,e){this.__indent_cache=new i(t,e),this.raw=!1,this._end_with_newline=t.end_with_newline,this.indent_size=t.indent_size,this.wrap_line_length=t.wrap_line_length,this.indent_empty_lines=t.indent_empty_lines,this.__lines=[],this.previous_line=null,this.current_line=null,this.next_line=new r(this),this.space_before_token=!1,this.non_breaking_space=!1,this.previous_token_wrapped=!1,this.__add_outputline()}r.prototype.clone_empty=function(){var t=new r(this.__parent);return t.set_indent(this.__indent_count,this.__alignment_count),t},r.prototype.item=function(t){return t<0?this.__items[this.__items.length+t]:this.__items[t]},r.prototype.has_match=function(t){for(var e=this.__items.length-1;e>=0;e--)if(this.__items[e].match(t))return!0;return!1},r.prototype.set_indent=function(t,e){this.is_empty()&&(this.__indent_count=t||0,this.__alignment_count=e||0,this.__character_count=this.__parent.get_indent_size(this.__indent_count,this.__alignment_count))},r.prototype._set_wrap_point=function(){this.__parent.wrap_line_length&&(this.__wrap_point_index=this.__items.length,this.__wrap_point_character_count=this.__character_count,this.__wrap_point_indent_count=this.__parent.next_line.__indent_count,this.__wrap_point_alignment_count=this.__parent.next_line.__alignment_count)},r.prototype._should_wrap=function(){return this.__wrap_point_index&&this.__character_count>this.__parent.wrap_line_length&&this.__wrap_point_character_count>this.__parent.next_line.__character_count},r.prototype._allow_wrap=function(){if(this._should_wrap()){this.__parent.add_new_line();var t=this.__parent.current_line;return t.set_indent(this.__wrap_point_indent_count,this.__wrap_point_alignment_count),t.__items=this.__items.slice(this.__wrap_point_index),this.__items=this.__items.slice(0,this.__wrap_point_index),t.__character_count+=this.__character_count-this.__wrap_point_character_count,this.__character_count=this.__wrap_point_character_count," "===t.__items[0]&&(t.__items.splice(0,1),t.__character_count-=1),!0}return!1},r.prototype.is_empty=function(){return 0===this.__items.length},r.prototype.last=function(){return this.is_empty()?null:this.__items[this.__items.length-1]},r.prototype.push=function(t){this.__items.push(t);var e=t.lastIndexOf("\n");-1!==e?this.__character_count=t.length-e:this.__character_count+=t.length},r.prototype.pop=function(){var t=null;return this.is_empty()||(t=this.__items.pop(),this.__character_count-=t.length),t},r.prototype._remove_indent=function(){this.__indent_count>0&&(this.__indent_count-=1,this.__character_count-=this.__parent.indent_size)},r.prototype._remove_wrap_indent=function(){this.__wrap_point_indent_count>0&&(this.__wrap_point_indent_count-=1)},r.prototype.trim=function(){for(;" "===this.last();)this.__items.pop(),this.__character_count-=1},r.prototype.toString=function(){var t="";return this.is_empty()?this.__parent.indent_empty_lines&&(t=this.__parent.get_indent_string(this.__indent_count)):(t=this.__parent.get_indent_string(this.__indent_count,this.__alignment_count),t+=this.__items.join("")),t},i.prototype.get_indent_size=function(t,e){var n=this.__base_string_length;return e=e||0,t<0&&(n=0),(n+=t*this.__indent_size)+e},i.prototype.get_indent_string=function(t,e){var n=this.__base_string;return e=e||0,t<0&&(t=0,n=""),e+=t*this.__indent_size,this.__ensure_cache(e),n+this.__cache[e]},i.prototype.__ensure_cache=function(t){for(;t>=this.__cache.length;)this.__add_column()},i.prototype.__add_column=function(){var t=this.__cache.length,e=0,n="";this.__indent_size&&t>=this.__indent_size&&(t-=(e=Math.floor(t/this.__indent_size))*this.__indent_size,n=new Array(e+1).join(this.__indent_string)),t&&(n+=new Array(t+1).join(" ")),this.__cache.push(n)},a.prototype.__add_outputline=function(){this.previous_line=this.current_line,this.current_line=this.next_line.clone_empty(),this.__lines.push(this.current_line)},a.prototype.get_line_number=function(){return this.__lines.length},a.prototype.get_indent_string=function(t,e){return this.__indent_cache.get_indent_string(t,e)},a.prototype.get_indent_size=function(t,e){return this.__indent_cache.get_indent_size(t,e)},a.prototype.is_empty=function(){return!this.previous_line&&this.current_line.is_empty()},a.prototype.add_new_line=function(t){return!(this.is_empty()||!t&&this.just_added_newline()||(this.raw||this.__add_outputline(),0))},a.prototype.get_code=function(t){this.trim(!0);var e=this.current_line.pop();e&&("\n"===e[e.length-1]&&(e=e.replace(/\n+$/g,"")),this.current_line.push(e)),this._end_with_newline&&this.__add_outputline();var n=this.__lines.join("\n");return"\n"!==t&&(n=n.replace(/[\n]/g,t)),n},a.prototype.set_wrap_point=function(){this.current_line._set_wrap_point()},a.prototype.set_indent=function(t,e){return t=t||0,e=e||0,this.next_line.set_indent(t,e),this.__lines.length>1?(this.current_line.set_indent(t,e),!0):(this.current_line.set_indent(),!1)},a.prototype.add_raw_token=function(t){for(var e=0;e<t.newlines;e++)this.__add_outputline();this.current_line.set_indent(-1),this.current_line.push(t.whitespace_before),this.current_line.push(t.text),this.space_before_token=!1,this.non_breaking_space=!1,this.previous_token_wrapped=!1},a.prototype.add_token=function(t){this.__add_space_before_token(),this.current_line.push(t),this.space_before_token=!1,this.non_breaking_space=!1,this.previous_token_wrapped=this.current_line._allow_wrap()},a.prototype.__add_space_before_token=function(){this.space_before_token&&!this.just_added_newline()&&(this.non_breaking_space||this.set_wrap_point(),this.current_line.push(" "))},a.prototype.remove_indent=function(t){for(var e=this.__lines.length;t<e;)this.__lines[t]._remove_indent(),t++;this.current_line._remove_wrap_indent()},a.prototype.trim=function(t){for(t=void 0!==t&&t,this.current_line.trim();t&&this.__lines.length>1&&this.current_line.is_empty();)this.__lines.pop(),this.current_line=this.__lines[this.__lines.length-1],this.current_line.trim();this.previous_line=this.__lines.length>1?this.__lines[this.__lines.length-2]:null},a.prototype.just_added_newline=function(){return this.current_line.is_empty()},a.prototype.just_added_blankline=function(){return this.is_empty()||this.current_line.is_empty()&&this.previous_line.is_empty()},a.prototype.ensure_empty_line_above=function(t,e){for(var n=this.__lines.length-2;n>=0;){var i=this.__lines[n];if(i.is_empty())break;if(0!==i.item(0).indexOf(t)&&i.item(-1)!==e){this.__lines.splice(n+1,0,new r(this)),this.previous_line=this.__lines[this.__lines.length-2];break}n--}},t.exports.Output=a},,,,function(t,e,n){"use strict";function r(t,e){this.raw_options=i(t,e),this.disabled=this._get_boolean("disabled"),this.eol=this._get_characters("eol","auto"),this.end_with_newline=this._get_boolean("end_with_newline"),this.indent_size=this._get_number("indent_size",4),this.indent_char=this._get_characters("indent_char"," "),this.indent_level=this._get_number("indent_level"),this.preserve_newlines=this._get_boolean("preserve_newlines",!0),this.max_preserve_newlines=this._get_number("max_preserve_newlines",32786),this.preserve_newlines||(this.max_preserve_newlines=0),this.indent_with_tabs=this._get_boolean("indent_with_tabs","\t"===this.indent_char),this.indent_with_tabs&&(this.indent_char="\t",1===this.indent_size&&(this.indent_size=4)),this.wrap_line_length=this._get_number("wrap_line_length",this._get_number("max_char")),this.indent_empty_lines=this._get_boolean("indent_empty_lines"),this.templating=this._get_selection_list("templating",["auto","none","django","erb","handlebars","php"],["auto"])}function i(t,e){var n,r={};for(n in t=a(t))n!==e&&(r[n]=t[n]);if(e&&t[e])for(n in t[e])r[n]=t[e][n];return r}function a(t){var e,n={};for(e in t)n[e.replace(/-/g,"_")]=t[e];return n}r.prototype._get_array=function(t,e){var n=this.raw_options[t],r=e||[];return"object"==typeof n?null!==n&&"function"==typeof n.concat&&(r=n.concat()):"string"==typeof n&&(r=n.split(/[^a-zA-Z0-9_\/\-]+/)),r},r.prototype._get_boolean=function(t,e){var n=this.raw_options[t];return void 0===n?!!e:!!n},r.prototype._get_characters=function(t,e){var n=this.raw_options[t],r=e||"";return"string"==typeof n&&(r=n.replace(/\\r/,"\r").replace(/\\n/,"\n").replace(/\\t/,"\t")),r},r.prototype._get_number=function(t,e){var n=this.raw_options[t];e=parseInt(e,10),isNaN(e)&&(e=0);var r=parseInt(n,10);return isNaN(r)&&(r=e),r},r.prototype._get_selection=function(t,e,n){var r=this._get_selection_list(t,e,n);if(1!==r.length)throw new Error("Invalid Option Value: The option '"+t+"' can only be one of the following values:\n"+e+"\nYou passed in: '"+this.raw_options[t]+"'");return r[0]},r.prototype._get_selection_list=function(t,e,n){if(!e||0===e.length)throw new Error("Selection list cannot be empty.");if(n=n||[e[0]],!this._is_valid_selection(n,e))throw new Error("Invalid Default Value!");var r=this._get_array(t,n);if(!this._is_valid_selection(r,e))throw new Error("Invalid Option Value: The option '"+t+"' can contain only the following values:\n"+e+"\nYou passed in: '"+this.raw_options[t]+"'");return r},r.prototype._is_valid_selection=function(t,e){return t.length&&e.length&&!t.some((function(t){return-1===e.indexOf(t)}))},t.exports.Options=r,t.exports.normalizeOpts=a,t.exports.mergeOpts=i},,function(t,e,n){"use strict";var r=RegExp.prototype.hasOwnProperty("sticky");function i(t){this.__input=t||"",this.__input_length=this.__input.length,this.__position=0}i.prototype.restart=function(){this.__position=0},i.prototype.back=function(){this.__position>0&&(this.__position-=1)},i.prototype.hasNext=function(){return this.__position<this.__input_length},i.prototype.next=function(){var t=null;return this.hasNext()&&(t=this.__input.charAt(this.__position),this.__position+=1),t},i.prototype.peek=function(t){var e=null;return t=t||0,(t+=this.__position)>=0&&t<this.__input_length&&(e=this.__input.charAt(t)),e},i.prototype.__match=function(t,e){t.lastIndex=e;var n=t.exec(this.__input);return!n||r&&t.sticky||n.index!==e&&(n=null),n},i.prototype.test=function(t,e){return e=e||0,(e+=this.__position)>=0&&e<this.__input_length&&!!this.__match(t,e)},i.prototype.testChar=function(t,e){var n=this.peek(e);return t.lastIndex=0,null!==n&&t.test(n)},i.prototype.match=function(t){var e=this.__match(t,this.__position);return e?this.__position+=e[0].length:e=null,e},i.prototype.read=function(t,e,n){var r,i="";return t&&(r=this.match(t))&&(i+=r[0]),!e||!r&&t||(i+=this.readUntil(e,n)),i},i.prototype.readUntil=function(t,e){var n,r=this.__position;t.lastIndex=this.__position;var i=t.exec(this.__input);return i?(r=i.index,e&&(r+=i[0].length)):r=this.__input_length,n=this.__input.substring(this.__position,r),this.__position=r,n},i.prototype.readUntilAfter=function(t){return this.readUntil(t,!0)},i.prototype.get_regexp=function(t,e){var n=null,i="g";return e&&r&&(i="y"),"string"==typeof t&&""!==t?n=new RegExp(t,i):t&&(n=new RegExp(t.source,i)),n},i.prototype.get_literal_regexp=function(t){return RegExp(t.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&"))},i.prototype.peekUntilAfter=function(t){var e=this.__position,n=this.readUntilAfter(t);return this.__position=e,n},i.prototype.lookBack=function(t){var e=this.__position-1;return e>=t.length&&this.__input.substring(e-t.length,e).toLowerCase()===t},t.exports.InputScanner=i},,,,,function(t,e,n){"use strict";function r(t,e){t="string"==typeof t?t:t.source,e="string"==typeof e?e:e.source,this.__directives_block_pattern=new RegExp(t+/ beautify( \w+[:]\w+)+ /.source+e,"g"),this.__directive_pattern=/ (\w+)[:](\w+)/g,this.__directives_end_ignore_pattern=new RegExp(t+/\sbeautify\signore:end\s/.source+e,"g")}r.prototype.get_directives=function(t){if(!t.match(this.__directives_block_pattern))return null;var e={};this.__directive_pattern.lastIndex=0;for(var n=this.__directive_pattern.exec(t);n;)e[n[1]]=n[2],n=this.__directive_pattern.exec(t);return e},r.prototype.readIgnored=function(t){return t.readUntilAfter(this.__directives_end_ignore_pattern)},t.exports.Directives=r},,function(t,e,n){"use strict";var r=n(16).Beautifier,i=n(17).Options;t.exports=function(t,e){return new r(t,e).beautify()},t.exports.defaultOptions=function(){return new i}},function(t,e,n){"use strict";var r=n(17).Options,i=n(2).Output,a=n(8).InputScanner,o=new(0,n(13).Directives)(/\/\*/,/\*\//),s=/\r\n|[\r\n]/,u=/\r\n|[\r\n]/g,l=/\s/,c=/(?:\s|\n)+/g,p=/\/\*(?:[\s\S]*?)((?:\*\/)|$)/g,h=/\/\/(?:[^\n\r\u2028\u2029]*)/g;function f(t,e){this._source_text=t||"",this._options=new r(e),this._ch=null,this._input=null,this.NESTED_AT_RULE={"@page":!0,"@font-face":!0,"@keyframes":!0,"@media":!0,"@supports":!0,"@document":!0},this.CONDITIONAL_GROUP_RULE={"@media":!0,"@supports":!0,"@document":!0}}f.prototype.eatString=function(t){var e="";for(this._ch=this._input.next();this._ch;){if(e+=this._ch,"\\"===this._ch)e+=this._input.next();else if(-1!==t.indexOf(this._ch)||"\n"===this._ch)break;this._ch=this._input.next()}return e},f.prototype.eatWhitespace=function(t){for(var e=l.test(this._input.peek()),n=!0;l.test(this._input.peek());)this._ch=this._input.next(),t&&"\n"===this._ch&&(this._options.preserve_newlines||n)&&(n=!1,this._output.add_new_line(!0));return e},f.prototype.foundNestedPseudoClass=function(){for(var t=0,e=1,n=this._input.peek(e);n;){if("{"===n)return!0;if("("===n)t+=1;else if(")"===n){if(0===t)return!1;t-=1}else if(";"===n||"}"===n)return!1;e++,n=this._input.peek(e)}return!1},f.prototype.print_string=function(t){this._output.set_indent(this._indentLevel),this._output.non_breaking_space=!0,this._output.add_token(t)},f.prototype.preserveSingleSpace=function(t){t&&(this._output.space_before_token=!0)},f.prototype.indent=function(){this._indentLevel++},f.prototype.outdent=function(){this._indentLevel>0&&this._indentLevel--},f.prototype.beautify=function(){if(this._options.disabled)return this._source_text;var t=this._source_text,e=this._options.eol;"auto"===e&&(e="\n",t&&s.test(t||"")&&(e=t.match(s)[0]));var n=(t=t.replace(u,"\n")).match(/^[\t ]*/)[0];this._output=new i(this._options,n),this._input=new a(t),this._indentLevel=0,this._nestedLevel=0,this._ch=null;for(var r,f,d=0,_=!1,v=!1,m=!1,g=!1,b=!1,y=this._ch;r=""!==this._input.read(c),f=y,this._ch=this._input.next(),"\\"===this._ch&&this._input.hasNext()&&(this._ch+=this._input.next()),y=this._ch,this._ch;)if("/"===this._ch&&"*"===this._input.peek()){this._output.add_new_line(),this._input.back();var w=this._input.read(p),x=o.get_directives(w);x&&"start"===x.ignore&&(w+=o.readIgnored(this._input)),this.print_string(w),this.eatWhitespace(!0),this._output.add_new_line()}else if("/"===this._ch&&"/"===this._input.peek())this._output.space_before_token=!0,this._input.back(),this.print_string(this._input.read(h)),this.eatWhitespace(!0);else if("@"===this._ch)if(this.preserveSingleSpace(r),"{"===this._input.peek())this.print_string(this._ch+this.eatString("}"));else{this.print_string(this._ch);var k=this._input.peekUntilAfter(/[: ,;{}()[\]\/='"]/g);k.match(/[ :]$/)&&(k=this.eatString(": ").replace(/\s$/,""),this.print_string(k),this._output.space_before_token=!0),"extend"===(k=k.replace(/\s$/,""))?g=!0:"import"===k&&(b=!0),k in this.NESTED_AT_RULE?(this._nestedLevel+=1,k in this.CONDITIONAL_GROUP_RULE&&(m=!0)):_||0!==d||-1===k.indexOf(":")||(v=!0,this.indent())}else"#"===this._ch&&"{"===this._input.peek()?(this.preserveSingleSpace(r),this.print_string(this._ch+this.eatString("}"))):"{"===this._ch?(v&&(v=!1,this.outdent()),this.indent(),this._output.space_before_token=!0,this.print_string(this._ch),m?(m=!1,_=this._indentLevel>this._nestedLevel):_=this._indentLevel>=this._nestedLevel,this._options.newline_between_rules&&_&&this._output.previous_line&&"{"!==this._output.previous_line.item(-1)&&this._output.ensure_empty_line_above("/",","),this.eatWhitespace(!0),this._output.add_new_line()):"}"===this._ch?(this.outdent(),this._output.add_new_line(),"{"===f&&this._output.trim(!0),b=!1,g=!1,v&&(this.outdent(),v=!1),this.print_string(this._ch),_=!1,this._nestedLevel&&this._nestedLevel--,this.eatWhitespace(!0),this._output.add_new_line(),this._options.newline_between_rules&&!this._output.just_added_blankline()&&"}"!==this._input.peek()&&this._output.add_new_line(!0)):":"===this._ch?!_&&!m||this._input.lookBack("&")||this.foundNestedPseudoClass()||this._input.lookBack("(")||g||0!==d?(this._input.lookBack(" ")&&(this._output.space_before_token=!0),":"===this._input.peek()?(this._ch=this._input.next(),this.print_string("::")):this.print_string(":")):(this.print_string(":"),v||(v=!0,this._output.space_before_token=!0,this.eatWhitespace(!0),this.indent())):'"'===this._ch||"'"===this._ch?(this.preserveSingleSpace(r),this.print_string(this._ch+this.eatString(this._ch)),this.eatWhitespace(!0)):";"===this._ch?0===d?(v&&(this.outdent(),v=!1),g=!1,b=!1,this.print_string(this._ch),this.eatWhitespace(!0),"/"!==this._input.peek()&&this._output.add_new_line()):(this.print_string(this._ch),this.eatWhitespace(!0),this._output.space_before_token=!0):"("===this._ch?this._input.lookBack("url")?(this.print_string(this._ch),this.eatWhitespace(),d++,this.indent(),this._ch=this._input.next(),")"===this._ch||'"'===this._ch||"'"===this._ch?this._input.back():this._ch&&(this.print_string(this._ch+this.eatString(")")),d&&(d--,this.outdent()))):(this.preserveSingleSpace(r),this.print_string(this._ch),this.eatWhitespace(),d++,this.indent()):")"===this._ch?(d&&(d--,this.outdent()),this.print_string(this._ch)):","===this._ch?(this.print_string(this._ch),this.eatWhitespace(!0),!this._options.selector_separator_newline||v||0!==d||b?this._output.space_before_token=!0:this._output.add_new_line()):">"!==this._ch&&"+"!==this._ch&&"~"!==this._ch||v||0!==d?"]"===this._ch?this.print_string(this._ch):"["===this._ch?(this.preserveSingleSpace(r),this.print_string(this._ch)):"="===this._ch?(this.eatWhitespace(),this.print_string("="),l.test(this._ch)&&(this._ch="")):"!"!==this._ch||this._input.lookBack("\\")?(this.preserveSingleSpace(r),this.print_string(this._ch)):(this.print_string(" "),this.print_string(this._ch)):this._options.space_around_combinator?(this._output.space_before_token=!0,this.print_string(this._ch),this._output.space_before_token=!0):(this.print_string(this._ch),this.eatWhitespace(),this._ch&&l.test(this._ch)&&(this._ch=""));return this._output.get_code(e)},t.exports.Beautifier=f},function(t,e,n){"use strict";var r=n(6).Options;function i(t){r.call(this,t,"css"),this.selector_separator_newline=this._get_boolean("selector_separator_newline",!0),this.newline_between_rules=this._get_boolean("newline_between_rules",!0);var e=this._get_boolean("space_around_selector_separator");this.space_around_combinator=this._get_boolean("space_around_combinator")||e}i.prototype=new r,t.exports.Options=i}]),void 0===(r=function(){return{css_beautify:i}}.apply(e,[]))||(t.exports=r)},function(t,e){function n(e,r){return t.exports=n=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},n(e,r)}t.exports=n},function(t,e){var n,r,i=t.exports={};function a(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function s(t){if(n===setTimeout)return setTimeout(t,0);if((n===a||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:a}catch(t){n=a}try{r="function"==typeof clearTimeout?clearTimeout:o}catch(t){r=o}}();var u,l=[],c=!1,p=-1;function h(){c&&u&&(c=!1,u.length?l=u.concat(l):p=-1,l.length&&f())}function f(){if(!c){var t=s(h);c=!0;for(var e=l.length;e;){for(u=l,l=[];++p<e;)u&&u[p].run();p=-1,e=l.length}u=null,c=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===o||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function d(t,e){this.fun=t,this.array=e}function _(){}i.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];l.push(new d(t,e)),1!==l.length||c||s(f)},d.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=_,i.addListener=_,i.once=_,i.off=_,i.removeListener=_,i.removeAllListeners=_,i.emit=_,i.prependListener=_,i.prependOnceListener=_,i.listeners=function(t){return[]},i.binding=function(t){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(t){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}e.__esModule=!0,e.HandlebarsEnvironment=c;var i=n(10),a=r(n(13)),o=n(23),s=n(48),u=r(n(24)),l=n(25);function c(t,e,n){this.helpers=t||{},this.partials=e||{},this.decorators=n||{},o.registerDefaultHelpers(this),s.registerDefaultDecorators(this)}e.VERSION="4.7.3",e.COMPILER_REVISION=8,e.LAST_COMPATIBLE_COMPILER_REVISION=7,e.REVISION_CHANGES={1:"<= 1.0.rc.2",2:"== 1.0.0-rc.3",3:"== 1.0.0-rc.4",4:"== 1.x.x",5:"== 2.0.0-alpha.x",6:">= 2.0.0-beta.1",7:">= 4.0.0 <4.3.0",8:">= 4.3.0"},c.prototype={constructor:c,logger:u.default,log:u.default.log,registerHelper:function(t,e){if("[object Object]"===i.toString.call(t)){if(e)throw new a.default("Arg not supported with multiple helpers");i.extend(this.helpers,t)}else this.helpers[t]=e},unregisterHelper:function(t){delete this.helpers[t]},registerPartial:function(t,e){if("[object Object]"===i.toString.call(t))i.extend(this.partials,t);else{if(void 0===e)throw new a.default('Attempting to register a partial called "'+t+'" as undefined');this.partials[t]=e}},unregisterPartial:function(t){delete this.partials[t]},registerDecorator:function(t,e){if("[object Object]"===i.toString.call(t)){if(e)throw new a.default("Arg not supported with multiple decorators");i.extend(this.decorators,t)}else this.decorators[t]=e},unregisterDecorator:function(t){delete this.decorators[t]},resetLoggedPropertyAccesses:function(){l.resetLoggedProperties()}};var p=u.default.log;e.log=p,e.createFrame=i.createFrame,e.logger=u.default},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}e.__esModule=!0,e.registerDefaultHelpers=function(t){i.default(t),a.default(t),o.default(t),s.default(t),u.default(t),l.default(t),c.default(t)},e.moveHelperToHooks=function(t,e,n){t.helpers[e]&&(t.hooks[e]=t.helpers[e],n||delete t.helpers[e])};var i=r(n(41)),a=r(n(42)),o=r(n(43)),s=r(n(44)),u=r(n(45)),l=r(n(46)),c=r(n(47))},function(t,e,n){"use strict";e.__esModule=!0;var r=n(10),i={methodMap:["debug","info","warn","error"],level:"info",lookupLevel:function(t){if("string"==typeof t){var e=r.indexOf(i.methodMap,t.toLowerCase());t=e>=0?e:parseInt(t,10)}return t},log:function(t){if(t=i.lookupLevel(t),"undefined"!=typeof console&&i.lookupLevel(i.level)<=t){var e=i.methodMap[t];console[e]||(e="log");for(var n=arguments.length,r=Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];console[e].apply(console,r)}}};e.default=i,t.exports=e.default},function(t,e,n){"use strict";e.__esModule=!0,e.createProtoAccessControl=function(t){var e=Object.create(null);e.constructor=!1,e.__defineGetter__=!1,e.__defineSetter__=!1,e.__lookupGetter__=!1;var n=Object.create(null);return n.__proto__=!1,{properties:{whitelist:r.createNewLookupObject(n,t.allowedProtoProperties),defaultValue:t.allowProtoPropertiesByDefault},methods:{whitelist:r.createNewLookupObject(e,t.allowedProtoMethods),defaultValue:t.allowProtoMethodsByDefault}}},e.resultIsAllowed=function(t,e,n){return function(t,e){return void 0!==t.whitelist[e]?!0===t.whitelist[e]:void 0!==t.defaultValue?t.defaultValue:(function(t){!0!==a[t]&&(a[t]=!0,i.log("error",'Handlebars: Access has been denied to resolve the property "'+t+'" because it is not an "own property" of its parent.\nYou can add a runtime option to disable the check or this warning:\nSee https://handlebarsjs.com/api-reference/runtime-options.html#options-to-control-prototype-access for details'))}(e),!1)}("function"==typeof t?e.methods:e.properties,n)},e.resetLoggedProperties=function(){Object.keys(a).forEach((function(t){delete a[t]}))};var r=n(50),i=function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e.default=t,e}(n(24)),a=Object.create(null)},function(t,e,n){(e=n(8)(!1)).push([t.i,"@font-face{$ff:eruda-icon;src:url('data:application/x-font-woff;charset=utf-8;base64,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') format('woff')}[class*=' _icon-'],[class^='_icon-']{$ff:eruda-icon!important;$fs:16px;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}._icon-arrow-left:before{$co:'\\f101'}._icon-arrow-right:before{$co:'\\f102'}._icon-caret-down:before{$co:'\\f103'}._icon-caret-right:before{$co:'\\f104'}._icon-clear:before{$co:'\\f105'}._icon-compress:before{$co:'\\f106'}._icon-delete:before{$co:'\\f107'}._icon-error:before{$co:'\\f108'}._icon-expand:before{$co:'\\f109'}._icon-eye:before{$co:'\\f10a'}._icon-play:before{$co:'\\f10b'}._icon-refresh:before{$co:'\\f10c'}._icon-reset:before{$co:'\\f10d'}._icon-search:before{$co:'\\f10e'}._icon-select:before{$co:'\\f10f'}._icon-tool:before{$co:'\\f110'}._icon-warn:before{$co:'\\f111'}",""]),t.exports=e},function(t,e,n){var r,i,a;a=window,r=[n(31),n(32)],void 0===(i=function(t,e){return function(t,e,n){"use strict";function r(t,e){for(var n in e)t[n]=e[n];return t}var i=t.jQuery;function a(t,e){this.element="string"==typeof t?document.querySelector(t):t,i&&(this.$element=i(this.element)),this.options=r({},this.constructor.defaults),this.option(e),this._create()}var o=a.prototype=Object.create(n.prototype);a.defaults={},o.option=function(t){r(this.options,t)};var s={relative:!0,absolute:!0,fixed:!0};function u(t,e,n){return n=n||"round",e?Math[n](t/e)*e:t}return o._create=function(){this.position={},this._getPosition(),this.startPoint={x:0,y:0},this.dragPoint={x:0,y:0},this.startPosition=r({},this.position);var t=getComputedStyle(this.element);s[t.position]||(this.element.style.position="relative"),this.on("pointerDown",this.onPointerDown),this.on("pointerMove",this.onPointerMove),this.on("pointerUp",this.onPointerUp),this.enable(),this.setHandles()},o.setHandles=function(){this.handles=this.options.handle?this.element.querySelectorAll(this.options.handle):[this.element],this.bindHandles()},o.dispatchEvent=function(t,e,n){var r=[e].concat(n);this.emitEvent(t,r),this.dispatchJQueryEvent(t,e,n)},o.dispatchJQueryEvent=function(e,n,r){var i=t.jQuery;if(i&&this.$element){var a=i.Event(n);a.type=e,this.$element.trigger(a,r)}},o._getPosition=function(){var t=getComputedStyle(this.element),e=this._getPositionCoord(t.left,"width"),n=this._getPositionCoord(t.top,"height");this.position.x=isNaN(e)?0:e,this.position.y=isNaN(n)?0:n,this._addTransformPosition(t)},o._getPositionCoord=function(t,n){if(-1!=t.indexOf("%")){var r=e(this.element.parentNode);return r?parseFloat(t)/100*r[n]:0}return parseInt(t,10)},o._addTransformPosition=function(t){var e=t.transform;if(0===e.indexOf("matrix")){var n=e.split(","),r=0===e.indexOf("matrix3d")?12:4,i=parseInt(n[r],10),a=parseInt(n[r+1],10);this.position.x+=i,this.position.y+=a}},o.onPointerDown=function(t,e){this.element.classList.add("is-pointer-down"),this.dispatchJQueryEvent("pointerDown",t,[e])},o.dragStart=function(t,e){this.isEnabled&&(this._getPosition(),this.measureContainment(),this.startPosition.x=this.position.x,this.startPosition.y=this.position.y,this.setLeftTop(),this.dragPoint.x=0,this.dragPoint.y=0,this.element.classList.add("is-dragging"),this.dispatchEvent("dragStart",t,[e]),this.animate())},o.measureContainment=function(){var t=this.getContainer();if(t){var n=e(this.element),r=e(t),i=this.element.getBoundingClientRect(),a=t.getBoundingClientRect(),o=r.borderLeftWidth+r.borderRightWidth,s=r.borderTopWidth+r.borderBottomWidth,u=this.relativeStartPosition={x:i.left-(a.left+r.borderLeftWidth),y:i.top-(a.top+r.borderTopWidth)};this.containSize={width:r.width-o-u.x-n.width,height:r.height-s-u.y-n.height}}},o.getContainer=function(){var t=this.options.containment;if(t)return t instanceof HTMLElement?t:"string"==typeof t?document.querySelector(t):this.element.parentNode},o.onPointerMove=function(t,e,n){this.dispatchJQueryEvent("pointerMove",t,[e,n])},o.dragMove=function(t,e,n){if(this.isEnabled){var r=n.x,i=n.y,a=this.options.grid,o=a&&a[0],s=a&&a[1];r=u(r,o),i=u(i,s),r=this.containDrag("x",r,o),i=this.containDrag("y",i,s),r="y"==this.options.axis?0:r,i="x"==this.options.axis?0:i,this.position.x=this.startPosition.x+r,this.position.y=this.startPosition.y+i,this.dragPoint.x=r,this.dragPoint.y=i,this.dispatchEvent("dragMove",t,[e,n])}},o.containDrag=function(t,e,n){if(!this.options.containment)return e;var r="x"==t?"width":"height",i=u(-this.relativeStartPosition[t],n,"ceil"),a=this.containSize[r];return a=u(a,n,"floor"),Math.max(i,Math.min(a,e))},o.onPointerUp=function(t,e){this.element.classList.remove("is-pointer-down"),this.dispatchJQueryEvent("pointerUp",t,[e])},o.dragEnd=function(t,e){this.isEnabled&&(this.element.style.transform="",this.setLeftTop(),this.element.classList.remove("is-dragging"),this.dispatchEvent("dragEnd",t,[e]))},o.animate=function(){if(this.isDragging){this.positionDrag();var t=this;requestAnimationFrame((function(){t.animate()}))}},o.setLeftTop=function(){this.element.style.left=this.position.x+"px",this.element.style.top=this.position.y+"px"},o.positionDrag=function(){this.element.style.transform="translate3d( "+this.dragPoint.x+"px, "+this.dragPoint.y+"px, 0)"},o.staticClick=function(t,e){this.dispatchEvent("staticClick",t,[e])},o.setPosition=function(t,e){this.position.x=t,this.position.y=e,this.setLeftTop()},o.enable=function(){this.isEnabled=!0},o.disable=function(){this.isEnabled=!1,this.isDragging&&this.dragEnd()},o.destroy=function(){this.disable(),this.element.style.transform="",this.element.style.left="",this.element.style.top="",this.element.style.position="",this.unbindHandles(),this.$element&&this.$element.removeData("draggabilly")},o._init=function(){},i&&i.bridget&&i.bridget("draggabilly",a),a}(a,t,e)}.apply(e,r))||(t.exports=i)},function(t,e){t.exports={background:"b","background-image":"bi",border:"bo","border-bottom":"bb","border-collapse":"bc","border-left-color":"blc","border-right":"br","border-radius":"bra","border-top":"bt","border-top-color":"btc","box-shadow":"bs","box-sizing":"bsi",clear:"cl",color:"c",content:"co",cursor:"cu",display:"d",flex:"fl","flex-shrink":"fsh",float:"f","font-family":"ff","font-size":"fs","font-weight":"fw",height:"h",left:"l","line-height":"lh",margin:"m","margin-bottom":"mb","margin-left":"ml","margin-top":"mt","min-height":"mh",outline:"ou",overflow:"o","overflow-x":"ox","overflow-y":"oy",padding:"p","padding-bottom":"pb","padding-left":"pl","padding-top":"pt","pointer-events":"pe",position:"po","text-align":"ta","text-transform":"tt",top:"t",transition:"tr","user-select":"us","vertical-aligin":"va",visibility:"v",width:"w","will-change":"wc","white-space":"ws","-webkit-overflow-scrolling":"wos","z-index":"z"}},function(t,e,n){var r=n(20);function i(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}function a(e,n,o){return i()?t.exports=a=Reflect.construct:t.exports=a=function(t,e,n){var i=[null];i.push.apply(i,e);var a=new(Function.bind.apply(t,i));return n&&r(a,n.prototype),a},a.apply(null,arguments)}t.exports=a},function(t,e,n){t.exports=n(97).default},function(t,e,n){var r,i;window,void 0===(i="function"==typeof(r=function(){"use strict";function t(t){var e=parseFloat(t);return-1==t.indexOf("%")&&!isNaN(e)&&e}var e="undefined"==typeof console?function(){}:function(t){console.error(t)},n=["paddingLeft","paddingRight","paddingTop","paddingBottom","marginLeft","marginRight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth"],r=n.length;function i(t){var n=getComputedStyle(t);return n||e("Style returned "+n+". Are you running this code in a hidden iframe on Firefox? See https://bit.ly/getsizebug1"),n}var a,o=!1;return function e(s){if(function(){if(!o){o=!0;var n=document.createElement("div");n.style.width="200px",n.style.padding="1px 2px 3px 4px",n.style.borderStyle="solid",n.style.borderWidth="1px 2px 3px 4px",n.style.boxSizing="border-box";var r=document.body||document.documentElement;r.appendChild(n);var s=i(n);a=200==Math.round(t(s.width)),e.isBoxSizeOuter=a,r.removeChild(n)}}(),"string"==typeof s&&(s=document.querySelector(s)),s&&"object"==typeof s&&s.nodeType){var u=i(s);if("none"==u.display)return function(){for(var t={width:0,height:0,innerWidth:0,innerHeight:0,outerWidth:0,outerHeight:0},e=0;e<r;e++)t[n[e]]=0;return t}();var l={};l.width=s.offsetWidth,l.height=s.offsetHeight;for(var c=l.isBorderBox="border-box"==u.boxSizing,p=0;p<r;p++){var h=n[p],f=u[h],d=parseFloat(f);l[h]=isNaN(d)?0:d}var _=l.paddingLeft+l.paddingRight,v=l.paddingTop+l.paddingBottom,m=l.marginLeft+l.marginRight,g=l.marginTop+l.marginBottom,b=l.borderLeftWidth+l.borderRightWidth,y=l.borderTopWidth+l.borderBottomWidth,w=c&&a,x=t(u.width);!1!==x&&(l.width=x+(w?0:_+b));var k=t(u.height);return!1!==k&&(l.height=k+(w?0:v+y)),l.innerWidth=l.width-(_+b),l.innerHeight=l.height-(v+y),l.outerWidth=l.width+m,l.outerHeight=l.height+g,l}}})?r.call(e,n,e,t):r)||(t.exports=i)},function(t,e,n){var r,i,a;a=window,r=[n(33)],void 0===(i=function(t){return function(t,e){"use strict";function n(){}var r=n.prototype=Object.create(e.prototype);r.bindHandles=function(){this._bindHandles(!0)},r.unbindHandles=function(){this._bindHandles(!1)},r._bindHandles=function(e){for(var n=(e=void 0===e||e)?"addEventListener":"removeEventListener",r=e?this._touchActionValue:"",i=0;i<this.handles.length;i++){var a=this.handles[i];this._bindStartEvent(a,e),a[n]("click",this),t.PointerEvent&&(a.style.touchAction=r)}},r._touchActionValue="none",r.pointerDown=function(t,e){this.okayPointerDown(t)&&(this.pointerDownPointer=e,t.preventDefault(),this.pointerDownBlur(),this._bindPostStartEvents(t),this.emitEvent("pointerDown",[t,e]))};var i={TEXTAREA:!0,INPUT:!0,SELECT:!0,OPTION:!0},a={radio:!0,checkbox:!0,button:!0,submit:!0,image:!0,file:!0};return r.okayPointerDown=function(t){var e=i[t.target.nodeName],n=a[t.target.type],r=!e||n;return r||this._pointerReset(),r},r.pointerDownBlur=function(){var t=document.activeElement;t&&t.blur&&t!=document.body&&t.blur()},r.pointerMove=function(t,e){var n=this._dragPointerMove(t,e);this.emitEvent("pointerMove",[t,e,n]),this._dragMove(t,e,n)},r._dragPointerMove=function(t,e){var n={x:e.pageX-this.pointerDownPointer.pageX,y:e.pageY-this.pointerDownPointer.pageY};return!this.isDragging&&this.hasDragStarted(n)&&this._dragStart(t,e),n},r.hasDragStarted=function(t){return Math.abs(t.x)>3||Math.abs(t.y)>3},r.pointerUp=function(t,e){this.emitEvent("pointerUp",[t,e]),this._dragPointerUp(t,e)},r._dragPointerUp=function(t,e){this.isDragging?this._dragEnd(t,e):this._staticClick(t,e)},r._dragStart=function(t,e){this.isDragging=!0,this.isPreventingClicks=!0,this.dragStart(t,e)},r.dragStart=function(t,e){this.emitEvent("dragStart",[t,e])},r._dragMove=function(t,e,n){this.isDragging&&this.dragMove(t,e,n)},r.dragMove=function(t,e,n){t.preventDefault(),this.emitEvent("dragMove",[t,e,n])},r._dragEnd=function(t,e){this.isDragging=!1,setTimeout(function(){delete this.isPreventingClicks}.bind(this)),this.dragEnd(t,e)},r.dragEnd=function(t,e){this.emitEvent("dragEnd",[t,e])},r.onclick=function(t){this.isPreventingClicks&&t.preventDefault()},r._staticClick=function(t,e){this.isIgnoringMouseUp&&"mouseup"==t.type||(this.staticClick(t,e),"mouseup"!=t.type&&(this.isIgnoringMouseUp=!0,setTimeout(function(){delete this.isIgnoringMouseUp}.bind(this),400)))},r.staticClick=function(t,e){this.emitEvent("staticClick",[t,e])},n.getPointerPoint=e.getPointerPoint,n}(a,t)}.apply(e,r))||(t.exports=i)},function(t,e,n){var r,i,a;a=window,r=[n(34)],void 0===(i=function(t){return function(t,e){"use strict";function n(){}var r=n.prototype=Object.create(e.prototype);r.bindStartEvent=function(t){this._bindStartEvent(t,!0)},r.unbindStartEvent=function(t){this._bindStartEvent(t,!1)},r._bindStartEvent=function(e,n){var r=(n=void 0===n||n)?"addEventListener":"removeEventListener",i="mousedown";t.PointerEvent?i="pointerdown":"ontouchstart"in t&&(i="touchstart"),e[r](i,this)},r.handleEvent=function(t){var e="on"+t.type;this[e]&&this[e](t)},r.getTouch=function(t){for(var e=0;e<t.length;e++){var n=t[e];if(n.identifier==this.pointerIdentifier)return n}},r.onmousedown=function(t){var e=t.button;e&&0!==e&&1!==e||this._pointerDown(t,t)},r.ontouchstart=function(t){this._pointerDown(t,t.changedTouches[0])},r.onpointerdown=function(t){this._pointerDown(t,t)},r._pointerDown=function(t,e){t.button||this.isPointerDown||(this.isPointerDown=!0,this.pointerIdentifier=void 0!==e.pointerId?e.pointerId:e.identifier,this.pointerDown(t,e))},r.pointerDown=function(t,e){this._bindPostStartEvents(t),this.emitEvent("pointerDown",[t,e])};var i={mousedown:["mousemove","mouseup"],touchstart:["touchmove","touchend","touchcancel"],pointerdown:["pointermove","pointerup","pointercancel"]};return r._bindPostStartEvents=function(e){if(e){var n=i[e.type];n.forEach((function(e){t.addEventListener(e,this)}),this),this._boundPointerEvents=n}},r._unbindPostStartEvents=function(){this._boundPointerEvents&&(this._boundPointerEvents.forEach((function(e){t.removeEventListener(e,this)}),this),delete this._boundPointerEvents)},r.onmousemove=function(t){this._pointerMove(t,t)},r.onpointermove=function(t){t.pointerId==this.pointerIdentifier&&this._pointerMove(t,t)},r.ontouchmove=function(t){var e=this.getTouch(t.changedTouches);e&&this._pointerMove(t,e)},r._pointerMove=function(t,e){this.pointerMove(t,e)},r.pointerMove=function(t,e){this.emitEvent("pointerMove",[t,e])},r.onmouseup=function(t){this._pointerUp(t,t)},r.onpointerup=function(t){t.pointerId==this.pointerIdentifier&&this._pointerUp(t,t)},r.ontouchend=function(t){var e=this.getTouch(t.changedTouches);e&&this._pointerUp(t,e)},r._pointerUp=function(t,e){this._pointerDone(),this.pointerUp(t,e)},r.pointerUp=function(t,e){this.emitEvent("pointerUp",[t,e])},r._pointerDone=function(){this._pointerReset(),this._unbindPostStartEvents(),this.pointerDone()},r._pointerReset=function(){this.isPointerDown=!1,delete this.pointerIdentifier},r.pointerDone=function(){},r.onpointercancel=function(t){t.pointerId==this.pointerIdentifier&&this._pointerCancel(t,t)},r.ontouchcancel=function(t){var e=this.getTouch(t.changedTouches);e&&this._pointerCancel(t,e)},r._pointerCancel=function(t,e){this._pointerDone(),this.pointerCancel(t,e)},r.pointerCancel=function(t,e){this.emitEvent("pointerCancel",[t,e])},n.getPointerPoint=function(t){return{x:t.pageX,y:t.pageY}},n}(a,t)}.apply(e,r))||(t.exports=i)},function(t,e,n){var r,i;"undefined"!=typeof window&&window,void 0===(i="function"==typeof(r=function(){"use strict";function t(){}var e=t.prototype;return e.on=function(t,e){if(t&&e){var n=this._events=this._events||{},r=n[t]=n[t]||[];return-1==r.indexOf(e)&&r.push(e),this}},e.once=function(t,e){if(t&&e){this.on(t,e);var n=this._onceEvents=this._onceEvents||{};return(n[t]=n[t]||{})[e]=!0,this}},e.off=function(t,e){var n=this._events&&this._events[t];if(n&&n.length){var r=n.indexOf(e);return-1!=r&&n.splice(r,1),this}},e.emitEvent=function(t,e){var n=this._events&&this._events[t];if(n&&n.length){n=n.slice(0),e=e||[];for(var r=this._onceEvents&&this._onceEvents[t],i=0;i<n.length;i++){var a=n[i];r&&r[a]&&(this.off(t,a),delete r[a]),a.apply(this,e)}return this}},e.allOff=function(){delete this._events,delete this._onceEvents},t})?r.call(e,n,e,t):r)||(t.exports=i)},function(t,e,n){(function(t){var r=void 0!==t&&t||"undefined"!=typeof self&&self||window,i=Function.prototype.apply;function a(t,e){this._id=t,this._clearFn=e}e.setTimeout=function(){return new a(i.call(setTimeout,r,arguments),clearTimeout)},e.setInterval=function(){return new a(i.call(setInterval,r,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(t){t&&t.close()},a.prototype.unref=a.prototype.ref=function(){},a.prototype.close=function(){this._clearFn.call(r,this._id)},e.enroll=function(t,e){clearTimeout(t._idleTimeoutId),t._idleTimeout=e},e.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},e._unrefActive=e.active=function(t){clearTimeout(t._idleTimeoutId);var e=t._idleTimeout;e>=0&&(t._idleTimeoutId=setTimeout((function(){t._onTimeout&&t._onTimeout()}),e))},n(36),e.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==t&&t.setImmediate||this&&this.setImmediate,e.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==t&&t.clearImmediate||this&&this.clearImmediate}).call(this,n(16))},function(t,e,n){(function(t,e){!function(t,n){"use strict";if(!t.setImmediate){var r,i,a,o,s,u=1,l={},c=!1,p=t.document,h=Object.getPrototypeOf&&Object.getPrototypeOf(t);h=h&&h.setTimeout?h:t,"[object process]"==={}.toString.call(t.process)?r=function(t){e.nextTick((function(){d(t)}))}:function(){if(t.postMessage&&!t.importScripts){var e=!0,n=t.onmessage;return t.onmessage=function(){e=!1},t.postMessage("","*"),t.onmessage=n,e}}()?(o="setImmediate$"+Math.random()+"$",s=function(e){e.source===t&&"string"==typeof e.data&&0===e.data.indexOf(o)&&d(+e.data.slice(o.length))},t.addEventListener?t.addEventListener("message",s,!1):t.attachEvent("onmessage",s),r=function(e){t.postMessage(o+e,"*")}):t.MessageChannel?((a=new MessageChannel).port1.onmessage=function(t){d(t.data)},r=function(t){a.port2.postMessage(t)}):p&&"onreadystatechange"in p.createElement("script")?(i=p.documentElement,r=function(t){var e=p.createElement("script");e.onreadystatechange=function(){d(t),e.onreadystatechange=null,i.removeChild(e),e=null},i.appendChild(e)}):r=function(t){setTimeout(d,0,t)},h.setImmediate=function(t){"function"!=typeof t&&(t=new Function(""+t));for(var e=new Array(arguments.length-1),n=0;n<e.length;n++)e[n]=arguments[n+1];var i={callback:t,args:e};return l[u]=i,r(u),u++},h.clearImmediate=f}function f(t){delete l[t]}function d(t){if(c)setTimeout(d,0,t);else{var e=l[t];if(e){c=!0;try{!function(t){var e=t.callback,n=t.args;switch(n.length){case 0:e();break;case 1:e(n[0]);break;case 2:e(n[0],n[1]);break;case 3:e(n[0],n[1],n[2]);break;default:e.apply(void 0,n)}}(e)}finally{f(t),c=!1}}}}}("undefined"==typeof self?void 0===t?this:t:self)}).call(this,n(16),n(21))},function(t,e,n){var r=n(1);t.exports=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=r(t)););return t}},function(t,e,n){(e=n(8)(!1)).push([t.i,"#_settings{$oy:auto;$wos:touch}#_settings ._separator{$h:10px}#_settings ._text{$p:10px;$c:var(--accent);$fs:12px}#_settings ._color,#_settings ._range,#_settings ._select{$cu:pointer}#_settings ._color ._head,#_settings ._range ._head,#_settings ._select ._head,#_settings ._switch{$p:10px;$b:var(--darker-background);$fs:14px;$bb:1px solid var(--border);$bt:1px solid var(--border);$c:var(--primary);$mt:-1px}#_settings ._color ._head,#_settings ._range ._head,#_settings ._select ._head{$tr:background .3s,color .3s}#_settings ._color ._head span,#_settings ._range ._head span,#_settings ._select ._head span{$f:right}#_settings ._color ._head:active,#_settings ._range ._head:active,#_settings ._select ._head:active{$b:var(--highlight);$c:var(--select-foreground)}#_settings ._color ._head span{$d:inline-block;$bo:1px solid var(--border);$w:15px;$h:15px}#_settings ._select ul{$d:none;$bb:1px solid var(--border);$c:var(--foreground)}#_settings ._select ul._open{$d:block}#_settings ._select ul li{$p:10px;$tr:background .3s,color .3s}#_settings ._select ul li:active{$b:var(--highlight);$c:var(--select-foreground)}#_settings ._color ul{$d:none;$p:10px;$fs:0;$bb:1px solid var(--border)}#_settings ._color ul._open{$d:block}#_settings ._color ul li{$d:inline-block;$w:20px;$bo:1px solid var(--border);$h:20px;margin-right:10px}#_settings ._range ._input-container{$d:none;$p:10px;$bb:1px solid var(--border);$po:relative}#_settings ._range ._input-container._open{$d:block}#_settings ._range ._input-container ._range-track{$h:4px;$w:100%;$p:0 10px;$po:absolute;$l:0;$t:16px}#_settings ._range ._input-container ._range-track ._range-track-bar{$b:var(--darker-background);$bra:2px;$o:hidden;$w:100%;$h:4px}#_settings ._range ._input-container ._range-track ._range-track-bar ._range-track-progress{$h:100%;$b:var(--accent);$w:50%}#_settings ._range ._input-container input{-webkit-appearance:none;$b:0 0;$h:4px;$w:100%;$po:relative;$t:-3px;$m:0 auto;$ou:0;$bra:2px}#_settings ._range ._input-container input::-webkit-slider-thumb{-webkit-appearance:none;$po:relative;$t:0;$z:1;$w:16px;$bo:none;$h:16px;$bra:10px;$bo:1px solid var(--border);$b:radial-gradient(circle at center,var(--dark) 0,var(--dark) 15%,var(--light) 22%,var(--light) 100%)}#_settings ._switch ._checkbox{$f:right;$po:relative;vertical-align:top;$w:46px;$h:20px;$p:3px;$bra:18px;$bo:1px solid var(--border);$cu:pointer;$bi:linear-gradient(to bottom,var(--dark),var(--light) 25px)}#_settings ._switch ._checkbox ._input{$po:absolute;$t:0;$l:0;opacity:0}#_settings ._switch ._checkbox ._label{$pe:none;$po:relative;$d:block;$h:12px;$fs:10px;$tt:uppercase;$b:var(--darker-background);$bra:inherit;$bs:inset 0 1px 2px rgba(0,0,0,.12),inset 0 0 2px rgba(0,0,0,.15);$tr:.15s ease-out;transition-property:opacity background}#_settings ._switch ._checkbox ._label:after,#_settings ._switch ._checkbox ._label:before{$po:absolute;$t:50%;$mt:-.5em;$lh:1;$tr:inherit}#_settings ._switch ._checkbox ._input:checked~._label{$b:var(--accent);$bs:inset 0 1px 2px rgba(0,0,0,.15),inset 0 0 3px rgba(0,0,0,.2)}#_settings ._switch ._checkbox ._input:checked~._label:before{opacity:0}#_settings ._switch ._checkbox ._input:checked~._label:after{opacity:1}#_settings ._switch ._checkbox ._handle{$po:absolute;$pe:none;$t:0;$l:0;$w:18px;$h:18px;$bra:10px;$bs:1px 1px 5px rgba(0,0,0,.2);$bi:linear-gradient(to bottom,var(--light) 40%,var(--dark));$tr:left .15s ease-out}#_settings ._switch ._checkbox ._handle:before{$co:'';$po:absolute;$t:50%;$l:50%;$m:-6px 0 0 -6px;$w:12px;$h:12px;$bra:6px;$bs:inset 0 1px rgba(0,0,0,.02);$bi:linear-gradient(to bottom,var(--dark),var(--light))}#_settings ._switch ._checkbox ._input:checked~._handle{$l:30px;$bs:-1px 1px 5px rgba(0,0,0,.2)}",""]),t.exports=e},function(t,e,n){var r=n(7);t.exports=(r.default||r).template({1:function(t,e,n,r,i){return' checked="checked" '},compiler:[8,">= 4.3.0"],main:function(t,e,n,r,i){var a,o=t.lambda,s=t.escapeExpression,u=null!=e?e:t.nullContext||{},l=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return'<div id="'+s(o(null!=e?l(e,"id"):e,e))+'" '+(null!=(a=l(n,"class").call(u,"switch",{name:"class",hash:{},data:i}))?a:"")+"> "+s(o(null!=e?l(e,"desc"):e,e))+" <label "+(null!=(a=l(n,"class").call(u,"checkbox",{name:"class",hash:{},data:i}))?a:"")+'><input type="checkbox" '+(null!=(a=l(n,"class").call(u,"input",{name:"class",hash:{},data:i}))?a:"")+' data-id="'+s(o(null!=e?l(e,"id"):e,e))+'" '+(null!=(a=l(n,"if").call(u,null!=e?l(e,"val"):e,{name:"if",hash:{},fn:t.program(1,i,0),inverse:t.noop,data:i}))?a:"")+"> <span "+(null!=(a=l(n,"class").call(u,"label",{name:"class",hash:{},data:i}))?a:"")+"></span> <span "+(null!=(a=l(n,"class").call(u,"handle",{name:"class",hash:{},data:i}))?a:"")+"></span></label></div>"},useData:!0})},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function i(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e.default=t,e}e.__esModule=!0;var a=i(n(22)),o=r(n(51)),s=r(n(13)),u=i(n(10)),l=i(n(52)),c=r(n(54));function p(){var t=new a.HandlebarsEnvironment;return u.extend(t,a),t.SafeString=o.default,t.Exception=s.default,t.Utils=u,t.escapeExpression=u.escapeExpression,t.VM=l,t.template=function(e){return l.template(e,t)},t}var h=p();h.create=p,c.default(h),h.default=h,e.default=h,t.exports=e.default},function(t,e,n){"use strict";e.__esModule=!0;var r=n(10);e.default=function(t){t.registerHelper("blockHelperMissing",(function(e,n){var i=n.inverse,a=n.fn;if(!0===e)return a(this);if(!1===e||null==e)return i(this);if(r.isArray(e))return e.length>0?(n.ids&&(n.ids=[n.name]),t.helpers.each(e,n)):i(this);if(n.data&&n.ids){var o=r.createFrame(n.data);o.contextPath=r.appendContextPath(n.data.contextPath,n.name),n={data:o}}return a(e,n)}))},t.exports=e.default},function(t,e,n){"use strict";(function(r){e.__esModule=!0;var i,a=n(10),o=(i=n(13))&&i.__esModule?i:{default:i};e.default=function(t){t.registerHelper("each",(function(t,e){if(!e)throw new o.default("Must pass iterator to #each");var n,i=e.fn,s=e.inverse,u=0,l="",c=void 0,p=void 0;function h(e,n,r){c&&(c.key=e,c.index=n,c.first=0===n,c.last=!!r,p&&(c.contextPath=p+e)),l+=i(t[e],{data:c,blockParams:a.blockParams([t[e],e],[p+e,null])})}if(e.data&&e.ids&&(p=a.appendContextPath(e.data.contextPath,e.ids[0])+"."),a.isFunction(t)&&(t=t.call(this)),e.data&&(c=a.createFrame(e.data)),t&&"object"==typeof t)if(a.isArray(t))for(var f=t.length;u<f;u++)u in t&&h(u,u,u===t.length-1);else if(r.Symbol&&t[r.Symbol.iterator]){for(var d=[],_=t[r.Symbol.iterator](),v=_.next();!v.done;v=_.next())d.push(v.value);for(f=(t=d).length;u<f;u++)h(u,u,u===t.length-1)}else n=void 0,Object.keys(t).forEach((function(t){void 0!==n&&h(n,u-1),n=t,u++})),void 0!==n&&h(n,u-1,!0);return 0===u&&(l=s(this)),l}))},t.exports=e.default}).call(this,n(16))},function(t,e,n){"use strict";e.__esModule=!0;var r,i=(r=n(13))&&r.__esModule?r:{default:r};e.default=function(t){t.registerHelper("helperMissing",(function(){if(1!==arguments.length)throw new i.default('Missing helper: "'+arguments[arguments.length-1].name+'"')}))},t.exports=e.default},function(t,e,n){"use strict";e.__esModule=!0;var r,i=n(10),a=(r=n(13))&&r.__esModule?r:{default:r};e.default=function(t){t.registerHelper("if",(function(t,e){if(2!=arguments.length)throw new a.default("#if requires exactly one argument");return i.isFunction(t)&&(t=t.call(this)),!e.hash.includeZero&&!t||i.isEmpty(t)?e.inverse(this):e.fn(this)})),t.registerHelper("unless",(function(e,n){if(2!=arguments.length)throw new a.default("#unless requires exactly one argument");return t.helpers.if.call(this,e,{fn:n.inverse,inverse:n.fn,hash:n.hash})}))},t.exports=e.default},function(t,e,n){"use strict";e.__esModule=!0,e.default=function(t){t.registerHelper("log",(function(){for(var e=[void 0],n=arguments[arguments.length-1],r=0;r<arguments.length-1;r++)e.push(arguments[r]);var i=1;null!=n.hash.level?i=n.hash.level:n.data&&null!=n.data.level&&(i=n.data.level),e[0]=i,t.log.apply(t,e)}))},t.exports=e.default},function(t,e,n){"use strict";e.__esModule=!0,e.default=function(t){t.registerHelper("lookup",(function(t,e,n){return t?n.lookupProperty(t,e):t}))},t.exports=e.default},function(t,e,n){"use strict";e.__esModule=!0;var r,i=n(10),a=(r=n(13))&&r.__esModule?r:{default:r};e.default=function(t){t.registerHelper("with",(function(t,e){if(2!=arguments.length)throw new a.default("#with requires exactly one argument");i.isFunction(t)&&(t=t.call(this));var n=e.fn;if(i.isEmpty(t))return e.inverse(this);var r=e.data;return e.data&&e.ids&&((r=i.createFrame(e.data)).contextPath=i.appendContextPath(e.data.contextPath,e.ids[0])),n(t,{data:r,blockParams:i.blockParams([t],[r&&r.contextPath])})}))},t.exports=e.default},function(t,e,n){"use strict";e.__esModule=!0,e.registerDefaultDecorators=function(t){i.default(t)};var r,i=(r=n(49))&&r.__esModule?r:{default:r}},function(t,e,n){"use strict";e.__esModule=!0;var r=n(10);e.default=function(t){t.registerDecorator("inline",(function(t,e,n,i){var a=t;return e.partials||(e.partials={},a=function(i,a){var o=n.partials;n.partials=r.extend({},o,e.partials);var s=t(i,a);return n.partials=o,s}),e.partials[i.args[0]]=i.fn,a}))},t.exports=e.default},function(t,e,n){"use strict";e.__esModule=!0,e.createNewLookupObject=function(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return r.extend.apply(void 0,[Object.create(null)].concat(e))};var r=n(10)},function(t,e,n){"use strict";function r(t){this.string=t}e.__esModule=!0,r.prototype.toString=r.prototype.toHTML=function(){return""+this.string},e.default=r,t.exports=e.default},function(t,e,n){"use strict";e.__esModule=!0,e.checkRevision=function(t){var e=t&&t[0]||1,n=o.COMPILER_REVISION;if(!(e>=o.LAST_COMPATIBLE_COMPILER_REVISION&&e<=o.COMPILER_REVISION)){if(e<o.LAST_COMPATIBLE_COMPILER_REVISION){var r=o.REVISION_CHANGES[n],i=o.REVISION_CHANGES[e];throw new a.default("Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version ("+r+") or downgrade your runtime to an older version ("+i+").")}throw new a.default("Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version ("+t[1]+").")}},e.template=function(t,e){if(!e)throw new a.default("No environment passed to template");if(!t||!t.main)throw new a.default("Unknown template object: "+typeof t);t.main.decorator=t.main_d,e.VM.checkRevision(t.compiler);var n=t.compiler&&7===t.compiler[0],r={strict:function(t,e,n){if(!t||!(e in t))throw new a.default('"'+e+'" not defined in '+t,{loc:n});return t[e]},lookupProperty:function(t,e){var n=t[e];return null==n||Object.prototype.hasOwnProperty.call(t,e)||l.resultIsAllowed(n,r.protoAccessControl,e)?n:void 0},lookup:function(t,e){for(var n=t.length,i=0;i<n;i++)if(null!=(t[i]&&r.lookupProperty(t[i],e)))return t[i][e]},lambda:function(t,e){return"function"==typeof t?t.call(e):t},escapeExpression:i.escapeExpression,invokePartial:function(n,r,o){o.hash&&(r=i.extend({},r,o.hash),o.ids&&(o.ids[0]=!0)),n=e.VM.resolvePartial.call(this,n,r,o);var s=i.extend({},o,{hooks:this.hooks,protoAccessControl:this.protoAccessControl}),u=e.VM.invokePartial.call(this,n,r,s);if(null==u&&e.compile&&(o.partials[o.name]=e.compile(n,t.compilerOptions,e),u=o.partials[o.name](r,s)),null!=u){if(o.indent){for(var l=u.split("\n"),c=0,p=l.length;c<p&&(l[c]||c+1!==p);c++)l[c]=o.indent+l[c];u=l.join("\n")}return u}throw new a.default("The partial "+o.name+" could not be compiled when running in runtime-only mode")},fn:function(e){var n=t[e];return n.decorator=t[e+"_d"],n},programs:[],program:function(t,e,n,r,i){var a=this.programs[t],o=this.fn(t);return e||i||r||n?a=c(this,t,o,e,n,r,i):a||(a=this.programs[t]=c(this,t,o)),a},data:function(t,e){for(;t&&e--;)t=t._parent;return t},mergeIfNeeded:function(t,e){var n=t||e;return t&&e&&t!==e&&(n=i.extend({},e,t)),n},nullContext:Object.seal({}),noop:e.VM.noop,compilerInfo:t.compiler};function o(e){var n=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],i=n.data;o._setup(n),!n.partial&&t.useData&&(i=h(e,i));var a=void 0,s=t.useBlockParams?[]:void 0;function u(e){return""+t.main(r,e,r.helpers,r.partials,i,s,a)}return t.useDepths&&(a=n.depths?e!=n.depths[0]?[e].concat(n.depths):n.depths:[e]),(u=f(t.main,u,r,n.depths||[],i,s))(e,n)}return o.isTop=!0,o._setup=function(a){if(a.partial)r.protoAccessControl=a.protoAccessControl,r.helpers=a.helpers,r.partials=a.partials,r.decorators=a.decorators,r.hooks=a.hooks;else{var o=i.extend({},e.helpers,a.helpers);!function(t,e){Object.keys(t).forEach((function(n){var r=t[n];t[n]=function(t,e){var n=e.lookupProperty;return u.wrapHelper(t,(function(t){return i.extend({lookupProperty:n},t)}))}(r,e)}))}(o,r),r.helpers=o,t.usePartial&&(r.partials=r.mergeIfNeeded(a.partials,e.partials)),(t.usePartial||t.useDecorators)&&(r.decorators=i.extend({},e.decorators,a.decorators)),r.hooks={},r.protoAccessControl=l.createProtoAccessControl(a);var c=a.allowCallsToHelperMissing||n;s.moveHelperToHooks(r,"helperMissing",c),s.moveHelperToHooks(r,"blockHelperMissing",c)}},o._child=function(e,n,i,o){if(t.useBlockParams&&!i)throw new a.default("must pass block params");if(t.useDepths&&!o)throw new a.default("must pass parent depths");return c(r,e,t[e],n,0,i,o)},o},e.wrapProgram=c,e.resolvePartial=function(t,e,n){return t?t.call||n.name||(n.name=t,t=n.partials[t]):t="@partial-block"===n.name?n.data["partial-block"]:n.partials[n.name],t},e.invokePartial=function(t,e,n){var r=n.data&&n.data["partial-block"];n.partial=!0,n.ids&&(n.data.contextPath=n.ids[0]||n.data.contextPath);var s=void 0;if(n.fn&&n.fn!==p&&function(){n.data=o.createFrame(n.data);var t=n.fn;s=n.data["partial-block"]=function(e){var n=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];return n.data=o.createFrame(n.data),n.data["partial-block"]=r,t(e,n)},t.partials&&(n.partials=i.extend({},n.partials,t.partials))}(),void 0===t&&s&&(t=s),void 0===t)throw new a.default("The partial "+n.name+" could not be found");if(t instanceof Function)return t(e,n)},e.noop=p;var r,i=function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e.default=t,e}(n(10)),a=(r=n(13))&&r.__esModule?r:{default:r},o=n(22),s=n(23),u=n(53),l=n(25);function c(t,e,n,r,i,a,o){function s(e){var i=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],s=o;return!o||e==o[0]||e===t.nullContext&&null===o[0]||(s=[e].concat(o)),n(t,e,t.helpers,t.partials,i.data||r,a&&[i.blockParams].concat(a),s)}return(s=f(n,s,t,o,r,a)).program=e,s.depth=o?o.length:0,s.blockParams=i||0,s}function p(){return""}function h(t,e){return e&&"root"in e||((e=e?o.createFrame(e):{}).root=t),e}function f(t,e,n,r,a,o){if(t.decorator){var s={};e=t.decorator(e,s,n,r&&r[0],a,o,r),i.extend(e,s)}return e}},function(t,e,n){"use strict";e.__esModule=!0,e.wrapHelper=function(t,e){return"function"!=typeof t?t:function(){var n=arguments[arguments.length-1];return arguments[arguments.length-1]=e(n),t.apply(this,arguments)}}},function(t,e,n){"use strict";(function(n){e.__esModule=!0,e.default=function(t){var e=void 0!==n?n:window,r=e.Handlebars;t.noConflict=function(){return e.Handlebars===t&&(e.Handlebars=r),t}},t.exports=e.default}).call(this,n(16))},function(t,e,n){var r=n(7);t.exports=(r.default||r).template({1:function(t,e,n,r,i){return" <li>"+t.escapeExpression(t.lambda(e,e))+"</li> "},compiler:[8,">= 4.3.0"],main:function(t,e,n,r,i){var a,o=t.lambda,s=t.escapeExpression,u=null!=e?e:t.nullContext||{},l=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return'<div id="'+s(o(null!=e?l(e,"id"):e,e))+'" '+(null!=(a=l(n,"class").call(u,"select",{name:"class",hash:{},data:i}))?a:"")+"><div "+(null!=(a=l(n,"class").call(u,"head",{name:"class",hash:{},data:i}))?a:"")+"> "+s(o(null!=e?l(e,"desc"):e,e))+" <span "+(null!=(a=l(n,"class").call(u,"val",{name:"class",hash:{},data:i}))?a:"")+">"+s(o(null!=e?l(e,"val"):e,e))+'</span></div><ul data-id="'+s(o(null!=e?l(e,"id"):e,e))+'"> '+(null!=(a=l(n,"each").call(u,null!=e?l(e,"selections"):e,{name:"each",hash:{},fn:t.program(1,i,0),inverse:t.noop,data:i}))?a:"")+" </ul></div>"},useData:!0})},function(t,e,n){var r=n(7);t.exports=(r.default||r).template({compiler:[8,">= 4.3.0"],main:function(t,e,n,r,i){var a,o=t.lambda,s=t.escapeExpression,u=null!=e?e:t.nullContext||{},l=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return'<div id="'+s(o(null!=e?l(e,"id"):e,e))+'" '+(null!=(a=l(n,"class").call(u,"range",{name:"class",hash:{},data:i}))?a:"")+"><div "+(null!=(a=l(n,"class").call(u,"head",{name:"class",hash:{},data:i}))?a:"")+"> "+s(o(null!=e?l(e,"desc"):e,e))+" <span "+(null!=(a=l(n,"class").call(u,"val",{name:"class",hash:{},data:i}))?a:"")+">"+s(o(null!=e?l(e,"val"):e,e))+"</span></div><div "+(null!=(a=l(n,"class").call(u,"input-container",{name:"class",hash:{},data:i}))?a:"")+' data-id="'+s(o(null!=e?l(e,"id"):e,e))+'"><div '+(null!=(a=l(n,"class").call(u,"range-track",{name:"class",hash:{},data:i}))?a:"")+"><div "+(null!=(a=l(n,"class").call(u,"range-track-bar",{name:"class",hash:{},data:i}))?a:"")+"><div "+(null!=(a=l(n,"class").call(u,"range-track-progress",{name:"class",hash:{},data:i}))?a:"")+' style="width: '+s(o(null!=e?l(e,"progress"):e,e))+'%"></div></div></div><input type="range" min="'+s(o(null!=e?l(e,"min"):e,e))+'" max="'+s(o(null!=e?l(e,"max"):e,e))+'" step="'+s(o(null!=e?l(e,"step"):e,e))+'" value="'+s(o(null!=e?l(e,"val"):e,e))+'"></div></div>'},useData:!0})},function(t,e,n){var r=n(7);t.exports=(r.default||r).template({1:function(t,e,n,r,i){return' <li style="background: '+t.escapeExpression(t.lambda(e,e))+'"></li> '},compiler:[8,">= 4.3.0"],main:function(t,e,n,r,i){var a,o=t.lambda,s=t.escapeExpression,u=null!=e?e:t.nullContext||{},l=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return'<div id="'+s(o(null!=e?l(e,"id"):e,e))+'" '+(null!=(a=l(n,"class").call(u,"color",{name:"class",hash:{},data:i}))?a:"")+"><div "+(null!=(a=l(n,"class").call(u,"head",{name:"class",hash:{},data:i}))?a:"")+"> "+s(o(null!=e?l(e,"desc"):e,e))+" <span "+(null!=(a=l(n,"class").call(u,"val",{name:"class",hash:{},data:i}))?a:"")+' style="background-color: '+s(o(null!=e?l(e,"val"):e,e))+'"></span></div><ul data-id="'+s(o(null!=e?l(e,"id"):e,e))+'"> '+(null!=(a=l(n,"each").call(u,null!=e?l(e,"colors"):e,{name:"each",hash:{},fn:t.program(1,i,0),inverse:t.noop,data:i}))?a:"")+" </ul></div>"},useData:!0})},function(t,e,n){(e=n(8)(!1)).push([t.i,"._container ._entry-btn{$w:40px;$h:40px;$d:flex;$b:#000;opacity:.3;$bra:10px;$po:relative;$z:1000;$tr:opacity .3s;$c:#fff;$fs:25px;align-items:center;justify-content:center}._container ._entry-btn._active,._container ._entry-btn:active{opacity:.8}",""]),t.exports=e},function(t,e,n){var r=n(7);t.exports=(r.default||r).template({compiler:[8,">= 4.3.0"],main:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return"<div "+(null!=(a=s(n,"class").call(o,"entry-btn",{name:"class",hash:{},data:i}))?a:"")+"><span "+(null!=(a=s(n,"class").call(o,"icon-tool",{name:"class",hash:{},data:i}))?a:"")+"></span></div>"},useData:!0})},function(t,e,n){(e=n(8)(!1)).push([t.i,"._container ._nav-bar-container{$po:absolute;$w:100%;$h:40px;$l:0;$t:0;$z:100}._container ._nav-bar-container ._nav-bar{$ox:auto;$wos:touch;$bt:1px solid var(--border);$bb:1px solid var(--border);$w:100%;$h:100%;$b:var(--darker-background);$fs:0;$ws:nowrap}._container ._nav-bar-container ._nav-bar-item{$cu:pointer;$d:inline-block;$h:38px;$lh:38px;$p:0 10px;$c:var(--foreground);$fs:12px;$ta:center;$tt:capitalize;$tr:all .3s}._container ._nav-bar-container ._nav-bar-item:active{$b:var(--highlight);$c:var(--select-foreground)}._container ._nav-bar-container ._nav-bar-item._active{$b:var(--highlight);$c:var(--select-foreground)}._container ._nav-bar-container ._bottom-bar{$tr:left .3s,width .3s;$h:1px;$b:var(--accent);$po:absolute;bottom:0;$l:0}",""]),t.exports=e},function(t,e,n){(e=n(8)(!1)).push([t.i,"._dev-tools{$po:absolute;$w:100%;$h:100%;$l:0;bottom:0;$b:var(--background);$z:500;$d:none;$pt:40px!important;opacity:0;$tr:opacity .3s,height .3s}._dev-tools ._tools{$o:auto;$wos:touch;$h:100%;$w:100%;$po:relative}._dev-tools ._tools ._tool{$po:absolute;$w:100%;$h:100%;$l:0;$t:0;$o:hidden;$d:none}",""]),t.exports=e},function(t,e,n){var r=n(7);t.exports=(r.default||r).template({compiler:[8,">= 4.3.0"],main:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return"<div "+(null!=(a=s(n,"class").call(o,"dev-tools",{name:"class",hash:{},data:i}))?a:"")+"><div "+(null!=(a=s(n,"class").call(o,"nav-bar-container",{name:"class",hash:{},data:i}))?a:"")+"><div "+(null!=(a=s(n,"class").call(o,"nav-bar",{name:"class",hash:{},data:i}))?a:"")+'></div><div class="eruda-bottom-bar"></div></div><div '+(null!=(a=s(n,"class").call(o,"tools",{name:"class",hash:{},data:i}))?a:"")+"></div></div>"},useData:!0})},function(t,e){t.exports=function(t){if(Array.isArray(t))return t}},function(t,e){t.exports=function(t,e){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)){var n=[],r=!0,i=!1,a=void 0;try{for(var o,s=t[Symbol.iterator]();!(r=(o=s.next()).done)&&(n.push(o.value),!e||n.length!==e);r=!0);}catch(t){i=!0,a=t}finally{try{r||null==s.return||s.return()}finally{if(i)throw a}}return n}}},function(t,e){t.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}},function(t,e,n){(e=n(8)(!1)).push([t.i,"._container ._abstract ._key{$c:var(--var-color)}._container ._abstract ._number{$c:var(--number-color)}._container ._abstract ._null{$c:var(--operator-color)}._container ._abstract ._string{$c:var(--string-color)}._container ._abstract ._boolean{$c:var(--keyword-color)}._container ._abstract ._special{$c:var(--operator-color)}",""]),t.exports=e},function(t,e,n){var r,i,a;a=function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=18)}([,,function(t,e,n){"use strict";function r(t){this.__parent=t,this.__character_count=0,this.__indent_count=-1,this.__alignment_count=0,this.__wrap_point_index=0,this.__wrap_point_character_count=0,this.__wrap_point_indent_count=-1,this.__wrap_point_alignment_count=0,this.__items=[]}function i(t,e){this.__cache=[""],this.__indent_size=t.indent_size,this.__indent_string=t.indent_char,t.indent_with_tabs||(this.__indent_string=new Array(t.indent_size+1).join(t.indent_char)),e=e||"",t.indent_level>0&&(e=new Array(t.indent_level+1).join(this.__indent_string)),this.__base_string=e,this.__base_string_length=e.length}function a(t,e){this.__indent_cache=new i(t,e),this.raw=!1,this._end_with_newline=t.end_with_newline,this.indent_size=t.indent_size,this.wrap_line_length=t.wrap_line_length,this.indent_empty_lines=t.indent_empty_lines,this.__lines=[],this.previous_line=null,this.current_line=null,this.next_line=new r(this),this.space_before_token=!1,this.non_breaking_space=!1,this.previous_token_wrapped=!1,this.__add_outputline()}r.prototype.clone_empty=function(){var t=new r(this.__parent);return t.set_indent(this.__indent_count,this.__alignment_count),t},r.prototype.item=function(t){return t<0?this.__items[this.__items.length+t]:this.__items[t]},r.prototype.has_match=function(t){for(var e=this.__items.length-1;e>=0;e--)if(this.__items[e].match(t))return!0;return!1},r.prototype.set_indent=function(t,e){this.is_empty()&&(this.__indent_count=t||0,this.__alignment_count=e||0,this.__character_count=this.__parent.get_indent_size(this.__indent_count,this.__alignment_count))},r.prototype._set_wrap_point=function(){this.__parent.wrap_line_length&&(this.__wrap_point_index=this.__items.length,this.__wrap_point_character_count=this.__character_count,this.__wrap_point_indent_count=this.__parent.next_line.__indent_count,this.__wrap_point_alignment_count=this.__parent.next_line.__alignment_count)},r.prototype._should_wrap=function(){return this.__wrap_point_index&&this.__character_count>this.__parent.wrap_line_length&&this.__wrap_point_character_count>this.__parent.next_line.__character_count},r.prototype._allow_wrap=function(){if(this._should_wrap()){this.__parent.add_new_line();var t=this.__parent.current_line;return t.set_indent(this.__wrap_point_indent_count,this.__wrap_point_alignment_count),t.__items=this.__items.slice(this.__wrap_point_index),this.__items=this.__items.slice(0,this.__wrap_point_index),t.__character_count+=this.__character_count-this.__wrap_point_character_count,this.__character_count=this.__wrap_point_character_count," "===t.__items[0]&&(t.__items.splice(0,1),t.__character_count-=1),!0}return!1},r.prototype.is_empty=function(){return 0===this.__items.length},r.prototype.last=function(){return this.is_empty()?null:this.__items[this.__items.length-1]},r.prototype.push=function(t){this.__items.push(t);var e=t.lastIndexOf("\n");-1!==e?this.__character_count=t.length-e:this.__character_count+=t.length},r.prototype.pop=function(){var t=null;return this.is_empty()||(t=this.__items.pop(),this.__character_count-=t.length),t},r.prototype._remove_indent=function(){this.__indent_count>0&&(this.__indent_count-=1,this.__character_count-=this.__parent.indent_size)},r.prototype._remove_wrap_indent=function(){this.__wrap_point_indent_count>0&&(this.__wrap_point_indent_count-=1)},r.prototype.trim=function(){for(;" "===this.last();)this.__items.pop(),this.__character_count-=1},r.prototype.toString=function(){var t="";return this.is_empty()?this.__parent.indent_empty_lines&&(t=this.__parent.get_indent_string(this.__indent_count)):(t=this.__parent.get_indent_string(this.__indent_count,this.__alignment_count),t+=this.__items.join("")),t},i.prototype.get_indent_size=function(t,e){var n=this.__base_string_length;return e=e||0,t<0&&(n=0),(n+=t*this.__indent_size)+e},i.prototype.get_indent_string=function(t,e){var n=this.__base_string;return e=e||0,t<0&&(t=0,n=""),e+=t*this.__indent_size,this.__ensure_cache(e),n+this.__cache[e]},i.prototype.__ensure_cache=function(t){for(;t>=this.__cache.length;)this.__add_column()},i.prototype.__add_column=function(){var t=this.__cache.length,e=0,n="";this.__indent_size&&t>=this.__indent_size&&(t-=(e=Math.floor(t/this.__indent_size))*this.__indent_size,n=new Array(e+1).join(this.__indent_string)),t&&(n+=new Array(t+1).join(" ")),this.__cache.push(n)},a.prototype.__add_outputline=function(){this.previous_line=this.current_line,this.current_line=this.next_line.clone_empty(),this.__lines.push(this.current_line)},a.prototype.get_line_number=function(){return this.__lines.length},a.prototype.get_indent_string=function(t,e){return this.__indent_cache.get_indent_string(t,e)},a.prototype.get_indent_size=function(t,e){return this.__indent_cache.get_indent_size(t,e)},a.prototype.is_empty=function(){return!this.previous_line&&this.current_line.is_empty()},a.prototype.add_new_line=function(t){return!(this.is_empty()||!t&&this.just_added_newline()||(this.raw||this.__add_outputline(),0))},a.prototype.get_code=function(t){this.trim(!0);var e=this.current_line.pop();e&&("\n"===e[e.length-1]&&(e=e.replace(/\n+$/g,"")),this.current_line.push(e)),this._end_with_newline&&this.__add_outputline();var n=this.__lines.join("\n");return"\n"!==t&&(n=n.replace(/[\n]/g,t)),n},a.prototype.set_wrap_point=function(){this.current_line._set_wrap_point()},a.prototype.set_indent=function(t,e){return t=t||0,e=e||0,this.next_line.set_indent(t,e),this.__lines.length>1?(this.current_line.set_indent(t,e),!0):(this.current_line.set_indent(),!1)},a.prototype.add_raw_token=function(t){for(var e=0;e<t.newlines;e++)this.__add_outputline();this.current_line.set_indent(-1),this.current_line.push(t.whitespace_before),this.current_line.push(t.text),this.space_before_token=!1,this.non_breaking_space=!1,this.previous_token_wrapped=!1},a.prototype.add_token=function(t){this.__add_space_before_token(),this.current_line.push(t),this.space_before_token=!1,this.non_breaking_space=!1,this.previous_token_wrapped=this.current_line._allow_wrap()},a.prototype.__add_space_before_token=function(){this.space_before_token&&!this.just_added_newline()&&(this.non_breaking_space||this.set_wrap_point(),this.current_line.push(" "))},a.prototype.remove_indent=function(t){for(var e=this.__lines.length;t<e;)this.__lines[t]._remove_indent(),t++;this.current_line._remove_wrap_indent()},a.prototype.trim=function(t){for(t=void 0!==t&&t,this.current_line.trim();t&&this.__lines.length>1&&this.current_line.is_empty();)this.__lines.pop(),this.current_line=this.__lines[this.__lines.length-1],this.current_line.trim();this.previous_line=this.__lines.length>1?this.__lines[this.__lines.length-2]:null},a.prototype.just_added_newline=function(){return this.current_line.is_empty()},a.prototype.just_added_blankline=function(){return this.is_empty()||this.current_line.is_empty()&&this.previous_line.is_empty()},a.prototype.ensure_empty_line_above=function(t,e){for(var n=this.__lines.length-2;n>=0;){var i=this.__lines[n];if(i.is_empty())break;if(0!==i.item(0).indexOf(t)&&i.item(-1)!==e){this.__lines.splice(n+1,0,new r(this)),this.previous_line=this.__lines[this.__lines.length-2];break}n--}},t.exports.Output=a},function(t,e,n){"use strict";t.exports.Token=function(t,e,n,r){this.type=t,this.text=e,this.comments_before=null,this.newlines=n||0,this.whitespace_before=r||"",this.parent=null,this.next=null,this.previous=null,this.opened=null,this.closed=null,this.directives=null}},,,function(t,e,n){"use strict";function r(t,e){this.raw_options=i(t,e),this.disabled=this._get_boolean("disabled"),this.eol=this._get_characters("eol","auto"),this.end_with_newline=this._get_boolean("end_with_newline"),this.indent_size=this._get_number("indent_size",4),this.indent_char=this._get_characters("indent_char"," "),this.indent_level=this._get_number("indent_level"),this.preserve_newlines=this._get_boolean("preserve_newlines",!0),this.max_preserve_newlines=this._get_number("max_preserve_newlines",32786),this.preserve_newlines||(this.max_preserve_newlines=0),this.indent_with_tabs=this._get_boolean("indent_with_tabs","\t"===this.indent_char),this.indent_with_tabs&&(this.indent_char="\t",1===this.indent_size&&(this.indent_size=4)),this.wrap_line_length=this._get_number("wrap_line_length",this._get_number("max_char")),this.indent_empty_lines=this._get_boolean("indent_empty_lines"),this.templating=this._get_selection_list("templating",["auto","none","django","erb","handlebars","php"],["auto"])}function i(t,e){var n,r={};for(n in t=a(t))n!==e&&(r[n]=t[n]);if(e&&t[e])for(n in t[e])r[n]=t[e][n];return r}function a(t){var e,n={};for(e in t)n[e.replace(/-/g,"_")]=t[e];return n}r.prototype._get_array=function(t,e){var n=this.raw_options[t],r=e||[];return"object"==typeof n?null!==n&&"function"==typeof n.concat&&(r=n.concat()):"string"==typeof n&&(r=n.split(/[^a-zA-Z0-9_\/\-]+/)),r},r.prototype._get_boolean=function(t,e){var n=this.raw_options[t];return void 0===n?!!e:!!n},r.prototype._get_characters=function(t,e){var n=this.raw_options[t],r=e||"";return"string"==typeof n&&(r=n.replace(/\\r/,"\r").replace(/\\n/,"\n").replace(/\\t/,"\t")),r},r.prototype._get_number=function(t,e){var n=this.raw_options[t];e=parseInt(e,10),isNaN(e)&&(e=0);var r=parseInt(n,10);return isNaN(r)&&(r=e),r},r.prototype._get_selection=function(t,e,n){var r=this._get_selection_list(t,e,n);if(1!==r.length)throw new Error("Invalid Option Value: The option '"+t+"' can only be one of the following values:\n"+e+"\nYou passed in: '"+this.raw_options[t]+"'");return r[0]},r.prototype._get_selection_list=function(t,e,n){if(!e||0===e.length)throw new Error("Selection list cannot be empty.");if(n=n||[e[0]],!this._is_valid_selection(n,e))throw new Error("Invalid Default Value!");var r=this._get_array(t,n);if(!this._is_valid_selection(r,e))throw new Error("Invalid Option Value: The option '"+t+"' can contain only the following values:\n"+e+"\nYou passed in: '"+this.raw_options[t]+"'");return r},r.prototype._is_valid_selection=function(t,e){return t.length&&e.length&&!t.some((function(t){return-1===e.indexOf(t)}))},t.exports.Options=r,t.exports.normalizeOpts=a,t.exports.mergeOpts=i},,function(t,e,n){"use strict";var r=RegExp.prototype.hasOwnProperty("sticky");function i(t){this.__input=t||"",this.__input_length=this.__input.length,this.__position=0}i.prototype.restart=function(){this.__position=0},i.prototype.back=function(){this.__position>0&&(this.__position-=1)},i.prototype.hasNext=function(){return this.__position<this.__input_length},i.prototype.next=function(){var t=null;return this.hasNext()&&(t=this.__input.charAt(this.__position),this.__position+=1),t},i.prototype.peek=function(t){var e=null;return t=t||0,(t+=this.__position)>=0&&t<this.__input_length&&(e=this.__input.charAt(t)),e},i.prototype.__match=function(t,e){t.lastIndex=e;var n=t.exec(this.__input);return!n||r&&t.sticky||n.index!==e&&(n=null),n},i.prototype.test=function(t,e){return e=e||0,(e+=this.__position)>=0&&e<this.__input_length&&!!this.__match(t,e)},i.prototype.testChar=function(t,e){var n=this.peek(e);return t.lastIndex=0,null!==n&&t.test(n)},i.prototype.match=function(t){var e=this.__match(t,this.__position);return e?this.__position+=e[0].length:e=null,e},i.prototype.read=function(t,e,n){var r,i="";return t&&(r=this.match(t))&&(i+=r[0]),!e||!r&&t||(i+=this.readUntil(e,n)),i},i.prototype.readUntil=function(t,e){var n,r=this.__position;t.lastIndex=this.__position;var i=t.exec(this.__input);return i?(r=i.index,e&&(r+=i[0].length)):r=this.__input_length,n=this.__input.substring(this.__position,r),this.__position=r,n},i.prototype.readUntilAfter=function(t){return this.readUntil(t,!0)},i.prototype.get_regexp=function(t,e){var n=null,i="g";return e&&r&&(i="y"),"string"==typeof t&&""!==t?n=new RegExp(t,i):t&&(n=new RegExp(t.source,i)),n},i.prototype.get_literal_regexp=function(t){return RegExp(t.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&"))},i.prototype.peekUntilAfter=function(t){var e=this.__position,n=this.readUntilAfter(t);return this.__position=e,n},i.prototype.lookBack=function(t){var e=this.__position-1;return e>=t.length&&this.__input.substring(e-t.length,e).toLowerCase()===t},t.exports.InputScanner=i},function(t,e,n){"use strict";var r=n(8).InputScanner,i=n(3).Token,a=n(10).TokenStream,o=n(11).WhitespacePattern,s={START:"TK_START",RAW:"TK_RAW",EOF:"TK_EOF"},u=function(t,e){this._input=new r(t),this._options=e||{},this.__tokens=null,this._patterns={},this._patterns.whitespace=new o(this._input)};u.prototype.tokenize=function(){var t;this._input.restart(),this.__tokens=new a,this._reset();for(var e=new i(s.START,""),n=null,r=[],o=new a;e.type!==s.EOF;){for(t=this._get_next_token(e,n);this._is_comment(t);)o.add(t),t=this._get_next_token(e,n);o.isEmpty()||(t.comments_before=o,o=new a),t.parent=n,this._is_opening(t)?(r.push(n),n=t):n&&this._is_closing(t,n)&&(t.opened=n,n.closed=t,n=r.pop(),t.parent=n),t.previous=e,e.next=t,this.__tokens.add(t),e=t}return this.__tokens},u.prototype._is_first_token=function(){return this.__tokens.isEmpty()},u.prototype._reset=function(){},u.prototype._get_next_token=function(t,e){this._readWhitespace();var n=this._input.read(/.+/g);return n?this._create_token(s.RAW,n):this._create_token(s.EOF,"")},u.prototype._is_comment=function(t){return!1},u.prototype._is_opening=function(t){return!1},u.prototype._is_closing=function(t,e){return!1},u.prototype._create_token=function(t,e){return new i(t,e,this._patterns.whitespace.newline_count,this._patterns.whitespace.whitespace_before_token)},u.prototype._readWhitespace=function(){return this._patterns.whitespace.read()},t.exports.Tokenizer=u,t.exports.TOKEN=s},function(t,e,n){"use strict";function r(t){this.__tokens=[],this.__tokens_length=this.__tokens.length,this.__position=0,this.__parent_token=t}r.prototype.restart=function(){this.__position=0},r.prototype.isEmpty=function(){return 0===this.__tokens_length},r.prototype.hasNext=function(){return this.__position<this.__tokens_length},r.prototype.next=function(){var t=null;return this.hasNext()&&(t=this.__tokens[this.__position],this.__position+=1),t},r.prototype.peek=function(t){var e=null;return t=t||0,(t+=this.__position)>=0&&t<this.__tokens_length&&(e=this.__tokens[t]),e},r.prototype.add=function(t){this.__parent_token&&(t.parent=this.__parent_token),this.__tokens.push(t),this.__tokens_length+=1},t.exports.TokenStream=r},function(t,e,n){"use strict";var r=n(12).Pattern;function i(t,e){r.call(this,t,e),e?this._line_regexp=this._input.get_regexp(e._line_regexp):this.__set_whitespace_patterns("",""),this.newline_count=0,this.whitespace_before_token=""}i.prototype=new r,i.prototype.__set_whitespace_patterns=function(t,e){t+="\\t ",e+="\\n\\r",this._match_pattern=this._input.get_regexp("["+t+e+"]+",!0),this._newline_regexp=this._input.get_regexp("\\r\\n|["+e+"]")},i.prototype.read=function(){this.newline_count=0,this.whitespace_before_token="";var t=this._input.read(this._match_pattern);if(" "===t)this.whitespace_before_token=" ";else if(t){var e=this.__split(this._newline_regexp,t);this.newline_count=e.length-1,this.whitespace_before_token=e[this.newline_count]}return t},i.prototype.matching=function(t,e){var n=this._create();return n.__set_whitespace_patterns(t,e),n._update(),n},i.prototype._create=function(){return new i(this._input,this)},i.prototype.__split=function(t,e){t.lastIndex=0;for(var n=0,r=[],i=t.exec(e);i;)r.push(e.substring(n,i.index)),n=i.index+i[0].length,i=t.exec(e);return n<e.length?r.push(e.substring(n,e.length)):r.push(""),r},t.exports.WhitespacePattern=i},function(t,e,n){"use strict";function r(t,e){this._input=t,this._starting_pattern=null,this._match_pattern=null,this._until_pattern=null,this._until_after=!1,e&&(this._starting_pattern=this._input.get_regexp(e._starting_pattern,!0),this._match_pattern=this._input.get_regexp(e._match_pattern,!0),this._until_pattern=this._input.get_regexp(e._until_pattern),this._until_after=e._until_after)}r.prototype.read=function(){var t=this._input.read(this._starting_pattern);return this._starting_pattern&&!t||(t+=this._input.read(this._match_pattern,this._until_pattern,this._until_after)),t},r.prototype.read_match=function(){return this._input.match(this._match_pattern)},r.prototype.until_after=function(t){var e=this._create();return e._until_after=!0,e._until_pattern=this._input.get_regexp(t),e._update(),e},r.prototype.until=function(t){var e=this._create();return e._until_after=!1,e._until_pattern=this._input.get_regexp(t),e._update(),e},r.prototype.starting_with=function(t){var e=this._create();return e._starting_pattern=this._input.get_regexp(t,!0),e._update(),e},r.prototype.matching=function(t){var e=this._create();return e._match_pattern=this._input.get_regexp(t,!0),e._update(),e},r.prototype._create=function(){return new r(this._input,this)},r.prototype._update=function(){},t.exports.Pattern=r},function(t,e,n){"use strict";function r(t,e){t="string"==typeof t?t:t.source,e="string"==typeof e?e:e.source,this.__directives_block_pattern=new RegExp(t+/ beautify( \w+[:]\w+)+ /.source+e,"g"),this.__directive_pattern=/ (\w+)[:](\w+)/g,this.__directives_end_ignore_pattern=new RegExp(t+/\sbeautify\signore:end\s/.source+e,"g")}r.prototype.get_directives=function(t){if(!t.match(this.__directives_block_pattern))return null;var e={};this.__directive_pattern.lastIndex=0;for(var n=this.__directive_pattern.exec(t);n;)e[n[1]]=n[2],n=this.__directive_pattern.exec(t);return e},r.prototype.readIgnored=function(t){return t.readUntilAfter(this.__directives_end_ignore_pattern)},t.exports.Directives=r},function(t,e,n){"use strict";var r=n(12).Pattern,i={django:!1,erb:!1,handlebars:!1,php:!1};function a(t,e){r.call(this,t,e),this.__template_pattern=null,this._disabled=Object.assign({},i),this._excluded=Object.assign({},i),e&&(this.__template_pattern=this._input.get_regexp(e.__template_pattern),this._excluded=Object.assign(this._excluded,e._excluded),this._disabled=Object.assign(this._disabled,e._disabled));var n=new r(t);this.__patterns={handlebars_comment:n.starting_with(/{{!--/).until_after(/--}}/),handlebars_unescaped:n.starting_with(/{{{/).until_after(/}}}/),handlebars:n.starting_with(/{{/).until_after(/}}/),php:n.starting_with(/<\?(?:[=]|php)/).until_after(/\?>/),erb:n.starting_with(/<%[^%]/).until_after(/[^%]%>/),django:n.starting_with(/{%/).until_after(/%}/),django_value:n.starting_with(/{{/).until_after(/}}/),django_comment:n.starting_with(/{#/).until_after(/#}/)}}a.prototype=new r,a.prototype._create=function(){return new a(this._input,this)},a.prototype._update=function(){this.__set_templated_pattern()},a.prototype.disable=function(t){var e=this._create();return e._disabled[t]=!0,e._update(),e},a.prototype.read_options=function(t){var e=this._create();for(var n in i)e._disabled[n]=-1===t.templating.indexOf(n);return e._update(),e},a.prototype.exclude=function(t){var e=this._create();return e._excluded[t]=!0,e._update(),e},a.prototype.read=function(){var t="";t=this._match_pattern?this._input.read(this._starting_pattern):this._input.read(this._starting_pattern,this.__template_pattern);for(var e=this._read_template();e;)this._match_pattern?e+=this._input.read(this._match_pattern):e+=this._input.readUntil(this.__template_pattern),t+=e,e=this._read_template();return this._until_after&&(t+=this._input.readUntilAfter(this._until_pattern)),t},a.prototype.__set_templated_pattern=function(){var t=[];this._disabled.php||t.push(this.__patterns.php._starting_pattern.source),this._disabled.handlebars||t.push(this.__patterns.handlebars._starting_pattern.source),this._disabled.erb||t.push(this.__patterns.erb._starting_pattern.source),this._disabled.django||(t.push(this.__patterns.django._starting_pattern.source),t.push(this.__patterns.django_value._starting_pattern.source),t.push(this.__patterns.django_comment._starting_pattern.source)),this._until_pattern&&t.push(this._until_pattern.source),this.__template_pattern=this._input.get_regexp("(?:"+t.join("|")+")")},a.prototype._read_template=function(){var t="",e=this._input.peek();if("<"===e){var n=this._input.peek(1);this._disabled.php||this._excluded.php||"?"!==n||(t=t||this.__patterns.php.read()),this._disabled.erb||this._excluded.erb||"%"!==n||(t=t||this.__patterns.erb.read())}else"{"===e&&(this._disabled.handlebars||this._excluded.handlebars||(t=(t=(t=t||this.__patterns.handlebars_comment.read())||this.__patterns.handlebars_unescaped.read())||this.__patterns.handlebars.read()),this._disabled.django||(this._excluded.django||this._excluded.handlebars||(t=t||this.__patterns.django_value.read()),this._excluded.django||(t=(t=t||this.__patterns.django_comment.read())||this.__patterns.django.read())));return t},t.exports.TemplatablePattern=a},,,,function(t,e,n){"use strict";var r=n(19).Beautifier,i=n(20).Options;t.exports=function(t,e,n,i){return new r(t,e,n,i).beautify()},t.exports.defaultOptions=function(){return new i}},function(t,e,n){"use strict";var r=n(20).Options,i=n(2).Output,a=n(21).Tokenizer,o=n(21).TOKEN,s=/\r\n|[\r\n]/,u=/\r\n|[\r\n]/g,l=function(t,e){this.indent_level=0,this.alignment_size=0,this.max_preserve_newlines=t.max_preserve_newlines,this.preserve_newlines=t.preserve_newlines,this._output=new i(t,e)};function c(t,e){return-1!==e.indexOf(t)}function p(t,e,n){this.parent=t||null,this.tag=e?e.tag_name:"",this.indent_level=n||0,this.parser_token=e||null}function h(t){this._printer=t,this._current_frame=null}function f(t,e,n,i){this._source_text=t||"",e=e||{},this._js_beautify=n,this._css_beautify=i,this._tag_stack=null;var a=new r(e,"html");this._options=a,this._is_wrap_attributes_force="force"===this._options.wrap_attributes.substr(0,"force".length),this._is_wrap_attributes_force_expand_multiline="force-expand-multiline"===this._options.wrap_attributes,this._is_wrap_attributes_force_aligned="force-aligned"===this._options.wrap_attributes,this._is_wrap_attributes_aligned_multiple="aligned-multiple"===this._options.wrap_attributes,this._is_wrap_attributes_preserve="preserve"===this._options.wrap_attributes.substr(0,"preserve".length),this._is_wrap_attributes_preserve_aligned="preserve-aligned"===this._options.wrap_attributes}l.prototype.current_line_has_match=function(t){return this._output.current_line.has_match(t)},l.prototype.set_space_before_token=function(t,e){this._output.space_before_token=t,this._output.non_breaking_space=e},l.prototype.set_wrap_point=function(){this._output.set_indent(this.indent_level,this.alignment_size),this._output.set_wrap_point()},l.prototype.add_raw_token=function(t){this._output.add_raw_token(t)},l.prototype.print_preserved_newlines=function(t){var e=0;t.type!==o.TEXT&&t.previous.type!==o.TEXT&&(e=t.newlines?1:0),this.preserve_newlines&&(e=t.newlines<this.max_preserve_newlines+1?t.newlines:this.max_preserve_newlines+1);for(var n=0;n<e;n++)this.print_newline(n>0);return 0!==e},l.prototype.traverse_whitespace=function(t){return!(!t.whitespace_before&&!t.newlines||(this.print_preserved_newlines(t)||(this._output.space_before_token=!0),0))},l.prototype.previous_token_wrapped=function(){return this._output.previous_token_wrapped},l.prototype.print_newline=function(t){this._output.add_new_line(t)},l.prototype.print_token=function(t){t.text&&(this._output.set_indent(this.indent_level,this.alignment_size),this._output.add_token(t.text))},l.prototype.indent=function(){this.indent_level++},l.prototype.get_full_indent=function(t){return(t=this.indent_level+(t||0))<1?"":this._output.get_indent_string(t)},h.prototype.get_parser_token=function(){return this._current_frame?this._current_frame.parser_token:null},h.prototype.record_tag=function(t){var e=new p(this._current_frame,t,this._printer.indent_level);this._current_frame=e},h.prototype._try_pop_frame=function(t){var e=null;return t&&(e=t.parser_token,this._printer.indent_level=t.indent_level,this._current_frame=t.parent),e},h.prototype._get_frame=function(t,e){for(var n=this._current_frame;n&&-1===t.indexOf(n.tag);){if(e&&-1!==e.indexOf(n.tag)){n=null;break}n=n.parent}return n},h.prototype.try_pop=function(t,e){var n=this._get_frame([t],e);return this._try_pop_frame(n)},h.prototype.indent_to_tag=function(t){var e=this._get_frame(t);e&&(this._printer.indent_level=e.indent_level)},f.prototype.beautify=function(){if(this._options.disabled)return this._source_text;var t=this._source_text,e=this._options.eol;"auto"===this._options.eol&&(e="\n",t&&s.test(t)&&(e=t.match(s)[0]));var n=(t=t.replace(u,"\n")).match(/^[\t ]*/)[0],r={text:"",type:""},i=new d,c=new l(this._options,n),p=new a(t,this._options).tokenize();this._tag_stack=new h(c);for(var f=null,_=p.next();_.type!==o.EOF;)_.type===o.TAG_OPEN||_.type===o.COMMENT?i=f=this._handle_tag_open(c,_,i,r):_.type===o.ATTRIBUTE||_.type===o.EQUALS||_.type===o.VALUE||_.type===o.TEXT&&!i.tag_complete?f=this._handle_inside_tag(c,_,i,p):_.type===o.TAG_CLOSE?f=this._handle_tag_close(c,_,i):_.type===o.TEXT?f=this._handle_text(c,_,i):c.add_raw_token(_),r=f,_=p.next();return c._output.get_code(e)},f.prototype._handle_tag_close=function(t,e,n){var r={text:e.text,type:e.type};return t.alignment_size=0,n.tag_complete=!0,t.set_space_before_token(e.newlines||""!==e.whitespace_before,!0),n.is_unformatted?t.add_raw_token(e):("<"===n.tag_start_char&&(t.set_space_before_token("/"===e.text[0],!0),this._is_wrap_attributes_force_expand_multiline&&n.has_wrapped_attrs&&t.print_newline(!1)),t.print_token(e)),!n.indent_content||n.is_unformatted||n.is_content_unformatted||(t.indent(),n.indent_content=!1),n.is_inline_element||n.is_unformatted||n.is_content_unformatted||t.set_wrap_point(),r},f.prototype._handle_inside_tag=function(t,e,n,r){var i=n.has_wrapped_attrs,a={text:e.text,type:e.type};if(t.set_space_before_token(e.newlines||""!==e.whitespace_before,!0),n.is_unformatted)t.add_raw_token(e);else if("{"===n.tag_start_char&&e.type===o.TEXT)t.print_preserved_newlines(e)?(e.newlines=0,t.add_raw_token(e)):t.print_token(e);else{if(e.type===o.ATTRIBUTE?(t.set_space_before_token(!0),n.attr_count+=1):(e.type===o.EQUALS||e.type===o.VALUE&&e.previous.type===o.EQUALS)&&t.set_space_before_token(!1),e.type===o.ATTRIBUTE&&"<"===n.tag_start_char&&((this._is_wrap_attributes_preserve||this._is_wrap_attributes_preserve_aligned)&&(t.traverse_whitespace(e),i=i||0!==e.newlines),this._is_wrap_attributes_force)){var s=n.attr_count>1;if(this._is_wrap_attributes_force_expand_multiline&&1===n.attr_count){var u,l=!0,c=0;do{if((u=r.peek(c)).type===o.ATTRIBUTE){l=!1;break}c+=1}while(c<4&&u.type!==o.EOF&&u.type!==o.TAG_CLOSE);s=!l}s&&(t.print_newline(!1),i=!0)}t.print_token(e),i=i||t.previous_token_wrapped(),n.has_wrapped_attrs=i}return a},f.prototype._handle_text=function(t,e,n){var r={text:e.text,type:"TK_CONTENT"};return n.custom_beautifier_name?this._print_custom_beatifier_text(t,e,n):n.is_unformatted||n.is_content_unformatted?t.add_raw_token(e):(t.traverse_whitespace(e),t.print_token(e)),r},f.prototype._print_custom_beatifier_text=function(t,e,n){var r=this;if(""!==e.text){var i,a=e.text,o=1,s="",u="";"javascript"===n.custom_beautifier_name&&"function"==typeof this._js_beautify?i=this._js_beautify:"css"===n.custom_beautifier_name&&"function"==typeof this._css_beautify?i=this._css_beautify:"html"===n.custom_beautifier_name&&(i=function(t,e){return new f(t,e,r._js_beautify,r._css_beautify).beautify()}),"keep"===this._options.indent_scripts?o=0:"separate"===this._options.indent_scripts&&(o=-t.indent_level);var l=t.get_full_indent(o);if(a=a.replace(/\n[ \t]*$/,""),"html"!==n.custom_beautifier_name&&"<"===a[0]&&a.match(/^(<!--|<!\[CDATA\[)/)){var c=/^(<!--[^\n]*|<!\[CDATA\[)(\n?)([ \t\n]*)([\s\S]*)(-->|]]>)$/.exec(a);if(!c)return void t.add_raw_token(e);s=l+c[1]+"\n",a=c[4],c[5]&&(u=l+c[5]),a=a.replace(/\n[ \t]*$/,""),(c[2]||-1!==c[3].indexOf("\n"))&&(c=c[3].match(/[ \t]+$/))&&(e.whitespace_before=c[0])}if(a)if(i){var p=function(){this.eol="\n"};p.prototype=this._options.raw_options,a=i(l+a,new p)}else{var h=e.whitespace_before;h&&(a=a.replace(new RegExp("\n("+h+")?","g"),"\n")),a=l+a.replace(/\n/g,"\n"+l)}s&&(a=a?s+a+"\n"+u:s+u),t.print_newline(!1),a&&(e.text=a,e.whitespace_before="",e.newlines=0,t.add_raw_token(e),t.print_newline(!0))}},f.prototype._handle_tag_open=function(t,e,n,r){var i=this._get_tag_open_token(e);return(n.is_unformatted||n.is_content_unformatted)&&e.type===o.TAG_OPEN&&0===e.text.indexOf("</")?t.add_raw_token(e):(t.traverse_whitespace(e),this._set_tag_position(t,e,i,n,r),i.is_inline_element||t.set_wrap_point(),t.print_token(e)),(this._is_wrap_attributes_force_aligned||this._is_wrap_attributes_aligned_multiple||this._is_wrap_attributes_preserve_aligned)&&(i.alignment_size=e.text.length+1),i.tag_complete||i.is_unformatted||(t.alignment_size=i.alignment_size),i};var d=function(t,e){var n;this.parent=t||null,this.text="",this.type="TK_TAG_OPEN",this.tag_name="",this.is_inline_element=!1,this.is_unformatted=!1,this.is_content_unformatted=!1,this.is_empty_element=!1,this.is_start_tag=!1,this.is_end_tag=!1,this.indent_content=!1,this.multiline_content=!1,this.custom_beautifier_name=null,this.start_tag_token=null,this.attr_count=0,this.has_wrapped_attrs=!1,this.alignment_size=0,this.tag_complete=!1,this.tag_start_char="",this.tag_check="",e?(this.tag_start_char=e.text[0],this.text=e.text,"<"===this.tag_start_char?(n=e.text.match(/^<([^\s>]*)/),this.tag_check=n?n[1]:""):(n=e.text.match(/^{{[#\^]?([^\s}]+)/),this.tag_check=n?n[1]:""),this.tag_check=this.tag_check.toLowerCase(),e.type===o.COMMENT&&(this.tag_complete=!0),this.is_start_tag="/"!==this.tag_check.charAt(0),this.tag_name=this.is_start_tag?this.tag_check:this.tag_check.substr(1),this.is_end_tag=!this.is_start_tag||e.closed&&"/>"===e.closed.text,this.is_end_tag=this.is_end_tag||"{"===this.tag_start_char&&(this.text.length<3||/[^#\^]/.test(this.text.charAt(2)))):this.tag_complete=!0};f.prototype._get_tag_open_token=function(t){var e=new d(this._tag_stack.get_parser_token(),t);return e.alignment_size=this._options.wrap_attributes_indent_size,e.is_end_tag=e.is_end_tag||c(e.tag_check,this._options.void_elements),e.is_empty_element=e.tag_complete||e.is_start_tag&&e.is_end_tag,e.is_unformatted=!e.tag_complete&&c(e.tag_check,this._options.unformatted),e.is_content_unformatted=!e.is_empty_element&&c(e.tag_check,this._options.content_unformatted),e.is_inline_element=c(e.tag_name,this._options.inline)||"{"===e.tag_start_char,e},f.prototype._set_tag_position=function(t,e,n,r,i){n.is_empty_element||(n.is_end_tag?n.start_tag_token=this._tag_stack.try_pop(n.tag_name):(this._do_optional_end_element(n)&&(n.is_inline_element||(n.parent&&(n.parent.multiline_content=!0),t.print_newline(!1))),this._tag_stack.record_tag(n),"script"!==n.tag_name&&"style"!==n.tag_name||n.is_unformatted||n.is_content_unformatted||(n.custom_beautifier_name=function(t,e){var n=null,r=null;return e.closed?("script"===t?n="text/javascript":"style"===t&&(n="text/css"),(n=function(t){for(var e=null,n=t.next;n.type!==o.EOF&&t.closed!==n;){if(n.type===o.ATTRIBUTE&&"type"===n.text){n.next&&n.next.type===o.EQUALS&&n.next.next&&n.next.next.type===o.VALUE&&(e=n.next.next.text);break}n=n.next}return e}(e)||n).search("text/css")>-1?r="css":n.search(/(text|application|dojo)\/(x-)?(javascript|ecmascript|jscript|livescript|(ld\+)?json|method|aspect)/)>-1?r="javascript":n.search(/(text|application|dojo)\/(x-)?(html)/)>-1?r="html":n.search(/test\/null/)>-1&&(r="null"),r):null}(n.tag_check,e)))),c(n.tag_check,this._options.extra_liners)&&(t.print_newline(!1),t._output.just_added_blankline()||t.print_newline(!0)),n.is_empty_element?("{"===n.tag_start_char&&"else"===n.tag_check&&(this._tag_stack.indent_to_tag(["if","unless","each"]),n.indent_content=!0,t.current_line_has_match(/{{#if/)||t.print_newline(!1)),"!--"===n.tag_name&&i.type===o.TAG_CLOSE&&r.is_end_tag&&-1===n.text.indexOf("\n")||n.is_inline_element||n.is_unformatted||t.print_newline(!1)):n.is_unformatted||n.is_content_unformatted?n.is_inline_element||n.is_unformatted||t.print_newline(!1):n.is_end_tag?(n.start_tag_token&&n.start_tag_token.multiline_content||!(n.is_inline_element||r.is_inline_element||i.type===o.TAG_CLOSE&&n.start_tag_token===r||"TK_CONTENT"===i.type))&&t.print_newline(!1):(n.indent_content=!n.custom_beautifier_name,"<"===n.tag_start_char&&("html"===n.tag_name?n.indent_content=this._options.indent_inner_html:"head"===n.tag_name?n.indent_content=this._options.indent_head_inner_html:"body"===n.tag_name&&(n.indent_content=this._options.indent_body_inner_html)),n.is_inline_element||"TK_CONTENT"===i.type||(n.parent&&(n.parent.multiline_content=!0),t.print_newline(!1)))},f.prototype._do_optional_end_element=function(t){var e=null;if(!t.is_empty_element&&t.is_start_tag&&t.parent)return"body"===t.tag_name?e=e||this._tag_stack.try_pop("head"):"li"===t.tag_name?e=e||this._tag_stack.try_pop("li",["ol","ul"]):"dd"===t.tag_name||"dt"===t.tag_name?e=(e=e||this._tag_stack.try_pop("dt",["dl"]))||this._tag_stack.try_pop("dd",["dl"]):"rp"===t.tag_name||"rt"===t.tag_name?e=(e=e||this._tag_stack.try_pop("rt",["ruby","rtc"]))||this._tag_stack.try_pop("rp",["ruby","rtc"]):"optgroup"===t.tag_name?e=e||this._tag_stack.try_pop("optgroup",["select"]):"option"===t.tag_name?e=e||this._tag_stack.try_pop("option",["select","datalist","optgroup"]):"colgroup"===t.tag_name?e=e||this._tag_stack.try_pop("caption",["table"]):"thead"===t.tag_name?e=(e=e||this._tag_stack.try_pop("caption",["table"]))||this._tag_stack.try_pop("colgroup",["table"]):"tbody"===t.tag_name||"tfoot"===t.tag_name?e=(e=(e=(e=e||this._tag_stack.try_pop("caption",["table"]))||this._tag_stack.try_pop("colgroup",["table"]))||this._tag_stack.try_pop("thead",["table"]))||this._tag_stack.try_pop("tbody",["table"]):"tr"===t.tag_name?e=(e=(e=e||this._tag_stack.try_pop("caption",["table"]))||this._tag_stack.try_pop("colgroup",["table"]))||this._tag_stack.try_pop("tr",["table","thead","tbody","tfoot"]):"th"!==t.tag_name&&"td"!==t.tag_name||(e=(e=e||this._tag_stack.try_pop("td",["table","thead","tbody","tfoot","tr"]))||this._tag_stack.try_pop("th",["table","thead","tbody","tfoot","tr"])),t.parent=this._tag_stack.get_parser_token(),e},t.exports.Beautifier=f},function(t,e,n){"use strict";var r=n(6).Options;function i(t){r.call(this,t,"html"),1===this.templating.length&&"auto"===this.templating[0]&&(this.templating=["django","erb","handlebars","php"]),this.indent_inner_html=this._get_boolean("indent_inner_html"),this.indent_body_inner_html=this._get_boolean("indent_body_inner_html",!0),this.indent_head_inner_html=this._get_boolean("indent_head_inner_html",!0),this.indent_handlebars=this._get_boolean("indent_handlebars",!0),this.wrap_attributes=this._get_selection("wrap_attributes",["auto","force","force-aligned","force-expand-multiline","aligned-multiple","preserve","preserve-aligned"]),this.wrap_attributes_indent_size=this._get_number("wrap_attributes_indent_size",this.indent_size),this.extra_liners=this._get_array("extra_liners",["head","body","/html"]),this.inline=this._get_array("inline",["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr","text","acronym","big","strike","tt"]),this.void_elements=this._get_array("void_elements",["area","base","br","col","embed","hr","img","input","keygen","link","menuitem","meta","param","source","track","wbr","!doctype","?xml","basefont","isindex"]),this.unformatted=this._get_array("unformatted",[]),this.content_unformatted=this._get_array("content_unformatted",["pre","textarea"]),this.unformatted_content_delimiter=this._get_characters("unformatted_content_delimiter"),this.indent_scripts=this._get_selection("indent_scripts",["normal","keep","separate"])}i.prototype=new r,t.exports.Options=i},function(t,e,n){"use strict";var r=n(9).Tokenizer,i=n(9).TOKEN,a=n(13).Directives,o=n(14).TemplatablePattern,s=n(12).Pattern,u={TAG_OPEN:"TK_TAG_OPEN",TAG_CLOSE:"TK_TAG_CLOSE",ATTRIBUTE:"TK_ATTRIBUTE",EQUALS:"TK_EQUALS",VALUE:"TK_VALUE",COMMENT:"TK_COMMENT",TEXT:"TK_TEXT",UNKNOWN:"TK_UNKNOWN",START:i.START,RAW:i.RAW,EOF:i.EOF},l=new a(/<\!--/,/-->/),c=function(t,e){r.call(this,t,e),this._current_tag_name="";var n=new o(this._input).read_options(this._options),i=new s(this._input);if(this.__patterns={word:n.until(/[\n\r\t <]/),single_quote:n.until_after(/'/),double_quote:n.until_after(/"/),attribute:n.until(/[\n\r\t =>]|\/>/),element_name:n.until(/[\n\r\t >\/]/),handlebars_comment:i.starting_with(/{{!--/).until_after(/--}}/),handlebars:i.starting_with(/{{/).until_after(/}}/),handlebars_open:i.until(/[\n\r\t }]/),handlebars_raw_close:i.until(/}}/),comment:i.starting_with(/<!--/).until_after(/-->/),cdata:i.starting_with(/<!\[CDATA\[/).until_after(/]]>/),conditional_comment:i.starting_with(/<!\[/).until_after(/]>/),processing:i.starting_with(/<\?/).until_after(/\?>/)},this._options.indent_handlebars&&(this.__patterns.word=this.__patterns.word.exclude("handlebars")),this._unformatted_content_delimiter=null,this._options.unformatted_content_delimiter){var a=this._input.get_literal_regexp(this._options.unformatted_content_delimiter);this.__patterns.unformatted_content_delimiter=i.matching(a).until_after(a)}};(c.prototype=new r)._is_comment=function(t){return!1},c.prototype._is_opening=function(t){return t.type===u.TAG_OPEN},c.prototype._is_closing=function(t,e){return t.type===u.TAG_CLOSE&&e&&((">"===t.text||"/>"===t.text)&&"<"===e.text[0]||"}}"===t.text&&"{"===e.text[0]&&"{"===e.text[1])},c.prototype._reset=function(){this._current_tag_name=""},c.prototype._get_next_token=function(t,e){var n=null;this._readWhitespace();var r=this._input.peek();return null===r?this._create_token(u.EOF,""):n=(n=(n=(n=(n=(n=(n=(n=(n=n||this._read_open_handlebars(r,e))||this._read_attribute(r,t,e))||this._read_raw_content(r,t,e))||this._read_close(r,e))||this._read_content_word(r))||this._read_comment_or_cdata(r))||this._read_processing(r))||this._read_open(r,e))||this._create_token(u.UNKNOWN,this._input.next())},c.prototype._read_comment_or_cdata=function(t){var e=null,n=null,r=null;return"<"===t&&("!"===this._input.peek(1)&&((n=this.__patterns.comment.read())?(r=l.get_directives(n))&&"start"===r.ignore&&(n+=l.readIgnored(this._input)):n=this.__patterns.cdata.read()),n&&((e=this._create_token(u.COMMENT,n)).directives=r)),e},c.prototype._read_processing=function(t){var e=null,n=null;if("<"===t){var r=this._input.peek(1);"!"!==r&&"?"!==r||(n=(n=this.__patterns.conditional_comment.read())||this.__patterns.processing.read()),n&&((e=this._create_token(u.COMMENT,n)).directives=null)}return e},c.prototype._read_open=function(t,e){var n=null,r=null;return e||"<"===t&&(n=this._input.next(),"/"===this._input.peek()&&(n+=this._input.next()),n+=this.__patterns.element_name.read(),r=this._create_token(u.TAG_OPEN,n)),r},c.prototype._read_open_handlebars=function(t,e){var n=null,r=null;return e||this._options.indent_handlebars&&"{"===t&&"{"===this._input.peek(1)&&("!"===this._input.peek(2)?(n=(n=this.__patterns.handlebars_comment.read())||this.__patterns.handlebars.read(),r=this._create_token(u.COMMENT,n)):(n=this.__patterns.handlebars_open.read(),r=this._create_token(u.TAG_OPEN,n))),r},c.prototype._read_close=function(t,e){var n=null,r=null;return e&&("<"===e.text[0]&&(">"===t||"/"===t&&">"===this._input.peek(1))?(n=this._input.next(),"/"===t&&(n+=this._input.next()),r=this._create_token(u.TAG_CLOSE,n)):"{"===e.text[0]&&"}"===t&&"}"===this._input.peek(1)&&(this._input.next(),this._input.next(),r=this._create_token(u.TAG_CLOSE,"}}"))),r},c.prototype._read_attribute=function(t,e,n){var r=null,i="";if(n&&"<"===n.text[0])if("="===t)r=this._create_token(u.EQUALS,this._input.next());else if('"'===t||"'"===t){var a=this._input.next();a+='"'===t?this.__patterns.double_quote.read():this.__patterns.single_quote.read(),r=this._create_token(u.VALUE,a)}else(i=this.__patterns.attribute.read())&&(r=e.type===u.EQUALS?this._create_token(u.VALUE,i):this._create_token(u.ATTRIBUTE,i));return r},c.prototype._is_content_unformatted=function(t){return-1===this._options.void_elements.indexOf(t)&&(-1!==this._options.content_unformatted.indexOf(t)||-1!==this._options.unformatted.indexOf(t))},c.prototype._read_raw_content=function(t,e,n){var r="";if(n&&"{"===n.text[0])r=this.__patterns.handlebars_raw_close.read();else if(e.type===u.TAG_CLOSE&&"<"===e.opened.text[0]){var i=e.opened.text.substr(1).toLowerCase();if("script"===i||"style"===i){var a=this._read_comment_or_cdata(t);if(a)return a.type=u.TEXT,a;r=this._input.readUntil(new RegExp("</"+i+"[\\n\\r\\t ]*?>","ig"))}else this._is_content_unformatted(i)&&(r=this._input.readUntil(new RegExp("</"+i+"[\\n\\r\\t ]*?>","ig")))}return r?this._create_token(u.TEXT,r):null},c.prototype._read_content_word=function(t){var e="";if(this._options.unformatted_content_delimiter&&t===this._options.unformatted_content_delimiter[0]&&(e=this.__patterns.unformatted_content_delimiter.read()),e||(e=this.__patterns.word.read()),e)return this._create_token(u.TEXT,e)},t.exports.Tokenizer=c,t.exports.TOKEN=u}]),r=[n,n(18),n(19)],void 0===(i=function(t){var e=n(18),r=n(19);return{html_beautify:function(t,n){return a(t,n,e.js_beautify,r.css_beautify)}}}.apply(e,r))||(t.exports=i)},function(t,e,n){var r=n(7);t.exports=(r.default||r).template({1:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lambda,u=t.escapeExpression,l=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <div "+(null!=(a=l(n,"class").call(o,"header",{name:"class",hash:{},data:i}))?a:"")+"> "+(null!=(a=l(n,"repeat").call(o,null!=(a=null!=e?l(e,"group"):e)?l(a,"indentLevel"):a,{name:"repeat",hash:{},fn:t.program(2,i,0),inverse:t.noop,data:i}))?a:"")+" <div "+(null!=(a=l(n,"class").call(o,"time-container",{name:"class",hash:{},data:i}))?a:"")+"><span>"+u(s(null!=e?l(e,"time"):e,e))+"</span><span>"+u(s(null!=e?l(e,"from"):e,e))+"</span></div></div> "},2:function(t,e,n,r,i){var a;return" <div "+(null!=(a=(t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]})(n,"class").call(null!=e?e:t.nullContext||{},"nesting-level",{name:"class",hash:{},data:i}))?a:"")+"></div> "},4:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <div "+(null!=(a=s(n,"class").call(o,"icon-container",{name:"class",hash:{},data:i}))?a:"")+"><span "+(null!=(a=s(n,"class").call(o,s(n,"concat").call(o,"icon icon-",null!=e?s(e,"icon"):e,{name:"concat",hash:{},data:i}),{name:"class",hash:{},data:i}))?a:"")+"></span></div> "},compiler:[8,">= 4.3.0"],main:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return(null!=(a=s(n,"if").call(o,null!=e?s(e,"displayHeader"):e,{name:"if",hash:{},fn:t.program(1,i,0),inverse:t.noop,data:i}))?a:"")+" <div "+(null!=(a=s(n,"class").call(o,s(n,"concat").call(o,null!=e?s(e,"type"):e," log-item",{name:"concat",hash:{},data:i}),{name:"class",hash:{},data:i}))?a:"")+"> "+(null!=(a=s(n,"repeat").call(o,null!=(a=null!=e?s(e,"group"):e)?s(a,"indentLevel"):a,{name:"repeat",hash:{},fn:t.program(2,i,0),inverse:t.noop,data:i}))?a:"")+" "+(null!=(a=s(n,"if").call(o,null!=e?s(e,"icon"):e,{name:"if",hash:{},fn:t.program(4,i,0),inverse:t.noop,data:i}))?a:"")+" <div "+(null!=(a=s(n,"class").call(o,"count-container hidden",{name:"class",hash:{},data:i}))?a:"")+"><div "+(null!=(a=s(n,"class").call(o,"count",{name:"class",hash:{},data:i}))?a:"")+"></div></div><div "+(null!=(a=s(n,"class").call(o,"log-content-wrapper",{name:"class",hash:{},data:i}))?a:"")+"><div "+(null!=(a=s(n,"class").call(o,"log-content",{name:"class",hash:{},data:i}))?a:"")+">"+(null!=(a=t.lambda(null!=e?s(e,"msg"):e,e))?a:"")+"</div></div></div>"},useData:!0})},function(t,e,n){(e=n(8)(!1)).push([t.i,"._console-container ._logs-container{$oy:auto;$wos:touch;$h:100%;$po:relative;$wc:scroll-position}._console-container ._fake-logs{$po:absolute;$l:0;$t:0;$pe:none;$v:hidden;$w:100%}._console-container ._fake-logs *{$o:hidden;$c:#000;$po:static}._console-container ._logs{$fs:14px;$pt:1px}._console-container ._log-container{$bsi:content-box}._console-container ._header{$ws:nowrap;$d:flex;$fs:12px;$c:var(--link-color);$bt:1px solid transparent;$bb:1px solid var(--border)}._console-container ._header ._time-container{$ox:auto;$wos:touch;$p:3px 10px}._console-container ._nesting-level{$w:14px;$fsh:0;$mt:-1px;$mb:-1px;$po:relative;$br:1px solid var(--border)}._console-container ._nesting-level._group-closed::before{$co:''}._console-container ._nesting-level::before{$bb:1px solid var(--border);$po:absolute;$t:0;$l:0;$ml:100%;$w:5px;$h:100%;$bsi:border-box}._console-container ._log-item{$po:relative;$d:flex;$bt:1px solid transparent;$bb:1px solid var(--border);$mt:-1px;$mh:24px;$c:var(--foreground)}._console-container ._log-item:after{$co:'';$d:block;$cl:both}._console-container ._log-item a{$c:var(--link-color)!important}._console-container ._log-item ._icon-container{$pt:2px;$m:0 -6px 0 10px}._console-container ._log-item ._icon-container ._icon{$lh:20px;$fs:12px;$c:var(--foreground);$po:relative}._console-container ._log-item ._icon-container ._icon-caret-down,._console-container ._log-item ._icon-container ._icon-caret-right{$l:-2px}._console-container ._log-item ._icon-container ._icon-error{$c:#ef3842}._console-container ._log-item ._icon-container ._icon-warn{$t:-1px;$c:#e8a400}._console-container ._log-item ._count{$b:var(--text-color);$p:2px 4px;$c:#000;$bra:10px;$fs:12px;$f:left;$m:2px -6px 0 10px}._console-container ._log-item ._log-content-wrapper{$fl:1;$o:hidden}._console-container ._log-item ._log-content{$p:3px 0;$m:0 10px;$ox:auto;$wos:touch;$ws:pre-wrap;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;$us:text}._console-container ._log-item ._log-content *{-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;$us:text}._console-container ._log-item._html table,._console-container ._log-item._table table{$w:100%;$bc:collapse;$o:hidden;$c:var(--foreground)}._console-container ._log-item._html table th,._console-container ._log-item._table table th{$b:var(--darker-background)}._console-container ._log-item._html table td,._console-container ._log-item._html table th,._console-container ._log-item._table table td,._console-container ._log-item._table table th{$bo:1px solid var(--border);$p:3px 10px}._console-container ._log-item._html table tr:nth-child(even),._console-container ._log-item._table table tr:nth-child(even){$b:var(--contrast)}._console-container ._log-item._error{$z:50;$b:var(--console-error-background);$c:var(--console-error-foreground);$bt:1px solid var(--console-error-border);$bb:1px solid var(--console-error-border)}._console-container ._log-item._error ._stack{$pl:1.2em;$ws:nowrap}._console-container ._log-item._error ._count{$b:var(--console-error-foreground)}._console-container ._log-item._debug{$z:20}._console-container ._log-item._input{border-bottom-color:transparent}._console-container ._log-item._warn{$z:40;$c:var(--console-warn-foreground);$b:var(--console-warn-background);$bt:1px solid var(--console-warn-border);$bb:1px solid var(--console-warn-border)}._console-container ._log-item._warn ._count{$b:#e8a400}._console-container ._log-item._info{$z:30}._console-container ._log-item._group,._console-container ._log-item._groupCollapsed{$fw:700}",""]),t.exports=e},function(t,e,n){(e=n(8)(!1)).push([t.i,"._container ._console-container{$pt:40px;$pb:24px}._console-container{$w:100%;$h:100%}._console-container._js-input-hidden{$pb:0}._console-container ._control{$po:absolute;$w:100%;$h:40px;$l:0;$t:0;$cu:default;$fs:0;$p:10px 10px 10px 35px;$b:var(--darker-background);$c:var(--primary);$lh:20px;$bb:1px solid var(--border)}._console-container ._control ._icon-clear,._console-container ._control ._icon-search{$d:inline-block;$p:10px;$fs:16px;$po:absolute;$t:1px;$cu:pointer;$tr:color .3s}._console-container ._control ._icon-clear:active,._console-container ._control ._icon-search:active{$c:var(--accent)}._console-container ._control ._icon-clear{padding-right:0;$l:0}._console-container ._control ._icon-search{right:0}._console-container ._control ._filter{$cu:pointer;$fs:12px;$h:20px;$d:inline-block;$m:0 2px;$p:0 4px;$lh:20px;$tr:background .3s,color .3s}._console-container ._control ._filter._active{$b:var(--highlight);$c:var(--select-foreground)}._console-container ._control ._search-keyword{$po:absolute;$lh:20px;max-width:80px;$o:hidden;right:40px;$fs:14px;text-overflow:ellipsis}._console-container ._js-input{$pe:none;$po:absolute;$z:100;$l:0;bottom:0;$w:100%;$bt:1px solid var(--border);$h:24px}._console-container ._js-input ._icon-arrow-right{$lh:23px;$c:var(--accent);$po:absolute;$l:10px;$t:0;$z:10}._console-container ._js-input._active{$h:100%;$pt:40px;$pb:40px;$bt:none}._console-container ._js-input._active ._icon-arrow-right{$d:none}._console-container ._js-input._active textarea{$pl:10px}._console-container ._js-input ._buttons{$d:none;$po:absolute;$l:0;bottom:0;$w:100%;$h:40px;$c:var(--primary);$b:var(--darker-background);$fs:12px;$bt:1px solid var(--border)}._console-container ._js-input ._buttons ._button{$pe:all;$cu:pointer;$w:50%;$d:inline-block;$ta:center;$br:1px solid var(--border);$h:40px;$lh:40px;$tr:background .3s,color .3s}._console-container ._js-input ._buttons ._button:last-child{$br:none}._console-container ._js-input ._buttons ._button:active{$c:var(--select-foreground);$b:var(--highlight)}._console-container ._js-input textarea{$pe:all;$p:3px 10px;$pl:25px;$ou:0;$bo:none;$fs:14px;$w:100%;$h:100%;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;$us:text;resize:none;$c:var(--primary);$b:var(--background)}",""]),t.exports=e},function(t,e,n){var r=n(7);t.exports=(r.default||r).template({compiler:[8,">= 4.3.0"],main:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return"<div "+(null!=(a=s(n,"class").call(o,"console-container",{name:"class",hash:{},data:i}))?a:"")+"><div "+(null!=(a=s(n,"class").call(o,"control",{name:"class",hash:{},data:i}))?a:"")+"><span "+(null!=(a=s(n,"class").call(o,"icon-clear clear-console",{name:"class",hash:{},data:i}))?a:"")+"></span> <span "+(null!=(a=s(n,"class").call(o,"filter active",{name:"class",hash:{},data:i}))?a:"")+' data-filter="all">All</span> <span '+(null!=(a=s(n,"class").call(o,"filter",{name:"class",hash:{},data:i}))?a:"")+' data-filter="error">Error</span> <span '+(null!=(a=s(n,"class").call(o,"filter",{name:"class",hash:{},data:i}))?a:"")+' data-filter="warn">Warning</span> <span '+(null!=(a=s(n,"class").call(o,"filter",{name:"class",hash:{},data:i}))?a:"")+' data-filter="info">Info</span> <span '+(null!=(a=s(n,"class").call(o,"search-keyword",{name:"class",hash:{},data:i}))?a:"")+"></span> <span "+(null!=(a=s(n,"class").call(o,"icon-search search",{name:"class",hash:{},data:i}))?a:"")+"></span></div><div "+(null!=(a=s(n,"class").call(o,"logs-container",{name:"class",hash:{},data:i}))?a:"")+"><div "+(null!=(a=s(n,"class").call(o,"top-space",{name:"class",hash:{},data:i}))?a:"")+"></div><ul "+(null!=(a=s(n,"class").call(o,"fake-logs",{name:"class",hash:{},data:i}))?a:"")+"></ul><ul "+(null!=(a=s(n,"class").call(o,"logs",{name:"class",hash:{},data:i}))?a:"")+"></ul><div "+(null!=(a=s(n,"class").call(o,"bottom-space",{name:"class",hash:{},data:i}))?a:"")+"></div></div><div "+(null!=(a=s(n,"class").call(o,"js-input",{name:"class",hash:{},data:i}))?a:"")+"><div "+(null!=(a=s(n,"class").call(o,"buttons",{name:"class",hash:{},data:i}))?a:"")+"><div "+(null!=(a=s(n,"class").call(o,"button cancel",{name:"class",hash:{},data:i}))?a:"")+">Cancel</div><div "+(null!=(a=s(n,"class").call(o,"button execute",{name:"class",hash:{},data:i}))?a:"")+">Execute</div></div><span "+(null!=(a=s(n,"class").call(o,"icon-arrow-right",{name:"class",hash:{},data:i}))?a:"")+"></span> <textarea></textarea></div></div>"},useData:!0})},function(t,e,n){(e=n(8)(!1)).push([t.i,"#_network{$pt:36px}#_network ._title{$po:absolute;$w:100%;$h:36px;$l:0;$t:0;$b:var(--darker-background);$p:10px;$c:var(--primary);$h:36px;$bb:1px solid var(--border)}#_network ._title ._btn{$d:flex;$ml:5px;$f:right;$c:var(--primary);$w:18px;$h:18px;justify-content:center;align-items:center;$fs:16px;$cu:pointer;$tr:color .3s}#_network ._title ._btn._search-keyword{$w:auto;max-width:80px;$fs:14px;$o:hidden;text-overflow:ellipsis;$d:inline-block}#_network ._title ._btn:active{$c:var(--accent)}#_network ._requests{$oy:auto;$wos:touch;$h:100%;$bb:1px solid var(--border);$mb:10px}#_network ._requests li{$d:flex;$w:100%;$cu:pointer;$bb:1px solid var(--border);$h:41px;$c:var(--foreground);$ws:nowrap}#_network ._requests li._error span{$c:var(--console-error-foreground)}#_network ._requests li span{$d:block;$lh:40px;$h:40px;$p:0 5px;$fs:12px;vertical-align:top;text-overflow:ellipsis;$o:hidden}#_network ._requests li ._name{$fl:1;$pl:10px}#_network ._requests li ._status{$w:40px}#_network ._requests li ._method,#_network ._requests li ._type{$w:50px}#_network ._requests li ._size{$w:70px}#_network ._requests li ._time{$w:60px;padding-right:10px}#_network ._requests li:nth-child(even){$b:var(--contrast)}#_network ._detail{$po:absolute;$w:100%;$h:100%;$l:0;$t:0;$z:10;$d:none;$pb:40px;$b:var(--background)}#_network ._detail ._http{$oy:auto;$wos:touch;$h:100%}#_network ._detail ._http ._breadcrumb{$b:var(--darker-background);$c:var(--primary);-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;$us:text;$mb:10px;word-break:break-all;$p:10px;$fs:16px;$mh:40px;$bb:1px solid var(--border)}#_network ._detail ._http ._section{$bt:1px solid var(--border);$bb:1px solid var(--border);$mb:10px}#_network ._detail ._http ._section h2{$b:var(--darker-background);$c:var(--primary);$p:10px;$fs:14px}#_network ._detail ._http ._section table{$c:var(--foreground)}#_network ._detail ._http ._section table *{-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;$us:text}#_network ._detail ._http ._section table td{$fs:12px;$p:5px 10px;word-break:break-all}#_network ._detail ._http ._section table ._key{$ws:nowrap;$fw:700;$c:var(--accent)}#_network ._detail ._http ._data,#_network ._detail ._http ._response{-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;$us:text;$ox:auto;$wos:touch;$p:10px;$fs:12px;$mb:10px;$ws:pre-wrap;$bt:1px solid var(--border);$c:var(--foreground);$bb:1px solid var(--border)}#_network ._detail ._back{$po:absolute;$l:0;bottom:0;$c:var(--foreground);$w:100%;$bt:1px solid var(--border);$b:var(--darker-background);$d:block;$h:40px;$lh:40px;text-decoration:none;$ta:center;$mt:10px;$tr:background .3s;$cu:pointer}#_network ._detail ._back:active{$c:var(--select-foreground)}",""]),t.exports=e},function(t,e,n){var r=n(7);t.exports=(r.default||r).template({compiler:[8,">= 4.3.0"],main:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return"<div "+(null!=(a=s(n,"class").call(o,"title",{name:"class",hash:{},data:i}))?a:"")+">Request<div "+(null!=(a=s(n,"class").call(o,"btn clear-request",{name:"class",hash:{},data:i}))?a:"")+"><span "+(null!=(a=s(n,"class").call(o,"icon-clear",{name:"class",hash:{},data:i}))?a:"")+"></span></div></div><ul "+(null!=(a=s(n,"class").call(o,"requests",{name:"class",hash:{},data:i}))?a:"")+"></ul><div "+(null!=(a=s(n,"class").call(o,"detail",{name:"class",hash:{},data:i}))?a:"")+"></div>"},useData:!0})},function(t,e,n){var r=n(7);t.exports=(r.default||r).template({1:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <pre "+(null!=(a=o(n,"class").call(null!=e?e:t.nullContext||{},"data",{name:"class",hash:{},data:i}))?a:"")+">"+t.escapeExpression(t.lambda(null!=e?o(e,"data"):e,e))+"</pre> "},3:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" "+(null!=(a=o(n,"each").call(null!=e?e:t.nullContext||{},null!=e?o(e,"reqHeaders"):e,{name:"each",hash:{},fn:t.program(4,i,0),inverse:t.noop,data:i}))?a:"")+" "},4:function(t,e,n,r,i){var a,o=t.lambda,s=t.escapeExpression,u=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <tr><td "+(null!=(a=u(n,"class").call(null!=e?e:t.nullContext||{},"key",{name:"class",hash:{},data:i}))?a:"")+">"+s(o(i&&u(i,"key"),e))+"</td><td>"+s(o(e,e))+"</td></tr> "},6:function(t,e,n,r,i){return" <tr><td>Empty</td></tr> "},8:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" "+(null!=(a=o(n,"each").call(null!=e?e:t.nullContext||{},null!=e?o(e,"resHeaders"):e,{name:"each",hash:{},fn:t.program(4,i,0),inverse:t.noop,data:i}))?a:"")+" "},10:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <pre "+(null!=(a=o(n,"class").call(null!=e?e:t.nullContext||{},"response",{name:"class",hash:{},data:i}))?a:"")+">"+t.escapeExpression(t.lambda(null!=e?o(e,"resTxt"):e,e))+"</pre> "},compiler:[8,">= 4.3.0"],main:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return"<div "+(null!=(a=s(n,"class").call(o,"http",{name:"class",hash:{},data:i}))?a:"")+"><div "+(null!=(a=s(n,"class").call(o,"breadcrumb",{name:"class",hash:{},data:i}))?a:"")+">"+t.escapeExpression(t.lambda(null!=e?s(e,"url"):e,e))+"</div> "+(null!=(a=s(n,"if").call(o,null!=e?s(e,"data"):e,{name:"if",hash:{},fn:t.program(1,i,0),inverse:t.noop,data:i}))?a:"")+" <div "+(null!=(a=s(n,"class").call(o,"section",{name:"class",hash:{},data:i}))?a:"")+"><h2>Request Headers</h2><table "+(null!=(a=s(n,"class").call(o,"headers",{name:"class",hash:{},data:i}))?a:"")+"><tbody> "+(null!=(a=s(n,"if").call(o,null!=e?s(e,"reqHeaders"):e,{name:"if",hash:{},fn:t.program(3,i,0),inverse:t.program(6,i,0),data:i}))?a:"")+" </tbody></table><h2>Response Headers</h2><table "+(null!=(a=s(n,"class").call(o,"headers",{name:"class",hash:{},data:i}))?a:"")+"><tbody> "+(null!=(a=s(n,"if").call(o,null!=e?s(e,"resHeaders"):e,{name:"if",hash:{},fn:t.program(8,i,0),inverse:t.program(6,i,0),data:i}))?a:"")+" </tbody></table></div> "+(null!=(a=s(n,"if").call(o,null!=e?s(e,"resTxt"):e,{name:"if",hash:{},fn:t.program(10,i,0),inverse:t.noop,data:i}))?a:"")+" </div><div "+(null!=(a=s(n,"class").call(o,"back",{name:"class",hash:{},data:i}))?a:"")+">Back to the List</div>"},useData:!0})},function(t,e,n){var r=n(7);t.exports=(r.default||r).template({1:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" "+(null!=(a=o(n,"each").call(null!=e?e:t.nullContext||{},null!=e?o(e,"requests"):e,{name:"each",hash:{},fn:t.program(2,i,0),inverse:t.noop,data:i}))?a:"")+" "},2:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lambda,u=t.escapeExpression,l=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return' <li class="eruda-request '+(null!=(a=l(n,"if").call(o,null!=e?l(e,"hasErr"):e,{name:"if",hash:{},fn:t.program(3,i,0),inverse:t.noop,data:i}))?a:"")+'" data-id="'+u(s(i&&l(i,"key"),e))+'"><span '+(null!=(a=l(n,"class").call(o,"name",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=e?l(e,"name"):e,e))+"</span><span "+(null!=(a=l(n,"class").call(o,"status",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=e?l(e,"status"):e,e))+"</span><span "+(null!=(a=l(n,"class").call(o,"method",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=e?l(e,"method"):e,e))+"</span><span "+(null!=(a=l(n,"class").call(o,"type",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=e?l(e,"subType"):e,e))+"</span><span "+(null!=(a=l(n,"class").call(o,"size",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=e?l(e,"size"):e,e))+"</span><span "+(null!=(a=l(n,"class").call(o,"time",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=e?l(e,"displayTime"):e,e))+"</span></li> "},3:function(t,e,n,r,i){return"eruda-error"},5:function(t,e,n,r,i){var a;return" <li><span "+(null!=(a=(t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]})(n,"class").call(null!=e?e:t.nullContext||{},"name",{name:"class",hash:{},data:i}))?a:"")+">Empty</span></li> "},compiler:[8,">= 4.3.0"],main:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return null!=(a=o(n,"if").call(null!=e?e:t.nullContext||{},null!=e?o(e,"requests"):e,{name:"if",hash:{},fn:t.program(1,i,0),inverse:t.program(5,i,0),data:i}))?a:""},useData:!0})},function(t,e,n){(e=n(8)(!1)).push([t.i,"._elements-highlight{$d:none;$po:absolute;$l:0;right:0;$z:-100;$pe:none!important}._elements-highlight *{$pe:none!important}._elements-highlight ._indicator{opacity:.5;$po:absolute;$l:0;right:0;$w:100%;$h:100%}._elements-highlight ._margin{$po:absolute;$b:#e8925b;$z:100}._elements-highlight ._border{$po:absolute;$l:0;right:0;$w:100%;$h:100%;$b:#ffcd7c;$z:200}._elements-highlight ._padding{$po:absolute;$b:#86af76;$z:300}._elements-highlight ._content{$po:absolute;$b:#5e88c1;$z:400}._elements-highlight ._size{$po:absolute;$t:0;$l:0;$b:#fff;$c:#222;$fs:12px;$h:25px;$lh:25px;$ta:center;$p:0 5px;$ws:nowrap;$ox:hidden;$bs:0 2px 2px 0 rgba(0,0,0,.05),0 1px 4px 0 rgba(0,0,0,.08),0 3px 1px -2px rgba(0,0,0,.2)}",""]),t.exports=e},function(t,e,n){var r=n(7);t.exports=(r.default||r).template({compiler:[8,">= 4.3.0"],main:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return"<div "+(null!=(a=s(n,"class").call(o,"elements-highlight",{name:"class",hash:{},data:i}))?a:"")+"><div "+(null!=(a=s(n,"class").call(o,"indicator",{name:"class",hash:{},data:i}))?a:"")+"><div "+(null!=(a=s(n,"class").call(o,"margin",{name:"class",hash:{},data:i}))?a:"")+"></div><div "+(null!=(a=s(n,"class").call(o,"border",{name:"class",hash:{},data:i}))?a:"")+"></div><div "+(null!=(a=s(n,"class").call(o,"padding",{name:"class",hash:{},data:i}))?a:"")+"></div><div "+(null!=(a=s(n,"class").call(o,"content",{name:"class",hash:{},data:i}))?a:"")+"></div></div><div "+(null!=(a=s(n,"class").call(o,"size",{name:"class",hash:{},data:i}))?a:"")+"></div></div>"},useData:!0})},function(t,e,n){(e=n(8)(!1)).push([t.i,"#_elements{$pb:40px;$fs:14px}#_elements ._show-area{$oy:auto;$wos:touch;$h:100%}#_elements ._parents{$ox:auto;$wos:touch;$b:var(--darker-background);$c:var(--primary);$p:10px;$ws:nowrap;$bb:1px solid var(--border);$cu:pointer;$fs:12px}#_elements ._parents li{$d:inline-block}#_elements ._parents li ._parent{$d:inline-block}#_elements ._parents li:last-child{margin-right:0}#_elements ._parents ._icon-arrow-right{$fs:8px;$po:relative;$t:-1px}#_elements ._breadcrumb{$b:var(--darker-background);$c:var(--primary);-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;$us:text;$mb:10px;word-break:break-all;$p:10px;$fs:16px;$mh:40px;$bb:1px solid var(--border);$cu:pointer;$tr:background .3s,color .3s}#_elements ._breadcrumb:active{$b:var(--highlight);$c:var(--select-foreground)}#_elements ._breadcrumb:active span{$c:var(--select-foreground)}#_elements ._section{$bb:1px solid var(--border);$c:var(--foreground);$mb:10px}#_elements ._section h2{$c:var(--primary);$b:var(--darker-background);$bt:1px solid var(--border);$p:10px;$fs:14px;$tr:background .3s}#_elements ._section h2 ._btn{$d:flex;$ml:5px;$f:right;$c:var(--primary);$w:18px;$h:18px;justify-content:center;align-items:center;$fs:16px;$cu:pointer;$tr:color .3s}#_elements ._section h2 ._btn._search-keyword{$w:auto;max-width:80px;$fs:14px;$o:hidden;text-overflow:ellipsis;$d:inline-block}#_elements ._section h2 ._btn:active{$c:var(--accent)}#_elements ._section h2._active-effect{$cu:pointer}#_elements ._section h2._active-effect:active{$b:var(--highlight);$c:var(--select-foreground)}#_elements ._children{$b:var(--darker-background);$c:var(--foreground);$mb:10px!important;$bb:1px solid var(--border)}#_elements ._children li{$ox:auto;$wos:touch;$cu:default;$p:10px;$bt:1px solid var(--border);$ws:nowrap;$tr:background .3s,color .3s}#_elements ._children li span{$tr:color .3s}#_elements ._children li._active-effect{$cu:pointer}#_elements ._children li._active-effect:active{$b:var(--highlight);$c:var(--select-foreground)}#_elements ._children li._active-effect:active span{$c:var(--select-foreground)}#_elements ._attributes{$fs:12px}#_elements ._attributes a{$c:var(--link-color)}#_elements ._attributes ._table-wrapper{$ox:auto;$wos:touch}#_elements ._attributes table td{$p:5px 10px}#_elements ._text-content{$b:#fff}#_elements ._text-content ._content{$ox:auto;$wos:touch;$p:10px}#_elements ._style-color{$po:relative;$t:1px;$w:10px;$h:10px;$bra:50%;margin-right:2px;$bo:1px solid var(--border);$d:inline-block}#_elements ._box-model{$ox:auto;$wos:touch;$c:#222;$fs:12px;$p:10px;$ta:center;$ws:nowrap;$bb:1px solid var(--color)}#_elements ._box-model ._label{$po:absolute;$ml:3px;$p:0 2px}#_elements ._box-model ._bottom,#_elements ._box-model ._left,#_elements ._box-model ._right,#_elements ._box-model ._top{$d:inline-block}#_elements ._box-model ._left,#_elements ._box-model ._right{vertical-align:middle}#_elements ._box-model ._border,#_elements ._box-model ._content,#_elements ._box-model ._margin,#_elements ._box-model ._padding,#_elements ._box-model ._position{$po:relative;$b:#fff;$d:inline-block;$ta:center;vertical-align:middle;$p:3px;$m:3px}#_elements ._box-model ._position{$bo:1px grey dotted}#_elements ._box-model ._margin{$bo:1px dashed;$b:rgba(246,178,107,.66)}#_elements ._box-model ._border{$bo:1px #000 solid;$b:rgba(255,229,153,.66)}#_elements ._box-model ._padding{$bo:1px grey dashed;$b:rgba(147,196,125,.55)}#_elements ._box-model ._content{$bo:1px grey solid;min-width:100px;$b:rgba(111,168,220,.66)}#_elements ._computed-style{$fs:12px}#_elements ._computed-style a{$c:var(--link-color)}#_elements ._computed-style ._table-wrapper{$oy:auto;$wos:touch;max-height:200px;$bt:1px solid var(--border)}#_elements ._computed-style table td{$p:5px 10px}#_elements ._computed-style table td._key{$ws:nowrap;$c:var(--var-color)}#_elements ._styles{$fs:12px}#_elements ._styles ._style-wrapper{$p:10px}#_elements ._styles ._style-wrapper ._style-rules{$bo:1px solid var(--border);$p:10px;$mb:10px}#_elements ._styles ._style-wrapper ._style-rules ._rule{$pl:2em;word-break:break-all}#_elements ._styles ._style-wrapper ._style-rules ._rule a{$c:var(--link-color)}#_elements ._styles ._style-wrapper ._style-rules ._rule span{$c:var(--var-color)}#_elements ._styles ._style-wrapper ._style-rules:last-child{$mb:0}#_elements ._listeners{$fs:12px}#_elements ._listeners ._listener-wrapper{$p:10px}#_elements ._listeners ._listener-wrapper ._listener{$mb:10px;$o:hidden;$bo:1px solid var(--border)}#_elements ._listeners ._listener-wrapper ._listener ._listener-type{$p:10px;$b:var(--darker-background);$c:var(--primary)}#_elements ._listeners ._listener-wrapper ._listener ._listener-content li{$ox:auto;$wos:touch;$p:10px;$bt:none}#_elements ._bottom-bar{$h:40px;$b:var(--darker-background);$po:absolute;$l:0;bottom:0;$w:100%;$fs:0;$bt:1px solid var(--border)}#_elements ._bottom-bar ._btn{$cu:pointer;$ta:center;$c:var(--primary);$fs:14px;$lh:40px;$w:25%;$d:inline-block;$tr:background .3s,color .3s}#_elements ._bottom-bar ._btn:active{$b:var(--highlight);$c:var(--select-foreground)}#_elements ._bottom-bar ._btn._active{$c:var(--accent)}",""]),t.exports=e},function(t,e,n){var r=n(7);t.exports=(r.default||r).template({1:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <ul "+(null!=(a=s(n,"class").call(o,"parents",{name:"class",hash:{},data:i}))?a:"")+"> "+(null!=(a=s(n,"each").call(o,null!=e?s(e,"parents"):e,{name:"each",hash:{},fn:t.program(2,i,0),inverse:t.noop,data:i}))?a:"")+" </ul> "},2:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lambda,u=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <li><div "+(null!=(a=u(n,"class").call(o,"parent",{name:"class",hash:{},data:i}))?a:"")+' data-idx="'+t.escapeExpression(s(null!=e?u(e,"idx"):e,e))+'">'+(null!=(a=s(null!=e?u(e,"text"):e,e))?a:"")+"</div><span "+(null!=(a=u(n,"class").call(o,"icon-arrow-right",{name:"class",hash:{},data:i}))?a:"")+"></span></li> "},4:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <ul "+(null!=(a=s(n,"class").call(o,"children",{name:"class",hash:{},data:i}))?a:"")+"> "+(null!=(a=s(n,"each").call(o,null!=e?s(e,"children"):e,{name:"each",hash:{},fn:t.program(5,i,0),inverse:t.noop,data:i}))?a:"")+" </ul> "},5:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lambda,u=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return' <li class="eruda-child '+(null!=(a=u(n,"if").call(o,null!=e?u(e,"isCmt"):e,{name:"if",hash:{},fn:t.program(6,i,0),inverse:t.noop,data:i}))?a:"")+" "+(null!=(a=u(n,"if").call(o,null!=e?u(e,"isEl"):e,{name:"if",hash:{},fn:t.program(8,i,0),inverse:t.noop,data:i}))?a:"")+'" data-idx="'+t.escapeExpression(s(null!=e?u(e,"idx"):e,e))+'">'+(null!=(a=s(null!=e?u(e,"text"):e,e))?a:"")+"</li> "},6:function(t,e,n,r,i){return"eruda-green"},8:function(t,e,n,r,i){return"eruda-active-effect"},10:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" "+(null!=(a=o(n,"each").call(null!=e?e:t.nullContext||{},null!=e?o(e,"attributes"):e,{name:"each",hash:{},fn:t.program(11,i,0),inverse:t.noop,data:i}))?a:"")+" "},11:function(t,e,n,r,i){var a,o=t.lambda,s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return' <tr><td class="eruda-attribute-name-color">'+t.escapeExpression(o(null!=e?s(e,"name"):e,e))+'</td><td class="eruda-string-color">'+(null!=(a=o(null!=e?s(e,"value"):e,e))?a:"")+"</td></tr> "},13:function(t,e,n,r,i){return" <tr><td>Empty</td></tr> "},15:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <div "+(null!=(a=s(n,"class").call(o,"styles section",{name:"class",hash:{},data:i}))?a:"")+"><h2>Styles</h2><div "+(null!=(a=s(n,"class").call(o,"style-wrapper",{name:"class",hash:{},data:i}))?a:"")+"> "+(null!=(a=s(n,"each").call(o,null!=e?s(e,"styles"):e,{name:"each",hash:{},fn:t.program(16,i,0),inverse:t.noop,data:i}))?a:"")+" </div></div> "},16:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <div "+(null!=(a=s(n,"class").call(o,"style-rules",{name:"class",hash:{},data:i}))?a:"")+"><div>"+t.escapeExpression(t.lambda(null!=e?s(e,"selectorText"):e,e))+" {</div> "+(null!=(a=s(n,"each").call(o,null!=e?s(e,"style"):e,{name:"each",hash:{},fn:t.program(17,i,0),inverse:t.noop,data:i}))?a:"")+" <div>}</div></div> "},17:function(t,e,n,r,i){var a,o=t.lambda,s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <div "+(null!=(a=s(n,"class").call(null!=e?e:t.nullContext||{},"rule",{name:"class",hash:{},data:i}))?a:"")+"><span>"+t.escapeExpression(o(i&&s(i,"key"),e))+"</span>: "+(null!=(a=o(e,e))?a:"")+";</div> "},19:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lambda,u=t.escapeExpression,l=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <div "+(null!=(a=l(n,"class").call(o,"computed-style section",{name:"class",hash:{},data:i}))?a:"")+"><h2>Computed Style "+(null!=(a=l(n,"if").call(o,null!=e?l(e,"rmDefComputedStyle"):e,{name:"if",hash:{},fn:t.program(20,i,0),inverse:t.program(22,i,0),data:i}))?a:"")+" <div "+(null!=(a=l(n,"class").call(o,"btn computed-style-search",{name:"class",hash:{},data:i}))?a:"")+"><span "+(null!=(a=l(n,"class").call(o,"icon-search",{name:"class",hash:{},data:i}))?a:"")+"></span></div> "+(null!=(a=l(n,"if").call(o,null!=e?l(e,"computedStyleSearchKeyword"):e,{name:"if",hash:{},fn:t.program(24,i,0),inverse:t.noop,data:i}))?a:"")+" </h2><div "+(null!=(a=l(n,"class").call(o,"box-model",{name:"class",hash:{},data:i}))?a:"")+"> "+(null!=(a=l(n,"if").call(o,null!=(a=null!=e?l(e,"boxModel"):e)?l(a,"position"):a,{name:"if",hash:{},fn:t.program(26,i,0),inverse:t.noop,data:i}))?a:"")+"<div "+(null!=(a=l(n,"class").call(o,"margin",{name:"class",hash:{},data:i}))?a:"")+"><div "+(null!=(a=l(n,"class").call(o,"label",{name:"class",hash:{},data:i}))?a:"")+">margin</div><div "+(null!=(a=l(n,"class").call(o,"top",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=(a=null!=(a=null!=e?l(e,"boxModel"):e)?l(a,"margin"):a)?l(a,"top"):a,e))+"</div><br><div "+(null!=(a=l(n,"class").call(o,"left",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=(a=null!=(a=null!=e?l(e,"boxModel"):e)?l(a,"margin"):a)?l(a,"left"):a,e))+"</div><div "+(null!=(a=l(n,"class").call(o,"border",{name:"class",hash:{},data:i}))?a:"")+"><div "+(null!=(a=l(n,"class").call(o,"label",{name:"class",hash:{},data:i}))?a:"")+">border</div><div "+(null!=(a=l(n,"class").call(o,"top",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=(a=null!=(a=null!=e?l(e,"boxModel"):e)?l(a,"border"):a)?l(a,"top"):a,e))+"</div><br><div "+(null!=(a=l(n,"class").call(o,"left",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=(a=null!=(a=null!=e?l(e,"boxModel"):e)?l(a,"border"):a)?l(a,"left"):a,e))+"</div><div "+(null!=(a=l(n,"class").call(o,"padding",{name:"class",hash:{},data:i}))?a:"")+"><div "+(null!=(a=l(n,"class").call(o,"label",{name:"class",hash:{},data:i}))?a:"")+">padding</div><div "+(null!=(a=l(n,"class").call(o,"top",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=(a=null!=(a=null!=e?l(e,"boxModel"):e)?l(a,"padding"):a)?l(a,"top"):a,e))+"</div><br><div "+(null!=(a=l(n,"class").call(o,"left",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=(a=null!=(a=null!=e?l(e,"boxModel"):e)?l(a,"padding"):a)?l(a,"left"):a,e))+"</div><div "+(null!=(a=l(n,"class").call(o,"content",{name:"class",hash:{},data:i}))?a:"")+"><span>"+u(s(null!=(a=null!=(a=null!=e?l(e,"boxModel"):e)?l(a,"content"):a)?l(a,"width"):a,e))+"</span>&nbsp;×&nbsp;<span>"+u(s(null!=(a=null!=(a=null!=e?l(e,"boxModel"):e)?l(a,"content"):a)?l(a,"height"):a,e))+"</span></div><div "+(null!=(a=l(n,"class").call(o,"right",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=(a=null!=(a=null!=e?l(e,"boxModel"):e)?l(a,"padding"):a)?l(a,"right"):a,e))+"</div><br><div "+(null!=(a=l(n,"class").call(o,"bottom",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=(a=null!=(a=null!=e?l(e,"boxModel"):e)?l(a,"padding"):a)?l(a,"bottom"):a,e))+"</div></div><div "+(null!=(a=l(n,"class").call(o,"right",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=(a=null!=(a=null!=e?l(e,"boxModel"):e)?l(a,"border"):a)?l(a,"right"):a,e))+"</div><br><div "+(null!=(a=l(n,"class").call(o,"bottom",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=(a=null!=(a=null!=e?l(e,"boxModel"):e)?l(a,"border"):a)?l(a,"bottom"):a,e))+"</div></div><div "+(null!=(a=l(n,"class").call(o,"right",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=(a=null!=(a=null!=e?l(e,"boxModel"):e)?l(a,"margin"):a)?l(a,"right"):a,e))+"</div><br><div "+(null!=(a=l(n,"class").call(o,"bottom",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=(a=null!=(a=null!=e?l(e,"boxModel"):e)?l(a,"margin"):a)?l(a,"bottom"):a,e))+"</div></div>"+(null!=(a=l(n,"if").call(o,null!=(a=null!=e?l(e,"boxModel"):e)?l(a,"position"):a,{name:"if",hash:{},fn:t.program(28,i,0),inverse:t.noop,data:i}))?a:"")+" </div><div "+(null!=(a=l(n,"class").call(o,"table-wrapper",{name:"class",hash:{},data:i}))?a:"")+"><table><tbody> "+(null!=(a=l(n,"each").call(o,null!=e?l(e,"computedStyle"):e,{name:"each",hash:{},fn:t.program(30,i,0),inverse:t.noop,data:i}))?a:"")+" </tbody></table></div></div> "},20:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <div "+(null!=(a=s(n,"class").call(o,"btn toggle-all-computed-style",{name:"class",hash:{},data:i}))?a:"")+"><span "+(null!=(a=s(n,"class").call(o,"icon-compress",{name:"class",hash:{},data:i}))?a:"")+"></span></div> "},22:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <div "+(null!=(a=s(n,"class").call(o,"btn toggle-all-computed-style",{name:"class",hash:{},data:i}))?a:"")+"><span "+(null!=(a=s(n,"class").call(o,"icon-expand",{name:"class",hash:{},data:i}))?a:"")+"></span></div> "},24:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <div "+(null!=(a=o(n,"class").call(null!=e?e:t.nullContext||{},"btn search-keyword",{name:"class",hash:{},data:i}))?a:"")+"> "+t.escapeExpression(t.lambda(null!=e?o(e,"computedStyleSearchKeyword"):e,e))+" </div> "},26:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lambda,u=t.escapeExpression,l=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return"<div "+(null!=(a=l(n,"class").call(o,"position",{name:"class",hash:{},data:i}))?a:"")+"><div "+(null!=(a=l(n,"class").call(o,"label",{name:"class",hash:{},data:i}))?a:"")+">position</div><div "+(null!=(a=l(n,"class").call(o,"top",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=(a=null!=(a=null!=e?l(e,"boxModel"):e)?l(a,"position"):a)?l(a,"top"):a,e))+"</div><br><div "+(null!=(a=l(n,"class").call(o,"left",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=(a=null!=(a=null!=e?l(e,"boxModel"):e)?l(a,"position"):a)?l(a,"left"):a,e))+"</div>"},28:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lambda,u=t.escapeExpression,l=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return"<div "+(null!=(a=l(n,"class").call(o,"right",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=(a=null!=(a=null!=e?l(e,"boxModel"):e)?l(a,"position"):a)?l(a,"right"):a,e))+"</div><br><div "+(null!=(a=l(n,"class").call(o,"bottom",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=(a=null!=(a=null!=e?l(e,"boxModel"):e)?l(a,"position"):a)?l(a,"bottom"):a,e))+"</div></div>"},30:function(t,e,n,r,i){var a,o=t.lambda,s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <tr><td "+(null!=(a=s(n,"class").call(null!=e?e:t.nullContext||{},"key",{name:"class",hash:{},data:i}))?a:"")+">"+t.escapeExpression(o(i&&s(i,"key"),e))+"</td><td>"+(null!=(a=o(e,e))?a:"")+"</td></tr> "},32:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <div "+(null!=(a=s(n,"class").call(o,"listeners section",{name:"class",hash:{},data:i}))?a:"")+"><h2>Event Listeners</h2><div "+(null!=(a=s(n,"class").call(o,"listener-wrapper",{name:"class",hash:{},data:i}))?a:"")+"> "+(null!=(a=s(n,"each").call(o,null!=e?s(e,"listeners"):e,{name:"each",hash:{},fn:t.program(33,i,0),inverse:t.noop,data:i}))?a:"")+" </div></div> "},33:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <div "+(null!=(a=s(n,"class").call(o,"listener",{name:"class",hash:{},data:i}))?a:"")+"><div "+(null!=(a=s(n,"class").call(o,"listener-type",{name:"class",hash:{},data:i}))?a:"")+">"+t.escapeExpression(t.lambda(i&&s(i,"key"),e))+"</div><ul "+(null!=(a=s(n,"class").call(o,"listener-content",{name:"class",hash:{},data:i}))?a:"")+"> "+(null!=(a=s(n,"each").call(o,e,{name:"each",hash:{},fn:t.program(34,i,0),inverse:t.noop,data:i}))?a:"")+" </ul></div> "},34:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <li "+(null!=(a=o(n,"if").call(null!=e?e:t.nullContext||{},null!=e?o(e,"useCapture"):e,{name:"if",hash:{},fn:t.program(35,i,0),inverse:t.noop,data:i}))?a:"")+">"+t.escapeExpression(t.lambda(null!=e?o(e,"listenerStr"):e,e))+"</li> "},35:function(t,e,n,r,i){var a;return null!=(a=(t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]})(n,"class").call(null!=e?e:t.nullContext||{},"capture",{name:"class",hash:{},data:i}))?a:""},compiler:[8,">= 4.3.0"],main:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return(null!=(a=s(n,"if").call(o,null!=e?s(e,"parents"):e,{name:"if",hash:{},fn:t.program(1,i,0),inverse:t.noop,data:i}))?a:"")+" <div "+(null!=(a=s(n,"class").call(o,"breadcrumb",{name:"class",hash:{},data:i}))?a:"")+"> "+(null!=(a=t.lambda(null!=e?s(e,"name"):e,e))?a:"")+" </div> "+(null!=(a=s(n,"if").call(o,null!=e?s(e,"children"):e,{name:"if",hash:{},fn:t.program(4,i,0),inverse:t.noop,data:i}))?a:"")+" <div "+(null!=(a=s(n,"class").call(o,"attributes section",{name:"class",hash:{},data:i}))?a:"")+"><h2>Attributes</h2><div "+(null!=(a=s(n,"class").call(o,"table-wrapper",{name:"class",hash:{},data:i}))?a:"")+"><table><tbody> "+(null!=(a=s(n,"if").call(o,null!=e?s(e,"attributes"):e,{name:"if",hash:{},fn:t.program(10,i,0),inverse:t.program(13,i,0),data:i}))?a:"")+" </tbody></table></div></div> "+(null!=(a=s(n,"if").call(o,null!=e?s(e,"styles"):e,{name:"if",hash:{},fn:t.program(15,i,0),inverse:t.noop,data:i}))?a:"")+" "+(null!=(a=s(n,"if").call(o,null!=e?s(e,"computedStyle"):e,{name:"if",hash:{},fn:t.program(19,i,0),inverse:t.noop,data:i}))?a:"")+" "+(null!=(a=s(n,"if").call(o,null!=e?s(e,"listeners"):e,{name:"if",hash:{},fn:t.program(32,i,0),inverse:t.noop,data:i}))?a:"")},useData:!0})},function(t,e,n){var r=n(7);t.exports=(r.default||r).template({compiler:[8,">= 4.3.0"],main:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return"<div "+(null!=(a=s(n,"class").call(o,"bottom-bar",{name:"class",hash:{},data:i}))?a:"")+"><div "+(null!=(a=s(n,"class").call(o,"btn select",{name:"class",hash:{},data:i}))?a:"")+"><span "+(null!=(a=s(n,"class").call(o,"icon icon-select",{name:"class",hash:{},data:i}))?a:"")+"></span></div><div "+(null!=(a=s(n,"class").call(o,"btn refresh",{name:"class",hash:{},data:i}))?a:"")+"><span "+(null!=(a=s(n,"class").call(o,"icon icon-refresh",{name:"class",hash:{},data:i}))?a:"")+"></span></div><div "+(null!=(a=s(n,"class").call(o,"btn highlight",{name:"class",hash:{},data:i}))?a:"")+"><span "+(null!=(a=s(n,"class").call(o,"icon icon-eye",{name:"class",hash:{},data:i}))?a:"")+"></span></div><div "+(null!=(a=s(n,"class").call(o,"btn reset",{name:"class",hash:{},data:i}))?a:"")+"><span "+(null!=(a=s(n,"class").call(o,"icon icon-reset",{name:"class",hash:{},data:i}))?a:"")+"></span></div></div>"},useData:!0})},function(t,e,n){(e=n(8)(!1)).push([t.i,"._search-highlight-block{$d:inline}._search-highlight-block ._keyword{$b:var(--console-warn-background);$c:var(--console-warn-foreground)}",""]),t.exports=e},function(t,e,n){(e=n(8)(!1)).push([t.i,"#_snippets{$oy:auto;$wos:touch;$p:10px}#_snippets ._section{$mb:10px;$bo:1px solid var(--border);$o:hidden;$cu:pointer}#_snippets ._section:active ._name{$b:var(--highlight);$c:var(--select-foreground)}#_snippets ._section ._name{$p:10px;$c:var(--primary);$b:var(--darker-background);$tr:background .3s}#_snippets ._section ._name ._btn{$ml:10px;$f:right;$ta:center;$w:18px;$h:18px;$lh:18px;$fs:12px}#_snippets ._section ._description{$c:var(--foreground);$p:10px;$tr:background .3s}",""]),t.exports=e},function(t,e,n){var r=n(7);t.exports=(r.default||r).template({1:function(t,e,n,r,i){var a=t.lambda,o=t.escapeExpression,s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return' <div class="eruda-section eruda-run" data-idx="'+o(a(i&&s(i,"index"),e))+'"><h2 class="eruda-name">'+o(a(null!=e?s(e,"name"):e,e))+' <div class="eruda-btn"><span class="eruda-icon-play"></span></div></h2><div class="eruda-description"> '+o(a(null!=e?s(e,"desc"):e,e))+" </div></div> "},compiler:[8,">= 4.3.0"],main:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return null!=(a=o(n,"each").call(null!=e?e:t.nullContext||{},null!=e?o(e,"snippets"):e,{name:"each",hash:{},fn:t.program(1,i,0),inverse:t.noop,data:i}))?a:""},useData:!0})},function(t,e,n){(e=n(8)(!1)).push([t.i,"#_resources{$oy:auto;$wos:touch;$p:10px;$fs:14px}#_resources ._section{$mb:10px;$o:hidden;$bo:1px solid var(--border)}#_resources ._section ._content{$oy:auto;$wos:touch;max-height:400px}#_resources ._section._warn{$bo:1px solid var(--console-warn-border)}#_resources ._section._warn ._title{$b:var(--console-warn-background);$c:var(--console-warn-foreground)}#_resources ._section._danger{$bo:1px solid var(--console-error-border)}#_resources ._section._danger ._title{$b:var(--console-error-background);$c:var(--console-error-foreground)}#_resources ._title{$p:10px;$c:var(--primary);$b:var(--darker-background)}#_resources ._title ._btn{$d:flex;$ml:5px;$f:right;$c:var(--primary);$w:18px;$h:18px;justify-content:center;align-items:center;$fs:16px;$cu:pointer;$tr:color .3s}#_resources ._title ._btn._search-keyword{$w:auto;max-width:80px;$fs:14px;$o:hidden;text-overflow:ellipsis;$d:inline-block}#_resources ._title ._btn:active{$c:var(--accent)}#_resources ._link-list{$fs:12px;$c:var(--foreground)}#_resources ._link-list li{$p:10px;word-break:break-all}#_resources ._link-list li a{$c:var(--link-color)!important}#_resources ._image-list{$c:var(--foreground);$fs:12px;$d:flex;flex-wrap:wrap;$p:10px!important}#_resources ._image-list:after{$co:'';$d:block;$cl:both}#_resources ._image-list li{flex-grow:1;$cu:pointer;$oy:hidden}#_resources ._image-list li._image{$h:100px;$fs:0}#_resources ._image-list li img{$h:100px;min-width:100%;-o-object-fit:cover;object-fit:cover}#_resources table{$c:var(--foreground);$bc:collapse;$w:100%;$fs:12px}#_resources table tr:nth-child(even){$b:var(--contrast)}#_resources table td{$p:10px;word-break:break-all}#_resources table td._key{$ox:auto;$wos:touch;$ws:nowrap;max-width:120px}#_resources table td._control{$p:0;$fs:0;$w:40px}#_resources table td._control ._icon-delete{$cu:pointer;$c:var(--primary);$fs:14px;$d:inline-block;$w:40px;$h:40px;$ta:center;$lh:40px;$tr:color .3s}#_resources table td._control ._icon-delete:active{$c:var(--accent)}",""]),t.exports=e},function(t,e,n){var r=n(7);t.exports=(r.default||r).template({1:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return"<div "+(null!=(a=o(n,"class").call(null!=e?e:t.nullContext||{},"btn search-keyword",{name:"class",hash:{},data:i}))?a:"")+">"+t.escapeExpression(t.lambda(null!=e?o(e,"localStoreSearchKeyword"):e,e))+"</div>"},3:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" "+(null!=(a=o(n,"each").call(null!=e?e:t.nullContext||{},null!=e?o(e,"localStoreData"):e,{name:"each",hash:{},fn:t.program(4,i,0),inverse:t.noop,data:i}))?a:"")+" "},4:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lambda,u=t.escapeExpression,l=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <tr><td "+(null!=(a=l(n,"class").call(o,"key",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=e?l(e,"key"):e,e))+"</td><td "+(null!=(a=l(n,"class").call(o,"storage-val",{name:"class",hash:{},data:i}))?a:"")+' data-key="'+u(s(null!=e?l(e,"key"):e,e))+'" data-type="local">'+u(s(null!=e?l(e,"val"):e,e))+"</td><td "+(null!=(a=l(n,"class").call(o,"control",{name:"class",hash:{},data:i}))?a:"")+"><span "+(null!=(a=l(n,"class").call(o,"icon-delete delete-storage",{name:"class",hash:{},data:i}))?a:"")+' data-key="'+u(s(null!=e?l(e,"key"):e,e))+'" data-type="local"></span></td></tr> '},6:function(t,e,n,r,i){return" <tr><td>Empty</td></tr> "},8:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return"<div "+(null!=(a=o(n,"class").call(null!=e?e:t.nullContext||{},"btn search-keyword",{name:"class",hash:{},data:i}))?a:"")+">"+t.escapeExpression(t.lambda(null!=e?o(e,"sessionStoreSearchKeyword"):e,e))+"</div>"},10:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" "+(null!=(a=o(n,"each").call(null!=e?e:t.nullContext||{},null!=e?o(e,"sessionStoreData"):e,{name:"each",hash:{},fn:t.program(11,i,0),inverse:t.noop,data:i}))?a:"")+" "},11:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lambda,u=t.escapeExpression,l=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <tr><td "+(null!=(a=l(n,"class").call(o,"key",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=e?l(e,"key"):e,e))+"</td><td "+(null!=(a=l(n,"class").call(o,"storage-val",{name:"class",hash:{},data:i}))?a:"")+' data-key="'+u(s(null!=e?l(e,"key"):e,e))+'" data-type="session">'+u(s(null!=e?l(e,"val"):e,e))+"</td><td "+(null!=(a=l(n,"class").call(o,"control",{name:"class",hash:{},data:i}))?a:"")+"><span "+(null!=(a=l(n,"class").call(o,"icon-delete delete-storage",{name:"class",hash:{},data:i}))?a:"")+' data-key="'+u(s(null!=e?l(e,"key"):e,e))+'" data-type="session"></span></td></tr> '},13:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return"<div "+(null!=(a=o(n,"class").call(null!=e?e:t.nullContext||{},"btn search-keyword",{name:"class",hash:{},data:i}))?a:"")+">"+t.escapeExpression(t.lambda(null!=e?o(e,"cookieSearchKeyword"):e,e))+"</div>"},15:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" "+(null!=(a=o(n,"each").call(null!=e?e:t.nullContext||{},null!=e?o(e,"cookieData"):e,{name:"each",hash:{},fn:t.program(16,i,0),inverse:t.noop,data:i}))?a:"")+" "},16:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lambda,u=t.escapeExpression,l=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <tr><td "+(null!=(a=l(n,"class").call(o,"key",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=e?l(e,"key"):e,e))+"</td><td>"+u(s(null!=e?l(e,"val"):e,e))+"</td><td "+(null!=(a=l(n,"class").call(o,"control",{name:"class",hash:{},data:i}))?a:"")+"><span "+(null!=(a=l(n,"class").call(o,"icon-delete delete-cookie",{name:"class",hash:{},data:i}))?a:"")+' data-key="'+u(s(null!=e?l(e,"key"):e,e))+'"></span></td></tr> '},18:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" "+(null!=(a=o(n,"each").call(null!=e?e:t.nullContext||{},null!=e?o(e,"scriptData"):e,{name:"each",hash:{},fn:t.program(19,i,0),inverse:t.noop,data:i}))?a:"")+" "},19:function(t,e,n,r,i){var a,o=t.lambda,s=t.escapeExpression,u=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return' <li><a href="'+s(o(e,e))+'" target="_blank" '+(null!=(a=u(n,"class").call(null!=e?e:t.nullContext||{},"js-link",{name:"class",hash:{},data:i}))?a:"")+">"+s(o(e,e))+"</a></li> "},21:function(t,e,n,r,i){return" <li>Empty</li> "},23:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" "+(null!=(a=o(n,"each").call(null!=e?e:t.nullContext||{},null!=e?o(e,"stylesheetData"):e,{name:"each",hash:{},fn:t.program(24,i,0),inverse:t.noop,data:i}))?a:"")+" "},24:function(t,e,n,r,i){var a,o=t.lambda,s=t.escapeExpression,u=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return' <li><a href="'+s(o(e,e))+'" target="_blank" '+(null!=(a=u(n,"class").call(null!=e?e:t.nullContext||{},"css-link",{name:"class",hash:{},data:i}))?a:"")+">"+s(o(e,e))+"</a></li> "},26:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" "+(null!=(a=o(n,"each").call(null!=e?e:t.nullContext||{},null!=e?o(e,"iframeData"):e,{name:"each",hash:{},fn:t.program(27,i,0),inverse:t.noop,data:i}))?a:"")+" "},27:function(t,e,n,r,i){var a,o=t.lambda,s=t.escapeExpression,u=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return' <li><a href="'+s(o(e,e))+'" target="_blank" '+(null!=(a=u(n,"class").call(null!=e?e:t.nullContext||{},"iframe-link",{name:"class",hash:{},data:i}))?a:"")+">"+s(o(e,e))+"</a></li> "},29:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" "+(null!=(a=o(n,"each").call(null!=e?e:t.nullContext||{},null!=e?o(e,"imageData"):e,{name:"each",hash:{},fn:t.program(30,i,0),inverse:t.noop,data:i}))?a:"")+" "},30:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <li "+(null!=(a=s(n,"class").call(o,"image",{name:"class",hash:{},data:i}))?a:"")+'><img src="'+t.escapeExpression(t.lambda(e,e))+'" data-exclude="true" '+(null!=(a=s(n,"class").call(o,"img-link",{name:"class",hash:{},data:i}))?a:"")+"></li> "},compiler:[8,">= 4.3.0"],main:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return"<div "+(null!=(a=s(n,"class").call(o,"section local-storage",{name:"class",hash:{},data:i}))?a:"")+"><h2 "+(null!=(a=s(n,"class").call(o,"title",{name:"class",hash:{},data:i}))?a:"")+">Local Storage<div "+(null!=(a=s(n,"class").call(o,"btn refresh-local-storage",{name:"class",hash:{},data:i}))?a:"")+"><span "+(null!=(a=s(n,"class").call(o,"icon-refresh",{name:"class",hash:{},data:i}))?a:"")+"></span></div><div "+(null!=(a=s(n,"class").call(o,"btn clear-storage",{name:"class",hash:{},data:i}))?a:"")+' data-type="local"><span '+(null!=(a=s(n,"class").call(o,"icon-clear",{name:"class",hash:{},data:i}))?a:"")+"></span></div><div "+(null!=(a=s(n,"class").call(o,"btn search",{name:"class",hash:{},data:i}))?a:"")+' data-type="local"><span '+(null!=(a=s(n,"class").call(o,"icon-search",{name:"class",hash:{},data:i}))?a:"")+"></span></div> "+(null!=(a=s(n,"if").call(o,null!=e?s(e,"localStoreSearchKeyword"):e,{name:"if",hash:{},fn:t.program(1,i,0),inverse:t.noop,data:i}))?a:"")+" </h2><div "+(null!=(a=s(n,"class").call(o,"content",{name:"class",hash:{},data:i}))?a:"")+"><table><tbody> "+(null!=(a=s(n,"if").call(o,null!=e?s(e,"localStoreData"):e,{name:"if",hash:{},fn:t.program(3,i,0),inverse:t.program(6,i,0),data:i}))?a:"")+" </tbody></table></div></div><div "+(null!=(a=s(n,"class").call(o,"section session-storage",{name:"class",hash:{},data:i}))?a:"")+"><h2 "+(null!=(a=s(n,"class").call(o,"title",{name:"class",hash:{},data:i}))?a:"")+">Session Storage<div "+(null!=(a=s(n,"class").call(o,"btn refresh-session-storage",{name:"class",hash:{},data:i}))?a:"")+"><span "+(null!=(a=s(n,"class").call(o,"icon-refresh",{name:"class",hash:{},data:i}))?a:"")+"></span></div><div "+(null!=(a=s(n,"class").call(o,"btn clear-storage",{name:"class",hash:{},data:i}))?a:"")+' data-type="session"><span '+(null!=(a=s(n,"class").call(o,"icon-clear",{name:"class",hash:{},data:i}))?a:"")+"></span></div><div "+(null!=(a=s(n,"class").call(o,"btn search",{name:"class",hash:{},data:i}))?a:"")+' data-type="session"><span '+(null!=(a=s(n,"class").call(o,"icon-search",{name:"class",hash:{},data:i}))?a:"")+"></span></div> "+(null!=(a=s(n,"if").call(o,null!=e?s(e,"sessionStoreSearchKeyword"):e,{name:"if",hash:{},fn:t.program(8,i,0),inverse:t.noop,data:i}))?a:"")+" </h2><div "+(null!=(a=s(n,"class").call(o,"content",{name:"class",hash:{},data:i}))?a:"")+"><table><tbody> "+(null!=(a=s(n,"if").call(o,null!=e?s(e,"sessionStoreData"):e,{name:"if",hash:{},fn:t.program(10,i,0),inverse:t.program(6,i,0),data:i}))?a:"")+" </tbody></table></div></div><div "+(null!=(a=s(n,"class").call(o,s(n,"concat").call(o,"section cookie ",null!=e?s(e,"cookieState"):e,{name:"concat",hash:{},data:i}),{name:"class",hash:{},data:i}))?a:"")+"><h2 "+(null!=(a=s(n,"class").call(o,"title",{name:"class",hash:{},data:i}))?a:"")+">Cookie<div "+(null!=(a=s(n,"class").call(o,"btn refresh-cookie",{name:"class",hash:{},data:i}))?a:"")+"><span "+(null!=(a=s(n,"class").call(o,"icon-refresh",{name:"class",hash:{},data:i}))?a:"")+"></span></div><div "+(null!=(a=s(n,"class").call(o,"btn clear-cookie",{name:"class",hash:{},data:i}))?a:"")+"><span "+(null!=(a=s(n,"class").call(o,"icon-clear",{name:"class",hash:{},data:i}))?a:"")+"></span></div><div "+(null!=(a=s(n,"class").call(o,"btn search",{name:"class",hash:{},data:i}))?a:"")+' data-type="cookie"><span '+(null!=(a=s(n,"class").call(o,"icon-search",{name:"class",hash:{},data:i}))?a:"")+"></span></div> "+(null!=(a=s(n,"if").call(o,null!=e?s(e,"cookieSearchKeyword"):e,{name:"if",hash:{},fn:t.program(13,i,0),inverse:t.noop,data:i}))?a:"")+" </h2><div "+(null!=(a=s(n,"class").call(o,"content",{name:"class",hash:{},data:i}))?a:"")+"><table><tbody> "+(null!=(a=s(n,"if").call(o,null!=e?s(e,"cookieData"):e,{name:"if",hash:{},fn:t.program(15,i,0),inverse:t.program(6,i,0),data:i}))?a:"")+" </tbody></table></div></div><div "+(null!=(a=s(n,"class").call(o,s(n,"concat").call(o,"section script ",null!=e?s(e,"scriptState"):e,{name:"concat",hash:{},data:i}),{name:"class",hash:{},data:i}))?a:"")+"><h2 "+(null!=(a=s(n,"class").call(o,"title",{name:"class",hash:{},data:i}))?a:"")+">Script<div "+(null!=(a=s(n,"class").call(o,"btn refresh-script",{name:"class",hash:{},data:i}))?a:"")+"><span "+(null!=(a=s(n,"class").call(o,"icon-refresh",{name:"class",hash:{},data:i}))?a:"")+"></span></div></h2><ul "+(null!=(a=s(n,"class").call(o,"link-list",{name:"class",hash:{},data:i}))?a:"")+"> "+(null!=(a=s(n,"if").call(o,null!=e?s(e,"scriptData"):e,{name:"if",hash:{},fn:t.program(18,i,0),inverse:t.program(21,i,0),data:i}))?a:"")+" </ul></div><div "+(null!=(a=s(n,"class").call(o,s(n,"concat").call(o,"section stylesheet ",null!=e?s(e,"stylesheetState"):e,{name:"concat",hash:{},data:i}),{name:"class",hash:{},data:i}))?a:"")+"><h2 "+(null!=(a=s(n,"class").call(o,"title",{name:"class",hash:{},data:i}))?a:"")+">Stylesheet<div "+(null!=(a=s(n,"class").call(o,"btn refresh-stylesheet",{name:"class",hash:{},data:i}))?a:"")+"><span "+(null!=(a=s(n,"class").call(o,"icon-refresh",{name:"class",hash:{},data:i}))?a:"")+"></span></div></h2><ul "+(null!=(a=s(n,"class").call(o,"link-list",{name:"class",hash:{},data:i}))?a:"")+"> "+(null!=(a=s(n,"if").call(o,null!=e?s(e,"stylesheetData"):e,{name:"if",hash:{},fn:t.program(23,i,0),inverse:t.program(21,i,0),data:i}))?a:"")+" </ul></div><div "+(null!=(a=s(n,"class").call(o,"section iframe",{name:"class",hash:{},data:i}))?a:"")+"><h2 "+(null!=(a=s(n,"class").call(o,"title",{name:"class",hash:{},data:i}))?a:"")+">Iframe<div "+(null!=(a=s(n,"class").call(o,"btn refresh-iframe",{name:"class",hash:{},data:i}))?a:"")+"><span "+(null!=(a=s(n,"class").call(o,"icon-refresh",{name:"class",hash:{},data:i}))?a:"")+"></span></div></h2><ul "+(null!=(a=s(n,"class").call(o,"link-list",{name:"class",hash:{},data:i}))?a:"")+"> "+(null!=(a=s(n,"if").call(o,null!=e?s(e,"iframeData"):e,{name:"if",hash:{},fn:t.program(26,i,0),inverse:t.program(21,i,0),data:i}))?a:"")+" </ul></div><div "+(null!=(a=s(n,"class").call(o,"section image",{name:"class",hash:{},data:i}))?a:"")+"><h2 "+(null!=(a=s(n,"class").call(o,s(n,"concat").call(o,"title ",null!=e?s(e,"imageState"):e,{name:"concat",hash:{},data:i}),{name:"class",hash:{},data:i}))?a:"")+">Image<div "+(null!=(a=s(n,"class").call(o,"btn refresh-image",{name:"class",hash:{},data:i}))?a:"")+"><span "+(null!=(a=s(n,"class").call(o,"icon-refresh",{name:"class",hash:{},data:i}))?a:"")+"></span></div></h2><ul "+(null!=(a=s(n,"class").call(o,"image-list",{name:"class",hash:{},data:i}))?a:"")+"> "+(null!=(a=s(n,"if").call(o,null!=e?s(e,"imageData"):e,{name:"if",hash:{},fn:t.program(29,i,0),inverse:t.program(21,i,0),data:i}))?a:"")+" </ul></div>"},useData:!0})},function(t,e,n){(e=n(8)(!1)).push([t.i,"#_info{$oy:auto;$wos:touch}#_info li{$m:10px;$bo:1px solid var(--border)}#_info li ._content,#_info li ._title{$p:10px}#_info li ._title{$pb:0;$fs:16px;$c:var(--accent)}#_info li ._content{$m:0;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;$us:text;$c:var(--foreground);word-break:break-all}#_info li ._content table{$w:100%;$bc:collapse}#_info li ._content table td,#_info li ._content table th{$bo:1px solid var(--border);$p:10px}#_info li ._content *{-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;$us:text}#_info li ._content a{$c:var(--link-color)}#_info li ._device-key,#_info li ._system-key{$w:100px}",""]),t.exports=e},function(t,e,n){var r=n(7);t.exports=(r.default||r).template({1:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lambda,u=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <li><h2 "+(null!=(a=u(n,"class").call(o,"title",{name:"class",hash:{},data:i}))?a:"")+">"+t.escapeExpression(s(null!=e?u(e,"name"):e,e))+"</h2><div "+(null!=(a=u(n,"class").call(o,"content",{name:"class",hash:{},data:i}))?a:"")+">"+(null!=(a=s(null!=e?u(e,"val"):e,e))?a:"")+"</div></li> "},compiler:[8,">= 4.3.0"],main:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return"<ul> "+(null!=(a=o(n,"each").call(null!=e?e:t.nullContext||{},null!=e?o(e,"infos"):e,{name:"each",hash:{},fn:t.program(1,i,0),inverse:t.noop,data:i}))?a:"")+" </ul>"},useData:!0})},function(t,e,n){(e=n(8)(!1)).push([t.i,"#_sources{$oy:auto;$wos:touch;$c:var(--foreground)}#_sources ._code-wrapper,#_sources ._raw-wrapper{$ox:auto;$wos:touch;$w:100%;$mh:100%}#_sources ._raw{-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;$us:text;$p:10px}#_sources ._code{$fs:12px}#_sources ._code ._content *{-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;$us:text}#_sources pre._code{$p:10px}#_sources table._code{$bc:collapse}#_sources table._code ._gutter{$b:var(--background);$c:var(--primary)}#_sources table._code ._line-num{$br:1px solid var(--border);$p:0 3px 0 5px;$ta:right}#_sources table._code ._code-line{$p:0 4px;$ws:pre}#_sources ._image ._breadcrumb{$b:var(--darker-background);$c:var(--primary);-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;$us:text;$mb:10px;word-break:break-all;$p:10px;$fs:16px;$mh:40px;$bb:1px solid var(--border)}#_sources ._image ._img-container{$ta:center}#_sources ._image ._img-container img{max-width:100%}#_sources ._image ._img-info{$ta:center;$m:20px 0;$c:var(--foreground)}#_sources ._json{$p:0 10px}#_sources ._json *{-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;$us:text}#_sources iframe{$w:100%;$h:100%}",""]),t.exports=e},function(t,e,n){var r=n(7);t.exports=(r.default||r).template({1:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <div "+(null!=(a=s(n,"class").call(o,"code-wrapper",{name:"class",hash:{},data:i}))?a:"")+"><table "+(null!=(a=s(n,"class").call(o,"code",{name:"class",hash:{},data:i}))?a:"")+"><tbody><tr><td "+(null!=(a=s(n,"class").call(o,"gutter",{name:"class",hash:{},data:i}))?a:"")+"> "+(null!=(a=s(n,"each").call(o,null!=e?s(e,"code"):e,{name:"each",hash:{},fn:t.program(2,i,0),inverse:t.noop,data:i}))?a:"")+" </td><td "+(null!=(a=s(n,"class").call(o,"content",{name:"class",hash:{},data:i}))?a:"")+"> "+(null!=(a=s(n,"each").call(o,null!=e?s(e,"code"):e,{name:"each",hash:{},fn:t.program(4,i,0),inverse:t.noop,data:i}))?a:"")+" </td></tr></tbody></table></div> "},2:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <div "+(null!=(a=o(n,"class").call(null!=e?e:t.nullContext||{},"line-num",{name:"class",hash:{},data:i}))?a:"")+">"+t.escapeExpression(t.lambda(null!=e?o(e,"idx"):e,e))+"</div> "},4:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <pre "+(null!=(a=o(n,"class").call(null!=e?e:t.nullContext||{},"code-line",{name:"class",hash:{},data:i}))?a:"")+">"+(null!=(a=t.lambda(null!=e?o(e,"val"):e,e))?a:"")+"</pre> "},6:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return" <div "+(null!=(a=s(n,"class").call(o,"code-wrapper",{name:"class",hash:{},data:i}))?a:"")+"><pre "+(null!=(a=s(n,"class").call(o,"code",{name:"class",hash:{},data:i}))?a:"")+">"+(null!=(a=t.lambda(null!=e?s(e,"code"):e,e))?a:"")+"</pre></div> "},compiler:[8,">= 4.3.0"],main:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return null!=(a=o(n,"if").call(null!=e?e:t.nullContext||{},null!=e?o(e,"showLineNum"):e,{name:"if",hash:{},fn:t.program(1,i,0),inverse:t.program(6,i,0),data:i}))?a:""},useData:!0})},function(t,e,n){var r=n(7);t.exports=(r.default||r).template({compiler:[8,">= 4.3.0"],main:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lambda,u=t.escapeExpression,l=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return"<div "+(null!=(a=l(n,"class").call(o,"image",{name:"class",hash:{},data:i}))?a:"")+"><div "+(null!=(a=l(n,"class").call(o,"breadcrumb",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=e?l(e,"src"):e,e))+"</div><div "+(null!=(a=l(n,"class").call(o,"img-container",{name:"class",hash:{},data:i}))?a:"")+' data-exclude="true"><img src="'+u(s(null!=e?l(e,"src"):e,e))+'"></div><div '+(null!=(a=l(n,"class").call(o,"img-info",{name:"class",hash:{},data:i}))?a:"")+">"+u(s(null!=e?l(e,"width"):e,e))+" × "+u(s(null!=e?l(e,"height"):e,e))+"</div></div>"},useData:!0})},function(t,e,n){var r=n(7);t.exports=(r.default||r).template({compiler:[8,">= 4.3.0"],main:function(t,e,n,r,i){var a;return"<ul "+(null!=(a=(t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]})(n,"class").call(null!=e?e:t.nullContext||{},"json",{name:"class",hash:{},data:i}))?a:"")+"></ul>"},useData:!0})},function(t,e,n){var r=n(7);t.exports=(r.default||r).template({compiler:[8,">= 4.3.0"],main:function(t,e,n,r,i){var a,o=null!=e?e:t.nullContext||{},s=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return"<div "+(null!=(a=s(n,"class").call(o,"raw-wrapper",{name:"class",hash:{},data:i}))?a:"")+"><div "+(null!=(a=s(n,"class").call(o,"raw",{name:"class",hash:{},data:i}))?a:"")+">"+t.escapeExpression(t.lambda(null!=e?s(e,"val"):e,e))+"</div></div>"},useData:!0})},function(t,e,n){var r=n(7);t.exports=(r.default||r).template({compiler:[8,">= 4.3.0"],main:function(t,e,n,r,i){var a,o=t.lookupProperty||function(t,e){if(Object.prototype.hasOwnProperty.call(t,e))return t[e]};return'<iframe src="'+(null!=(a=t.lambda(null!=e?o(e,"src"):e,e))?a:"")+'"></iframe>'},useData:!0})},function(t,e,n){(e=n(8)(!1)).push([t.i,'.luna-object-viewer{$ox:auto;$wos:touch;$cu:default;$fs:12px;$lh:1.2;$mh:100%;$c:#333;list-style:none!important}.luna-object-viewer>li>.luna-object-viewer-key{$d:none}.luna-object-viewer>li{$p:10px 0}.luna-object-viewer ul{list-style:none!important}.luna-object-viewer ul{$p:0!important;$pl:15px!important;$m:0!important}.luna-object-viewer li{$po:relative;$ws:nowrap;$lh:16px;$mh:16px}.luna-object-viewer span{$po:static!important}.luna-object-viewer li .luna-object-viewer-collapsed~.luna-object-viewer-close:before{$c:#999}.luna-object-viewer-array .luna-object-viewer-object .luna-object-viewer-key{$d:inline}.luna-object-viewer-null{$c:grey}.luna-object-viewer-regexp,.luna-object-viewer-string{$c:#1a1aa6}.luna-object-viewer-number{$c:#1c00cf}.luna-object-viewer-boolean{$c:#881280}.luna-object-viewer-special{$c:grey}.luna-object-viewer-key,.luna-object-viewer-key-lighter{$c:#c80000}.luna-object-viewer-key-lighter{opacity:.6}.luna-object-viewer-expanded:before{$co:"";$w:0;$h:0;$bo:4px solid transparent;$po:absolute;$btc:#333;$l:-12px;$t:6px}.luna-object-viewer-collapsed:before{$co:"";$blc:#333;$btc:transparent;$l:-10px;$t:4px}.luna-object-viewer-hidden~ul{$d:none}',""]),t.exports=e},function(t,e,n){(e=n(8)(!1)).push([t.i,'.luna-object-viewer{$c:var(--primary);$fs:12px!important}.luna-object-viewer>li{$p:10px 0!important}.luna-object-viewer-null{$c:var(--operator-color)}.luna-object-viewer-regexp,.luna-object-viewer-string{$c:var(--string-color)}.luna-object-viewer-number{$c:var(--number-color)}.luna-object-viewer-boolean{$c:var(--keyword-color)}.luna-object-viewer-special{$c:var(--operator-color)}.luna-object-viewer-key,.luna-object-viewer-key-lighter{$c:var(--var-color)}.luna-object-viewer-expanded:before{border-color:transparent;$btc:var(--foreground)}.luna-object-viewer-collapsed:before{$btc:transparent;$blc:var(--foreground)}._container{$pe:none;$po:fixed;$l:0;$t:0;$w:100%;$h:100%;$z:100000;$c:var(--foreground);$ff:".SFNSDisplay-Regular","Helvetica Neue","Lucida Grande","Segoe UI",Tahoma,sans-seri;$fs:14px;direction:ltr}._container *{$bsi:border-box;$pe:all;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;$us:none;-webkit-tap-highlight-color:transparent;-webkit-text-size-adjust:none}._container ul{list-style:none;$p:0;$m:0}._container h1,._container h2,._container h3,._container h4{$m:0}._hidden{$d:none}._tag-name-color{$c:var(--tag-name-color)}._function-color{$c:var(--function-color)}._attribute-name-color{$c:var(--attribute-name-color)}._operator-color{$c:var(--operator-color)}._string-color{$c:var(--string-color)}',""]),t.exports=e},function(t,e,n){(e=n(8)(!1)).push([t.i,"._container a,._container abbr,._container acronym,._container address,._container applet,._container article,._container aside,._container audio,._container b,._container big,._container blockquote,._container body,._container canvas,._container caption,._container center,._container cite,._container code,._container dd,._container del,._container details,._container dfn,._container div,._container dl,._container dt,._container em,._container embed,._container fieldset,._container figcaption,._container figure,._container footer,._container form,._container h1,._container h2,._container h3,._container h4,._container h5,._container h6,._container header,._container hgroup,._container html,._container i,._container iframe,._container img,._container ins,._container kbd,._container label,._container legend,._container li,._container mark,._container menu,._container nav,._container object,._container ol,._container output,._container p,._container pre,._container q,._container ruby,._container s,._container samp,._container section,._container small,._container span,._container strike,._container strong,._container sub,._container summary,._container sup,._container table,._container tbody,._container td,._container tfoot,._container th,._container thead,._container time,._container tr,._container tt,._container u,._container ul,._container var,._container video{$m:0;$p:0;$bo:0;$fs:100%;font:inherit;vertical-align:baseline}._container article,._container aside,._container details,._container figcaption,._container figure,._container footer,._container header,._container hgroup,._container menu,._container nav,._container section{$d:block}._container body{$lh:1}._container ol,._container ul{list-style:none}._container blockquote,._container q{quotes:none}._container blockquote:after,._container blockquote:before,._container q:after,._container q:before{$co:'';$co:none}._container table{$bc:collapse;border-spacing:0}",""]),t.exports=e},function(t,e,n){"use strict";n.r(e);var r=n(2),i=n.n(r),a=n(3),o=n.n(a),s=n(4),u=n.n(s),l=n(1),c=n.n(l),p=n(5),h=n.n(p),f=n(27),d=n.n(f),_=n(0),v=new _.c;v.ADD="ADD",v.SHOW="SHOW",v.SCALE="SCALE";var m=v,g=n(6),b=n.n(g),y=Object(_.b)({init:function(t){this._$el=t},show:function(){return this._$el.show(),this},hide:function(){return this._$el.hide(),this},destroy:function(){this._$el.remove()}}),w=["background","foreground","selectForeground","accent","highlight","border","primary","contrast","varColor","stringColor","keywordColor","numberColor","operatorColor","linkColor","textColor","tagNameColor","functionColor","attributeNameColor","commentColor"],x=w.length;function k(t){for(var e={},n=0;n<x;n++)e[w[n]]=t[n];return e}function $(t){return Object(_.G)(t)&&(t=k(t)),t.darkerBackground||(t.darkerBackground=t.contrast),Object(_.z)({consoleWarnBackground:"#332a00",consoleWarnForeground:"#ffcb6b",consoleWarnBorder:"#650",consoleErrorBackground:"#290000",consoleErrorForeground:"#ff8080",consoleErrorBorder:"#5c0000",light:"#ccc",dark:"#aaa"},t)}function O(t){return Object(_.G)(t)&&(t=k(t)),t.darkerBackground||(t.darkerBackground=t.contrast),Object(_.z)({consoleWarnBackground:"#fffbe5",consoleWarnForeground:"#5c5c00",consoleWarnBorder:"#fff5c2",consoleErrorBackground:"#fff0f0",consoleErrorForeground:"#f00",consoleErrorBorder:"#ffd6d6",light:"#fff",dark:"#eee"},t)}var E={Light:O({darkerBackground:"#f3f3f3",background:"#fff",foreground:"#333",selectForeground:"#333",accent:"#1a73e8",highlight:"#eaeaea",border:"#ccc",primary:"#333",contrast:"#f2f7fd",varColor:"#c80000",stringColor:"#1a1aa6",keywordColor:"#881280",numberColor:"#1c00cf",operatorColor:"#808080",linkColor:"#1155cc",textColor:"#8097bd",tagNameColor:"#881280",functionColor:"#222",attributeNameColor:"#994500",commentColor:"#236e25",cssProperty:"#c80000"}),Dark:$({darkerBackground:"#333",background:"#242424",foreground:"#a5a5a5",selectForeground:"#eaeaea",accent:"#555",highlight:"#000",border:"#3d3d3d",primary:"#ccc",contrast:"#0b2544",varColor:"#e36eec",stringColor:"#f29766",keywordColor:"#9980ff",numberColor:"#9980ff",operatorColor:"#7f7f7f",linkColor:"#ababab",textColor:"#42597f",tagNameColor:"#5db0d7",functionColor:"#d5d5d5",attributeNameColor:"#9bbbdc",commentColor:"#747474"}),"Material Oceanic":$(["#263238","#B0BEC5","#FFFFFF","#009688","#425B67","#2A373E","#607D8B","#1E272C","#eeffff","#c3e88d","#c792ea","#f78c6c","#89ddff","#80cbc4","#B0BEC5","#f07178","#82aaff","#ffcb6b","#546e7a"]),"Material Darker":$(["#212121","#B0BEC5","#FFFFFF","#FF9800","#3F3F3F","#292929","#727272","#1A1A1A","#eeffff","#c3e88d","#c792ea","#f78c6c","#89ddff","#80cbc4","#B0BEC5","#f07178","#82aaff","#ffcb6b","#616161"]),"Material Lighter":O(["#FAFAFA","#546E7A","#546e7a","#00BCD4","#E7E7E8","#d3e1e8","#94A7B0","#F4F4F4","#272727","#91B859","#7C4DFF","#F76D47","#39ADB5","#39ADB5","#546E7A","#E53935","#6182B8","#F6A434","#AABFC9"]),"Material Palenight":$(["#292D3E","#A6ACCD","#FFFFFF","#ab47bc","#444267","#2b2a3e","#676E95","#202331","#eeffff","#c3e88d","#c792ea","#f78c6c","#89ddff","#80cbc4","#A6ACCD","#f07178","#82aaff","#ffcb6b","#676E95"]),"Material Deep Ocean":$(["#0F111A","#8F93A2","#FFFFFF","#84ffff","#1F2233","#41465b","#4B526D","#090B10","#eeffff","#c3e88d","#c792ea","#f78c6c","#89ddff","#80cbc4","#8F93A2","#f07178","#82aaff","#ffcb6b","#717CB4"]),"Monokai Pro":$(["#2D2A2E","#fcfcfa","#FFFFFF","#ffd866","#5b595c","#423f43","#939293","#221F22","#FCFCFA","#FFD866","#FF6188","#AB9DF2","#FF6188","#78DCE8","#fcfcfa","#FF6188","#A9DC76","#78DCE8","#727072"]),Dracula:$(["#282A36","#F8F8F2","#8BE9FD","#FF79C5","#6272A4","#21222C","#6272A4","#191A21","#F8F8F2","#F1FA8C","#FF79C6","#BD93F9","#FF79C6","#F1FA8C","#F8F8F2","#FF79C6","#50FA78","#50FA7B","#6272A4"]),"Arc Dark":$(["#2f343f","#D3DAE3","#FFFFFF","#42A5F5","#3F3F46","#404552","#8b9eb5","#262b33","#CF6A4C","#8F9D6A","#9B859D","#CDA869","#A7A7A7","#7587A6","#D3DAE3","#CF6A4C","#7587A6","#F9EE98","#747C84"]),"Atom One Dark":$(["#282C34","#979FAD","#FFFFFF","#2979ff","#383D48","#2e3239","#979FAD","#21252B","#D19A66","#98C379","#C679DD","#D19A66","#61AFEF","#56B6C2","#979FAD","#F07178","#61AEEF","#E5C17C","#59626F"]),"Atom One Light":O(["#FAFAFA","#232324","#232324","#2979ff","#EAEAEB","#DBDBDC","#9D9D9F","#FFFFFF","#986801","#50A14E","#A626A4","#986801","#4078F2","#0184BC","#232324","#E4564A","#4078F2","#C18401","#A0A1A7"]),"Solarized Dark":$(["#002B36","#839496","#FFFFFF","#d33682","#11353F","#0D3640","#586e75","#00252E","#268BD2","#2AA198","#859900","#D33682","#93A1A1","#268BD2","#839496","#268BD2","#B58900","#B58900","#657B83"]),"Solarized Light":O(["#fdf6e3","#586e75","#002b36","#d33682","#F6F0DE","#f7f2e2","#93a1a1","#eee8d5","#268BD2","#2AA198","#859900","#D33682","#657B83","#268BD2","#586e75","#268BD2","#B58900","#657B83","#93A1A1"]),Github:O(["#F7F8FA","#5B6168","#FFFFFF","#79CB60","#CCE5FF","#DFE1E4","#292D31","#FFFFFF","#24292E","#032F62","#D73A49","#005CC5","#D73A49","#005CC5","#5B6168","#22863A","#6F42C1","#6F42C1","#6A737D"]),"Night Owl":$(["#011627","#b0bec5","#ffffff","#7e57c2","#152C3B","#2a373e","#607d8b","#001424","#addb67","#ecc48d","#c792ea","#f78c6c","#c792ea","#80CBC4","#b0bec5","#7fdbca","#82AAFF","#FAD430","#637777"]),"Light Owl":O(["#FAFAFA","#546e7a","#403f53","#269386","#E0E7EA","#efefef","#403F53","#FAFAFA","#0C969B","#c96765","#994cc3","#aa0982","#7d818b","#994cc3","#546e7a","#994cc3","#4876d6","#4876d6","#637777"])},A=n(28),C=n.n(A),j=[],S=1,T=E.Light,P=function t(e,n){e=Object(_.zb)(e);for(var r=0,i=j.length;r<i;r++)if(j[r].css===e)return;n=n||t.container||document.head;var a=document.createElement("style");a.type="text/css",n.appendChild(a);var o={css:e,el:a,container:n};return D(o),j.push(o),o};function R(){Object(_.u)(j,(function(t){return D(t)}))}function D(t){var e=t.css,n=t.el;e=(e=e.replace(/(\d+)px/g,(function(t,e){return+e*S+"px"}))).replace(/_/g,"eruda-"),Object(_.u)(C.a,(function(t,n){e=e.replace(new RegExp(Object(_.y)("$".concat(t,":")),"g"),n+":")}));var r=Object(_.ab)(E.Light);Object(_.u)(r,(function(t){e=e.replace(new RegExp("var\\(--".concat(Object(_.Z)(t),"\\)"),"g"),T[t])})),n.innerText=e}P.setScale=function(t){S=t,R()},P.setTheme=function(t){T=Object(_.X)(t)?E[t]||E.Light:Object(_.r)(t,E.Light),R()},P.getCurTheme=function(){return T},P.getThemes=function(){return E},P.clear=function(){Object(_.u)(j,(function(t){var e=t.container,n=t.el;return e.removeChild(n)})),j=[]},P.remove=function(t){j=Object(_.B)(j,(function(e){return e!==t})),t.container.removeChild(t.el)};var M,L=P,N=function(t){function e(){var t;return i()(this,e),(t=u()(this,c()(e).call(this)))._style=L(n(38)),t.name="settings",t._switchTpl=n(39),t._selectTpl=n(55),t._rangeTpl=n(56),t._colorTpl=n(57),t._settings=[],t}return h()(e,t),o()(e,[{key:"init",value:function(t){b()(c()(e.prototype),"init",this).call(this,t),this._bindEvent()}},{key:"remove",value:function(t,e){var n=this;return Object(_.X)(t)?this._$el.find(".eruda-text").each((function(){var e=Object(_.a)(this);e.text()===t&&e.remove()})):this._settings=Object(_.B)(this._settings,(function(r){return r.config!==t||r.key!==e||(n._$el.find("#"+r.id).remove(),!1)})),this._cleanSeparator(),this}},{key:"destroy",value:function(){b()(c()(e.prototype),"destroy",this).call(this),L.remove(this._style)}},{key:"clear",value:function(){this._settings=[],this._$el.html("")}},{key:"switch",value:function(t,e,n){var r=this._genId("settings");return this._settings.push({config:t,key:e,id:r}),this._$el.append(this._switchTpl({desc:n,key:e,id:r,val:t.get(e)})),this}},{key:"color",value:function(t,e,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:["#2196f3","#707d8b","#f44336","#009688","#ffc107"],i=this._genId("settings");return this._settings.push({config:t,key:e,id:i}),this._$el.append(this._colorTpl({desc:n,colors:r,id:i,val:t.get(e)})),this}},{key:"select",value:function(t,e,n,r){var i=this._genId("settings");return this._settings.push({config:t,key:e,id:i}),this._$el.append(this._selectTpl({desc:n,selections:r,id:i,val:t.get(e)})),this}},{key:"range",value:function(t,e,n,r){var i=r.min,a=void 0===i?0:i,o=r.max,s=void 0===o?1:o,u=r.step,l=void 0===u?.1:u,c=this._genId("settings");this._settings.push({config:t,key:e,min:a,max:s,step:l,id:c});var p=t.get(e);return this._$el.append(this._rangeTpl({desc:n,min:a,max:s,step:l,val:p,progress:F(p,a,s),id:c})),this}},{key:"separator",value:function(){return this._$el.append('<div class="eruda-separator"></div>'),this}},{key:"text",value:function(t){return this._$el.append('<div class="eruda-text">'.concat(t,"</div>")),this}},{key:"_cleanSeparator",value:function(){var t=Object(_.j)(this._$el.get(0).children);function e(t){return"eruda-separator"===t.getAttribute("class")}for(var n=0,r=t.length;n<r-1;n++)e(t[n])&&e(t[n+1])&&Object(_.a)(t[n]).remove()}},{key:"_genId",value:function(){return Object(_.Cb)("eruda-settings")}},{key:"_closeAll",value:function(){this._$el.find(".eruda-open").rmClass("eruda-open")}},{key:"_getSetting",value:function(t){var e;return Object(_.u)(this._settings,(function(n){n.id===t&&(e=n)})),e}},{key:"_bindEvent",value:function(){var t=this;this._$el.on("click",".eruda-checkbox",(function(){var e=Object(_.a)(this).find("input"),n=e.data("id"),r=e.get(0).checked,i=t._getSetting(n);i.config.set(i.key,r)})).on("click",".eruda-select .eruda-head",(function(){var e=Object(_.a)(this).parent().find("ul"),n=e.hasClass("eruda-open");t._closeAll(),n?e.rmClass("eruda-open"):e.addClass("eruda-open")})).on("click",".eruda-select li",(function(){var e=Object(_.a)(this),n=e.parent(),r=e.text(),i=n.data("id"),a=t._getSetting(i);n.rmClass("eruda-open"),n.parent().find(".eruda-head span").text(r),a.config.set(a.key,r)})).on("click",".eruda-range .eruda-head",(function(){var e=Object(_.a)(this).parent().find(".eruda-input-container"),n=e.hasClass("eruda-open");t._closeAll(),n?e.rmClass("eruda-open"):e.addClass("eruda-open")})).on("change",".eruda-range input",(function(){var e=Object(_.a)(this),n=e.parent().data("id"),r=+e.val(),i=t._getSetting(n);i.config.set(i.key,r)})).on("input",".eruda-range input",(function(){var e=Object(_.a)(this),n=e.parent(),r=n.data("id"),i=+e.val(),a=t._getSetting(r),o=a.min,s=a.max;n.parent().find(".eruda-head span").text(i),n.find(".eruda-range-track-progress").css("width",F(i,o,s)+"%")})).on("click",".eruda-color .eruda-head",(function(){var e=Object(_.a)(this).parent().find("ul"),n=e.hasClass("eruda-open");t._closeAll(),n?e.rmClass("eruda-open"):e.addClass("eruda-open")})).on("click",".eruda-color li",(function(){var e=Object(_.a)(this),n=e.parent(),r=e.css("background-color"),i=n.data("id"),a=t._getSetting(i);n.rmClass("eruda-open"),n.parent().find(".eruda-head span").css("background-color",r),a.config.set(a.key,r)}))}}],[{key:"createCfg",value:function(t,e){return new _.d("eruda-"+t,e)}}]),e}(y),F=function(t,e,n){return((t-e)/(n-e)*100).toFixed(2)},I=function(t){function e(t){var r;return i()(this,e),(r=u()(this,c()(e).call(this)))._style=L(n(58)),r._$container=t,r._appendTpl(),r._makeDraggable(),r._bindEvent(),r._registerListener(),r}return h()(e,t),o()(e,[{key:"hide",value:function(){this._$el.hide()}},{key:"show",value:function(){this._$el.show()}},{key:"setPos",value:function(t){this._isOutOfRange(t)&&(t=this._getDefPos()),this._$el.css({left:t.x,top:t.y}),this.config.set("pos",t)}},{key:"getPos",value:function(){return this.config.get("pos")}},{key:"destroy",value:function(){L.remove(this._style),this._unregisterListener(),this._$el.remove()}},{key:"_isOutOfRange",value:function(t){t=t||this.config.get("pos");var e=this._getDefPos();return t.x>e.x+10||t.x<0||t.y<0||t.y>e.y+10}},{key:"_registerListener",value:function(){var t=this;this._scaleListener=function(){return Object(_.hb)((function(){t._isOutOfRange()&&t._resetPos()}))},m.on(m.SCALE,this._scaleListener)}},{key:"_unregisterListener",value:function(){m.off(m.SCALE,this._scaleListener)}},{key:"_appendTpl",value:function(){var t=this._$container;t.append(n(59)()),this._$el=t.find(".eruda-entry-btn")}},{key:"_resetPos",value:function(t){var e=this.config,n=e.get("pos"),r=this._getDefPos();e.get("rememberPos")&&!t||(n=r),this.setPos(n)}},{key:"_bindEvent",value:function(){var t=this,e=this._draggabilly,n=this._$el;e.on("staticClick",(function(){return t.emit("click")})).on("dragStart",(function(){return n.addClass("eruda-active")})),e.on("dragEnd",(function(){var e=t.config;e.get("rememberPos")&&e.set("pos",{x:Object(_.nb)(t._$el.css("left")),y:Object(_.nb)(t._$el.css("top"))}),n.rmClass("eruda-active")})),_.kb.on("change",(function(){return t._resetPos(!0)})),window.addEventListener("resize",(function(){return t._resetPos()}))}},{key:"_makeDraggable",value:function(){this._draggabilly=new d.a(this._$el.get(0),{containment:!0})}},{key:"initCfg",value:function(t){var e=this.config=N.createCfg("entry-button",{rememberPos:!0,pos:this._getDefPos()});t.separator().switch(e,"rememberPos","Remember Entry Button Position"),this._resetPos()}},{key:"_getDefPos",value:function(){var t=this._$el.get(0).offsetWidth+10;return{x:window.innerWidth-t,y:window.innerHeight-t}}}]),e}(_.c),z=function(t){function e(t){var r;return i()(this,e),(r=u()(this,c()(e).call(this)))._style=L(n(60)),r._$el=t.find(".eruda-nav-bar"),r._$bottomBar=t.find(".eruda-bottom-bar"),r._len=0,r._bindEvent(),r}return h()(e,t),o()(e,[{key:"add",value:function(t){var e=this._$el;this._len++;var n=e.find(".eruda-nav-bar-item").last(),r='<div class="eruda-nav-bar-item">'.concat(t,"</div>");n.length>0&&"settings"===n.text()?n.before(r):e.append(r),this.resetBottomBar()}},{key:"remove",value:function(t){this._len--,this._$el.find(".eruda-nav-bar-item").each((function(){var e=Object(_.a)(this);e.text().toLowerCase()===t.toLowerCase()&&e.remove()})),this.resetBottomBar()}},{key:"activateTool",value:function(t){var e=this;this._$el.find(".eruda-nav-bar-item").each((function(){var n=Object(_.a)(this);n.text()===t?(n.addClass("eruda-active"),e.resetBottomBar(),e._scrollItemToView()):n.rmClass("eruda-active")}))}},{key:"destroy",value:function(){L.remove(this._style),this._$el.remove()}},{key:"_scrollItemToView",value:function(){var t,e=this._$el,n=e.find(".eruda-active").get(0),r=e.get(0),i=n.offsetLeft,a=n.offsetWidth,o=r.offsetWidth,s=r.scrollLeft;i<s?t=i:i+a>o+s&&(t=i+a-o),Object(_.T)(t)&&(r.scrollLeft=t)}},{key:"resetBottomBar",value:function(){var t=this._$bottomBar,e=this._$el,n=e.find(".eruda-active").get(0);n&&t.css({width:n.offsetWidth,left:n.offsetLeft-e.get(0).scrollLeft})}},{key:"_bindEvent",value:function(){var t=this,e=this;this._$el.on("click",".eruda-nav-bar-item",(function(){e.emit("showTool",Object(_.a)(this).text())})).on("scroll",(function(){return t.resetBottomBar()}))}}]),e}(_.c),H=M=new _.e("[Eruda]","warn");M.formatter=function(t,e){return e.unshift(this.name),e};var B=function(t){function e(t){var r;return i()(this,e),(r=u()(this,c()(e).call(this)))._style=L(n(61)),r.$container=t,r._isShow=!1,r._opacity=1,r._tools={},r._isResizing=!1,r._resizeTimer=null,r._resizeStartY=0,r._resizeStartSize=0,r._appendTpl(),r._initNavBar(),r._bindEvent(),r}return h()(e,t),o()(e,[{key:"show",value:function(){var t=this;return this._isShow=!0,this._$el.show(),this._navBar.resetBottomBar(),setTimeout((function(){t._$el.css("opacity",t._opacity)}),50),this.emit("show"),this}},{key:"hide",value:function(){var t=this;return this._isShow=!1,this.emit("hide"),this._$el.css({opacity:0}),setTimeout((function(){return t._$el.hide()}),300),this}},{key:"toggle",value:function(){return this._isShow?this.hide():this.show()}},{key:"add",value:function(t){if(!(t instanceof y)){var e=new y,n=e.init,r=e.show,i=e.hide,a=e.destroy;Object(_.r)(t,{init:n,show:r,hide:i,destroy:a})}var o=t.name;return o?(o=o.toLowerCase(),this._tools[o]?H.warn("Tool ".concat(o," already exists")):(this._$tools.prepend('<div id="eruda-'.concat(o,'" class="eruda-').concat(o,' eruda-tool"></div>')),t.init(this._$tools.find(".eruda-".concat(o,".eruda-tool")),this),t.active=!1,this._tools[o]=t,this._navBar.add(o),this)):H.error("You must specify a name for a tool")}},{key:"remove",value:function(t){var e=this._tools;if(!e[t])return H.warn("Tool ".concat(t," doesn't exist"));this._navBar.remove(t);var n=e[t];if(delete e[t],n.active){var r=Object(_.ab)(e);r.length>0&&this.showTool(e[Object(_.bb)(r)].name)}return n.destroy(),this}},{key:"removeAll",value:function(){var t=this;return Object(_.u)(this._tools,(function(e){return t.remove(e.name)})),this}},{key:"get",value:function(t){var e=this._tools[t];if(e)return e}},{key:"showTool",value:function(t){if(this._curTool===t)return this;this._curTool=t;var e=this._tools,n=e[t];if(n){var r={};return Object(_.u)(e,(function(t){t.active&&(r=t,t.active=!1,t.hide())})),n.active=!0,n.show(),this._navBar.activateTool(t),this.emit("showTool",t,r),this}}},{key:"initCfg",value:function(t){var e=this,n=this.config=N.createCfg("dev-tools",{transparency:1,displaySize:80,theme:Object(_.J)()?"Dark":"Light"});this._setTransparency(n.get("transparency")),this._setDisplaySize(n.get("displaySize")),L.setTheme(n.get("theme")),n.on("change",(function(t,n){switch(t){case"transparency":return e._setTransparency(n);case"displaySize":return e._setDisplaySize(n);case"theme":return L.setTheme(n)}})),t.separator().select(n,"theme","Theme",Object(_.ab)(L.getThemes())).range(n,"transparency","Transparency",{min:.2,max:1,step:.01}).range(n,"displaySize","Display Size",{min:40,max:100,step:1}).separator()}},{key:"destroy",value:function(){L.remove(this._style),this.removeAll(),this._navBar.destroy(),this._$el.remove()}},{key:"_setTransparency",value:function(t){Object(_.T)(t)&&(this._opacity=t,this._isShow&&this._$el.css({opacity:t}))}},{key:"_setDisplaySize",value:function(t){Object(_.T)(t)&&this._$el.css({height:t+"%"})}},{key:"_appendTpl",value:function(){var t=this.$container;t.append(n(62)()),this._$el=t.find(".eruda-dev-tools"),this._$tools=this._$el.find(".eruda-tools")}},{key:"_initNavBar",value:function(){var t=this;this._navBar=new z(this._$el.find(".eruda-nav-bar-container")),this._navBar.on("showTool",(function(e){return t.showTool(e)}))}},{key:"_bindEvent",value:function(){var t=this,e=this._$el.find(".eruda-nav-bar"),n=function(n){n=n.origEvent,t._resizeTimer=setTimeout((function(){n.preventDefault(),n.stopPropagation(),t._isResizing=!0,t._resizeStartSize=t.config.get("displaySize"),t._resizeStartY=o(n),e.css("filter","brightness(1.2)")}),1e3)},r=Object(_.vb)((function(e){return t.config.set("displaySize",e)}),50),i=function(e){if(!t._isResizing)return clearTimeout(t._resizeTimer);e.preventDefault(),e.stopPropagation(),e=e.origEvent;var n=Math.round((t._resizeStartY-o(e))/window.innerHeight*100),i=t._resizeStartSize+n;i<40?i=40:i>100&&(i=100),r(i)},a=function(){clearTimeout(t._resizeTimer),t._isResizing=!1,e.css("filter","brightness(1)")},o=function(t){return t.clientY?t.clientY:t.touches?t.touches[0].clientY:0};e.on("contextmenu",(function(t){return t.preventDefault()}));var s=Object(_.a)(document.documentElement);Object(_.P)()?(e.on("touchstart",n).on("touchmove",i),s.on("touchend",a)):(e.on("mousedown",n),s.on("mousemove",i),s.on("mouseup",a))}}]),e}(_.c),U=n(9),q=n.n(U),G=n(14),K=n.n(G),W=n(15),V=n.n(W),X=!1,J=["(...)","undefined","Symbol","Object","ƒ"];function Y(t){var e=Object(_.L)(Object.getOwnPropertyNames(t)),n=Object.getPrototypeOf(t);return e&&n&&n!==Object.prototype}var Q=n(11),Z=n.n(Q),tt=n(17),et=n.n(tt),nt=function(t){function e(t){var n,r=t.type,a=void 0===r?"log":r,o=t.args,s=void 0===o?[]:o,l=t.id,p=t.group,h=void 0===p?{}:p,f=t.targetGroup,d=void 0===f?{}:f,v=t.displayHeader,m=void 0!==v&&v,g=t.ignoreFilter,b=void 0!==g&&g;return i()(this,e),(n=u()(this,c()(e).call(this))).type=a,n.group=h,n.targetGroup=d,n.args=s,n.count=1,n.id=l,n.displayHeader=m,n.ignoreFilter=b,n.collapsed=!1,n.el=document.createElement("li"),n.el.log=q()(n),n.height=0,n.width=0,n._$el=Object(_.a)(n.el),m&&(n.time=vt(),n.from=function(){for(var t=new Error,e="",n=t.stack?t.stack.split("\n"):"",r=0,i=n.length;r<i;r++)if((e=n[r]).indexOf("winConsole")>-1&&r<i-1){e=n[r+1];break}return e}()),n._formatMsg(),n.group&&n.checkGroup(),n}return h()(e,t),o()(e,[{key:"checkGroup",value:function(){for(var t=this.group,e=!1;t;){if(t.collapsed){e=!0;break}t=t.parent}return e!==this.collapsed&&(this.collapsed=e,!0)}},{key:"updateIcon",value:function(t){return this._$el.find(".eruda-icon").rmAttr("class").addClass(["eruda-icon","eruda-icon-".concat(t)]),this}},{key:"addCount",value:function(){this.count++;var t=this.count,e=this._$el,n=e.find(".eruda-count-container"),r=e.find(".eruda-icon-container"),i=n.find(".eruda-count");return 2===t&&n.rmClass("eruda-hidden"),i.text(t),r.addClass("eruda-hidden"),this}},{key:"groupEnd",value:function(){return this._$el.find(".eruda-nesting-level:not(.eruda-group-closed)").last().addClass("eruda-group-closed"),this}},{key:"updateTime",value:function(t){var e=this._$el.find(".eruda-time-container");return this.time&&(e.find("span").eq(0).text(t),this.time=t),this}},{key:"isAttached",value:function(){return!!this.el.parentNode}},{key:"updateSize",value:function(){var t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],e=this.el.offsetHeight;this.height!==e&&(this.height=this.el.offsetHeight,this.width=this.el.offsetWidth,t||this.emit("updateSize"))}},{key:"html",value:function(){return this.el.outerHTML}},{key:"text",value:function(){return this._content.textContent}},{key:"_needSrc",value:function(){var t=this.type,e=this.args;if("html"===t)return!1;for(var n=0,r=e.length;n<r;n++)if(Object(_.U)(e[n]))return!0;return!1}},{key:"extractObj",value:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:_.ib,n=this.args,r=this.type,i=function(n){t.src=n,e()};bt("table"===r||1===n.length&&Object(_.U)(n[0])?n[0]:n,{},i)}},{key:"click",value:function(t){var n=this,r=this.type,i=this.src,a=this.args,o=this._$el;switch(r){case"log":case"warn":case"info":case"debug":case"output":case"table":case"dir":case"group":case"groupCollapsed":if(i||a){var s=o.find(".eruda-json");if(s.hasClass("eruda-hidden")){if("true"!==s.data("init")){if(i){var u=new et.a.Static(s.get(0));u.set(i),u.on("change",(function(){return n.updateSize(!1)}))}else{"table"!==r&&1!==a.length||Object(_.U)(a[0])&&(a=a[0]);var l=new et.a(s.get(0),{unenumerable:e.showUnenumerable,accessGetter:e.showGetterVal});l.set(a),l.on("change",(function(){return n.updateSize(!1)}))}s.data("init","true")}s.rmClass("eruda-hidden")}else s.addClass("eruda-hidden")}else"group"!==r&&"groupCollapsed"!==r||t.toggleGroup(this);break;case"error":o.find(".eruda-stack").toggleClass("eruda-hidden")}this.updateSize(!1)}},{key:"_formatMsg",value:function(){var t=this.args,n=this.type,r=this.id,i=this.displayHeader,a=this.time,o=this.from,s=this.group;t=Object(_.j)(t),this._needSrc()&&!e.lazyEvaluation&&this.extractObj();var u,l,c="";switch("group"!==n&&"groupCollapsed"!==n||0===t.length&&(t=["console.group"]),n){case"log":case"debug":c=lt(t);break;case"dir":c=ct(t);break;case"info":c=lt(t);break;case"warn":u="warn",c=lt(t);break;case"error":Object(_.X)(t[0])&&1!==t.length&&(t=pt(t)),l=t[0],u="error",l=Object(_.M)(l)?l:new Error(lt(t)),this.src=l,c=function(t){var e=t.stack?t.stack.split("\n"):[],n="".concat(t.message||e[0],"<br/>");return e=e.filter((function(t){return!st.test(t)})).map((function(t){return Object(_.w)(t)})),n+'<div class="eruda-stack eruda-hidden">'.concat(e.slice(1).join("<br/>"),"</div>").replace(ot,(function(t){return'<a href="'.concat(t,'" target="_blank">').concat(t,"</a>")}))}(l);break;case"table":c=function(t){var e=t[0],n="",r=t[1],i=[];return Object(_.X)(r)&&(r=Object(_.wb)(r)),Object(_.G)(r)||(r=null),Object(_.U)(e)?(Object(_.u)(e,(function(t){Object(_.V)(t)?i.push(it):Object(_.U)(t)&&(i=i.concat(Object(_.ab)(t)))})),(i=Object(_.Db)(i)).sort(),r&&(i=i.filter((function(t){return Object(_.m)(r,t)}))),i.length>20&&(i=i.slice(0,20)),Object(_.L)(i)?lt(t):(n+="<table><thead><tr><th>(index)</th>",i.forEach((function(t){return n+="<th>".concat(t===it?"Value":Object(_.zb)(t),"</th>")})),n+="</tr></thead><tbody>",Object(_.u)(e,(function(t,e){n+="<tr><td>".concat(e,"</td>"),i.forEach((function(e){Object(_.U)(t)?n+=e===it?"<td></td>":"<td>".concat(at(t[e]),"</td>"):Object(_.V)(t)&&(n+=e===it?"<td>".concat(at(t),"</td>"):"<td></td>")})),n+="</tr>"})),n+="</tbody></table>",n+='<div class="eruda-json eruda-hidden"></div>')):lt(t)}(t);break;case"html":c=t[0];break;case"input":c=ut(t[0]),u="arrow-right";break;case"output":c=lt(t),u="arrow-left";break;case"groupCollapsed":c=lt(t),u="caret-right";break;case"group":c=lt(t),u="caret-down"}this._needSrc()&&e.lazyEvaluation||delete this.args,"error"===n||this.args||(c=Object(_.cb)(c,(function(t){return'<a href="'.concat(t,'" target="_blank">').concat(t,"</a>")}))),c=gt({msg:c,type:n,icon:u,id:r,displayHeader:i,time:a,from:o,group:s}),this._$el.addClass("eruda-log-container").html(c),this._$content=this._$el.find(".eruda-log-content"),this._content=this._$content.get(0)}}]),e}(_.c);K()(nt,"showGetterVal",!1),K()(nt,"showUnenumerable",!0),K()(nt,"lazyEvaluation",!0);var rt=Object(_.Gb)((function t(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=r.topObj,a=r.level,o=void 0===a?0:a,s=r.getterVal,u=void 0!==s&&s,l=r.unenumerable,c=void 0===l||l;X||(L(n(66)),X=!0);var p,h="",f="",d=5,v=[],m=[],g="",b=!1;i=i||e;var y={getterVal:u,unenumerable:c,level:o+1},w=0===o,x='<span class="eruda-key">',k='<span class="eruda-number">',$='<span class="eruda-null">',O='<span class="eruda-string">',E='<span class="eruda-boolean">',A='<span class="eruda-special">',C=function(t){return Object(_.w)(t).replace(/\\n/g,"↵").replace(/\\f|\\r|\\t/g,"").replace(/\\/g,"")},j="</span>",S=function(t){return x+C(t)+j},T=function(t){return k+t+j},P=function(t){return O+t+j},R=function(t){return E+t+j},D=function(t){return $+t+j};function M(t){return t=Object(_.zb)(t),Object(_.m)(J,t)||Object(_.tb)(t,"Array[")?A+C(t)+j:O+C('"'.concat(t,'"'))+j}function N(n){if(p>d)g=", …";else{var r=S(Object(_.x)(n));if(!u&&Object.getOwnPropertyDescriptor(e,n).get)return v.push("".concat(r,": ").concat(M("(...)"))),void p++;v.push("".concat(r,": ").concat(t(i[n],y))),p++}}try{f={}.toString.call(e)}catch(t){f="[object Object]"}var F="[object String]"==f,I="[object Array]"==f,z="[object Object]"==f,H="[object Number]"==f,B="[object RegExp]"==f,U="[object Symbol]"==f,q="[object Function]"==f,G="[object Boolean]"==f;if(b)h=M("[circular]");else if(F)h=M(Object(_.x)(e));else if(B)h=P(Object(_.x)(e.toString()));else if(q)h=M("ƒ");else if(I)if(w){h="[";var K=e.length,W="";K>100&&(K=100,W=", …");for(var V=0;V<K;V++)v.push("".concat(t(e[V],y)));h+=v.join(", ")+W+"]"}else h="Array(".concat(e.length,")");else if(z)Y(e)&&(e=Object.getPrototypeOf(e)),m=c?Object.getOwnPropertyNames(e):Object.keys(e),w?(p=1,h="{ ",Object(_.u)(m,N),h+=v.join(", ")+g+" }"):"Object"===(h=Object(_.E)(e))&&(h="{…}");else if(H)h=e+"",h=Object(_.v)(h,"Infinity")||"NaN"===h?'"'.concat(h,'"'):T(h);else if(G)h=R(e?"true":"false");else if(null===e)h=D("null");else if(U)h=M("Symbol");else if(void 0===e)h=M("undefined");else try{Y(e)&&(e=Object.getPrototypeOf(e)),w?(p=1,h="{ ",m=c?Object.getOwnPropertyNames(e):Object.keys(e),Object(_.u)(m,N),h+=v.join(", ")+g+" }"):"Object"===(h=Object(_.E)(e))&&(h="{…}")}catch(t){h=M(e)}return h}),(function(t,e){return'<span class="eruda-abstract">'+t(e,{getterVal:nt.showGetterVal,unenumerable:!1})+"</span>"})),it="__ErudaValue";function at(t){return Object(_.U)(t)?"{…}":Object(_.V)(t)?rt(t):Object(_.zb)(t)}var ot=/https?:\/\/([0-9.\-A-Za-z]+)(?::(\d+))?\/[A-Z.a-z0-9/]*\.js/g,st=/eruda(\.min)?\.js/;function ut(t){var e=L.getCurTheme();return Object(_.F)(Z()(t,{indent_size:2}),"js",{keyword:"color:".concat(e.keywordColor),number:"color:".concat(e.numberColor),operator:"color:".concat(e.operatorColor),comment:"color:".concat(e.commentColor),string:"color:".concat(e.stringColor)})}function lt(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.htmlForEl,r=void 0===n||n,i=Object(_.X)(t[0])&&1!==t.length;i&&(t=pt(t));for(var a=0,o=t.length;a<o;a++){var s=t[a];Object(_.K)(s)&&r?t[a]=_t(s):Object(_.N)(s)?t[a]=dt(s):Object(_.U)(s)?t[a]=ft(s):Object(_.Y)(s)?t[a]="undefined":Object(_.S)(s)?t[a]="null":(s=Object(_.zb)(s),0===a&&i||(s=Object(_.w)(s)),t[a]=s)}return t.join(" ")+'<div class="eruda-json eruda-hidden"></div>'}var ct=function(t){return lt(t,{htmlForEl:!1})};function pt(t){var e=Object(_.w)(t[0]),n=!1,r="";t.shift();for(var i=0,a=e.length;i<a;i++){var o=e[i];if("%"===o&&0!==t.length){i++;var s=t.shift();switch(e[i]){case"i":case"d":r+=Object(_.xb)(s);break;case"f":r+=Object(_.yb)(s);break;case"s":r+=Object(_.zb)(s);break;case"O":Object(_.U)(s)&&(r+=rt(s));break;case"o":Object(_.K)(s)?r+=_t(s):Object(_.U)(s)&&(r+=rt(s));break;case"c":if(e.length<=i+1)break;n&&(r+="</span>"),n=!0,r+='<span style="'.concat(ht(s),'">');break;default:i--,t.unshift(s),r+=o}}else r+=o}return n&&(r+="</span>"),t.unshift(r),t}function ht(t){var e=(t=Object(_.eb)(t)).split(";"),n={};Object(_.u)(e,(function(t){if(Object(_.m)(t,":")){var e=t.split(":"),r=V()(e,2),i=r[0],a=r[1];n[Object(_.Ab)(i)]=Object(_.Ab)(a)}})),n.display="inline-block",n["max-width"]="100%",n.contain="paint",delete n.width,delete n.height;var r="";return Object(_.u)(n,(function(t,e){r+="".concat(e,":").concat(t,";")})),r}function ft(t){var e=Object(_.E)(t);return"Array"===e&&t.length>1&&(e="(".concat(t.length,")")),"".concat(e," ").concat(rt(t))}function dt(t){return'<pre style="display:inline">'.concat(ut(t.toString()),"</pre>")}function _t(t){return'<pre style="display:inline">'.concat(Object(_.F)(Z.a.html(t.outerHTML,{unformatted:[],indent_size:2}),"html"),"</pre>")}var vt=function(){return Object(_.o)("HH:MM:ss")},mt=n(68),gt=function(t){return mt(t)};function bt(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2?arguments[2]:void 0;Object(_.r)(e,{accessGetter:nt.showGetterVal,unenumerable:nt.showUnenumerable,symbol:nt.showUnenumerable,timeout:1e3}),yt(t,e,(function(t){return n(JSON.parse(t))}))}function yt(t,e,n){var r=Object(_.ub)(t,e);Object(_.hb)((function(){return n(r)}))}var wt=0,xt=function(t){function e(t){var r;return i()(this,e),(r=u()(this,c()(e).call(this)))._style=L(n(69)),r._$container=t,r._container=t.get(0),r._$el=t.find("ul.eruda-logs"),r._el=r._$el.get(0),r._$fakeEl=t.find("ul.eruda-fake-logs"),r._fakeEl=r._$fakeEl.get(0),r._$topSpace=t.find(".eruda-top-space"),r._topSpace=r._$topSpace.get(0),r._$bottomSpace=t.find(".eruda-bottom-space"),r._bottomSpace=r._$bottomSpace.get(0),r._topSpaceHeight=0,r._bottomSpaceHeight=0,r._logs=[],r._displayLogs=[],r._timer={},r._count={},r._lastLog={},r._filter="all",r._maxNum="infinite",r._displayHeader=!1,r._asyncRender=!1,r._asyncList=[],r._asyncTimer=null,r._isAtBottom=!0,r._groupStack=new _.g,r._ignoreScroll=!1,r.renderViewport=Object(_.vb)((function(t){r._renderViewport(t)}),16),r._global={copy:function(t){Object(_.X)(t)||(t=JSON.stringify(t,null,2)),Object(_.n)(t)},$:function(){return document.querySelector.apply(document,arguments)},$$:function(){return Object(_.wb)(document.querySelectorAll.apply(document,arguments))},$x:function(t){return Object(_.Hb)(t)},clear:function(){r.clear()},dir:function(t){r.dir(t)},table:function(t,e){r.table(t,e)},keys:_.ab},r._bindEvent(),r}return h()(e,t),o()(e,[{key:"renderAsync",value:function(t){this._asyncRender=t}},{key:"setGlobal",value:function(t,e){this._global[t]=e}},{key:"displayHeader",value:function(t){this._displayHeader=t}},{key:"maxNum",value:function(t){var e=this._logs;this._maxNum=t,Object(_.T)(t)&&e.length>t&&(this._logs=e.slice(e.length-t),this.render())}},{key:"displayUnenumerable",value:function(t){nt.showUnenumerable=t}},{key:"displayGetterVal",value:function(t){nt.showGetterVal=t}},{key:"lazyEvaluation",value:function(t){nt.lazyEvaluation=t}},{key:"viewLogInSources",value:function(t){nt.showSrcInSources=t}},{key:"destroy",value:function(){this._style&&L.remove(this._style)}},{key:"filter",value:function(t){return this._filter=t,this.emit("filter",t),this.render()}},{key:"count",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"default",e=this._count;return Object(_.Y)(e[t])?e[t]=1:e[t]++,this.info("".concat(t,": ").concat(e[t]))}},{key:"countReset",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"default";return this._count[t]=0,this}},{key:"assert",value:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];if(!Object(_.L)(e)){var r=e.shift();return r?void 0:(0===e.length&&e.unshift("console.assert"),e.unshift("Assertion failed: "),this.insert("error",e))}}},{key:"log",value:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];if(!Object(_.L)(e))return this.insert("log",e)}},{key:"debug",value:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];if(!Object(_.L)(e))return this.insert("debug",e)}},{key:"dir",value:function(t){if(!Object(_.Y)(t))return this.insert("dir",[t])}},{key:"table",value:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];if(!Object(_.L)(e))return this.insert("table",e)}},{key:"time",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"default";return this._timer[t]?this.insert("warn",["Timer '".concat(t,"' already exists")]):(this._timer[t]=Object(_.lb)(),this)}},{key:"timeLog",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"default",e=this._timer[t];return e?this.info("".concat(t,": ").concat(Object(_.lb)()-e,"ms")):this.insert("warn",["Timer '".concat(t,"' does not exist")])}},{key:"timeEnd",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"default";return this.timeLog(t),delete this._timer[t],this}},{key:"clear",value:function(){return this.silentClear(),this.insert("log",["%cConsole was cleared","color:#808080;font-style:italic;"])}},{key:"silentClear",value:function(){return this._logs=[],this._displayLogs=[],this._lastLog={},this._count={},this._timer={},this._groupStack=new _.g,this._asyncList=[],this._asyncTimer&&(clearTimeout(this._asyncTimer),this._asyncTimer=null),this.render()}},{key:"info",value:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];if(!Object(_.L)(e))return this.insert("info",e)}},{key:"error",value:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];if(!Object(_.L)(e))return this.insert("error",e)}},{key:"warn",value:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];if(!Object(_.L)(e))return this.insert("warn",e)}},{key:"group",value:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return this.insert({type:"group",args:e,ignoreFilter:!0})}},{key:"groupCollapsed",value:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return this.insert({type:"groupCollapsed",args:e,ignoreFilter:!0})}},{key:"groupEnd",value:function(){this.insert("groupEnd")}},{key:"input",value:function(t){this.insert({type:"input",args:[t],ignoreFilter:!0});try{this.output(this._evalJs(t))}catch(t){this.insert({type:"error",ignoreFilter:!0,args:[t]})}return this}},{key:"output",value:function(t){return this.insert({type:"output",args:[t],ignoreFilter:!0})}},{key:"html",value:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return this.insert("html",e)}},{key:"render",value:function(){var t=this._logs;this._$el.html(""),this._isAtBottom=!0,this._updateBottomSpace(0),this._updateTopSpace(0),this._displayLogs=[];for(var e=0,n=t.length;e<n;e++)this._attachLog(t[e]);return this}},{key:"insert",value:function(t,e){this._asyncRender?this.insertAsync(t,e):this.insertSync(t,e)}},{key:"insertAsync",value:function(t,e){this._asyncList.push([t,e]),this._handleAsyncList()}},{key:"insertSync",value:function(t,e){var n=this,r=this._logs,i=this._groupStack;if("groupEnd"===t)return this._lastLog.groupEnd(),this._groupStack.pop(),this;var a=Object(_.X)(t)?{type:t,args:e}:t;if(i.size>0&&(a.group=i.peek()),Object(_.z)(a,{id:++wt,displayHeader:this._displayHeader}),"group"===a.type||"groupCollapsed"===a.type){var o={id:Object(_.Cb)("group"),collapsed:!1,parent:i.peek(),indentLevel:i.size+1};"groupCollapsed"===a.type&&(o.collapsed=!0),a.targetGroup=o,i.push(o)}var s=new nt(a);s.on("updateSize",(function(){n._isAtBottom=!1,n.renderViewport()}));var u=this._lastLog;if(Object(_.m)(["html","group","groupCollapsed"],s.type)||u.type!==s.type||s.src||s.args||u.text()!==s.text()?(r.push(s),this._lastLog=s):(u.addCount(),s.time&&u.updateTime(s.time),s=u,this._detachLog(u)),"infinite"!==this._maxNum&&r.length>this._maxNum){var l=r[0];this._detachLog(l),r.shift()}return this._attachLog(s),this.emit("insert",s),this}},{key:"toggleGroup",value:function(t){t.targetGroup.collapsed?this._openGroup(t):this._collapseGroup(t)}},{key:"_updateTopSpace",value:function(t){this._topSpaceHeight=t,this._topSpace.style.height=t+"px"}},{key:"_updateBottomSpace",value:function(t){this._bottomSpaceHeight=t,this._bottomSpace.style.height=t+"px"}},{key:"_updateLogSize",value:function(t){var e=this._fakeEl;if(!Object(_.O)(this._fakeEl))return t.isAttached()?void t.updateSize():(e.appendChild(t.el),t.updateSize(),void(e.children>100&&(e.innerHTML="")))}},{key:"_detachLog",value:function(t){var e=this._displayLogs,n=e.indexOf(t);n>-1&&(e.splice(n,1),this.renderViewport())}},{key:"_attachLog",value:function(t){if(this._filterLog(t)&&!t.collapsed){var e=this._displayLogs;if(0===e.length)return e.push(t),void this.renderViewport();var n=Object(_.bb)(e);if(t.id>n.id)return e.push(t),void this.renderViewport();for(var r,i,a=0,o=e.length-1;a<=o;){if((r=e[i=a+Math.floor((o-a)/2)]).id===t.id)return;r.id<t.id?a=i+1:o=i-1}r.id<t.id?e.splice(i+1,0,t):e.splice(i,0,t),this.renderViewport()}}},{key:"_handleAsyncList",value:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:20,n=this._asyncList;this._asyncTimer||(this._asyncTimer=setTimeout((function(){t._asyncTimer=null;var e,r,i=!1,a=n.length;a<1e3?(r=200,e=400):a<5e3?(r=500,e=800):a<1e4?(r=800,e=1e3):a<25e3?(r=1e3,e=1200):a<5e4?(r=1500,e=1500):(r=2e3,e=2500),r>a&&(r=a,i=!0);for(var o=0;o<r;o++){var s=n.shift(),u=V()(s,2),l=u[0],c=u[1];t.insertSync(l,c)}i||Object(_.ob)((function(){return t._handleAsyncList(e)}))}),e))}},{key:"_injectGlobal",value:function(){Object(_.u)(this._global,(function(t,e){window[e]||(window[e]=t)}))}},{key:"_clearGlobal",value:function(){Object(_.u)(this._global,(function(t,e){window[e]&&window[e]===t&&delete window[e]}))}},{key:"_evalJs",value:function(t){var e;this._injectGlobal();try{e=eval.call(window,"(".concat(t,")"))}catch(n){e=eval.call(window,t)}return this.setGlobal("$_",e),this._clearGlobal(),e}},{key:"_filterLog",value:function(t){var e=this._filter;if("all"===e)return!0;var n=Object(_.W)(e),r=Object(_.N)(e);return!!t.ignoreFilter||(r?e(t):n?e.test(Object(_.eb)(t.text())):t.type===e)}},{key:"_getLog",value:function(t){for(var e,n=this._logs,r=0,i=n.length;r<i&&(e=n[r]).id!==t;r++);return e}},{key:"_collapseGroup",value:function(t){t.targetGroup.collapsed=!0,t.updateIcon("caret-right"),this._updateGroup(t)}},{key:"_openGroup",value:function(t){t.targetGroup.collapsed=!1,t.updateIcon("caret-down"),this._updateGroup(t)}},{key:"_updateGroup",value:function(t){for(var e=t.targetGroup,n=this._logs,r=n.length,i=n.indexOf(t)+1;i<r;){var a=n[i];if(!a.checkGroup()&&a.group===e)break;a.collapsed?this._detachLog(a):this._attachLog(a),i++}}},{key:"_bindEvent",value:function(){var t=this,e=this;this._$el.on("click",".eruda-log-container",(function(){this.log.click(e)})).on("click",".eruda-icon-caret-down",(function(){var t=Object(_.a)(this).parent().parent().parent();e._collapseGroup(t.get(0).log)})).on("click",".eruda-icon-caret-right",(function(){var t=Object(_.a)(this).parent().parent().parent();e._openGroup(t.get(0).log)})),this._$container.on("scroll",(function(){if(t._ignoreScroll)t._ignoreScroll=!1;else{var e=t._container,n=e.scrollHeight,r=e.offsetHeight,i=e.scrollTop,a=!1;(n===r||i===n-r)&&(a=!0),t._isAtBottom=a,t._topSpaceHeight<i&&t._topSpaceHeight+t._el.offsetHeight>scrollTo+r||t.renderViewport(!1)}}))}},{key:"_renderViewport",value:function(){var t=this._container;if(!Object(_.O)(t)){var e=t.scrollTop,n=t.offsetWidth,r=t.offsetHeight,i=e,a=e+r,o=this._displayLogs;i-=1e3,a+=1e3;var s=0,u=0,l=0;this._el.innerHTML="";for(var c=o.length,p=this._fakeEl,h=document.createDocumentFragment(),f=[],d=0;d<c;d++){var v=o[d],m=v.width;0!==v.height&&m===n||(h.appendChild(v.el),f.push(v))}if(f.length>0){p.appendChild(h);for(var g=0,b=f.length;g<b;g++)f[g].updateSize();p.innerHTML=""}for(var y=document.createDocumentFragment(),w=0;w<c;w++){var x=o[w],k=x.el,$=x.height;l>a?u+=$:l+$>i?y.appendChild(k):l<i&&(s+=$),l+=$}this._el.appendChild(y),this._updateTopSpace(s),this._updateBottomSpace(u);var O=t.scrollHeight;this._isAtBottom&&e!==O-r?(t.scrollTop=O-r,this.renderViewport()):t.scrollTop=e,this._ignoreScroll=!0}}}]),e}(_.c);_.Bb.start();var kt=function(t){function e(){var t,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=n.name,a=void 0===r?"console":r;return i()(this,e),t=u()(this,c()(e).call(this)),K()(q()(t),"_handleShow",(function(){Object(_.O)(t._$el.get(0))||t._logger.renderViewport()})),K()(q()(t),"_handleErr",(function(e){t._logger.error(e)})),_.c.mixin(q()(t)),t.name=a,t._scale=1,t._registerListener(),t}return h()(e,t),o()(e,[{key:"init",value:function(t,n){b()(c()(e.prototype),"init",this).call(this,t),this._container=n,this._appendTpl(),this._initLogger(),this._exposeLogger(),this._initCfg(),this._bindEvent()}},{key:"show",value:function(){b()(c()(e.prototype),"show",this).call(this),this._handleShow()}},{key:"overrideConsole",value:function(){var t=this,e=this._origConsole={},n=window.console;return $t.forEach((function(r){var i=e[r]=_.ib;n[r]&&(i=e[r]=n[r].bind(n)),n[r]=function(){t[r].apply(t,arguments),i.apply(void 0,arguments)}})),this}},{key:"setGlobal",value:function(t,e){this._logger.setGlobal(t,e)}},{key:"restoreConsole",value:function(){var t=this;return this._origConsole?($t.forEach((function(e){return window.console[e]=t._origConsole[e]})),delete this._origConsole,this):this}},{key:"catchGlobalErr",value:function(){return _.Bb.addListener(this._handleErr),this}},{key:"ignoreGlobalErr",value:function(){return _.Bb.rmListener(this._handleErr),this}},{key:"destroy",value:function(){this._logger.destroy(),b()(c()(e.prototype),"destroy",this).call(this),this._container.off("show",this._handleShow),this._style&&L.remove(this._style),this.ignoreGlobalErr(),this.restoreConsole(),this._unregisterListener(),this._rmCfg()}},{key:"_enableJsExecution",value:function(t){var e=this._$el,n=e.find(".eruda-console-container"),r=e.find(".eruda-js-input");t?(r.show(),n.rmClass("eruda-js-input-hidden")):(r.hide(),n.addClass("eruda-js-input-hidden"))}},{key:"_registerListener",value:function(){var t=this;this._scaleListener=function(e){return t._scale=e},m.on(m.SCALE,this._scaleListener)}},{key:"_unregisterListener",value:function(){m.off(m.SCALE,this._scaleListener)}},{key:"_appendTpl",value:function(){var t=this._$el;this._style=L(n(70)),t.append(n(71)());var e=t.find(".eruda-js-input"),r=e.find("textarea"),i=e.find(".eruda-buttons");Object.assign(this,{_$control:t.find(".eruda-control"),_$logs:t.find(".eruda-logs-container"),_$inputContainer:e,_$input:r,_$inputBtns:i,_$searchKeyword:t.find(".eruda-search-keyword")})}},{key:"_initLogger",value:function(){var t=this._$control.find(".eruda-filter");(this._logger=new xt(this._$logs)).on("filter",(function(e){return t.each((function(){var t=Object(_.a)(this),n=t.data("filter")===e;t[n?"addClass":"rmClass"]("eruda-active")}))}))}},{key:"_exposeLogger",value:function(){var t=this,e=this._logger;["filter","html"].concat($t).forEach((function(n){return t[n]=function(){for(var r=arguments.length,i=new Array(r),a=0;a<r;a++)i[a]=arguments[a];return e[n].apply(e,i),t.emit.apply(t,[n].concat(i)),t}}))}},{key:"_bindEvent",value:function(){var t=this,e=this._container,n=this._$input,r=this._$inputBtns,i=this._$control,a=this._$searchKeyword,o=this._logger,s=this.config;i.on("click",".eruda-clear-console",(function(){return o.silentClear()})).on("click",".eruda-filter",(function(){a.text(""),o.filter(Object(_.a)(this).data("filter"))})).on("click",".eruda-search",(function(){var e=prompt("Filter");Object(_.S)(e)||(a.text(e),""!==Object(_.Ab)(e)?t._logger.filter(new RegExp(Object(_.y)(Object(_.eb)(e)))):o.filter("all"))})),r.on("click",".eruda-cancel",(function(){return t._hideInput()})).on("click",".eruda-execute",(function(){var e=n.val().trim();""!==e&&(o.input(e),n.val("").get(0).blur(),t._hideInput())})),n.on("focusin",(function(){return t._showInput()})),o.on("insert",(function(t){"error"===t.type&&s.get("displayIfErr")&&e.showTool("console").show()})),e.on("show",this._handleShow)}},{key:"_hideInput",value:function(){this._$inputContainer.rmClass("eruda-active"),this._$inputBtns.hide()}},{key:"_showInput",value:function(){this._$inputContainer.addClass("eruda-active"),this._$inputBtns.show()}},{key:"_rmCfg",value:function(){var t=this.config,e=this._container.get("settings");e&&e.remove(t,"asyncRender").remove(t,"jsExecution").remove(t,"catchGlobalErr").remove(t,"overrideConsole").remove(t,"displayExtraInfo").remove(t,"displayUnenumerable").remove(t,"displayGetterVal").remove(t,"lazyEvaluation").remove(t,"displayIfErr").remove(t,"maxLogNum").remove(Object(_.Eb)(this.name))}},{key:"_initCfg",value:function(){var t=this,e=this._container,n=this._logger,r=this.config=N.createCfg(this.name,{asyncRender:!0,catchGlobalErr:!0,jsExecution:!0,overrideConsole:!0,displayExtraInfo:!1,displayUnenumerable:!0,displayGetterVal:!1,lazyEvaluation:!0,displayIfErr:!1,maxLogNum:"infinite"}),i=r.get("maxLogNum");i="infinite"===i?i:+i,this._enableJsExecution(r.get("jsExecution")),r.get("asyncRender")&&n.renderAsync(!0),r.get("catchGlobalErr")&&this.catchGlobalErr(),r.get("overrideConsole")&&this.overrideConsole(),n.displayHeader(r.get("displayExtraInfo")),n.displayUnenumerable(r.get("displayUnenumerable")),n.displayGetterVal(r.get("displayGetterVal")),n.lazyEvaluation(r.get("lazyEvaluation")),n.maxNum(i),r.on("change",(function(e,r){switch(e){case"asyncRender":return n.renderAsync(r);case"jsExecution":return t._enableJsExecution(r);case"catchGlobalErr":return r?t.catchGlobalErr():t.ignoreGlobalErr();case"overrideConsole":return r?t.overrideConsole():t.restoreConsole();case"maxLogNum":return n.maxNum("infinite"===r?r:+r);case"displayExtraInfo":return n.displayHeader(r);case"displayUnenumerable":return n.displayUnenumerable(r);case"displayGetterVal":return n.displayGetterVal(r);case"lazyEvaluation":return n.lazyEvaluation(r)}}));var a=e.get("settings");a&&a.text(Object(_.Eb)(this.name)).switch(r,"asyncRender","Asynchronous Rendering").switch(r,"jsExecution","Enable JavaScript Execution").switch(r,"catchGlobalErr","Catch Global Errors").switch(r,"overrideConsole","Override Console").switch(r,"displayIfErr","Auto Display If Error Occurs").switch(r,"displayExtraInfo","Display Extra Information").switch(r,"displayUnenumerable","Display Unenumerable Properties").switch(r,"displayGetterVal","Access Getter Value").switch(r,"lazyEvaluation","Lazy Evaluation").select(r,"maxLogNum","Max Log Number",["infinite","250","125","100","50","10"]).separator()}}]),e}(y),$t=["log","error","info","warn","dir","time","timeLog","timeEnd","clear","table","assert","count","countReset","debug","group","groupCollapsed","groupEnd"],Ot=n(29),Et=n.n(Ot);function At(t){if(!t)return"unknown";var e=t.split(";")[0].split("/");return{type:e[0],subType:Object(_.bb)(e)}}function Ct(t){var e=encodeURIComponent(t).match(/%[89ABab]/g);return t.length+(e?e.length:0)}var jt=function(t){function e(t,n,r){var a;return i()(this,e),(a=u()(this,c()(e).call(this)))._xhr=t,a._reqHeaders={},a._method=n,a._url=Object(_.C)(r),a._id=Object(_.Cb)("request"),a}return h()(e,t),o()(e,[{key:"handleSend",value:function(t){Object(_.X)(t)||(t=""),t={name:Object(_.D)(this._url),url:this._url,data:t,method:this._method},Object(_.L)(this._reqHeaders)||(t.reqHeaders=this._reqHeaders),this.emit("send",this._id,t)}},{key:"handleReqHeadersSet",value:function(t,e){t&&e&&(this._reqHeaders[t]=e)}},{key:"handleHeadersReceived",value:function(){var t=this._xhr,e=At(t.getResponseHeader("Content-Type"));this.emit("update",this._id,{type:e.type,subType:e.subType,size:Tt(t,!0,this._url),time:Object(_.jb)(),resHeaders:St(t)})}},{key:"handleDone",value:function(){var t,e,n,r=this,i=this._xhr,a=i.responseType,o="",s=function(){r.emit("update",r._id,{status:i.status,done:!0,size:Tt(i,!1,r._url),time:Object(_.jb)(),resTxt:o})},u=At(i.getResponseHeader("Content-Type"));"blob"!==a||"text"!==u.type&&"javascript"!==u.subType&&"json"!==u.subType?(""!==a&&"text"!==a||(o=i.responseText),"json"===a&&(o=JSON.stringify(i.response)),s()):(t=i.response,e=function(t,e){e&&(o=e),s()},(n=new FileReader).onload=function(){e(0,n.result)},n.onerror=function(t){e()},n.readAsText(t))}}]),e}(_.c);function St(t){var e=t.getAllResponseHeaders().split("\n"),n={};return Object(_.u)(e,(function(t){if(""!==(t=Object(_.Ab)(t))){var e=t.split(":",2),r=V()(e,2),i=r[0],a=r[1];n[i]=Object(_.Ab)(a)}})),n}function Tt(t,e,n){var r=0;function i(){if(!e){var n=t.responseType,i="";""!==n&&"text"!==n||(i=t.responseText),i&&(r=Ct(i))}}if(Object(_.I)(n))i();else try{r=Object(_.yb)(t.getResponseHeader("Content-Length"))}catch(t){i()}return 0===r&&i(),"".concat(Object(_.A)(r),"B")}var Pt=function(t){function e(t){var n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return i()(this,e),n=u()(this,c()(e).call(this)),t instanceof window.Request&&(t=t.url),n._url=Object(_.C)(t),n._id=Object(_.Cb)("request"),n._options=r,n._reqHeaders=r.headers||{},n._method=r.method||"GET",n}return h()(e,t),o()(e,[{key:"send",value:function(t){var e=this,n=this._options,r=Object(_.X)(n.body)?n.body:"";this._fetch=t,this.emit("send",this._id,{name:Object(_.D)(this._url),url:this._url,data:r,method:this._method}),t.then((function(t){var n=At((t=t.clone()).headers.get("Content-Type"));return t.text().then((function(r){var i={type:n.type,subType:n.subType,time:Object(_.jb)(),size:Rt(t,r),resTxt:r,resHeaders:Dt(t),status:t.status,done:!0};Object(_.L)(e._reqHeaders)||(i.reqHeaders=e._reqHeaders),e.emit("update",e._id,i)})),t}))}}]),e}(_.c);function Rt(t,e){var n,r=t.headers.get("Content-length");return n=r?Object(_.yb)(r):Ct(e),"".concat(Object(_.A)(n),"B")}function Dt(t){var e={};return t.headers.forEach((function(t,n){return e[n]=t})),e}var Mt=function(t){function e(){var t;return i()(this,e),(t=u()(this,c()(e).call(this)))._style=L(n(72)),t.name="network",t._requests={},t._tpl=n(73),t._detailTpl=n(74),t._requestsTpl=n(75),t._datailData={},t._isFetchSupported=!1,window.fetch&&(t._isFetchSupported=Object(_.R)(window.fetch)),t}return h()(e,t),o()(e,[{key:"init",value:function(t,n){b()(c()(e.prototype),"init",this).call(this,t),this._container=n,this._bindEvent(),this._initCfg(),this.overrideXhr(),this._appendTpl()}},{key:"show",value:function(){b()(c()(e.prototype),"show",this).call(this),this._render()}},{key:"clear",value:function(){this._requests={},this._render()}},{key:"overrideXhr",value:function(){var t=window.XMLHttpRequest.prototype,e=this._origSend=t.send,n=this._origOpen=t.open,r=this._origSetRequestHeader=t.setRequestHeader,i=this;t.open=function(t,e){var r=this,a=r.erudaRequest=new jt(r,t,e);a.on("send",(function(t,e){return i._addReq(t,e)})),a.on("update",(function(t,e){return i._updateReq(t,e)})),r.addEventListener("readystatechange",(function(){switch(r.readyState){case 2:return a.handleHeadersReceived();case 4:return a.handleDone()}})),n.apply(this,arguments)},t.send=function(t){var n=this.erudaRequest;n&&n.handleSend(t),e.apply(this,arguments)},t.setRequestHeader=function(t,e){var n=this.erudaRequest;n&&n.handleReqHeadersSet(t,e),r.apply(this,arguments)}}},{key:"restoreXhr",value:function(){var t=window.XMLHttpRequest.prototype;this._origOpen&&(t.open=this._origOpen),this._origSend&&(t.send=this._origSend),this._origSetRequestHeader&&(t.setRequestHeader=this._origSetRequestHeader)}},{key:"overrideFetch",value:function(){if(this._isFetchSupported){var t=this._origFetch=window.fetch,e=this;window.fetch=function(){for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];var a=Et()(Pt,r);a.on("send",(function(t,n){return e._addReq(t,n)})),a.on("update",(function(t,n){return e._updateReq(t,n)}));var o=t.apply(void 0,r);return a.send(o),o}}}},{key:"restoreFetch",value:function(){this._isFetchSupported&&this._origFetch&&(window.fetch=this._origFetch)}},{key:"requests",value:function(){var t=[];return Object(_.u)(this._requests,(function(e){t.push(e)})),t}},{key:"_addReq",value:function(t,e){Object(_.r)(e,{name:"",url:"",status:"pending",type:"unknown",subType:"unknown",size:0,data:"",method:"GET",startTime:Object(_.jb)(),time:0,resTxt:"",done:!1}),this._requests[t]=e,this._render()}},{key:"_updateReq",value:function(t,e){var n=this._requests[t];n&&(Object(_.z)(n,e),n.time=n.time-n.startTime,n.displayTime=Object(_.gb)(n.time),n.done&&(n.status<200||n>=300)&&(n.hasErr=!0),this._render())}},{key:"_bindEvent",value:function(){var t=this,e=this._$el,n=this._container,r=this;function i(t,e){var r=n.get("sources");r&&(r.set(t,e),n.showTool("sources"))}e.on("click",".eruda-request",(function(){var t=Object(_.a)(this).data("id"),e=r._requests[t];e.done&&r._showDetail(e)})).on("click",".eruda-clear-request",(function(){return t.clear()})).on("click",".eruda-back",(function(){return t._hideDetail()})).on("click",".eruda-http .eruda-response",(function(){var e=t._detailData,n=e.resTxt;switch(e.subType){case"css":return i("css",n);case"html":return i("html",n);case"javascript":return i("js",n);case"json":return i("object",n)}switch(e.type){case"image":return i("img",e.url)}}))}},{key:"destroy",value:function(){b()(c()(e.prototype),"destroy",this).call(this),L.remove(this._style),this.restoreXhr(),this.restoreFetch(),this._rmCfg()}},{key:"_showDetail",value:function(t){t.resTxt&&""===Object(_.Ab)(t.resTxt)&&delete t.resTxt,Object(_.L)(t.resHeaders)&&delete t.resHeaders,this._$detail.html(this._detailTpl(t)).show(),this._detailData=t}},{key:"_hideDetail",value:function(){this._$detail.hide()}},{key:"_rmCfg",value:function(){var t=this.config,e=this._container.get("settings");e&&e.remove(t,"overrideFetch").remove("Network")}},{key:"_appendTpl",value:function(){var t=this._$el;t.html(this._tpl()),this._$detail=t.find(".eruda-detail"),this._$requests=t.find(".eruda-requests")}},{key:"_initCfg",value:function(){var t=this,e=this.config=N.createCfg("network",{overrideFetch:!0});e.get("overrideFetch")&&this.overrideFetch(),e.on("change",(function(e,n){switch(e){case"overrideFetch":return n?t.overrideFetch():t.restoreFetch()}})),this._container.get("settings").text("Network").switch(e,"overrideFetch","Catch Fetch Requests").separator()}},{key:"_render",value:function(){if(this.active){var t={};Object(_.L)(this._requests)||(t.requests=this._requests),this._renderHtml(this._requestsTpl(t))}}},{key:"_renderHtml",value:function(t){t!==this._lastHtml&&(this._lastHtml=t,this._$requests.html(t))}}]),e}(y);function Lt(t){for(var e={},n=0,r=t.length;n<r;n++){var i=t[n];"initial"!==t[i]&&(e[i]=t[i])}return function(t){return Object(_.sb)(t,{comparator:function(t,e){for(var n=t.length,r=e.length,i=n>r?r:n,a=0;a<i;a++){var o=zt(t.charCodeAt(a),e.charCodeAt(a));if(0!==o)return o}return n>r?1:n<r?-1:0}})}(e)}var Nt=Element.prototype,Ft=function(){return!1};Nt.webkitMatchesSelector?Ft=function(t,e){return t.webkitMatchesSelector(e)}:Nt.mozMatchesSelector&&(Ft=function(t,e){return t.mozMatchesSelector(e)});var It=function(){function t(e){i()(this,t),this._el=e}return o()(t,[{key:"getComputedStyle",value:function(){return Lt(window.getComputedStyle(this._el))}},{key:"getMatchedCSSRules",value:function(){var t=this,e=[];return Object(_.u)(document.styleSheets,(function(n){try{if(!n.cssRules)return}catch(t){return}Object(_.u)(n.cssRules,(function(n){var r=!1;try{r=t._elMatchesSel(n.selectorText)}catch(t){}r&&e.push({selectorText:n.selectorText,style:Lt(n.style)})}))})),e}},{key:"_elMatchesSel",value:function(t){return Ft(this._el,t)}}]),t}();function zt(t,e){return(t=Ht(t))>(e=Ht(e))?1:t<e?-1:0}function Ht(t){return 45===t?123:t}var Bt=function(){function t(e){i()(this,t),this._style=L(n(76)),this._isShow=!1,this._appendTpl(e),this._bindEvent()}return o()(t,[{key:"setEl",value:function(t){this._$target=Object(_.a)(t),this._target=t}},{key:"show",value:function(){this._isShow=!0,this.render(),this._$el.show()}},{key:"destroy",value:function(){L.remove(this._style)}},{key:"hide",value:function(){this._isShow=!1,this._$el.hide()}},{key:"render",value:function(){var t=this._$target.offset(),e=t.left,n=t.width,r=t.top,i=t.height;this._$el.css({left:e,top:r-window.scrollY,width:n,height:i});var a=getComputedStyle(this._target,"");if("none"===a.display)return this._$el.css("visibility","hidden");this._$el.css("visibility","visible");var o=function(t){return Object(_.nb)(a.getPropertyValue(t))},s=o("margin-left"),u=o("margin-right"),l=o("margin-top"),c=o("margin-bottom");this._$margin.css({left:-s,top:-l,width:n+s+u,height:i+l+c});var p=o("border-left-width"),h=o("border-right-width"),f=o("border-top-width"),d=n-p-h,v=i-f-o("border-bottom-width");this._$padding.css({left:p,top:f,width:d,height:v});var m=o("padding-left"),g=o("padding-right"),b=o("padding-top"),y=o("padding-bottom");this._$content.css({left:p+m,top:p+b,width:d-m-g,height:v-b-y}),this._$size.css({top:-l-(r-l<25?0:25),left:-s}).html("".concat(function(t){var e=t.id,n=t.className,r='<span style="color:#881280;">'.concat(t.tagName.toLowerCase(),"</span>");""!==e&&(r+='<span style="color:1a1aa8;">#'.concat(e,"</span>"));var i="";return Object(_.X)(n)&&Object(_.u)(n.split(/\s+/g),(function(t){""!==Object(_.Ab)(t)&&(i+=".".concat(t))})),r+'<span style="color:1a1aa8;">'.concat(i,"</span>")}(this._target)," | ").concat(n," × ").concat(i))}},{key:"_bindEvent",value:function(){var t=this;window.addEventListener("scroll",(function(){t._isShow&&t.render()}),!1)}},{key:"_appendTpl",value:function(t){t.append(n(77)());var e=this._$el=t.find(".eruda-elements-highlight");this._$margin=e.find(".eruda-margin"),this._$padding=e.find(".eruda-padding"),this._$content=e.find(".eruda-content"),this._$size=e.find(".eruda-size")}}]),t}();function Ut(t){var e=t.parentNode;if(!e)return!1;for(;e;)if((e=e.parentNode)&&"eruda"===e.id)return!0;return!1}var qt=function(t){function e(){var t;i()(this,e),t=u()(this,c()(e).call(this));var n=q()(t);return t._startListener=function(t){if(!Ut(t.target))return n._timer=setTimeout((function(){n.emit("select",t.target)}),200),!1},t._moveListener=function(){clearTimeout(n._timer)},t._clickListener=function(t){Ut(t.target)||(t.preventDefault(),t.stopImmediatePropagation())},t}return h()(e,t),o()(e,[{key:"enable",value:function(){function t(t,e){document.body.addEventListener(t,e,!0)}return this.disable(),Object(_.P)()?(t("touchstart",this._startListener),t("touchmove",this._moveListener)):(t("mousedown",this._startListener),t("mousemove",this._moveListener)),t("click",this._clickListener),this}},{key:"disable",value:function(){function t(t,e){document.body.removeEventListener(t,e,!0)}return Object(_.P)()?(t("touchstart",this._startListener),t("touchmove",this._moveListener)):(t("mousedown",this._startListener),t("mousemove",this._moveListener)),t("click",this._clickListener),this}}]),e}(_.c),Gt=function(t){function e(){var t;return i()(this,e),(t=u()(this,c()(e).call(this)))._style=L(n(78)),t.name="elements",t._tpl=n(79),t._rmDefComputedStyle=!0,t._highlightElement=!1,t._selectElement=!1,t._observeElement=!0,t._computedStyleSearchKeyword="",t._history=[],_.c.mixin(q()(t)),t}return h()(e,t),o()(e,[{key:"init",value:function(t,r){var i=this;b()(c()(e.prototype),"init",this).call(this,t),this._container=r,t.html('<div class="eruda-show-area"></div>'),this._$showArea=t.find(".eruda-show-area"),t.append(n(80)()),this._htmlEl=document.documentElement,this._highlight=new Bt(this._container.$container),this._select=new qt,this._bindEvent(),this._initObserver(),this._initCfg(),Object(_.hb)((function(){return i._updateHistory()}))}},{key:"show",value:function(){b()(c()(e.prototype),"show",this).call(this),this._observeElement&&this._enableObserver(),this._curEl||this._setEl(this._htmlEl),this._render()}},{key:"hide",value:function(){return this._disableObserver(),b()(c()(e.prototype),"hide",this).call(this)}},{key:"set",value:function(t){if(t!==this._curEl)return this._setEl(t),this.scrollToTop(),this._render(),this._updateHistory(),this.emit("change",t),this}},{key:"overrideEventTarget",value:function(){var t=re(),e=this._origAddEvent=t.addEventListener,n=this._origRmEvent=t.removeEventListener;t.addEventListener=function(t,n,r){ee(this,t,n,r),e.apply(this,arguments)},t.removeEventListener=function(t,e,r){ne(this,t,e,r),n.apply(this,arguments)}}},{key:"scrollToTop",value:function(){this._$showArea.get(0).scrollTop=0}},{key:"restoreEventTarget",value:function(){var t=re();this._origAddEvent&&(t.addEventListener=this._origAddEvent),this._origRmEvent&&(t.removeEventListener=this._origRmEvent)}},{key:"destroy",value:function(){b()(c()(e.prototype),"destroy",this).call(this),L.remove(this._style),this._select.disable(),this._highlight.destroy(),this._disableObserver(),this.restoreEventTarget(),this._rmCfg()}},{key:"_back",value:function(){if(this._curEl!==this._htmlEl){for(var t=this._curParentQueue,e=t.shift();!Jt(e);)e=t.shift();this.set(e)}}},{key:"_bindEvent",value:function(){var t=this,e=this,n=this._container,r=this._select;this._$el.on("click",".eruda-child",(function(){var t=Object(_.a)(this).data("idx"),r=e._curEl,i=r.childNodes[t];if(i&&3===i.nodeType){var a;switch(r.tagName){case"SCRIPT":a="js";break;case"STYLE":a="css";break;default:return}var o=n.get("sources");o&&(o.set(a,i.nodeValue),n.showTool("sources"))}else Jt(i)?e.set(i):e._render()})).on("click",".eruda-listener-content",(function(){var t=Object(_.a)(this).text(),e=n.get("sources");e&&(e.set("js",t),n.showTool("sources"))})).on("click",".eruda-breadcrumb",(function(){var e=n.get("sources");e&&(e.set("object",t._curEl),n.showTool("sources"))})).on("click",".eruda-parent",(function(){for(var t=Object(_.a)(this).data("idx"),n=e._curEl.parentNode;t--&&n.parentNode;)n=n.parentNode;Jt(n)?e.set(n):e._render()})).on("click",".eruda-toggle-all-computed-style",(function(){return t._toggleAllComputedStyle()})).on("click",".eruda-computed-style-search",(function(){var e=prompt("Filter");Object(_.S)(e)||(e=Object(_.Ab)(e),t._computedStyleSearchKeyword=e,t._render())})),this._$el.find(".eruda-bottom-bar").on("click",".eruda-refresh",(function(){return t._render()})).on("click",".eruda-highlight",(function(){return t._toggleHighlight()})).on("click",".eruda-select",(function(){return t._toggleSelect()})).on("click",".eruda-reset",(function(){return t.set(t._htmlEl)})),r.on("select",(function(e){return t.set(e)}))}},{key:"_toggleAllComputedStyle",value:function(){this._rmDefComputedStyle=!this._rmDefComputedStyle,this._render()}},{key:"_enableObserver",value:function(){this._observer.observe(this._htmlEl,{attributes:!0,childList:!0,subtree:!0})}},{key:"_disableObserver",value:function(){this._observer.disconnect()}},{key:"_toggleHighlight",value:function(){this._selectElement||(this._$el.find(".eruda-highlight").toggleClass("eruda-active"),this._highlightElement=!this._highlightElement,this._render())}},{key:"_toggleSelect",value:function(){var t=this._select;this._$el.find(".eruda-select").toggleClass("eruda-active"),this._selectElement||this._highlightElement||this._toggleHighlight(),this._selectElement=!this._selectElement,this._selectElement?(t.enable(),this._container.hide()):t.disable()}},{key:"_setEl",value:function(t){this._curEl=t,this._curCssStore=new It(t),this._highlight.setEl(t),this._rmDefComputedStyle=!0;for(var e=[],n=t.parentNode;n;)e.push(n),n=n.parentNode;this._curParentQueue=e}},{key:"_getData",value:function(){var t={},e=this._curEl,n=this._curCssStore,r=e.className,i=e.id,a=e.attributes,o=e.tagName;t.computedStyleSearchKeyword=this._computedStyleSearchKeyword,t.parents=function(t){for(var e=[],n=0,r=t.parentNode;r&&1===r.nodeType;)e.push({text:Yt(r,{noAttr:!0}),idx:n++}),r=r.parentNode;return e.reverse()}(e),t.children=function(t){for(var e=[],n=0,r=t.length;n<r;n++){var i=t[n],a=i.nodeType;if(3!==a&&8!==a){var o=!Object(_.X)(i.className);1===a&&"eruda"!==i.id&&(o||i.className.indexOf("eruda")<0)&&e.push({text:Yt(i),isEl:!0,idx:n})}else{var s=i.nodeValue.trim();""!==s&&e.push({text:s,isCmt:8===a,idx:n})}}return e}(e.childNodes),t.attributes=Qt(a),t.name=Yt({tagName:o,id:i,className:r,attributes:a});var s=e.erudaEvents;if(s&&0!==Object(_.ab)(s).length&&(t.listeners=s),te(o))return t;var u=n.getComputedStyle();function l(t){var e=["top","left","right","bottom"];return"position"!==t&&(e=Object(_.fb)(e,(function(e){return"".concat(t,"-").concat(e)}))),"border"===t&&(e=Object(_.fb)(e,(function(t){return"".concat(t,"-width")}))),{top:ae(u[e[0]],t),left:ae(u[e[1]],t),right:ae(u[e[2]],t),bottom:ae(u[e[3]],t)}}var c={margin:l("margin"),border:l("border"),padding:l("padding"),content:{width:ae(u.width),height:ae(u.height)}};"static"!==u.position&&(c.position=l("position")),t.boxModel=c;var p=n.getMatchedCSSRules();p.unshift(function(t){for(var e={selectorText:"element.style",style:{}},n=0,r=t.length;n<r;n++){var i=t[n];e.style[i]=t[i]}return e}(e.style)),p.forEach((function(t){return Kt(t.style)})),t.styles=p,this._rmDefComputedStyle&&(u=function(t,e){var n={},r=["display","width","height"];return Object(_.u)(e,(function(t){r=r.concat(Object(_.ab)(t.style))})),r=Object(_.Db)(r),Object(_.u)(t,(function(t,e){Object(_.m)(r,e)&&(n[e]=t)})),n}(u,p)),t.rmDefComputedStyle=this._rmDefComputedStyle;var h=Object(_.eb)(t.computedStyleSearchKeyword);return h&&(u=Object(_.mb)(u,(function(t,e){return Object(_.m)(e,h)||Object(_.m)(t,h)}))),Kt(u),t.computedStyle=u,t}},{key:"_render",value:function(){if(!Jt(this._curEl))return this._back();this._highlight[this._highlightElement?"show":"hide"](),this._renderHtml(this._tpl(this._getData()))}},{key:"_renderHtml",value:function(t){t!==this._lastHtml&&(this._lastHtml=t,this._$showArea.html(t))}},{key:"_updateHistory",value:function(){var t=this._container.get("console");if(t){var e=this._history;e.unshift(this._curEl),e.length>5&&e.pop();for(var n=0;n<5;n++)t.setGlobal("$".concat(n),e[n])}}},{key:"_initObserver",value:function(){var t=this;this._observer=new _.f((function(e){Object(_.u)(e,(function(e){return t._handleMutation(e)}))}))}},{key:"_handleMutation",value:function(t){var e,n;if(!Ut(t.target))if("attributes"===t.type){if(t.target!==this._curEl)return;this._render()}else if("childList"===t.type){if(t.target===this._curEl)return this._render();var r=t.addedNodes;for(e=0,n=r.length;e<n;e++)if(r[e].parentNode===this._curEl)return this._render();var i=t.removedNodes;for(e=0,n=i.length;e<n;e++)if(i[e]===this._curEl)return this.set(this._htmlEl)}}},{key:"_rmCfg",value:function(){var t=this.config,e=this._container.get("settings");e&&e.remove(t,"overrideEventTarget").remove(t,"observeElement").remove("Elements")}},{key:"_initCfg",value:function(){var t=this,e=this.config=N.createCfg("elements",{overrideEventTarget:!0,observeElement:!0});e.get("overrideEventTarget")&&this.overrideEventTarget(),e.get("observeElement")&&(this._observeElement=!1),e.on("change",(function(e,n){switch(e){case"overrideEventTarget":return n?t.overrideEventTarget():t.restoreEventTarget();case"observeElement":return t._observeElement=n,n?t._enableObserver():t._disableObserver()}}));var n=this._container.get("settings");n&&(n.text("Elements").switch(e,"overrideEventTarget","Catch Event Listeners"),this._observer&&n.switch(e,"observeElement","Auto Refresh"),n.separator())}}]),e}(y);function Kt(t){Object(_.u)(t,(function(e,n){return t[n]=Xt(e)}))}var Wt=/rgba?\((.*?)\)/g,Vt=/url\("?(.*?)"?\)/g;function Xt(t){return(t=Object(_.zb)(t)).replace(Wt,'<span class="eruda-style-color" style="background-color: $&"></span>$&').replace(Vt,(function(t,e){return'url("'.concat(ie(e),'")')}))}var Jt=function(t){return Object(_.K)(t)&&t.parentNode};function Yt(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.noAttr,r=void 0!==n&&n,i=t.id,a=t.className,o=t.attributes,s='<span class="eruda-tag-name-color">'.concat(t.tagName.toLowerCase(),"</span>");if(""!==i&&(s+='<span class="eruda-function-color">#'.concat(i,"</span>")),Object(_.X)(a)){var u="";Object(_.u)(a.split(/\s+/g),(function(t){""!==t.trim()&&(u+=".".concat(t))})),s+='<span class="eruda-attribute-name-color">'.concat(u,"</span>")}return r||Object(_.u)(o,(function(t){var e=t.name;"id"!==e&&"class"!==e&&"style"!==e&&(s+=' <span class="eruda-attribute-name-color">'.concat(e,'</span><span class="eruda-operator-color">="</span><span class="eruda-string-color">').concat(t.value,'</span><span class="eruda-operator-color">"</span>'))})),s}var Qt=function(t){return Object(_.fb)(t,(function(t){var e=t.value,n=t.name;return e=Object(_.w)(e),("src"===n||"href"===n)&&!Object(_.tb)(e,"data")&&(e=ie(e)),"style"===n&&(e=Xt(e)),{name:n,value:e}}))},Zt=["script","style","meta","title","link","head"],te=function(t){return Zt.indexOf(t.toLowerCase())>-1};function ee(t,e,n){var r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(Object(_.K)(t)&&Object(_.N)(n)&&Object(_.H)(r)){var i=t.erudaEvents=t.erudaEvents||{};i[e]=i[e]||[],i[e].push({listener:n,listenerStr:n.toString(),useCapture:r})}}function ne(t,e,n){var r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(Object(_.K)(t)&&Object(_.N)(n)&&Object(_.H)(r)){var i=t.erudaEvents;if(i&&i[e]){for(var a=i[e],o=0,s=a.length;o<s;o++)if(a[o].listener===n){a.splice(o,1);break}0===a.length&&delete i[e],0===Object(_.ab)(i).length&&delete t.erudaEvents}}}var re=function(){return Object(_.qb)(window,"EventTarget.prototype")||window.Node.prototype},ie=function(t){return'<a href="'.concat(t,'" target="_blank">').concat(t,"</a>")};function ae(t,e){if(Object(_.T)(t))return t;if(!Object(_.X)(t))return"‒";var n=Object(_.nb)(t);return Object(_.Q)(n)?t:"position"===e?n:0===n?"‒":n}var oe=null,se=[{name:"Border All",fn:function(){if(oe)return L.remove(oe),void(oe=null);oe=L("* { outline: 2px dashed #707d8b; outline-offset: -3px; }",document.head)},desc:"Add color borders to all elements"},{name:"Refresh Page",fn:function(){var t=new _.h;t.setQuery("timestamp",Object(_.jb)()),window.location.replace(t.toString())},desc:"Add timestamp to url and refresh"},{name:"Search Text",fn:function(){var t,e,n,r=prompt("Enter the text")||"";""!==Object(_.Ab)(r)&&(t=r,e=document.body,n=new RegExp(t,"ig"),ue(e,(function(t){var e=Object(_.a)(t);if(e.hasClass("eruda-search-highlight-block"))return document.createTextNode(e.text())})),ue(e,(function(t){if(3===t.nodeType){var e=t.nodeValue;if((e=e.replace(n,(function(t){return'<span class="eruda-keyword">'.concat(t,"</span>")})))!==t.nodeValue){var r=Object(_.a)(document.createElement("div"));return r.html(e),r.addClass("eruda-search-highlight-block"),r.get(0)}}})))},desc:"Highlight given text on page"},{name:"Edit Page",fn:function(){var t=document.body;t.contentEditable="true"!==t.contentEditable},desc:"Toggle body contentEditable"},{name:"Fit Screen",fn:function(){var t=document.body,e=document.documentElement,n=Object(_.a)(t);if(n.data("scaled"))window.scrollTo(0,+n.data("scaled")),n.rmAttr("data-scaled"),n.css("transform","none");else{var r=Math.max(t.scrollHeight,t.offsetHeight,e.clientHeight,e.scrollHeight,e.offsetHeight),i=Math.max(document.documentElement.clientHeight,window.innerHeight||0),a=i/r;n.css("transform","scale(".concat(a,")")),n.data("scaled",window.scrollY),window.scrollTo(0,r/2-i/2)}},desc:"Scale down the whole page to fit screen"},{name:"Load Fps Plugin",fn:function(){le("fps")},desc:"Display page fps"},{name:"Load Features Plugin",fn:function(){le("features")},desc:"Browser feature detections"},{name:"Load Timing Plugin",fn:function(){le("timing")},desc:"Show performance and resource timing"},{name:"Load Memory Plugin",fn:function(){le("memory")},desc:"Display memory"},{name:"Load Code Plugin",fn:function(){le("code")},desc:"Edit and run JavaScript"},{name:"Load Benchmark Plugin",fn:function(){le("benchmark")},desc:"Run JavaScript benchmarks"},{name:"Load Geolocation Plugin",fn:function(){le("geolocation")},desc:"Test geolocation"},{name:"Load Dom Plugin",fn:function(){le("dom")},desc:"Navigate dom tree"},{name:"Load Orientation Plugin",fn:function(){le("orientation")},desc:"Test orientation api"},{name:"Load Touches Plugin",fn:function(){le("touches")},desc:"Visualize screen touches"},{name:"Restore Settings",fn:function(){var t=Object(_.rb)("local"),e=JSON.parse(JSON.stringify(t));Object(_.u)(e,(function(e,n){Object(_.X)(e)&&Object(_.tb)(n,"eruda")&&t.removeItem(n)})),window.location.reload()},desc:"Restore defaults and reload"}];function ue(t,e){var n=t.childNodes;if(!Ut(t)){for(var r=0,i=n.length;r<i;r++){var a=ue(n[r],e);a&&t.replaceChild(a,n[r])}return e(t)}}function le(t){var e="eruda"+Object(_.Eb)(t);if(!window[e]){var n=location.protocol;Object(_.tb)(n,"http")||(n="http:"),Object(_.db)("".concat(n,"//cdn.jsdelivr.net/npm/eruda-").concat(t,"@").concat(ce[t]),(function(n){if(!n||!window[e])return H.error("Fail to load plugin "+t);m.emit(m.ADD,window[e]),m.emit(m.SHOW,t)}))}}L(n(81),document.head);var ce={fps:"2.0.0",features:"2.0.0",timing:"2.0.0",memory:"2.0.0",code:"2.0.0",benchmark:"2.0.0",geolocation:"2.0.0",dom:"2.0.0",orientation:"2.0.0",touches:"2.0.0"},pe=function(t){function e(){var t;return i()(this,e),(t=u()(this,c()(e).call(this)))._style=L(n(82)),t.name="snippets",t._snippets=[],t._tpl=n(83),t}return h()(e,t),o()(e,[{key:"init",value:function(t){b()(c()(e.prototype),"init",this).call(this,t),this._bindEvent(),this._addDefSnippets()}},{key:"destroy",value:function(){b()(c()(e.prototype),"destroy",this).call(this),L.remove(this._style)}},{key:"add",value:function(t,e,n){return this._snippets.push({name:t,fn:e,desc:n}),this._render(),this}},{key:"remove",value:function(t){for(var e=this._snippets,n=0,r=e.length;n<r;n++)e[n].name===t&&e.splice(n,1);return this._render(),this}},{key:"run",value:function(t){for(var e=this._snippets,n=0,r=e.length;n<r;n++)e[n].name===t&&this._run(n);return this}},{key:"clear",value:function(){return this._snippets=[],this._render(),this}},{key:"_bindEvent",value:function(){var t=this;this._$el.on("click",".eruda-run",(function(){var e=Object(_.a)(this).data("idx");t._run(e)}))}},{key:"_run",value:function(t){this._snippets[t].fn.call(null)}},{key:"_addDefSnippets",value:function(){var t=this;Object(_.u)(se,(function(e){t.add(e.name,e.fn,e.desc)}))}},{key:"_render",value:function(){this._renderHtml(this._tpl({snippets:this._snippets}))}},{key:"_renderHtml",value:function(t){t!==this._lastHtml&&(this._lastHtml=t,this._$el.html(t))}}]),e}(y),he=function(t){function e(){var t;return i()(this,e),(t=u()(this,c()(e).call(this)))._style=L(n(84)),t.name="resources",t._localStoreData=[],t._localStoreSearchKeyword="",t._hideErudaSetting=!1,t._sessionStoreData=[],t._sessionStoreSearchKeyword="",t._cookieData=[],t._cookieSearchKeyword="",t._scriptData=[],t._stylesheetData=[],t._iframeData=[],t._imageData=[],t._observeElement=!0,t._tpl=n(85),t}return h()(e,t),o()(e,[{key:"init",value:function(t,n){b()(c()(e.prototype),"init",this).call(this,t),this._container=n,this.refresh(),this._bindEvent(),this._initObserver(),this._initCfg()}},{key:"refresh",value:function(){return this.refreshLocalStorage().refreshSessionStorage().refreshCookie().refreshScript().refreshStylesheet().refreshIframe().refreshImage()._render()}},{key:"destroy",value:function(){b()(c()(e.prototype),"destroy",this).call(this),this._disableObserver(),L.remove(this._style),this._rmCfg()}},{key:"refreshScript",value:function(){var t=[];return Object(_.a)("script").each((function(){var e=this.src;""!==e&&t.push(e)})),t=Object(_.Db)(t),this._scriptData=t,this}},{key:"refreshStylesheet",value:function(){var t=[];return Object(_.a)("link").each((function(){"stylesheet"===this.rel&&t.push(this.href)})),t=Object(_.Db)(t),this._stylesheetData=t,this}},{key:"refreshIframe",value:function(){var t=[];return Object(_.a)("iframe").each((function(){var e=Object(_.a)(this).attr("src");e&&t.push(e)})),t=Object(_.Db)(t),this._iframeData=t,this}},{key:"refreshLocalStorage",value:function(){return this._refreshStorage("local"),this}},{key:"refreshSessionStorage",value:function(){return this._refreshStorage("session"),this}},{key:"_refreshStorage",value:function(t){var e=this,n=Object(_.rb)(t,!1);if(n){var r=[];n=JSON.parse(JSON.stringify(n)),Object(_.u)(n,(function(t,n){Object(_.X)(t)&&(e._hideErudaSetting&&(Object(_.tb)(n,"eruda")||"active-eruda"===n)||r.push({key:n,val:_e(t,200)}))})),this["_"+t+"StoreData"]=r}}},{key:"refreshCookie",value:function(){var t=[],e=document.cookie;return""!==Object(_.Ab)(e)&&Object(_.u)(document.cookie.split(";"),(function(e){e=e.split("=");var n=Object(_.Ab)(e.shift());e=Object(_.p)(e.join("=")),t.push({key:n,val:e})})),this._cookieData=t,this}},{key:"refreshImage",value:function(){var t=[],e=this._performance=window.webkitPerformance||window.performance;return e&&e.getEntries?this._performance.getEntries().forEach((function(e){("img"===e.initiatorType||me(e.name))&&t.push(e.name)})):Object(_.a)("img").each((function(){var e=Object(_.a)(this),n=e.attr("src");"true"!==e.data("exclude")&&t.push(n)})),(t=Object(_.Db)(t)).sort(),this._imageData=t,this}},{key:"show",value:function(){return b()(c()(e.prototype),"show",this).call(this),this._observeElement&&this._enableObserver(),this.refresh()}},{key:"hide",value:function(){return this._disableObserver(),b()(c()(e.prototype),"hide",this).call(this)}},{key:"_bindEvent",value:function(){var t=this,e=this,n=this._$el,r=this._container;function i(t,e){var n=r.get("sources");if(n)return n.set(t,e),r.showTool("sources"),!0}function a(t){return function(e){if(r.get("sources")){e.preventDefault();var n=Object(_.a)(this).attr("href");"iframe"===t||Object(_.I)(n)?i("iframe",n):Object(_.i)({url:n,success:function(e){i(t,e)},dataType:"raw"})}}}n.on("click",".eruda-refresh-local-storage",(function(){return t.refreshLocalStorage()._render()})).on("click",".eruda-refresh-session-storage",(function(){return t.refreshSessionStorage()._render()})).on("click",".eruda-refresh-cookie",(function(){return t.refreshCookie()._render()})).on("click",".eruda-refresh-script",(function(){return t.refreshScript()._render()})).on("click",".eruda-refresh-stylesheet",(function(){return t.refreshStylesheet()._render()})).on("click",".eruda-refresh-iframe",(function(){return t.refreshIframe()._render()})).on("click",".eruda-refresh-image",(function(){return t.refreshImage()._render()})).on("click",".eruda-search",(function(){var t=Object(_.a)(this).data("type"),n=prompt("Filter");if(!Object(_.S)(n)){switch(n=Object(_.Ab)(n),t){case"local":e._localStoreSearchKeyword=n;break;case"session":e._sessionStoreSearchKeyword=n;break;case"cookie":e._cookieSearchKeyword=n}e._render()}})).on("click",".eruda-delete-storage",(function(){var t=Object(_.a)(this),n=t.data("key");"local"===t.data("type")?(localStorage.removeItem(n),e.refreshLocalStorage()._render()):(sessionStorage.removeItem(n),e.refreshSessionStorage()._render())})).on("click",".eruda-delete-cookie",(function(){var t=Object(_.a)(this).data("key");Object(_.pb)(t),e.refreshCookie()._render()})).on("click",".eruda-clear-storage",(function(){"local"===Object(_.a)(this).data("type")?(Object(_.u)(e._localStoreData,(function(t){return localStorage.removeItem(t.key)})),e.refreshLocalStorage()._render()):(Object(_.u)(e._sessionStoreData,(function(t){return sessionStorage.removeItem(t.key)})),e.refreshSessionStorage()._render())})).on("click",".eruda-clear-cookie",(function(){Object(_.u)(t._cookieData,(function(t){return Object(_.pb)(t.key)})),t.refreshCookie()._render()})).on("click",".eruda-storage-val",(function(){var t=Object(_.a)(this),e=t.data("key"),n="local"===t.data("type")?localStorage.getItem(e):sessionStorage.getItem(e);try{i("object",JSON.parse(n))}catch(t){i("raw",n)}})).on("click",".eruda-img-link",(function(){i("img",Object(_.a)(this).attr("src"))})).on("click",".eruda-css-link",a("css")).on("click",".eruda-js-link",a("js")).on("click",".eruda-iframe-link",a("iframe")),_.kb.on("change",(function(){return t._render()}))}},{key:"_rmCfg",value:function(){var t=this.config,e=this._container.get("settings");e&&e.remove(t,"hideErudaSetting").remove(t,"observeElement").remove("Resources")}},{key:"_initCfg",value:function(){var t=this,e=this.config=N.createCfg("resources",{hideErudaSetting:!0,observeElement:!0});e.get("hideErudaSetting")&&(this._hideErudaSetting=!0),e.get("observeElement")||(this._observeElement=!1),e.on("change",(function(e,n){switch(e){case"hideErudaSetting":return void(t._hideErudaSetting=n);case"observeElement":return t._observeElement=n,n?t._enableObserver():t._disableObserver()}})),this._container.get("settings").text("Resources").switch(e,"hideErudaSetting","Hide Eruda Setting").switch(e,"observeElement","Auto Refresh Elements").separator()}},{key:"_render",value:function(){var t=this._cookieData,e=this._scriptData,n=this._stylesheetData,r=this._imageData,i=this._localStoreSearchKeyword,a=this._sessionStoreSearchKeyword,o=this._cookieSearchKeyword;function s(t,e){return(e=Object(_.eb)(e))?Object(_.B)(t,(function(t){var n=t.key,r=t.val;return Object(_.m)(Object(_.eb)(n),e)||Object(_.m)(Object(_.eb)(r),e)})):t}this._renderHtml(this._tpl({localStoreData:s(this._localStoreData,i),localStoreSearchKeyword:i,sessionStoreData:s(this._sessionStoreData,a),sessionStoreSearchKeyword:a,cookieData:s(t,o),cookieSearchKeyword:o,cookieState:fe("cookie",t.length),scriptData:e,scriptState:fe("script",e.length),stylesheetData:n,stylesheetState:fe("stylesheet",n.length),iframeData:this._iframeData,imageData:r,imageState:fe("image",r.length)}))}},{key:"_renderHtml",value:function(t){t!==this._lastHtml&&(this._lastHtml=t,this._$el.html(t))}},{key:"_initObserver",value:function(){var t=this;this._observer=new _.f((function(e){var n=!1;Object(_.u)(e,(function(e){t._handleMutation(e)&&(n=!0)})),n&&t._render()}))}},{key:"_handleMutation",value:function(t){var e=this;if(!Ut(t.target)){var n=function(t){switch(function(t){return t.tagName?t.tagName.toLowerCase():""}(t)){case"script":return e.refreshScript(),!0;case"img":return e.refreshImage(),!0;case"link":return e.refreshStylesheet(),!0}return!1};if("attributes"===t.type){if(n(t.target))return!0}else if("childList"===t.type){if(n(t.target))return!0;var r=Object(_.wb)(t.addedNodes);r=Object(_.l)(r,Object(_.wb)(t.removedNodes));var i=!0,a=!1,o=void 0;try{for(var s,u=r[Symbol.iterator]();!(i=(s=u.next()).done);i=!0)if(n(s.value))return!0}catch(t){a=!0,o=t}finally{try{i||null==u.return||u.return()}finally{if(a)throw o}}}return!1}}},{key:"_enableObserver",value:function(){this._observer.observe(document.documentElement,{attributes:!0,childList:!0,subtree:!0})}},{key:"_disableObserver",value:function(){this._observer.disconnect()}}]),e}(y);function fe(t,e){if(0===e)return"";var n=0,r=0;switch(t){case"cookie":n=30,r=60;break;case"script":n=5,r=10;break;case"stylesheet":n=4,r=8;break;case"image":n=50,r=100}return e>=r?"danger":e>=n?"warn":"ok"}var de,_e=function(t,e){return t.length<e?t:t.slice(0,e)+"..."},ve=/\.(jpeg|jpg|gif|png)$/,me=function(t){return ve.test(t)},ge=Object(_.s)(),be=[{name:"Location",val:function(){return Object(_.w)(location.href)}},{name:"User Agent",val:navigator.userAgent},{name:"Device",val:["<table><tbody>",'<tr><td class="eruda-device-key">screen</td><td>'.concat(screen.width," * ").concat(screen.height,"</td></tr>"),"<tr><td>viewport</td><td>".concat(window.innerWidth," * ").concat(window.innerHeight,"</td></tr>"),"<tr><td>pixel ratio</td><td>".concat(window.devicePixelRatio,"</td></tr>"),"</tbody></table>"].join("")},{name:"System",val:["<table><tbody>",'<tr><td class="eruda-system-key">os</td><td>'.concat(Object(_.t)(),"</td></tr>"),"<tr><td>browser</td><td>".concat(ge.name+" "+ge.version,"</td></tr>"),"</tbody></table>"].join("")},{name:"About",val:'<a href="https://github.com/liriliri/eruda" target="_blank">Eruda v2.2.1</a>'}],ye=function(t){function e(){var t;return i()(this,e),(t=u()(this,c()(e).call(this)))._style=L(n(86)),t.name="info",t._tpl=n(87),t._infos=[],t}return h()(e,t),o()(e,[{key:"init",value:function(t){b()(c()(e.prototype),"init",this).call(this,t),this._addDefInfo()}},{key:"destroy",value:function(){b()(c()(e.prototype),"destroy",this).call(this),L.remove(this._style)}},{key:"add",value:function(t,e){var n=this._infos,r=!1;return Object(_.u)(n,(function(n){t===n.name&&(n.val=e,r=!0)})),r||n.push({name:t,val:e}),this._render(),this}},{key:"get",value:function(t){var e,n=this._infos;return Object(_.Y)(t)?Object(_.k)(n):(Object(_.u)(n,(function(n){t===n.name&&(e=n.val)})),e)}},{key:"remove",value:function(t){for(var e=this._infos,n=e.length-1;n>=0;n--)e[n].name===t&&e.splice(n,1);return this._render(),this}},{key:"clear",value:function(){return this._infos=[],this._render(),this}},{key:"_addDefInfo",value:function(){var t=this;Object(_.u)(be,(function(e){return t.add(e.name,e.val)}))}},{key:"_render",value:function(){var t=[];Object(_.u)(this._infos,(function(e){var n=e.name,r=e.val;Object(_.N)(r)&&(r=r()),t.push({name:n,val:r})})),this._renderHtml(this._tpl({infos:t}))}},{key:"_renderHtml",value:function(t){t!==this._lastHtml&&(this._lastHtml=t,this._$el.html(t))}}]),e}(y),we=function(t){function e(){var t;return i()(this,e),(t=u()(this,c()(e).call(this)))._style=L(n(88)),t.name="sources",t._showLineNum=!0,t._formatCode=!0,t._indentSize=4,t._loadTpl(),t}return h()(e,t),o()(e,[{key:"init",value:function(t,n){b()(c()(e.prototype),"init",this).call(this,t),this._container=n,this._bindEvent(),this._initCfg()}},{key:"destroy",value:function(){b()(c()(e.prototype),"destroy",this).call(this),L.remove(this._style),this._rmCfg()}},{key:"set",value:function(t,e){if("img"===t){this._isFetchingData=!0;var n=new Image,r=this;return n.onload=function(){r._isFetchingData=!1,r._data={type:"img",val:{width:this.width,height:this.height,src:e}},r._render()},n.onerror=function(){r._isFetchingData=!1},void(n.src=e)}return this._data={type:t,val:e},this._render(),this}},{key:"show",value:function(){return b()(c()(e.prototype),"show",this).call(this),this._data||this._isFetchingData||this._renderDef(),this}},{key:"_renderDef",value:function(){var t=this;if(this._html)return this._data={type:"html",val:this._html},this._render();this._isGettingHtml||(this._isGettingHtml=!0,Object(_.i)({url:location.href,success:function(e){return t._html=e},error:function(){return t._html="Sorry, unable to fetch source code:("},complete:function(){t._isGettingHtml=!1,t._renderDef()},dataType:"raw"}))}},{key:"_bindEvent",value:function(){var t=this;this._container.on("showTool",(function(e,n){e!==t.name&&n.name===t.name&&delete t._data}))}},{key:"_loadTpl",value:function(){this._codeTpl=n(89),this._imgTpl=n(90),this._objTpl=n(91),this._rawTpl=n(92),this._iframeTpl=n(93)}},{key:"_rmCfg",value:function(){var t=this.config,e=this._container.get("settings");e&&e.remove(t,"showLineNum").remove(t,"formatCode").remove(t,"indentSize").remove("Sources")}},{key:"_initCfg",value:function(){var t=this,e=this.config=N.createCfg("sources",{showLineNum:!0,formatCode:!0,indentSize:4});e.get("showLineNum")||(this._showLineNum=!1),e.get("formatCode")||(this._formatCode=!1),this._indentSize=e.get("indentSize"),e.on("change",(function(e,n){switch(e){case"showLineNum":return void(t._showLineNum=n);case"formatCode":return void(t._formatCode=n);case"indentSize":return void(t._indentSize=+n)}})),this._container.get("settings").text("Sources").switch(e,"showLineNum","Show Line Numbers").switch(e,"formatCode","Beautify Code").select(e,"indentSize","Indent Size",["2","4"]).separator()}},{key:"_render",value:function(){switch(this._isInit=!0,this._data.type){case"html":case"js":case"css":return this._renderCode();case"img":return this._renderImg();case"object":return this._renderObj();case"raw":return this._renderRaw();case"iframe":return this._renderIframe()}}},{key:"_renderImg",value:function(){this._renderHtml(this._imgTpl(this._data.val))}},{key:"_renderCode",value:function(){var t=this._data,e=this._indentSize,n=t.val,r=t.val.length;if(r<xe&&this._formatCode){switch(t.type){case"html":n=Z.a.html(n,{unformatted:[],indent_size:e});break;case"css":n=Z.a.css(n,{indent_size:e});break;case"js":n=Z()(n,{indent_size:e})}var i=L.getCurTheme();n=Object(_.F)(n,t.type,{keyword:"color:".concat(i.keywordColor),number:"color:".concat(i.numberColor),operator:"color:".concat(i.operatorColor),comment:"color:".concat(i.commentColor),string:"color:".concat(i.stringColor)})}else n=Object(_.w)(n);r<ke&&this._showLineNum&&(n=n.split("\n").map((function(t,e){return""===Object(_.Ab)(t)&&(t="&nbsp;"),{idx:e+1,val:t}}))),this._renderHtml(this._codeTpl({code:n,showLineNum:r<ke&&this._showLineNum}))}},{key:"_renderObj",value:function(){this._renderHtml(this._objTpl(),!1);var t=this._data.val;try{Object(_.X)(t)&&(t=JSON.parse(t))}catch(t){}new et.a(this._$el.find(".eruda-json").get(0),{unenumerable:!0,accessGetter:!0}).set(t)}},{key:"_renderRaw",value:function(){this._renderHtml(this._rawTpl({val:this._data.val}))}},{key:"_renderIframe",value:function(){this._renderHtml(this._iframeTpl({src:this._data.val}))}},{key:"_renderHtml",value:function(t){var e=this,n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];n&&t===this._lastHtml||(this._lastHtml=t,this._$el.html(t),setTimeout((function(){return e._$el.get(0).scrollTop=0}),0))}}]),e}(y),xe=1e5,ke=4e5;e.default={init:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=t.container,n=t.tool,r=t.autoScale,i=void 0===r||r,a=t.useShadowDom,o=void 0===a||a;this._isInit||(this._isInit=!0,this._scale=1,this._initContainer(e,o),this._initStyle(),this._initDevTools(),this._initEntryBtn(),this._initSettings(),this._initTools(n),this._registerListener(),i&&this._autoScale())},_isInit:!1,version:"2.2.1",util:_.q,Tool:y,Console:kt,Elements:Gt,Network:Mt,Sources:we,Resources:he,Info:ye,Snippets:pe,Settings:N,get:function(t){if(this._checkInit()){if("entryBtn"===t)return this._entryBtn;var e=this._devTools;return t?e.get(t):e}},add:function(t){if(this._checkInit())return Object(_.N)(t)&&(t=t(this)),this._devTools.add(t),this},remove:function(t){return this._devTools.remove(t),this},show:function(t){if(this._checkInit()){var e=this._devTools;return t?e.showTool(t):e.show(),this}},hide:function(){if(this._checkInit())return this._devTools.hide(),this},destroy:function(){this._devTools.destroy(),delete this._devTools,this._entryBtn.destroy(),delete this._entryBtn,this._unregisterListener(),this._$el.remove(),L.clear(),this._isInit=!1},scale:function(t){return Object(_.T)(t)?(this._scale=t,m.emit(m.SCALE,t),this):this._scale},position:function(t){var e=this._entryBtn;return Object(_.U)(t)?(e.setPos(t),this):e.getPos()},_autoScale:function(){Object(_.P)()&&this.scale(1/Object(_.Fb)())},_registerListener:function(){var t=this;this._addListener=function(){return t.add.apply(t,arguments)},this._showListener=function(){return t.show.apply(t,arguments)},m.on(m.ADD,this._addListener),m.on(m.SHOW,this._showListener),m.on(m.SCALE,L.setScale)},_unregisterListener:function(){m.off(m.ADD,this._addListener),m.off(m.SHOW,this._showListener),m.off(m.SCALE,L.setScale)},_checkInit:function(){return this._isInit||H.error('Please call "eruda.init()" first'),this._isInit},_initContainer:function(t,e){var r;t||(t=document.createElement("div"),document.documentElement.appendChild(t),t.style.all="initial"),e&&(t.attachShadow?r=t.attachShadow({mode:"open"}):t.createShadowRoot&&(r=t.createShadowRoot()),r&&(L.container=document.head,L(n(26)),t=document.createElement("div"),r.appendChild(t),this._shadowRoot=r)),Object.assign(t,{id:"eruda",className:"eruda-container",contentEditable:!1}),"ios"===Object(_.s)().name&&t.setAttribute("ontouchstart",""),this._$el=Object(_.a)(t)},_initDevTools:function(){this._devTools=new B(this._$el)},_initStyle:function(){var t=this._$el;this._shadowRoot?(L.container=this._shadowRoot,L(":host { all: initial }")):(t.append('<div class="'.concat("eruda-style-container",'"></div>')),L.container=t.find(".".concat("eruda-style-container")).get(0)),L(n(94)+n(95)+n(96)+n(26))},_initEntryBtn:function(){var t=this;this._entryBtn=new I(this._$el),this._entryBtn.on("click",(function(){return t._devTools.toggle()}))},_initSettings:function(){var t=this._devTools,e=new N;t.add(e),this._entryBtn.initCfg(e),t.initCfg(e)},_initTools:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:["console","elements","network","resources","sources","info","snippets"];e=Object(_.wb)(e);var n=this._devTools;e.forEach((function(e){var r=t[Object(_.Eb)(e)];try{r&&n.add(new r)}catch(t){Object(_.hb)((function(){H.error("Something wrong when initializing tool ".concat(e,":"),t.message)}))}})),n.showTool(e[0]||"settings")}},de=_.q,Object.assign(de,{beautify:Z.a,evalCss:L,isErudaEl:Ut})}])}]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdnVlL2Rpc3QvdnVlLmVzbS5qcyIsIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy92dWV4L2Rpc3QvdnVleC5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Z1ZS1yb3V0ZXIvZGlzdC92dWUtcm91dGVyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tb2NranMvZGlzdC9tb2NrLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9jZXNzL2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3RpbWVycy1icm93c2VyaWZ5L21haW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NldGltbWVkaWF0ZS9zZXRJbW1lZGlhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2VydWRhL2VydWRhLmpzIl0sIm5hbWVzIjpbImVtcHR5T2JqZWN0IiwiT2JqZWN0IiwiZnJlZXplIiwiaXNVbmRlZiIsInYiLCJpc0RlZiIsImlzVHJ1ZSIsImlzUHJpbWl0aXZlIiwidmFsdWUiLCJpc09iamVjdCIsIm9iaiIsIl90b1N0cmluZyIsInByb3RvdHlwZSIsInRvU3RyaW5nIiwiaXNQbGFpbk9iamVjdCIsImNhbGwiLCJpc1JlZ0V4cCIsImlzVmFsaWRBcnJheUluZGV4IiwidmFsIiwibiIsInBhcnNlRmxvYXQiLCJTdHJpbmciLCJNYXRoIiwiZmxvb3IiLCJpc0Zpbml0ZSIsImlzUHJvbWlzZSIsInRoZW4iLCJjYXRjaCIsIkFycmF5IiwiaXNBcnJheSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ0b051bWJlciIsImlzTmFOIiwibWFrZU1hcCIsInN0ciIsImV4cGVjdHNMb3dlckNhc2UiLCJtYXAiLCJjcmVhdGUiLCJsaXN0Iiwic3BsaXQiLCJpIiwibGVuZ3RoIiwidG9Mb3dlckNhc2UiLCJpc0J1aWx0SW5UYWciLCJpc1Jlc2VydmVkQXR0cmlidXRlIiwicmVtb3ZlIiwiYXJyIiwiaXRlbSIsImluZGV4IiwiaW5kZXhPZiIsInNwbGljZSIsImhhc093blByb3BlcnR5IiwiaGFzT3duIiwia2V5IiwiY2FjaGVkIiwiZm4iLCJjYWNoZSIsImNhbWVsaXplUkUiLCJjYW1lbGl6ZSIsInJlcGxhY2UiLCJfIiwiYyIsInRvVXBwZXJDYXNlIiwiY2FwaXRhbGl6ZSIsImNoYXJBdCIsInNsaWNlIiwiaHlwaGVuYXRlUkUiLCJoeXBoZW5hdGUiLCJiaW5kIiwiRnVuY3Rpb24iLCJjdHgiLCJib3VuZEZuIiwiYSIsImwiLCJhcmd1bWVudHMiLCJhcHBseSIsIl9sZW5ndGgiLCJ0b0FycmF5Iiwic3RhcnQiLCJyZXQiLCJleHRlbmQiLCJ0byIsIl9mcm9tIiwidG9PYmplY3QiLCJyZXMiLCJub29wIiwiYiIsIm5vIiwiaWRlbnRpdHkiLCJsb29zZUVxdWFsIiwiaXNPYmplY3RBIiwiaXNPYmplY3RCIiwiaXNBcnJheUEiLCJpc0FycmF5QiIsImV2ZXJ5IiwiZSIsIkRhdGUiLCJnZXRUaW1lIiwia2V5c0EiLCJrZXlzIiwia2V5c0IiLCJsb29zZUluZGV4T2YiLCJvbmNlIiwiY2FsbGVkIiwidGhpcyIsIkFTU0VUX1RZUEVTIiwiTElGRUNZQ0xFX0hPT0tTIiwiY29uZmlnIiwib3B0aW9uTWVyZ2VTdHJhdGVnaWVzIiwic2lsZW50IiwicHJvZHVjdGlvblRpcCIsImRldnRvb2xzIiwicGVyZm9ybWFuY2UiLCJlcnJvckhhbmRsZXIiLCJ3YXJuSGFuZGxlciIsImlnbm9yZWRFbGVtZW50cyIsImtleUNvZGVzIiwiaXNSZXNlcnZlZFRhZyIsImlzUmVzZXJ2ZWRBdHRyIiwiaXNVbmtub3duRWxlbWVudCIsImdldFRhZ05hbWVzcGFjZSIsInBhcnNlUGxhdGZvcm1UYWdOYW1lIiwibXVzdFVzZVByb3AiLCJhc3luYyIsIl9saWZlY3ljbGVIb29rcyIsInVuaWNvZGVSZWdFeHAiLCJpc1Jlc2VydmVkIiwiY2hhckNvZGVBdCIsImRlZiIsImVudW1lcmFibGUiLCJkZWZpbmVQcm9wZXJ0eSIsIndyaXRhYmxlIiwiY29uZmlndXJhYmxlIiwiYmFpbFJFIiwiUmVnRXhwIiwiX2lzU2VydmVyIiwiaGFzUHJvdG8iLCJpbkJyb3dzZXIiLCJ3aW5kb3ciLCJpbldlZXgiLCJXWEVudmlyb25tZW50IiwicGxhdGZvcm0iLCJ3ZWV4UGxhdGZvcm0iLCJVQSIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsImlzSUUiLCJ0ZXN0IiwiaXNJRTkiLCJpc0VkZ2UiLCJpc0lPUyIsImlzRkYiLCJtYXRjaCIsIm5hdGl2ZVdhdGNoIiwid2F0Y2giLCJzdXBwb3J0c1Bhc3NpdmUiLCJvcHRzIiwiZ2V0IiwiYWRkRXZlbnRMaXN0ZW5lciIsImlzU2VydmVyUmVuZGVyaW5nIiwidW5kZWZpbmVkIiwiZ2xvYmFsIiwiZW52IiwiVlVFX0VOViIsIl9fVlVFX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJpc05hdGl2ZSIsIkN0b3IiLCJfU2V0IiwiaGFzU3ltYm9sIiwiU3ltYm9sIiwiUmVmbGVjdCIsIm93bktleXMiLCJTZXQiLCJzZXQiLCJoYXMiLCJhZGQiLCJjbGVhciIsIndhcm4iLCJ1aWQiLCJEZXAiLCJpZCIsInN1YnMiLCJhZGRTdWIiLCJzdWIiLCJwdXNoIiwicmVtb3ZlU3ViIiwiZGVwZW5kIiwidGFyZ2V0IiwiYWRkRGVwIiwibm90aWZ5IiwidXBkYXRlIiwidGFyZ2V0U3RhY2siLCJwdXNoVGFyZ2V0IiwicG9wVGFyZ2V0IiwicG9wIiwiVk5vZGUiLCJ0YWciLCJkYXRhIiwiY2hpbGRyZW4iLCJ0ZXh0IiwiZWxtIiwiY29udGV4dCIsImNvbXBvbmVudE9wdGlvbnMiLCJhc3luY0ZhY3RvcnkiLCJucyIsImZuQ29udGV4dCIsImZuT3B0aW9ucyIsImZuU2NvcGVJZCIsImNvbXBvbmVudEluc3RhbmNlIiwicGFyZW50IiwicmF3IiwiaXNTdGF0aWMiLCJpc1Jvb3RJbnNlcnQiLCJpc0NvbW1lbnQiLCJpc0Nsb25lZCIsImlzT25jZSIsImFzeW5jTWV0YSIsImlzQXN5bmNQbGFjZWhvbGRlciIsInByb3RvdHlwZUFjY2Vzc29ycyIsImNoaWxkIiwiZGVmaW5lUHJvcGVydGllcyIsImNyZWF0ZUVtcHR5Vk5vZGUiLCJub2RlIiwiY3JlYXRlVGV4dFZOb2RlIiwiY2xvbmVWTm9kZSIsInZub2RlIiwiY2xvbmVkIiwiYXJyYXlQcm90byIsImFycmF5TWV0aG9kcyIsImZvckVhY2giLCJtZXRob2QiLCJvcmlnaW5hbCIsImFyZ3MiLCJsZW4iLCJpbnNlcnRlZCIsInJlc3VsdCIsIm9iIiwiX19vYl9fIiwib2JzZXJ2ZUFycmF5IiwiZGVwIiwiYXJyYXlLZXlzIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsInNob3VsZE9ic2VydmUiLCJ0b2dnbGVPYnNlcnZpbmciLCJPYnNlcnZlciIsInZtQ291bnQiLCJzcmMiLCJfX3Byb3RvX18iLCJwcm90b0F1Z21lbnQiLCJjb3B5QXVnbWVudCIsIndhbGsiLCJvYnNlcnZlIiwiYXNSb290RGF0YSIsImlzRXh0ZW5zaWJsZSIsIl9pc1Z1ZSIsImRlZmluZVJlYWN0aXZlJCQxIiwiY3VzdG9tU2V0dGVyIiwic2hhbGxvdyIsInByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZ2V0dGVyIiwic2V0dGVyIiwiY2hpbGRPYiIsImRlcGVuZEFycmF5IiwibmV3VmFsIiwibWF4IiwiZGVsIiwiaXRlbXMiLCJzdHJhdHMiLCJtZXJnZURhdGEiLCJmcm9tIiwidG9WYWwiLCJmcm9tVmFsIiwibWVyZ2VEYXRhT3JGbiIsInBhcmVudFZhbCIsImNoaWxkVmFsIiwidm0iLCJpbnN0YW5jZURhdGEiLCJkZWZhdWx0RGF0YSIsIm1lcmdlSG9vayIsImNvbmNhdCIsImhvb2tzIiwiZGVkdXBlSG9va3MiLCJtZXJnZUFzc2V0cyIsImhvb2siLCJ0eXBlIiwia2V5JDEiLCJwcm9wcyIsIm1ldGhvZHMiLCJpbmplY3QiLCJjb21wdXRlZCIsInByb3ZpZGUiLCJkZWZhdWx0U3RyYXQiLCJtZXJnZU9wdGlvbnMiLCJvcHRpb25zIiwibm9ybWFsaXplUHJvcHMiLCJub3JtYWxpemVkIiwibm9ybWFsaXplSW5qZWN0IiwiZGlycyIsImRpcmVjdGl2ZXMiLCJkZWYkJDEiLCJub3JtYWxpemVEaXJlY3RpdmVzIiwiX2Jhc2UiLCJleHRlbmRzIiwibWl4aW5zIiwibWVyZ2VGaWVsZCIsInN0cmF0IiwicmVzb2x2ZUFzc2V0Iiwid2Fybk1pc3NpbmciLCJhc3NldHMiLCJjYW1lbGl6ZWRJZCIsIlBhc2NhbENhc2VJZCIsInZhbGlkYXRlUHJvcCIsInByb3BPcHRpb25zIiwicHJvcHNEYXRhIiwicHJvcCIsImFic2VudCIsImJvb2xlYW5JbmRleCIsImdldFR5cGVJbmRleCIsIkJvb2xlYW4iLCJzdHJpbmdJbmRleCIsImRlZmF1bHQiLCIkb3B0aW9ucyIsIl9wcm9wcyIsImdldFR5cGUiLCJnZXRQcm9wRGVmYXVsdFZhbHVlIiwicHJldlNob3VsZE9ic2VydmUiLCJpc1NhbWVUeXBlIiwiZXhwZWN0ZWRUeXBlcyIsImhhbmRsZUVycm9yIiwiZXJyIiwiaW5mbyIsImN1ciIsIiRwYXJlbnQiLCJlcnJvckNhcHR1cmVkIiwiZ2xvYmFsSGFuZGxlRXJyb3IiLCJpbnZva2VXaXRoRXJyb3JIYW5kbGluZyIsImhhbmRsZXIiLCJfaGFuZGxlZCIsImxvZ0Vycm9yIiwiY29uc29sZSIsImVycm9yIiwidGltZXJGdW5jIiwiaXNVc2luZ01pY3JvVGFzayIsImNhbGxiYWNrcyIsInBlbmRpbmciLCJmbHVzaENhbGxiYWNrcyIsImNvcGllcyIsIlByb21pc2UiLCJwIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJNdXRhdGlvbk9ic2VydmVyIiwic2V0SW1tZWRpYXRlIiwiY291bnRlciIsIm9ic2VydmVyIiwidGV4dE5vZGUiLCJkb2N1bWVudCIsImNyZWF0ZVRleHROb2RlIiwiY2hhcmFjdGVyRGF0YSIsIm5leHRUaWNrIiwiY2IiLCJfcmVzb2x2ZSIsInNlZW5PYmplY3RzIiwidHJhdmVyc2UiLCJfdHJhdmVyc2UiLCJzZWVuIiwiaXNBIiwiaXNGcm96ZW4iLCJkZXBJZCIsIm5vcm1hbGl6ZUV2ZW50IiwibmFtZSIsInBhc3NpdmUiLCJvbmNlJCQxIiwiY2FwdHVyZSIsImNyZWF0ZUZuSW52b2tlciIsImZucyIsImludm9rZXIiLCJhcmd1bWVudHMkMSIsInVwZGF0ZUxpc3RlbmVycyIsIm9uIiwib2xkT24iLCJyZW1vdmUkJDEiLCJjcmVhdGVPbmNlSGFuZGxlciIsIm9sZCIsImV2ZW50IiwicGFyYW1zIiwibWVyZ2VWTm9kZUhvb2siLCJob29rS2V5Iiwib2xkSG9vayIsIndyYXBwZWRIb29rIiwibWVyZ2VkIiwiY2hlY2tQcm9wIiwiaGFzaCIsImFsdEtleSIsInByZXNlcnZlIiwibm9ybWFsaXplQ2hpbGRyZW4iLCJub3JtYWxpemVBcnJheUNoaWxkcmVuIiwibmVzdGVkSW5kZXgiLCJsYXN0SW5kZXgiLCJsYXN0IiwiaXNUZXh0Tm9kZSIsInNoaWZ0IiwiX2lzVkxpc3QiLCJyZXNvbHZlSW5qZWN0IiwicHJvdmlkZUtleSIsInNvdXJjZSIsIl9wcm92aWRlZCIsInByb3ZpZGVEZWZhdWx0IiwicmVzb2x2ZVNsb3RzIiwic2xvdHMiLCJhdHRycyIsInNsb3QiLCJuYW1lJDEiLCJpc1doaXRlc3BhY2UiLCJub3JtYWxpemVTY29wZWRTbG90cyIsIm5vcm1hbFNsb3RzIiwicHJldlNsb3RzIiwiaGFzTm9ybWFsU2xvdHMiLCJpc1N0YWJsZSIsIiRzdGFibGUiLCIka2V5IiwiX25vcm1hbGl6ZWQiLCIkaGFzTm9ybWFsIiwibm9ybWFsaXplU2NvcGVkU2xvdCIsImtleSQyIiwicHJveHlOb3JtYWxTbG90IiwicHJveHkiLCJyZW5kZXJMaXN0IiwicmVuZGVyIiwiaXRlcmF0b3IiLCJuZXh0IiwiZG9uZSIsInJlbmRlclNsb3QiLCJmYWxsYmFjayIsImJpbmRPYmplY3QiLCJub2RlcyIsInNjb3BlZFNsb3RGbiIsIiRzY29wZWRTbG90cyIsIiRzbG90cyIsIiRjcmVhdGVFbGVtZW50IiwicmVzb2x2ZUZpbHRlciIsImlzS2V5Tm90TWF0Y2giLCJleHBlY3QiLCJhY3R1YWwiLCJjaGVja0tleUNvZGVzIiwiZXZlbnRLZXlDb2RlIiwiYnVpbHRJbktleUNvZGUiLCJldmVudEtleU5hbWUiLCJidWlsdEluS2V5TmFtZSIsIm1hcHBlZEtleUNvZGUiLCJiaW5kT2JqZWN0UHJvcHMiLCJhc1Byb3AiLCJpc1N5bmMiLCJsb29wIiwiZG9tUHJvcHMiLCJjYW1lbGl6ZWRLZXkiLCJoeXBoZW5hdGVkS2V5IiwiJGV2ZW50IiwicmVuZGVyU3RhdGljIiwiaXNJbkZvciIsIl9zdGF0aWNUcmVlcyIsInRyZWUiLCJtYXJrU3RhdGljIiwic3RhdGljUmVuZGVyRm5zIiwiX3JlbmRlclByb3h5IiwibWFya09uY2UiLCJtYXJrU3RhdGljTm9kZSIsImJpbmRPYmplY3RMaXN0ZW5lcnMiLCJleGlzdGluZyIsIm91cnMiLCJyZXNvbHZlU2NvcGVkU2xvdHMiLCJoYXNEeW5hbWljS2V5cyIsImNvbnRlbnRIYXNoS2V5IiwiYmluZER5bmFtaWNLZXlzIiwiYmFzZU9iaiIsInZhbHVlcyIsInByZXBlbmRNb2RpZmllciIsInN5bWJvbCIsImluc3RhbGxSZW5kZXJIZWxwZXJzIiwiX28iLCJfbiIsIl9zIiwiX2wiLCJfdCIsIl9xIiwiX2kiLCJfbSIsIl9mIiwiX2siLCJfYiIsIl92IiwiX2UiLCJfdSIsIl9nIiwiX2QiLCJfcCIsIkZ1bmN0aW9uYWxSZW5kZXJDb250ZXh0IiwiY29udGV4dFZtIiwidGhpcyQxIiwiX29yaWdpbmFsIiwiaXNDb21waWxlZCIsIl9jb21waWxlZCIsIm5lZWROb3JtYWxpemF0aW9uIiwibGlzdGVuZXJzIiwiaW5qZWN0aW9ucyIsInNjb3BlZFNsb3RzIiwiX3Njb3BlSWQiLCJfYyIsImQiLCJjcmVhdGVFbGVtZW50IiwiY2xvbmVBbmRNYXJrRnVuY3Rpb25hbFJlc3VsdCIsInJlbmRlckNvbnRleHQiLCJjbG9uZSIsIm1lcmdlUHJvcHMiLCJjb21wb25lbnRWTm9kZUhvb2tzIiwiaW5pdCIsImh5ZHJhdGluZyIsIl9pc0Rlc3Ryb3llZCIsImtlZXBBbGl2ZSIsIm1vdW50ZWROb2RlIiwicHJlcGF0Y2giLCJfaXNDb21wb25lbnQiLCJfcGFyZW50Vm5vZGUiLCJpbmxpbmVUZW1wbGF0ZSIsImNyZWF0ZUNvbXBvbmVudEluc3RhbmNlRm9yVm5vZGUiLCJhY3RpdmVJbnN0YW5jZSIsIiRtb3VudCIsIm9sZFZub2RlIiwicGFyZW50Vm5vZGUiLCJyZW5kZXJDaGlsZHJlbiIsIm5ld1Njb3BlZFNsb3RzIiwib2xkU2NvcGVkU2xvdHMiLCJoYXNEeW5hbWljU2NvcGVkU2xvdCIsIm5lZWRzRm9yY2VVcGRhdGUiLCJfcmVuZGVyQ2hpbGRyZW4iLCIkdm5vZGUiLCJfdm5vZGUiLCIkYXR0cnMiLCIkbGlzdGVuZXJzIiwicHJvcEtleXMiLCJfcHJvcEtleXMiLCJvbGRMaXN0ZW5lcnMiLCJfcGFyZW50TGlzdGVuZXJzIiwidXBkYXRlQ29tcG9uZW50TGlzdGVuZXJzIiwiJGZvcmNlVXBkYXRlIiwidXBkYXRlQ2hpbGRDb21wb25lbnQiLCJpbnNlcnQiLCJfaXNNb3VudGVkIiwiY2FsbEhvb2siLCJfaW5hY3RpdmUiLCJhY3RpdmF0ZWRDaGlsZHJlbiIsImFjdGl2YXRlQ2hpbGRDb21wb25lbnQiLCJkZXN0cm95IiwiZGVhY3RpdmF0ZUNoaWxkQ29tcG9uZW50IiwiZGlyZWN0IiwiX2RpcmVjdEluYWN0aXZlIiwiaXNJbkluYWN0aXZlVHJlZSIsIiRjaGlsZHJlbiIsIiRkZXN0cm95IiwiaG9va3NUb01lcmdlIiwiY3JlYXRlQ29tcG9uZW50IiwiYmFzZUN0b3IiLCJjaWQiLCJmYWN0b3J5IiwiZXJyb3JDb21wIiwicmVzb2x2ZWQiLCJvd25lciIsImN1cnJlbnRSZW5kZXJpbmdJbnN0YW5jZSIsIm93bmVycyIsImxvYWRpbmciLCJsb2FkaW5nQ29tcCIsInN5bmMiLCJ0aW1lckxvYWRpbmciLCJ0aW1lclRpbWVvdXQiLCIkb24iLCJmb3JjZVJlbmRlciIsInJlbmRlckNvbXBsZXRlZCIsImNsZWFyVGltZW91dCIsImVuc3VyZUN0b3IiLCJyZWplY3QiLCJyZWFzb24iLCJjb21wb25lbnQiLCJkZWxheSIsInRpbWVvdXQiLCJyZXNvbHZlQXN5bmNDb21wb25lbnQiLCJjcmVhdGVBc3luY1BsYWNlaG9sZGVyIiwicmVzb2x2ZUNvbnN0cnVjdG9yT3B0aW9ucyIsIm1vZGVsIiwiY2FsbGJhY2siLCJ0cmFuc2Zvcm1Nb2RlbCIsImV4dHJhY3RQcm9wc0Zyb21WTm9kZURhdGEiLCJmdW5jdGlvbmFsIiwidm5vZGVzIiwiY3JlYXRlRnVuY3Rpb25hbENvbXBvbmVudCIsIm5hdGl2ZU9uIiwiYWJzdHJhY3QiLCJ0b01lcmdlIiwiX21lcmdlZCIsIm1lcmdlSG9vayQxIiwiaW5zdGFsbENvbXBvbmVudEhvb2tzIiwiZjEiLCJmMiIsIm5vcm1hbGl6YXRpb25UeXBlIiwiYWx3YXlzTm9ybWFsaXplIiwiaXMiLCJzaW1wbGVOb3JtYWxpemVDaGlsZHJlbiIsInByZSIsImFwcGx5TlMiLCJmb3JjZSIsInN0eWxlIiwiY2xhc3MiLCJyZWdpc3RlckRlZXBCaW5kaW5ncyIsIl9jcmVhdGVFbGVtZW50IiwiY29tcCIsImJhc2UiLCJfX2VzTW9kdWxlIiwidG9TdHJpbmdUYWciLCJnZXRGaXJzdENvbXBvbmVudENoaWxkIiwicmVtb3ZlJDEiLCIkb2ZmIiwiX3RhcmdldCIsIm9uY2VIYW5kbGVyIiwic2V0QWN0aXZlSW5zdGFuY2UiLCJwcmV2QWN0aXZlSW5zdGFuY2UiLCJoYW5kbGVycyIsImoiLCJfaGFzSG9va0V2ZW50IiwiJGVtaXQiLCJxdWV1ZSIsIndhaXRpbmciLCJmbHVzaGluZyIsImN1cnJlbnRGbHVzaFRpbWVzdGFtcCIsImdldE5vdyIsIm5vdyIsImNyZWF0ZUV2ZW50IiwidGltZVN0YW1wIiwiZmx1c2hTY2hlZHVsZXJRdWV1ZSIsIndhdGNoZXIiLCJzb3J0IiwiYmVmb3JlIiwicnVuIiwiYWN0aXZhdGVkUXVldWUiLCJ1cGRhdGVkUXVldWUiLCJjYWxsQWN0aXZhdGVkSG9va3MiLCJfd2F0Y2hlciIsImNhbGxVcGRhdGVkSG9va3MiLCJlbWl0IiwidWlkJDIiLCJXYXRjaGVyIiwiZXhwT3JGbiIsImlzUmVuZGVyV2F0Y2hlciIsIl93YXRjaGVycyIsImRlZXAiLCJ1c2VyIiwibGF6eSIsImFjdGl2ZSIsImRpcnR5IiwiZGVwcyIsIm5ld0RlcHMiLCJkZXBJZHMiLCJuZXdEZXBJZHMiLCJleHByZXNzaW9uIiwicGF0aCIsInNlZ21lbnRzIiwicGFyc2VQYXRoIiwiY2xlYW51cERlcHMiLCJ0bXAiLCJxdWV1ZVdhdGNoZXIiLCJvbGRWYWx1ZSIsImV2YWx1YXRlIiwidGVhcmRvd24iLCJfaXNCZWluZ0Rlc3Ryb3llZCIsInNoYXJlZFByb3BlcnR5RGVmaW5pdGlvbiIsInNvdXJjZUtleSIsImluaXRTdGF0ZSIsInByb3BzT3B0aW9ucyIsImluaXRQcm9wcyIsImluaXRNZXRob2RzIiwiX2RhdGEiLCJnZXREYXRhIiwiaW5pdERhdGEiLCJ3YXRjaGVycyIsIl9jb21wdXRlZFdhdGNoZXJzIiwiaXNTU1IiLCJ1c2VyRGVmIiwiY29tcHV0ZWRXYXRjaGVyT3B0aW9ucyIsImRlZmluZUNvbXB1dGVkIiwiaW5pdENvbXB1dGVkIiwiY3JlYXRlV2F0Y2hlciIsImluaXRXYXRjaCIsInNob3VsZENhY2hlIiwiY3JlYXRlQ29tcHV0ZWRHZXR0ZXIiLCJjcmVhdGVHZXR0ZXJJbnZva2VyIiwiJHdhdGNoIiwidWlkJDMiLCJzdXBlciIsInN1cGVyT3B0aW9ucyIsIm1vZGlmaWVkT3B0aW9ucyIsIm1vZGlmaWVkIiwibGF0ZXN0Iiwic2VhbGVkIiwic2VhbGVkT3B0aW9ucyIsInJlc29sdmVNb2RpZmllZE9wdGlvbnMiLCJleHRlbmRPcHRpb25zIiwiY29tcG9uZW50cyIsIlZ1ZSIsIl9pbml0IiwiaW5pdEV4dGVuZCIsIlN1cGVyIiwiU3VwZXJJZCIsImNhY2hlZEN0b3JzIiwiX0N0b3IiLCJTdWIiLCJjb25zdHJ1Y3RvciIsIkNvbXAiLCJpbml0UHJvcHMkMSIsImluaXRDb21wdXRlZCQxIiwibWl4aW4iLCJ1c2UiLCJnZXRDb21wb25lbnROYW1lIiwibWF0Y2hlcyIsInBhdHRlcm4iLCJwcnVuZUNhY2hlIiwia2VlcEFsaXZlSW5zdGFuY2UiLCJmaWx0ZXIiLCJjYWNoZWROb2RlIiwicHJ1bmVDYWNoZUVudHJ5IiwiY3VycmVudCIsImNhY2hlZCQkMSIsIl91aWQiLCJ2bm9kZUNvbXBvbmVudE9wdGlvbnMiLCJfY29tcG9uZW50VGFnIiwiaW5pdEludGVybmFsQ29tcG9uZW50IiwiX3NlbGYiLCIkcm9vdCIsIiRyZWZzIiwiaW5pdExpZmVjeWNsZSIsIl9ldmVudHMiLCJpbml0RXZlbnRzIiwicGFyZW50RGF0YSIsImluaXRSZW5kZXIiLCJpbml0SW5qZWN0aW9ucyIsImluaXRQcm92aWRlIiwiZWwiLCJpbml0TWl4aW4iLCJkYXRhRGVmIiwicHJvcHNEZWYiLCIkc2V0IiwiJGRlbGV0ZSIsImltbWVkaWF0ZSIsInN0YXRlTWl4aW4iLCJob29rUkUiLCIkb25jZSIsImkkMSIsImNicyIsImV2ZW50c01peGluIiwiX3VwZGF0ZSIsInByZXZFbCIsIiRlbCIsInByZXZWbm9kZSIsInJlc3RvcmVBY3RpdmVJbnN0YW5jZSIsIl9fcGF0Y2hfXyIsIl9fdnVlX18iLCJsaWZlY3ljbGVNaXhpbiIsIiRuZXh0VGljayIsIl9yZW5kZXIiLCJyZWYiLCJyZW5kZXJNaXhpbiIsInBhdHRlcm5UeXBlcyIsImJ1aWx0SW5Db21wb25lbnRzIiwiS2VlcEFsaXZlIiwiaW5jbHVkZSIsImV4Y2x1ZGUiLCJOdW1iZXIiLCJjcmVhdGVkIiwiZGVzdHJveWVkIiwibW91bnRlZCIsInBhcnNlSW50IiwiY29uZmlnRGVmIiwidXRpbCIsImRlZmluZVJlYWN0aXZlIiwiZGVsZXRlIiwib2JzZXJ2YWJsZSIsInBsdWdpbiIsImluc3RhbGxlZFBsdWdpbnMiLCJfaW5zdGFsbGVkUGx1Z2lucyIsInVuc2hpZnQiLCJpbnN0YWxsIiwiaW5pdFVzZSIsImluaXRNaXhpbiQxIiwiZGVmaW5pdGlvbiIsImluaXRBc3NldFJlZ2lzdGVycyIsImluaXRHbG9iYWxBUEkiLCJzc3JDb250ZXh0IiwidmVyc2lvbiIsImFjY2VwdFZhbHVlIiwiYXR0ciIsImlzRW51bWVyYXRlZEF0dHIiLCJpc1ZhbGlkQ29udGVudEVkaXRhYmxlVmFsdWUiLCJpc0Jvb2xlYW5BdHRyIiwieGxpbmtOUyIsImlzWGxpbmsiLCJnZXRYbGlua1Byb3AiLCJpc0ZhbHN5QXR0clZhbHVlIiwiZ2VuQ2xhc3NGb3JWbm9kZSIsInBhcmVudE5vZGUiLCJjaGlsZE5vZGUiLCJtZXJnZUNsYXNzRGF0YSIsInN0YXRpY0NsYXNzIiwiZHluYW1pY0NsYXNzIiwic3RyaW5naWZ5Q2xhc3MiLCJyZW5kZXJDbGFzcyIsInN0cmluZ2lmaWVkIiwic3RyaW5naWZ5QXJyYXkiLCJzdHJpbmdpZnlPYmplY3QiLCJuYW1lc3BhY2VNYXAiLCJzdmciLCJtYXRoIiwiaXNIVE1MVGFnIiwiaXNTVkciLCJ1bmtub3duRWxlbWVudENhY2hlIiwiaXNUZXh0SW5wdXRUeXBlIiwicXVlcnkiLCJzZWxlY3RlZCIsInF1ZXJ5U2VsZWN0b3IiLCJub2RlT3BzIiwidGFnTmFtZSIsIm11bHRpcGxlIiwic2V0QXR0cmlidXRlIiwiY3JlYXRlRWxlbWVudE5TIiwibmFtZXNwYWNlIiwiY3JlYXRlQ29tbWVudCIsImluc2VydEJlZm9yZSIsIm5ld05vZGUiLCJyZWZlcmVuY2VOb2RlIiwicmVtb3ZlQ2hpbGQiLCJhcHBlbmRDaGlsZCIsIm5leHRTaWJsaW5nIiwic2V0VGV4dENvbnRlbnQiLCJ0ZXh0Q29udGVudCIsInNldFN0eWxlU2NvcGUiLCJzY29wZUlkIiwicmVnaXN0ZXJSZWYiLCJpc1JlbW92YWwiLCJyZWZzIiwicmVmSW5Gb3IiLCJlbXB0eU5vZGUiLCJzYW1lVm5vZGUiLCJ0eXBlQSIsInR5cGVCIiwic2FtZUlucHV0VHlwZSIsImNyZWF0ZUtleVRvT2xkSWR4IiwiYmVnaW5JZHgiLCJlbmRJZHgiLCJ1cGRhdGVEaXJlY3RpdmVzIiwib2xkRGlyIiwiZGlyIiwiaXNDcmVhdGUiLCJpc0Rlc3Ryb3kiLCJvbGREaXJzIiwibm9ybWFsaXplRGlyZWN0aXZlcyQxIiwibmV3RGlycyIsImRpcnNXaXRoSW5zZXJ0IiwiZGlyc1dpdGhQb3N0cGF0Y2giLCJvbGRBcmciLCJhcmciLCJjYWxsSG9vayQxIiwiY29tcG9uZW50VXBkYXRlZCIsImNhbGxJbnNlcnQiLCJlbXB0eU1vZGlmaWVycyIsIm1vZGlmaWVycyIsImdldFJhd0Rpck5hbWUiLCJyYXdOYW1lIiwiam9pbiIsImJhc2VNb2R1bGVzIiwidXBkYXRlQXR0cnMiLCJpbmhlcml0QXR0cnMiLCJvbGRBdHRycyIsInNldEF0dHIiLCJyZW1vdmVBdHRyaWJ1dGVOUyIsInJlbW92ZUF0dHJpYnV0ZSIsImJhc2VTZXRBdHRyIiwiY29udmVydEVudW1lcmF0ZWRWYWx1ZSIsInNldEF0dHJpYnV0ZU5TIiwiX19pZXBoIiwiYmxvY2tlciIsInN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJ1cGRhdGVDbGFzcyIsIm9sZERhdGEiLCJjbHMiLCJ0cmFuc2l0aW9uQ2xhc3MiLCJfdHJhbnNpdGlvbkNsYXNzZXMiLCJfcHJldkNsYXNzIiwiY2hyIiwiaW5kZXgkMSIsImV4cHJlc3Npb25Qb3MiLCJleHByZXNzaW9uRW5kUG9zIiwia2xhc3MiLCJ2YWxpZERpdmlzaW9uQ2hhclJFIiwicGFyc2VGaWx0ZXJzIiwiZXhwIiwicHJldiIsImZpbHRlcnMiLCJpblNpbmdsZSIsImluRG91YmxlIiwiaW5UZW1wbGF0ZVN0cmluZyIsImluUmVnZXgiLCJjdXJseSIsInNxdWFyZSIsInBhcmVuIiwibGFzdEZpbHRlckluZGV4IiwidHJpbSIsInB1c2hGaWx0ZXIiLCJ3cmFwRmlsdGVyIiwiYmFzZVdhcm4iLCJtc2ciLCJyYW5nZSIsInBsdWNrTW9kdWxlRnVuY3Rpb24iLCJtb2R1bGVzIiwibSIsImFkZFByb3AiLCJkeW5hbWljIiwicmFuZ2VTZXRJdGVtIiwicGxhaW4iLCJhZGRBdHRyIiwiZHluYW1pY0F0dHJzIiwiYWRkUmF3QXR0ciIsImF0dHJzTWFwIiwiYXR0cnNMaXN0IiwiYWRkRGlyZWN0aXZlIiwiaXNEeW5hbWljQXJnIiwicHJlcGVuZE1vZGlmaWVyTWFya2VyIiwiYWRkSGFuZGxlciIsImltcG9ydGFudCIsImV2ZW50cyIsInJpZ2h0IiwibWlkZGxlIiwibmF0aXZlIiwibmF0aXZlRXZlbnRzIiwibmV3SGFuZGxlciIsImdldEJpbmRpbmdBdHRyIiwiZ2V0U3RhdGljIiwiZHluYW1pY1ZhbHVlIiwiZ2V0QW5kUmVtb3ZlQXR0ciIsInN0YXRpY1ZhbHVlIiwicmVtb3ZlRnJvbU1hcCIsImdldEFuZFJlbW92ZUF0dHJCeVJlZ2V4IiwiZW5kIiwiZ2VuQ29tcG9uZW50TW9kZWwiLCJudW1iZXIiLCJ2YWx1ZUV4cHJlc3Npb24iLCJhc3NpZ25tZW50IiwiZ2VuQXNzaWdubWVudENvZGUiLCJsYXN0SW5kZXhPZiIsImVvZiIsImlzU3RyaW5nU3RhcnQiLCJwYXJzZVN0cmluZyIsInBhcnNlQnJhY2tldCIsInBhcnNlTW9kZWwiLCJpbkJyYWNrZXQiLCJzdHJpbmdRdW90ZSIsInRhcmdldCQxIiwiY3JlYXRlT25jZUhhbmRsZXIkMSIsInJlbW92ZSQyIiwidXNlTWljcm90YXNrRml4IiwiYWRkJDEiLCJhdHRhY2hlZFRpbWVzdGFtcCIsIl93cmFwcGVyIiwiY3VycmVudFRhcmdldCIsIm93bmVyRG9jdW1lbnQiLCJ1cGRhdGVET01MaXN0ZW5lcnMiLCJjaGFuZ2UiLCJub3JtYWxpemVFdmVudHMiLCJzdmdDb250YWluZXIiLCJ1cGRhdGVET01Qcm9wcyIsIm9sZFByb3BzIiwiY2hpbGROb2RlcyIsIl92YWx1ZSIsInN0ckN1ciIsInNob3VsZFVwZGF0ZVZhbHVlIiwiaW5uZXJIVE1MIiwiZmlyc3RDaGlsZCIsImNoZWNrVmFsIiwiY29tcG9zaW5nIiwibm90SW5Gb2N1cyIsImFjdGl2ZUVsZW1lbnQiLCJpc05vdEluRm9jdXNBbmREaXJ0eSIsIl92TW9kaWZpZXJzIiwiaXNEaXJ0eVdpdGhNb2RpZmllcnMiLCJwYXJzZVN0eWxlVGV4dCIsImNzc1RleHQiLCJwcm9wZXJ0eURlbGltaXRlciIsIm5vcm1hbGl6ZVN0eWxlRGF0YSIsIm5vcm1hbGl6ZVN0eWxlQmluZGluZyIsInN0YXRpY1N0eWxlIiwiYmluZGluZ1N0eWxlIiwiZW1wdHlTdHlsZSIsImNzc1ZhclJFIiwiaW1wb3J0YW50UkUiLCJzZXRQcm9wIiwic2V0UHJvcGVydHkiLCJub3JtYWxpemVkTmFtZSIsIm5vcm1hbGl6ZSIsInZlbmRvck5hbWVzIiwiY2FwTmFtZSIsInVwZGF0ZVN0eWxlIiwib2xkU3RhdGljU3R5bGUiLCJvbGRTdHlsZUJpbmRpbmciLCJub3JtYWxpemVkU3R5bGUiLCJvbGRTdHlsZSIsIm5ld1N0eWxlIiwiY2hlY2tDaGlsZCIsInN0eWxlRGF0YSIsImdldFN0eWxlIiwid2hpdGVzcGFjZVJFIiwiYWRkQ2xhc3MiLCJjbGFzc0xpc3QiLCJnZXRBdHRyaWJ1dGUiLCJyZW1vdmVDbGFzcyIsInRhciIsInJlc29sdmVUcmFuc2l0aW9uIiwiY3NzIiwiYXV0b0Nzc1RyYW5zaXRpb24iLCJlbnRlckNsYXNzIiwiZW50ZXJUb0NsYXNzIiwiZW50ZXJBY3RpdmVDbGFzcyIsImxlYXZlQ2xhc3MiLCJsZWF2ZVRvQ2xhc3MiLCJsZWF2ZUFjdGl2ZUNsYXNzIiwiaGFzVHJhbnNpdGlvbiIsInRyYW5zaXRpb25Qcm9wIiwidHJhbnNpdGlvbkVuZEV2ZW50IiwiYW5pbWF0aW9uUHJvcCIsImFuaW1hdGlvbkVuZEV2ZW50Iiwib250cmFuc2l0aW9uZW5kIiwib253ZWJraXR0cmFuc2l0aW9uZW5kIiwib25hbmltYXRpb25lbmQiLCJvbndlYmtpdGFuaW1hdGlvbmVuZCIsInJhZiIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsIm5leHRGcmFtZSIsImFkZFRyYW5zaXRpb25DbGFzcyIsInRyYW5zaXRpb25DbGFzc2VzIiwicmVtb3ZlVHJhbnNpdGlvbkNsYXNzIiwid2hlblRyYW5zaXRpb25FbmRzIiwiZXhwZWN0ZWRUeXBlIiwiZ2V0VHJhbnNpdGlvbkluZm8iLCJwcm9wQ291bnQiLCJlbmRlZCIsIm9uRW5kIiwidHJhbnNmb3JtUkUiLCJzdHlsZXMiLCJnZXRDb21wdXRlZFN0eWxlIiwidHJhbnNpdGlvbkRlbGF5cyIsInRyYW5zaXRpb25EdXJhdGlvbnMiLCJ0cmFuc2l0aW9uVGltZW91dCIsImdldFRpbWVvdXQiLCJhbmltYXRpb25EZWxheXMiLCJhbmltYXRpb25EdXJhdGlvbnMiLCJhbmltYXRpb25UaW1lb3V0IiwiaGFzVHJhbnNmb3JtIiwiZGVsYXlzIiwiZHVyYXRpb25zIiwidG9NcyIsInMiLCJlbnRlciIsInRvZ2dsZURpc3BsYXkiLCJfbGVhdmVDYiIsImNhbmNlbGxlZCIsInRyYW5zaXRpb24iLCJfZW50ZXJDYiIsIm5vZGVUeXBlIiwiYXBwZWFyQ2xhc3MiLCJhcHBlYXJUb0NsYXNzIiwiYXBwZWFyQWN0aXZlQ2xhc3MiLCJiZWZvcmVFbnRlciIsImFmdGVyRW50ZXIiLCJlbnRlckNhbmNlbGxlZCIsImJlZm9yZUFwcGVhciIsImFwcGVhciIsImFmdGVyQXBwZWFyIiwiYXBwZWFyQ2FuY2VsbGVkIiwiZHVyYXRpb24iLCJ0cmFuc2l0aW9uTm9kZSIsImlzQXBwZWFyIiwic3RhcnRDbGFzcyIsImFjdGl2ZUNsYXNzIiwidG9DbGFzcyIsImJlZm9yZUVudGVySG9vayIsImVudGVySG9vayIsImFmdGVyRW50ZXJIb29rIiwiZW50ZXJDYW5jZWxsZWRIb29rIiwiZXhwbGljaXRFbnRlckR1cmF0aW9uIiwiZXhwZWN0c0NTUyIsInVzZXJXYW50c0NvbnRyb2wiLCJnZXRIb29rQXJndW1lbnRzTGVuZ3RoIiwic2hvdyIsInBlbmRpbmdOb2RlIiwiX3BlbmRpbmciLCJpc1ZhbGlkRHVyYXRpb24iLCJsZWF2ZSIsInJtIiwiYmVmb3JlTGVhdmUiLCJhZnRlckxlYXZlIiwibGVhdmVDYW5jZWxsZWQiLCJkZWxheUxlYXZlIiwiZXhwbGljaXRMZWF2ZUR1cmF0aW9uIiwicGVyZm9ybUxlYXZlIiwiaW52b2tlckZucyIsIl9lbnRlciIsInBhdGNoIiwiYmFja2VuZCIsInJlbW92ZU5vZGUiLCJjcmVhdGVFbG0iLCJpbnNlcnRlZFZub2RlUXVldWUiLCJwYXJlbnRFbG0iLCJyZWZFbG0iLCJuZXN0ZWQiLCJvd25lckFycmF5IiwiaXNSZWFjdGl2YXRlZCIsImluaXRDb21wb25lbnQiLCJpbm5lck5vZGUiLCJhY3RpdmF0ZSIsInJlYWN0aXZhdGVDb21wb25lbnQiLCJzZXRTY29wZSIsImNyZWF0ZUNoaWxkcmVuIiwiaW52b2tlQ3JlYXRlSG9va3MiLCJwZW5kaW5nSW5zZXJ0IiwiaXNQYXRjaGFibGUiLCJyZWYkJDEiLCJhbmNlc3RvciIsImFkZFZub2RlcyIsInN0YXJ0SWR4IiwiaW52b2tlRGVzdHJveUhvb2siLCJyZW1vdmVWbm9kZXMiLCJjaCIsInJlbW92ZUFuZEludm9rZVJlbW92ZUhvb2siLCJjaGlsZEVsbSIsImNyZWF0ZVJtQ2IiLCJmaW5kSWR4SW5PbGQiLCJvbGRDaCIsInBhdGNoVm5vZGUiLCJyZW1vdmVPbmx5IiwiaHlkcmF0ZSIsIm5ld0NoIiwib2xkS2V5VG9JZHgiLCJpZHhJbk9sZCIsInZub2RlVG9Nb3ZlIiwib2xkU3RhcnRJZHgiLCJuZXdTdGFydElkeCIsIm9sZEVuZElkeCIsIm9sZFN0YXJ0Vm5vZGUiLCJvbGRFbmRWbm9kZSIsIm5ld0VuZElkeCIsIm5ld1N0YXJ0Vm5vZGUiLCJuZXdFbmRWbm9kZSIsImNhbk1vdmUiLCJ1cGRhdGVDaGlsZHJlbiIsInBvc3RwYXRjaCIsImludm9rZUluc2VydEhvb2siLCJpbml0aWFsIiwiaXNSZW5kZXJlZE1vZHVsZSIsImluVlByZSIsImhhc0NoaWxkTm9kZXMiLCJjaGlsZHJlbk1hdGNoIiwiZnVsbEludm9rZSIsImlzSW5pdGlhbFBhdGNoIiwiaXNSZWFsRWxlbWVudCIsImhhc0F0dHJpYnV0ZSIsIm9sZEVsbSIsInBhdGNoYWJsZSIsImkkMiIsImNyZWF0ZVBhdGNoRnVuY3Rpb24iLCJ2bW9kZWwiLCJ0cmlnZ2VyIiwiZGlyZWN0aXZlIiwiYmluZGluZyIsIl92T3B0aW9ucyIsInNldFNlbGVjdGVkIiwiZ2V0VmFsdWUiLCJvbkNvbXBvc2l0aW9uU3RhcnQiLCJvbkNvbXBvc2l0aW9uRW5kIiwicHJldk9wdGlvbnMiLCJjdXJPcHRpb25zIiwic29tZSIsIm8iLCJoYXNOb01hdGNoaW5nT3B0aW9uIiwiYWN0dWFsbHlTZXRTZWxlY3RlZCIsImlzTXVsdGlwbGUiLCJvcHRpb24iLCJzZWxlY3RlZEluZGV4IiwiaW5pdEV2ZW50IiwiZGlzcGF0Y2hFdmVudCIsImxvY2F0ZU5vZGUiLCJwbGF0Zm9ybURpcmVjdGl2ZXMiLCJ0cmFuc2l0aW9uJCQxIiwib3JpZ2luYWxEaXNwbGF5IiwiX192T3JpZ2luYWxEaXNwbGF5IiwiZGlzcGxheSIsInVuYmluZCIsInRyYW5zaXRpb25Qcm9wcyIsIm1vZGUiLCJnZXRSZWFsQ2hpbGQiLCJjb21wT3B0aW9ucyIsImV4dHJhY3RUcmFuc2l0aW9uRGF0YSIsInBsYWNlaG9sZGVyIiwiaCIsInJhd0NoaWxkIiwiaXNOb3RUZXh0Tm9kZSIsImlzVlNob3dEaXJlY3RpdmUiLCJUcmFuc2l0aW9uIiwiaGFzUGFyZW50VHJhbnNpdGlvbiIsIl9sZWF2aW5nIiwib2xkUmF3Q2hpbGQiLCJvbGRDaGlsZCIsImlzU2FtZUNoaWxkIiwiZGVsYXllZExlYXZlIiwibW92ZUNsYXNzIiwiY2FsbFBlbmRpbmdDYnMiLCJfbW92ZUNiIiwicmVjb3JkUG9zaXRpb24iLCJuZXdQb3MiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJhcHBseVRyYW5zbGF0aW9uIiwib2xkUG9zIiwicG9zIiwiZHgiLCJsZWZ0IiwiZHkiLCJ0b3AiLCJtb3ZlZCIsInRyYW5zZm9ybSIsIldlYmtpdFRyYW5zZm9ybSIsInRyYW5zaXRpb25EdXJhdGlvbiIsInBsYXRmb3JtQ29tcG9uZW50cyIsIlRyYW5zaXRpb25Hcm91cCIsImJlZm9yZU1vdW50Iiwia2VwdCIsInByZXZDaGlsZHJlbiIsInJhd0NoaWxkcmVuIiwidHJhbnNpdGlvbkRhdGEiLCJyZW1vdmVkIiwiYyQxIiwidXBkYXRlZCIsImhhc01vdmUiLCJfcmVmbG93IiwiYm9keSIsIm9mZnNldEhlaWdodCIsInByb3BlcnR5TmFtZSIsIl9oYXNNb3ZlIiwiY2xvbmVOb2RlIiwiSFRNTFVua25vd25FbGVtZW50IiwiSFRNTEVsZW1lbnQiLCJ1cGRhdGVDb21wb25lbnQiLCJtb3VudENvbXBvbmVudCIsImRlZmF1bHRUYWdSRSIsInJlZ2V4RXNjYXBlUkUiLCJidWlsZFJlZ2V4IiwiZGVsaW1pdGVycyIsIm9wZW4iLCJjbG9zZSIsImtsYXNzJDEiLCJzdGF0aWNLZXlzIiwidHJhbnNmb3JtTm9kZSIsImNsYXNzQmluZGluZyIsImdlbkRhdGEiLCJkZWNvZGVyIiwic3R5bGUkMSIsInN0eWxlQmluZGluZyIsImhlIiwiaHRtbCIsImlzVW5hcnlUYWciLCJjYW5CZUxlZnRPcGVuVGFnIiwiaXNOb25QaHJhc2luZ1RhZyIsImF0dHJpYnV0ZSIsImR5bmFtaWNBcmdBdHRyaWJ1dGUiLCJuY25hbWUiLCJxbmFtZUNhcHR1cmUiLCJzdGFydFRhZ09wZW4iLCJzdGFydFRhZ0Nsb3NlIiwiZW5kVGFnIiwiZG9jdHlwZSIsImNvbW1lbnQiLCJjb25kaXRpb25hbENvbW1lbnQiLCJpc1BsYWluVGV4dEVsZW1lbnQiLCJyZUNhY2hlIiwiZGVjb2RpbmdNYXAiLCJlbmNvZGVkQXR0ciIsImVuY29kZWRBdHRyV2l0aE5ld0xpbmVzIiwiaXNJZ25vcmVOZXdsaW5lVGFnIiwic2hvdWxkSWdub3JlRmlyc3ROZXdsaW5lIiwiZGVjb2RlQXR0ciIsInNob3VsZERlY29kZU5ld2xpbmVzIiwicmUiLCJ3YXJuJDIiLCJ0cmFuc2Zvcm1zIiwicHJlVHJhbnNmb3JtcyIsInBvc3RUcmFuc2Zvcm1zIiwicGxhdGZvcm1Jc1ByZVRhZyIsInBsYXRmb3JtTXVzdFVzZVByb3AiLCJwbGF0Zm9ybUdldFRhZ05hbWVzcGFjZSIsIm9uUkUiLCJkaXJSRSIsImZvckFsaWFzUkUiLCJmb3JJdGVyYXRvclJFIiwic3RyaXBQYXJlbnNSRSIsImR5bmFtaWNBcmdSRSIsImFyZ1JFIiwiYmluZFJFIiwibW9kaWZpZXJSRSIsInNsb3RSRSIsImxpbmVCcmVha1JFIiwid2hpdGVzcGFjZVJFJDEiLCJkZWNvZGVIVE1MQ2FjaGVkIiwiY3JlYXRlQVNURWxlbWVudCIsIm1ha2VBdHRyc01hcCIsInJhd0F0dHJzTWFwIiwicGFyc2UiLCJ0ZW1wbGF0ZSIsImlzUHJlVGFnIiwicm9vdCIsImN1cnJlbnRQYXJlbnQiLCJzdGFjayIsInByZXNlcnZlV2hpdGVzcGFjZSIsIndoaXRlc3BhY2VPcHRpb24iLCJ3aGl0ZXNwYWNlIiwiaW5QcmUiLCJjbG9zZUVsZW1lbnQiLCJlbGVtZW50IiwidHJpbUVuZGluZ1doaXRlc3BhY2UiLCJwcm9jZXNzZWQiLCJwcm9jZXNzRWxlbWVudCIsImlmIiwiZWxzZWlmIiwiZWxzZSIsImFkZElmQ29uZGl0aW9uIiwiYmxvY2siLCJmb3JiaWRkZW4iLCJmaW5kUHJldkVsZW1lbnQiLCJzbG90U2NvcGUiLCJzbG90VGFyZ2V0IiwibGFzdE5vZGUiLCJsYXN0VGFnIiwiZXhwZWN0SFRNTCIsImlzVW5hcnlUYWckJDEiLCJjYW5CZUxlZnRPcGVuVGFnJCQxIiwiZW5kVGFnTGVuZ3RoIiwic3RhY2tlZFRhZyIsInJlU3RhY2tlZFRhZyIsInJlc3QkMSIsImFsbCIsImNoYXJzIiwicGFyc2VFbmRUYWciLCJ0ZXh0RW5kIiwiY29tbWVudEVuZCIsInNob3VsZEtlZXBDb21tZW50Iiwic3Vic3RyaW5nIiwiYWR2YW5jZSIsImNvbmRpdGlvbmFsRW5kIiwiZG9jdHlwZU1hdGNoIiwiZW5kVGFnTWF0Y2giLCJjdXJJbmRleCIsInN0YXJ0VGFnTWF0Y2giLCJwYXJzZVN0YXJ0VGFnIiwiaGFuZGxlU3RhcnRUYWciLCJyZXN0IiwidW5hcnlTbGFzaCIsInVuYXJ5Iiwic2hvdWxkRGVjb2RlTmV3bGluZXNGb3JIcmVmIiwibG93ZXJDYXNlZFRhZyIsImxvd2VyQ2FzZWRUYWdOYW1lIiwicGFyc2VIVE1MIiwiY29tbWVudHMiLCJvdXRwdXRTb3VyY2VSYW5nZSIsInN0YXJ0JDEiLCJpZU5TQnVnIiwiaWVOU1ByZWZpeCIsImd1YXJkSUVTVkdCdWciLCJwcm9jZXNzUHJlIiwicHJvY2Vzc1Jhd0F0dHJzIiwicHJvY2Vzc0ZvciIsInByb2Nlc3NJZiIsInByb2Nlc3NPbmNlIiwiZW5kJDEiLCJ0YWdSRSIsInRva2VuVmFsdWUiLCJ0b2tlbnMiLCJyYXdUb2tlbnMiLCJleGVjIiwicGFyc2VUZXh0IiwicHJvY2Vzc0tleSIsImZvciIsImNoZWNrSW5Gb3IiLCJwcm9jZXNzUmVmIiwic2xvdFRhcmdldER5bmFtaWMiLCJnZXRSYXdCaW5kaW5nQXR0ciIsInNsb3RCaW5kaW5nIiwiZ2V0U2xvdE5hbWUiLCJzbG90QmluZGluZyQxIiwicmVmJDEiLCJkeW5hbWljJDEiLCJzbG90Q29udGFpbmVyIiwicHJvY2Vzc1Nsb3RDb250ZW50Iiwic2xvdE5hbWUiLCJwcm9jZXNzQ29tcG9uZW50Iiwic3luY0dlbiIsImlzRHluYW1pYyIsImhhc0JpbmRpbmdzIiwicGFyc2VNb2RpZmllcnMiLCJjYW1lbCIsImFyZ01hdGNoIiwicHJvY2Vzc0F0dHJzIiwiaW5NYXRjaCIsImFsaWFzIiwiaXRlcmF0b3JNYXRjaCIsIml0ZXJhdG9yMSIsIml0ZXJhdG9yMiIsInBhcnNlRm9yIiwiY29uZGl0aW9uIiwiaWZDb25kaXRpb25zIiwiY2xvbmVBU1RFbGVtZW50IiwibW9kdWxlcyQxIiwicHJlVHJhbnNmb3JtTm9kZSIsInR5cGVCaW5kaW5nIiwiaWZDb25kaXRpb24iLCJpZkNvbmRpdGlvbkV4dHJhIiwiaGFzRWxzZSIsImVsc2VJZkNvbmRpdGlvbiIsImJyYW5jaDAiLCJicmFuY2gxIiwiYnJhbmNoMiIsImlzU3RhdGljS2V5IiwiaXNQbGF0Zm9ybVJlc2VydmVkVGFnIiwiYmFzZU9wdGlvbnMiLCJfd2FybiIsImNvZGUiLCJnZW5TZWxlY3QiLCJ2YWx1ZUJpbmRpbmciLCJ0cnVlVmFsdWVCaW5kaW5nIiwiZmFsc2VWYWx1ZUJpbmRpbmciLCJnZW5DaGVja2JveE1vZGVsIiwiZ2VuUmFkaW9Nb2RlbCIsIm5lZWRDb21wb3NpdGlvbkd1YXJkIiwiZ2VuRGVmYXVsdE1vZGVsIiwicmVkdWNlIiwiZ2VuU3RhdGljS2V5cyIsImdlblN0YXRpY0tleXNDYWNoZWQiLCJvcHRpbWl6ZSIsIm1hcmtTdGF0aWMkMSIsInN0YXRpYyIsImlzRGlyZWN0Q2hpbGRPZlRlbXBsYXRlRm9yIiwibCQxIiwibWFya1N0YXRpY1Jvb3RzIiwic3RhdGljSW5Gb3IiLCJzdGF0aWNSb290IiwiZm5FeHBSRSIsImZuSW52b2tlUkUiLCJzaW1wbGVQYXRoUkUiLCJlc2MiLCJ0YWIiLCJzcGFjZSIsInVwIiwiZG93biIsImtleU5hbWVzIiwiZ2VuR3VhcmQiLCJtb2RpZmllckNvZGUiLCJzdG9wIiwicHJldmVudCIsInNlbGYiLCJjdHJsIiwiYWx0IiwibWV0YSIsImdlbkhhbmRsZXJzIiwicHJlZml4Iiwic3RhdGljSGFuZGxlcnMiLCJkeW5hbWljSGFuZGxlcnMiLCJoYW5kbGVyQ29kZSIsImdlbkhhbmRsZXIiLCJpc01ldGhvZFBhdGgiLCJpc0Z1bmN0aW9uRXhwcmVzc2lvbiIsImlzRnVuY3Rpb25JbnZvY2F0aW9uIiwiZ2VuTW9kaWZpZXJDb2RlIiwia2V5TW9kaWZpZXIiLCJnZW5GaWx0ZXJDb2RlIiwiZ2VuS2V5RmlsdGVyIiwia2V5VmFsIiwia2V5Q29kZSIsImtleU5hbWUiLCJiYXNlRGlyZWN0aXZlcyIsIndyYXBMaXN0ZW5lcnMiLCJ3cmFwRGF0YSIsImNsb2FrIiwiQ29kZWdlblN0YXRlIiwiZGF0YUdlbkZucyIsIm1heWJlQ29tcG9uZW50Iiwib25jZUlkIiwiZ2VuZXJhdGUiLCJhc3QiLCJzdGF0ZSIsImdlbkVsZW1lbnQiLCJzdGF0aWNQcm9jZXNzZWQiLCJnZW5TdGF0aWMiLCJvbmNlUHJvY2Vzc2VkIiwiZ2VuT25jZSIsImZvclByb2Nlc3NlZCIsImdlbkZvciIsImlmUHJvY2Vzc2VkIiwiZ2VuSWYiLCJnZW5DaGlsZHJlbiIsImdlblByb3BzIiwiYmluZCQkMSIsImdlblNsb3QiLCJjb21wb25lbnROYW1lIiwiZ2VuRGF0YSQyIiwiZ2VuQ29tcG9uZW50Iiwib3JpZ2luYWxQcmVTdGF0ZSIsImFsdEdlbiIsImFsdEVtcHR5IiwiZ2VuSWZDb25kaXRpb25zIiwiY29uZGl0aW9ucyIsImdlblRlcm5hcnlFeHAiLCJhbHRIZWxwZXIiLCJuZWVkUnVudGltZSIsImhhc1J1bnRpbWUiLCJnZW4iLCJnZW5EaXJlY3RpdmVzIiwiY29udGFpbnNTbG90Q2hpbGQiLCJuZWVkc0tleSIsImdlbmVyYXRlZFNsb3RzIiwiZ2VuU2NvcGVkU2xvdCIsImlubGluZVJlbmRlckZucyIsImdlbklubGluZVRlbXBsYXRlIiwiaXNMZWdhY3lTeW50YXgiLCJyZXZlcnNlUHJveHkiLCJjaGVja1NraXAiLCJhbHRHZW5FbGVtZW50IiwiYWx0R2VuTm9kZSIsImVsJDEiLCJub3JtYWxpemF0aW9uVHlwZSQxIiwibmVlZHNOb3JtYWxpemF0aW9uIiwiZ2V0Tm9ybWFsaXphdGlvblR5cGUiLCJnZW5Ob2RlIiwiZ2VuQ29tbWVudCIsInRyYW5zZm9ybVNwZWNpYWxOZXdsaW5lcyIsImdlblRleHQiLCJzdGF0aWNQcm9wcyIsImR5bmFtaWNQcm9wcyIsImNyZWF0ZUZ1bmN0aW9uIiwiZXJyb3JzIiwiY3JlYXRlQ29tcGlsZVRvRnVuY3Rpb25GbiIsImNvbXBpbGUiLCJjb21waWxlZCIsImZuR2VuRXJyb3JzIiwiYmFzZUNvbXBpbGUiLCJkaXYiLCJmaW5hbE9wdGlvbnMiLCJ0aXBzIiwidGlwIiwiY29tcGlsZVRvRnVuY3Rpb25zIiwiZ2V0U2hvdWxkRGVjb2RlIiwiaHJlZiIsImlkVG9UZW1wbGF0ZSIsIm1vdW50IiwiZG9jdW1lbnRFbGVtZW50Iiwib3V0ZXJIVE1MIiwiY29udGFpbmVyIiwiZ2V0T3V0ZXJIVE1MIiwiZyIsIm1vZHVsZSIsImV4cG9ydHMiLCJkZXZ0b29sSG9vayIsImZvckVhY2hWYWx1ZSIsIk1vZHVsZSIsInJhd01vZHVsZSIsInJ1bnRpbWUiLCJfY2hpbGRyZW4iLCJfcmF3TW9kdWxlIiwicmF3U3RhdGUiLCJuYW1lc3BhY2VkIiwiYWRkQ2hpbGQiLCJnZXRDaGlsZCIsImhhc0NoaWxkIiwiYWN0aW9ucyIsIm11dGF0aW9ucyIsImdldHRlcnMiLCJmb3JFYWNoQ2hpbGQiLCJmb3JFYWNoR2V0dGVyIiwiZm9yRWFjaEFjdGlvbiIsImZvckVhY2hNdXRhdGlvbiIsIk1vZHVsZUNvbGxlY3Rpb24iLCJyYXdSb290TW9kdWxlIiwicmVnaXN0ZXIiLCJnZXROYW1lc3BhY2UiLCJ0YXJnZXRNb2R1bGUiLCJuZXdNb2R1bGUiLCJyYXdDaGlsZE1vZHVsZSIsInVucmVnaXN0ZXIiLCJpc1JlZ2lzdGVyZWQiLCJTdG9yZSIsInBsdWdpbnMiLCJzdHJpY3QiLCJfY29tbWl0dGluZyIsIl9hY3Rpb25zIiwiX2FjdGlvblN1YnNjcmliZXJzIiwiX211dGF0aW9ucyIsIl93cmFwcGVkR2V0dGVycyIsIl9tb2R1bGVzIiwiX21vZHVsZXNOYW1lc3BhY2VNYXAiLCJfc3Vic2NyaWJlcnMiLCJfd2F0Y2hlclZNIiwiX21ha2VMb2NhbEdldHRlcnNDYWNoZSIsInN0b3JlIiwiZGlzcGF0Y2giLCJjb21taXQiLCJwYXlsb2FkIiwiaW5zdGFsbE1vZHVsZSIsInJlc2V0U3RvcmVWTSIsIl9kZXZ0b29sSG9vayIsInRhcmdldFN0YXRlIiwicmVwbGFjZVN0YXRlIiwic3Vic2NyaWJlIiwibXV0YXRpb24iLCJwcmVwZW5kIiwic3Vic2NyaWJlQWN0aW9uIiwiYWN0aW9uIiwiZGV2dG9vbFBsdWdpbiIsInByb3RvdHlwZUFjY2Vzc29ycyQxIiwiZ2VuZXJpY1N1YnNjcmliZSIsInJlc2V0U3RvcmUiLCJob3QiLCJvbGRWbSIsIl92bSIsIndyYXBwZWRHZXR0ZXJzIiwicGFydGlhbCIsIiQkc3RhdGUiLCJlbmFibGVTdHJpY3RNb2RlIiwiX3dpdGhDb21taXQiLCJyb290U3RhdGUiLCJpc1Jvb3QiLCJwYXJlbnRTdGF0ZSIsImdldE5lc3RlZFN0YXRlIiwibW9kdWxlTmFtZSIsImxvY2FsIiwibm9OYW1lc3BhY2UiLCJfdHlwZSIsIl9wYXlsb2FkIiwiX29wdGlvbnMiLCJ1bmlmeU9iamVjdFN0eWxlIiwiZ2V0dGVyc1Byb3h5Iiwic3BsaXRQb3MiLCJsb2NhbFR5cGUiLCJtYWtlTG9jYWxHZXR0ZXJzIiwibWFrZUxvY2FsQ29udGV4dCIsInJlZ2lzdGVyTXV0YXRpb24iLCJyb290R2V0dGVycyIsInJlZ2lzdGVyQWN0aW9uIiwicmF3R2V0dGVyIiwicmVnaXN0ZXJHZXR0ZXIiLCJfVnVlIiwiYmVmb3JlQ3JlYXRlIiwidnVleEluaXQiLCIkc3RvcmUiLCJhcHBseU1peGluIiwiZW50cnkiLCJhZnRlciIsInJlZ2lzdGVyTW9kdWxlIiwicHJlc2VydmVTdGF0ZSIsInVucmVnaXN0ZXJNb2R1bGUiLCJoYXNNb2R1bGUiLCJob3RVcGRhdGUiLCJuZXdPcHRpb25zIiwiY29tbWl0dGluZyIsIm1hcFN0YXRlIiwibm9ybWFsaXplTmFtZXNwYWNlIiwic3RhdGVzIiwibm9ybWFsaXplTWFwIiwiZ2V0TW9kdWxlQnlOYW1lc3BhY2UiLCJ2dWV4IiwibWFwTXV0YXRpb25zIiwibWFwR2V0dGVycyIsIm1hcEFjdGlvbnMiLCJpc1ZhbGlkTWFwIiwiaGVscGVyIiwiaW5kZXhfZXNtIiwiY3JlYXRlTmFtZXNwYWNlZEhlbHBlcnMiLCJpc0Vycm9yIiwiaXNFeHRlbmRlZEVycm9yIiwiX25hbWUiLCJWaWV3Iiwicm91dGVyVmlldyIsInJvdXRlIiwiJHJvdXRlIiwiX3JvdXRlclZpZXdDYWNoZSIsImRlcHRoIiwiaW5hY3RpdmUiLCJfcm91dGVyUm9vdCIsInZub2RlRGF0YSIsInJvdXRlclZpZXdEZXB0aCIsImNhY2hlZERhdGEiLCJjYWNoZWRDb21wb25lbnQiLCJjb25maWdQcm9wcyIsImZpbGxQcm9wc2luRGF0YSIsIm1hdGNoZWQiLCJyZWdpc3RlclJvdXRlSW5zdGFuY2UiLCJpbnN0YW5jZXMiLCJwcm9wc1RvUGFzcyIsInJlc29sdmVQcm9wcyIsImVuY29kZVJlc2VydmVSRSIsImVuY29kZVJlc2VydmVSZXBsYWNlciIsImNvbW1hUkUiLCJlbmNvZGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJkZWNvZGUiLCJkZWNvZGVVUklDb21wb25lbnQiLCJwYXJzZVF1ZXJ5IiwicGFyYW0iLCJwYXJ0cyIsInN0cmluZ2lmeVF1ZXJ5IiwidmFsMiIsIngiLCJ0cmFpbGluZ1NsYXNoUkUiLCJjcmVhdGVSb3V0ZSIsInJlY29yZCIsImxvY2F0aW9uIiwicmVkaXJlY3RlZEZyb20iLCJyb3V0ZXIiLCJmdWxsUGF0aCIsImdldEZ1bGxQYXRoIiwiZm9ybWF0TWF0Y2giLCJTVEFSVCIsIl9zdHJpbmdpZnlRdWVyeSIsImlzU2FtZVJvdXRlIiwiaXNPYmplY3RFcXVhbCIsImFLZXlzIiwiYktleXMiLCJhVmFsIiwiYlZhbCIsInJlc29sdmVQYXRoIiwicmVsYXRpdmUiLCJhcHBlbmQiLCJmaXJzdENoYXIiLCJzZWdtZW50IiwiY2xlYW5QYXRoIiwiaXNhcnJheSIsInBhdGhUb1JlZ2V4cF8xIiwicGF0aFRvUmVnZXhwIiwicGFyc2VfMSIsImNvbXBpbGVfMSIsInRva2Vuc1RvRnVuY3Rpb24iLCJ0b2tlbnNUb0Z1bmN0aW9uXzEiLCJ0b2tlbnNUb1JlZ0V4cF8xIiwidG9rZW5zVG9SZWdFeHAiLCJQQVRIX1JFR0VYUCIsImRlZmF1bHREZWxpbWl0ZXIiLCJkZWxpbWl0ZXIiLCJlc2NhcGVkIiwib2Zmc2V0IiwiZ3JvdXAiLCJtb2RpZmllciIsImFzdGVyaXNrIiwicmVwZWF0Iiwib3B0aW9uYWwiLCJlc2NhcGVHcm91cCIsImVzY2FwZVN0cmluZyIsInN1YnN0ciIsImVuY29kZVVSSUNvbXBvbmVudFByZXR0eSIsImVuY29kZVVSSSIsInByZXR0eSIsInRva2VuIiwiVHlwZUVycm9yIiwiYXR0YWNoS2V5cyIsImZsYWdzIiwic2Vuc2l0aXZlIiwiZW5kc1dpdGhEZWxpbWl0ZXIiLCJncm91cHMiLCJyZWdleHBUb1JlZ2V4cCIsImFycmF5VG9SZWdleHAiLCJzdHJpbmdUb1JlZ2V4cCIsInJlZ2V4cENvbXBpbGVDYWNoZSIsImZpbGxQYXJhbXMiLCJyb3V0ZU1zZyIsImZpbGxlciIsInBhdGhNYXRjaCIsIm5vcm1hbGl6ZUxvY2F0aW9uIiwicGFyYW1zJDEiLCJyYXdQYXRoIiwicGFyc2VkUGF0aCIsImhhc2hJbmRleCIsInF1ZXJ5SW5kZXgiLCJiYXNlUGF0aCIsImV4dHJhUXVlcnkiLCJfcGFyc2VRdWVyeSIsInBhcnNlZFF1ZXJ5IiwicmVzb2x2ZVF1ZXJ5IiwiTGluayIsInJlcXVpcmVkIiwiZXhhY3QiLCJleGFjdEFjdGl2ZUNsYXNzIiwiJHJvdXRlciIsImNsYXNzZXMiLCJnbG9iYWxBY3RpdmVDbGFzcyIsImxpbmtBY3RpdmVDbGFzcyIsImdsb2JhbEV4YWN0QWN0aXZlQ2xhc3MiLCJsaW5rRXhhY3RBY3RpdmVDbGFzcyIsImFjdGl2ZUNsYXNzRmFsbGJhY2siLCJleGFjdEFjdGl2ZUNsYXNzRmFsbGJhY2siLCJjb21wYXJlVGFyZ2V0IiwicXVlcnlJbmNsdWRlcyIsImlzSW5jbHVkZWRSb3V0ZSIsImd1YXJkRXZlbnQiLCJjbGljayIsInNjb3BlZFNsb3QiLCJuYXZpZ2F0ZSIsImlzQWN0aXZlIiwiaXNFeGFjdEFjdGl2ZSIsImZpbmRBbmNob3IiLCJhRGF0YSIsImhhbmRsZXIkMSIsImV2ZW50JDEiLCJtZXRhS2V5IiwiY3RybEtleSIsInNoaWZ0S2V5IiwiZGVmYXVsdFByZXZlbnRlZCIsImJ1dHRvbiIsInByZXZlbnREZWZhdWx0IiwiY3JlYXRlUm91dGVNYXAiLCJyb3V0ZXMiLCJvbGRQYXRoTGlzdCIsIm9sZFBhdGhNYXAiLCJvbGROYW1lTWFwIiwicGF0aExpc3QiLCJwYXRoTWFwIiwibmFtZU1hcCIsImFkZFJvdXRlUmVjb3JkIiwibWF0Y2hBcyIsInBhdGhUb1JlZ2V4cE9wdGlvbnMiLCJub3JtYWxpemVkUGF0aCIsIm5vcm1hbGl6ZVBhdGgiLCJjYXNlU2Vuc2l0aXZlIiwicmVnZXgiLCJjb21waWxlUm91dGVSZWdleCIsInJlZGlyZWN0IiwiY2hpbGRNYXRjaEFzIiwiYWxpYXNlcyIsImFsaWFzUm91dGUiLCJjcmVhdGVNYXRjaGVyIiwiY3VycmVudFJvdXRlIiwiX2NyZWF0ZVJvdXRlIiwicGFyYW1OYW1lcyIsInJlY29yZCQxIiwibWF0Y2hSb3V0ZSIsIm9yaWdpbmFsUmVkaXJlY3QiLCJyZXNvbHZlUmVjb3JkUGF0aCIsImFsaWFzZWRNYXRjaCIsImFsaWFzZWRSZWNvcmQiLCJhZGRSb3V0ZXMiLCJUaW1lIiwiZ2VuU3RhdGVLZXkiLCJ0b0ZpeGVkIiwiX2tleSIsImdldFN0YXRlS2V5Iiwic2V0U3RhdGVLZXkiLCJwb3NpdGlvblN0b3JlIiwic2V0dXBTY3JvbGwiLCJwcm90b2NvbEFuZFBhdGgiLCJwcm90b2NvbCIsImhvc3QiLCJhYnNvbHV0ZVBhdGgiLCJoaXN0b3J5Iiwic2F2ZVNjcm9sbFBvc2l0aW9uIiwiaGFuZGxlU2Nyb2xsIiwiaXNQb3AiLCJhcHAiLCJiZWhhdmlvciIsInNjcm9sbEJlaGF2aW9yIiwicG9zaXRpb24iLCJnZXRTY3JvbGxQb3NpdGlvbiIsInNob3VsZFNjcm9sbCIsInNjcm9sbFRvUG9zaXRpb24iLCJwYWdlWE9mZnNldCIsInkiLCJwYWdlWU9mZnNldCIsImlzVmFsaWRQb3NpdGlvbiIsImlzTnVtYmVyIiwibm9ybWFsaXplUG9zaXRpb24iLCJoYXNoU3RhcnRzV2l0aE51bWJlclJFIiwic2VsZWN0b3IiLCJnZXRFbGVtZW50QnlJZCIsImRvY1JlY3QiLCJlbFJlY3QiLCJnZXRFbGVtZW50UG9zaXRpb24iLCJzY3JvbGxUbyIsInVhIiwic3VwcG9ydHNQdXNoU3RhdGUiLCJwdXNoU3RhdGUiLCJ1cmwiLCJzdGF0ZUNvcHkiLCJydW5RdWV1ZSIsInN0ZXAiLCJyZXNvbHZlQXN5bmNDb21wb25lbnRzIiwiaGFzQXN5bmMiLCJmbGF0TWFwQ29tcG9uZW50cyIsInJlc29sdmVkRGVmIiwiRXJyb3IiLCJmbGF0dGVuIiwiTmF2aWdhdGlvbkR1cGxpY2F0ZWQiLCJub3JtYWxpemVkTG9jYXRpb24iLCJtZXNzYWdlIiwiSGlzdG9yeSIsImJhc2VFbCIsIm5vcm1hbGl6ZUJhc2UiLCJyZWFkeSIsInJlYWR5Q2JzIiwicmVhZHlFcnJvckNicyIsImVycm9yQ2JzIiwiZXh0cmFjdEd1YXJkcyIsInJlY29yZHMiLCJyZXZlcnNlIiwiZ3VhcmRzIiwiaW5zdGFuY2UiLCJndWFyZCIsImV4dHJhY3RHdWFyZCIsImJpbmRHdWFyZCIsImxpc3RlbiIsIm9uUmVhZHkiLCJlcnJvckNiIiwib25FcnJvciIsInRyYW5zaXRpb25UbyIsIm9uQ29tcGxldGUiLCJvbkFib3J0IiwiY29uZmlybVRyYW5zaXRpb24iLCJ1cGRhdGVSb3V0ZSIsImVuc3VyZVVSTCIsImFib3J0IiwiYWN0aXZhdGVkIiwiZGVhY3RpdmF0ZWQiLCJyZXNvbHZlUXVldWUiLCJleHRyYWN0TGVhdmVHdWFyZHMiLCJiZWZvcmVIb29rcyIsImV4dHJhY3RVcGRhdGVIb29rcyIsInBvc3RFbnRlckNicyIsImlzVmFsaWQiLCJwb2xsIiwiYmluZEVudGVyR3VhcmQiLCJleHRyYWN0RW50ZXJHdWFyZHMiLCJyZXNvbHZlSG9va3MiLCJhZnRlckhvb2tzIiwiSFRNTDVIaXN0b3J5IiwiZXhwZWN0U2Nyb2xsIiwic3VwcG9ydHNTY3JvbGwiLCJpbml0TG9jYXRpb24iLCJnZXRMb2NhdGlvbiIsImdvIiwiZnJvbVJvdXRlIiwiZ2V0Q3VycmVudExvY2F0aW9uIiwiZGVjb2RlVVJJIiwicGF0aG5hbWUiLCJzZWFyY2giLCJIYXNoSGlzdG9yeSIsImNoZWNrRmFsbGJhY2siLCJlbnN1cmVTbGFzaCIsInNldHVwTGlzdGVuZXJzIiwiZ2V0SGFzaCIsInJlcGxhY2VIYXNoIiwicHVzaEhhc2giLCJzZWFyY2hJbmRleCIsImdldFVybCIsIkFic3RyYWN0SGlzdG9yeSIsInRhcmdldEluZGV4IiwiVnVlUm91dGVyIiwiYXBwcyIsIm1hdGNoZXIiLCJyZWdpc3Rlckhvb2siLCJzZXR1cEhhc2hMaXN0ZW5lciIsIl9yb3V0ZSIsImJlZm9yZUVhY2giLCJiZWZvcmVSZXNvbHZlIiwiYWZ0ZXJFYWNoIiwiYmFjayIsImZvcndhcmQiLCJnZXRNYXRjaGVkQ29tcG9uZW50cyIsImNyZWF0ZUhyZWYiLCJub3JtYWxpemVkVG8iLCJpbnN0YWxsZWQiLCJyZWdpc3Rlckluc3RhbmNlIiwiY2FsbFZhbCIsIl9yb3V0ZXIiLCJiZWZvcmVSb3V0ZUVudGVyIiwiYmVmb3JlUm91dGVMZWF2ZSIsImJlZm9yZVJvdXRlVXBkYXRlIiwibm9ybWFsaXplQ29tcG9uZW50Iiwic2NyaXB0RXhwb3J0cyIsImZ1bmN0aW9uYWxUZW1wbGF0ZSIsImluamVjdFN0eWxlcyIsIm1vZHVsZUlkZW50aWZpZXIiLCJzaGFkb3dNb2RlIiwiX19WVUVfU1NSX0NPTlRFWFRfXyIsIl9yZWdpc3RlcmVkQ29tcG9uZW50cyIsIl9zc3JSZWdpc3RlciIsInNoYWRvd1Jvb3QiLCJfaW5qZWN0U3R5bGVzIiwib3JpZ2luYWxSZW5kZXIiLCJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwibG9hZGVkIiwiWEhSIiwiSGFuZGxlciIsIlV0aWwiLCJSYW5kb20iLCJSRSIsInRvSlNPTlNjaGVtYSIsInZhbGlkIiwiTW9jayIsImhlcmVkb2MiLCJzZXR1cCIsInNldHRpbmdzIiwiX21vY2tlZCIsIm1vY2siLCJydXJsIiwicnR5cGUiLCJYTUxIdHRwUmVxdWVzdCIsIkNvbnN0YW50IiwiUGFyc2VyIiwiR1VJRCIsInRlbXBsYXRlUGF0aCIsImN1cnJlbnRDb250ZXh0IiwidGVtcGxhdGVDdXJyZW50Q29udGV4dCIsInRlbXBsYXRlUm9vdCIsInJ1bGUiLCJwYXJzZWROYW1lIiwiUkVfS0VZIiwiYXJyYXkiLCJpaSIsInBhcmFtZXRlcnMiLCJtaW4iLCJwaWNrIiwiX19vcmRlcl9pbmRleCIsImNvdW50Iiwib2JqZWN0IiwiZm5LZXlzIiwicGFyc2VkS2V5IiwiaW5jIiwic2h1ZmZsZSIsImRlY2ltYWwiLCJkY291bnQiLCJjaGFyYWN0ZXIiLCJib29sZWFuIiwiYm9vbCIsInN0cmluZyIsInBsYWNlaG9sZGVycyIsInBoIiwicGhlZCIsIlJFX1BMQUNFSE9MREVSIiwiX2FsbCIsInRlbXBsYXRlQ29udGV4dCIsImxrZXkiLCJva2V5IiwicGF0aFBhcnRzIiwic3BsaXRQYXRoVG9BcnJheSIsImV2YWwiLCJnZXRWYWx1ZUJ5S2V5UGF0aCIsImhhbmRsZSIsIm9yaWdpbmFsS2V5Iiwia2V5UGF0aFBhcnRzIiwiYWJzb2x1dGVQYXRoUGFydHMiLCJuZXdQYXRoUGFydHMiLCJSRV9SQU5HRSIsImNvcHkiLCJlYWNoIiwiaXNPYmplY3RPckFycmF5IiwiaXNOdW1lcmljIiwiaW50ZWdlciIsImRtaW4iLCJkbWF4IiwiciIsInJhbmRvbSIsIm5hdHVyYWwiLCJyb3VuZCIsImludCIsImZsb2F0IiwicG9vbCIsInBvb2xzIiwibG93ZXIiLCJ1cHBlciIsImFscGhhIiwiY2hhciIsImNlaWwiLCJpZHgiLCJwYXR0ZXJuTGV0dGVycyIsInl5eXkiLCJ5eSIsImRhdGUiLCJnZXRGdWxsWWVhciIsIk1NIiwiZ2V0TW9udGgiLCJNIiwiZGQiLCJnZXREYXRlIiwiSEgiLCJnZXRIb3VycyIsIkgiLCJoaCIsIm1tIiwiZ2V0TWludXRlcyIsInNzIiwiZ2V0U2Vjb25kcyIsIlNTIiwibXMiLCJnZXRNaWxsaXNlY29uZHMiLCJTIiwiQSIsIlQiLCJfcGF0dGVybkxldHRlcnMiLCJfcmZvcm1hdCIsIl9mb3JtYXREYXRlIiwiZm9ybWF0IiwiY3JlYXROZXdTdWJTdHJpbmciLCIkMCIsImZsYWciLCJfcmFuZG9tRGF0ZSIsInRpbWUiLCJkYXRldGltZSIsInVuaXQiLCJzZXRNb250aCIsInNldERhdGUiLCJzZXRIb3VycyIsInNldE1pbnV0ZXMiLCJzZXRTZWNvbmRzIiwic2V0TWlsbGlzZWNvbmRzIiwiZ2V0RGF5IiwiX2FkU2l6ZSIsIl9zY3JlZW5TaXplIiwiX3ZpZGVvU2l6ZSIsImltYWdlIiwic2l6ZSIsImJhY2tncm91bmQiLCJmb3JlZ3JvdW5kIiwiaW1nIiwiX2JyYW5kQ29sb3JzIiwiX2JyYW5kTmFtZXMiLCJicmFuZHMiLCJkYXRhSW1hZ2UiLCJjYW52YXMiLCJyZXF1aXJlIiwiZ2V0Q29udGV4dCIsIndpZHRoIiwiaGVpZ2h0IiwidGV4dEFsaWduIiwidGV4dEJhc2VsaW5lIiwiZmlsbFN0eWxlIiwiZmlsbFJlY3QiLCJmb250IiwiZmlsbFRleHQiLCJ0b0RhdGFVUkwiLCJ3ZWJwYWNrUG9seWZpbGwiLCJkZXByZWNhdGUiLCJwYXRocyIsIkNvbnZlcnQiLCJESUNUIiwiY29sb3IiLCJuaWNlciIsImhleCIsImhzdiIsIl9nb2xkZW5SYXRpb0NvbG9yIiwicmdiIiwiaHN2MnJnYiIsInJnYjJoZXgiLCJyZ2JhIiwiaHNsIiwiaHN2MmhzbCIsInNhdHVyYXRpb24iLCJfZ29sZGVuUmF0aW8iLCJfaHVlIiwicmdiMmhzbCIsImRlbHRhIiwicmdiMmhzdiIsImhzbDJyZ2IiLCJ0MSIsInQyIiwidDMiLCJoc2wyaHN2IiwiaGkiLCJmIiwicSIsInQiLCJzbCIsImhleDJyZ2IiLCJuYXZ5IiwiYmx1ZSIsImFxdWEiLCJ0ZWFsIiwib2xpdmUiLCJncmVlbiIsImxpbWUiLCJ5ZWxsb3ciLCJvcmFuZ2UiLCJyZWQiLCJtYXJvb24iLCJmdWNoc2lhIiwicHVycGxlIiwic2lsdmVyIiwiZ3JheSIsImJsYWNrIiwid2hpdGUiLCJCYXNpYyIsIkhlbHBlciIsImRlZmF1bHRNaW4iLCJkZWZhdWx0TWF4IiwicGFyYWdyYXBoIiwic2VudGVuY2UiLCJjcGFyYWdyYXBoIiwiY3NlbnRlbmNlIiwid29yZCIsImN3b3JkIiwiRElDVF9LQU5aSSIsInRpdGxlIiwiY3RpdGxlIiwib3JkZXIiLCJmaXJzdCIsIm5hbWVzIiwiY2ZpcnN0IiwiY2xhc3QiLCJjbmFtZSIsImRvbWFpbiIsInRsZCIsImVtYWlsIiwiaXAiLCJSRUdJT04iLCJyZWdpb24iLCJwcm92aW5jZSIsImNpdHkiLCJjb3VudHkiLCJ6aXAiLCJESUNUX0ZJWEVEIiwiZml4ZWQiLCJwaWQiLCJtYXBwZWQiLCJwYXJlbnRJZCIsImQ0IiwiZDYiLCJkOCIsImQxMiIsImQyMCIsImQxMDAiLCJndWlkIiwidXVpZCIsInN1bSIsInJhbmsiLCJpbmNyZW1lbnQiLCJUb2tlbiIsIkFsdGVybmF0ZSIsIk1hdGNoIiwiR3JvdXAiLCJDYXB0dXJlR3JvdXAiLCJjZ3MiLCJRdWFudGlmaWVkIiwicXVhbnRpZmllciIsIlF1YW50aWZpZXIiLCJncmVlZHkiLCJDaGFyU2V0IiwiaW52ZXJ0IiwiQ2hhcmFjdGVyUmFuZ2UiLCJMaXRlcmFsIiwiVW5pY29kZSIsIkhleCIsIk9jdGFsIiwiQmFja1JlZmVyZW5jZSIsIkNvbnRyb2xDaGFyYWN0ZXIiLCJwYXJzZXIiLCJ1IiwiZXhwZWN0ZWQiLCJmb3VuZCIsImxpbmUiLCJjb2x1bW4iLCJTeW50YXhFcnJvciIsIkx0IiwicXQiLCJNdCIsIkR0Iiwic2VlbkNSIiwiSHQiLCJPdCIsImZsIiwiV3QiLCJpbCIsImFsIiwiaGwiLCJkbCIsIlEiLCJCIiwicGwiLCJ2bCIsIndsIiwiQWwiLCJDbCIsImdsIiwiYmwiLCJrIiwiVGwiLCJrbCIsInciLCJDIiwieGwiLCJ5bCIsIm1sIiwiUmwiLCJGbCIsIlFsIiwiU2wiLCJVbCIsIkVsIiwiR2wiLCJCbCIsImpsIiwiJGwiLCJxbCIsIkxsIiwiTWwiLCJEbCIsIkhsIiwiT2wiLCJXbCIsInpsIiwiSWwiLCJKbCIsIktsIiwiTmwiLCJSIiwiRiIsIlBsIiwiVmwiLCJYbCIsIllsIiwiWmwiLCJudSIsImx1IiwidXUiLCJ0dSIsInJ1IiwiZXUiLCJvdSIsIml1IiwiYXUiLCJVIiwiZnUiLCJzdSIsImh1IiwiY3UiLCJwdSIsInZ1Iiwid3UiLCJkdSIsIkciLCJFIiwiQXUiLCJDdSIsImd1IiwiYnUiLCJMIiwiWSIsIk8iLCJXIiwieiIsIkkiLCJKIiwiSyIsIk4iLCJQIiwiViIsIlgiLCJubCIsImxsIiwidWwiLCJ0bCIsIiQiLCJrdSIsIlR1IiwieHUiLCJtdSIsIlJ1IiwieXUiLCJEIiwiWiIsIkZ1IiwiUXUiLCJTdSIsIlV1IiwiRXUiLCJHdSIsIkJ1IiwianUiLCIkdSIsInF1IiwiTHUiLCJNdSIsIkR1IiwiSHUiLCJPdSIsIld1IiwienUiLCJJdSIsIkp1IiwiS3UiLCJOdSIsIlB1IiwiVnUiLCJYdSIsIll1IiwiWnUiLCJudCIsImx0IiwidXQiLCJ0dCIsInJ0IiwiZXQiLCJvdCIsImN0IiwiaXQiLCJhdCIsImZ0Iiwic3QiLCJodCIsImR0IiwicHQiLCJ2dCIsInd0IiwiQXQiLCJDdCIsImd0IiwiYnQiLCJrdCIsIlR0IiwieHQiLCJ5dCIsIm10IiwiUnQiLCJGdCIsIlF0IiwiU3QiLCJVdCIsIkV0IiwiR3QiLCJCdCIsImp0IiwiJHQiLCJybCIsIm9sIiwicmVnZXhwIiwiY2wiLCJzdGFydFJ1bGUiLCJMT1dFUiIsImFzY2lpIiwiVVBQRVIiLCJOVU1CRVIiLCJPVEhFUiIsIlBSSU5UQUJMRSIsIlNQQUNFIiwiQ0hBUkFDVEVSX0NMQVNTRVMiLCJmcm9tQ2hhckNvZGUiLCJhbHRlcm5hdGUiLCJxdWFudGlmaWVkIiwiY2hhcnNldCIsImxpdGVyYWwiLCJjaGFyYWN0ZXJzIiwiaWlpIiwidW5pY29kZSIsIm9jdGFsIiwiQ09OVFJPTF9DSEFSQUNURVJfTUFQIiwiQ09OVFJPTF9DSEFSQUNURVIiLCJDT05UUk9MX0NIQVJBQ1RFUl9VTklDT0RFIiwicHJvcGVydGllcyIsInNjaGVtYSIsIkRpZmYiLCJkaWZmIiwiQXNzZXJ0IiwiZXF1YWwiLCJhY3R1YWxSZXBlYXRDb3VudCIsInRlbXBsYXRlVHlwZSIsImdyZWF0ZXJUaGFuT3JFcXVhbFRvIiwibGVzc1RoYW5PckVxdWFsVG8iLCJub3RFcXVhbCIsImdyZWF0ZXJUaGFuIiwibGVzc1RoYW4iLCJfWE1MSHR0cFJlcXVlc3QiLCJfQWN0aXZlWE9iamVjdCIsIkFjdGl2ZVhPYmplY3QiLCJFdmVudCIsImV4Y2VwdGlvbiIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwiZGV0YWlsIiwiaW5pdEN1c3RvbUV2ZW50IiwiWEhSX1NUQVRFUyIsIlVOU0VOVCIsIk9QRU5FRCIsIkhFQURFUlNfUkVDRUlWRUQiLCJMT0FESU5HIiwiRE9ORSIsIlhIUl9FVkVOVFMiLCJYSFJfUkVRVUVTVF9QUk9QRVJUSUVTIiwiWEhSX1JFU1BPTlNFX1BST1BFUlRJRVMiLCJIVFRQX1NUQVRVU19DT0RFUyIsIk1vY2tYTUxIdHRwUmVxdWVzdCIsImN1c3RvbSIsInJlcXVlc3RIZWFkZXJzIiwicmVzcG9uc2VIZWFkZXJzIiwiX3NldHRpbmdzIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsInRoYXQiLCJzVXJsVHlwZSIsImZpbmQiLCJ4aHIiLCJyZWFkeVN0YXRlIiwiYWpheExvY2F0aW9uIiwiYWpheExvY1BhcnRzIiwiaXNMb2NhbCIsImNyZWF0ZVN0YW5kYXJkWEhSIiwiY3JlYXRlQWN0aXZlWEhSIiwiY3JlYXRlTmF0aXZlWE1MSHR0cFJlcXVlc3QiLCJzZXRSZXF1ZXN0SGVhZGVyIiwid2l0aENyZWRlbnRpYWxzIiwidXBsb2FkIiwic2VuZCIsInN0YXR1cyIsInN0YXR1c1RleHQiLCJyZXNwb25zZSIsInJlc3BvbnNlVGV4dCIsImlzRnVuY3Rpb24iLCJyZXNwb25zZVVSTCIsImdldFJlc3BvbnNlSGVhZGVyIiwiZ2V0QWxsUmVzcG9uc2VIZWFkZXJzIiwiaGVhZGVycyIsIm92ZXJyaWRlTWltZVR5cGUiLCJyZXNwb25zZVR5cGUiLCJyZXNwb25zZVhNTCIsImhhbmRsZXMiLCJvbnR5cGUiLCJjYWNoZWRTZXRUaW1lb3V0IiwiY2FjaGVkQ2xlYXJUaW1lb3V0IiwicHJvY2VzcyIsImRlZmF1bHRTZXRUaW1vdXQiLCJkZWZhdWx0Q2xlYXJUaW1lb3V0IiwicnVuVGltZW91dCIsImZ1biIsImN1cnJlbnRRdWV1ZSIsImRyYWluaW5nIiwicXVldWVJbmRleCIsImNsZWFuVXBOZXh0VGljayIsImRyYWluUXVldWUiLCJtYXJrZXIiLCJydW5DbGVhclRpbWVvdXQiLCJJdGVtIiwiYnJvd3NlciIsImFyZ3YiLCJ2ZXJzaW9ucyIsImFkZExpc3RlbmVyIiwib2ZmIiwicmVtb3ZlTGlzdGVuZXIiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiLCJwcmVwZW5kTGlzdGVuZXIiLCJwcmVwZW5kT25jZUxpc3RlbmVyIiwiY3dkIiwiY2hkaXIiLCJ1bWFzayIsIlRpbWVvdXQiLCJjbGVhckZuIiwiX2lkIiwiX2NsZWFyRm4iLCJzY29wZSIsInNldEludGVydmFsIiwiY2xlYXJJbnRlcnZhbCIsInVucmVmIiwiZW5yb2xsIiwibXNlY3MiLCJfaWRsZVRpbWVvdXRJZCIsIl9pZGxlVGltZW91dCIsInVuZW5yb2xsIiwiX3VucmVmQWN0aXZlIiwiX29uVGltZW91dCIsImNsZWFySW1tZWRpYXRlIiwicmVnaXN0ZXJJbW1lZGlhdGUiLCJjaGFubmVsIiwibWVzc2FnZVByZWZpeCIsIm9uR2xvYmFsTWVzc2FnZSIsIm5leHRIYW5kbGUiLCJ0YXNrc0J5SGFuZGxlIiwiY3VycmVudGx5UnVubmluZ0FUYXNrIiwiZG9jIiwiYXR0YWNoVG8iLCJnZXRQcm90b3R5cGVPZiIsInJ1bklmUHJlc2VudCIsInBvc3RNZXNzYWdlIiwiaW1wb3J0U2NyaXB0cyIsInBvc3RNZXNzYWdlSXNBc3luY2hyb25vdXMiLCJvbGRPbk1lc3NhZ2UiLCJvbm1lc3NhZ2UiLCJjYW5Vc2VQb3N0TWVzc2FnZSIsIk1lc3NhZ2VDaGFubmVsIiwicG9ydDEiLCJwb3J0MiIsInNjcmlwdCIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsImF0dGFjaEV2ZW50IiwidGFzayIsIlB0IiwienQiLCJWdCIsIlh0IiwibmUiLCJvZSIsInNlIiwidWUiLCJsZSIsImNlIiwiZGUiLCJmZSIsImdlIiwiQWUiLCJDZSIsIkRlIiwiTmUiLCJGZSIsIkllIiwiQmUiLCJIZSIsIlVlIiwiR2UiLCJxZSIsIlZlIiwiWGUiLCJKZSIsIlplIiwidG4iLCJlbiIsIm5uIiwicm4iLCJhbiIsInNuIiwibG4iLCJobiIsInBuIiwiZG4iLCJnbiIsIm1uIiwiYm4iLCJ5biIsInduIiwieG4iLCJrbiIsIiRuIiwiaXNPYmoiLCJpc0Jyb3dzZXIiLCJzcGxpdENhc2UiLCJjYW1lbENhc2UiLCJrZWJhYkNhc2UiLCJjbGFtcCIsImlkeE9mIiwiaW5oZXJpdHMiLCJ0b1N0ciIsImRlYm91bmNlIiwidWNzMiIsImZyb21Db2RlUG9pbnQiLCJ1dGY4IiwiZGV0ZWN0TW9jaGEiLCJkZXRlY3RPcyIsInJlc3RBcmdzIiwib3B0aW1pemVDYiIsInR5cGVzIiwiZW5kV2l0aCIsImVzY2FwZSIsImVzY2FwZUpzU3RyIiwiZXNjYXBlSnNvblN0ciIsImVzY2FwZVJlZ0V4cCIsImZpbGVTaXplIiwibG9nIiwicG93IiwiZnVsbFVybCIsInVwcGVyRmlyc3QiLCJnZXRPYmpUeXBlIiwib2JqVG9TdHIiLCJpc0FyZ3MiLCJpc0FyciIsImNhc3RQYXRoIiwic2FmZUdldCIsImlzRGF0ZSIsImlzRm4iLCJnZXRQcm90byIsImlzTWluaVByb2dyYW0iLCJ3eCIsIm9wZW5Mb2NhdGlvbiIsImlzTnVtIiwiaXNBcnJMaWtlIiwiY3JlYXRlQXNzaWduZXIiLCJleHRlbmRPd24iLCJpc1N0ciIsImNvbnRhaW4iLCJpc0VtcHR5IiwiaXNCb29sIiwic3RhcnRXaXRoIiwiaXNDcm9zc09yaWciLCJvcmlnaW4iLCJpc0VsIiwiaXNFcnIiLCJpc0hpZGRlbiIsImJvdHRvbSIsInZpc2liaWxpdHkiLCJvcGFjaXR5Iiwidmlld3BvcnQiLCJvdmVyZmxvdyIsIm9mZnNldFBhcmVudCIsInBhcmVudEVsZW1lbnQiLCJjbGllbnRXaWR0aCIsImNsaWVudEhlaWdodCIsImlzTWF0Y2giLCJOdCIsIm1lbW9pemUiLCJpc01vYmlsZSIsImRhc2giLCJJdCIsImlzTmlsIiwidG9TcmMiLCJpc051bGwiLCJLdCIsImlzU29ydGVkIiwiZGVmQ29tcGFyYXRvciIsImxvYWRKcyIsIm9ubG9hZCIsImxvd2VyQ2FzZSIsInRvTG9jYWxlTG93ZXJDYXNlIiwiWXQiLCJKdCIsImxwYWQiLCJkYXRlRm9ybWF0IiwibWFza3MiLCJnZXRUaW1lem9uZU9mZnNldCIsImRkZCIsImkxOG4iLCJkYXlOYW1lcyIsImRkZGQiLCJtbW0iLCJtb250aE5hbWVzIiwibW1tbSIsIlRUIiwiYWJzIiwic2hvcnREYXRlIiwibWVkaXVtRGF0ZSIsImxvbmdEYXRlIiwiZnVsbERhdGUiLCJzaG9ydFRpbWUiLCJtZWRpdW1UaW1lIiwibG9uZ1RpbWUiLCJpc29EYXRlIiwiaXNvVGltZSIsImlzb0RhdGVUaW1lIiwiaXNvVXRjRGF0ZVRpbWUiLCJleHBpcmVzSGVhZGVyRm9ybWF0IiwiWnQiLCJsdHJpbSIsInRlIiwiZWUiLCJzYWZlQ2IiLCJpZSIsImRpZmZlcmVuY2UiLCJ1bmlxdWUiLCJhZSIsImFsbEtleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJ1bmVudW1lcmFibGUiLCJkZWZhdWx0cyIsImhpZ2hsaWdodCIsImxhbmd1YWdlIiwiZW1iZWQiLCJrZXl3b3JkIiwib3BlcmF0b3IiLCJqcyIsIm51bWJlcnMiLCJrZXl3b3JkcyIsImZvbnRTaXplIiwiYm9yZGVyIiwicGFkZGluZyIsIm1hcmdpbiIsInNlbGVjdCIsInNldFNlbGVjdGlvblJhbmdlIiwiZXhlY0NvbW1hbmQiLCJkZWNvZGVVcmlDb21wb25lbnQiLCJwZSIsImNvb2tpZSIsImV4cGlyZXMiLCJ0b1VUQ1N0cmluZyIsInNlY3VyZSIsInRvQXJyIiwiQ2xhc3MiLCJCYXNlIiwiY2xhc3NOYW1lIiwiaW5pdGlhbGl6ZSIsInN0YXRpY3MiLCJjYWxsU3VwZXIiLCJ2ZSIsIkVudW0iLCJXZWJLaXRNdXRhdGlvbk9ic2VydmVyIiwiTW96TXV0YXRpb25PYnNlcnZlciIsImRpc2Nvbm5lY3QiLCJ0YWtlUmVjb3JkcyIsIm1lIiwiU2VsZWN0IiwicXVlcnlTZWxlY3RvckFsbCIsImJlIiwiJHNhZmVFbHMiLCJ5ZSIsIiRhdHRyIiwid2UiLCIkY3NzIiwiZ2V0UHJvcGVydHlWYWx1ZSIsInhlIiwiJGRhdGEiLCJrZSIsIiRpbnNlcnQiLCJpbnNlcnRBZGphY2VudEhUTUwiLCIkZSIsIiRvZmZzZXQiLCJPZSIsIiRwcm9wZXJ0eSIsIkVlIiwiJHJlbW92ZSIsImplIiwiJHNob3ciLCJub2RlTmFtZSIsIlN0YWNrIiwiX2l0ZW1zIiwicGVlayIsIlNlIiwiZGVsZWdhdGUiLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsImN1clRhcmdldCIsImlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkIiwic3RvcFByb3BhZ2F0aW9uIiwiZGVsZWdhdGVDb3VudCIsIm9yaWdFdmVudCIsImlzRGVmYXVsdFByZXZlbnRlZCIsIlRlIiwiUGUiLCJtYXBPYmoiLCJjbG9uZURlZXAiLCJSZSIsIkxlIiwiJGNsYXNzIiwidG9nZ2xlIiwiaGlkZSIsImVxIiwicm1BdHRyIiwicm1DbGFzcyIsInRvZ2dsZUNsYXNzIiwiaGFzQ2xhc3MiLCJNZSIsIm1lbVN0b3JhZ2UiLCJnZXRJdGVtIiwic2V0SXRlbSIsInJlbW92ZUl0ZW0iLCJzYWZlU3RvcmFnZSIsImxvY2FsU3RvcmFnZSIsInNlc3Npb25TdG9yYWdlIiwiemUiLCJoZWFkIiwidG9OdW0iLCJ2YWx1ZU9mIiwidG9JbnQiLCJkZXRlY3RCcm93c2VyIiwiZWRnZSIsImZpcmVmb3giLCJvcGVyYSIsImFuZHJvaWQiLCJpb3MiLCJzYWZhcmkiLCJjaHJvbWUiLCJXZSIsIktlIiwiRW1pdHRlciIsIkxvZ2dlciIsInNldExldmVsIiwibGV2ZWwiLCJERUJVRyIsIl9sZXZlbCIsImdldExldmVsIiwiZm9ybWF0dGVyIiwidHJhY2UiLCJfbG9nIiwiZGVidWciLCJUUkFDRSIsIklORk8iLCJXQVJOIiwiRVJST1IiLCJTSUxFTlQiLCJZZSIsIk1lZGlhUXVlcnkiLCJfbXFsIiwibWF0Y2hNZWRpYSIsImlzRGFya01vZGUiLCJRZSIsInNhdmUiLCJvcmllbnRhdGlvbiIsInNjcmVlbiIsImlubmVyV2lkdGgiLCJpbm5lckhlaWdodCIsInBlcmZOb3ciLCJocnRpbWUiLCJ1cHRpbWUiLCJweFRvTnVtIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJjYW5jZWwiLCJybUNvb2tpZSIsImhvc3RuYW1lIiwicnRyaW0iLCJ1biIsImV4dHJhY3RVcmxzIiwibGlua2lmeSIsImNuIiwiVXJsIiwic2V0UXVlcnkiLCJybVF1ZXJ5IiwiYXV0aCIsInBvcnQiLCJzbGFzaGVzIiwiZ2V0RmlsZU5hbWUiLCJhamF4Iiwic3VjY2VzcyIsImRhdGFUeXBlIiwic2V0dGluZyIsImNvbXBsZXRlIiwiY29udGVudFR5cGUiLCJwb3N0Iiwic29ydEtleXMiLCJjb21wYXJhdG9yIiwidm4iLCJMb2NhbFN0b3JlIiwic3RyaW5naWZ5QWxsIiwiYWNjZXNzR2V0dGVyIiwiaWdub3JlIiwic3RhcnRUaW1lIiwiY3VyRGVwdGgiLCJ2aXNpdG9yIiwidmlzaXRlZCIsInRocm90dGxlIiwidW5jYXVnaHQiLCJybUxpc3RlbmVyIiwicm1BbGxMaXN0ZW5lcnMiLCJ1bmlxSWQiLCJ2aWV3cG9ydFNjYWxlIiwid3JhcCIsInhwYXRoIiwiWFBhdGhSZXN1bHQiLCJPUkRFUkVEX05PREVfU05BUFNIT1RfVFlQRSIsInNuYXBzaG90TGVuZ3RoIiwic25hcHNob3RJdGVtIiwic2V0UHJvdG90eXBlT2YiLCJyZWdpc3RlckhlbHBlciIsImludmVyc2UiLCJibG9ja1BhcmFtcyIsImJ0b2EiLCJ1bmVzY2FwZSIsInNvdXJjZXMiLCJzb3VyY2VSb290IiwiUmVmZXJlbmNlRXJyb3IiLCJlc2NhcGVFeHByZXNzaW9uIiwidG9IVE1MIiwiY3JlYXRlRnJhbWUiLCJfcGFyZW50IiwiYXBwZW5kQ29udGV4dFBhdGgiLCJqc19iZWF1dGlmeSIsImNzc19iZWF1dGlmeSIsImh0bWxfYmVhdXRpZnkiLCJsb2MiLCJjYXB0dXJlU3RhY2tUcmFjZSIsImxpbmVOdW1iZXIiLCJlbmRMaW5lTnVtYmVyIiwiZW5kQ29sdW1uIiwiX19pbXBvcnREZWZhdWx0IiwiZ2V0Rm5BYnN0cmFjdCIsInNvcnRPYmpOYW1lIiwiX19leHRlbmRzIiwiJGNvbnRhaW5lciIsImJpbmRFdmVudCIsImFwcGVuZFRwbCIsIm9ialRvSHRtbCIsImNyZWF0ZUVsIiwiU3RhdGljIiwiMCIsInByb3RvIiwianNvblNwbGl0QXJyIiwicmVmZXJlbmNlIiwiZ2V0T2JqQWJzdHJhY3QiLCJCZWF1dGlmaWVyIiwiT3B0aW9ucyIsImJlYXV0aWZ5IiwiZGVmYXVsdE9wdGlvbnMiLCJPdXRwdXQiLCJUb2tlbml6ZXIiLCJsaW5lX3N0YXJ0ZXJzIiwicG9zaXRpb25hYmxlX29wZXJhdG9ycyIsIlRPS0VOIiwiUkVTRVJWRUQiLCJiZWZvcmVfbmV3bGluZSIsInByZXNlcnZlX25ld2xpbmUiLCJtdWx0aWxpbmVfZnJhbWUiLCJyZW1vdmVfaW5kZW50Iiwic3RhcnRfbGluZV9pbmRleCIsIl9zb3VyY2VfdGV4dCIsIl9vdXRwdXQiLCJfdG9rZW5zIiwiX2xhc3RfbGFzdF90ZXh0IiwiX2ZsYWdzIiwiX3ByZXZpb3VzX2ZsYWdzIiwiX2ZsYWdfc3RvcmUiLCJjcmVhdGVfZmxhZ3MiLCJpbmRlbnRhdGlvbl9sZXZlbCIsImp1c3RfYWRkZWRfbmV3bGluZSIsImxpbmVfaW5kZW50X2xldmVsIiwibGFzdF90b2tlbiIsIlNUQVJUX0JMT0NLIiwibGFzdF93b3JkIiwiZGVjbGFyYXRpb25fc3RhdGVtZW50IiwiZGVjbGFyYXRpb25fYXNzaWdubWVudCIsImlubGluZV9mcmFtZSIsImlmX2Jsb2NrIiwiZWxzZV9ibG9jayIsImRvX2Jsb2NrIiwiZG9fd2hpbGUiLCJpbXBvcnRfYmxvY2siLCJpbl9jYXNlX3N0YXRlbWVudCIsImluX2Nhc2UiLCJjYXNlX2JvZHkiLCJhbGlnbm1lbnQiLCJnZXRfbGluZV9udW1iZXIiLCJ0ZXJuYXJ5X2RlcHRoIiwiX3Jlc2V0IiwidGVzdF9vdXRwdXRfcmF3Iiwic2V0X21vZGUiLCJ0b2tlbml6ZSIsImRpc2FibGVkIiwiZW9sIiwibGluZUJyZWFrIiwiaGFuZGxlX3Rva2VuIiwiZ2V0X2NvZGUiLCJTVEFSVF9FWFBSIiwiaGFuZGxlX3N0YXJ0X2V4cHIiLCJFTkRfRVhQUiIsImhhbmRsZV9lbmRfZXhwciIsImhhbmRsZV9zdGFydF9ibG9jayIsIkVORF9CTE9DSyIsImhhbmRsZV9lbmRfYmxvY2siLCJXT1JEIiwiaGFuZGxlX3dvcmQiLCJTRU1JQ09MT04iLCJoYW5kbGVfc2VtaWNvbG9uIiwiU1RSSU5HIiwiaGFuZGxlX3N0cmluZyIsIkVRVUFMUyIsImhhbmRsZV9lcXVhbHMiLCJPUEVSQVRPUiIsImhhbmRsZV9vcGVyYXRvciIsIkNPTU1BIiwiaGFuZGxlX2NvbW1hIiwiQkxPQ0tfQ09NTUVOVCIsImhhbmRsZV9ibG9ja19jb21tZW50IiwiQ09NTUVOVCIsImhhbmRsZV9jb21tZW50IiwiRE9UIiwiaGFuZGxlX2RvdCIsIkVPRiIsImhhbmRsZV9lb2YiLCJVTktOT1dOIiwiaGFuZGxlX3Vua25vd24iLCJoYW5kbGVfd2hpdGVzcGFjZV9hbmRfY29tbWVudHMiLCJuZXdsaW5lcyIsImtlZXBfYXJyYXlfaW5kZW50YXRpb24iLCJjb21tZW50c19iZWZvcmUiLCJwcmludF9uZXdsaW5lIiwibWF4X3ByZXNlcnZlX25ld2xpbmVzIiwicHJlc2VydmVfbmV3bGluZXMiLCJhbGxvd193cmFwX29yX3ByZXNlcnZlZF9uZXdsaW5lIiwib3BlcmF0b3JfcG9zaXRpb24iLCJ3cmFwX2xpbmVfbGVuZ3RoIiwic2V0X3dyYXBfcG9pbnQiLCJyZXN0b3JlX21vZGUiLCJhZGRfbmV3X2xpbmUiLCJwcmludF90b2tlbl9saW5lX2luZGVudGF0aW9uIiwiY3VycmVudF9saW5lIiwic2V0X2luZGVudCIsIndoaXRlc3BhY2VfYmVmb3JlIiwic3BhY2VfYmVmb3JlX3Rva2VuIiwicHJpbnRfdG9rZW4iLCJhZGRfcmF3X3Rva2VuIiwiY29tbWFfZmlyc3QiLCJwcmV2aW91cyIsInByZXZpb3VzX2xpbmUiLCJpc19lbXB0eSIsImFkZF90b2tlbiIsIm5vbl9icmVha2luZ19zcGFjZSIsInByZXZpb3VzX3Rva2VuX3dyYXBwZWQiLCJpbmRlbnQiLCJkZWluZGVudCIsInN0YXJ0X29mX29iamVjdF9wcm9wZXJ0eSIsInN0YXJ0X29mX3N0YXRlbWVudCIsInNwYWNlX2luX3BhcmVuIiwic3BhY2VfYmVmb3JlX2NvbmRpdGlvbmFsIiwic3BhY2VfYWZ0ZXJfbmFtZWRfZnVuY3Rpb24iLCJzcGFjZV9hZnRlcl9hbm9uX2Z1bmN0aW9uIiwic3BhY2VfaW5fZW1wdHlfcGFyZW4iLCJicmFjZV9wcmVzZXJ2ZV9pbmxpbmUiLCJvcGVuZWQiLCJicmFjZV9zdHlsZSIsImpzbGludF9oYXBweSIsImp1c3RfYWRkZWRfYmxhbmtsaW5lIiwiYWZ0ZXJfbmV3bGluZSIsIm5ld2xpbmUiLCJwcmludF9ibG9ja19jb21tbWVudCIsImFsbExpbmVCcmVha3MiLCJicmVha19jaGFpbmVkX21ldGhvZHMiLCJ1bmluZGVudF9jaGFpbmVkX21ldGhvZHMiLCJfX3BhcmVudCIsIl9fY2hhcmFjdGVyX2NvdW50IiwiX19pbmRlbnRfY291bnQiLCJfX2FsaWdubWVudF9jb3VudCIsIl9fd3JhcF9wb2ludF9pbmRleCIsIl9fd3JhcF9wb2ludF9jaGFyYWN0ZXJfY291bnQiLCJfX3dyYXBfcG9pbnRfaW5kZW50X2NvdW50IiwiX193cmFwX3BvaW50X2FsaWdubWVudF9jb3VudCIsIl9faXRlbXMiLCJfX2NhY2hlIiwiX19pbmRlbnRfc2l6ZSIsImluZGVudF9zaXplIiwiX19pbmRlbnRfc3RyaW5nIiwiaW5kZW50X2NoYXIiLCJpbmRlbnRfd2l0aF90YWJzIiwiaW5kZW50X2xldmVsIiwiX19iYXNlX3N0cmluZyIsIl9fYmFzZV9zdHJpbmdfbGVuZ3RoIiwiX19pbmRlbnRfY2FjaGUiLCJfZW5kX3dpdGhfbmV3bGluZSIsImVuZF93aXRoX25ld2xpbmUiLCJpbmRlbnRfZW1wdHlfbGluZXMiLCJfX2xpbmVzIiwibmV4dF9saW5lIiwiX19hZGRfb3V0cHV0bGluZSIsImNsb25lX2VtcHR5IiwiaGFzX21hdGNoIiwiZ2V0X2luZGVudF9zaXplIiwiX3NldF93cmFwX3BvaW50IiwiX3Nob3VsZF93cmFwIiwiX2FsbG93X3dyYXAiLCJfcmVtb3ZlX2luZGVudCIsIl9yZW1vdmVfd3JhcF9pbmRlbnQiLCJnZXRfaW5kZW50X3N0cmluZyIsIl9fZW5zdXJlX2NhY2hlIiwiX19hZGRfY29sdW1uIiwiX19hZGRfc3BhY2VfYmVmb3JlX3Rva2VuIiwiZW5zdXJlX2VtcHR5X2xpbmVfYWJvdmUiLCJjbG9zZWQiLCJpZGVudGlmaWVyIiwiaWRlbnRpZmllclN0YXJ0IiwiaWRlbnRpZmllck1hdGNoIiwicmF3X29wdGlvbnMiLCJicmFjZXNfb25fb3duX2xpbmUiLCJfZ2V0X3NlbGVjdGlvbl9saXN0IiwiX2dldF9ib29sZWFuIiwidW5lc2NhcGVfc3RyaW5ncyIsImU0eCIsIl9nZXRfc2VsZWN0aW9uIiwiX2dldF9jaGFyYWN0ZXJzIiwiX2dldF9udW1iZXIiLCJ0ZW1wbGF0aW5nIiwiX2dldF9hcnJheSIsIl9pc192YWxpZF9zZWxlY3Rpb24iLCJub3JtYWxpemVPcHRzIiwibWVyZ2VPcHRzIiwiSW5wdXRTY2FubmVyIiwiRGlyZWN0aXZlcyIsIlBhdHRlcm4iLCJUZW1wbGF0YWJsZVBhdHRlcm4iLCJSQVciLCJfcGF0dGVybnMiLCJtYXRjaGluZyIsIl9pbnB1dCIsInJlYWRfb3B0aW9ucyIsIl9fcGF0dGVybnMiLCJzdGFydGluZ193aXRoIiwicHVuY3QiLCJ1bnRpbCIsImJsb2NrX2NvbW1lbnQiLCJ1bnRpbF9hZnRlciIsImh0bWxfY29tbWVudF9zdGFydCIsImh0bWxfY29tbWVudF9lbmQiLCJzaGViYW5nIiwieG1sIiwic2luZ2xlX3F1b3RlIiwiZG91YmxlX3F1b3RlIiwidGVtcGxhdGVfdGV4dCIsInRlbXBsYXRlX2V4cHJlc3Npb24iLCJfaXNfY29tbWVudCIsIl9pc19vcGVuaW5nIiwiX2lzX2Nsb3NpbmciLCJfZ2V0X25leHRfdG9rZW4iLCJfcmVhZFdoaXRlc3BhY2UiLCJfY3JlYXRlX3Rva2VuIiwiX3JlYWRfbm9uX2phdmFzY3JpcHQiLCJfcmVhZF9zdHJpbmciLCJfcmVhZF93b3JkIiwiX3JlYWRfc2luZ2xlcyIsIl9yZWFkX2NvbW1lbnQiLCJfcmVhZF9yZWdleHAiLCJfcmVhZF94bWwiLCJfcmVhZF9wdW5jdHVhdGlvbiIsInJlYWQiLCJfaXNfZmlyc3RfdG9rZW4iLCJoYXNOZXh0IiwidGVzdENoYXIiLCJnZXRfZGlyZWN0aXZlcyIsInJlYWRJZ25vcmVkIiwiaGFzX2NoYXJfZXNjYXBlcyIsIl9yZWFkX3N0cmluZ19yZWN1cnNpdmUiLCJfYWxsb3dfcmVnZXhwX29yX3htbCIsInJlYWRfbWF0Y2giLCJfX2lucHV0IiwiX19pbnB1dF9sZW5ndGgiLCJfX3Bvc2l0aW9uIiwicmVzdGFydCIsIl9fbWF0Y2giLCJzdGlja3kiLCJyZWFkVW50aWwiLCJyZWFkVW50aWxBZnRlciIsImdldF9yZWdleHAiLCJnZXRfbGl0ZXJhbF9yZWdleHAiLCJwZWVrVW50aWxBZnRlciIsImxvb2tCYWNrIiwiVG9rZW5TdHJlYW0iLCJXaGl0ZXNwYWNlUGF0dGVybiIsIl9fdG9rZW5zIiwibmV3bGluZV9jb3VudCIsIndoaXRlc3BhY2VfYmVmb3JlX3Rva2VuIiwiX190b2tlbnNfbGVuZ3RoIiwiX19wYXJlbnRfdG9rZW4iLCJfbGluZV9yZWdleHAiLCJfX3NldF93aGl0ZXNwYWNlX3BhdHRlcm5zIiwiX21hdGNoX3BhdHRlcm4iLCJfbmV3bGluZV9yZWdleHAiLCJfX3NwbGl0IiwiX2NyZWF0ZSIsIl9zdGFydGluZ19wYXR0ZXJuIiwiX3VudGlsX3BhdHRlcm4iLCJfdW50aWxfYWZ0ZXIiLCJfX2RpcmVjdGl2ZXNfYmxvY2tfcGF0dGVybiIsIl9fZGlyZWN0aXZlX3BhdHRlcm4iLCJfX2RpcmVjdGl2ZXNfZW5kX2lnbm9yZV9wYXR0ZXJuIiwiZGphbmdvIiwiZXJiIiwiaGFuZGxlYmFycyIsInBocCIsIl9fdGVtcGxhdGVfcGF0dGVybiIsIl9kaXNhYmxlZCIsImFzc2lnbiIsIl9leGNsdWRlZCIsImhhbmRsZWJhcnNfY29tbWVudCIsImhhbmRsZWJhcnNfdW5lc2NhcGVkIiwiZGphbmdvX3ZhbHVlIiwiZGphbmdvX2NvbW1lbnQiLCJfX3NldF90ZW1wbGF0ZWRfcGF0dGVybiIsImRpc2FibGUiLCJfcmVhZF90ZW1wbGF0ZSIsIl9jaCIsIk5FU1RFRF9BVF9SVUxFIiwiQ09ORElUSU9OQUxfR1JPVVBfUlVMRSIsImVhdFN0cmluZyIsImVhdFdoaXRlc3BhY2UiLCJmb3VuZE5lc3RlZFBzZXVkb0NsYXNzIiwicHJpbnRfc3RyaW5nIiwiX2luZGVudExldmVsIiwicHJlc2VydmVTaW5nbGVTcGFjZSIsIm91dGRlbnQiLCJfbmVzdGVkTGV2ZWwiLCJuZXdsaW5lX2JldHdlZW5fcnVsZXMiLCJzZWxlY3Rvcl9zZXBhcmF0b3JfbmV3bGluZSIsInNwYWNlX2Fyb3VuZF9jb21iaW5hdG9yIiwiSGFuZGxlYmFyc0Vudmlyb25tZW50IiwiaGVscGVycyIsInBhcnRpYWxzIiwiZGVjb3JhdG9ycyIsInJlZ2lzdGVyRGVmYXVsdEhlbHBlcnMiLCJyZWdpc3RlckRlZmF1bHREZWNvcmF0b3JzIiwiVkVSU0lPTiIsIkNPTVBJTEVSX1JFVklTSU9OIiwiTEFTVF9DT01QQVRJQkxFX0NPTVBJTEVSX1JFVklTSU9OIiwiUkVWSVNJT05fQ0hBTkdFUyIsIjEiLCIyIiwiMyIsIjQiLCI1IiwiNiIsIjciLCI4IiwibG9nZ2VyIiwidW5yZWdpc3RlckhlbHBlciIsInJlZ2lzdGVyUGFydGlhbCIsInVucmVnaXN0ZXJQYXJ0aWFsIiwicmVnaXN0ZXJEZWNvcmF0b3IiLCJ1bnJlZ2lzdGVyRGVjb3JhdG9yIiwicmVzZXRMb2dnZWRQcm9wZXJ0eUFjY2Vzc2VzIiwicmVzZXRMb2dnZWRQcm9wZXJ0aWVzIiwibW92ZUhlbHBlclRvSG9va3MiLCJtZXRob2RNYXAiLCJsb29rdXBMZXZlbCIsImNyZWF0ZVByb3RvQWNjZXNzQ29udHJvbCIsIl9fZGVmaW5lR2V0dGVyX18iLCJfX2RlZmluZVNldHRlcl9fIiwiX19sb29rdXBHZXR0ZXJfXyIsIndoaXRlbGlzdCIsImNyZWF0ZU5ld0xvb2t1cE9iamVjdCIsImFsbG93ZWRQcm90b1Byb3BlcnRpZXMiLCJkZWZhdWx0VmFsdWUiLCJhbGxvd1Byb3RvUHJvcGVydGllc0J5RGVmYXVsdCIsImFsbG93ZWRQcm90b01ldGhvZHMiLCJhbGxvd1Byb3RvTWV0aG9kc0J5RGVmYXVsdCIsInJlc3VsdElzQWxsb3dlZCIsImpRdWVyeSIsIiRlbGVtZW50IiwiYWJzb2x1dGUiLCJfZ2V0UG9zaXRpb24iLCJzdGFydFBvaW50IiwiZHJhZ1BvaW50Iiwic3RhcnRQb3NpdGlvbiIsIm9uUG9pbnRlckRvd24iLCJvblBvaW50ZXJNb3ZlIiwib25Qb2ludGVyVXAiLCJlbmFibGUiLCJzZXRIYW5kbGVzIiwiYmluZEhhbmRsZXMiLCJlbWl0RXZlbnQiLCJkaXNwYXRjaEpRdWVyeUV2ZW50IiwiX2dldFBvc2l0aW9uQ29vcmQiLCJfYWRkVHJhbnNmb3JtUG9zaXRpb24iLCJkcmFnU3RhcnQiLCJpc0VuYWJsZWQiLCJtZWFzdXJlQ29udGFpbm1lbnQiLCJzZXRMZWZ0VG9wIiwiYW5pbWF0ZSIsImdldENvbnRhaW5lciIsImJvcmRlckxlZnRXaWR0aCIsImJvcmRlclJpZ2h0V2lkdGgiLCJib3JkZXJUb3BXaWR0aCIsImJvcmRlckJvdHRvbVdpZHRoIiwicmVsYXRpdmVTdGFydFBvc2l0aW9uIiwiY29udGFpblNpemUiLCJjb250YWlubWVudCIsImRyYWdNb3ZlIiwiZ3JpZCIsImNvbnRhaW5EcmFnIiwiYXhpcyIsImRyYWdFbmQiLCJpc0RyYWdnaW5nIiwicG9zaXRpb25EcmFnIiwic3RhdGljQ2xpY2siLCJzZXRQb3NpdGlvbiIsInVuYmluZEhhbmRsZXMiLCJyZW1vdmVEYXRhIiwiYnJpZGdldCIsImNvbnRlbnQiLCJjdXJzb3IiLCJmbGV4Iiwib3V0bGluZSIsImNvbnN0cnVjdCIsInNoYW0iLCJQcm94eSIsImJvcmRlclN0eWxlIiwiYm9yZGVyV2lkdGgiLCJib3hTaXppbmciLCJpc0JveFNpemVPdXRlciIsIm91dGVyV2lkdGgiLCJvdXRlckhlaWdodCIsIm9mZnNldFdpZHRoIiwiaXNCb3JkZXJCb3giLCJwYWRkaW5nTGVmdCIsInBhZGRpbmdSaWdodCIsInBhZGRpbmdUb3AiLCJwYWRkaW5nQm90dG9tIiwibWFyZ2luTGVmdCIsIm1hcmdpblJpZ2h0IiwibWFyZ2luVG9wIiwibWFyZ2luQm90dG9tIiwiX2JpbmRIYW5kbGVzIiwiX3RvdWNoQWN0aW9uVmFsdWUiLCJfYmluZFN0YXJ0RXZlbnQiLCJQb2ludGVyRXZlbnQiLCJ0b3VjaEFjdGlvbiIsInBvaW50ZXJEb3duIiwib2theVBvaW50ZXJEb3duIiwicG9pbnRlckRvd25Qb2ludGVyIiwicG9pbnRlckRvd25CbHVyIiwiX2JpbmRQb3N0U3RhcnRFdmVudHMiLCJURVhUQVJFQSIsIklOUFVUIiwiU0VMRUNUIiwiT1BUSU9OIiwicmFkaW8iLCJjaGVja2JveCIsInN1Ym1pdCIsImZpbGUiLCJfcG9pbnRlclJlc2V0IiwiYmx1ciIsInBvaW50ZXJNb3ZlIiwiX2RyYWdQb2ludGVyTW92ZSIsIl9kcmFnTW92ZSIsInBhZ2VYIiwicGFnZVkiLCJoYXNEcmFnU3RhcnRlZCIsIl9kcmFnU3RhcnQiLCJwb2ludGVyVXAiLCJfZHJhZ1BvaW50ZXJVcCIsIl9kcmFnRW5kIiwiX3N0YXRpY0NsaWNrIiwiaXNQcmV2ZW50aW5nQ2xpY2tzIiwib25jbGljayIsImlzSWdub3JpbmdNb3VzZVVwIiwiZ2V0UG9pbnRlclBvaW50IiwiYmluZFN0YXJ0RXZlbnQiLCJ1bmJpbmRTdGFydEV2ZW50IiwiaGFuZGxlRXZlbnQiLCJnZXRUb3VjaCIsInBvaW50ZXJJZGVudGlmaWVyIiwib25tb3VzZWRvd24iLCJfcG9pbnRlckRvd24iLCJvbnRvdWNoc3RhcnQiLCJjaGFuZ2VkVG91Y2hlcyIsIm9ucG9pbnRlcmRvd24iLCJpc1BvaW50ZXJEb3duIiwicG9pbnRlcklkIiwibW91c2Vkb3duIiwidG91Y2hzdGFydCIsInBvaW50ZXJkb3duIiwiX2JvdW5kUG9pbnRlckV2ZW50cyIsIl91bmJpbmRQb3N0U3RhcnRFdmVudHMiLCJvbm1vdXNlbW92ZSIsIl9wb2ludGVyTW92ZSIsIm9ucG9pbnRlcm1vdmUiLCJvbnRvdWNobW92ZSIsIm9ubW91c2V1cCIsIl9wb2ludGVyVXAiLCJvbnBvaW50ZXJ1cCIsIm9udG91Y2hlbmQiLCJfcG9pbnRlckRvbmUiLCJwb2ludGVyRG9uZSIsIm9ucG9pbnRlcmNhbmNlbCIsIl9wb2ludGVyQ2FuY2VsIiwib250b3VjaGNhbmNlbCIsInBvaW50ZXJDYW5jZWwiLCJfb25jZUV2ZW50cyIsImFsbE9mZiIsImNvbXBpbGVyIiwibWFpbiIsImxhbWJkYSIsIm51bGxDb250ZXh0IiwibG9va3VwUHJvcGVydHkiLCJwcm9ncmFtIiwidXNlRGF0YSIsIlNhZmVTdHJpbmciLCJFeGNlcHRpb24iLCJVdGlscyIsIlZNIiwiaWRzIiwiY29udGV4dFBhdGgiLCJpbmNsdWRlWmVybyIsImNoZWNrUmV2aXNpb24iLCJkZWNvcmF0b3IiLCJtYWluX2QiLCJwcm90b0FjY2Vzc0NvbnRyb2wiLCJsb29rdXAiLCJpbnZva2VQYXJ0aWFsIiwicmVzb2x2ZVBhcnRpYWwiLCJjb21waWxlck9wdGlvbnMiLCJwcm9ncmFtcyIsIm1lcmdlSWZOZWVkZWQiLCJzZWFsIiwiY29tcGlsZXJJbmZvIiwiX3NldHVwIiwidXNlQmxvY2tQYXJhbXMiLCJ1c2VEZXB0aHMiLCJkZXB0aHMiLCJpc1RvcCIsIndyYXBIZWxwZXIiLCJ1c2VQYXJ0aWFsIiwidXNlRGVjb3JhdG9ycyIsImFsbG93Q2FsbHNUb0hlbHBlck1pc3NpbmciLCJfY2hpbGQiLCJ3cmFwUHJvZ3JhbSIsIkhhbmRsZWJhcnMiLCJub0NvbmZsaWN0IiwicmV0dXJuIiwiYWxpZ25tZW50X3NpemUiLCJ0YWdfbmFtZSIsInBhcnNlcl90b2tlbiIsIl9wcmludGVyIiwiX2N1cnJlbnRfZnJhbWUiLCJfanNfYmVhdXRpZnkiLCJfY3NzX2JlYXV0aWZ5IiwiX3RhZ19zdGFjayIsIl9pc193cmFwX2F0dHJpYnV0ZXNfZm9yY2UiLCJ3cmFwX2F0dHJpYnV0ZXMiLCJfaXNfd3JhcF9hdHRyaWJ1dGVzX2ZvcmNlX2V4cGFuZF9tdWx0aWxpbmUiLCJfaXNfd3JhcF9hdHRyaWJ1dGVzX2ZvcmNlX2FsaWduZWQiLCJfaXNfd3JhcF9hdHRyaWJ1dGVzX2FsaWduZWRfbXVsdGlwbGUiLCJfaXNfd3JhcF9hdHRyaWJ1dGVzX3ByZXNlcnZlIiwiX2lzX3dyYXBfYXR0cmlidXRlc19wcmVzZXJ2ZV9hbGlnbmVkIiwiY3VycmVudF9saW5lX2hhc19tYXRjaCIsInNldF9zcGFjZV9iZWZvcmVfdG9rZW4iLCJwcmludF9wcmVzZXJ2ZWRfbmV3bGluZXMiLCJURVhUIiwidHJhdmVyc2Vfd2hpdGVzcGFjZSIsImdldF9mdWxsX2luZGVudCIsImdldF9wYXJzZXJfdG9rZW4iLCJyZWNvcmRfdGFnIiwiX3RyeV9wb3BfZnJhbWUiLCJfZ2V0X2ZyYW1lIiwidHJ5X3BvcCIsImluZGVudF90b190YWciLCJUQUdfT1BFTiIsIl9oYW5kbGVfdGFnX29wZW4iLCJBVFRSSUJVVEUiLCJWQUxVRSIsInRhZ19jb21wbGV0ZSIsIl9oYW5kbGVfaW5zaWRlX3RhZyIsIlRBR19DTE9TRSIsIl9oYW5kbGVfdGFnX2Nsb3NlIiwiX2hhbmRsZV90ZXh0IiwiaXNfdW5mb3JtYXR0ZWQiLCJ0YWdfc3RhcnRfY2hhciIsImhhc193cmFwcGVkX2F0dHJzIiwiaW5kZW50X2NvbnRlbnQiLCJpc19jb250ZW50X3VuZm9ybWF0dGVkIiwiaXNfaW5saW5lX2VsZW1lbnQiLCJhdHRyX2NvdW50IiwiY3VzdG9tX2JlYXV0aWZpZXJfbmFtZSIsIl9wcmludF9jdXN0b21fYmVhdGlmaWVyX3RleHQiLCJpbmRlbnRfc2NyaXB0cyIsIl9nZXRfdGFnX29wZW5fdG9rZW4iLCJfc2V0X3RhZ19wb3NpdGlvbiIsImlzX2VtcHR5X2VsZW1lbnQiLCJpc19zdGFydF90YWciLCJpc19lbmRfdGFnIiwibXVsdGlsaW5lX2NvbnRlbnQiLCJzdGFydF90YWdfdG9rZW4iLCJ0YWdfY2hlY2siLCJ3cmFwX2F0dHJpYnV0ZXNfaW5kZW50X3NpemUiLCJ2b2lkX2VsZW1lbnRzIiwidW5mb3JtYXR0ZWQiLCJjb250ZW50X3VuZm9ybWF0dGVkIiwiaW5saW5lIiwiX2RvX29wdGlvbmFsX2VuZF9lbGVtZW50IiwiZXh0cmFfbGluZXJzIiwiaW5kZW50X2lubmVyX2h0bWwiLCJpbmRlbnRfaGVhZF9pbm5lcl9odG1sIiwiaW5kZW50X2JvZHlfaW5uZXJfaHRtbCIsImluZGVudF9oYW5kbGViYXJzIiwidW5mb3JtYXR0ZWRfY29udGVudF9kZWxpbWl0ZXIiLCJfY3VycmVudF90YWdfbmFtZSIsImVsZW1lbnRfbmFtZSIsImhhbmRsZWJhcnNfb3BlbiIsImhhbmRsZWJhcnNfcmF3X2Nsb3NlIiwiY2RhdGEiLCJjb25kaXRpb25hbF9jb21tZW50IiwicHJvY2Vzc2luZyIsIl91bmZvcm1hdHRlZF9jb250ZW50X2RlbGltaXRlciIsIl9yZWFkX29wZW5faGFuZGxlYmFycyIsIl9yZWFkX2F0dHJpYnV0ZSIsIl9yZWFkX3Jhd19jb250ZW50IiwiX3JlYWRfY2xvc2UiLCJfcmVhZF9jb250ZW50X3dvcmQiLCJfcmVhZF9jb21tZW50X29yX2NkYXRhIiwiX3JlYWRfcHJvY2Vzc2luZyIsIl9yZWFkX29wZW4iLCJfaXNfY29udGVudF91bmZvcm1hdHRlZCIsIjEwIiwiMTEiLCIxMyIsIjE1IiwiMTYiLCIxNyIsIjE5IiwiMjAiLCIyMiIsIjI0IiwiMjYiLCIyOCIsIjMwIiwiMzIiLCIzMyIsIjM0IiwiMzUiLCIxOCIsIjIxIiwiMjMiLCIyNyIsIjI5IiwiQUREIiwiU0hPVyIsIlNDQUxFIiwiXyRlbCIsImRhcmtlckJhY2tncm91bmQiLCJjb250cmFzdCIsImNvbnNvbGVXYXJuQmFja2dyb3VuZCIsImNvbnNvbGVXYXJuRm9yZWdyb3VuZCIsImNvbnNvbGVXYXJuQm9yZGVyIiwiY29uc29sZUVycm9yQmFja2dyb3VuZCIsImNvbnNvbGVFcnJvckZvcmVncm91bmQiLCJjb25zb2xlRXJyb3JCb3JkZXIiLCJsaWdodCIsImRhcmsiLCJMaWdodCIsInNlbGVjdEZvcmVncm91bmQiLCJhY2NlbnQiLCJwcmltYXJ5IiwidmFyQ29sb3IiLCJzdHJpbmdDb2xvciIsImtleXdvcmRDb2xvciIsIm51bWJlckNvbG9yIiwib3BlcmF0b3JDb2xvciIsImxpbmtDb2xvciIsInRleHRDb2xvciIsInRhZ05hbWVDb2xvciIsImZ1bmN0aW9uQ29sb3IiLCJhdHRyaWJ1dGVOYW1lQ29sb3IiLCJjb21tZW50Q29sb3IiLCJjc3NQcm9wZXJ0eSIsIkRhcmsiLCJEcmFjdWxhIiwiR2l0aHViIiwiemIiLCJhYiIsImlubmVyVGV4dCIsInNldFNjYWxlIiwic2V0VGhlbWUiLCJnZXRDdXJUaGVtZSIsImdldFRoZW1lcyIsIl9zdHlsZSIsIl9zd2l0Y2hUcGwiLCJfc2VsZWN0VHBsIiwiX3JhbmdlVHBsIiwiX2NvbG9yVHBsIiwiX2JpbmRFdmVudCIsIl9jbGVhblNlcGFyYXRvciIsIl9nZW5JZCIsImRlc2MiLCJjb2xvcnMiLCJzZWxlY3Rpb25zIiwicHJvZ3Jlc3MiLCJDYiIsImNoZWNrZWQiLCJfZ2V0U2V0dGluZyIsIl9jbG9zZUFsbCIsIl8kY29udGFpbmVyIiwiX2FwcGVuZFRwbCIsIl9tYWtlRHJhZ2dhYmxlIiwiX3JlZ2lzdGVyTGlzdGVuZXIiLCJfaXNPdXRPZlJhbmdlIiwiX2dldERlZlBvcyIsIl91bnJlZ2lzdGVyTGlzdGVuZXIiLCJfc2NhbGVMaXN0ZW5lciIsImhiIiwiX3Jlc2V0UG9zIiwic2V0UG9zIiwiX2RyYWdnYWJpbGx5IiwibmIiLCJrYiIsImNyZWF0ZUNmZyIsInJlbWVtYmVyUG9zIiwic2VwYXJhdG9yIiwic3dpdGNoIiwiXyRib3R0b21CYXIiLCJfbGVuIiwicmVzZXRCb3R0b21CYXIiLCJfc2Nyb2xsSXRlbVRvVmlldyIsIm9mZnNldExlZnQiLCJzY3JvbGxMZWZ0IiwiX2lzU2hvdyIsIl9vcGFjaXR5IiwiX3Rvb2xzIiwiX2lzUmVzaXppbmciLCJfcmVzaXplVGltZXIiLCJfcmVzaXplU3RhcnRZIiwiX3Jlc2l6ZVN0YXJ0U2l6ZSIsIl9pbml0TmF2QmFyIiwiX25hdkJhciIsIl8kdG9vbHMiLCJzaG93VG9vbCIsImJiIiwiX2N1clRvb2wiLCJhY3RpdmF0ZVRvb2wiLCJ0cmFuc3BhcmVuY3kiLCJkaXNwbGF5U2l6ZSIsInRoZW1lIiwiX3NldFRyYW5zcGFyZW5jeSIsIl9zZXREaXNwbGF5U2l6ZSIsInJlbW92ZUFsbCIsInZiIiwiY2xpZW50WSIsInRvdWNoZXMiLCJ0YXJnZXRHcm91cCIsImRpc3BsYXlIZWFkZXIiLCJpZ25vcmVGaWx0ZXIiLCJjb2xsYXBzZWQiLCJfZm9ybWF0TXNnIiwiY2hlY2tHcm91cCIsIl9jb250ZW50IiwiaWIiLCJ1cGRhdGVTaXplIiwic2hvd1VuZW51bWVyYWJsZSIsInNob3dHZXR0ZXJWYWwiLCJ0b2dnbGVHcm91cCIsIl9uZWVkU3JjIiwibGF6eUV2YWx1YXRpb24iLCJleHRyYWN0T2JqIiwid2IiLCJEYiIsImljb24iLCJfJGNvbnRlbnQiLCJHYiIsInRvcE9iaiIsImdldHRlclZhbCIsInRiIiwiaHRtbEZvckVsIiwieGIiLCJ5YiIsImViIiwiQWIiLCJ1YiIsIl9jb250YWluZXIiLCJfZWwiLCJfJGZha2VFbCIsIl9mYWtlRWwiLCJfJHRvcFNwYWNlIiwiX3RvcFNwYWNlIiwiXyRib3R0b21TcGFjZSIsIl9ib3R0b21TcGFjZSIsIl90b3BTcGFjZUhlaWdodCIsIl9ib3R0b21TcGFjZUhlaWdodCIsIl9sb2dzIiwiX2Rpc3BsYXlMb2dzIiwiX3RpbWVyIiwiX2NvdW50IiwiX2xhc3RMb2ciLCJfZmlsdGVyIiwiX21heE51bSIsIl9kaXNwbGF5SGVhZGVyIiwiX2FzeW5jUmVuZGVyIiwiX2FzeW5jTGlzdCIsIl9hc3luY1RpbWVyIiwiX2lzQXRCb3R0b20iLCJfZ3JvdXBTdGFjayIsIl9pZ25vcmVTY3JvbGwiLCJyZW5kZXJWaWV3cG9ydCIsIl9yZW5kZXJWaWV3cG9ydCIsIl9nbG9iYWwiLCIkJCIsIiR4IiwiSGIiLCJ0YWJsZSIsInNob3dTcmNJblNvdXJjZXMiLCJsYiIsInRpbWVMb2ciLCJzaWxlbnRDbGVhciIsIm91dHB1dCIsIl9ldmFsSnMiLCJfdXBkYXRlQm90dG9tU3BhY2UiLCJfdXBkYXRlVG9wU3BhY2UiLCJfYXR0YWNoTG9nIiwiaW5zZXJ0QXN5bmMiLCJpbnNlcnRTeW5jIiwiX2hhbmRsZUFzeW5jTGlzdCIsImdyb3VwRW5kIiwiaW5kZW50TGV2ZWwiLCJhZGRDb3VudCIsInVwZGF0ZVRpbWUiLCJfZGV0YWNoTG9nIiwiX29wZW5Hcm91cCIsIl9jb2xsYXBzZUdyb3VwIiwiaXNBdHRhY2hlZCIsIl9maWx0ZXJMb2ciLCJfaW5qZWN0R2xvYmFsIiwic2V0R2xvYmFsIiwiX2NsZWFyR2xvYmFsIiwidXBkYXRlSWNvbiIsIl91cGRhdGVHcm91cCIsInNjcm9sbEhlaWdodCIsInNjcm9sbFRvcCIsImNyZWF0ZURvY3VtZW50RnJhZ21lbnQiLCJCYiIsIl9sb2dnZXIiLCJfc2NhbGUiLCJfaW5pdExvZ2dlciIsIl9leHBvc2VMb2dnZXIiLCJfaW5pdENmZyIsIl9oYW5kbGVTaG93IiwiX29yaWdDb25zb2xlIiwiX2hhbmRsZUVyciIsImlnbm9yZUdsb2JhbEVyciIsInJlc3RvcmVDb25zb2xlIiwiX3JtQ2ZnIiwiXyRjb250cm9sIiwiXyRsb2dzIiwiXyRpbnB1dENvbnRhaW5lciIsIl8kaW5wdXQiLCJfJGlucHV0QnRucyIsIl8kc2VhcmNoS2V5d29yZCIsInByb21wdCIsIl9oaWRlSW5wdXQiLCJpbnB1dCIsIl9zaG93SW5wdXQiLCJFYiIsImFzeW5jUmVuZGVyIiwiY2F0Y2hHbG9iYWxFcnIiLCJqc0V4ZWN1dGlvbiIsIm92ZXJyaWRlQ29uc29sZSIsImRpc3BsYXlFeHRyYUluZm8iLCJkaXNwbGF5VW5lbnVtZXJhYmxlIiwiZGlzcGxheUdldHRlclZhbCIsImRpc3BsYXlJZkVyciIsIm1heExvZ051bSIsIl9lbmFibGVKc0V4ZWN1dGlvbiIsInJlbmRlckFzeW5jIiwibWF4TnVtIiwic3ViVHlwZSIsIl94aHIiLCJfcmVxSGVhZGVycyIsIl9tZXRob2QiLCJfdXJsIiwicmVxSGVhZGVycyIsImpiIiwicmVzSGVhZGVycyIsInJlc1R4dCIsIkZpbGVSZWFkZXIiLCJvbmVycm9yIiwicmVhZEFzVGV4dCIsIlJlcXVlc3QiLCJfZmV0Y2giLCJfcmVxdWVzdHMiLCJfdHBsIiwiX2RldGFpbFRwbCIsIl9yZXF1ZXN0c1RwbCIsIl9kYXRhaWxEYXRhIiwiX2lzRmV0Y2hTdXBwb3J0ZWQiLCJmZXRjaCIsIm92ZXJyaWRlWGhyIiwiX29yaWdTZW5kIiwiX29yaWdPcGVuIiwiX29yaWdTZXRSZXF1ZXN0SGVhZGVyIiwiZXJ1ZGFSZXF1ZXN0IiwiX2FkZFJlcSIsIl91cGRhdGVSZXEiLCJoYW5kbGVIZWFkZXJzUmVjZWl2ZWQiLCJoYW5kbGVEb25lIiwiaGFuZGxlU2VuZCIsImhhbmRsZVJlcUhlYWRlcnNTZXQiLCJfb3JpZ0ZldGNoIiwiZGlzcGxheVRpbWUiLCJnYiIsImhhc0VyciIsIl9zaG93RGV0YWlsIiwiX2hpZGVEZXRhaWwiLCJfZGV0YWlsRGF0YSIsInJlc3RvcmVYaHIiLCJyZXN0b3JlRmV0Y2giLCJfJGRldGFpbCIsIl8kcmVxdWVzdHMiLCJvdmVycmlkZUZldGNoIiwicmVxdWVzdHMiLCJfcmVuZGVySHRtbCIsIl9sYXN0SHRtbCIsInNiIiwiRWxlbWVudCIsIndlYmtpdE1hdGNoZXNTZWxlY3RvciIsIm1vek1hdGNoZXNTZWxlY3RvciIsInN0eWxlU2hlZXRzIiwiY3NzUnVsZXMiLCJfZWxNYXRjaGVzU2VsIiwic2VsZWN0b3JUZXh0IiwiXyR0YXJnZXQiLCJzY3JvbGxZIiwiXyRtYXJnaW4iLCJfJHBhZGRpbmciLCJfJHNpemUiLCJfc3RhcnRMaXN0ZW5lciIsIl9tb3ZlTGlzdGVuZXIiLCJfY2xpY2tMaXN0ZW5lciIsIl9ybURlZkNvbXB1dGVkU3R5bGUiLCJfaGlnaGxpZ2h0RWxlbWVudCIsIl9zZWxlY3RFbGVtZW50IiwiX29ic2VydmVFbGVtZW50IiwiX2NvbXB1dGVkU3R5bGVTZWFyY2hLZXl3b3JkIiwiX2hpc3RvcnkiLCJfJHNob3dBcmVhIiwiX2h0bWxFbCIsIl9oaWdobGlnaHQiLCJfc2VsZWN0IiwiX2luaXRPYnNlcnZlciIsIl91cGRhdGVIaXN0b3J5IiwiX2VuYWJsZU9ic2VydmVyIiwiX2N1ckVsIiwiX3NldEVsIiwiX2Rpc2FibGVPYnNlcnZlciIsInNjcm9sbFRvVG9wIiwiX29yaWdBZGRFdmVudCIsIl9vcmlnUm1FdmVudCIsInJlc3RvcmVFdmVudFRhcmdldCIsIl9jdXJQYXJlbnRRdWV1ZSIsIm5vZGVWYWx1ZSIsIl90b2dnbGVBbGxDb21wdXRlZFN0eWxlIiwiX3RvZ2dsZUhpZ2hsaWdodCIsIl90b2dnbGVTZWxlY3QiLCJfb2JzZXJ2ZXIiLCJhdHRyaWJ1dGVzIiwiY2hpbGRMaXN0Iiwic3VidHJlZSIsIl9jdXJDc3NTdG9yZSIsInNldEVsIiwiY29tcHV0ZWRTdHlsZVNlYXJjaEtleXdvcmQiLCJwYXJlbnRzIiwibm9BdHRyIiwiaXNDbXQiLCJlcnVkYUV2ZW50cyIsImZiIiwiYm94TW9kZWwiLCJnZXRNYXRjaGVkQ1NTUnVsZXMiLCJybURlZkNvbXB1dGVkU3R5bGUiLCJtYiIsImNvbXB1dGVkU3R5bGUiLCJfYmFjayIsIl9nZXREYXRhIiwiX2hhbmRsZU11dGF0aW9uIiwiYWRkZWROb2RlcyIsInJlbW92ZWROb2RlcyIsIm92ZXJyaWRlRXZlbnRUYXJnZXQiLCJvYnNlcnZlRWxlbWVudCIsImxpc3RlbmVyIiwibGlzdGVuZXJTdHIiLCJ1c2VDYXB0dXJlIiwicWIiLCJOb2RlIiwiY29udGVudEVkaXRhYmxlIiwicmIiLCJyZWxvYWQiLCJyZXBsYWNlQ2hpbGQiLCJkYiIsImZwcyIsImZlYXR1cmVzIiwidGltaW5nIiwibWVtb3J5IiwiYmVuY2htYXJrIiwiZ2VvbG9jYXRpb24iLCJkb20iLCJfc25pcHBldHMiLCJfYWRkRGVmU25pcHBldHMiLCJfcnVuIiwic25pcHBldHMiLCJfbG9jYWxTdG9yZURhdGEiLCJfbG9jYWxTdG9yZVNlYXJjaEtleXdvcmQiLCJfaGlkZUVydWRhU2V0dGluZyIsIl9zZXNzaW9uU3RvcmVEYXRhIiwiX3Nlc3Npb25TdG9yZVNlYXJjaEtleXdvcmQiLCJfY29va2llRGF0YSIsIl9jb29raWVTZWFyY2hLZXl3b3JkIiwiX3NjcmlwdERhdGEiLCJfc3R5bGVzaGVldERhdGEiLCJfaWZyYW1lRGF0YSIsIl9pbWFnZURhdGEiLCJyZWZyZXNoIiwicmVmcmVzaExvY2FsU3RvcmFnZSIsInJlZnJlc2hTZXNzaW9uU3RvcmFnZSIsInJlZnJlc2hDb29raWUiLCJyZWZyZXNoU2NyaXB0IiwicmVmcmVzaFN0eWxlc2hlZXQiLCJyZWZyZXNoSWZyYW1lIiwicmVmcmVzaEltYWdlIiwicmVsIiwiX3JlZnJlc2hTdG9yYWdlIiwiX3BlcmZvcm1hbmNlIiwid2Via2l0UGVyZm9ybWFuY2UiLCJnZXRFbnRyaWVzIiwiaW5pdGlhdG9yVHlwZSIsInBiIiwiaGlkZUVydWRhU2V0dGluZyIsImxvY2FsU3RvcmVEYXRhIiwibG9jYWxTdG9yZVNlYXJjaEtleXdvcmQiLCJzZXNzaW9uU3RvcmVEYXRhIiwic2Vzc2lvblN0b3JlU2VhcmNoS2V5d29yZCIsImNvb2tpZURhdGEiLCJjb29raWVTZWFyY2hLZXl3b3JkIiwiY29va2llU3RhdGUiLCJzY3JpcHREYXRhIiwic2NyaXB0U3RhdGUiLCJzdHlsZXNoZWV0RGF0YSIsInN0eWxlc2hlZXRTdGF0ZSIsImlmcmFtZURhdGEiLCJpbWFnZURhdGEiLCJpbWFnZVN0YXRlIiwiZGV2aWNlUGl4ZWxSYXRpbyIsIl9pbmZvcyIsIl9hZGREZWZJbmZvIiwiaW5mb3MiLCJfc2hvd0xpbmVOdW0iLCJfZm9ybWF0Q29kZSIsIl9pbmRlbnRTaXplIiwiX2xvYWRUcGwiLCJfaXNGZXRjaGluZ0RhdGEiLCJJbWFnZSIsIl9yZW5kZXJEZWYiLCJfaHRtbCIsIl9pc0dldHRpbmdIdG1sIiwiX2NvZGVUcGwiLCJfaW1nVHBsIiwiX29ialRwbCIsIl9yYXdUcGwiLCJfaWZyYW1lVHBsIiwic2hvd0xpbmVOdW0iLCJmb3JtYXRDb2RlIiwiaW5kZW50U2l6ZSIsIl9pc0luaXQiLCJfcmVuZGVyQ29kZSIsIl9yZW5kZXJJbWciLCJfcmVuZGVyT2JqIiwiX3JlbmRlclJhdyIsIl9yZW5kZXJJZnJhbWUiLCJ0b29sIiwiYXV0b1NjYWxlIiwidXNlU2hhZG93RG9tIiwiX2luaXRDb250YWluZXIiLCJfaW5pdFN0eWxlIiwiX2luaXREZXZUb29scyIsIl9pbml0RW50cnlCdG4iLCJfaW5pdFNldHRpbmdzIiwiX2luaXRUb29scyIsIl9hdXRvU2NhbGUiLCJUb29sIiwiQ29uc29sZSIsIkVsZW1lbnRzIiwiTmV0d29yayIsIlNvdXJjZXMiLCJSZXNvdXJjZXMiLCJJbmZvIiwiU25pcHBldHMiLCJTZXR0aW5ncyIsIl9jaGVja0luaXQiLCJfZW50cnlCdG4iLCJfZGV2VG9vbHMiLCJzY2FsZSIsImdldFBvcyIsIkZiIiwiX2FkZExpc3RlbmVyIiwiX3Nob3dMaXN0ZW5lciIsImF0dGFjaFNoYWRvdyIsImNyZWF0ZVNoYWRvd1Jvb3QiLCJfc2hhZG93Um9vdCIsImluaXRDZmciLCJldmFsQ3NzIiwiaXNFcnVkYUVsIl0sIm1hcHBpbmdzIjoiO3VGQUFBLGNBT0EsSUFBSUEsRUFBY0MsT0FBT0MsT0FBTyxJQUloQyxTQUFTQyxFQUFTQyxHQUNoQixPQUFPQSxRQUdULFNBQVNDLEVBQU9ELEdBQ2QsT0FBT0EsUUFHVCxTQUFTRSxFQUFRRixHQUNmLE9BQWEsSUFBTkEsRUFVVCxTQUFTRyxFQUFhQyxHQUNwQixNQUNtQixpQkFBVkEsR0FDVSxpQkFBVkEsR0FFVSxpQkFBVkEsR0FDVSxrQkFBVkEsRUFTWCxTQUFTQyxFQUFVQyxHQUNqQixPQUFlLE9BQVJBLEdBQStCLGlCQUFSQSxFQU1oQyxJQUFJQyxFQUFZVixPQUFPVyxVQUFVQyxTQVVqQyxTQUFTQyxFQUFlSixHQUN0QixNQUErQixvQkFBeEJDLEVBQVVJLEtBQUtMLEdBR3hCLFNBQVNNLEVBQVVaLEdBQ2pCLE1BQTZCLG9CQUF0Qk8sRUFBVUksS0FBS1gsR0FNeEIsU0FBU2EsRUFBbUJDLEdBQzFCLElBQUlDLEVBQUlDLFdBQVdDLE9BQU9ILElBQzFCLE9BQU9DLEdBQUssR0FBS0csS0FBS0MsTUFBTUosS0FBT0EsR0FBS0ssU0FBU04sR0FHbkQsU0FBU08sRUFBV1AsR0FDbEIsT0FDRWIsRUFBTWEsSUFDYyxtQkFBYkEsRUFBSVEsTUFDVSxtQkFBZFIsRUFBSVMsTUFPZixTQUFTZCxFQUFVSyxHQUNqQixPQUFjLE1BQVBBLEVBQ0gsR0FDQVUsTUFBTUMsUUFBUVgsSUFBU0osRUFBY0ksSUFBUUEsRUFBSUwsV0FBYUYsRUFDNURtQixLQUFLQyxVQUFVYixFQUFLLEtBQU0sR0FDMUJHLE9BQU9I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SThrQixFQUFPLENBQ1AsS0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLEtBQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixLQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE9BQ1YsT0FBVSxVQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxTQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxVQUNWLE9BQVUsVUFDVixPQUFVLGFBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsVUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE1BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxVQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixLQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsT0FDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxLQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixNQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsS0FBVSxTQUNWLE9BQVUsUUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxRQUNWLE9BQVUsT0FDVixPQUFVLFFBQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFNBQ1YsT0FBVSxNQUNWLE9BQVUsUUFDVixPQUFVLE1BQ1YsT0FBVSxZQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLFNBQ1YsT0FBVSxPQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxRQUNWLE9BQVUsT0FDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLFVBQ1YsT0FBVSxVQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLFFBQ1YsT0FBVSxNQUNWLE9BQVUsUUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsT0FDVixPQUFVLFFBQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxRQUNWLE9BQVUsTUFDVixPQUFVLFFBQ1YsT0FBVSxPQUNWLE9BQVUsUUFDVixPQUFVLE1BQ1YsT0FBVSxjQUNWLE9BQVUsU0FDVixPQUFVLFVBQ1YsT0FBVSxRQUNWLE9BQVUsU0FDVixPQUFVLFNBQ1YsT0FBVSxPQUNWLE9BQVUsT0FDVixPQUFVLE9BQ1YsT0FBVSxRQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxRQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsUUFDVixPQUFVLFFBQ1YsT0FBVSxRQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxRQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsVUFDVixPQUFVLFVBQ1YsT0FBVSxVQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFFBQ1YsT0FBVSxPQUNWLE9BQVUsVUFDVixPQUFVLFVBQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxRQUNWLE9BQVUsUUFDVixPQUFVLFFBQ1YsT0FBVSxPQUNWLE9BQVUsUUFDVixPQUFVLFFBQ1YsT0FBVSxTQUNWLE9BQVUsU0FDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxRQUNWLE9BQVUsUUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLEtBQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsT0FDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxVQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxVQUNWLE9BQVUsVUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFVBQ1YsT0FBVSxVQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxVQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxXQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsTUFBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLGNBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixLQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxVQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFdBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLGNBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFdBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsS0FBVSxPQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxRQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLFFBQ1YsT0FBVSxPQUNWLE9BQVUsV0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsYUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE1BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsUUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxTQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsUUFDVixPQUFVLE1BQ1YsS0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixLQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixNQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsS0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE1BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFVBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixLQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxPQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsT0FDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsTUFBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixLQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLEtBQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE1BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLEtBQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixNQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsS0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsUUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFFBQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxRQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsTUFBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLEtBQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFdBQ1YsT0FBVSxXQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE1BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxhQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsUUFDVixLQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxVQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsTUFBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxVQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxVQUNWLE9BQVUsVUFDVixPQUFVLFVBQ1YsT0FBVSxZQUNWLE9BQVUsVUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLGFBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsS0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsVUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxPQUNWLE9BQVUsT0FDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsWUFDVixPQUFVLFVBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixNQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixLQUFVLFVBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFVBQ1YsT0FBVSxVQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxVQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsVUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE1BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsVUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFFBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFVBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsV0FDVixPQUFVLFdBQ1YsT0FBVSxVQUNWLE9BQVUsVUFDVixPQUFVLFVBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsVUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLEtBQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE9BQ1YsT0FBVSxjQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFVBQ1YsT0FBVSxVQUNWLE9BQVUsVUFDVixPQUFVLFVBQ1YsT0FBVSxZQUNWLE9BQVUsWUFDVixPQUFVLE1BQ1YsSUFBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsV0FDVixPQUFVLGFBQ1YsT0FBVSxhQUNWLE9BQVUsYUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLEtBQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLEtBQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLFVBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE1BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFVBQ1YsT0FBVSxVQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixNQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFlBQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFVBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsVUFDVixPQUFVLE1BQ1YsT0FBVSxVQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixLQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsYUFDVixPQUFVLGFBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLGFBQ1YsT0FBVSxhQUNWLE9BQVUsYUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxVQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxhQUNWLE9BQVUsTUFDVixPQUFVLFdBQ1YsT0FBVSxVQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxjQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLGNBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLGFBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLGFBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFVBQ1YsT0FBVSxNQUNWLEtBQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxVQUNWLE9BQVUsTUFDVixPQUFVLFlBQ1YsT0FBVSxZQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxVQUNWLE9BQVUsWUFDVixPQUFVLGVBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFdBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFVBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxhQUNWLE9BQVUsV0FDVixPQUFVLFVBQ1YsT0FBVSxZQUNWLE9BQVUsZ0JBQ1YsT0FBVSxhQUNWLE9BQVUsZUFDVixPQUFVLFdBQ1YsT0FBVSxVQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLGtCQUNWLE9BQVUsWUFDVixPQUFVLFVBQ1YsT0FBVSxNQUNWLE9BQVUsVUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsYUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFVBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxjQUNWLE9BQVUsTUFDVixPQUFVLFVBQ1YsT0FBVSxNQUNWLE9BQVUsWUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFlBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsVUFDVixPQUFVLE1BQ1YsT0FBVSxVQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsVUFDVixPQUFVLFlBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxhQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsV0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsYUFDVixPQUFVLGFBQ1YsT0FBVSxNQUNWLE9BQVUsVUFDVixPQUFVLFFBQ1YsT0FBVSxNQUNWLE9BQVUsV0FDVixPQUFVLE1BQ1YsS0FBVSxRQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsUUFDVixPQUFVLE1BQ1YsT0FBVSxRQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLFFBQ1YsT0FBVSxPQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsUUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixLQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE1BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLEtBQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsV0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsVUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFdBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxXQUNWLE9BQVUsYUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixNQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFVBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxTQUNWLE9BQVUsa0JBQ1YsT0FBVSxNQUNWLE1BQVUsVUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixLQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFlBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFlBQ1YsT0FBVSxNQUNWLE9BQVUsVUFDVixPQUFVLFVBQ1YsT0FBVSxXQUNWLE9BQVUsTUFDVixPQUFVLFVBQ1YsT0FBVSxVQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFVBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxXQUNWLE9BQVUsTUFDVixPQUFVLFVBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxVQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFVBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsYUFDVixPQUFVLE9BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixLQUFVLFVBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixLQUFVLFdBQ1YsT0FBVSxRQUNWLE9BQVUsTUFDVixPQUFVLFFBQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE9BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLFFBQ1YsT0FBVSxNQUNWLE9BQVUsUUFDVixPQUFVLE9BQ1YsT0FBVSxRQUNWLE9BQVUsT0FDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsUUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLFlBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFVBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLFFBQ1YsT0FBVSxXQUNWLE9BQVUsTUFDVixPQUFVLFlBQ1YsT0FBVSxNQUNWLE9BQVUsUUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFlBQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLFVBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsUUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsTUFBVSxjQUNWLE9BQVUsT0FDVixPQUFVLE9BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxjQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsTUFBVSxXQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsWUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsYUFDVixPQUFVLE1BQ1YsT0FBVSxRQUNWLE9BQVUsT0FDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsT0FDVixPQUFVLFFBQ1YsT0FBVSxPQUNWLEtBQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxLQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLEtBQ1YsT0FBVSxLQUNWLE9BQVUsS0FDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLEtBQ1YsT0FBVSxLQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsS0FDVixPQUFVLEtBQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxPQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE9BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsS0FBVSxVQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsS0FDVixPQUFVLEtBQ1YsT0FBVSxLQUNWLE9BQVUsT0FDVixPQUFVLE9BQ1YsT0FBVSxPQUNWLE9BQVUsT0FDVixPQUFVLE1BQ1YsT0FBVSxLQUNWLE9BQVUsS0FDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLE9BQVUsTUFDVixPQUFVLE1BQ1YsT0FBVSxNQUNWLEtBQVUsVUFDVixPQUFVLE9BQ1YsT0FBVSxLQUNWLEtBQVUsS0FDVixPQUFVLE1BOEJWMkUsRUFBYSxXQUNiLElBQUlDLEVBQVEsR0FDWixJQUFLLElBQUl6Z0UsS0FBTTY3RCxFQUFNLENBQ2pCLElBQUk2RSxFQUF5QixTQUFuQjFnRSxFQUFHbkgsTUFBTSxFQUFHLFFBQWdCK0YsRUFDaEIsTUFBbEJvQixFQUFHbkgsTUFBTSxFQUFHLEdBQWNtSCxFQUFHbkgsTUFBTSxFQUFHLEdBQUssT0FDM0NtSCxFQUFHbkgsTUFBTSxFQUFHLEdBQUssS0FDckI0bkUsRUFBTXJnRSxLQUFLLENBQ1BKLEdBQUlBLEVBQ0owZ0UsSUFBS0EsRUFDTDMwRCxLQUFNOHZELEVBQUs3N0QsS0FHbkIsT0F0Q0osU0FBYzlJLEdBRVYsSUFEQSxJQUNnQlMsRUFEWmdwRSxFQUFTLEdBQ0p2cEUsRUFBSSxFQUFTQSxFQUFJRixFQUFLRyxPQUFRRCxLQUNuQ08sRUFBT1QsRUFBS0UsS0FDRU8sRUFBS3FJLEtBQ25CMmdFLEVBQU9ocEUsRUFBS3FJLElBQU1ySSxHQUl0QixJQURBLElBQUk0TCxFQUFTLEdBQ0p3d0QsRUFBSyxFQUFHQSxFQUFLNzhELEVBQUtHLE9BQVEwOEQsSUFHL0IsR0FGQXA4RCxFQUFPVCxFQUFLNjhELEdBSVosR0FBZ0JuMUQsTUFBWmpILEVBQUsrb0UsS0FBcUM5aEUsTUFBakJqSCxFQUFLaXBFLFNBQWxDLENBSUEsSUFBSS8rRCxFQUFTOCtELEVBQU9ocEUsRUFBSytvRSxNQUFRQyxFQUFPaHBFLEVBQUtpcEUsVUFDeEMvK0QsSUFDQUEsRUFBT1gsV0FBVVcsRUFBT1gsU0FBVyxJQUN4Q1csRUFBT1gsU0FBU2QsS0FBS3pJLFNBTmpCNEwsRUFBT25ELEtBQUt6SSxHQVFwQixPQUFPNEwsRUFlQW1PLENBQUsrdUQsR0FaQyxHQWVqQjNwQixFQUFPQyxRQUFVeXBCLEdBSVosU0FBVTFwQixFQUFRQyxFQUFTa2IsR0FLaEMsSUE2Rk1oNkQsRUE3RkY0akUsRUFBTzVKLEVBQW9CLElBQy9CbmIsRUFBT0MsUUFBVSxDQUVoQjhwQixHQUFJLFdBQ0gsT0FBT3psRSxLQUFLdTdELFFBQVEsRUFBRyxJQUV4Qm1LLEdBQUksV0FDSCxPQUFPMWxFLEtBQUt1N0QsUUFBUSxFQUFHLElBRXhCb0ssR0FBSSxXQUNILE9BQU8zbEUsS0FBS3U3RCxRQUFRLEVBQUcsSUFFeEJxSyxJQUFLLFdBQ0osT0FBTzVsRSxLQUFLdTdELFFBQVEsRUFBRyxLQUV4QnNLLElBQUssV0FDSixPQUFPN2xFLEtBQUt1N0QsUUFBUSxFQUFHLEtBRXhCdUssS0FBTSxXQUNMLE9BQU85bEUsS0FBS3U3RCxRQUFRLEVBQUcsTUE0QnhCd0ssS0FBTSxXQUNMLElBQUlwSyxFQUFPLHlCQU1YLE9BTFEzN0QsS0FBSzI1RCxPQUFPZ0MsRUFBTSxHQUFLLElBQzlCMzdELEtBQUsyNUQsT0FBT2dDLEVBQU0sR0FBSyxJQUN2QjM3RCxLQUFLMjVELE9BQU9nQyxFQUFNLEdBQUssSUFDdkIzN0QsS0FBSzI1RCxPQUFPZ0MsRUFBTSxHQUFLLElBQ3ZCMzdELEtBQUsyNUQsT0FBT2dDLEVBQU0sS0FHcEJxSyxLQUFNLFdBQ0wsT0FBT2htRSxLQUFLK2xFLFFBU2JuaEUsR0FBSSxXQUNILElBQUlBLEVBQ0hxaEUsRUFBTSxFQUNOQyxFQUFPLENBQ04sSUFBSyxJQUFLLEtBQU0sSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssS0FBTSxJQUFLLElBQUssSUFBSyxLQU1wRnRoRSxFQUFLNUUsS0FBSzg0RCxLQUFLMkgsR0FBTTc3RCxHQUNwQjVFLEtBQUtzOEQsS0FBSyxZQUNWdDhELEtBQUsyNUQsT0FBTyxTQUFVLEdBRXZCLElBQUssSUFBSTM5RCxFQUFJLEVBQUdBLEVBQUk0SSxFQUFHM0ksT0FBUUQsSUFDOUJpcUUsR0FBT3JoRSxFQUFHNUksR0FBS2txRSxFQUFLbHFFLEdBSXJCLE9BRkE0SSxHQVhRLENBQ04sSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxJQUFLLElBQUssSUFBSyxLQVV6Q3FoRSxFQUFNLEtBU2xCRSxXQUNLdHBFLEVBQU0sRUFDSCxTQUFTdXpELEdBQ2YsT0FBT3Z6RCxJQUFTdXpELEdBQVEsSUFHMUJnSixJQUFLLFNBQVNoSixHQUNiLE9BQU9wd0QsS0FBS21tRSxVQUFVL1YsTUFNbkIsU0FBVTFVLEVBQVFDLEVBQVNrYixHQUVoQyxJQUFJb0IsRUFBU3BCLEVBQW9CLElBQzdCSSxFQUFVSixFQUFvQixJQUNsQ25iLEVBQU9DLFFBQVUsQ0FDaEJzYyxPQUFRQSxFQUNSaEIsUUFBU0EsSUFLTCxTQUFVdmIsRUFBUUMsR0FhdkIsU0FBU3lxQixFQUFNMXJFLEdBQ1hzRixLQUFLcUwsS0FBTzNRLEVBQUdzRixLQUFLc25ELE9BQVM4ZSxFQUFNOWUsU0FBVXRuRCxLQUFLK0YsS0FBT3FnRSxFQUFNcmdFLE9BR25FLFNBQVNzZ0UsRUFBVTNyRSxFQUFHdUQsR0FDbEJtb0UsRUFBTTlyRSxLQUFLMEYsS0FBTSxhQUFjQSxLQUFLcW1DLEtBQU8zckMsRUFBR3NGLEtBQUtpMEIsTUFBUWgyQixFQUcvRCxTQUFTcW9FLEVBQU01ckUsR0FDWDByRSxFQUFNOXJFLEtBQUswRixLQUFNLFNBQVVBLEtBQUt3bkMsS0FBTzlzQyxFQUFFbXNCLE9BQU90WixTQUdwRCxTQUFTZzVELEVBQU03ckUsRUFBR3VELEdBQ2Rtb0UsRUFBTTlyRSxLQUFLMEYsS0FBTXRGLEdBQUlzRixLQUFLd25DLEtBQU92cEMsRUFHckMsU0FBU3VvRSxFQUFhOXJFLEdBQ2xCNnJFLEVBQU1qc0UsS0FBSzBGLEtBQU0saUJBQWtCQSxLQUFLeEQsTUFBUWlxRSxFQUFJem1FLEtBQUtzbkQsVUFBWW1mLEVBQUl6bUUsS0FBS3NuRCxRQUFVOXFELEtBQ3hGd0QsS0FBS3duQyxLQUFPOXNDLEVBR2hCLFNBQVNnc0UsRUFBV2hzRSxFQUFHdUQsR0FDbkJtb0UsRUFBTTlyRSxLQUFLMEYsS0FBTSxjQUFlQSxLQUFLd25DLEtBQU85c0MsRUFBR3NGLEtBQUsybUUsV0FBYTFvRSxFQUdyRSxTQUFTMm9FLEVBQVdsc0UsRUFBR3VELEdBQ25CbW9FLEVBQU05ckUsS0FBSzBGLEtBQU0sY0FBZUEsS0FBSzY0RCxJQUFNbitELEVBQUdzRixLQUFLaUssSUFBTWhNLEVBQUcrQixLQUFLNm1FLFFBQVMsRUFHOUUsU0FBU0MsRUFBUXBzRSxFQUFHdUQsR0FDaEJtb0UsRUFBTTlyRSxLQUFLMEYsS0FBTSxXQUFZQSxLQUFLK21FLE9BQVNyc0UsRUFBR3NGLEtBQUt3bkMsS0FBT3ZwQyxFQUc5RCxTQUFTK29FLEVBQWV0c0UsRUFBR3VELEdBQ3ZCbW9FLEVBQU05ckUsS0FBSzBGLEtBQU0sU0FBVUEsS0FBSzFCLE1BQVE1RCxFQUFHc0YsS0FBSzYwQixJQUFNNTJCLEVBRzFELFNBQVNncEUsRUFBUXZzRSxHQUNiMHJFLEVBQU05ckUsS0FBSzBGLEtBQU0sV0FBWUEsS0FBS3duQyxLQUFPOXNDLEVBQUdzRixLQUFLcW5ELFFBQVVybkQsS0FBS3duQyxNQUFReG5DLEtBQUsrRixLQUdqRixTQUFTbWhFLEVBQVF4c0UsR0FDYjByRSxFQUFNOXJFLEtBQUswRixLQUFNLFdBQVlBLEtBQUtxekMsS0FBTzM0QyxFQUFFNEMsY0FHL0MsU0FBUzZwRSxFQUFJenNFLEdBQ1QwckUsRUFBTTlyRSxLQUFLMEYsS0FBTSxPQUFRQSxLQUFLcXpDLEtBQU8zNEMsRUFBRTRDLGNBRzNDLFNBQVM4cEUsRUFBTTFzRSxHQUNYMHJFLEVBQU05ckUsS0FBSzBGLEtBQU0sU0FBVUEsS0FBS3F6QyxLQUFPMzRDLEVBQUU0QyxjQUc3QyxTQUFTK3BFLEVBQWMzc0UsR0FDbkIwckUsRUFBTTlyRSxLQUFLMEYsS0FBTSxrQkFBbUJBLEtBQUtxekMsS0FBTzM0QyxFQUFFNEMsY0FHdEQsU0FBU2dxRSxFQUFpQjVzRSxHQUN0QjByRSxFQUFNOXJFLEtBQUswRixLQUFNLHFCQUFzQkEsS0FBS3F6QyxLQUFPMzRDLEVBQUU0QyxjQUd6RCxJQUFJaXFFLEVBQVMsV0FPVCxTQUFTdHBFLEVBQUV2RCxFQUFHdUQsRUFBR3VwRSxFQUFHckYsRUFBRzlHLEdBK0JuQnI3RCxLQUFLeW5FLFNBQVcvc0UsRUFBR3NGLEtBQUswbkUsTUFBUXpwRSxFQUFHK0IsS0FBS3NuRCxPQUFTa2dCLEVBQUd4bkUsS0FBSzJuRSxLQUFPeEYsRUFBR25pRSxLQUFLNG5FLE9BQVN2TSxFQUNqRnI3RCxLQUFLMlEsS0FBTyxjQUFlM1EsS0FBSzZ3RCxRQS9CaEMsU0FBV24yRCxFQUFHdUQsR0FlVixJQUFJa2tFLEVBQ0osT0FBUXpuRSxFQUFFdUIsUUFDUixLQUFLLEVBQ0hrbUUsRUFBSSxlQUNKLE1BRUYsS0FBSyxFQUNIQSxFQUFJem5FLEVBQUUsR0FDTixNQUVGLFFBQ0V5bkUsRUFBSXpuRSxFQUFFK0MsTUFBTSxHQUFJLEdBQUd5eUIsS0FBSyxNQUFRLE9BQVN4MUIsRUFBRUEsRUFBRXVCLE9BQVMsR0FFMUQsTUFBa0QsWUFBY2ttRSxFQUFJLFNBQXpEbGtFLEVBQUksSUEzQmYsU0FBV3ZELEdBQ1AsU0FBU3VELEVBQUV2RCxHQUNQLE9BQU9BLEVBQUU2RyxXQUFXLEdBQUduSCxTQUFTLElBQUlrRCxjQUV4QyxPQUFPNUMsRUFBRXlDLFFBQVEsTUFBTyxRQUFRQSxRQUFRLEtBQU0sT0FBT0EsUUFBUSxRQUFTLE9BQU9BLFFBQVEsTUFBTyxPQUFPQSxRQUFRLE1BQU8sT0FBT0EsUUFBUSxNQUFPLE9BQU9BLFFBQVEsTUFBTyxPQUFPQSxRQUFRLDRCQUE0QixTQUFTekMsR0FDOU0sTUFBTyxPQUFTdUQsRUFBRXZELE1BQ25CeUMsUUFBUSx5QkFBeUIsU0FBU3pDLEdBQ3pDLE1BQU8sTUFBUXVELEVBQUV2RCxNQUNsQnlDLFFBQVEsb0JBQW9CLFNBQVN6QyxHQUNwQyxNQUFPLE9BQVN1RCxFQUFFdkQsTUFDbkJ5QyxRQUFRLG9CQUFvQixTQUFTekMsR0FDcEMsTUFBTyxNQUFRdUQsRUFBRXZELE1BZ0JKOHNFLENBQUV2cEUsR0FBSyxJQUFNLGdCQUFnRCxVQUc1Q3NCLENBQUU3RSxFQUFHdUQsR0FvY25ELE9BMWVBLFNBQVd2RCxFQUFHdUQsR0FDVixTQUFTdXBFLElBQ0x4bkUsS0FBS2ttQixZQUFjeHJCLEVBRXZCOHNFLEVBQUVydEUsVUFBWThELEVBQUU5RCxVQUFXTyxFQUFFUCxVQUFZLElBQUlxdEUsRUFzZTFDOXNFLENBQUV1RCxFQUFHd3lELE9BQVEsQ0FDaEJvWCxZQUFhNXBFLEVBQ2I4dEMsTUFwY0osU0FBV3J4QyxHQUNQLFNBQVM4c0UsSUFDTCxPQUFPOXNFLEVBQUU0ekMsVUFBVXc1QixHQUFJQyxJQUUzQixTQUFTNUYsSUFDTCxPQUFPMkYsR0FFWCxTQUFTek0sRUFBRXA5RCxHQU9QLE9BQU8rcEUsS0FBTy9wRSxJQUFNK3BFLEdBQUsvcEUsSUFBTStwRSxHQUFLLEVBQUdDLEdBQUssQ0FDeENOLEtBQU0sRUFDTkMsT0FBUSxFQUNSTSxRQUFRLElBVFosU0FBV2pxRSxFQUFHdXBFLEVBQUdyRixHQUNiLElBQUk5RyxFQUFHOTdELEVBQ1AsSUFBSzg3RCxFQUFJbU0sRUFBR3JGLEVBQUk5RyxFQUFHQSxJQUFzQixRQUFqQjk3RCxFQUFJN0UsRUFBRThDLE9BQU82OUQsS0FBa0JwOUQsRUFBRWlxRSxRQUFVanFFLEVBQUUwcEUsT0FBUTFwRSxFQUFFMnBFLE9BQVMsRUFDeEYzcEUsRUFBRWlxRSxRQUFTLEdBQU0sT0FBUzNvRSxHQUFLLFdBQWFBLEdBQUssV0FBYUEsR0FBS3RCLEVBQUUwcEUsT0FBUTFwRSxFQUFFMnBFLE9BQVMsRUFDeEYzcEUsRUFBRWlxRSxRQUFTLElBQU9qcUUsRUFBRTJwRSxTQUFVM3BFLEVBQUVpcUUsUUFBUyxHQU16Q1YsQ0FBRVMsR0FBSUQsR0FBSS9wRSxHQUFJK3BFLEdBQUsvcEUsR0FBSWdxRSxHQUUvQixTQUFTMW9FLEVBQUU3RSxHQUNQeXRFLEdBQUtKLEtBQU9BLEdBQUtJLEtBQU9BLEdBQUtKLEdBQUlLLEdBQUssSUFBS0EsR0FBR3BqRSxLQUFLdEssSUFFdkQsU0FBU2lwQyxFQUFFanBDLEdBQ1AsSUFBSXVELEVBQUksRUFDUixJQUFLdkQsRUFBRTZtQixPQUFRdGpCLEVBQUl2RCxFQUFFdUIsUUFBVXZCLEVBQUV1RCxFQUFJLEtBQU92RCxFQUFFdUQsR0FBS3ZELEVBQUVnQyxPQUFPdUIsRUFBRyxHQUFLQSxJQUV4RSxTQUFTWixJQUNMLElBQUlZLEVBQUd1cEUsRUFBR3JGLEVBQUc5RyxFQUFHMTNCLEVBQ2hCLE9BQU8xbEMsRUFBSThwRSxHQUFhLFFBQVRQLEVBQUl4ckUsTUFBbUJtbUUsRUFBSTRGLEdBQUksTUFBUXJ0RSxFQUFFNkcsV0FBV3dtRSxLQUFPMU0sRUFBSWdOLEdBQzlFTixPQUFTMU0sRUFBSSxLQUFNLElBQU1pTixJQUFNL29FLEVBQUU2aUUsS0FBTSxPQUFTL0csR0FBYyxRQUFUMTNCLEVBQUl0bUMsS0FDekQ4a0UsRUFENEU5RyxFQUFJLENBQUVBLEVBQUcxM0IsSUFDdkRva0MsR0FBSzVGLEVBQUdBLEVBQUlvRyxJQUFLLE9BQVNwRyxJQUFNQSxFQUFJcUcsSUFBSyxPQUFTckcsR0FBSzJGLEdBQUs3cEUsRUFDNUUsUUFBZHVwRSxFQUFJaUIsR0FBR2pCLEVBQUdyRixLQUFrQjRGLEdBQUs5cEUsRUFBR0EsRUFBSXVwRSxHQUFLdnBFLEVBQUl1cEUsSUFBTU8sR0FBSzlwRSxFQUFHQSxFQUFJc3FFLE1BQVFSLEdBQUs5cEUsRUFDaEZBLEVBQUlzcUUsSUFBS3RxRSxFQUViLFNBQVNqQyxJQUNMLElBQUl0QixFQUFHdUQsRUFBR3VwRSxFQUFHckYsRUFBRzlHLEVBQ2hCLEdBQUkzZ0UsRUFBSXF0RSxHQUFhLFFBQVQ5cEUsRUFBSWdrRSxPQUFvQmhrRSxFQUFJdXFFLElBQUssT0FBU3ZxRSxFQUFHLEdBQUl1cEUsRUFBSU8sR0FBSU8sS0FBTW5HLEVBQUk5b0QsSUFDL0VpdkQsS0FBTSxPQUFTbkcsRUFBSXFGLEVBQUlnQixJQUFNVCxHQUFLUCxFQUFHQSxFQUFJZSxJQUFLLE9BQVNmLEVBQUcsQ0FDdEQsSUFBS3JGLEVBQUksR0FBYSxRQUFUOUcsRUFBSXIyQixPQUFvQnEyQixFQUFJcjlELEtBQU0sT0FBU3E5RCxHQUFLOEcsRUFBRW45RCxLQUFLcTJELEdBQ3BFLFFBRHdFQSxFQUFJcjJCLE9BQzdEcTJCLEVBQUlyOUQsS0FDbkIsT0FBU21rRSxHQUFjLFFBQVQ5RyxFQUFJbi9CLE9BQW9CbS9CLEVBQUltTixJQUFLLE9BQVNuTixHQUFLeU0sR0FBS3B0RSxFQUNsRSxRQURxRXVELEVBQUl5cUUsR0FBR3pxRSxFQUFHa2tFLEVBQUc5RyxLQUNwRTBNLEdBQUtydEUsRUFBR0EsRUFBSXVELEdBQUt2RCxFQUFJdUQsSUFBTThwRSxHQUFLcnRFLEVBQUdBLEVBQUk2dEUsTUFBUVIsR0FBS3J0RSxFQUFHQSxFQUFJNnRFLFNBQ3RFUixHQUFLcnRFLEVBQUdBLEVBQUk2dEUsUUFBU1IsR0FBS3J0RSxFQUFHQSxFQUFJNnRFLEdBQ3hDLE9BQU83dEUsRUFFWCxTQUFTc0QsSUFDTCxJQUFJdEQsRUFDSixPQUFnQixRQUFUQSxFQUFJdXFELE1BQTZCLFFBQVR2cUQsRUFBSWl1RSxPQUFvQmp1RSxFQUFJa3VFLEtBQU9sdUUsRUFFdEUsU0FBU3VuRSxJQUNMLElBQUloa0UsRUFBR3VwRSxFQUNQLE9BQU92cEUsRUFBSThwRSxHQUFJLEtBQU9ydEUsRUFBRTZHLFdBQVd3bUUsS0FBT1AsRUFBSXFCLEdBQUlkLE9BQVNQLEVBQUksS0FBTSxJQUFNYyxJQUFNL29FLEVBQUV1cEUsS0FDbkYsT0FBU3RCLElBQU1NLEdBQUs3cEUsRUFBR3VwRSxFQUFJdUIsTUFBTyxPQUFTdkIsR0FBS08sR0FBSzlwRSxFQUFHQSxFQUFJdXBFLEdBQUt2cEUsRUFBSXVwRSxFQUFHdnBFLEVBRTVFLFNBQVNpK0IsSUFDTCxJQUFJaitCLEVBQUd1cEUsRUFDUCxPQUFPdnBFLEVBQUk4cEUsR0FBSSxLQUFPcnRFLEVBQUU2RyxXQUFXd21FLEtBQU9QLEVBQUl3QixHQUFJakIsT0FBU1AsRUFBSSxLQUFNLElBQU1jLElBQU0vb0UsRUFBRTBwRSxLQUNuRixPQUFTekIsSUFBTU0sR0FBSzdwRSxFQUFHdXBFLEVBQUkwQixNQUFPLE9BQVMxQixHQUFLTyxHQUFLOXBFLEVBQUdBLEVBQUl1cEUsR0FBS3ZwRSxFQUFJdXBFLEVBQUd2cEUsRUFFNUUsU0FBUyttQyxJQUNMLElBQUl0cUMsRUFBR3VELEVBQUd1cEUsRUFDVixPQUFPOXNFLEVBQUlxdEUsR0FBYSxRQUFUOXBFLEVBQUlELE1BQTRCLFFBQVR3cEUsRUFBSW51RCxNQUFtQnl1RCxHQUFLcHRFLEVBQ2xFLFFBRHFFdUQsRUFBSWtyRSxHQUFHbHJFLEVBQUd1cEUsS0FDakVPLEdBQUtydEUsRUFBR0EsRUFBSXVELEdBQUt2RCxFQUFJdUQsSUFBMEI4cEUsR0FBS3J0RSxFQUFHQSxFQUFJNnRFLElBQUs3dEUsRUFFbEYsU0FBUzJlLElBQ0wsSUFBSTNlLEVBQUd1RCxFQUFHdXBFLEVBQ1YsT0FBT2MsS0FBTTV0RSxFQUFJcXRFLEdBQWEsUUFBVDlwRSxFQUFJb1IsTUFBNEIsUUFBVG00RCxFQUFJNEIsT0FBb0I1QixFQUFJZ0IsSUFBSyxPQUFTaEIsR0FBS00sR0FBS3B0RSxFQUNsRixRQUFkdUQsRUFBSW9yRSxHQUFHcHJFLEVBQUd1cEUsS0FBa0JPLEdBQUtydEUsRUFBR0EsRUFBSXVELEdBQUt2RCxFQUFJdUQsSUFBTThwRSxHQUFLcnRFLEVBQUdBLEVBQUk2dEUsTUFBUVIsR0FBS3J0RSxFQUNoRkEsRUFBSTZ0RSxJQUFLRCxLQUFNLE9BQVM1dEUsSUFBTXVELEVBQUksS0FBTSxJQUFNcXFFLElBQU0vb0UsRUFBRStwRSxLQUFNNXVFLEVBRWhFLFNBQVMyVSxJQUNMLElBQUkzVSxFQUNKLE9BQWdCLFFBQVRBLEVBQUlmLE1BQTZCLFFBQVRlLEVBQUk2dUUsTUFBNkIsUUFBVDd1RSxFQUFJK2lFLE1BQzNELFFBRCtFL2lFLEVBQUk4dUUsTUFDM0QsUUFBVDl1RSxFQUFJK2dELE9BQW9CL2dELEVBQUlvRSxLQUFVcEUsRUFFekQsU0FBU2YsSUFDTCxJQUFJc0UsRUFBR3VwRSxFQUFHckYsRUFBRzlHLEVBQUcxM0IsRUFBR3RtQyxFQUNuQixPQUFPWSxFQUFJOHBFLEdBQUksTUFBUXJ0RSxFQUFFNkcsV0FBV3dtRSxLQUFPUCxFQUFJaUMsR0FBSTFCLE9BQVNQLEVBQUksS0FBTSxJQUFNYyxJQUFNL29FLEVBQUVtcUUsS0FDcEYsT0FBU2xDLEdBQWMsUUFBVHJGLEVBQUl6RSxNQUFtQixLQUFPaGpFLEVBQUU2RyxXQUFXd21FLEtBQU8xTSxFQUFJc08sR0FBSTVCLE9BQVMxTSxFQUFJLEtBQ3JGLElBQU1pTixJQUFNL29FLEVBQUVxcUUsS0FBTSxPQUFTdk8sR0FBYyxRQUFUMTNCLEVBQUkrNUIsTUFBbUIsTUFBUWhqRSxFQUFFNkcsV0FBV3dtRSxLQUFPMXFFLEVBQUl3c0UsR0FDekY5QixPQUFTMXFFLEVBQUksS0FBTSxJQUFNaXJFLElBQU0vb0UsRUFBRXVxRSxLQUFNLE9BQVN6c0UsR0FBS3lxRSxHQUFLN3BFLEVBQWlCLFFBQWR1cEUsRUFBSXVDLEdBQUc1SCxFQUFHeCtCLEtBQWtCb2tDLEdBQUs5cEUsRUFDOUZBLEVBQUl1cEUsR0FBS3ZwRSxFQUFJdXBFLElBQU1PLEdBQUs5cEUsRUFBR0EsRUFBSXNxRSxNQUE0QlIsR0FBSzlwRSxFQUFHQSxFQUFJc3FFLE1BQzNEUixHQUFLOXBFLEVBQUdBLEVBQUlzcUUsSUFBS3RxRSxFQUVqQyxTQUFTc3JFLElBQ0wsSUFBSXRyRSxFQUFHdXBFLEVBQUdyRixFQUFHOUcsRUFDYixPQUFPcDlELEVBQUk4cEUsR0FBSSxNQUFRcnRFLEVBQUU2RyxXQUFXd21FLEtBQU9QLEVBQUlpQyxHQUFJMUIsT0FBU1AsRUFBSSxLQUFNLElBQU1jLElBQU0vb0UsRUFBRW1xRSxLQUNwRixPQUFTbEMsR0FBYyxRQUFUckYsRUFBSXpFLE1BQW1CaGpFLEVBQUVvdEQsT0FBT2lnQixHQUFJLEtBQU9pQyxJQUFNM08sRUFBSTJPLEdBQUlqQyxJQUFNLElBQU0xTSxFQUFJLEtBQ3ZGLElBQU1pTixJQUFNL29FLEVBQUUwcUUsS0FBTSxPQUFTNU8sR0FBS3lNLEdBQUs3cEUsRUFBYyxRQUFYdXBFLEVBQUkwQyxHQUFHL0gsS0FBa0I0RixHQUFLOXBFLEVBQUdBLEVBQUl1cEUsR0FBS3ZwRSxFQUFJdXBFLElBQU1PLEdBQUs5cEUsRUFDbkdBLEVBQUlzcUUsTUFBNEJSLEdBQUs5cEUsRUFBR0EsRUFBSXNxRSxJQUFLdHFFLEVBRXJELFNBQVN3L0QsSUFDTCxJQUFJeC9ELEVBQUd1cEUsRUFBR3JGLEVBQUc5RyxFQUNiLE9BQU9wOUQsRUFBSThwRSxHQUFJLE1BQVFydEUsRUFBRTZHLFdBQVd3bUUsS0FBT1AsRUFBSWlDLEdBQUkxQixPQUFTUCxFQUFJLEtBQU0sSUFBTWMsSUFBTS9vRSxFQUFFbXFFLEtBQ3BGLE9BQVNsQyxHQUFjLFFBQVRyRixFQUFJekUsTUFBbUIsTUFBUWhqRSxFQUFFNkcsV0FBV3dtRSxLQUFPMU0sRUFBSXdPLEdBQUk5QixPQUFTMU0sRUFBSSxLQUN0RixJQUFNaU4sSUFBTS9vRSxFQUFFdXFFLEtBQU0sT0FBU3pPLEdBQUt5TSxHQUFLN3BFLEVBQWMsUUFBWHVwRSxFQUFJMkMsR0FBR2hJLEtBQWtCNEYsR0FBSzlwRSxFQUFHQSxFQUFJdXBFLEdBQUt2cEUsRUFBSXVwRSxJQUFNTyxHQUFLOXBFLEVBQ25HQSxFQUFJc3FFLE1BQTRCUixHQUFLOXBFLEVBQUdBLEVBQUlzcUUsSUFBS3RxRSxFQUVyRCxTQUFTdXJFLElBQ0wsSUFBSXZyRSxFQUFHdXBFLEVBQ1AsT0FBT3ZwRSxFQUFJOHBFLEdBQUksS0FBT3J0RSxFQUFFNkcsV0FBV3dtRSxLQUFPUCxFQUFJNEMsR0FBSXJDLE9BQVNQLEVBQUksS0FBTSxJQUFNYyxJQUFNL29FLEVBQUU4cUUsS0FDbkYsT0FBUzdDLElBQU1NLEdBQUs3cEUsRUFBR3VwRSxFQUFJOEMsTUFBTyxPQUFTOUMsR0FBS08sR0FBSzlwRSxFQUFHQSxFQUFJdXBFLEdBQUt2cEUsRUFBSXVwRSxFQUFHdnBFLEVBRTVFLFNBQVN3OUMsSUFDTCxJQUFJeDlDLEVBQUd1cEUsRUFDUCxPQUFPdnBFLEVBQUk4cEUsR0FBSSxLQUFPcnRFLEVBQUU2RyxXQUFXd21FLEtBQU9QLEVBQUkrQyxHQUFJeEMsT0FBU1AsRUFBSSxLQUFNLElBQU1jLElBQU0vb0UsRUFBRWlyRSxLQUNuRixPQUFTaEQsSUFBTU0sR0FBSzdwRSxFQUFHdXBFLEVBQUlpRCxNQUFPLE9BQVNqRCxHQUFLTyxHQUFLOXBFLEVBQUdBLEVBQUl1cEUsR0FBS3ZwRSxFQUFJdXBFLEVBQUd2cEUsRUFFNUUsU0FBU2EsSUFDTCxJQUFJYixFQUFHdXBFLEVBQ1AsT0FBT3ZwRSxFQUFJOHBFLEdBQUksS0FBT3J0RSxFQUFFNkcsV0FBV3dtRSxLQUFPUCxFQUFJa0QsR0FBSTNDLE9BQVNQLEVBQUksS0FBTSxJQUFNYyxJQUFNL29FLEVBQUVvckUsS0FDbkYsT0FBU25ELElBQU1NLEdBQUs3cEUsRUFBR3VwRSxFQUFJb0QsTUFBTyxPQUFTcEQsR0FBS08sR0FBSzlwRSxFQUFHQSxFQUFJdXBFLEdBQUt2cEUsRUFBSXVwRSxFQUFHdnBFLEVBRTVFLFNBQVNtckUsSUFDTCxJQUFJbnJFLEVBQ0osT0FBTyxLQUFPdkQsRUFBRTZHLFdBQVd3bUUsS0FBTzlwRSxFQUFJeXNFLEdBQUkzQyxPQUFTOXBFLEVBQUksS0FBTSxJQUFNcXFFLElBQU0vb0UsRUFBRW9yRSxLQUMzRTFzRSxFQUVKLFNBQVN5L0QsSUFDTCxJQUFJei9ELEVBQUd1cEUsRUFBR3JGLEVBQ1YsR0FBSWxrRSxFQUFJOHBFLEdBQUlQLEVBQUksR0FBSXFELEdBQUdsb0UsS0FBS2pJLEVBQUU4QyxPQUFPdXFFLE1BQVE1RixFQUFJem5FLEVBQUU4QyxPQUFPdXFFLElBQUtBLE9BQVM1RixFQUFJLEtBQzVFLElBQU1tRyxJQUFNL29FLEVBQUV1ckUsS0FBTSxPQUFTM0ksRUFBRyxLQUFNLE9BQVNBLEdBQUtxRixFQUFFeGlFLEtBQUttOUQsR0FBSTBJLEdBQUdsb0UsS0FBS2pJLEVBQUU4QyxPQUFPdXFFLE1BQVE1RixFQUFJem5FLEVBQUU4QyxPQUFPdXFFLElBQ3JHQSxPQUFTNUYsRUFBSSxLQUFNLElBQU1tRyxJQUFNL29FLEVBQUV1ckUsVUFBV3RELEVBQUllLEdBQ2hELE9BQU8sT0FBU2YsSUFBTU0sR0FBSzdwRSxFQUFHdXBFLEVBQUl1RCxHQUFHdkQsSUFBSyxPQUFTQSxHQUFLTyxHQUFLOXBFLEVBQUdBLEVBQUl1cEUsR0FBS3ZwRSxFQUFJdXBFLEVBQzdFdnBFLEVBRUosU0FBU2duRCxJQUNMLElBQUlobkQsRUFBR3VwRSxFQUFHckYsRUFBRzlHLEVBQ2IsT0FBT3A5RCxFQUFJOHBFLEdBQUksS0FBT3J0RSxFQUFFNkcsV0FBV3dtRSxLQUFPUCxFQUFJd0QsR0FBSWpELE9BQVNQLEVBQUksS0FBTSxJQUFNYyxJQUFNL29FLEVBQUUwckUsS0FDbkYsT0FBU3pELEdBQWMsUUFBVHJGLEVBQUkrSSxNQUE2QixRQUFUL0ksRUFBSWdKLE1BQTZCLFFBQVRoSixFQUFJbHZDLE9BQW9Ca3ZDLEVBQUlqVCxLQUMxRixPQUFTaVQsR0FBSyxLQUFPem5FLEVBQUU2RyxXQUFXd21FLEtBQU8xTSxFQUFJK1AsR0FBSXJELE9BQVMxTSxFQUFJLEtBQU0sSUFBTWlOLElBQU0vb0UsRUFBRThyRSxLQUNsRixPQUFTaFEsR0FBS3lNLEdBQUs3cEUsRUFBYyxRQUFYdXBFLEVBQUk4RCxHQUFHbkosS0FBa0I0RixHQUFLOXBFLEVBQUdBLEVBQUl1cEUsR0FBS3ZwRSxFQUFJdXBFLElBQU1PLEdBQUs5cEUsRUFDL0VBLEVBQUlzcUUsTUFBUVIsR0FBSzlwRSxFQUFHQSxFQUFJc3FFLE1BQVFSLEdBQUs5cEUsRUFBR0EsRUFBSXNxRSxJQUFLdHFFLEVBRXJELFNBQVNpeEQsSUFDTCxJQUFJeDBELEVBQUd1RCxFQUNQLE9BQU92RCxFQUFJcXRFLEdBQWEsUUFBVDlwRSxFQUFJWixPQUFvQnlxRSxHQUFLcHRFLEVBQUd1RCxFQUFJc3RFLEdBQUd0dEUsSUFBSyxPQUFTQSxHQUFLOHBFLEdBQUtydEUsRUFDOUVBLEVBQUl1RCxHQUFLdkQsRUFBSXVELEVBQUd2RCxFQUVwQixTQUFTdTRCLElBQ0wsSUFBSWgxQixFQUFHdXBFLEVBQUdyRixFQUNWLE9BQU9sa0UsRUFBSThwRSxHQUFJcnRFLEVBQUVvdEQsT0FBT2lnQixHQUFJLEtBQU95RCxJQUFNaEUsRUFBSWdFLEdBQUl6RCxJQUFNLElBQU1QLEVBQUksS0FBTSxJQUFNYyxJQUFNL29FLEVBQUVvWSxLQUNyRixPQUFTNnZELEdBQWMsUUFBVHJGLEVBQUk5a0UsTUFBbUJ5cUUsR0FBSzdwRSxFQUFjLFFBQVh1cEUsRUFBSWlFLEdBQUd0SixLQUFrQjRGLEdBQUs5cEUsRUFBR0EsRUFBSXVwRSxHQUFLdnBFLEVBQUl1cEUsSUFDL0VPLEdBQUs5cEUsRUFBR0EsRUFBSXNxRSxJQUFLdHFFLEVBRWpDLFNBQVNpdEUsSUFDTCxJQUFJanRFLEVBQUd1cEUsRUFBR3JGLEVBQ1YsT0FBT2xrRSxFQUFJOHBFLEdBQUlydEUsRUFBRW90RCxPQUFPaWdCLEdBQUksS0FBTzJELElBQU1sRSxFQUFJa0UsR0FBSTNELElBQU0sSUFBTVAsRUFBSSxLQUFNLElBQU1jLElBQU0vb0UsRUFBRW9zRSxLQUNyRixPQUFTbkUsR0FBYyxRQUFUckYsRUFBSTlrRSxNQUFtQnlxRSxHQUFLN3BFLEVBQWMsUUFBWHVwRSxFQUFJb0UsR0FBR3pKLEtBQWtCNEYsR0FBSzlwRSxFQUFHQSxFQUFJdXBFLEdBQUt2cEUsRUFBSXVwRSxJQUMvRU8sR0FBSzlwRSxFQUFHQSxFQUFJc3FFLElBQUt0cUUsRUFFakMsU0FBU2t0RSxJQUNMLElBQUlsdEUsRUFBR3VwRSxFQUFHckYsRUFDVixPQUFPbGtFLEVBQUk4cEUsR0FBSXJ0RSxFQUFFb3RELE9BQU9pZ0IsR0FBSSxLQUFPOEQsSUFBTXJFLEVBQUlxRSxHQUFJOUQsSUFBTSxJQUFNUCxFQUFJLEtBQU0sSUFBTWMsSUFBTS9vRSxFQUFFdXNFLEtBQ3JGLE9BQVN0RSxHQUFjLFFBQVRyRixFQUFJOWtFLE1BQW1CeXFFLEdBQUs3cEUsRUFBYyxRQUFYdXBFLEVBQUl1RSxHQUFHNUosS0FBa0I0RixHQUFLOXBFLEVBQUdBLEVBQUl1cEUsR0FBS3ZwRSxFQUFJdXBFLElBQy9FTyxHQUFLOXBFLEVBQUdBLEVBQUlzcUUsSUFBS3RxRSxFQUVqQyxTQUFTMHFFLElBQ0wsSUFBSTFxRSxFQUFHdXBFLEVBQUdyRixFQUFHOUcsRUFBRzEzQixFQUNoQixHQUFJMmtDLEtBQU1ycUUsRUFBSThwRSxHQUFJLEtBQU9ydEUsRUFBRTZHLFdBQVd3bUUsS0FBT1AsRUFBSXdFLEdBQUlqRSxPQUFTUCxFQUFJLEtBQU0sSUFBTWMsSUFBTS9vRSxFQUFFMHNFLEtBQ3RGLE9BQVN6RSxFQUFHLEdBQUksS0FBTzlzRSxFQUFFNkcsV0FBV3dtRSxLQUFPNUYsRUFBSTBHLEdBQUlkLE9BQVM1RixFQUFJLEtBQU0sSUFBTW1HLElBQU0vb0UsRUFBRXVwRSxLQUNwRixPQUFTM0csSUFBTUEsRUFBSXFHLElBQUssT0FBU3JHLEVBQUcsQ0FDaEMsSUFBSzlHLEVBQUksR0FBYSxRQUFUMTNCLEVBQUk2NUIsT0FBb0I3NUIsRUFBSXVvQyxLQUFNLE9BQVN2b0MsR0FBSzAzQixFQUFFcjJELEtBQUsyK0IsR0FDcEUsUUFEd0VBLEVBQUk2NUIsT0FDN0Q3NUIsRUFBSXVvQyxLQUNuQixPQUFTN1EsR0FBSyxLQUFPM2dFLEVBQUU2RyxXQUFXd21FLEtBQU9wa0MsRUFBSXdvQyxHQUFJcEUsT0FBU3BrQyxFQUFJLEtBQU0sSUFBTTJrQyxJQUFNL29FLEVBQUU2c0UsS0FDbEYsT0FBU3pvQyxHQUFLbWtDLEdBQUs3cEUsRUFBaUIsUUFBZHVwRSxFQUFJNkUsR0FBR2xLLEVBQUc5RyxLQUFrQjBNLEdBQUs5cEUsRUFBR0EsRUFBSXVwRSxHQUFLdnBFLEVBQUl1cEUsSUFBTU8sR0FBSzlwRSxFQUNsRkEsRUFBSXNxRSxNQUFRUixHQUFLOXBFLEVBQUdBLEVBQUlzcUUsU0FDckJSLEdBQUs5cEUsRUFBR0EsRUFBSXNxRSxRQUFTUixHQUFLOXBFLEVBQUdBLEVBQUlzcUUsR0FDeEMsT0FBT0QsS0FBTSxPQUFTcnFFLElBQU11cEUsRUFBSSxLQUFNLElBQU1jLElBQU0vb0UsRUFBRStzRSxLQUFNcnVFLEVBRTlELFNBQVN1L0QsSUFDTCxJQUFJdi9ELEVBQUd1cEUsRUFBR3JGLEVBQUc5RyxFQUNiLE9BQU9pTixLQUFNcnFFLEVBQUk4cEUsR0FBYSxRQUFUUCxFQUFJMEUsTUFBbUIsS0FBT3h4RSxFQUFFNkcsV0FBV3dtRSxLQUFPNUYsRUFBSW9LLEdBQUl4RSxPQUFTNUYsRUFBSSxLQUM1RixJQUFNbUcsSUFBTS9vRSxFQUFFaXRFLEtBQU0sT0FBU3JLLEdBQWMsUUFBVDlHLEVBQUk2USxNQUFtQnBFLEdBQUs3cEUsRUFBaUIsUUFBZHVwRSxFQUFJaUYsR0FBR2pGLEVBQUduTSxLQUFrQjBNLEdBQUs5cEUsRUFDbEdBLEVBQUl1cEUsR0FBS3ZwRSxFQUFJdXBFLElBQTBCTyxHQUFLOXBFLEVBQUdBLEVBQUlzcUUsTUFBUVIsR0FBSzlwRSxFQUFHQSxFQUFJc3FFLElBQUtELEtBQzVFLE9BQVNycUUsSUFBTXVwRSxFQUFJLEtBQU0sSUFBTWMsSUFBTS9vRSxFQUFFbXRFLEtBQU16dUUsRUFFakQsU0FBU2l1RSxJQUNMLElBQUl4eEUsRUFDSixPQUFPNHRFLEtBQWUsUUFBVDV0RSxFQUFJaXlFLE9BQW9CanlFLEVBQUlreUUsS0FBTXRFLEtBQU0sT0FBUzV0RSxHQUFnQixJQUFNNHRFLElBQU0vb0UsRUFBRXN0RSxJQUM1Rm55RSxFQUVKLFNBQVNreUUsSUFDTCxJQUFJM3VFLEVBQUd1cEUsRUFDUCxPQUFPdnBFLEVBQUk4cEUsR0FBSStFLEdBQUducUUsS0FBS2pJLEVBQUU4QyxPQUFPdXFFLE1BQVFQLEVBQUk5c0UsRUFBRThDLE9BQU91cUUsSUFBS0EsT0FBU1AsRUFBSSxLQUFNLElBQU1jLElBQU0vb0UsRUFBRXd0RSxLQUMzRixPQUFTdkYsSUFBTU0sR0FBSzdwRSxFQUFHdXBFLEVBQUl3RixHQUFHeEYsSUFBSyxPQUFTQSxHQUFLTyxHQUFLOXBFLEVBQUdBLEVBQUl1cEUsR0FBS3ZwRSxFQUFJdXBFLEVBQUd2cEUsRUFFN0UsU0FBUzB1RSxJQUNMLElBQUlqeUUsRUFDSixPQUFnQixRQUFUQSxFQUFJdXlFLE1BQTZCLFFBQVR2eUUsRUFBSXd5RSxPQUE2QixRQUFUeHlFLEVBQUlxaUUsT0FDM0QsUUFEK0VyaUUsRUFBSXl5RSxPQUMzRCxRQUFUenlFLEVBQUkweUUsT0FBNkIsUUFBVDF5RSxFQUFJMnlFLE9BQTZCLFFBQVQzeUUsRUFBSTR5RSxPQUNuRSxRQUR1RjV5RSxFQUFJNnlFLE9BQ25FLFFBQVQ3eUUsRUFBSTh5RSxPQUE2QixRQUFUOXlFLEVBQUkreUUsT0FBNkIsUUFBVC95RSxFQUFJZ3pFLE9BQ25FLFFBRHVGaHpFLEVBQUlpekUsT0FDbkUsUUFBVGp6RSxFQUFJa3pFLE9BQTZCLFFBQVRsekUsRUFBSTBDLE9BQThCLFFBQVYxQyxFQUFJbXpFLE9BQ25FLFFBRHdGbnpFLEVBQUlvekUsT0FDbkUsUUFBVnB6RSxFQUFJcXpFLFFBQXFCcnpFLEVBQUlzekUsTUFBdUJ0ekUsRUFFdkUsU0FBU2t1RSxJQUNMLElBQUlsdUUsRUFDSixPQUFnQixRQUFUQSxFQUFJZ21CLE1BQTZCLFFBQVRobUIsRUFBSXduRSxPQUFvQnhuRSxFQUFJdXpFLEtBQU92ekUsRUFFdEUsU0FBU2dtQixJQUNMLElBQUl6aUIsRUFBR3VwRSxFQUNQLE9BQU92cEUsRUFBSThwRSxHQUFJLEtBQU9ydEUsRUFBRTZHLFdBQVd3bUUsS0FBT1AsRUFBSTBHLEdBQUluRyxPQUFTUCxFQUFJLEtBQU0sSUFBTWMsSUFBTS9vRSxFQUFFNHVFLEtBQ25GLE9BQVMzRyxJQUFNTSxHQUFLN3BFLEVBQUd1cEUsRUFBSTRHLE1BQU8sT0FBUzVHLEdBQUtPLEdBQUs5cEUsRUFBR0EsRUFBSXVwRSxHQUFLdnBFLEVBQUl1cEUsRUFBR3ZwRSxFQUU1RSxTQUFTZ3dFLElBQ0wsSUFBSWh3RSxFQUFHdXBFLEVBQ1AsT0FBT2MsS0FBTXJxRSxFQUFJOHBFLEdBQUlzRyxHQUFHMXJFLEtBQUtqSSxFQUFFOEMsT0FBT3VxRSxNQUFRUCxFQUFJOXNFLEVBQUU4QyxPQUFPdXFFLElBQUtBLE9BQVNQLEVBQUksS0FDN0UsSUFBTWMsSUFBTS9vRSxFQUFFK3VFLEtBQU0sT0FBUzlHLElBQU1NLEdBQUs3cEUsRUFBR3VwRSxFQUFJd0YsR0FBR3hGLElBQUssT0FBU0EsR0FBS08sR0FBSzlwRSxFQUFHQSxFQUFJdXBFLEdBQUt2cEUsRUFBSXVwRSxFQUMxRmMsS0FBTSxPQUFTcnFFLElBQU11cEUsRUFBSSxLQUFNLElBQU1jLElBQU0vb0UsRUFBRWd2RSxLQUFNdHdFLEVBRXZELFNBQVNpa0UsSUFDTCxJQUFJeG5FLEVBQ0osT0FBZ0IsUUFBVEEsRUFBSWdpRSxNQUE2QixRQUFUaGlFLEVBQUk4ekUsT0FBNkIsUUFBVDl6RSxFQUFJd3lFLE9BQzNELFFBRCtFeHlFLEVBQUlxaUUsT0FDM0QsUUFBVHJpRSxFQUFJeXlFLE9BQTZCLFFBQVR6eUUsRUFBSTB5RSxPQUE2QixRQUFUMXlFLEVBQUkyeUUsT0FDbkUsUUFEdUYzeUUsRUFBSTR5RSxPQUNuRSxRQUFUNXlFLEVBQUk2eUUsT0FBNkIsUUFBVDd5RSxFQUFJOHlFLE9BQTZCLFFBQVQ5eUUsRUFBSSt5RSxPQUNuRSxRQUR1Ri95RSxFQUFJZ3pFLE9BQ25FLFFBQVRoekUsRUFBSWl6RSxPQUE2QixRQUFUanpFLEVBQUlrekUsT0FBNkIsUUFBVGx6RSxFQUFJK3pFLE9BQ25FLFFBRHVGL3pFLEVBQUkwQyxPQUNsRSxRQUFWMUMsRUFBSW16RSxPQUErQixRQUFWbnpFLEVBQUlvekUsT0FBK0IsUUFBVnB6RSxFQUFJcXpFLFFBQXFCcnpFLEVBQUlzekUsTUFDOUZ0ekUsRUFFSixTQUFTdXlFLElBQ0wsSUFBSWh2RSxFQUFHdXBFLEVBQ1AsT0FBT3ZwRSxFQUFJOHBFLEdBQUlydEUsRUFBRW90RCxPQUFPaWdCLEdBQUksS0FBTzJHLElBQU1sSCxFQUFJa0gsR0FBSTNHLElBQU0sSUFBTVAsRUFBSSxLQUFNLElBQU1jLElBQU0vb0UsRUFBRW92RSxLQUNyRixPQUFTbkgsSUFBTU0sR0FBSzdwRSxFQUFHdXBFLEVBQUlvSCxNQUFPLE9BQVNwSCxHQUFLTyxHQUFLOXBFLEVBQUdBLEVBQUl1cEUsR0FBS3ZwRSxFQUFJdXBFLEVBQUd2cEUsRUFFNUUsU0FBU3krRCxJQUNMLElBQUl6K0QsRUFBR3VwRSxFQUNQLE9BQU92cEUsRUFBSThwRSxHQUFJcnRFLEVBQUVvdEQsT0FBT2lnQixHQUFJLEtBQU8yRyxJQUFNbEgsRUFBSWtILEdBQUkzRyxJQUFNLElBQU1QLEVBQUksS0FBTSxJQUFNYyxJQUFNL29FLEVBQUVvdkUsS0FDckYsT0FBU25ILElBQU1NLEdBQUs3cEUsRUFBR3VwRSxFQUFJcUgsTUFBTyxPQUFTckgsR0FBS08sR0FBSzlwRSxFQUFHQSxFQUFJdXBFLEdBQUt2cEUsRUFBSXVwRSxFQUFHdnBFLEVBRTVFLFNBQVN1d0UsS0FDTCxJQUFJdndFLEVBQUd1cEUsRUFDUCxPQUFPdnBFLEVBQUk4cEUsR0FBSXJ0RSxFQUFFb3RELE9BQU9pZ0IsR0FBSSxLQUFPK0csSUFBTXRILEVBQUlzSCxHQUFJL0csSUFBTSxJQUFNUCxFQUFJLEtBQU0sSUFBTWMsSUFBTS9vRSxFQUFFd3ZFLEtBQ3JGLE9BQVN2SCxJQUFNTSxHQUFLN3BFLEVBQUd1cEUsRUFBSXdILE1BQU8sT0FBU3hILEdBQUtPLEdBQUs5cEUsRUFBR0EsRUFBSXVwRSxHQUFLdnBFLEVBQUl1cEUsRUFBR3ZwRSxFQUU1RSxTQUFTOCtELEtBQ0wsSUFBSTkrRCxFQUFHdXBFLEVBQ1AsT0FBT3ZwRSxFQUFJOHBFLEdBQUlydEUsRUFBRW90RCxPQUFPaWdCLEdBQUksS0FBT2tILElBQU16SCxFQUFJeUgsR0FBSWxILElBQU0sSUFBTVAsRUFBSSxLQUFNLElBQU1jLElBQU0vb0UsRUFBRTJ2RSxLQUNyRixPQUFTMUgsSUFBTU0sR0FBSzdwRSxFQUFHdXBFLEVBQUkySCxNQUFPLE9BQVMzSCxHQUFLTyxHQUFLOXBFLEVBQUdBLEVBQUl1cEUsR0FBS3ZwRSxFQUFJdXBFLEVBQUd2cEUsRUFFNUUsU0FBU2t2RSxLQUNMLElBQUlsdkUsRUFBR3VwRSxFQUNQLE9BQU92cEUsRUFBSThwRSxHQUFJcnRFLEVBQUVvdEQsT0FBT2lnQixHQUFJLEtBQU9xSCxJQUFNNUgsRUFBSTRILEdBQUlySCxJQUFNLElBQU1QLEVBQUksS0FBTSxJQUFNYyxJQUFNL29FLEVBQUU4dkUsS0FDckYsT0FBUzdILElBQU1NLEdBQUs3cEUsRUFBR3VwRSxFQUFJOEgsTUFBTyxPQUFTOUgsR0FBS08sR0FBSzlwRSxFQUFHQSxFQUFJdXBFLEdBQUt2cEUsRUFBSXVwRSxFQUFHdnBFLEVBRTVFLFNBQVNtdkUsS0FDTCxJQUFJbnZFLEVBQUd1cEUsRUFDUCxPQUFPdnBFLEVBQUk4cEUsR0FBSXJ0RSxFQUFFb3RELE9BQU9pZ0IsR0FBSSxLQUFPd0gsSUFBTS9ILEVBQUkrSCxHQUFJeEgsSUFBTSxJQUFNUCxFQUFJLEtBQU0sSUFBTWMsSUFBTS9vRSxFQUFFaXdFLEtBQ3JGLE9BQVNoSSxJQUFNTSxHQUFLN3BFLEVBQUd1cEUsRUFBSWlJLE1BQU8sT0FBU2pJLEdBQUtPLEdBQUs5cEUsRUFBR0EsRUFBSXVwRSxHQUFLdnBFLEVBQUl1cEUsRUFBR3ZwRSxFQUU1RSxTQUFTb3ZFLEtBQ0wsSUFBSXB2RSxFQUFHdXBFLEVBQ1AsT0FBT3ZwRSxFQUFJOHBFLEdBQUlydEUsRUFBRW90RCxPQUFPaWdCLEdBQUksS0FBTzJILElBQU1sSSxFQUFJa0ksR0FBSTNILElBQU0sSUFBTVAsRUFBSSxLQUFNLElBQU1jLElBQU0vb0UsRUFBRW93RSxLQUNyRixPQUFTbkksSUFBTU0sR0FBSzdwRSxFQUFHdXBFLEVBQUlvSSxNQUFPLE9BQVNwSSxHQUFLTyxHQUFLOXBFLEVBQUdBLEVBQUl1cEUsR0FBS3ZwRSxFQUFJdXBFLEVBQUd2cEUsRUFFNUUsU0FBU3F2RSxLQUNMLElBQUlydkUsRUFBR3VwRSxFQUNQLE9BQU92cEUsRUFBSThwRSxHQUFJcnRFLEVBQUVvdEQsT0FBT2lnQixHQUFJLEtBQU84SCxJQUFNckksRUFBSXFJLEdBQUk5SCxJQUFNLElBQU1QLEVBQUksS0FBTSxJQUFNYyxJQUFNL29FLEVBQUV1d0UsS0FDckYsT0FBU3RJLElBQU1NLEdBQUs3cEUsRUFBR3VwRSxFQUFJdUksTUFBTyxPQUFTdkksR0FBS08sR0FBSzlwRSxFQUFHQSxFQUFJdXBFLEdBQUt2cEUsRUFBSXVwRSxFQUFHdnBFLEVBRTVFLFNBQVNzdkUsS0FDTCxJQUFJdHZFLEVBQUd1cEUsRUFDUCxPQUFPdnBFLEVBQUk4cEUsR0FBSXJ0RSxFQUFFb3RELE9BQU9pZ0IsR0FBSSxLQUFPaUksSUFBTXhJLEVBQUl3SSxHQUFJakksSUFBTSxJQUFNUCxFQUFJLEtBQU0sSUFBTWMsSUFBTS9vRSxFQUFFMHdFLEtBQ3JGLE9BQVN6SSxJQUFNTSxHQUFLN3BFLEVBQUd1cEUsRUFBSTBJLE1BQU8sT0FBUzFJLEdBQUtPLEdBQUs5cEUsRUFBR0EsRUFBSXVwRSxHQUFLdnBFLEVBQUl1cEUsRUFBR3ZwRSxFQUU1RSxTQUFTdXZFLEtBQ0wsSUFBSXZ2RSxFQUFHdXBFLEVBQ1AsT0FBT3ZwRSxFQUFJOHBFLEdBQUlydEUsRUFBRW90RCxPQUFPaWdCLEdBQUksS0FBT29JLElBQU0zSSxFQUFJMkksR0FBSXBJLElBQU0sSUFBTVAsRUFBSSxLQUFNLElBQU1jLElBQU0vb0UsRUFBRThZLEtBQ3JGLE9BQVNtdkQsSUFBTU0sR0FBSzdwRSxFQUFHdXBFLEVBQUk0SSxNQUFPLE9BQVM1SSxHQUFLTyxHQUFLOXBFLEVBQUdBLEVBQUl1cEUsR0FBS3ZwRSxFQUFJdXBFLEVBQUd2cEUsRUFFNUUsU0FBU3d2RSxLQUNMLElBQUl4dkUsRUFBR3VwRSxFQUNQLE9BQU92cEUsRUFBSThwRSxHQUFJcnRFLEVBQUVvdEQsT0FBT2lnQixHQUFJLEtBQU9zSSxJQUFNN0ksRUFBSTZJLEdBQUl0SSxJQUFNLElBQU1QLEVBQUksS0FBTSxJQUFNYyxJQUFNL29FLEVBQUUrd0UsS0FDckYsT0FBUzlJLElBQU1NLEdBQUs3cEUsRUFBR3VwRSxFQUFJK0ksTUFBTyxPQUFTL0ksR0FBS08sR0FBSzlwRSxFQUFHQSxFQUFJdXBFLEdBQUt2cEUsRUFBSXVwRSxFQUFHdnBFLEVBRTVFLFNBQVN5dkUsS0FDTCxJQUFJenZFLEVBQUd1cEUsRUFDUCxPQUFPdnBFLEVBQUk4cEUsR0FBSXJ0RSxFQUFFb3RELE9BQU9pZ0IsR0FBSSxLQUFPeUksSUFBTWhKLEVBQUlnSixHQUFJekksSUFBTSxJQUFNUCxFQUFJLEtBQU0sSUFBTWMsSUFBTS9vRSxFQUFFa3hFLEtBQ3JGLE9BQVNqSixJQUFNTSxHQUFLN3BFLEVBQUd1cEUsRUFBSWtKLE1BQU8sT0FBU2xKLEdBQUtPLEdBQUs5cEUsRUFBR0EsRUFBSXVwRSxHQUFLdnBFLEVBQUl1cEUsRUFBR3ZwRSxFQUU1RSxTQUFTMHZFLEtBQ0wsSUFBSTF2RSxFQUFHdXBFLEVBQ1AsT0FBT3ZwRSxFQUFJOHBFLEdBQUlydEUsRUFBRW90RCxPQUFPaWdCLEdBQUksS0FBTzRJLElBQU1uSixFQUFJbUosR0FBSTVJLElBQU0sSUFBTVAsRUFBSSxLQUFNLElBQU1jLElBQU0vb0UsRUFBRXF4RSxLQUNyRixPQUFTcEosSUFBTU0sR0FBSzdwRSxFQUFHdXBFLEVBQUlxSixNQUFPLE9BQVNySixHQUFLTyxHQUFLOXBFLEVBQUdBLEVBQUl1cEUsR0FBS3ZwRSxFQUFJdXBFLEVBQUd2cEUsRUFFNUUsU0FBUzJ2RSxLQUNMLElBQUkzdkUsRUFBR3VwRSxFQUNQLE9BQU92cEUsRUFBSThwRSxHQUFJcnRFLEVBQUVvdEQsT0FBT2lnQixHQUFJLEtBQU8rSSxJQUFNdEosRUFBSXNKLEdBQUkvSSxJQUFNLElBQU1QLEVBQUksS0FBTSxJQUFNYyxJQUFNL29FLEVBQUV3eEUsS0FDckYsT0FBU3ZKLElBQU1NLEdBQUs3cEUsRUFBR3VwRSxFQUFJd0osTUFBTyxPQUFTeEosR0FBS08sR0FBSzlwRSxFQUFHQSxFQUFJdXBFLEdBQUt2cEUsRUFBSXVwRSxFQUFHdnBFLEVBRTVFLFNBQVNpdkUsS0FDTCxJQUFJanZFLEVBQUd1cEUsRUFBR3JGLEVBQ1YsT0FBT2xrRSxFQUFJOHBFLEdBQUlydEUsRUFBRW90RCxPQUFPaWdCLEdBQUksS0FBT2tKLElBQU16SixFQUFJeUosR0FBSWxKLElBQU0sSUFBTVAsRUFBSSxLQUFNLElBQU1jLElBQU0vb0UsRUFBRTJ4RSxLQUNyRixPQUFTMUosR0FBSzlzRSxFQUFFdUIsT0FBUzhyRSxJQUFNNUYsRUFBSXpuRSxFQUFFOEMsT0FBT3VxRSxJQUFLQSxPQUFTNUYsRUFBSSxLQUFNLElBQU1tRyxJQUFNL29FLEVBQUU0eEUsS0FDbEYsT0FBU2hQLEdBQUsyRixHQUFLN3BFLEVBQWMsUUFBWHVwRSxFQUFJNEosR0FBR2pQLEtBQWtCNEYsR0FBSzlwRSxFQUFHQSxFQUFJdXBFLEdBQUt2cEUsRUFBSXVwRSxJQUFNTyxHQUFLOXBFLEVBQy9FQSxFQUFJc3FFLE1BQVFSLEdBQUs5cEUsRUFBR0EsRUFBSXNxRSxJQUFLdHFFLEVBRWpDLFNBQVN3d0UsS0FDTCxJQUFJeHdFLEVBQUd1cEUsRUFBR3JGLEVBQ1YsT0FBT2xrRSxFQUFJOHBFLEdBQUksS0FBT3J0RSxFQUFFNkcsV0FBV3dtRSxLQUFPUCxFQUFJNkosR0FBSXRKLE9BQVNQLEVBQUksS0FBTSxJQUFNYyxJQUFNL29FLEVBQUUreEUsS0FDbkYsT0FBUzlKLEdBQUsrSixHQUFHNXVFLEtBQUtqSSxFQUFFOEMsT0FBT3VxRSxNQUFRNUYsRUFBSXpuRSxFQUFFOEMsT0FBT3VxRSxJQUFLQSxPQUFTNUYsRUFBSSxLQUFNLElBQU1tRyxJQUFNL29FLEVBQUVpeUUsS0FDMUYsT0FBU3JQLEdBQUsyRixHQUFLN3BFLEVBQWMsUUFBWHVwRSxFQUFJaUssR0FBR3RQLEtBQWtCNEYsR0FBSzlwRSxFQUFHQSxFQUFJdXBFLEdBQUt2cEUsRUFBSXVwRSxJQUFNTyxHQUFLOXBFLEVBQy9FQSxFQUFJc3FFLE1BQVFSLEdBQUs5cEUsRUFBR0EsRUFBSXNxRSxJQUFLdHFFLEVBRWpDLFNBQVNiLEtBQ0wsSUFBSWEsRUFBR3VwRSxFQUFHckYsRUFBRzlHLEVBQ2IsR0FBSXA5RCxFQUFJOHBFLEdBQUlydEUsRUFBRW90RCxPQUFPaWdCLEdBQUksS0FBTzJKLElBQU1sSyxFQUFJa0ssR0FBSTNKLElBQU0sSUFBTVAsRUFBSSxLQUFNLElBQU1jLElBQU0vb0UsRUFBRW95RSxLQUNsRixPQUFTbkssRUFBRyxDQUNSLEdBQUlyRixFQUFJLEdBQUl5UCxHQUFHanZFLEtBQUtqSSxFQUFFOEMsT0FBT3VxRSxNQUFRMU0sRUFBSTNnRSxFQUFFOEMsT0FBT3VxRSxJQUFLQSxPQUFTMU0sRUFBSSxLQUFNLElBQU1pTixJQUFNL29FLEVBQUVzeUUsS0FDeEYsT0FBU3hXLEVBQUcsS0FBTSxPQUFTQSxHQUFLOEcsRUFBRW45RCxLQUFLcTJELEdBQUl1VyxHQUFHanZFLEtBQUtqSSxFQUFFOEMsT0FBT3VxRSxNQUFRMU0sRUFBSTNnRSxFQUFFOEMsT0FBT3VxRSxJQUNqRkEsT0FBUzFNLEVBQUksS0FBTSxJQUFNaU4sSUFBTS9vRSxFQUFFc3lFLFVBQVcxUCxFQUFJb0csR0FDaEQsT0FBU3BHLEdBQUsyRixHQUFLN3BFLEVBQWMsUUFBWHVwRSxFQUFJc0ssR0FBRzNQLEtBQWtCNEYsR0FBSzlwRSxFQUFHQSxFQUFJdXBFLEdBQUt2cEUsRUFBSXVwRSxJQUFNTyxHQUFLOXBFLEVBQy9FQSxFQUFJc3FFLFNBQ0RSLEdBQUs5cEUsRUFBR0EsRUFBSXNxRSxHQUNuQixPQUFPdHFFLEVBRVgsU0FBUzR2RSxLQUNMLElBQUk1dkUsRUFBR3VwRSxFQUFHckYsRUFBRzlHLEVBQ2IsR0FBSXA5RCxFQUFJOHBFLEdBQUlydEUsRUFBRW90RCxPQUFPaWdCLEdBQUksS0FBT2dLLElBQU12SyxFQUFJdUssR0FBSWhLLElBQU0sSUFBTVAsRUFBSSxLQUFNLElBQU1jLElBQU0vb0UsRUFBRXl5RSxLQUNsRixPQUFTeEssRUFBRyxDQUNSLEdBQUlyRixFQUFJLEdBQUk4UCxHQUFHdHZFLEtBQUtqSSxFQUFFOEMsT0FBT3VxRSxNQUFRMU0sRUFBSTNnRSxFQUFFOEMsT0FBT3VxRSxJQUFLQSxPQUFTMU0sRUFBSSxLQUFNLElBQU1pTixJQUFNL29FLEVBQUUyeUUsS0FDeEYsT0FBUzdXLEVBQUcsS0FBTSxPQUFTQSxHQUFLOEcsRUFBRW45RCxLQUFLcTJELEdBQUk0VyxHQUFHdHZFLEtBQUtqSSxFQUFFOEMsT0FBT3VxRSxNQUFRMU0sRUFBSTNnRSxFQUFFOEMsT0FBT3VxRSxJQUNqRkEsT0FBUzFNLEVBQUksS0FBTSxJQUFNaU4sSUFBTS9vRSxFQUFFMnlFLFVBQVcvUCxFQUFJb0csR0FDaEQsT0FBU3BHLEdBQUsyRixHQUFLN3BFLEVBQWMsUUFBWHVwRSxFQUFJMkssR0FBR2hRLEtBQWtCNEYsR0FBSzlwRSxFQUFHQSxFQUFJdXBFLEdBQUt2cEUsRUFBSXVwRSxJQUFNTyxHQUFLOXBFLEVBQy9FQSxFQUFJc3FFLFNBQ0RSLEdBQUs5cEUsRUFBR0EsRUFBSXNxRSxHQUNuQixPQUFPdHFFLEVBRVgsU0FBUzZ2RSxLQUNMLElBQUk3dkUsRUFBR3VwRSxFQUFHckYsRUFBRzlHLEVBQ2IsR0FBSXA5RCxFQUFJOHBFLEdBQUlydEUsRUFBRW90RCxPQUFPaWdCLEdBQUksS0FBT3FLLElBQU01SyxFQUFJNEssR0FBSXJLLElBQU0sSUFBTVAsRUFBSSxLQUFNLElBQU1jLElBQU0vb0UsRUFBRTh5RSxLQUNsRixPQUFTN0ssRUFBRyxDQUNSLEdBQUlyRixFQUFJLEdBQUk4UCxHQUFHdHZFLEtBQUtqSSxFQUFFOEMsT0FBT3VxRSxNQUFRMU0sRUFBSTNnRSxFQUFFOEMsT0FBT3VxRSxJQUFLQSxPQUFTMU0sRUFBSSxLQUFNLElBQU1pTixJQUFNL29FLEVBQUUyeUUsS0FDeEYsT0FBUzdXLEVBQUcsS0FBTSxPQUFTQSxHQUFLOEcsRUFBRW45RCxLQUFLcTJELEdBQUk0VyxHQUFHdHZFLEtBQUtqSSxFQUFFOEMsT0FBT3VxRSxNQUFRMU0sRUFBSTNnRSxFQUFFOEMsT0FBT3VxRSxJQUNqRkEsT0FBUzFNLEVBQUksS0FBTSxJQUFNaU4sSUFBTS9vRSxFQUFFMnlFLFVBQVcvUCxFQUFJb0csR0FDaEQsT0FBU3BHLEdBQUsyRixHQUFLN3BFLEVBQWMsUUFBWHVwRSxFQUFJOEssR0FBR25RLEtBQWtCNEYsR0FBSzlwRSxFQUFHQSxFQUFJdXBFLEdBQUt2cEUsRUFBSXVwRSxJQUFNTyxHQUFLOXBFLEVBQy9FQSxFQUFJc3FFLFNBQ0RSLEdBQUs5cEUsRUFBR0EsRUFBSXNxRSxHQUNuQixPQUFPdHFFLEVBRVgsU0FBUzh2RSxLQUNMLElBQUk5dkUsRUFBR3VwRSxFQUNQLE9BQU92cEUsRUFBSThwRSxHQUFJcnRFLEVBQUVvdEQsT0FBT2lnQixHQUFJLEtBQU8ySixJQUFNbEssRUFBSWtLLEdBQUkzSixJQUFNLElBQU1QLEVBQUksS0FBTSxJQUFNYyxJQUFNL29FLEVBQUVveUUsS0FDckYsT0FBU25LLElBQU1NLEdBQUs3cEUsRUFBR3VwRSxFQUFJK0ssTUFBTyxPQUFTL0ssR0FBS08sR0FBSzlwRSxFQUFHQSxFQUFJdXBFLEdBQUt2cEUsRUFBSXVwRSxFQUFHdnBFLEVBRTVFLFNBQVMrdkUsS0FDTCxJQUFJL3ZFLEVBQUd1cEUsRUFBR3JGLEVBQ1YsT0FBT2xrRSxFQUFJOHBFLEdBQUksS0FBT3J0RSxFQUFFNkcsV0FBV3dtRSxLQUFPUCxFQUFJNkosR0FBSXRKLE9BQVNQLEVBQUksS0FBTSxJQUFNYyxJQUFNL29FLEVBQUUreEUsS0FDbkYsT0FBUzlKLEdBQUs5c0UsRUFBRXVCLE9BQVM4ckUsSUFBTTVGLEVBQUl6bkUsRUFBRThDLE9BQU91cUUsSUFBS0EsT0FBUzVGLEVBQUksS0FBTSxJQUFNbUcsSUFBTS9vRSxFQUFFNHhFLEtBQ2xGLE9BQVNoUCxHQUFLMkYsR0FBSzdwRSxFQUFjLFFBQVh1cEUsRUFBSXdGLEdBQUc3SyxLQUFrQjRGLEdBQUs5cEUsRUFBR0EsRUFBSXVwRSxHQUFLdnBFLEVBQUl1cEUsSUFBTU8sR0FBSzlwRSxFQUMvRUEsRUFBSXNxRSxNQUFRUixHQUFLOXBFLEVBQUdBLEVBQUlzcUUsSUFBS3RxRSxFQUVqQyxJQUFJdTBFLEdBQUl4cUQsR0FBSzlwQixVQUFVakMsT0FBUyxFQUFJaUMsVUFBVSxHQUFLLEdBQUl1MEUsR0FBSyxDQUN4REMsT0FBUXIxRSxHQUNUczFFLEdBQUt0MUUsRUFBR2tyRSxHQUFLLEtBQU1DLEdBQUssR0FBSUgsR0FBSyxJQUFLakcsR0FBSyxNQUFPcUcsR0FBSyxTQUFTL3RFLEVBQUd1RCxHQUNsRSxPQUFPQSxFQUFJLElBQUlvb0UsRUFBVTNyRSxFQUFHdUQsRUFBRSxJQUFNdkQsR0FDckNndUUsR0FBSyxTQUFTaHVFLEVBQUd1RCxFQUFHdXBFLEdBQ25CLE9BQU8sSUFBSWxCLEVBQU0sQ0FBRTVyRSxHQUFJc1EsT0FBTy9NLEdBQUcrTSxPQUFPLENBQUV3OEQsTUFDM0NxQixHQUFLLElBQUtDLEdBQUssTUFBT0MsR0FBSyxXQUMxQixPQUFPLElBQUkzQyxFQUFNLFVBQ2xCNEMsR0FBSyxJQUFLQyxHQUFLLE1BQU9DLEdBQUssV0FDMUIsT0FBTyxJQUFJOUMsRUFBTSxRQUNsQitDLEdBQUssU0FBU3p1RSxFQUFHdUQsR0FDaEIsT0FBTyxJQUFJeW9FLEVBQVdoc0UsRUFBR3VELElBQzFCcXJFLEdBQUssYUFBY0QsR0FBSyxTQUFTM3VFLEVBQUd1RCxHQUNuQyxPQUFPQSxJQUFNdkQsRUFBRW1zRSxRQUFTLEdBQUtuc0UsR0FDOUIrdUUsR0FBSyxJQUFLQyxHQUFLLE1BQU9DLEdBQUssSUFBS0MsR0FBSyxNQUFPQyxHQUFLLElBQUtDLEdBQUssTUFBT0MsR0FBSyxTQUFTcnZFLEVBQUd1RCxHQUNsRixPQUFPLElBQUkyb0UsRUFBV2xzRSxFQUFHdUQsSUFDMUIrckUsR0FBSyxLQUFNQyxHQUFLLE9BQVFDLEdBQUssU0FBU3h2RSxHQUNyQyxPQUFPLElBQUlrc0UsRUFBV2xzRSxFQUFHLE1BQzFCeXZFLEdBQUssU0FBU3p2RSxHQUNiLE9BQU8sSUFBSWtzRSxFQUFXbHNFLEVBQUdBLElBQzFCMHZFLEdBQUssSUFBS0MsR0FBSyxNQUFPQyxHQUFLLFdBQzFCLE9BQU8sSUFBSTFELEVBQVcsRUFBRyxNQUMxQjJELEdBQUssSUFBS0MsR0FBSyxNQUFPQyxHQUFLLFdBQzFCLE9BQU8sSUFBSTdELEVBQVcsRUFBRyxNQUMxQjhELEdBQUssSUFBS0MsR0FBSyxNQUFPQyxHQUFLLFdBQzFCLE9BQU8sSUFBSWhFLEVBQVcsRUFBRyxJQUMxQmlFLEdBQUssU0FBVUMsR0FBSyxRQUFTQyxHQUFLLFNBQVNyd0UsR0FDMUMsT0FBUUEsRUFBRXcxQixLQUFLLEtBQ2hCODZDLEdBQUssSUFBS0MsR0FBSyxNQUFPRyxHQUFLLElBQUtDLEdBQUssTUFBT0MsR0FBSyxTQUFTNXdFLEdBQ3pELE9BQU9BLEdBQ1I2d0UsR0FBSyxTQUFTN3dFLEdBQ2IsT0FBTyxJQUFJOHJFLEVBQWE5ckUsSUFDekI4d0UsR0FBSyxLQUFNN3pELEdBQUssT0FBUTh6RCxHQUFLLFNBQVMvd0UsR0FDckMsT0FBTyxJQUFJNnJFLEVBQU0sb0JBQXFCN3JFLElBQ3ZDZ3hFLEdBQUssS0FBTUMsR0FBSyxPQUFRQyxHQUFLLFNBQVNseEUsR0FDckMsT0FBTyxJQUFJNnJFLEVBQU0scUJBQXNCN3JFLElBQ3hDbXhFLEdBQUssS0FBTUMsR0FBSyxPQUFRQyxHQUFLLFNBQVNyeEUsR0FDckMsT0FBTyxJQUFJNnJFLEVBQU0scUJBQXNCN3JFLElBQ3hDNHhFLEdBQUssZUFBZ0JOLEdBQUssSUFBS0MsR0FBSyxNQUFPRSxHQUFLLElBQUtDLEdBQUssTUFBT0MsR0FBSyxTQUFTM3hFLEVBQUd1RCxHQUNqRixPQUFPLElBQUk2b0UsSUFBVXBzRSxFQUFHdUQsSUFDekJ5dUUsR0FBSyxpQkFBa0JILEdBQUssSUFBS0MsR0FBSyxNQUFPQyxHQUFLLFNBQVMveEUsRUFBR3VELEdBQzdELE9BQU8sSUFBSStvRSxFQUFldHNFLEVBQUd1RCxJQUM5QjR1RSxHQUFLLFlBQWFDLEdBQUssV0FBWUMsR0FBSyxhQUFjQyxHQUFLLFNBQVN0eUUsR0FDbkUsT0FBTyxJQUFJdXNFLEVBQVF2c0UsSUFDcEJ3ekUsR0FBSyxJQUFLQyxHQUFLLE1BQU9DLEdBQUssV0FDMUIsT0FBTyxJQUFJaEksRUFBTSxrQkFDbEJtSSxHQUFLLFVBQVdGLEdBQUssc0JBQXVCQyxHQUFLLHlCQUEwQkksR0FBSyxNQUFPQyxHQUFLLFVBQVdDLEdBQUssV0FDM0csT0FBTyxJQUFJeEksRUFBTSxjQUNsQnlJLEdBQUssV0FDSixPQUFPLElBQUl6SSxFQUFNLGtCQUNsQjBJLEdBQUssTUFBT0MsR0FBSyxVQUFXQyxHQUFLLFdBQ2hDLE9BQU8sSUFBSTVJLEVBQU0sc0JBQ2xCNkksR0FBSyxNQUFPQyxHQUFLLFVBQVdDLEdBQUssV0FDaEMsT0FBTyxJQUFJL0ksRUFBTSxVQUNsQmdKLEdBQUssTUFBT0MsR0FBSyxVQUFXQyxHQUFLLFdBQ2hDLE9BQU8sSUFBSWxKLEVBQU0sY0FDbEJtSixHQUFLLE1BQU9DLEdBQUssVUFBV0MsR0FBSyxXQUNoQyxPQUFPLElBQUlySixFQUFNLGNBQ2xCc0osR0FBSyxNQUFPQyxHQUFLLFVBQVdDLEdBQUssV0FDaEMsT0FBTyxJQUFJeEosRUFBTSxjQUNsQnlKLEdBQUssTUFBT0MsR0FBSyxVQUFXQyxHQUFLLFdBQ2hDLE9BQU8sSUFBSTNKLEVBQU0sb0JBQ2xCNEosR0FBSyxNQUFPQyxHQUFLLFVBQVdDLEdBQUssV0FDaEMsT0FBTyxJQUFJOUosRUFBTSxnQkFDbEIrSixHQUFLLE1BQU85M0QsR0FBSyxVQUFXKzNELEdBQUssV0FDaEMsT0FBTyxJQUFJaEssRUFBTSxvQkFDbEJpSyxHQUFLLE1BQU9DLEdBQUssVUFBV0MsR0FBSyxXQUNoQyxPQUFPLElBQUluSyxFQUFNLFFBQ2xCb0ssR0FBSyxNQUFPQyxHQUFLLFVBQVdDLEdBQUssV0FDaEMsT0FBTyxJQUFJdEssRUFBTSxpQkFDbEJ1SyxHQUFLLE1BQU9DLEdBQUssVUFBV0MsR0FBSyxXQUNoQyxPQUFPLElBQUl6SyxFQUFNLFNBQ2xCMEssR0FBSyxNQUFPQyxHQUFLLFVBQVdDLEdBQUssV0FDaEMsT0FBTyxJQUFJNUssRUFBTSxhQUNsQjZLLEdBQUssTUFBT0MsR0FBSyxVQUFXQyxHQUFLLGdCQUFpQkMsR0FBSyxTQUFTMTJFLEdBQy9ELE9BQU8sSUFBSTRzRSxFQUFpQjVzRSxJQUM3QjIyRSxHQUFLLEtBQU1DLEdBQUssU0FBVUMsR0FBSyxTQUFVQyxHQUFLLFFBQVNDLEdBQUssU0FBUy8yRSxHQUNwRSxPQUFPLElBQUkyc0UsRUFBYzNzRSxJQUMxQmczRSxHQUFLLE1BQU9DLEdBQUssVUFBV0MsR0FBSyxTQUFVQyxHQUFLLFFBQVNDLEdBQUssU0FBU3AzRSxHQUN0RSxPQUFPLElBQUkwc0UsRUFBTTFzRSxFQUFFdzFCLEtBQUssTUFDekI2aEQsR0FBSyxNQUFPQyxHQUFLLFVBQVdDLEdBQUssZUFBZ0JDLEdBQUssY0FBZUMsR0FBSyxTQUFTejNFLEdBQ2xGLE9BQU8sSUFBSXlzRSxFQUFJenNFLEVBQUV3MUIsS0FBSyxNQUN2QmtpRCxHQUFLLE1BQU9DLEdBQUssVUFBV0MsR0FBSyxTQUFTNTNFLEdBQ3pDLE9BQU8sSUFBSXdzRSxFQUFReHNFLEVBQUV3MUIsS0FBSyxNQUMzQnFpRCxHQUFLLFdBQ0osT0FBTyxJQUFJbk0sRUFBTSxtQkFDbEIyQixHQUFLLEVBQUdELEdBQUssRUFBR0UsR0FBSyxFQUFHQyxHQUFLLENBQzVCTixLQUFNLEVBQ05DLE9BQVEsRUFDUk0sUUFBUSxHQUNUQyxHQUFLLEVBQUdDLEdBQUssR0FBSUUsR0FBSyxFQUN6QixHQUFJLGNBQWV0Z0QsR0FBSSxDQUNuQixLQUFNQSxHQUFHNHFELGFBQWFILElBQUssTUFBTSxJQUFJaGlCLE1BQU0sbUNBQXFDem9DLEdBQUc0cUQsVUFBWSxNQUMvRkQsR0FBS0YsR0FBR3pxRCxHQUFHNHFELFdBRWYsR0FBSXhNLEVBQU05ZSxPQUFTNmEsRUFBR2lFLEVBQU1yZ0UsS0FBT3loRSxFQUFjLFFBQVhnTCxHQUFLRyxPQUFxQjVLLEtBQU9ydEUsRUFBRXVCLE9BQVEsT0FBT3UyRSxHQUN4RixNQUFNN3VDLEVBQUV5a0MsSUFBS04sR0FBS2p0RSxLQUFLb1AsSUFBSTg5RCxHQUFJSSxJQUFLLElBQUlscUUsRUFBRW1xRSxHQUFJTixHQUFLcHRFLEVBQUV1QixPQUFTdkIsRUFBRThDLE9BQU9zcUUsSUFBTSxLQUFNQSxHQUFJek0sRUFBRXlNLElBQUlILEtBQU10TSxFQUFFeU0sSUFBSUYsVUF6ZXBHLEdBK2VScHJFLEVBQVEsRUFBR2lxRSxFQUFNLEdBRXRCL3FCLEVBQU9DLFFBQVU0ckIsR0FJWixTQUFVN3JCLEVBQVFDLEVBQVNrYixHQXlEaEMsSUFBSUssRUFBT0wsRUFBb0IsR0FDM0JNLEVBQVNOLEVBQW9CLEdBSTdCSSxFQUFVLENBQ1Z6NEQsT0FBUTA0RCxFQUFLMTRELFFBNENicTBFLEVBQVFDLEVBQU0sR0FBSSxLQUNsQkMsRUFBUUQsRUFBTSxHQUFJLElBQ2xCRSxFQUFTRixFQUFNLEdBQUksSUFDbkJHLEVBQVFILEVBQU0sR0FBSSxJQUFNQSxFQUFNLEdBQUksSUFBTUEsRUFBTSxHQUFJLElBQU1BLEVBQU0sSUFBSyxLQUNuRUksRUFBWUosRUFBTSxHQUFJLEtBQ3RCSyxFQUFRLDJCQUNSQyxFQUFvQixDQUNwQixNQUFPUCxFQUFRRSxFQUFRQyxFQUFTLElBQ2hDLE1BQU9DLEVBQU05MUUsUUFBUSxJQUFLLElBQzFCLE1BQU9nMkUsRUFDUCxNQUFPLFdBRUgsSUFEQSxJQUFJaHJFLEVBQVMrcUUsRUFDSmwzRSxFQUFJLEVBQUdBLEVBQUltM0UsRUFBTWwzRSxPQUFRRCxJQUM5Qm1NLEVBQVNBLEVBQU9oTCxRQUFRZzJFLEVBQU1uM0UsR0FBSSxJQUV0QyxPQUFPbU0sRUFMSixHQU9QLE1BQU82cUUsRUFDUCxNQUFPSCxFQUFRRSxFQUFRRSxHQUczQixTQUFTSCxFQUFNeG9FLEVBQU03TCxHQUVqQixJQURBLElBQUkwSixFQUFTLEdBQ0puTSxFQUFJc08sRUFBTXRPLEdBQUt5QyxFQUFJekMsSUFDeEJtTSxHQUFVdk4sT0FBT3k0RSxhQUFhcjNFLEdBRWxDLE9BQU9tTSxFQUlYOHVELEVBQVFuZSxJQUFNLFNBQVN4eEMsRUFBTWEsRUFBUW5MLEdBSWpDLE9BSEFBLEVBQVFBLEdBQVMsQ0FDYitvRSxLQUFNLEdBRUg5TyxFQUFRM3ZELEVBQUsrRCxNQUFRNHJELEVBQVEzdkQsRUFBSytELE1BQU0vRCxFQUFNYSxFQUFRbkwsR0FDekRpNkQsRUFBUS9PLE1BQU01Z0QsRUFBTWEsRUFBUW5MLElBR3BDaTZELEVBQVF6NEQsT0FBTyxDQUVYMHBELE1BQU8sU0FBUzVnRCxFQUFNYSxFQUFRbkwsR0FDMUIsT0FBUXNLLEVBQUsrRCxNQUNULElBQUssUUFDTCxJQUFLLE1BQ0QsTUFBTyxHQUNYLElBQUssZ0JBQ0QsT0FBTzhyRCxFQUFPcUMsWUFDbEIsSUFBSyxZQUVMLElBQUssZ0JBQ0QsTUFBTyxHQUNYLElBQUssb0JBQ0QsTUFDSixJQUFLLFFBQ0QsT0FBT3JDLEVBQU8yQixLQUNWa2EsRUFBT2ozRSxNQUFNLEtBRXJCLElBQUssWUFDRCxPQUFPbzdELEVBQU8yQixNQUNUK1osRUFBUUUsRUFBUUUsR0FBT2wzRSxNQUFNLEtBRXRDLElBQUssWUFDRCxNQUNKLElBQUssWUFDRCxPQUFPdUwsRUFBS2tnQyxNQUFRbGdDLEVBQUt2QixLQUM3QixJQUFLLGtCQUNELE1BQ0osSUFBSyxjQUNELE9BQU9veEQsRUFBTzJCLEtBQ1ZxYSxFQUFNcDNFLE1BQU0sS0FFcEIsSUFBSyxrQkFDRCxPQUFPbzdELEVBQU8yQixNQUNUK1osRUFBUUUsRUFBUUMsR0FBUWozRSxNQUFNLEtBRXZDLElBQUssTUFFTCxJQUFLLGVBQ0QsTUFDSixJQUFLLE9BQ0QsT0FBT283RCxFQUFPMkIsTUFDVCtaLEVBQVFFLEVBQVFDLEdBQVFqM0UsTUFBTSxLQUV2QyxJQUFLLFdBQ0QsT0FBT283RCxFQUFPMkIsS0FDVm1hLEVBQU05MUUsUUFBUSxJQUFLLElBQUlwQixNQUFNLEtBS3pDLE9BQU91TCxFQUFLa2dDLE1BQVFsZ0MsRUFBS3ZCLE1BZTdCdXRFLFVBQVcsU0FBU2hzRSxFQUFNYSxFQUFRbkwsR0FFOUIsT0FBT2dELEtBQUs4NEMsSUFDUnFlLEVBQU9zQyxVQUFZbnlELEVBQUsrK0IsS0FBTy8rQixFQUFLMnNCLE1BQ3BDOXJCLEVBQ0FuTCxJQVdSZ0csTUFBTyxTQUFTc0UsRUFBTWEsRUFBUW5MLEdBQzFCbUwsRUFBUyxHQUVULElBQUssSUFBSW5NLEVBQUksRUFBR0EsRUFBSXNMLEVBQUtrZ0MsS0FBS3ZyQyxPQUFRRCxJQUNsQ21NLEdBQVVuSSxLQUFLODRDLElBQUl4eEMsRUFBS2tnQyxLQUFLeHJDLEdBQUltTSxFQUFRbkwsR0FFN0MsT0FBT21MLEdBR1gsZ0JBQWlCLFNBQVNiLEVBQU1hLEVBQVFuTCxHQUlwQyxPQUZBbUwsRUFBU25JLEtBQUs4NEMsSUFBSXh4QyxFQUFLa2dDLEtBQU1yL0IsRUFBUW5MLEdBQ3JDQSxFQUFNQSxFQUFNK29FLFFBQVU1OUQsRUFDZkEsR0FHWCxvQkFBcUIsU0FBU2IsRUFBTWEsRUFBUW5MLEdBRXhDLE9BQU9nRCxLQUFLODRDLElBQUl4eEMsRUFBS2tnQyxLQUFNci9CLEVBQVFuTCxJQUd2QyxxQkFBc0IsU0FBU3NLLEVBQU1hLEVBQVFuTCxHQUV6QyxPQUFPZ0QsS0FBSzg0QyxJQUFJeHhDLEVBQUtrZ0MsS0FBTXIvQixFQUFRbkwsSUFHdkMscUJBQXNCLFNBQVNzSyxFQUFNYSxFQUFRbkwsR0FFekMsTUFBTyxJQXdCWHUyRSxXQUFZLFNBQVNqc0UsRUFBTWEsRUFBUW5MLEdBQy9CbUwsRUFBUyxHQUlULElBRkEsSUFBSTZ3RCxFQUFRaDVELEtBQUsybUUsV0FBV3IvRCxFQUFLcS9ELFlBRXhCM3FFLEVBQUksRUFBR0EsRUFBSWc5RCxFQUFPaDlELElBQ3ZCbU0sR0FBVW5JLEtBQUs4NEMsSUFBSXh4QyxFQUFLa2dDLEtBQU1yL0IsRUFBUW5MLEdBRTFDLE9BQU9tTCxHQVlYdytELFdBQVksU0FBU3IvRCxFQUFNYSxFQUFRbkwsR0FDL0IsSUFBSTY3RCxFQUFNaCtELEtBQUtvUCxJQUFJM0MsRUFBS3V4RCxJQUFLLEdBQ3pCNXVELEVBQU1sUCxTQUFTdU0sRUFBSzJDLEtBQU8zQyxFQUFLMkMsSUFDaEM0dUQsRUFBTTFCLEVBQU8rRCxRQUFRLEVBQUcsR0FDNUIsT0FBTy9ELEVBQU8rRCxRQUFRckMsRUFBSzV1RCxJQUsvQnVwRSxRQUFTLFNBQVNsc0UsRUFBTWEsRUFBUW5MLEdBRTVCLEdBQUlzSyxFQUFLeS9ELE9BQVEsT0FBTy9tRSxLQUFLLGtCQUFrQnNILEVBQU1hLEVBQVFuTCxHQUc3RCxJQUFJeTJFLEVBQVV0YyxFQUFPMkIsS0FBS3h4RCxFQUFLa2dDLE1BQy9CLE9BQU94bkMsS0FBSzg0QyxJQUFJMjZCLEVBQVN0ckUsRUFBUW5MLElBRXJDLGlCQUFrQixTQUFTc0ssRUFBTWEsRUFBUW5MLEdBRXJDLElBREEsSUFDZ0JULEVBRFpvL0QsRUFBT3VYLEVBQ0ZsM0UsRUFBSSxFQUFTQSxFQUFJc0wsRUFBS2tnQyxLQUFLdnJDLE9BQVFELElBRXhDLFFBREFPLEVBQU8rSyxFQUFLa2dDLEtBQUt4ckMsSUFDSnFQLE1BQ1QsSUFBSyxVQUNEc3dELEVBQU9BLEVBQUt4K0QsUUFBUVosRUFBS2lyQyxLQUFNLElBQy9CLE1BQ0osSUFBSyxRQUdELElBRkEsSUFBSXF4QixFQUFNNzRELEtBQUs4NEMsSUFBSXY4QyxFQUFLK0IsTUFBTzZKLEVBQVFuTCxHQUFPdUUsYUFDMUMwSSxFQUFNakssS0FBSzg0QyxJQUFJdjhDLEVBQUtzNEIsSUFBSzFzQixFQUFRbkwsR0FBT3VFLGFBQ25DbzNELEVBQUtFLEVBQUtGLEdBQU0xdUQsRUFBSzB1RCxJQUMxQmdELEVBQU9BLEVBQUt4K0QsUUFBUXZDLE9BQU95NEUsYUFBYTFhLEdBQUssSUFHckQsUUFDSSxJQUFJK2EsRUFBYU4sRUFBa0I3MkUsRUFBS3dKLE1BQ3hDLEdBQUkydEUsRUFDQSxJQUFLLElBQUlDLEVBQU0sRUFBR0EsR0FBT0QsRUFBV3ozRSxPQUFRMDNFLElBQ3hDaFksRUFBT0EsRUFBS3grRCxRQUFRdTJFLEVBQVdDLEdBQU0sSUFLekQsT0FBT3hjLEVBQU8yQixLQUFLNkMsRUFBSzUvRCxNQUFNLE1BRWxDKzJCLE1BQU8sU0FBU3hyQixFQUFNYSxFQUFRbkwsR0FFMUIsSUFBSTY3RCxFQUFNNzRELEtBQUs4NEMsSUFBSXh4QyxFQUFLaEosTUFBTzZKLEVBQVFuTCxHQUFPdUUsYUFDMUMwSSxFQUFNakssS0FBSzg0QyxJQUFJeHhDLEVBQUt1dEIsSUFBSzFzQixFQUFRbkwsR0FBT3VFLGFBQzVDLE9BQU8zRyxPQUFPeTRFLGFBQ1ZsYyxFQUFPK0QsUUFBUXJDLEVBQUs1dUQsS0FHNUJ3cEUsUUFBUyxTQUFTbnNFLEVBQU1hLEVBQVFuTCxHQUM1QixPQUFPc0ssRUFBSysvQyxRQUFVLy9DLEVBQUtrZ0MsS0FBT2xnQyxFQUFLdkIsTUFHM0M2dEUsUUFBUyxTQUFTdHNFLEVBQU1hLEVBQVFuTCxHQUM1QixPQUFPcEMsT0FBT3k0RSxhQUNWbnBELFNBQVM1aUIsRUFBSytyQyxLQUFNLE1BSTVCdXRCLElBQUssU0FBU3Q1RCxFQUFNYSxFQUFRbkwsR0FDeEIsT0FBT3BDLE9BQU95NEUsYUFDVm5wRCxTQUFTNWlCLEVBQUsrckMsS0FBTSxNQUk1QndnQyxNQUFPLFNBQVN2c0UsRUFBTWEsRUFBUW5MLEdBQzFCLE9BQU9wQyxPQUFPeTRFLGFBQ1ZucEQsU0FBUzVpQixFQUFLK3JDLEtBQU0sS0FJNUIsaUJBQWtCLFNBQVMvckMsRUFBTWEsRUFBUW5MLEdBQ3JDLE9BQU9BLEVBQU1zSyxFQUFLK3JDLE9BQVMsSUFLL0J5Z0Msc0JBQXVCLFdBSW5CLElBSEEsSUFBSUMsRUFBb0IsbUVBQW1FaDRFLE1BQU0sS0FDN0ZpNEUsRUFBNEIseUVBQWtPajRFLE1BQU0sS0FDcFFILEVBQU0sR0FDREksRUFBSSxFQUFHQSxFQUFJKzNFLEVBQWtCOTNFLE9BQVFELElBQzFDSixFQUFJbTRFLEVBQWtCLzNFLElBQU1nNEUsRUFBMEJoNEUsR0FFMUQsT0FBT0osRUFQWSxHQVN2QixvQkFBcUIsU0FBUzBMLEVBQU1hLEVBQVFuTCxHQUN4QyxPQUFPZ0QsS0FBSzh6RSxzQkFBc0J4c0UsRUFBSytyQyxTQUkvQ3FJLEVBQU9DLFFBQVVzYixHQUlaLFNBQVV2YixFQUFRQyxFQUFTa2IsR0FFaENuYixFQUFPQyxRQUFVa2IsRUFBb0IsS0FJaEMsU0FBVW5iLEVBQVFDLEVBQVNrYixHQVNoQyxJQUFJbUIsRUFBV25CLEVBQW9CLEdBQy9CSyxFQUFPTCxFQUFvQixHQUMzQm9CLEVBQVNwQixFQUFvQixHQXFDakNuYixFQUFPQyxRQW5DUCxTQUFTMGIsRUFBYXJyQixFQUFVcjdCLEVBQU1vUyxHQUVsQ0EsRUFBT0EsR0FBUSxHQUNmLElBQUk1YSxFQUFTLENBQ1R3SSxLQUFzQixpQkFBVEEsRUFBb0JBLEVBQUt4VCxRQUFRNjZELEVBQVNTLE9BQVEsTUFBUTluRCxFQUN2RXE3QixTQUFVQSxFQUNWM2dDLEtBQU02ckQsRUFBSzdyRCxLQUFLMmdDLEdBQ2hCdXNCLEtBQU1OLEVBQU9sc0IsTUFBTXA3QixJQUt2QixPQUhBeEksRUFBTzRhLEtBQU9BLEVBQUt0bEIsTUFBTSxHQUN6QjBLLEVBQU80YSxLQUFLL2QsVUFBY3hCLElBQVRtTixFQUFxQixPQUFTeEksRUFBT3dJLE1BRTlDeEksRUFBT2tELE1BQ1gsSUFBSyxRQUNEbEQsRUFBT2dDLE1BQVEsR0FDZitzRCxFQUFLNkQsS0FBSy91QixHQUFVLFNBQVNqeUMsRUFBT3lDLEdBQ2hDMkwsRUFBT2dDLE1BQU1uRixLQUNUcXlELEVBQWF0OUQsRUFBT3lDLEVBQU8yTCxFQUFPNGEsVUFHMUMsTUFDSixJQUFLLFNBQ0Q1YSxFQUFPOHJFLFdBQWEsR0FDcEIvYyxFQUFLNkQsS0FBSy91QixHQUFVLFNBQVNqeUMsRUFBTzRXLEdBQ2hDeEksRUFBTzhyRSxXQUFXanZFLEtBQ2RxeUQsRUFBYXQ5RCxFQUFPNFcsRUFBTXhJLEVBQU80YSxVQU1qRCxPQUFPNWEsSUFTTixTQUFVdXpDLEVBQVFDLEVBQVNrYixHQUVoQ25iLEVBQU9DLFFBQVVrYixFQUFvQixLQUloQyxTQUFVbmIsRUFBUUMsRUFBU2tiLEdBd0JoQyxJQUFJbUIsRUFBV25CLEVBQW9CLEdBQy9CSyxFQUFPTCxFQUFvQixHQUMzQlEsRUFBZVIsRUFBb0IsSUFFdkMsU0FBU1MsRUFBTXRyQixFQUFVbm1DLEdBR3JCLElBRkEsSUFBSXF1RSxFQUFTN2MsRUFBYXJyQixHQUN0QjdqQyxFQUFTZ3NFLEVBQUtDLEtBQUtGLEVBQVFydUUsR0FDdEI3SixFQUFJLEVBQUdBLEVBQUltTSxFQUFPbE0sT0FBUUQsS0FJbkMsT0FBT21NLEVBdUNYLElBQUlnc0UsRUFBTyxDQUNQQyxLQUFNLFNBQWNGLEVBQVFydUUsRUFBTThLLEdBQzlCLElBQUl4SSxFQUFTLEdBWWIsT0FSSW5JLEtBQUsyUSxLQUFLdWpFLEVBQVFydUUsRUFBTThLLEVBQU14SSxJQUM5Qm5JLEtBQUtxTCxLQUFLNm9FLEVBQVFydUUsRUFBTThLLEVBQU14SSxLQUU5Qm5JLEtBQUtqRyxNQUFNbTZFLEVBQVFydUUsRUFBTThLLEVBQU14SSxHQUMvQm5JLEtBQUtpMEUsV0FBV0MsRUFBUXJ1RSxFQUFNOEssRUFBTXhJLEdBQ3BDbkksS0FBS21LLE1BQU0rcEUsRUFBUXJ1RSxFQUFNOEssRUFBTXhJLElBRzVCQSxHQUdYd0ksS0FBTSxTQUFTdWpFLEVBQVFydUUsRUFBTThLLEVBQU14SSxHQUMvQixJQUFJbE0sRUFBU2tNLEVBQU9sTSxPQUlwQixPQUZBbzRFLEVBQU9DLE1BQU0sT0FBUUosRUFBT254RCxLQUFNcFMsRUFBTyxHQUFJdWpFLEVBQU92akUsS0FBTyxHQUFJeEksR0FFeERBLEVBQU9sTSxTQUFXQSxHQUU3Qm9QLEtBQU0sU0FBUzZvRSxFQUFRcnVFLEVBQU04SyxFQUFNeEksR0FDL0IsSUFBSWxNLEVBQVNrTSxFQUFPbE0sT0FFcEIsT0FBUWk0RSxFQUFPN29FLE1BQ1gsSUFBSyxTQUVELEdBQUk2b0UsRUFBT2xvQyxTQUFTaHBDLE1BQU1nMUQsRUFBUytCLGdCQUFpQixPQUFPLEVBQzNELE1BQ0osSUFBSyxRQUNELEdBQUltYSxFQUFPM2IsS0FBS0ssV0FBWSxDQUV4QixRQUF3QnAxRCxJQUFwQjB3RSxFQUFPM2IsS0FBS00sVUFBeUNyMUQsSUFBcEIwd0UsRUFBTzNiLEtBQUt0dUQsS0FFbkIsSUFBdEJpcUUsRUFBTzNiLEtBQUtTLE1BQWEsT0FBTyxFQUd4QyxHQUFJa2IsRUFBTzNiLEtBQUtLLFdBQVcsR0FBSSxPQUFPLEVBRTFDLE1BQ0osSUFBSyxXQUVELE9BQU8sRUFLZixPQUZBeWIsRUFBT0MsTUFBTSxPQUFRSixFQUFPbnhELEtBQU1tMEMsRUFBSzdyRCxLQUFLeEYsR0FBT3F1RSxFQUFPN29FLEtBQU1sRCxHQUV6REEsRUFBT2xNLFNBQVdBLEdBRTdCbEMsTUFBTyxTQUFTbTZFLEVBQVFydUUsRUFBTThLLEVBQU14SSxHQUNoQyxJQXNCSW9zRSxFQXRCQXQ0RSxFQUFTa00sRUFBT2xNLE9BRWhCczhELEVBQU8yYixFQUFPM2IsS0FDZGljLEVBQWVOLEVBQU83b0UsS0FDMUIsR0FBcUIsV0FBakJtcEUsR0FBOEMsVUFBakJBLEdBQTZDLGFBQWpCQSxFQUE2QixPQUFPLEVBR2pHLElBQUtqYyxFQUFLSyxXQUFZLENBQ2xCLE9BQVE0YixHQUNKLElBQUssU0FFRCxPQURBSCxFQUFPcnhFLE1BQU0sUUFBU2t4RSxFQUFPbnhELEtBQU1sZCxFQUFNcXVFLEVBQU9sb0MsU0FBVTdqQyxHQUNuREEsRUFBT2xNLFNBQVdBLEVBQzdCLElBQUssU0FFRCxHQUFJaTRFLEVBQU9sb0MsU0FBU2hwQyxNQUFNZzFELEVBQVMrQixnQkFBaUIsT0FBTzV4RCxFQUFPbE0sU0FBV0EsRUFJckYsT0FEQW80RSxFQUFPQyxNQUFNLFFBQVNKLEVBQU9ueEQsS0FBTWxkLEVBQU1xdUUsRUFBT2xvQyxTQUFVN2pDLEdBQ25EQSxFQUFPbE0sU0FBV0EsRUFLN0IsT0FBUXU0RSxHQUNKLElBQUssU0FDRCxJQUFJMXZCLEdBQVNqL0MsRUFBTyxJQUFJOUosTUFBTSxLQUM5QitvRCxFQUFNLElBQU1BLEVBQU0sUUFJRHRoRCxJQUFiKzBELEVBQUtNLFVBQWtDcjFELElBQWIrMEQsRUFBS3R1RCxNQUMvQm9xRSxFQUFPSSxxQkFBcUIsUUFBU1AsRUFBT254RCxLQUFNK2hDLEVBQU0sR0FBSWpxRCxLQUFLZytELElBQUlOLEVBQUtNLElBQUtOLEVBQUt0dUQsS0FBTTlCLEdBRTFGa3NFLEVBQU9LLGtCQUFrQixRQUFTUixFQUFPbnhELEtBQU0raEMsRUFBTSxHQUFJanFELEtBQUtvUCxJQUFJc3VELEVBQUtNLElBQUtOLEVBQUt0dUQsS0FBTTlCLFNBRzFFM0UsSUFBYiswRCxFQUFLTSxVQUFrQ3IxRCxJQUFiKzBELEVBQUt0dUQsS0FDL0JvcUUsRUFBT0MsTUFBTSxRQUFTSixFQUFPbnhELEtBQU0raEMsRUFBTSxHQUFJeVQsRUFBS00sSUFBSzF3RCxFQUFRLFdBQWF3SSxHQUk1RTRuRCxFQUFLZSxlQUVhOTFELElBQWQrMEQsRUFBSzRDLFdBQW9DMzNELElBQWQrMEQsRUFBSzZDLE9BQ2hDaVosRUFBT0kscUJBQXFCLFFBQVNQLEVBQU9ueEQsS0FBTStoQyxFQUFNLEdBQUc3b0QsT0FBUXM4RCxFQUFLNEMsS0FBTWh6RCxHQUM5RWtzRSxFQUFPSyxrQkFBa0IsUUFBU1IsRUFBT254RCxLQUFNK2hDLEVBQU0sR0FBRzdvRCxPQUFRczhELEVBQUs2QyxLQUFNanpELFNBRzdEM0UsSUFBZCswRCxFQUFLNEMsV0FBb0MzM0QsSUFBZCswRCxFQUFLNkMsTUFDaENpWixFQUFPQyxNQUFNLFFBQVNKLEVBQU9ueEQsS0FBTStoQyxFQUFNLEdBQUc3b0QsT0FBUXM4RCxFQUFLNEMsS0FBTWh6RCxJQUl2RSxNQUVKLElBQUssVUFDRCxNQUVKLElBQUssU0FHRG9zRSxHQURBQSxFQUFvQjF1RSxFQUFLN0MsTUFBTSxJQUFJbEIsT0FBT295RSxFQUFPbG9DLFNBQVUsT0FDbkJ1b0MsRUFBa0J0NEUsT0FBUyxPQUdsRHVILElBQWIrMEQsRUFBS00sVUFBa0NyMUQsSUFBYiswRCxFQUFLdHVELE1BQy9Cb3FFLEVBQU9JLHFCQUFxQixlQUFnQlAsRUFBT254RCxLQUFNd3hELEVBQW1CaGMsRUFBS00sSUFBSzF3RCxHQUN0RmtzRSxFQUFPSyxrQkFBa0IsZUFBZ0JSLEVBQU9ueEQsS0FBTXd4RCxFQUFtQmhjLEVBQUt0dUQsSUFBSzlCLFNBR3RFM0UsSUFBYiswRCxFQUFLTSxVQUFrQ3IxRCxJQUFiKzBELEVBQUt0dUQsS0FDL0JvcUUsRUFBT0MsTUFBTSxlQUFnQkosRUFBT254RCxLQUFNd3hELEVBQW1CaGMsRUFBS00sSUFBSzF3RCxHQUczRSxNQUVKLElBQUssU0FFRG9zRSxHQURBQSxFQUFvQjF1RSxFQUFLN0MsTUFBTSxJQUFJbEIsT0FBT295RSxFQUFPbG9DLFNBQVNsNUIsT0FBTzNWLFFBQVEsV0FBWSxJQUFLLE9BQ2xEbzNFLEVBQWtCdDRFLE9BQVMsT0FHbER1SCxJQUFiKzBELEVBQUtNLFVBQWtDcjFELElBQWIrMEQsRUFBS3R1RCxNQUMvQm9xRSxFQUFPSSxxQkFBcUIsZUFBZ0JQLEVBQU9ueEQsS0FBTXd4RCxFQUFtQmhjLEVBQUtNLElBQUsxd0QsR0FDdEZrc0UsRUFBT0ssa0JBQWtCLGVBQWdCUixFQUFPbnhELEtBQU13eEQsRUFBbUJoYyxFQUFLdHVELElBQUs5QixTQUd0RTNFLElBQWIrMEQsRUFBS00sVUFBa0NyMUQsSUFBYiswRCxFQUFLdHVELEtBQy9Cb3FFLEVBQU9DLE1BQU0sZUFBZ0JKLEVBQU9ueEQsS0FBTXd4RCxFQUFtQmhjLEVBQUtNLElBQUsxd0QsR0FLbkYsT0FBT0EsRUFBT2xNLFNBQVdBLEdBRTdCZzRFLFdBQVksU0FBU0MsRUFBUXJ1RSxFQUFNOEssRUFBTXhJLEdBQ3JDLElBQUlsTSxFQUFTa00sRUFBT2xNLE9BRWhCczhELEVBQU8yYixFQUFPM2IsS0FDZDU0RCxFQUFPdTNELEVBQUt2M0QsS0FBS2tHLEdBQ3JCLEdBQUtxdUUsRUFBT0QsV0FBWixDQW1CQSxHQWhCS0MsRUFBTzNiLEtBQUtLLGlCQUtJcDFELElBQWIrMEQsRUFBS00sVUFBa0NyMUQsSUFBYiswRCxFQUFLdHVELE1BQy9Cb3FFLEVBQU9JLHFCQUFxQixvQkFBcUJQLEVBQU9ueEQsS0FBTXBqQixFQUFLMUQsT0FBUXBCLEtBQUtnK0QsSUFBSU4sRUFBS00sSUFBS04sRUFBS3R1RCxLQUFNOUIsR0FDekdrc0UsRUFBT0ssa0JBQWtCLG9CQUFxQlIsRUFBT254RCxLQUFNcGpCLEVBQUsxRCxPQUFRcEIsS0FBS29QLElBQUlzdUQsRUFBS00sSUFBS04sRUFBS3R1RCxLQUFNOUIsU0FHekYzRSxJQUFiKzBELEVBQUtNLFVBQWtDcjFELElBQWIrMEQsRUFBS3R1RCxLQUVaLElBQWZzdUQsRUFBS1MsT0FBYXFiLEVBQU9DLE1BQU0sb0JBQXFCSixFQUFPbnhELEtBQU1wakIsRUFBSzFELE9BQVFzOEQsRUFBS00sSUFBSzF3RCxJQVhoR2tzRSxFQUFPQyxNQUFNLG9CQUFxQkosRUFBT254RCxLQUFNcGpCLEVBQUsxRCxPQUFRaTRFLEVBQU9ELFdBQVdoNEUsT0FBUWtNLEdBZXRGQSxFQUFPbE0sU0FBV0EsRUFBUSxPQUFPLEVBRXJDLElBQUssSUFBSUQsRUFBSSxFQUFHQSxFQUFJMkQsRUFBSzFELE9BQVFELElBQzdCbU0sRUFBT25ELEtBQUs3RyxNQUNSZ0ssRUFDQW5JLEtBQUtvMEUsS0FDRCxXQUNJLElBQUkxcUUsRUFJSixPQUhBd3RELEVBQUs2RCxLQUFLbVosRUFBT0QsWUFBWSxTQUFTMTNFLEdBQzlCQSxFQUFLb1UsT0FBU2hSLEVBQUszRCxLQUFJME4sRUFBV25OLE1BRW5DbU4sR0FBWXdxRSxFQUFPRCxXQUFXajRFLEdBTHpDLEdBT0E2SixFQUFLbEcsRUFBSzNELElBQ1YyRCxFQUFLM0QsS0FLakIsT0FBT21NLEVBQU9sTSxTQUFXQSxJQUU3QmtPLE1BQU8sU0FBUytwRSxFQUFRcnVFLEVBQU04SyxFQUFNeEksR0FDaEMsSUFBSWxNLEVBQVNrTSxFQUFPbE0sT0FFcEIsR0FBS2k0RSxFQUFPL3BFLE1BQVosQ0FFQSxJQUFJb3VELEVBQU8yYixFQUFPM2IsS0FHbEIsR0FBSzJiLEVBQU8zYixLQUFLSyxXQUVWLENBVUgsUUFQaUJwMUQsSUFBYiswRCxFQUFLTSxVQUFrQ3IxRCxJQUFiKzBELEVBQUt0dUQsTUFDL0JvcUUsRUFBT0kscUJBQXFCLFFBQVNQLEVBQU9ueEQsS0FBTWxkLEVBQUs1SixPQUFTcEIsS0FBS2crRCxJQUFJTixFQUFLTSxJQUFLTixFQUFLdHVELEtBQU9pcUUsRUFBTy9wRSxNQUFNbE8sT0FBU2tNLEVBQ2pILGtIQUNKa3NFLEVBQU9LLGtCQUFrQixRQUFTUixFQUFPbnhELEtBQU1sZCxFQUFLNUosT0FBU3BCLEtBQUtvUCxJQUFJc3VELEVBQUtNLElBQUtOLEVBQUt0dUQsS0FBT2lxRSxFQUFPL3BFLE1BQU1sTyxPQUFTa00sRUFDOUcsc0hBR1MzRSxJQUFiKzBELEVBQUtNLFVBQWtDcjFELElBQWIrMEQsRUFBS3R1RCxJQUFtQixDQUVsRCxHQUFtQixJQUFmc3VELEVBQUtTLE1BQWEsT0FBTzd3RCxFQUFPbE0sU0FBV0EsRUFDMUNvNEUsRUFBT0MsTUFBTSxlQUFnQkosRUFBT254RCxLQUFNbGQsRUFBSzVKLE9BQVNzOEQsRUFBS00sSUFBTXFiLEVBQU8vcEUsTUFBTWxPLE9BQVNrTSxHQUdsRyxHQUFJb3dELEVBQUtLLFdBQVcsR0FBSSxPQUFPendELEVBQU9sTSxTQUFXQSxPQWpCakRvNEUsRUFBT0MsTUFBTSxlQUFnQkosRUFBT254RCxLQUFNbGQsRUFBSzVKLE9BQVFpNEUsRUFBTy9wRSxNQUFNbE8sT0FBUWtNLEdBb0JoRixHQUFJQSxFQUFPbE0sU0FBV0EsRUFBUSxPQUFPLEVBRXJDLElBQUssSUFBSUQsRUFBSSxFQUFHQSxFQUFJNkosRUFBSzVKLE9BQVFELElBQzdCbU0sRUFBT25ELEtBQUs3RyxNQUNSZ0ssRUFDQW5JLEtBQUtvMEUsS0FDREYsRUFBTy9wRSxNQUFNbk8sRUFBSWs0RSxFQUFPL3BFLE1BQU1sTyxRQUM5QjRKLEVBQUs3SixHQUNMQSxFQUFJazRFLEVBQU8vcEUsTUFBTWxPLFNBSzdCLE9BQU9rTSxFQUFPbE0sU0FBV0EsS0FnQjdCbzRFLEVBQVMsQ0FDVHhqQixRQUFTLFNBQVN0MEQsR0FDZCxPQUFRQSxFQUFLczBELFNBQ0wsd0VBQ0gxekQsUUFBUSxVQUFXWixFQUFLOE8sS0FBSy9OLGVBQzdCSCxRQUFRLFVBQVdaLEVBQUs4TyxLQUFLblAsZUFDN0JpQixRQUFRLFNBQVUrNUQsRUFBSzk3RCxRQUFRbUIsRUFBS3dtQixPQUFTeG1CLEVBQUt3bUIsS0FBS21OLEtBQUssTUFBUTN6QixFQUFLd21CLE1BQ3pFNWxCLFFBQVEsV0FBWVosRUFBSzJpRCxRQUN6Qi9oRCxRQUFRLGFBQWNaLEVBQUtrckUsVUFDM0J0cUUsUUFBUSxXQUFZWixFQUFLNlksU0FFbENrL0QsTUFBTyxTQUFTanBFLEVBQU0wWCxFQUFNM04sRUFBUXF5RCxFQUFVdC9ELEVBQVEwb0QsR0FDbEQsR0FBSXo3QyxJQUFXcXlELEVBQVUsT0FBTyxFQUNoQyxPQUFRcDhELEdBQ0osSUFBSyxPQUVELEdBQWlCLFdBQWJvOEQsR0FBb0MsV0FBWHJ5RCxFQUFxQixPQUFPLEVBSWpFLElBQUk3WSxFQUFPLENBQ1B3bUIsS0FBTUEsRUFDTjFYLEtBQU1BLEVBQ04rSixPQUFRQSxFQUNScXlELFNBQVVBLEVBQ1Z2b0IsT0FBUSxjQUNSMlIsUUFBU0EsR0FJYixPQUZBdDBELEVBQUtzMEQsUUFBVXdqQixFQUFPeGpCLFFBQVF0MEQsR0FDOUI0TCxFQUFPbkQsS0FBS3pJLElBQ0wsR0FHWHlHLE1BQU8sU0FBU3FJLEVBQU0wWCxFQUFNM04sRUFBUXF5RCxFQUFVdC9ELEVBQVEwb0QsR0FDbEQsR0FBSTRXLEVBQVM5a0UsS0FBS3lTLEdBQVMsT0FBTyxFQUVsQyxJQUFJN1ksRUFBTyxDQUNQd21CLEtBQU1BLEVBQ04xWCxLQUFNQSxFQUNOK0osT0FBUUEsRUFDUnF5RCxTQUFVQSxFQUNWdm9CLE9BQVEsVUFDUjJSLFFBQVNBLEdBSWIsT0FGQXQwRCxFQUFLczBELFFBQVV3akIsRUFBT3hqQixRQUFRdDBELEdBQzlCNEwsRUFBT25ELEtBQUt6SSxJQUNMLEdBRVhvNEUsU0FBVSxTQUFTdHBFLEVBQU0wWCxFQUFNM04sRUFBUXF5RCxFQUFVdC9ELEVBQVEwb0QsR0FDckQsR0FBSXo3QyxJQUFXcXlELEVBQVUsT0FBTyxFQUNoQyxJQUFJbHJFLEVBQU8sQ0FDUHdtQixLQUFNQSxFQUNOMVgsS0FBTUEsRUFDTitKLE9BQVFBLEVBQ1JxeUQsU0FBVUEsRUFDVnZvQixPQUFRLGtCQUNSMlIsUUFBU0EsR0FJYixPQUZBdDBELEVBQUtzMEQsUUFBVXdqQixFQUFPeGpCLFFBQVF0MEQsR0FDOUI0TCxFQUFPbkQsS0FBS3pJLElBQ0wsR0FFWHE0RSxZQUFhLFNBQVN2cEUsRUFBTTBYLEVBQU0zTixFQUFRcXlELEVBQVV0L0QsRUFBUTBvRCxHQUN4RCxHQUFJejdDLEVBQVNxeUQsRUFBVSxPQUFPLEVBQzlCLElBQUlsckUsRUFBTyxDQUNQd21CLEtBQU1BLEVBQ04xWCxLQUFNQSxFQUNOK0osT0FBUUEsRUFDUnF5RCxTQUFVQSxFQUNWdm9CLE9BQVEsa0JBQ1IyUixRQUFTQSxHQUliLE9BRkF0MEQsRUFBS3MwRCxRQUFVd2pCLEVBQU94akIsUUFBUXQwRCxHQUM5QjRMLEVBQU9uRCxLQUFLekksSUFDTCxHQUVYczRFLFNBQVUsU0FBU3hwRSxFQUFNMFgsRUFBTTNOLEVBQVFxeUQsRUFBVXQvRCxFQUFRMG9ELEdBQ3JELEdBQUl6N0MsRUFBU3F5RCxFQUFVLE9BQU8sRUFDOUIsSUFBSWxyRSxFQUFPLENBQ1B3bUIsS0FBTUEsRUFDTjFYLEtBQU1BLEVBQ04rSixPQUFRQSxFQUNScXlELFNBQVVBLEVBQ1Z2b0IsT0FBUSxhQUNSMlIsUUFBU0EsR0FJYixPQUZBdDBELEVBQUtzMEQsUUFBVXdqQixFQUFPeGpCLFFBQVF0MEQsR0FDOUI0TCxFQUFPbkQsS0FBS3pJLElBQ0wsR0FFWGs0RSxxQkFBc0IsU0FBU3BwRSxFQUFNMFgsRUFBTTNOLEVBQVFxeUQsRUFBVXQvRCxFQUFRMG9ELEdBQ2pFLEdBQUl6N0MsR0FBVXF5RCxFQUFVLE9BQU8sRUFDL0IsSUFBSWxyRSxFQUFPLENBQ1B3bUIsS0FBTUEsRUFDTjFYLEtBQU1BLEVBQ04rSixPQUFRQSxFQUNScXlELFNBQVVBLEVBQ1Z2b0IsT0FBUSw4QkFDUjJSLFFBQVNBLEdBSWIsT0FGQXQwRCxFQUFLczBELFFBQVV3akIsRUFBT3hqQixRQUFRdDBELEdBQzlCNEwsRUFBT25ELEtBQUt6SSxJQUNMLEdBRVhtNEUsa0JBQW1CLFNBQVNycEUsRUFBTTBYLEVBQU0zTixFQUFRcXlELEVBQVV0L0QsRUFBUTBvRCxHQUM5RCxHQUFJejdDLEdBQVVxeUQsRUFBVSxPQUFPLEVBQy9CLElBQUlsckUsRUFBTyxDQUNQd21CLEtBQU1BLEVBQ04xWCxLQUFNQSxFQUNOK0osT0FBUUEsRUFDUnF5RCxTQUFVQSxFQUNWdm9CLE9BQVEsMkJBQ1IyUixRQUFTQSxHQUliLE9BRkF0MEQsRUFBS3MwRCxRQUFVd2pCLEVBQU94akIsUUFBUXQwRCxHQUM5QjRMLEVBQU9uRCxLQUFLekksSUFDTCxJQUlmKzZELEVBQU02YyxLQUFPQSxFQUNiN2MsRUFBTStjLE9BQVNBLEVBRWYzNEIsRUFBT0MsUUFBVTJiLEdBSVosU0FBVTViLEVBQVFDLEVBQVNrYixHQUVoQ25iLEVBQU9DLFFBQVVrYixFQUFvQixLQUloQyxTQUFVbmIsRUFBUUMsRUFBU2tiLEdBZ0RoQyxJQUFJSyxFQUFPTCxFQUFvQixHQUcvQjMwRCxPQUFPNHlFLGdCQUFrQjV5RSxPQUFPNjFELGVBQ2hDNzFELE9BQU82eUUsZUFBaUI3eUUsT0FBTzh5RSxjQVMvQixJQUNJLElBQUk5eUUsT0FBTyt5RSxNQUFNLFVBQ25CLE1BQU9DLEdBQ0xoekUsT0FBTyt5RSxNQUFRLFNBQVM1cEUsRUFBTThwRSxFQUFTQyxFQUFZQyxHQUMvQyxJQUFJNWpFLEVBQVE1QixTQUFTc1IsWUFBWSxlQUVqQyxPQURBMVAsRUFBTTZqRSxnQkFBZ0JqcUUsRUFBTThwRSxFQUFTQyxFQUFZQyxHQUMxQzVqRSxHQUlmLElBQUk4akUsRUFBYSxDQUViQyxPQUFRLEVBRVJDLE9BQVEsRUFFUkMsaUJBQWtCLEVBRWxCQyxRQUFTLEVBRVRDLEtBQU0sR0FHTkMsRUFBYSx1RUFBdUU5NUUsTUFBTSxLQUMxRis1RSxFQUF5QiwwQkFBMEIvNUUsTUFBTSxLQUN6RGc2RSxFQUEwQiwwRkFBMEZoNkUsTUFBTSxLQUcxSGk2RSxFQUdLLEtBNkNULFNBQVNDLElBRUxqMkUsS0FBS2syRSxPQUFTLENBQ1ZsaUQsT0FBUSxHQUNSbWlELGVBQWdCLEdBQ2hCQyxnQkFBaUIsSUFJekJILEVBQW1CSSxVQUFZLENBQzNCcjRELFFBQVMsVUFPYmk0RCxFQUFtQnhlLE1BQVEsU0FBU0MsR0FFaEMsT0FEQVIsRUFBSzE0RCxPQUFPeTNFLEVBQW1CSSxVQUFXM2UsR0FDbkN1ZSxFQUFtQkksV0FHOUJuZixFQUFLMTRELE9BQU95M0UsRUFBb0JWLEdBQ2hDcmUsRUFBSzE0RCxPQUFPeTNFLEVBQW1COTdFLFVBQVdvN0UsR0FHMUNVLEVBQW1COTdFLFVBQVV5OUQsTUFBTyxFQUdwQ3FlLEVBQW1COTdFLFVBQVU2SSxPQUFRLEVBR3JDazBELEVBQUsxNEQsT0FBT3kzRSxFQUFtQjk3RSxVQUFXLENBR3RDa3VDLEtBQU0sU0FBU3ZnQyxFQUFRbW9ELEVBQUs5dUQsRUFBT20xRSxFQUFVQyxHQUN6QyxJQUFJQyxFQUFPeDJFLEtBRVhrM0QsRUFBSzE0RCxPQUFPd0IsS0FBS2syRSxPQUFRLENBQ3JCcHVFLE9BQVFBLEVBQ1Jtb0QsSUFBS0EsRUFDTDl1RCxNQUF3QixrQkFBVkEsR0FBc0JBLEVBQ3BDbTFFLFNBQVVBLEVBQ1ZDLFNBQVVBLEVBQ1Z6cUUsUUFBUyxDQUNMbWtELElBQUtBLEVBQ0w1a0QsS0FBTXZELEtBSWQ5SCxLQUFLazJFLE9BQU9sNEQsUUFBVSxTQUFTQSxHQUMzQixHQUF1QixpQkFBWkEsRUFBc0IsT0FBT0EsRUFDeEMsR0FBdUIsaUJBQVpBLEtBQTBCQSxFQUFRdmhCLFFBQVEsS0FBTSxPQUFPeXRCLFNBQVNsTSxFQUFTLElBQ3BGLEdBQXVCLGlCQUFaQSxJQUF5QkEsRUFBUXZoQixRQUFRLEtBQU0sQ0FDdEQsSUFBSTBtQixFQUFNbkYsRUFBUWppQixNQUFNLEtBQ3BCODhELEVBQU0zdUMsU0FBUy9HLEVBQUksR0FBSSxJQUN2QmxaLEVBQU1pZ0IsU0FBUy9HLEVBQUksR0FBSSxJQUMzQixPQUFPdG9CLEtBQUsyZ0UsTUFBTTNnRSxLQUFLeWdFLFVBQVlyeEQsRUFBTTR1RCxJQUFRQSxHQVBuQyxDQVNwQm9kLEVBQW1CSSxVQUFVcjRELFNBRy9CLElBQUl6aEIsRUFzTlosU0FBY3VQLEdBRVYsSUFBSyxJQUFJMnFFLEtBQVlSLEVBQW1CMWUsS0FBS0ksUUFBUyxDQUNsRCxJQUFJcDdELEVBQU8wNUUsRUFBbUIxZSxLQUFLSSxRQUFROGUsR0FDM0MsS0FDTWw2RSxFQUFLczdELE1BQVE3MEQsRUFBTXpHLEVBQUtzN0QsS0FBTS9yRCxFQUFRbWtELFNBQ3RDMXpELEVBQUt1N0QsT0FBUzkwRCxFQUFNekcsRUFBS3U3RCxNQUFPaHNELEVBQVFULEtBQUtuUCxnQkFHL0MsT0FBT0ssRUFJZixTQUFTeUcsRUFBTXlrRSxFQUFVcnlELEdBQ3JCLE1BQTRCLFdBQXhCOGhELEVBQUs3ckQsS0FBS284RCxHQUNIQSxJQUFhcnlELEVBRUksV0FBeEI4aEQsRUFBSzdyRCxLQUFLbzhELEdBQ0hBLEVBQVM5a0UsS0FBS3lTLFFBRHpCLEdBdk9Xc2hFLENBQUsxMkUsS0FBS2syRSxPQUFPcHFFLFNBRTVCLFNBQVMwdUQsRUFBTy9vRCxHQUVaLElBQUssSUFBSXpWLEVBQUksRUFBR0EsRUFBSSs1RSxFQUF3Qjk1RSxPQUFRRCxJQUNoRCxJQUNJdzZFLEVBQUtULEVBQXdCLzVFLElBQU0yNkUsRUFBSVosRUFBd0IvNUUsSUFDakUsTUFBT3VELElBR2JpM0UsRUFBS3R5QyxjQUFjLElBQUkrd0MsTUFBTXhqRSxFQUFNcEcsT0FJdkMsR0FBSzlPLEVBeUJMeUQsS0FBS2dELE9BQVEsRUFDYmhELEtBQUtrMkUsT0FBT2xxQyxTQUFXenZDLEVBQ3ZCeUQsS0FBSzQyRSxXQUFhWCxFQUFtQlIsT0FDckN6MUUsS0FBS2trQyxjQUFjLElBQUkrd0MsTUFBTSx5QkE1QjdCLENBRUksSUFBSTBCLEVBMktoQixXQUNJLElBR1FFLEVBQ0FDLEVBSkpDLEdBR0lGLEVBQWV4eEIsU0FBU25LLEtBQ3hCNDdCLEVBRk8sOENBRWF4bUMsS0FBS3VtQyxFQUFhMzZFLGdCQUFrQixHQUh2Qyw0REFJQ3lHLEtBQUttMEUsRUFBYSxLQUc1QyxPQUFPNTBFLE9BQU84eUUsZUFDUitCLEdBQVdDLEtBUWpCLFdBQ0ksSUFDSSxPQUFPLElBQUk5MEUsT0FBTzZ5RSxlQUFlLHFCQUNuQyxNQUFPeDFFLEtBWDJCMDNFLEdBQXFCRCxJQUU3RCxTQUFTQSxJQUNMLElBQ0ksT0FBTyxJQUFJOTBFLE9BQU80eUUsZ0JBQ3BCLE1BQU92MUUsTUExTEsyM0UsR0FDVmwzRSxLQUFLazJFLE9BQU9TLElBQU1BLEVBR2xCLElBQUssSUFBSTM2RSxFQUFJLEVBQUdBLEVBQUk2NUUsRUFBVzU1RSxPQUFRRCxJQUNuQzI2RSxFQUFJcnpFLGlCQUFpQnV5RSxFQUFXNzVFLEdBQUl3K0QsR0FJcEM4YixFQUFVSyxFQUFJdHVDLEtBQUt2Z0MsRUFBUW1vRCxFQUFLOXVELEVBQU9tMUUsRUFBVUMsR0FDaERJLEVBQUl0dUMsS0FBS3ZnQyxFQUFRbW9ELEVBQUs5dUQsR0FHM0IsSUFBSyxJQUFJdWYsRUFBSSxFQUFHQSxFQUFJbzFELEVBQXVCNzVFLE9BQVF5a0IsSUFDL0MsSUFDSWkyRCxFQUFJYixFQUF1QnAxRCxJQUFNODFELEVBQUtWLEVBQXVCcDFELElBQy9ELE1BQU9uaEIsT0FjckI0M0UsaUJBQWtCLFNBQVN4bUUsRUFBTTVXLEdBRTdCLEdBQUtpRyxLQUFLZ0QsTUFBVixDQU1BLElBQUltekUsRUFBaUJuMkUsS0FBS2syRSxPQUFPQyxlQUM3QkEsRUFBZXhsRSxHQUFPd2xFLEVBQWV4bEUsSUFBUyxJQUFNNVcsRUFDbkRvOEUsRUFBZXhsRSxHQUFRNVcsT0FQeEJpRyxLQUFLazJFLE9BQU9TLElBQUlRLGlCQUFpQnhtRSxFQUFNNVcsSUFTL0Npa0IsUUFBUyxFQUNUbzVELGlCQUFpQixFQUNqQkMsT0FBUSxHQUdSQyxLQUFNLFNBQWN6eEUsR0FDaEIsSUFBSTJ3RSxFQUFPeDJFLEtBb0JYLFNBQVN3VSxJQTJKakIsSUFBaUJqWSxFQUFNdVAsRUExSlgwcUUsRUFBS0ksV0FBYVgsRUFBbUJQLGlCQUNyQ2MsRUFBS3R5QyxjQUFjLElBQUkrd0MsTUFBTSxxQkFDN0J1QixFQUFLSSxXQUFhWCxFQUFtQk4sUUFDckNhLEVBQUt0eUMsY0FBYyxJQUFJK3dDLE1BQU0scUJBRTdCdUIsRUFBS2UsT0FBUyxJQUNkZixFQUFLZ0IsV0FBYXhCLEVBR2xCUSxFQUFLaUIsU0FBV2pCLEVBQUtrQixhQUFlcjhFLEtBQUtDLFdBaUpwQ2lCLEVBaEpPaTZFLEVBQUtOLE9BQU9scUMsU0FnSmJsZ0MsRUFoSnVCMHFFLEVBQUtOLE9BQU9wcUUsUUFpSi9Db3JELEVBQUt5Z0IsV0FBV3A3RSxFQUFLeXZDLFVBQ3hCenZDLEVBQUt5dkMsU0FBU2xnQyxHQUFXbXFFLEVBQW1CMWUsS0FBS0ssS0FBS3I3RCxFQUFLeXZDLFdBakpuRCxLQUFNLEdBR1Z3cUMsRUFBS0ksV0FBYVgsRUFBbUJMLEtBQ3JDWSxFQUFLdHlDLGNBQWMsSUFBSSt3QyxNQUFNLHFCQUM3QnVCLEVBQUt0eUMsY0FBYyxJQUFJK3dDLE1BQU0sU0FDN0J1QixFQUFLdHlDLGNBQWMsSUFBSSt3QyxNQUFNLFlBckNqQ2oxRSxLQUFLazJFLE9BQU9wcUUsUUFBUTA3QixLQUFPM2hDLEVBR3RCN0YsS0FBS2dELE9BUVZoRCxLQUFLbTNFLGlCQUFpQixtQkFBb0Isc0JBRzFDbjNFLEtBQUtra0MsY0FBYyxJQUFJK3dDLE1BQU0sY0FFekJqMUUsS0FBS2syRSxPQUFPLzBFLE1BQU9vTyxXQUFXaUYsRUFBTXhVLEtBQUtrMkUsT0FBT2w0RCxTQUMvQ3hKLEtBYkR4VSxLQUFLazJFLE9BQU9TLElBQUlXLEtBQUt6eEUsSUFzQzdCMHNELE1BQU8sV0FFRXZ5RCxLQUFLZ0QsT0FNVmhELEtBQUs0MkUsV0FBYVgsRUFBbUJULE9BQ3JDeDFFLEtBQUtra0MsY0FBYyxJQUFJK3dDLE1BQU0sU0FBUyxHQUFPLEVBQU9qMUUsT0FDcERBLEtBQUtra0MsY0FBYyxJQUFJK3dDLE1BQU0sU0FBUyxHQUFPLEVBQU9qMUUsUUFQaERBLEtBQUtrMkUsT0FBT1MsSUFBSXBrQixXQVk1QjJFLEVBQUsxNEQsT0FBT3kzRSxFQUFtQjk3RSxVQUFXLENBQ3RDeTlFLFlBQWEsR0FDYkwsT0FBUXRCLEVBQW1CVCxPQUMzQmdDLFdBQVksR0FFWkssa0JBQW1CLFNBQVNsbkUsR0FFeEIsT0FBSzNRLEtBQUtnRCxNQUtIaEQsS0FBS2syRSxPQUFPRSxnQkFBZ0J6bEUsRUFBS3pVLGVBSjdCOEQsS0FBS2syRSxPQUFPUyxJQUFJa0Isa0JBQWtCbG5FLElBUWpEbW5FLHNCQUF1QixXQUVuQixJQUFLOTNFLEtBQUtnRCxNQUNOLE9BQU9oRCxLQUFLazJFLE9BQU9TLElBQUltQix3QkFJM0IsSUFBSTFCLEVBQWtCcDJFLEtBQUtrMkUsT0FBT0UsZ0JBQzlCMkIsRUFBVSxHQUNkLElBQUssSUFBSS95QyxLQUFLb3hDLEVBQ0xBLEVBQWdCejVFLGVBQWVxb0MsS0FDcEMreUMsR0FBVy95QyxFQUFJLEtBQU9veEMsRUFBZ0JweEMsR0FBSyxRQUUvQyxPQUFPK3lDLEdBRVhDLGlCQUFrQixhQUNsQkMsYUFBYyxHQUNkUixTQUFVLEtBQ1ZDLGFBQWMsR0FDZFEsWUFBYSxPQUlqQmhoQixFQUFLMTRELE9BQU95M0UsRUFBbUI5N0UsVUFBVyxDQUN0Q21KLGlCQUFrQixTQUEwQitILEVBQU1tdkQsR0FDOUMsSUFBSXhtQyxFQUFTaDBCLEtBQUtrMkUsT0FBT2xpRCxPQUNwQkEsRUFBTzNvQixLQUFPMm9CLEVBQU8zb0IsR0FBUSxJQUNsQzJvQixFQUFPM29CLEdBQU1yRyxLQUFLdzFELElBRXRCeHBDLG9CQUFxQixTQUE2QjNsQixFQUFNbXZELEdBRXBELElBREEsSUFBSTJkLEVBQVVuNEUsS0FBS2syRSxPQUFPbGlELE9BQU8zb0IsSUFBUyxHQUNqQ3JQLEVBQUksRUFBR0EsRUFBSW04RSxFQUFRbDhFLE9BQVFELElBQzVCbThFLEVBQVFuOEUsS0FBT3crRCxHQUNmMmQsRUFBUXo3RSxPQUFPVixJQUFLLElBSWhDa29DLGNBQWUsU0FBdUJ6eUIsR0FFbEMsSUFEQSxJQUFJMG1FLEVBQVVuNEUsS0FBS2syRSxPQUFPbGlELE9BQU92aUIsRUFBTXBHLE9BQVMsR0FDdkNyUCxFQUFJLEVBQUdBLEVBQUltOEUsRUFBUWw4RSxPQUFRRCxJQUNoQ204RSxFQUFRbjhFLEdBQUcxQixLQUFLMEYsS0FBTXlSLEdBRzFCLElBQUkybUUsRUFBUyxLQUFPM21FLEVBQU1wRyxLQUN0QnJMLEtBQUtvNEUsSUFBU3A0RSxLQUFLbzRFLEdBQVEzbUUsTUE4RHZDaXFDLEVBQU9DLFFBQVVzNkIsTUF2MVFoQnY2QixPQUFPQyxRQUFVLytCLFcsY0NEbkIsSUFPSXk3RCxFQUNBQyxFQVJBQyxFQUFVNzhCLEVBQU9DLFFBQVUsR0FVL0IsU0FBUzY4QixJQUNMLE1BQU0sSUFBSS9uQixNQUFNLG1DQUVwQixTQUFTZ29CLElBQ0wsTUFBTSxJQUFJaG9CLE1BQU0scUNBc0JwQixTQUFTaW9CLEVBQVdDLEdBQ2hCLEdBQUlOLElBQXFCOW9FLFdBRXJCLE9BQU9BLFdBQVdvcEUsRUFBSyxHQUczQixJQUFLTixJQUFxQkcsSUFBcUJILElBQXFCOW9FLFdBRWhFLE9BREE4b0UsRUFBbUI5b0UsV0FDWkEsV0FBV29wRSxFQUFLLEdBRTNCLElBRUksT0FBT04sRUFBaUJNLEVBQUssR0FDL0IsTUFBTXA1RSxHQUNKLElBRUksT0FBTzg0RSxFQUFpQi85RSxLQUFLLEtBQU1xK0UsRUFBSyxHQUMxQyxNQUFNcDVFLEdBRUosT0FBTzg0RSxFQUFpQi85RSxLQUFLMEYsS0FBTTI0RSxFQUFLLE1BdkNuRCxXQUNHLElBRVFOLEVBRHNCLG1CQUFmOW9FLFdBQ1lBLFdBRUFpcEUsRUFFekIsTUFBT2o1RSxHQUNMODRFLEVBQW1CRyxFQUV2QixJQUVRRixFQUR3QixtQkFBakI1NkQsYUFDY0EsYUFFQSs2RCxFQUUzQixNQUFPbDVFLEdBQ0wrNEUsRUFBcUJHLEdBakI3QixHQXdFQSxJQUVJRyxFQUZBLzNELEVBQVEsR0FDUmc0RCxHQUFXLEVBRVhDLEdBQWMsRUFFbEIsU0FBU0MsSUFDQUYsR0FBYUQsSUFHbEJDLEdBQVcsRUFDUEQsRUFBYTM4RSxPQUNiNGtCLEVBQVErM0QsRUFBYTV0RSxPQUFPNlYsR0FFNUJpNEQsR0FBYyxFQUVkajRELEVBQU01a0IsUUFDTis4RSxLQUlSLFNBQVNBLElBQ0wsSUFBSUgsRUFBSixDQUdBLElBQUk3NkQsRUFBVTA2RCxFQUFXSyxHQUN6QkYsR0FBVyxFQUdYLElBREEsSUFBSTV3RSxFQUFNNFksRUFBTTVrQixPQUNWZ00sR0FBSyxDQUdQLElBRkEyd0UsRUFBZS8zRCxFQUNmQSxFQUFRLEtBQ0NpNEQsRUFBYTd3RSxHQUNkMndFLEdBQ0FBLEVBQWFFLEdBQVlyM0QsTUFHakNxM0QsR0FBYyxFQUNkN3dFLEVBQU00WSxFQUFNNWtCLE9BRWhCMjhFLEVBQWUsS0FDZkMsR0FBVyxFQW5FZixTQUF5QkksR0FDckIsR0FBSVgsSUFBdUI1NkQsYUFFdkIsT0FBT0EsYUFBYXU3RCxHQUd4QixJQUFLWCxJQUF1QkcsSUFBd0JILElBQXVCNTZELGFBRXZFLE9BREE0NkQsRUFBcUI1NkQsYUFDZEEsYUFBYXU3RCxHQUV4QixJQUVXWCxFQUFtQlcsR0FDNUIsTUFBTzE1RSxHQUNMLElBRUksT0FBTys0RSxFQUFtQmgrRSxLQUFLLEtBQU0yK0UsR0FDdkMsTUFBTzE1RSxHQUdMLE9BQU8rNEUsRUFBbUJoK0UsS0FBSzBGLEtBQU1pNUUsS0FnRDdDQyxDQUFnQmw3RCxJQWlCcEIsU0FBU203RCxFQUFLUixFQUFLamdCLEdBQ2YxNEQsS0FBSzI0RSxJQUFNQSxFQUNYMzRFLEtBQUswNEQsTUFBUUEsRUFZakIsU0FBUzc1RCxLQTVCVDA1RSxFQUFRdm9FLFNBQVcsU0FBVTJvRSxHQUN6QixJQUFJM3dFLEVBQU8sSUFBSTdNLE1BQU0rQyxVQUFVakMsT0FBUyxHQUN4QyxHQUFJaUMsVUFBVWpDLE9BQVMsRUFDbkIsSUFBSyxJQUFJRCxFQUFJLEVBQUdBLEVBQUlrQyxVQUFVakMsT0FBUUQsSUFDbENnTSxFQUFLaE0sRUFBSSxHQUFLa0MsVUFBVWxDLEdBR2hDNmtCLEVBQU03YixLQUFLLElBQUltMEUsRUFBS1IsRUFBSzN3RSxJQUNKLElBQWpCNlksRUFBTTVrQixRQUFpQjQ4RSxHQUN2QkgsRUFBV00sSUFTbkJHLEVBQUtoL0UsVUFBVXNuQixJQUFNLFdBQ2pCemhCLEtBQUsyNEUsSUFBSXg2RSxNQUFNLEtBQU02QixLQUFLMDRELFFBRTlCNmYsRUFBUXJVLE1BQVEsVUFDaEJxVSxFQUFRYSxTQUFVLEVBQ2xCYixFQUFRNzBFLElBQU0sR0FDZDYwRSxFQUFRYyxLQUFPLEdBQ2ZkLEVBQVFwdEQsUUFBVSxHQUNsQm90RCxFQUFRZSxTQUFXLEdBSW5CZixFQUFRbm5FLEdBQUt2UyxFQUNiMDVFLEVBQVFnQixZQUFjMTZFLEVBQ3RCMDVFLEVBQVF6NEUsS0FBT2pCLEVBQ2YwNUUsRUFBUWlCLElBQU0zNkUsRUFDZDA1RSxFQUFRa0IsZUFBaUI1NkUsRUFDekIwNUUsRUFBUW1CLG1CQUFxQjc2RSxFQUM3QjA1RSxFQUFReDJELEtBQU9sakIsRUFDZjA1RSxFQUFRb0IsZ0JBQWtCOTZFLEVBQzFCMDVFLEVBQVFxQixvQkFBc0IvNkUsRUFFOUIwNUUsRUFBUXYvRCxVQUFZLFNBQVVySSxHQUFRLE1BQU8sSUFFN0M0bkUsRUFBUXIxQyxRQUFVLFNBQVV2eUIsR0FDeEIsTUFBTSxJQUFJOC9DLE1BQU0scUNBR3BCOG5CLEVBQVFzQixJQUFNLFdBQWMsTUFBTyxLQUNuQ3RCLEVBQVF1QixNQUFRLFNBQVU3cUQsR0FDdEIsTUFBTSxJQUFJd2hDLE1BQU0sbUNBRXBCOG5CLEVBQVF3QixNQUFRLFdBQWEsT0FBTyxJLGtCQ3ZMcEMsaUNBQzZCLG9CQUFUemtDLE1BQXdCQSxNQUNoQ3B6QyxPQUNSL0QsRUFBUU4sU0FBUzFELFVBQVVnRSxNQWlCL0IsU0FBUzY3RSxFQUFRcDFFLEVBQUlxMUUsR0FDbkJqNkUsS0FBS2s2RSxJQUFNdDFFLEVBQ1g1RSxLQUFLbTZFLFNBQVdGLEVBZmxCdCtCLEVBQVFwc0MsV0FBYSxXQUNuQixPQUFPLElBQUl5cUUsRUFBUTc3RSxFQUFNN0QsS0FBS2lWLFdBQVk2cUUsRUFBT2w4RSxXQUFZd2YsZUFFL0RpK0IsRUFBUTArQixZQUFjLFdBQ3BCLE9BQU8sSUFBSUwsRUFBUTc3RSxFQUFNN0QsS0FBSysvRSxZQUFhRCxFQUFPbDhFLFdBQVlvOEUsZ0JBRWhFMytCLEVBQVFqK0IsYUFDUmkrQixFQUFRMitCLGNBQWdCLFNBQVN0OEQsR0FDM0JBLEdBQ0ZBLEVBQVFzcUIsU0FRWjB4QyxFQUFRNy9FLFVBQVVvZ0YsTUFBUVAsRUFBUTcvRSxVQUFVb3ZCLElBQU0sYUFDbER5d0QsRUFBUTcvRSxVQUFVbXVDLE1BQVEsV0FDeEJ0b0MsS0FBS202RSxTQUFTNy9FLEtBQUs4L0UsRUFBT3A2RSxLQUFLazZFLE1BSWpDditCLEVBQVE2K0IsT0FBUyxTQUFTaitFLEVBQU1rK0UsR0FDOUIvOEQsYUFBYW5oQixFQUFLbStFLGdCQUNsQm4rRSxFQUFLbytFLGFBQWVGLEdBR3RCOStCLEVBQVFpL0IsU0FBVyxTQUFTcitFLEdBQzFCbWhCLGFBQWFuaEIsRUFBS20rRSxnQkFDbEJuK0UsRUFBS28rRSxjQUFnQixHQUd2QmgvQixFQUFRay9CLGFBQWVsL0IsRUFBUW41QixPQUFTLFNBQVNqbUIsR0FDL0NtaEIsYUFBYW5oQixFQUFLbStFLGdCQUVsQixJQUFJRCxFQUFRbCtFLEVBQUtvK0UsYUFDYkYsR0FBUyxJQUNYbCtFLEVBQUttK0UsZUFBaUJuckUsWUFBVyxXQUMzQmhULEVBQUt1K0UsWUFDUHYrRSxFQUFLdStFLGVBQ05MLEtBS1AsRUFBUSxJQUlSOStCLEVBQVFsc0MsYUFBZ0Msb0JBQVQ2bEMsTUFBd0JBLEtBQUs3bEMsbUJBQ2xCLElBQVhoTSxHQUEwQkEsRUFBT2dNLGNBQ3hDelAsTUFBUUEsS0FBS3lQLGFBQ3JDa3NDLEVBQVFvL0IsZUFBa0Msb0JBQVR6bEMsTUFBd0JBLEtBQUt5bEMscUJBQ2xCLElBQVh0M0UsR0FBMEJBLEVBQU9zM0UsZ0JBQ3hDLzZFLE1BQVFBLEtBQUsrNkUsaUIsa0NDOUR2Qyw2QkFDSSxhQUVBLElBQUl0M0UsRUFBT2dNLGFBQVgsQ0FJQSxJQUlJdXJFLEVBNkhJaHlDLEVBWkFpeUMsRUFyQkFDLEVBQ0FDLEVBakdKQyxFQUFhLEVBQ2JDLEVBQWdCLEdBQ2hCQyxHQUF3QixFQUN4QkMsRUFBTTkzRSxFQUFPb00sU0FvSmIyckUsRUFBV2hpRixPQUFPaWlGLGdCQUFrQmppRixPQUFPaWlGLGVBQWVoNEUsR0FDOUQrM0UsRUFBV0EsR0FBWUEsRUFBU2pzRSxXQUFhaXNFLEVBQVcvM0UsRUFHZixxQkFBckMsR0FBR3JKLFNBQVNFLEtBQUttSixFQUFPODBFLFNBcEZ4QnlDLEVBQW9CLFNBQVN4Z0IsR0FDekIrZCxFQUFRdm9FLFVBQVMsV0FBYzByRSxFQUFhbGhCLFFBSXBELFdBR0ksR0FBSS8yRCxFQUFPazRFLGNBQWdCbDRFLEVBQU9tNEUsY0FBZSxDQUM3QyxJQUFJQyxHQUE0QixFQUM1QkMsRUFBZXI0RSxFQUFPczRFLFVBTTFCLE9BTEF0NEUsRUFBT3M0RSxVQUFZLFdBQ2ZGLEdBQTRCLEdBRWhDcDRFLEVBQU9rNEUsWUFBWSxHQUFJLEtBQ3ZCbDRFLEVBQU9zNEUsVUFBWUQsRUFDWkQsR0F3RUpHLEdBSUF2NEUsRUFBT3c0RSxpQkE5Q1ZoQixFQUFVLElBQUlnQixnQkFDVkMsTUFBTUgsVUFBWSxTQUFTdHFFLEdBRS9CaXFFLEVBRGFqcUUsRUFBTTVMLE9BSXZCbTFFLEVBQW9CLFNBQVN4Z0IsR0FDekJ5Z0IsRUFBUWtCLE1BQU1SLFlBQVluaEIsS0EyQ3ZCK2dCLEdBQU8sdUJBQXdCQSxFQUFJamlFLGNBQWMsV0F0Q3BEMHZCLEVBQU91eUMsRUFBSWxnQyxnQkFDZjIvQixFQUFvQixTQUFTeGdCLEdBR3pCLElBQUk0aEIsRUFBU2IsRUFBSWppRSxjQUFjLFVBQy9COGlFLEVBQU9DLG1CQUFxQixXQUN4QlgsRUFBYWxoQixHQUNiNGhCLEVBQU9DLG1CQUFxQixLQUM1QnJ6QyxFQUFLcGIsWUFBWXd1RCxHQUNqQkEsRUFBUyxNQUVicHpDLEVBQUtuYixZQUFZdXVELEtBS3JCcEIsRUFBb0IsU0FBU3hnQixHQUN6QmpyRCxXQUFXbXNFLEVBQWMsRUFBR2xoQixLQWxENUIwZ0IsRUFBZ0IsZ0JBQWtCcmdGLEtBQUt5Z0UsU0FBVyxJQUNsRDZmLEVBQWtCLFNBQVMxcEUsR0FDdkJBLEVBQU1xQixTQUFXclAsR0FDSyxpQkFBZmdPLEVBQU01TCxNQUN5QixJQUF0QzRMLEVBQU01TCxLQUFLcEosUUFBUXkrRSxJQUNuQlEsR0FBY2pxRSxFQUFNNUwsS0FBS3BJLE1BQU15OUUsRUFBY2ovRSxVQUlqRHdILEVBQU9ILGlCQUNQRyxFQUFPSCxpQkFBaUIsVUFBVzYzRSxHQUFpQixHQUVwRDEzRSxFQUFPNjRFLFlBQVksWUFBYW5CLEdBR3BDSCxFQUFvQixTQUFTeGdCLEdBQ3pCLzJELEVBQU9rNEUsWUFBWVQsRUFBZ0IxZ0IsRUFBUSxPQWdFbkRnaEIsRUFBUy9yRSxhQTFLVCxTQUFzQjRPLEdBRUksbUJBQWJBLElBQ1RBLEVBQVcsSUFBSXhnQixTQUFTLEdBQUt3Z0IsSUFJL0IsSUFEQSxJQUFJclcsRUFBTyxJQUFJN00sTUFBTStDLFVBQVVqQyxPQUFTLEdBQy9CRCxFQUFJLEVBQUdBLEVBQUlnTSxFQUFLL0wsT0FBUUQsSUFDN0JnTSxFQUFLaE0sR0FBS2tDLFVBQVVsQyxFQUFJLEdBRzVCLElBQUl1Z0YsRUFBTyxDQUFFbCtELFNBQVVBLEVBQVVyVyxLQUFNQSxHQUd2QyxPQUZBcXpFLEVBQWNELEdBQWNtQixFQUM1QnZCLEVBQWtCSSxHQUNYQSxLQTZKVEksRUFBU1QsZUFBaUJBLEVBMUoxQixTQUFTQSxFQUFldmdCLFVBQ2I2Z0IsRUFBYzdnQixHQXlCekIsU0FBU2toQixFQUFhbGhCLEdBR2xCLEdBQUk4Z0IsRUFHQS9yRSxXQUFXbXNFLEVBQWMsRUFBR2xoQixPQUN6QixDQUNILElBQUkraEIsRUFBT2xCLEVBQWM3Z0IsR0FDekIsR0FBSStoQixFQUFNLENBQ05qQixHQUF3QixFQUN4QixLQWpDWixTQUFhaUIsR0FDVCxJQUFJbCtELEVBQVdrK0QsRUFBS2wrRCxTQUNoQnJXLEVBQU91MEUsRUFBS3YwRSxLQUNoQixPQUFRQSxFQUFLL0wsUUFDYixLQUFLLEVBQ0RvaUIsSUFDQSxNQUNKLEtBQUssRUFDREEsRUFBU3JXLEVBQUssSUFDZCxNQUNKLEtBQUssRUFDRHFXLEVBQVNyVyxFQUFLLEdBQUlBLEVBQUssSUFDdkIsTUFDSixLQUFLLEVBQ0RxVyxFQUFTclcsRUFBSyxHQUFJQSxFQUFLLEdBQUlBLEVBQUssSUFDaEMsTUFDSixRQUNJcVcsRUFBU2xnQixXQW5EckIsRUFtRHNDNkosSUFpQmxCeVosQ0FBSTg2RCxHQUNOLFFBQ0V4QixFQUFldmdCLEdBQ2Y4Z0IsR0FBd0IsTUF2RTVDLENBeUxrQixvQkFBVGhtQyxVQUF5QyxJQUFYN3hDLEVBQXlCekQsS0FBT3lELEVBQVM2eEMsUSxzQ0N4TCtHcHpDLE9BQTlIdzVDLEVBQU9DLFFBQWlKLFNBQVN3bUIsR0FBRyxJQUFJNWlFLEVBQUUsR0FBRyxTQUFTN0UsRUFBRXNCLEdBQUcsR0FBR3VELEVBQUV2RCxHQUFHLE9BQU91RCxFQUFFdkQsR0FBRzIvQyxRQUFRLElBQUkwZixFQUFFOTdELEVBQUV2RCxHQUFHLENBQUNBLEVBQUVBLEVBQUVpQyxHQUFFLEVBQUcwOUMsUUFBUSxJQUFJLE9BQU93bUIsRUFBRW5tRSxHQUFHMUIsS0FBSytnRSxFQUFFMWYsUUFBUTBmLEVBQUVBLEVBQUUxZixRQUFRamhELEdBQUcyZ0UsRUFBRXA5RCxHQUFFLEVBQUdvOUQsRUFBRTFmLFFBQVEsT0FBT2poRCxFQUFFdTRCLEVBQUVrdkMsRUFBRXpuRSxFQUFFMkMsRUFBRWtDLEVBQUU3RSxFQUFFMmUsRUFBRSxTQUFTOG9ELEVBQUU1aUUsRUFBRXZELEdBQUd0QixFQUFFaXBDLEVBQUV3K0IsRUFBRTVpRSxJQUFJL0YsT0FBT2tJLGVBQWV5Z0UsRUFBRTVpRSxFQUFFLENBQUNrQyxZQUFXLEVBQUc0QixJQUFJckgsS0FBS3RCLEVBQUUyZ0UsRUFBRSxTQUFTOEcsR0FBRyxvQkFBb0JsK0QsUUFBUUEsT0FBT2djLGFBQWF6bUIsT0FBT2tJLGVBQWV5Z0UsRUFBRWwrRCxPQUFPZ2MsWUFBWSxDQUFDbG1CLE1BQU0sV0FBV1AsT0FBT2tJLGVBQWV5Z0UsRUFBRSxhQUFhLENBQUNwb0UsT0FBTSxLQUFNVyxFQUFFeW5FLEVBQUUsU0FBU0EsRUFBRTVpRSxHQUFHLEdBQUcsRUFBRUEsSUFBSTRpRSxFQUFFem5FLEVBQUV5bkUsSUFBSSxFQUFFNWlFLEVBQUUsT0FBTzRpRSxFQUFFLEdBQUcsRUFBRTVpRSxHQUFHLGlCQUFpQjRpRSxHQUFHQSxHQUFHQSxFQUFFbmlELFdBQVcsT0FBT21pRCxFQUFFLElBQUlubUUsRUFBRXhDLE9BQU9xQyxPQUFPLE1BQU0sR0FBR25CLEVBQUUyZ0UsRUFBRXIvRCxHQUFHeEMsT0FBT2tJLGVBQWUxRixFQUFFLFVBQVUsQ0FBQ3lGLFlBQVcsRUFBRzFILE1BQU1vb0UsSUFBSSxFQUFFNWlFLEdBQUcsaUJBQWlCNGlFLEVBQUUsSUFBSSxJQUFJOUcsS0FBSzhHLEVBQUV6bkUsRUFBRTJlLEVBQUVyZCxFQUFFcS9ELEVBQUUsU0FBUzk3RCxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJM0IsS0FBSyxLQUFLeTlELElBQUksT0FBT3IvRCxHQUFHdEIsRUFBRUEsRUFBRSxTQUFTeW5FLEdBQUcsSUFBSTVpRSxFQUFFNGlFLEdBQUdBLEVBQUVuaUQsV0FBVyxXQUFXLE9BQU9taUQsRUFBRTEwRCxTQUFTLFdBQVcsT0FBTzAwRCxHQUFHLE9BQU96bkUsRUFBRTJlLEVBQUU5WixFQUFFLElBQUlBLEdBQUdBLEdBQUc3RSxFQUFFaXBDLEVBQUUsU0FBU3crQixFQUFFNWlFLEdBQUcsT0FBTy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLElBQUk3RSxFQUFFMlUsRUFBRSxXQUFXM1UsRUFBRUEsRUFBRXdoQyxFQUFFLElBQXo1QixDQUE4NUIsQ0FBQyxTQUFTaW1DLEVBQUU1aUUsRUFBRTdFLEdBQUcsY0FBYSxTQUFVeW5FLEVBQUVubUUsRUFBRXEvRCxHQUFHM2dFLEVBQUUyZSxFQUFFOVosRUFBRSxNQUFLLFdBQVksT0FBT21oQixLQUFLaG1CLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBT2srRCxLQUFLL2lFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBT2krRCxLQUFLOWlFLEVBQUUyZSxFQUFFOVosRUFBRSxNQUFLLFdBQVksT0FBTzJyRSxLQUFLeHdFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBTzRyRSxLQUFLendFLEVBQUUyZSxFQUFFOVosRUFBRSxNQUFLLFdBQVksT0FBTzJzRSxLQUFLeHhFLEVBQUUyZSxFQUFFOVosRUFBRSxNQUFLLFdBQVksT0FBT3F1RSxLQUFLbHpFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBT2d1RSxLQUFLN3lFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBT2d4RSxNQUFNNzFFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBT2t4RSxNQUFNLzFFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBT3F4RSxNQUFNbDJFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBT2l4RSxNQUFNOTFFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBT3N4RSxNQUFNbjJFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBT214RSxNQUFNaDJFLEVBQUUyZSxFQUFFOVosRUFBRSxNQUFLLFdBQVksT0FBT3d4RSxNQUFNcjJFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBTyt3RSxNQUFNNTFFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBT3l4RSxNQUFNdDJFLEVBQUUyZSxFQUFFOVosRUFBRSxNQUFLLFdBQVksT0FBTzB4RSxNQUFNdjJFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBT2d5RSxNQUFNNzJFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBT3F5RSxNQUFNbDNFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBT295RSxNQUFNajNFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBTzR5RSxNQUFNejNFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBTyt5RSxNQUFNNTNFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBTzh4RSxNQUFNMzJFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBTzB5RSxNQUFNdjNFLEVBQUUyZSxFQUFFOVosRUFBRSxNQUFLLFdBQVksT0FBT215RSxNQUFNaDNFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBTyt4RSxNQUFNNTJFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBT2k5RSxNQUFNOWhGLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBTzBvRSxNQUFNdnRFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBT3V5RSxNQUFNcDNFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBT3lvRSxNQUFNdHRFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBT2s5RSxNQUFNL2hGLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBTzRvRSxNQUFNenRFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBTzJ5RSxNQUFNeDNFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBTzZ5RSxNQUFNMTNFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBTytvRSxNQUFNNXRFLEVBQUUyZSxFQUFFOVosRUFBRSxNQUFLLFdBQVksT0FBT205RSxNQUFNaGlGLEVBQUUyZSxFQUFFOVosRUFBRSxNQUFLLFdBQVksT0FBT285RSxNQUFNamlGLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBT3l5RSxNQUFNdDNFLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBT3E5RSxNQUFNbGlGLEVBQUUyZSxFQUFFOVosRUFBRSxNQUFLLFdBQVksT0FBT2dyQyxNQUFNN3ZDLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBT3M5RSxNQUFNbmlGLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBT3U5RSxNQUFNcGlGLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBT3c5RSxNQUFNcmlGLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBT3k5RSxNQUFNdGlGLEVBQUUyZSxFQUFFOVosRUFBRSxLQUFJLFdBQVksT0FBTzA5RSxNQUFNdmlGLEVBQUUyZSxFQUFFOVosRUFBRSxNQUFLLFdBQVksT0FBTzZZLE1BQU0xZCxFQUFFMmUsRUFBRTlaLEVBQUUsS0FBSSxXQUFZLE9BQU93cEMsTUFBTXJ1QyxFQUFFMmUsRUFBRTlaLEVBQUUsTUFBSyxXQUFZLE9BQU8yOUUsTUFBTXhpRixFQUFFMmUsRUFBRTlaLEVBQUUsS0FBSSxXQUFZLE9BQU80OUUsTUFBTXppRixFQUFFMmUsRUFBRTlaLEVBQUUsS0FBSSxXQUFZLE9BQU82OUUsTUFBTTFpRixFQUFFMmUsRUFBRTlaLEVBQUUsS0FBSSxXQUFZLE9BQU84OUUsTUFBTTNpRixFQUFFMmUsRUFBRTlaLEVBQUUsS0FBSSxXQUFZLE9BQU8rOUUsTUFBTTVpRixFQUFFMmUsRUFBRTlaLEVBQUUsS0FBSSxXQUFZLE9BQU9nK0UsTUFBTTdpRixFQUFFMmUsRUFBRTlaLEVBQUUsS0FBSSxXQUFZLE9BQU9pK0UsTUFBTTlpRixFQUFFMmUsRUFBRTlaLEVBQUUsTUFBSyxXQUFZLE9BQU9rK0UsTUFBTS9pRixFQUFFMmUsRUFBRTlaLEVBQUUsTUFBSyxXQUFZLE9BQU9tK0UsTUFBTWhqRixFQUFFMmUsRUFBRTlaLEVBQUUsTUFBSyxXQUFZLE9BQU9vK0UsTUFBTWpqRixFQUFFMmUsRUFBRTlaLEVBQUUsTUFBSyxXQUFZLE9BQU9xK0UsTUFBTWxqRixFQUFFMmUsRUFBRTlaLEVBQUUsS0FBSSxXQUFZLE9BQU9zK0UsTUFBTW5qRixFQUFFMmUsRUFBRTlaLEVBQUUsTUFBSyxXQUFZLE9BQU91K0UsTUFBTXBqRixFQUFFMmUsRUFBRTlaLEVBQUUsTUFBSyxXQUFZLE9BQU93K0UsTUFBTXJqRixFQUFFMmUsRUFBRTlaLEVBQUUsS0FBSSxXQUFZLE9BQU95K0UsTUFBTXRqRixFQUFFMmUsRUFBRTlaLEVBQUUsS0FBSSxXQUFZLE9BQU8wK0UsTUFBTXZqRixFQUFFMmUsRUFBRTlaLEVBQUUsS0FBSSxXQUFZLE9BQU8yK0UsTUFBTXhqRixFQUFFMmUsRUFBRTlaLEVBQUUsTUFBSyxXQUFZLE9BQU80K0UsTUFBTXpqRixFQUFFMmUsRUFBRTlaLEVBQUUsTUFBSyxXQUFZLE9BQU82K0UsTUFBTTFqRixFQUFFMmUsRUFBRTlaLEVBQUUsTUFBSyxXQUFZLE9BQU84K0UsTUFBTTNqRixFQUFFMmUsRUFBRTlaLEVBQUUsTUFBSyxXQUFZLE9BQU8rK0UsTUFBTTVqRixFQUFFMmUsRUFBRTlaLEVBQUUsTUFBSyxXQUFZLE9BQU9nL0UsTUFBTTdqRixFQUFFMmUsRUFBRTlaLEVBQUUsTUFBSyxXQUFZLE9BQU9pL0UsTUFBTTlqRixFQUFFMmUsRUFBRTlaLEVBQUUsTUFBSyxXQUFZLE9BQU9rL0UsTUFBTS9qRixFQUFFMmUsRUFBRTlaLEVBQUUsTUFBSyxXQUFZLE9BQU9tL0UsTUFBTWhrRixFQUFFMmUsRUFBRTlaLEVBQUUsS0FBSSxXQUFZLE9BQU9rWSxNQUFNL2MsRUFBRTJlLEVBQUU5WixFQUFFLEtBQUksV0FBWSxPQUFPby9FLE1BQU1qa0YsRUFBRTJlLEVBQUU5WixFQUFFLEtBQUksV0FBWSxPQUFPcS9FLE1BQU1sa0YsRUFBRTJlLEVBQUU5WixFQUFFLE1BQUssV0FBWSxPQUFPcy9FLE1BQU1ua0YsRUFBRTJlLEVBQUU5WixFQUFFLEtBQUksV0FBWSxPQUFPdS9FLE1BQU1wa0YsRUFBRTJlLEVBQUU5WixFQUFFLE1BQUssV0FBWSxPQUFPdy9FLE1BQU1ya0YsRUFBRTJlLEVBQUU5WixFQUFFLE1BQUssV0FBWSxPQUFPeS9FLE1BQU10a0YsRUFBRTJlLEVBQUU5WixFQUFFLE1BQUssV0FBWSxPQUFPMC9FLE1BQU12a0YsRUFBRTJlLEVBQUU5WixFQUFFLE1BQUssV0FBWSxPQUFPMi9FLE1BQU14a0YsRUFBRTJlLEVBQUU5WixFQUFFLE1BQUssV0FBWSxPQUFPNC9FLE1BQU16a0YsRUFBRTJlLEVBQUU5WixFQUFFLE1BQUssV0FBWSxPQUFPNi9FLE1BQU0xa0YsRUFBRTJlLEVBQUU5WixFQUFFLE1BQUssV0FBWSxPQUFPOC9FLE1BQU0sSUFBSXJoRixFQUFFMmxDLEVBQUV6SCxFQUFFc3JDLEVBQUV2cEUsRUFBRVosRUFBRUQsRUFBRTRuQyxFQUFFMzFCLEVBQUVnSyxFQUFFNG9ELEVBQUV0b0UsRUFBRThoRCxFQUFFeG9CLEVBQUVuMEIsRUFBRW93RCxFQUFFcWEsRUFBRXRrQixFQUFFbWtCLEVBQUU2RSxFQUFFdnpFLEVBQUUsSUFBSXl5RSxFQUFFenlFLEVBQUVBLEVBQUV1ekUsR0FBR3JCLEVBQUUsR0FBR2xzRCxFQUFFa3NELEVBQUVwNkQsS0FBSyxTQUFTMnZELEdBQUcsSUFBSTVpRSxFQUFFNGlFLEVBQUVBLEVBQUVsbUUsT0FBTyxFQUFFLEdBQUdzRCxFQUFFLE9BQU80aUUsRUFBRTVpRSxFQUFFLElBQUlrK0QsRUFBRW1QLEVBQUVsekUsUUFBUSxTQUFTeW9FLEdBQUcsWUFBTyxJQUFTQSxHQUFHM0UsRUFBRW9QLEVBQUUwUyxNQUFNLFNBQVNuZCxHQUFHLElBQUk1aUUsRUFBRTR0RSxJQUFJaEwsR0FBRyxRQUFRQSxJQUFJLGFBQWE1aUUsR0FBRyxXQUFXQSxJQUFJbStELEVBQUVrUCxFQUFFdG9FLEtBQUt0RyxFQUFFeEUsT0FBT1csVUFBVXdDLGVBQWUsU0FBU3dsRSxFQUFFNWlFLEdBQUcsT0FBT3ZCLEVBQUUxRCxLQUFLNm5FLEVBQUU1aUUsS0FBS2lxRSxFQUFFb0QsRUFBRW52RSxNQUFNLFNBQVMwa0UsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRW1tRSxFQUFFbG1FLE9BQU9zRCxFQUFFLE1BQU1BLEVBQUUsRUFBRUEsRUFBRSxFQUFFMUUsS0FBS29QLElBQUlqTyxFQUFFdUQsRUFBRSxHQUFHMUUsS0FBS2crRCxJQUFJdDVELEVBQUV2RCxHQUFHdEIsRUFBRSxNQUFNQSxFQUFFc0IsRUFBRXRCLEVBQUUsRUFBRUcsS0FBS29QLElBQUlqTyxFQUFFdEIsRUFBRSxHQUFHRyxLQUFLZytELElBQUluK0QsRUFBRXNCLEdBQUcsSUFBSSxJQUFJcS9ELEVBQUUsR0FBRzk3RCxFQUFFN0UsR0FBRzJnRSxFQUFFcjJELEtBQUttOUQsRUFBRTVpRSxNQUFNLE9BQU84N0QsR0FBR3FTLEVBQUVkLEVBQUVyYixRQUFRLFNBQVM0USxHQUFHLElBQUk1aUUsRUFBRTRpRSxFQUFFbG1FLE9BQU92QixFQUFFUyxNQUFNb0UsR0FBR0EsSUFBSSxJQUFJLElBQUl2RCxFQUFFLEVBQUVBLEdBQUd1RCxFQUFFdkQsSUFBSXRCLEVBQUU2RSxFQUFFdkQsR0FBR21tRSxFQUFFbm1FLEdBQUcsT0FBT3RCLEdBQUc4ekUsRUFBRTVCLEVBQUUyUyxVQUFVLFlBQVksb0JBQW9CcjlFLE9BQU8sWUFBWWlyRSxJQUFJanJFLFVBQVUsWUFBWSxvQkFBb0IyTixTQUFTLFlBQVlzOUQsSUFBSXQ5RCxZQUFZLElBQUlBLFNBQVM0c0IsU0FBU3l1QyxFQUFFMEIsRUFBRS90RSxLQUFLLGFBQWFvdUUsRUFBRUwsRUFBRXByRCxPQUFPLFNBQVMyZ0QsRUFBRTVpRSxHQUFHLElBQUk3RSxFQUFFLE9BQU8sV0FBVyxRQUFReW5FLEVBQUUsSUFBSXpuRSxFQUFFNkUsRUFBRXBCLE1BQU02QixLQUFLOUIsWUFBWWlrRSxHQUFHLElBQUk1aUUsRUFBRSxNQUFNN0UsSUFBSSt5RSxFQUFFYixFQUFFNFMsV0FBVzc3QyxFQUFFLFdBQVd6SCxFQUFFLFlBQVlzckMsRUFBRSxhQUFhLFNBQVNyRixHQUFHLE9BQU9BLEVBQUVBLEVBQUVobEUsUUFBUXdtQyxFQUFFLE9BQU96bkMsY0FBY2lCLFFBQVErK0IsRUFBRSxLQUFLLytCLFFBQVFxcUUsRUFBRSxLQUFLenJFLE1BQU0sT0FBTzJnRSxFQUFFa1EsRUFBRTZTLFVBQVUsU0FBU3RkLEdBQUcsU0FBUzVpRSxFQUFFNGlFLEVBQUU1aUUsR0FBR1MsS0FBS1QsR0FBRzRpRSxFQUFFaGxFLFFBQVEsTUFBSyxTQUFVZ2xFLEdBQUcsT0FBT0EsRUFBRTdrRSxpQkFBaUIsT0FBTyxTQUFTNmtFLEdBQUcsSUFBSXpuRSxFQUFFK3lFLEVBQUV0TCxHQUFHbm1FLEVBQUV0QixFQUFFLEdBQUcsT0FBT0EsRUFBRWdZLFFBQVFoWSxFQUFFbU4sUUFBUXRJLEVBQUU3RSxHQUFHc0IsRUFBR3RCLEVBQUV3MUIsS0FBSyxLQUF6SyxHQUFpTGk3QyxFQUFFeUIsRUFBRThTLFVBQVUsU0FBU3ZkLEdBQUcsT0FBT3NMLEVBQUV0TCxHQUFHanlDLEtBQUssTUFBTW05QyxFQUFFVCxFQUFFK1MsTUFBTSxTQUFTeGQsRUFBRTVpRSxFQUFFN0UsR0FBRyxPQUFPK2lFLEVBQUUvaUUsS0FBS0EsRUFBRTZFLEVBQUVBLE9BQUUsSUFBU2srRCxFQUFFbCtELElBQUk0aUUsRUFBRTVpRSxFQUFFQSxFQUFFNGlFLEVBQUV6bkUsRUFBRUEsRUFBRXluRSxHQUFHbUwsRUFBRVYsRUFBRWdULE1BQU0sU0FBU3pkLEVBQUU1aUUsRUFBRTdFLEdBQUcsT0FBT1MsTUFBTWhCLFVBQVVzQyxRQUFRbkMsS0FBSzZuRSxFQUFFNWlFLEVBQUU3RSxJQUFJa3VFLEVBQUVnRSxFQUFFL3dFLE9BQU8sU0FBU3NtRSxHQUFHQSxFQUFFLFNBQVNBLEdBQUcsSUFBSTNFLEVBQUUyRSxHQUFHLE1BQU0sR0FBRyxHQUFHNWlFLEVBQUUsT0FBT0EsRUFBRTRpRSxHQUFHLFNBQVN6bkUsS0FBSyxPQUFPQSxFQUFFUCxVQUFVZ29FLEVBQUUsSUFBSXpuRSxHQUFHLElBQUk2RSxFQUFFL0YsT0FBT3FDLE9BQU8sT0FBT3NtRSxFQUFsSSxDQUFxSSxJQUFJcEYsRUFBRTZQLEVBQUVpVCxTQUFTLFNBQVMxZCxFQUFFNWlFLEdBQUc0aUUsRUFBRWhvRSxVQUFVeXVFLEVBQUVycEUsRUFBRXBGLFlBQVkreEUsRUFBRVUsRUFBRWtULE1BQU0sU0FBUzNkLEdBQUcsT0FBTyxNQUFNQSxFQUFFLEdBQUdBLEVBQUUvbkUsWUFBWXV5RSxFQUFFQyxFQUFFbVQsU0FBUyxTQUFTNWQsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRSxPQUFPLFdBQVcsSUFBSXEvRCxFQUFFcjdELEtBQUtoQyxFQUFFRSxVQUFVeWxDLEVBQUUsV0FBVzNuQyxFQUFFLEtBQUttbUUsRUFBRWhrRSxNQUFNazlELEVBQUVyOUQsSUFBSXRELEdBQUdnakIsYUFBYTFoQixHQUFHdEIsR0FBR3NCLElBQUlBLEVBQUV1VCxXQUFXbzBCLEVBQUVwa0MsTUFBTTJpRSxFQUFFMEssRUFBRW9ULEtBQUssQ0FBQ3g3QixPQUFPLFNBQVMyZCxHQUFHLE9BQU92bkUsT0FBT3FsRixjQUFjOWhGLE1BQU12RCxPQUFPdW5FLElBQUl6ZCxPQUFPLFNBQVN5ZCxHQUFHLElBQUksSUFBSTVpRSxFQUFFLEdBQUc3RSxFQUFFLEVBQUVzQixFQUFFbW1FLEVBQUVsbUUsT0FBT3ZCLEVBQUVzQixHQUFHLENBQUMsSUFBSXEvRCxFQUFFOEcsRUFBRTVnRSxXQUFXN0csS0FBSyxHQUFHMmdFLEdBQUcsT0FBT0EsR0FBRyxPQUFPM2dFLEVBQUVzQixFQUFFLENBQUMsSUFBSWdDLEVBQUVta0UsRUFBRTVnRSxXQUFXN0csS0FBSyxRQUFRLE1BQU1zRCxHQUFHdUIsRUFBRXlGLE9BQU8sS0FBS3EyRCxJQUFJLEtBQUssS0FBS3I5RCxHQUFHLFFBQVF1QixFQUFFeUYsS0FBS3EyRCxHQUFHM2dFLFVBQVU2RSxFQUFFeUYsS0FBS3EyRCxHQUFHLE9BQU85N0QsSUFBSTZ0RSxFQUFFUixFQUFFc1QsS0FBSyxTQUFTL2QsR0FBR0EsRUFBRSxDQUFDM2QsT0FBTyxTQUFTMmQsR0FBRyxJQUFJLElBQUk1aUUsRUFBRTJpRSxFQUFFeGQsT0FBT3lkLEdBQUd6bkUsRUFBRSxHQUFHc0IsRUFBRSxFQUFFcS9ELEVBQUU5N0QsRUFBRXRELE9BQU9ELEVBQUVxL0QsRUFBRXIvRCxJQUFJdEIsR0FBRzJDLEVBQUVrQyxFQUFFdkQsSUFBSSxPQUFPdEIsR0FBR2dxRCxPQUFPLFNBQVN5ZCxFQUFFbGtFLEdBQUdzQixFQUFFMmlFLEVBQUV4ZCxPQUFPeWQsR0FBR3puRSxFQUFFLEVBQUVzQixFQUFFdUQsRUFBRXRELE9BQU9vL0QsRUFBRSxFQUFFcjlELEVBQUUsRUFBRTJsQyxFQUFFLEVBQUV6SCxFQUFFLElBQUlzckMsRUFBRSxJQUFJLElBQUksSUFBSW5xRSxFQUFFMm5DLEVBQUUsSUFBRyxLQUFNM25DLEVBQUVELEVBQUVhLEtBQUsrbUMsRUFBRWhnQyxLQUFLM0gsR0FBRyxPQUFPNmtFLEVBQUUxZCxPQUFPeGYsS0FBSyxJQUFJemxDLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxFQUFFcjlELEVBQUUybEMsRUFBRXpILEVBQUVzckMsRUFBRXZwRSxFQUFFckQsT0FBT3k0RSxhQUFhLFNBQVNoMkUsRUFBRThrRSxHQUFHLEdBQUcsSUFBSSxXQUFXQSxHQUFHLE9BQU9sa0UsRUFBRWtrRSxHQUFHLElBQUk1aUUsRUFBRTdFLEVBQUVzQixFQUFFLEdBQUcsSUFBSSxJQUFJLFdBQVdtbUUsSUFBSTVpRSxFQUFFLEVBQUU3RSxFQUFFLEtBQUssSUFBSSxXQUFXeW5FLElBQUk1aUUsRUFBRSxFQUFFN0UsRUFBRSxLQUFLLElBQUksV0FBV3luRSxLQUFLNWlFLEVBQUUsRUFBRTdFLEVBQUUsS0FBS3NCLEdBQUdpQyxHQUFHa2tFLEdBQUcsRUFBRTVpRSxHQUFHN0UsR0FBRzZFLEVBQUUsR0FBSXZELEdBQUdpQyxFQUFFLElBQUksR0FBR2trRSxHQUFHLEdBQUc1aUUsRUFBRSxJQUFJQSxJQUFJLE9BQU92RCxFQUFFLFNBQVNvQixFQUFFK2tFLEdBQUcsT0FBTyxDQUFDLEdBQUd6bkUsR0FBR3NCLEdBQUcybkMsRUFBRSxDQUFDLEdBQUd3K0IsRUFBRSxPQUFPbjlCLElBQUksTUFBTSxJQUFJeXJCLE1BQU0sc0JBQXNCLEdBQUcvMUQsSUFBSXNCLEVBQUUsT0FBTSxFQUFHLElBQUlpQyxFQUFFc0IsRUFBRTdFLEdBQUcsR0FBR0EsSUFBSWlwQyxFQUFFLENBQUMsR0FBRzFsQyxFQUFFaStCLEdBQUdqK0IsRUFBRXVwRSxFQUFFLENBQUMsR0FBR3JGLEVBQUUsT0FBT3puRSxJQUFJc3FDLElBQUksTUFBTSxJQUFJeXJCLE1BQU0sNkJBQTZCLEdBQUd2MEIsRUFBRSxJQUFJc3JDLEVBQUUsSUFBSW5NLEVBQUVBLEdBQUcsRUFBRSxHQUFHcDlELElBQUlELElBQUkybEMsRUFBRSxDQUFDLElBQUl0bUMsRUFBRWcrRCxFQUFFLE9BQU9BLEVBQUUsRUFBRTEzQixFQUFFLEVBQUUzbEMsRUFBRSxFQUFFWCxPQUFPLENBQUMsR0FBRyxJQUFJLElBQUlZLEdBQUcsT0FBT0EsRUFBRSxHQUFHLE1BQU0sSUFBSUEsR0FBRzBsQyxFQUFFLEVBQUUwM0IsRUFBRSxHQUFHcDlELE9BQU8sR0FBRyxNQUFNLElBQUlBLEdBQUcsTUFBTUEsSUFBSWkrQixFQUFFLEtBQUssTUFBTWorQixJQUFJdXBFLEVBQUUsS0FBSzdqQyxFQUFFLEVBQUUwM0IsRUFBRSxHQUFHcDlELE1BQU0sQ0FBQyxHQUFHLE1BQU0sSUFBSUEsR0FBRyxDQUFDLEdBQUdra0UsRUFBRSxPQUFPbjlCLElBQUksTUFBTSxJQUFJeXJCLE1BQU0sMEJBQTBCLE1BQU14eUQsSUFBSWkrQixFQUFFLEtBQUssTUFBTWorQixJQUFJdXBFLEVBQUUsS0FBSzdqQyxFQUFFLEVBQUUwM0IsRUFBRSxFQUFFcDlELEtBQUssU0FBUyttQyxJQUFJLElBQUltOUIsRUFBRXpuRSxFQUFFc0QsRUFBRSxFQUFFLE9BQU90RCxFQUFFeW5FLEVBQUUsRUFBRTlHLEVBQUUsRUFBRTEzQixFQUFFLEVBQUUzbEMsRUFBRSxFQUFFaytCLEVBQUUsSUFBSXNyQyxFQUFFLElBQUlqb0UsRUFBRTRpRSxHQUFHLE9BQU9BLEVBQWxrQyxDQUFxa0MsSUFBSXFMLEVBQUVaLEVBQUUxZ0MsS0FBS3NpQyxFQUFFdHNFLE9BQU9pZ0UsRUFBRXdMLEVBQUVmLEVBQUV1VCxZQUFZLFNBQVNoZSxHQUFHQSxFQUFFLFdBQVcsSUFBSSxJQUFJQSxFQUFFLEVBQUV6bkUsRUFBRTZFLEVBQUV0RCxPQUFPa21FLEVBQUV6bkUsRUFBRXluRSxJQUFJLENBQUMsSUFBSW5tRSxFQUFFdUQsRUFBRTRpRSxHQUFHLEdBQUcsbUJBQW1CcUwsRUFBRXh4RSxHQUFHLE9BQU0sRUFBRyxPQUFNLEdBQUksSUFBSXVELEVBQUUsQ0FBQyxZQUFZLFFBQVEsYUFBYSxTQUFTLFdBQVcsTUFBTSxPQUFPNGlFLEVBQTNMLENBQThMLElBQUl5TCxFQUFFaEIsRUFBRWp0RSxLQUFLbkcsT0FBT21HLE9BQU9ndUUsSUFBSW4wRSxPQUFPbUcsS0FBSyxTQUFTd2lFLEdBQUcsSUFBSTVpRSxFQUFFLEdBQUcsSUFBSSxJQUFJN0UsS0FBS3luRSxFQUFFekUsRUFBRXlFLEVBQUV6bkUsSUFBSTZFLEVBQUV5RixLQUFLdEssR0FBRyxPQUFPNkUsR0FBRzJ0RSxFQUFFTixFQUFFbnpFLE9BQU8sU0FBUzBvRSxHQUFHLE9BQU8zb0UsT0FBT0MsT0FBT0QsT0FBT0MsT0FBTzBvRSxJQUFJeUwsRUFBRXpMLEdBQUd0NkQsU0FBUSxTQUFVdEksR0FBRy9GLE9BQU9tUSx5QkFBeUJ3NEQsRUFBRTVpRSxHQUFHcUMsY0FBY3BJLE9BQU9rSSxlQUFleWdFLEVBQUU1aUUsRUFBRSxDQUFDb0MsVUFBUyxFQUFHQyxjQUFhLE9BQVF1Z0UsSUFBSW9MLEVBQUVYLEVBQUV3VCxTQUFTLFNBQVNqZSxHQUFHLEdBQUdBLEdBQUdBLEVBQUVBLElBQUlxTSxFQUFFaHNFLFVBQVVDLFVBQVUsS0FBS3ZHLGNBQWNxRCxFQUFFLGlCQUFpQixNQUFNLGdCQUFnQixHQUFHQSxFQUFFLE9BQU8sTUFBTSxVQUFVLEdBQUdBLEVBQUUsV0FBVyxNQUFNLFVBQVUsR0FBR0EsRUFBRSxTQUFTQSxFQUFFLFdBQVdBLEVBQUUsUUFBUSxNQUFNLE1BQU0sR0FBR0EsRUFBRSxPQUFPLE1BQU0sT0FBTyxHQUFHQSxFQUFFLFNBQVMsTUFBTSxRQUFRLFNBQVNBLEVBQUVBLEdBQUcsT0FBTzRpRSxFQUFFMWxFLFFBQVE4QyxJQUFJLEVBQUUsTUFBTSxXQUFXb3BFLEVBQUVpRSxFQUFFeVQsU0FBUyxTQUFTbGUsRUFBRTVpRSxHQUFHLE9BQU9BLEVBQUUsTUFBTUEsRUFBRTRpRSxFQUFFbG1FLE9BQU8sR0FBR3NELEVBQUUsV0FBVyxJQUFJN0UsRUFBRXNCLEVBQUVuQixLQUFLb1AsSUFBSS9MLFVBQVVqQyxPQUFPc0QsRUFBRSxHQUFHODdELEVBQUUsSUFBSWxnRSxNQUFNYSxHQUFHLElBQUl0QixFQUFFLEVBQUVBLEVBQUVzQixFQUFFdEIsSUFBSTJnRSxFQUFFM2dFLEdBQUd3RCxVQUFVeEQsRUFBRTZFLEdBQUcsT0FBT0EsR0FBRyxLQUFLLEVBQUUsT0FBTzRpRSxFQUFFN25FLEtBQUswRixLQUFLcTdELEdBQUcsS0FBSyxFQUFFLE9BQU84RyxFQUFFN25FLEtBQUswRixLQUFLOUIsVUFBVSxHQUFHbTlELEdBQUcsS0FBSyxFQUFFLE9BQU84RyxFQUFFN25FLEtBQUswRixLQUFLOUIsVUFBVSxHQUFHQSxVQUFVLEdBQUdtOUQsR0FBRyxJQUFJcjlELEVBQUUsSUFBSTdDLE1BQU1vRSxFQUFFLEdBQUcsSUFBSTdFLEVBQUUsRUFBRUEsRUFBRTZFLEVBQUU3RSxJQUFJc0QsRUFBRXRELEdBQUd3RCxVQUFVeEQsR0FBRyxPQUFPc0QsRUFBRXVCLEdBQUc4N0QsRUFBRThHLEVBQUVoa0UsTUFBTTZCLEtBQUtoQyxLQUFLeXdFLEVBQUU3QixFQUFFMFQsV0FBVyxTQUFTbmUsRUFBRTVpRSxFQUFFN0UsR0FBRyxHQUFHK2lFLEVBQUVsK0QsR0FBRyxPQUFPNGlFLEVBQUUsT0FBTyxNQUFNem5FLEVBQUUsRUFBRUEsR0FBRyxLQUFLLEVBQUUsT0FBTyxTQUFTQSxHQUFHLE9BQU95bkUsRUFBRTduRSxLQUFLaUYsRUFBRTdFLElBQUksS0FBSyxFQUFFLE9BQU8sU0FBU0EsRUFBRXNCLEVBQUVxL0QsR0FBRyxPQUFPOEcsRUFBRTduRSxLQUFLaUYsRUFBRTdFLEVBQUVzQixFQUFFcS9ELElBQUksS0FBSyxFQUFFLE9BQU8sU0FBUzNnRSxFQUFFc0IsRUFBRXEvRCxFQUFFcjlELEdBQUcsT0FBT21rRSxFQUFFN25FLEtBQUtpRixFQUFFN0UsRUFBRXNCLEVBQUVxL0QsRUFBRXI5RCxJQUFJLE9BQU8sV0FBVyxPQUFPbWtFLEVBQUVoa0UsTUFBTW9CLEVBQUVyQixhQUFhcXlFLElBQUkzRCxFQUFFMlQsTUFBTSxHQUFHM1QsRUFBRTRULFFBQVEsU0FBU3JlLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXluRSxFQUFFbG1FLE9BQU9zRCxFQUFFdEQsT0FBTyxPQUFPdkIsR0FBRyxHQUFHeW5FLEVBQUUxbEUsUUFBUThDLEVBQUU3RSxLQUFLQSxJQUFJKzFFLEdBQUc3RCxFQUFFNlQsT0FBTyxTQUFTdGUsR0FBRyxJQUFJNWlFLEdBQUc0aUUsRUFBRSxTQUFTQSxHQUFHLE9BQU9ubUUsRUFBRTJHLEtBQUt3L0QsR0FBR0EsRUFBRWhsRSxRQUFRaytELEVBQUVyOUQsR0FBR21rRSxJQUFJdm1FLElBQUksQ0FBQyxJQUFJLFFBQVEsSUFBSSxPQUFPLElBQUksT0FBTyxJQUFJLFNBQVMsSUFBSSxTQUFTLElBQUksVUFBVWxCLEVBQUUsTUFBTWt6RSxFQUFFcnVFLEdBQUcyd0IsS0FBSyxLQUFLLElBQUlsMEIsRUFBRSxJQUFJOEYsT0FBT3BILEdBQUcyZ0UsRUFBRSxJQUFJdjVELE9BQU9wSCxFQUFFLEtBQUtzRCxFQUFFLFNBQVNta0UsR0FBRyxPQUFPNWlFLEVBQUU0aUUsSUFBSSxPQUFPQSxFQUFyUCxDQUF3UCxJQUFJaU8sR0FBR3hELEVBQUU4VCxZQUFZLFNBQVN2ZSxHQUFHQSxFQUFFLFNBQVNBLEdBQUcsT0FBTytKLEVBQUUvSixHQUFHaGxFLFFBQVFvQyxHQUFFLFNBQVU0aUUsR0FBRyxPQUFPQSxHQUFHLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxLQUFLLE1BQU0sS0FBS0EsRUFBRSxJQUFJLEtBQUssTUFBTSxNQUFNLElBQUksS0FBSyxNQUFNLE1BQU0sSUFBSSxTQUFTLE1BQU0sVUFBVSxJQUFJLFNBQVMsTUFBTSxlQUFlLElBQUk1aUUsRUFBRSwwQkFBMEIsT0FBTzRpRSxFQUE3UCxDQUFnUSxJQUFJeU8sR0FBR2hFLEVBQUUrVCxjQUFjLFNBQVN4ZSxHQUFHLE9BQU9pTyxHQUFHak8sR0FBR2hsRSxRQUFRLE9BQU8sS0FBS0EsUUFBUSxNQUFNLFFBQVFxekUsR0FBRzVELEVBQUVnVSxhQUFhLFNBQVN6ZSxHQUFHLE9BQU9BLEVBQUVobEUsUUFBUSxNQUFNLFNBQVMwekUsR0FBR2pFLEVBQUVpVSxTQUFTLFNBQVMxZSxHQUFHQSxFQUFFLFNBQVNBLEdBQUcsR0FBR0EsR0FBRyxFQUFFLE1BQU0sSUFBSSxJQUFJem5FLEVBQUVHLEtBQUtDLE1BQU1ELEtBQUtpbUYsSUFBSTNlLEdBQUd0bkUsS0FBS2ltRixJQUFJLE9BQU8sUUFBUTNlLEVBQUV0bkUsS0FBS2ttRixJQUFJLEVBQUUsR0FBR3JtRixJQUFJa3pELFFBQVEsR0FBR3J1RCxFQUFFN0UsSUFBSSxJQUFJNkUsRUFBRSxDQUFDLEdBQUcsSUFBSSxJQUFJLElBQUksS0FBSyxPQUFPNGlFLEVBQXhLLENBQTJLLElBQUl1TyxHQUFHOUQsRUFBRW9VLFNBQVMvaUYsRUFBRTRSLFNBQVN5SixjQUFjLEtBQUssU0FBUzZvRCxHQUFHLE9BQU9sa0UsRUFBRWk5QyxLQUFLaW5CLEVBQUVsa0UsRUFBRWt3RCxTQUFTLEtBQUtsd0QsRUFBRW13RCxLQUFLbndELEVBQUU2MUQsU0FBUzcxRCxFQUFFODFELE9BQU85MUQsRUFBRWdVLE9BQU84K0QsR0FBR25FLEVBQUVxVSxXQUFXLFNBQVM5ZSxHQUFHLE9BQU9BLEVBQUVsbUUsT0FBTyxFQUFFa21FLEVBQUVBLEVBQUUsR0FBRzdrRSxjQUFjNmtFLEVBQUUxa0UsTUFBTSxJQUFJNnlFLEdBQUcxRCxFQUFFc1UsV0FBVyxTQUFTL2UsR0FBRyxPQUFPQSxFQUFFajhDLGFBQWFpOEMsRUFBRWo4QyxZQUFZdlYsS0FBS3d4RCxFQUFFajhDLFlBQVl2VixLQUFLb2dFLEdBQUcsR0FBRzMyRSxTQUFTRSxLQUFLNm5FLEdBQUdobEUsUUFBUSxpQkFBaUIsTUFBTWt6RSxHQUFHekQsRUFBRTV0RSxTQUFTLFNBQVNtakUsR0FBRyxPQUFPQSxHQUFHd08sR0FBRy9ELEVBQUV1VSxVQUFVOWpGLEVBQUU3RCxPQUFPVyxVQUFVQyxTQUFTLFNBQVMrbkUsR0FBRyxPQUFPOWtFLEVBQUUvQyxLQUFLNm5FLEtBQUt2cUQsR0FBR2cxRCxFQUFFd1UsT0FBTyxTQUFTamYsR0FBRyxNQUFNLHVCQUF1QndPLEdBQUd4TyxJQUFJNk8sR0FBR3BFLEVBQUV5VSxNQUFNbG1GLE1BQU1DLFNBQVMsU0FBUyttRSxHQUFHLE1BQU0sbUJBQW1Cd08sR0FBR3hPLElBQUkrTyxHQUFHdEUsRUFBRTBVLFNBQVMsU0FBU25mLEdBQUdBLEVBQUUsU0FBU0EsRUFBRW5tRSxHQUFHLEdBQUdnMUUsR0FBRzdPLEdBQUcsT0FBT0EsRUFBRSxHQUFHbm1FLEdBQUcwaEUsRUFBRTFoRSxFQUFFbW1FLEdBQUcsTUFBTSxDQUFDQSxHQUFHLElBQUk5RyxFQUFFLEdBQUcsT0FBTzhHLEVBQUVobEUsUUFBUW9DLEdBQUUsU0FBVTRpRSxFQUFFNWlFLEVBQUV2RCxFQUFFZ0MsR0FBR3E5RCxFQUFFcjJELEtBQUtoSixFQUFFZ0MsRUFBRWIsUUFBUXpDLEVBQUUsTUFBTTZFLEdBQUc0aUUsTUFBTTlHLEdBQUcsSUFBSTk3RCxFQUFFLG1HQUFtRzdFLEVBQUUsV0FBVyxPQUFPeW5FLEVBQXhSLENBQTJSLElBQUk4TyxHQUFHckUsRUFBRTJVLFFBQVEsU0FBU3BmLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRSxJQUFJQSxHQUFHNkUsRUFBRTJ4RSxHQUFHM3hFLEVBQUU0aUUsSUFBSXp2RCxTQUFTK3FELEVBQUUvaUUsSUFBSSxDQUFDLEdBQUcsT0FBT3luRSxFQUFFQSxFQUFFem5FLElBQUksT0FBT0EsRUFBRTZFLEVBQUVtVCxRQUFRLE9BQU95dkQsR0FBRzJPLEdBQUdsRSxFQUFFbGMsUUFBUSxTQUFTeVIsR0FBRyxPQUFPLFNBQVNBLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSSxJQUFJc0IsRUFBRXEvRCxFQUFFOTdELEVBQUV0RCxPQUFPK0IsR0FBRyxFQUFFcTlELEtBQUtyL0QsRUFBRXVELElBQUl2QixHQUFHZ3pFLEdBQUdoMUUsR0FBR21tRSxFQUFFbm1FLEVBQUV0QixHQUFHQSxFQUFFc0ssS0FBS2hKLEdBQUcsT0FBT3RCLEVBQXRGLENBQXlGeW5FLEVBQUUsS0FBS2dQLEdBQUd2RSxFQUFFNFUsT0FBTyxTQUFTcmYsR0FBRyxNQUFNLGtCQUFrQndPLEdBQUd4TyxJQUFJb1AsR0FBRzNFLEVBQUU2VSxLQUFLLFNBQVN0ZixHQUFHLElBQUk1aUUsRUFBRW94RSxHQUFHeE8sR0FBRyxNQUFNLHNCQUFzQjVpRSxHQUFHLCtCQUErQkEsR0FBRywyQkFBMkJBLEdBQUdzeUUsR0FBR2pGLEVBQUU4VSxVQUFVdGtGLEVBQUU1RCxPQUFPaWlGLGVBQWV6MkMsRUFBRSxHQUFHOWUsWUFBWSxTQUFTaThDLEdBQUcsR0FBRzNFLEVBQUUyRSxHQUFHLENBQUMsR0FBRy9rRSxFQUFFLE9BQU9BLEVBQUUra0UsR0FBRyxJQUFJNWlFLEVBQUU0aUUsRUFBRXA1RCxVQUFVLE9BQU94SixHQUFHLE9BQU9BLEVBQUVBLEVBQUVneUUsR0FBR3BQLEVBQUVqOEMsYUFBYWk4QyxFQUFFajhDLFlBQVkvckIsVUFBVWdvRSxhQUFhbjlCLEVBQUVBLEVBQUU3cUMsZUFBVSxLQUFVcTNFLEdBQUc1RSxFQUFFK1UsY0FBYyxvQkFBb0JDLElBQUlyUSxHQUFHcVEsR0FBR0MsY0FBY2pRLEdBQUdoRixFQUFFa1YsTUFBTSxTQUFTM2YsR0FBRyxNQUFNLG9CQUFvQndPLEdBQUd4TyxJQUFJaVAsR0FBR3hFLEVBQUVtVixXQUFXMXlFLEVBQUV4VSxLQUFLa21GLElBQUksRUFBRSxJQUFJLEVBQUUsU0FBUzVlLEdBQUcsSUFBSUEsRUFBRSxPQUFNLEVBQUcsSUFBSTVpRSxFQUFFNGlFLEVBQUVsbUUsT0FBTyxPQUFPMjFFLEdBQUdyeUUsSUFBSUEsR0FBRyxHQUFHQSxHQUFHOFAsSUFBSWtpRSxHQUFHcFAsS0FBS3dQLEdBQUcvRSxFQUFFN1IsS0FBSyxTQUFTb0gsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXEvRCxFQUFFLEdBQUc5N0QsRUFBRWt2RSxFQUFFbHZFLEVBQUU3RSxHQUFHMDJFLEdBQUdqUCxHQUFHLElBQUlubUUsRUFBRSxFQUFFcS9ELEVBQUU4RyxFQUFFbG1FLE9BQU9ELEVBQUVxL0QsRUFBRXIvRCxJQUFJdUQsRUFBRTRpRSxFQUFFbm1FLEdBQUdBLEVBQUVtbUUsT0FBTyxDQUFDLElBQUlua0UsRUFBRTR2RSxFQUFFekwsR0FBRyxJQUFJbm1FLEVBQUUsRUFBRXEvRCxFQUFFcjlELEVBQUUvQixPQUFPRCxFQUFFcS9ELEVBQUVyL0QsSUFBSXVELEVBQUU0aUUsRUFBRW5rRSxFQUFFaEMsSUFBSWdDLEVBQUVoQyxHQUFHbW1FLEdBQUcsT0FBT0EsR0FBR3NQLEdBQUc3RSxFQUFFb1YsZUFBZSxTQUFTN2YsRUFBRTVpRSxHQUFHLE9BQU8sU0FBUzdFLEdBQUcsT0FBT2kzRSxHQUFHenpFLFdBQVUsU0FBVWxDLEVBQUVxL0QsR0FBRyxHQUFHLElBQUlBLEVBQUUsQ0FBQyxJQUFJcjlELEVBQUVta0UsRUFBRW5tRSxHQUFHMjFFLEdBQUczekUsR0FBRSxTQUFVbWtFLEdBQUc1aUUsSUFBSWsrRCxFQUFFL2lFLEVBQUV5bkUsTUFBTXpuRSxFQUFFeW5FLEdBQUdubUUsRUFBRW1tRSxXQUFXem5FLElBQUk2M0UsR0FBRzNGLEVBQUVxVixVQUFVeFEsR0FBRzdELEdBQUd4RixHQUFHd0UsRUFBRXgxRCxPQUFPLFNBQVMrcUQsR0FBRyxJQUFJNWlFLEVBQUUsR0FBRyxPQUFPb3lFLEdBQUd4UCxHQUFFLFNBQVVBLEdBQUc1aUUsRUFBRXlGLEtBQUttOUQsTUFBTTVpRSxHQUFHNHlFLEdBQUd2RixFQUFFc1YsTUFBTSxTQUFTL2YsR0FBRyxNQUFNLG9CQUFvQndPLEdBQUd4TyxJQUFJbVEsR0FBRzFGLEVBQUV1VixRQUFRLFNBQVNoZ0IsRUFBRTVpRSxHQUFHLE9BQU80eUUsR0FBR2hRLEdBQUdBLEVBQUUxbEUsUUFBUThDLElBQUksR0FBRzZ4RSxHQUFHalAsS0FBS0EsRUFBRWlHLEdBQUdqRyxJQUFJbUwsRUFBRW5MLEVBQUU1aUUsSUFBSSxJQUFJOHhFLEdBQUd6RSxFQUFFd1YsUUFBUSxTQUFTamdCLEdBQUcsT0FBTyxNQUFNQSxJQUFJaVAsR0FBR2pQLEtBQUs2TyxHQUFHN08sSUFBSWdRLEdBQUdoUSxJQUFJdnFELEdBQUd1cUQsSUFBSSxJQUFJQSxFQUFFbG1FLE9BQU8sSUFBSTJ4RSxFQUFFekwsR0FBR2xtRSxTQUFTZzJFLEdBQUdyRixFQUFFeVYsT0FBTyxTQUFTbGdCLEdBQUcsT0FBTSxJQUFLQSxJQUFHLElBQUtBLEdBQUd1UCxHQUFHOUUsRUFBRTBWLFVBQVUsU0FBU25nQixFQUFFNWlFLEdBQUcsT0FBTyxJQUFJNGlFLEVBQUUxbEUsUUFBUThDLElBQUkreEUsR0FBRzFFLEVBQUUyVixhQUFhbHBFLEVBQUVuWCxPQUFPbWpELFNBQVNtOUIsT0FBTyxTQUFTcmdCLEdBQUcsT0FBT3VQLEdBQUd2UCxFQUFFOW9ELEtBQUttakUsR0FBRzVQLEVBQUU2VixLQUFLLFNBQVN0Z0IsR0FBRyxTQUFTQSxHQUFHLElBQUlBLEVBQUUxbEMsV0FBV3dyQyxHQUFHMkUsRUFBRThWLE1BQU0sU0FBU3ZnQixHQUFHLE1BQU0sbUJBQW1Cd08sR0FBR3hPLElBQUkyUCxHQUFHbEYsRUFBRStWLFNBQVMsU0FBU3hnQixHQUFHLElBQUk1aUUsRUFBRWl1RSxFQUFFbHlDLGlCQUFpQjVnQyxFQUFFOHlFLEVBQUUzOUQsU0FBUyxTQUFTN1QsRUFBRW1tRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFbHVDLE1BQU0xMEIsRUFBRThtQyxNQUFNODdCLEVBQUU5N0IsS0FBSzltQyxFQUFFMDBCLE9BQU9rdUMsRUFBRXlnQixPQUFPcmpGLEVBQUVnbkMsS0FBSzQ3QixFQUFFNTdCLElBQUlobkMsRUFBRXFqRixPQUFPLE9BQU8sU0FBU3pnQixHQUFHLElBQUk5RyxFQUFFbjlELFVBQVVqQyxPQUFPLFFBQUcsSUFBU2lDLFVBQVUsR0FBR0EsVUFBVSxHQUFHLEdBQUdGLEVBQUVxOUQsRUFBRTcyQixRQUFRYixPQUFFLElBQVMzbEMsR0FBR0EsRUFBRWsrQixFQUFFbS9CLEVBQUV3bkIsV0FBV3JiLE9BQUUsSUFBU3RyQyxHQUFHQSxFQUFFaitCLEVBQUVvOUQsRUFBRXluQixRQUFRemxGLE9BQUUsSUFBU1ksR0FBR0EsRUFBRWIsRUFBRWkrRCxFQUFFNEQsS0FBS2o2QixPQUFFLElBQVM1bkMsR0FBR0EsRUFBRWlTLEVBQUVnc0QsRUFBRTBuQixTQUFTMXBFLE9BQUUsSUFBU2hLLEdBQUdBLEVBQUU0eUQsRUFBRTVHLEVBQUUybkIsU0FBU3JwRixPQUFFLElBQVNzb0UsR0FBR0EsRUFBRSxHQUFHdCtCLEVBQUUsT0FBTyxPQUFPdytCLEVBQUU4Z0IsYUFBYSxJQUFJeG5DLEVBQUVsOEMsRUFBRTRpRSxHQUFHLEdBQUdxRixHQUFHLFdBQVcvckIsRUFBRW9uQyxXQUFXLE9BQU0sRUFBRyxHQUFHeGxGLEVBQUUsQ0FBQyxHQUFHLE1BQU1vK0MsRUFBRXFuQyxRQUFRLE9BQU0sRUFBRyxJQUFJLElBQUk3dkQsRUFBRWt2QyxFQUFFbHZDLEVBQUVBLEVBQUVpd0QsZUFBZSxDQUFDLElBQUlwa0YsRUFBRVMsRUFBRTB6QixHQUFHLEdBQUcsTUFBTW4wQixFQUFFZ2tGLFFBQVEsT0FBTSxHQUFJLElBQUk1ekIsRUFBRWlULEVBQUVuOEIsd0JBQXdCLEdBQUdoQixJQUFJLElBQUlrcUIsRUFBRTBRLE9BQU8sSUFBSTFRLEVBQUUyUSxRQUFRLE9BQU0sRUFBRyxHQUFHeG1ELEVBQUUsQ0FBQyxJQUFJa3dELEVBQUUsQ0FBQ2hqQyxJQUFJLEVBQUVGLEtBQUssRUFBRXBTLE1BQU12NUIsRUFBRTJnRCxnQkFBZ0I4bkMsWUFBWVAsT0FBT2xvRixFQUFFMmdELGdCQUFnQituQyxjQUFjLE9BQU9wbkYsRUFBRWt6RCxFQUFFcWEsR0FBRyxHQUFHNXZFLEVBQUUsSUFBSSxJQUFJc3JELEVBQUVrZCxFQUFFbGQsRUFBRUEsRUFBRWkrQixlQUFlLENBQUMsSUFBSTlaLEVBQUU3cEUsRUFBRTBsRCxHQUFHZ3BCLEVBQUU3RSxFQUFFNFosU0FBUyxHQUFHLFdBQVcvVSxHQUFHLFdBQVdBLEVBQUUsQ0FBQyxJQUFJZCxFQUFFbG9CLEVBQUVqZix3QkFBd0IsR0FBR2hxQyxFQUFFa3pELEVBQUVpZSxHQUFHLE9BQU0sR0FBSSxPQUFNLEdBQXY1QixHQUE4NUJyRixHQUFHOEUsRUFBRXlXLFFBQVEsU0FBU2xoQixFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUVrekUsRUFBRXJ1RSxHQUFHdkQsRUFBRXRCLEVBQUV1QixPQUFPLEdBQUcsTUFBTWttRSxFQUFFLE9BQU9ubUUsRUFBRW1tRSxFQUFFM29FLE9BQU8yb0UsR0FBRyxJQUFJLElBQUk5RyxFQUFFLEVBQUVBLEVBQUVyL0QsRUFBRXEvRCxJQUFJLENBQUMsSUFBSXI5RCxFQUFFdEQsRUFBRTJnRSxHQUFHLEdBQUc5N0QsRUFBRXZCLEtBQUtta0UsRUFBRW5rRSxNQUFNQSxLQUFLbWtFLEdBQUcsT0FBTSxFQUFHLE9BQU0sR0FBSW1oQixHQUFHMVcsRUFBRTJXLFFBQVEsU0FBU3BoQixFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUUsU0FBU0EsRUFBRXNCLEdBQUcsSUFBSXEvRCxFQUFFM2dFLEVBQUVzQyxNQUFNZ0IsRUFBRSxJQUFJdUIsRUFBRUEsRUFBRXBCLE1BQU02QixLQUFLOUIsV0FBV2xDLEdBQUcsT0FBTzBoRSxFQUFFckMsRUFBRXI5RCxLQUFLcTlELEVBQUVyOUQsR0FBR21rRSxFQUFFaGtFLE1BQU02QixLQUFLOUIsWUFBWW05RCxFQUFFcjlELElBQUksT0FBT3RELEVBQUVzQyxNQUFNLEdBQUd0QyxHQUFHc3RFLEdBQUc0RSxFQUFFNFcsVUFBVXZoQixFQUFFLDJUQUEyVHRvRSxFQUFFLDRoREFBNGhEMnBGLElBQUcsU0FBVW5oQixHQUFHLE9BQU9BLEVBQUVBLElBQUlxTSxFQUFFaHNFLFVBQVVDLFVBQVUsSUFBSXcvRCxFQUFFdC9ELEtBQUt3L0QsSUFBSXhvRSxFQUFFZ0osS0FBS3cvRCxFQUFFcmEsT0FBTyxFQUFFLFFBQVFpcUIsR0FBR25GLEVBQUVqM0IsT0FBTyxTQUFTd3NCLElBQUlBLEVBQUVtaEIsSUFBRyxTQUFVbmhCLEdBQUcsR0FBR0EsRUFBRUEsRUFBRWhsRSxRQUFRekMsRUFBRSxJQUFJeW5FLEVBQUV6RixFQUFFeUYsR0FBR3pFLEVBQUUxaEUsRUFBRW1tRSxHQUFHLE9BQU9BLEVBQUUsSUFBSSxJQUFJOUcsRUFBRTk3RCxFQUFFdEQsT0FBT28vRCxLQUFLLENBQUMsSUFBSXI5RCxFQUFFdUIsRUFBRTg3RCxHQUFHMFYsR0FBRzVPLEdBQUcsR0FBR3pFLEVBQUUxaEUsRUFBRWdDLEdBQUcsT0FBT0EsRUFBRSxPQUFPbWtFLE1BQU1zaEIsS0FBS0gsSUFBRyxTQUFVL2pGLEdBQUcsSUFBSXZELEVBQUVtbUUsRUFBRTVpRSxHQUFHLE9BQU83RSxFQUFFaUksS0FBSzNHLEdBQUcsSUFBSSxJQUFJbXZFLEVBQUVudkUsTUFBTSxJQUFJdUQsRUFBRSxDQUFDLElBQUksS0FBSyxNQUFNLFVBQVU3RSxFQUFFLDREQUE0RHNCLEVBQUU2VCxTQUFTeUosY0FBYyxLQUFLb0csTUFBTSxPQUFPeWlELEVBQS9WLENBQWtXLElBQUlzYSxHQUFHN1AsRUFBRXB4RSxNQUFNLFNBQVMybUUsR0FBRyxPQUFPeVAsR0FBR3pQLElBQUlBLEtBQUtBLEdBQUd1aEIsR0FBRzlXLEVBQUUrVyxNQUFNLFNBQVN4aEIsR0FBRyxPQUFPLE1BQU1BLEdBQUdrUSxHQUFHekYsRUFBRWdYLE1BQU0sU0FBU3poQixHQUFHQSxFQUFFLFNBQVNBLEdBQUcsR0FBR3VoQixHQUFHdmhCLEdBQUcsTUFBTSxHQUFHLElBQUksT0FBTzVpRSxFQUFFakYsS0FBSzZuRSxHQUFHLE1BQU1BLElBQUksSUFBSSxPQUFPQSxFQUFFLEdBQUcsTUFBTUEsSUFBSSxNQUFNLElBQUksSUFBSTVpRSxFQUFFMUIsU0FBUzFELFVBQVVDLFNBQVMsT0FBTytuRSxFQUF4SixDQUEySixJQUFJZ0csR0FBR3lFLEVBQUUvb0UsU0FBUyxTQUFTcytELEdBQUdBLEVBQUUsU0FBU0EsR0FBRyxRQUFRM0UsRUFBRTJFLEtBQUtvUCxHQUFHcFAsR0FBR3puRSxFQUFFaUksS0FBSzB2RSxHQUFHbFEsSUFBSW5tRSxFQUFFMkcsS0FBSzB2RSxHQUFHbFEsTUFBTSxJQUFJNWlFLEVBQUUvRixPQUFPVyxVQUFVd0MsZUFBZWpDLEVBQUUsSUFBSW9ILE9BQU8sSUFBSXV3RSxHQUFHOXlFLEdBQUdwQyxRQUFRLHNCQUFzQixRQUFRQSxRQUFRLHlEQUF5RCxTQUFTLEtBQUtuQixFQUFFLDhCQUE4QixPQUFPbW1FLEVBQXRTLENBQXlTLElBQUkrUCxHQUFHdEYsRUFBRWlYLE9BQU8sU0FBUzFoQixHQUFHLE9BQU8sT0FBT0EsR0FBR2lRLEdBQUd4RixFQUFFOXlFLFlBQVksU0FBU3FvRSxHQUFHLElBQUk1aUUsRUFBRTR0RSxJQUFJaEwsR0FBRyxPQUFPLE1BQU1BLEdBQUcsYUFBYTVpRSxHQUFHLFdBQVdBLEdBQUd3b0UsR0FBRzZFLEVBQUU1eEUsVUFBVSxTQUFTbW5FLEdBQUcsT0FBTzNFLEVBQUUyRSxJQUFJb1AsR0FBR3BQLEVBQUVsbkUsT0FBT3F0RSxHQUFHc0UsRUFBRXJ5RSxTQUFTLFNBQVM0bkUsR0FBRyxNQUFNLG9CQUFvQndPLEdBQUd4TyxJQUFJMmhCLEdBQUdsWCxFQUFFbVgsVUFBVXRvQyxFQUFFLElBQUlBLEVBQUUsU0FBUzBtQixHQUFHLElBQUksSUFBSTVpRSxFQUFFckIsVUFBVWpDLE9BQU8sUUFBRyxJQUFTaUMsVUFBVSxHQUFHQSxVQUFVLEdBQUd1OUMsRUFBRXVvQyxjQUFjdHBGLEVBQUUsRUFBRXNCLEVBQUVtbUUsRUFBRWxtRSxPQUFPdkIsRUFBRXNCLEVBQUUsRUFBRXRCLElBQUksR0FBRzZFLEVBQUU0aUUsRUFBRXpuRSxHQUFHeW5FLEVBQUV6bkUsRUFBRSxJQUFJLEVBQUUsT0FBTSxFQUFHLE9BQU0sSUFBS3NwRixjQUFjLFNBQVM3aEIsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxHQUFHLEVBQUU0aUUsRUFBRTVpRSxFQUFFLEVBQUUsR0FBR2s4QyxHQUFHaWhDLEdBQUc5UCxFQUFFcVgsT0FBTyxTQUFTOWhCLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRW1WLFNBQVN5SixjQUFjLFVBQVU1ZSxFQUFFb08sSUFBSXE1RCxFQUFFem5FLEVBQUV3cEYsT0FBTyxXQUFXLElBQUkvaEIsRUFBRXpuRSxFQUFFazhFLFlBQVksWUFBWWw4RSxFQUFFazhFLFlBQVksVUFBVWw4RSxFQUFFazhFLFdBQVdyM0UsR0FBR0EsR0FBRzRpRSxJQUFJdHlELFNBQVMyM0IsS0FBSzNaLFlBQVluekIsSUFBSWlpRixHQUFHL1AsRUFBRXVYLFVBQVUsU0FBU2hpQixHQUFHLE9BQU8rSixFQUFFL0osR0FBR2lpQixxQkFBcUJDLEdBQUd6WCxFQUFFbGxCLE9BQU8sU0FBU3lhLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRSxHQUFHLEdBQUc2RSxFQUFFLEVBQUUsTUFBTSxHQUFHLEtBQUtBLEVBQUUsR0FBRyxFQUFFQSxJQUFJN0UsR0FBR3luRSxHQUFHNWlFLElBQUksRUFBRTRpRSxHQUFHQSxFQUFFLE9BQU96bkUsR0FBRzRwRixHQUFHMVgsRUFBRTJYLEtBQUssU0FBU3BpQixFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixHQUFHbW1FLEVBQUUrSixFQUFFL0osSUFBSWxtRSxPQUFPLE9BQU92QixFQUFFQSxHQUFHLElBQUlzQixFQUFFdUQsSUFBSTRpRSxHQUFHa2lCLEdBQUczcEYsRUFBRTZFLEVBQUV2RCxHQUFHbW1FLEdBQUcxa0UsT0FBTzhCLElBQUk0aUUsR0FBRzZQLEdBQUdwRixFQUFFNFgsV0FBVyxTQUFTcmlCLEdBQUdBLEVBQUUsU0FBU3grQixFQUFFekgsRUFBRXNyQyxFQUFFdnBFLEdBQUcsSUFBSUMsVUFBVWpDLFFBQVFrMkUsR0FBR3h1QyxLQUFLMDNCLEVBQUUxNEQsS0FBS2doQyxLQUFLekgsRUFBRXlILEVBQUVBLE9BQUUsR0FBUUEsRUFBRUEsR0FBRyxJQUFJbmtDLEtBQUsyeEUsR0FBR3h0QyxLQUFLQSxFQUFFLElBQUlua0MsS0FBS21rQyxJQUFJLElBQUl0bUMsR0FBRzYrQixFQUFFZ3dDLEVBQUUvSixFQUFFc2lCLE1BQU12b0QsSUFBSUEsR0FBR2ltQyxFQUFFc2lCLE1BQU1oM0UsVUFBVWhRLE1BQU0sRUFBRSxHQUFHLFNBQVNKLEdBQUcsU0FBU0EsSUFBSTYrQixFQUFFQSxFQUFFeitCLE1BQU0sR0FBRytwRSxHQUFFLEVBQUcsU0FBU25xRSxJQUFJWSxHQUFFLElBQUssSUFBSWIsRUFBRW9xRSxFQUFFLFNBQVMsTUFBTXhpQyxFQUFFckIsRUFBRXZtQyxFQUFFLFVBQVVpUyxFQUFFczBCLEVBQUV2bUMsRUFBRSxTQUFTaWMsRUFBRXNxQixFQUFFdm1DLEVBQUUsV0FBVzZrRSxFQUFFdCtCLEVBQUV2bUMsRUFBRSxjQUFjekQsRUFBRWdxQyxFQUFFdm1DLEVBQUUsV0FBV3ErQyxFQUFFOVgsRUFBRXZtQyxFQUFFLGFBQWE2MUIsRUFBRTBRLEVBQUV2bUMsRUFBRSxhQUFhMEIsRUFBRTZrQyxFQUFFdm1DLEVBQUUsa0JBQWtCOHhELEVBQUVzWSxFQUFFLEVBQUU3akMsRUFBRStnRCxvQkFBb0JuYixFQUFFLENBQUNsd0QsRUFBRTJyQixFQUFFMjNCLEdBQUdwOUQsRUFBRXlsQyxHQUFHMi9DLElBQUl4aUIsRUFBRXlpQixLQUFLQyxTQUFTeDFFLEdBQUd5MUUsS0FBSzNpQixFQUFFeWlCLEtBQUtDLFNBQVN4MUUsRUFBRSxHQUFHNGpCLEVBQUU1WixFQUFFLEVBQUU0akQsR0FBRzE5RCxFQUFFOFosRUFBRSxHQUFHMHJFLElBQUk1aUIsRUFBRXlpQixLQUFLSSxXQUFXM3JFLEdBQUc0ckUsS0FBSzlpQixFQUFFeWlCLEtBQUtJLFdBQVczckUsRUFBRSxJQUFJZ2pELEdBQUc2UCxFQUFFakssR0FBR3hrRSxNQUFNLEdBQUcyK0QsS0FBSzZGLEVBQUVqOUIsRUFBRXJyQyxFQUFFLElBQUksR0FBR3FqRSxHQUFHejlELEVBQUU1RixFQUFFLElBQUksSUFBSW9qRSxFQUFFcGpFLEVBQUVrakUsR0FBR3Q5RCxFQUFFNUYsR0FBRytpRSxFQUFFamhCLEVBQUUrZ0IsR0FBR2o5RCxFQUFFazhDLEdBQUd2ZixFQUFFakosRUFBRWtxQyxHQUFHNTlELEVBQUUwekIsR0FBR2gxQixFQUFFc0IsRUFBRVQsRUFBRSxHQUFHbXVFLEVBQUUxdEUsRUFBRTFFLEtBQUsyZ0UsTUFBTTE4RCxFQUFFLEtBQUtxakUsRUFBRXhvRSxFQUFFLEdBQUcsSUFBSSxJQUFJNDJFLEdBQUc1MkUsRUFBRSxHQUFHLEtBQUssS0FBSytqRSxFQUFFL2pFLEVBQUUsR0FBRyxJQUFJLElBQUl1ckYsR0FBR3ZyRixFQUFFLEdBQUcsS0FBSyxLQUFLODBFLEVBQUV4d0UsRUFBRSxNQUFNdXBFLEVBQUUsT0FBTzBFLEVBQUV2b0MsR0FBRzNnQyxNQUFNaEgsSUFBSSxDQUFDLEtBQUswSixNQUFNdkksUUFBUWEsRUFBRSxJQUFJMmxDLEdBQUd1ckIsRUFBRSxFQUFFLElBQUksS0FBSzN2RCxFQUFFLElBQUkxRSxLQUFLQyxNQUFNRCxLQUFLc3FGLElBQUlqMkIsR0FBRyxJQUFJcjBELEtBQUtzcUYsSUFBSWoyQixHQUFHLEdBQUcsR0FBR3NPLEVBQUUsQ0FBQyxLQUFLLEtBQUssS0FBSyxNQUFNeDRCLEVBQUUsR0FBRyxFQUFFLEdBQUdBLEVBQUUsSUFBSUEsRUFBRSxJQUFJLElBQUlBLEVBQUUsS0FBSyxPQUFPOUksRUFBRS8rQixRQUFRekMsR0FBRSxTQUFVeW5FLEdBQUcsT0FBT0EsS0FBS29ILEVBQUVBLEVBQUVwSCxHQUFHQSxFQUFFMWtFLE1BQU0sRUFBRTBrRSxFQUFFbG1FLE9BQU8sT0FBTyxJQUFJc0QsRUFBRSxTQUFTNGlFLEdBQUcsSUFBSTVpRSxFQUFFckIsVUFBVWpDLE9BQU8sUUFBRyxJQUFTaUMsVUFBVSxHQUFHQSxVQUFVLEdBQUcsRUFBRSxPQUFPb21GLEdBQUdwWSxFQUFFL0osR0FBRzVpRSxFQUFFLE1BQU03RSxFQUFFLG1FQUFtRXNCLEVBQUUsdUlBQXVJcS9ELEVBQUUsS0FBS3I5RCxFQUFFLGNBQWMsT0FBT21rRSxFQUFFc2lCLE1BQU0sQ0FBQ2gzRSxRQUFRLDJCQUEyQjIzRSxVQUFVLFNBQVNDLFdBQVcsY0FBY0MsU0FBUyxlQUFlQyxTQUFTLHFCQUFxQkMsVUFBVSxVQUFVQyxXQUFXLGFBQWFDLFNBQVMsZUFBZUMsUUFBUSxhQUFhQyxRQUFRLFdBQVdDLFlBQVkseUJBQXlCQyxlQUFlLCtCQUErQkMsb0JBQW9CLCtCQUErQjVqQixFQUFFeWlCLEtBQUssQ0FBQ0MsU0FBUyxDQUFDLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sU0FBUyxTQUFTLFVBQVUsWUFBWSxXQUFXLFNBQVMsWUFBWUcsV0FBVyxDQUFDLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLFVBQVUsV0FBVyxRQUFRLFFBQVEsTUFBTSxPQUFPLE9BQU8sU0FBUyxZQUFZLFVBQVUsV0FBVyxhQUFhN2lCLEVBQXZoRSxDQUEwaEUsSUFBSTZqQixHQUFHcFosRUFBRXFaLE9BQU9oekQsRUFBRSxPQUFPLFNBQVNrdkMsRUFBRTVpRSxHQUFHLEdBQUcsTUFBTUEsRUFBRSxPQUFPNGlFLEVBQUVobEUsUUFBUTgxQixFQUFFLElBQUksSUFBSSxJQUFJdjRCLEVBQUVzQixFQUFFcS9ELEVBQUUsRUFBRXI5RCxFQUFFbWtFLEVBQUVsbUUsT0FBTzBuQyxFQUFFcGtDLEVBQUV0RCxPQUFPaWdDLEdBQUUsRUFBR0EsR0FBR20vQixFQUFFcjlELEdBQUcsSUFBSWsrQixHQUFFLEVBQUd4aEMsR0FBRyxFQUFFc0IsRUFBRW1tRSxFQUFFM2tFLE9BQU82OUQsS0FBSzNnRSxFQUFFaXBDLEdBQUcsR0FBRzNuQyxJQUFJdUQsRUFBRTdFLEdBQUcsQ0FBQ3doQyxHQUFFLEVBQUdtL0IsSUFBSSxNQUFNLE9BQU9BLEdBQUdyOUQsRUFBRSxHQUFHbWtFLEVBQUVyYSxPQUFPdVQsRUFBRXI5RCxLQUFLa29GLEdBQUd0WixFQUFFL1gsUUFBUSxTQUFTc04sR0FBRyxPQUFPQSxFQUFFb1EsR0FBRyxHQUFHcFEsR0FBRyxTQUFTNWlFLEdBQUcsT0FBT3VvRSxHQUFHdm9FLEVBQUU0aUUsS0FBS2drQixHQUFHdlosRUFBRXdaLE9BQU8sU0FBU2prQixFQUFFNWlFLEVBQUU3RSxHQUFHLE9BQU8sTUFBTXluRSxFQUFFa08sR0FBR2tCLEdBQUdwUCxHQUFHc00sRUFBRXRNLEVBQUU1aUUsRUFBRTdFLEdBQUc4aUUsRUFBRTJFLEdBQUcrakIsR0FBRy9qQixHQUFHLFNBQVNBLEdBQUcsT0FBTyxTQUFTNWlFLEdBQUcsT0FBTyxNQUFNQSxPQUFFLEVBQU9BLEVBQUU0aUUsTUFBTXlhLEdBQUdoUSxFQUFFL2xELE9BQU8sU0FBU3M3QyxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFLEdBQUcsT0FBT3VELEVBQUU0bUYsR0FBRzVtRixFQUFFN0UsR0FBR2kzRSxHQUFHeFAsR0FBRSxTQUFVQSxFQUFFem5FLEVBQUUyZ0UsR0FBRzk3RCxFQUFFNGlFLEVBQUV6bkUsRUFBRTJnRSxJQUFJci9ELEVBQUVnSixLQUFLbTlELE1BQU1ubUUsR0FBR3FxRixHQUFHelosRUFBRTBaLFdBQVczZCxHQUFFLFNBQVV4RyxFQUFFNWlFLEdBQUcsT0FBT0EsRUFBRXV4RSxHQUFHdnhFLEdBQUdxOUUsR0FBR3phLEdBQUUsU0FBVUEsR0FBRyxPQUFPbVEsR0FBRy95RSxFQUFFNGlFLFNBQVM1M0IsR0FBR3FpQyxFQUFFMlosT0FBTyxTQUFTcGtCLEdBQUcsU0FBUzVpRSxFQUFFNGlFLEVBQUU1aUUsR0FBRyxPQUFPNGlFLElBQUk1aUUsRUFBRSxPQUFPLFNBQVM0aUUsRUFBRXpuRSxHQUFHLE9BQU9BLEVBQUVBLEdBQUc2RSxFQUFFcTlFLEdBQUd6YSxHQUFFLFNBQVVBLEVBQUU1aUUsRUFBRXZELEdBQUcsSUFBSSxJQUFJcS9ELEVBQUVyL0QsRUFBRUMsU0FBU3NELEVBQUU4N0QsR0FBRyxHQUFHM2dFLEVBQUV5bkUsRUFBRW5tRSxFQUFFdUQsSUFBSSxPQUFNLEVBQUcsT0FBTSxNQUF4SixHQUFrS2luRixHQUFHNVosRUFBRTZaLFNBQVMzbkYsRUFBRXRGLE9BQU9pUCxvQkFBb0J5bUQsRUFBRTExRCxPQUFPa3RGLHNCQUFzQixTQUFTdmtCLEdBQUcsSUFBSTVpRSxFQUFFckIsVUFBVWpDLE9BQU8sUUFBRyxJQUFTaUMsVUFBVSxHQUFHQSxVQUFVLEdBQUcsR0FBR3hELEVBQUU2RSxFQUFFcEYsVUFBVTZCLE9BQUUsSUFBU3RCLEdBQUdBLEVBQUUyZ0UsRUFBRTk3RCxFQUFFb25GLGFBQWEzb0YsT0FBRSxJQUFTcTlELEdBQUdBLEVBQUUxM0IsRUFBRXBrQyxFQUFFK1gsT0FBTzRrQixPQUFFLElBQVN5SCxHQUFHQSxFQUFFNmpDLEVBQUUsR0FBRyxJQUFJeHBFLEdBQUdrK0IsSUFBSXA5QixFQUFFLENBQUMsSUFBSWIsRUFBRTJ2RSxFQUFFNXZFLEdBQUdjLElBQUliLEVBQUVhLEdBQUcsR0FBRzBvRSxFQUFFQSxFQUFFeDhELE9BQU8vTSxFQUFFa2tFLElBQUlqbUMsR0FBR2d6QixJQUFJc1ksRUFBRUEsRUFBRXg4RCxPQUFPa2tELEVBQUVpVCxXQUFXbm1FLElBQUltbUUsRUFBRTBQLEdBQUcxUCxLQUFLQSxJQUFJM29FLE9BQU9XLFdBQVdxdEUsRUFBRWo5QixHQUFHaTlCLFFBQVEsR0FBR3hyRSxFQUFFLElBQUksSUFBSXFCLEtBQUs4a0UsRUFBRXFGLEVBQUV4aUUsS0FBSzNILFFBQVFtcUUsRUFBRW9HLEVBQUV6TCxHQUFHLE9BQU9xRixJQUFJcVYsR0FBR2pRLEVBQUVnYSxTQUFTblYsR0FBRytVLElBQUcsR0FBSTFKLEdBQUdsUSxFQUFFaWEsVUFBVSxTQUFTMWtCLEdBQUdBLEVBQUUsU0FBU25tRSxHQUFHLElBQUlxL0QsRUFBRW45RCxVQUFVakMsT0FBTyxRQUFHLElBQVNpQyxVQUFVLEdBQUdBLFVBQVUsR0FBRyxLQUFLRixFQUFFRSxVQUFVakMsT0FBTyxRQUFHLElBQVNpQyxVQUFVLEdBQUdBLFVBQVUsR0FBRyxHQUFHMitFLEdBQUc3K0UsRUFBRXVCLEdBQUd2RCxFQUFFQSxFQUFFbUIsUUFBUSxLQUFLLFFBQVFBLFFBQVEsS0FBSyxRQUFRaytELEVBQUUzZ0UsRUFBRTJnRSxHQUFHLElBQUkxM0IsRUFBRSxFQUFFekgsRUFBRSxHQUFHeTFDLEdBQUd0VyxHQUFFLFNBQVU5N0QsR0FBR0EsRUFBRXVuRixXQUFXOXFGLEVBQUVBLEVBQUVtQixRQUFRb0MsRUFBRWdyQyxJQUFHLFNBQVU3dkMsRUFBRXNCLEdBQUcsT0FBT2tnQyxFQUFFeUgsS0FBS3crQixFQUFFbm1FLEVBQUV1RCxFQUFFdW5GLFNBQVM5b0YsR0FBR3RELEVBQUV5QyxRQUFRbkIsRUFBRSxjQUFjMm5DLEVBQUUsR0FBRyxjQUFjZ3VDLEdBQUd0VyxHQUFFLFNBQVU4RyxFQUFFNWlFLEdBQUc3RSxFQUFFeW5FLEVBQUUya0IsWUFBWTlxRixFQUFFQSxFQUFFbUIsUUFBUWdsRSxFQUFFNTNCLEdBQUcsTUFBTWhyQyxFQUFFLGNBQWNBLEVBQUUsV0FBVyxJQUFJaW9FLEVBQUUsR0FBRyxPQUFPeHJFLEVBQUVBLEVBQUVtQixRQUFRLDBCQUF5QixTQUFVZ2xFLEdBQUcsSUFBSTVpRSxFQUFFLFFBQVE0aUUsRUFBRXJhLE9BQU8sRUFBRSxHQUFHcHRELEdBQUc2RSxFQUFFNGlFLEVBQUVyYSxPQUFPLEdBQUdxYSxFQUFFcmEsT0FBTyxJQUFJM3FELFFBQVEsS0FBSyxJQUFJbkIsRUFBRXdyRSxFQUFFdnJFLE9BQU8sRUFBRXVyRSxFQUFFQSxFQUFFdnJFLE9BQU8sR0FBRyxLQUFLLE9BQU9zRCxJQUFJLE1BQU12RCxHQUFHdEIsR0FBR3NCLEdBQUcsTUFBTUEsR0FBR3EvRCxFQUFFci9ELElBQUksTUFBTXEvRCxFQUFFci9ELEdBQUcrcUYsT0FBTzFyQixFQUFFci9ELEdBQUcrcUYsTUFBTXRxRixRQUFRL0IsSUFBSSxJQUFJOHNFLEVBQUV4aUUsS0FBS3RLLEdBQUd5bkUsR0FBRzVpRSxHQUFHN0UsR0FBR3NCLEdBQUd3ckUsRUFBRTloRSxNQUFNeThELEdBQUcsTUFBTXdQLEdBQUd0VyxHQUFFLFNBQVU4RyxFQUFFNWlFLEdBQUd2RCxFQUFFQSxFQUFFbUIsUUFBUSxJQUFJMkUsT0FBTyxTQUFTdkMsRUFBRSxNQUFNLEtBQUssV0FBV3BDLFFBQVEsSUFBSTJFLE9BQU8sTUFBTXZDLEVBQUUsTUFBTSxLQUFLLGdCQUFnQnZCLEVBQUVta0UsRUFBRXppRCxPQUFPLFNBQVNpeUQsR0FBR3RXLEdBQUUsU0FBVThHLEdBQUdBLEVBQUUya0IsV0FBVzlxRixFQUFFQSxFQUFFbUIsUUFBUSxxQkFBb0IsU0FBVWdsRSxHQUFHLElBQUk1aUUsRUFBRTJxQixTQUFTaTRDLEVBQUVobEUsUUFBUSxxQkFBcUIsTUFBTSxJQUFJLE9BQU8rK0IsRUFBRTM4QixVQUFVdkQsR0FBRyxJQUFJdUQsRUFBRSxDQUFDcXFDLFFBQVEsaUJBQWlCK3ZCLE9BQU8saUJBQWlCNWtDLE9BQU8saUJBQWlCaXlELFFBQVEsaUJBQWlCQyxTQUFTLGtCQUFrQnZzRixFQUFFLENBQUN3c0YsR0FBRyxDQUFDdDlDLFFBQVEsQ0FBQ1csR0FBRywrQkFBK0I3cUIsTUFBTSxXQUFXaTZDLE9BQU8sQ0FBQ3B2QixHQUFHLHFCQUFxQjdxQixNQUFNLFVBQVV5bkUsUUFBUSxDQUFDNThDLEdBQUcsNEJBQTRCN3FCLE1BQU0sVUFBVTBuRSxTQUFTLENBQUM3OEMsR0FBRyxtSkFBbUo3cUIsTUFBTSxXQUFXdW5FLFNBQVMsQ0FBQzE4QyxHQUFHLHVDQUF1QzdxQixNQUFNLGNBQWMsT0FBT2hsQixFQUFFc3VDLEtBQUssQ0FBQ1ksUUFBUSxDQUFDVyxHQUFHLDZCQUE2QjdxQixNQUFNLFdBQVc5WixJQUFJLENBQUMya0MsR0FBRyw4QkFBOEI3cUIsTUFBTSxVQUFVcW5FLE1BQU0sQ0FBQyxXQUFXcHRCLE9BQU9qL0QsRUFBRXdzRixHQUFHdnRCLE9BQU9wZ0MsSUFBSSxDQUFDZ1IsR0FBRyxzREFBc0R1OEMsU0FBUyxPQUFPMUssT0FBTyxDQUFDN3hDLEdBQUcsd0RBQXdEdThDLFNBQVMsT0FBT3BzRixFQUFFNitCLElBQUksQ0FBQ3FRLFFBQVFsdkMsRUFBRXdzRixHQUFHdDlDLFFBQVErdkIsT0FBT2ovRCxFQUFFd3NGLEdBQUd2dEIsT0FBT3d0QixRQUFRLENBQUM1OEMsR0FBRyw0RUFBNEU3cUIsTUFBTSxVQUFVMG5FLFNBQVMsQ0FBQzc4QyxHQUFHLDBCQUEwQjdxQixNQUFNLFlBQVl5aUQsRUFBN2xFLENBQWdtRSxJQUFJNGEsR0FBR25RLEVBQUVwdUUsT0FBT2l6RSxHQUFHK1UsSUFBSXhKLEdBQUdwUSxFQUFFbnpELE1BQU0sU0FBUzBvRCxHQUFHLE9BQU8zRSxFQUFFMkUsR0FBRzZPLEdBQUc3TyxHQUFHQSxFQUFFMWtFLFFBQVFzL0UsR0FBRyxHQUFHNWEsR0FBR0EsR0FBRzhhLEdBQUdyUSxFQUFFOVIsS0FBSyxTQUFTcUgsRUFBRTVpRSxHQUFHQSxFQUFFQSxHQUFHMnJFLEVBQUUsSUFBSXh3RSxFQUFFbVYsU0FBU3lKLGNBQWMsWUFBWXRkLEVBQUU2VCxTQUFTMjNCLEtBQUt1MUMsR0FBR3JpRixFQUFFZ2xCLE1BQU0sQ0FBQzJuRSxTQUFTLE9BQU9DLE9BQU8sSUFBSUMsUUFBUSxJQUFJQyxPQUFPLElBQUkzNEIsU0FBUyxXQUFXeG9CLEtBQUssWUFBWTNyQyxFQUFFWCxNQUFNb29FLEVBQUVubUUsRUFBRTZ4QixZQUFZbnpCLEdBQUdBLEVBQUUyeUIsYUFBYSxXQUFXLElBQUkzeUIsRUFBRStzRixTQUFTL3NGLEVBQUVndEYsa0JBQWtCLEVBQUV2bEIsRUFBRWxtRSxRQUFRLElBQUk0VCxTQUFTODNFLFlBQVksUUFBUXBvRixJQUFJLE1BQU00aUUsR0FBRzVpRSxFQUFFNGlFLEdBQUcsUUFBUW5tRSxFQUFFNHhCLFlBQVlsekIsS0FBSzBkLEdBQUd3MEQsRUFBRWh4RSxJQUFJLFNBQVN1bUUsRUFBRTVpRSxFQUFFN0UsR0FBRzZFLEVBQUU0bUYsR0FBRzVtRixFQUFFN0UsR0FBRyxJQUFJLElBQUlzQixHQUFHbzFFLEdBQUdqUCxJQUFJeUwsRUFBRXpMLEdBQUc5RyxHQUFHci9ELEdBQUdtbUUsR0FBR2xtRSxPQUFPK0IsRUFBRTdDLE1BQU1rZ0UsR0FBRzEzQixFQUFFLEVBQUVBLEVBQUUwM0IsRUFBRTEzQixJQUFJLENBQUMsSUFBSXpILEVBQUVsZ0MsRUFBRUEsRUFBRTJuQyxHQUFHQSxFQUFFM2xDLEVBQUUybEMsR0FBR3BrQyxFQUFFNGlFLEVBQUVqbUMsR0FBR0EsRUFBRWltQyxHQUFHLE9BQU9ua0UsR0FBRytxQyxHQUFHNmpDLEVBQUVnYixtQkFBbUIsU0FBU3psQixHQUFHLFNBQVM1aUUsRUFBRTRpRSxHQUFHLFFBQVEsS0FBS0EsR0FBR0EsRUFBRSxTQUFTQSxHQUFHLElBQUksT0FBT3hkLG1CQUFtQndkLEdBQUcsTUFBTTlHLEdBQUcsSUFBSXIvRCxFQUFFbW1FLEVBQUVuL0QsTUFBTXRJLEdBQUcsT0FBT3NCLEdBQUcyMUUsR0FBRzMxRSxHQUFFLFNBQVV0QixHQUFHeW5FLEVBQUVBLEVBQUVobEUsUUFBUXpDLEVBQUUsU0FBU3luRSxHQUFHQSxFQUFFQSxFQUFFcG1FLE1BQU0sS0FBSzBCLE1BQU0sR0FBRyxJQUFJL0MsRUFBRTBkLEdBQUcrcEQsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRUQsRUFBRTFkLE9BQU85cEQsR0FBSzB5RSxFQUFFMW9CLE9BQU95ZCxHQUFFLEdBQXBGLENBQXlGem5FLE9BQU95bkUsR0FBR0EsSUFBSSxJQUFJem5FLEVBQUUsb0JBQW9CLE9BQU95bkUsRUFBclMsQ0FBd1MsSUFBSTBsQixHQUFHamIsRUFBRWtiLE9BQU8sU0FBUzNsQixHQUFHLElBQUk1aUUsRUFBRSxDQUFDd2pCLEtBQUssS0FBSyxTQUFTcm9CLEVBQUVBLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSW9DLEVBQUV6aEUsR0FBRyxDQUFDLEdBQUdxL0QsRUFBRXdoQixHQUFHeGhCLEVBQUVBLEdBQUcsR0FBRzk3RCxHQUFHcXlFLEdBQUd2VyxFQUFFMHNCLFNBQVMsQ0FBQyxJQUFJL3BGLEVBQUUsSUFBSXdCLEtBQUt4QixFQUFFMmdFLGdCQUFnQjNnRSxFQUFFdS9ELGtCQUFrQixNQUFNbEMsRUFBRTBzQixTQUFTMXNCLEVBQUUwc0IsUUFBUS9wRixFQUFFLE9BQU9oQyxFQUFFeW9ELG1CQUFtQnpvRCxHQUFHdEIsRUFBRStwRCxtQkFBbUIvcEQsR0FBR21WLFNBQVNpNEUsT0FBTyxDQUFDcHRGLEVBQUUsSUFBSXNCLEVBQUVxL0QsRUFBRTBzQixTQUFTLGFBQWExc0IsRUFBRTBzQixRQUFRQyxjQUFjM3NCLEVBQUV0NEMsTUFBTSxVQUFVczRDLEVBQUV0NEMsS0FBS3M0QyxFQUFFcUosUUFBUSxZQUFZckosRUFBRXFKLE9BQU9ySixFQUFFNHNCLE9BQU8sV0FBVyxJQUFJLzNELEtBQUssSUFBSWl5QyxFQUFFLElBQUksSUFBSXgrQixFQUFFOXpCLFNBQVNpNEUsT0FBT2o0RSxTQUFTaTRFLE9BQU8vckYsTUFBTSxNQUFNLEdBQUdtZ0MsRUFBRXhoQyxPQUFFLEVBQU8sR0FBRzhzRSxFQUFFLEVBQUV2cEUsRUFBRTBsQyxFQUFFMW5DLE9BQU91ckUsRUFBRXZwRSxFQUFFdXBFLElBQUksQ0FBQyxJQUFJbnFFLEVBQUVzbUMsRUFBRTZqQyxHQUFHcHFFLEVBQUVDLEVBQUV0QixNQUFNLEtBQUtpcEMsRUFBRStELEdBQUczckMsRUFBRXNWLFNBQVMsR0FBR3JWLEVBQUVELEVBQUU4eUIsS0FBSyxLQUFLN3lCLEVBQUUwckMsR0FBRzFyQyxHQUFHM0MsSUFBSXNxQyxFQUFFLENBQUM5SSxFQUFFNytCLEVBQUUsTUFBTTNDLElBQUl3aEMsRUFBRThJLEdBQUczbkMsR0FBRyxPQUFPNitCLEVBQUUsT0FBT2ltQyxFQUFFLENBQUM5K0QsSUFBSTNJLEVBQUUySixJQUFJM0osRUFBRTJCLE9BQU8sU0FBUzhsRSxFQUFFNWlFLEdBQUcsT0FBT0EsRUFBRUEsR0FBRyxJQUFJd29GLFNBQVMsRUFBRXJ0RixFQUFFeW5FLEVBQUUsR0FBRzVpRSxLQUE3cEIsQ0FBbXFCLElBQUkyOUUsR0FBR3RRLEVBQUVzYixNQUFNLFNBQVMvbEIsR0FBRyxPQUFPQSxFQUFFNk8sR0FBRzdPLEdBQUdBLEVBQUVpUCxHQUFHalAsS0FBS2dRLEdBQUdoUSxHQUFHL3BELEdBQUcrcEQsR0FBRyxDQUFDQSxHQUFHLElBQUlnYixHQUFHdlEsRUFBRXViLE1BQU0sU0FBU2htQixHQUFHLElBQUk1aUUsR0FBRzRpRSxFQUFFLFNBQVNBLEVBQUV6bkUsR0FBRyxPQUFPNkUsRUFBRWYsT0FBTzJqRSxFQUFFem5FLEtBQUswdEYsS0FBSyxTQUFTam1CLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixHQUFHQSxFQUFFQSxHQUFHLEdBQUcsSUFBSXEvRCxFQUFFcjlELEVBQUV0RCxFQUFFMnRGLFdBQVdwWCxHQUFHdjJFLEVBQUUsb0JBQW9CLEdBQUcsY0FBY0EsRUFBRTJ0RixVQUFVaHRCLEVBQUVtVyxHQUFHLFdBQVcsSUFBSXJQLEVBQUUrYSxHQUFHaC9FLFdBQVcsT0FBTzhCLEtBQUtzb0YsWUFBWXRvRixLQUFLc29GLFdBQVducUYsTUFBTTZCLEtBQUttaUUsSUFBSW5pRSxNQUFNLElBQUluQyxTQUFTLFFBQVEsbUJBQW1CRyxFQUFFLDhHQUExQyxDQUF5SmsvRSxJQUFJbmdCLEVBQUUxQixFQUFFOTdELEdBQUc4N0QsRUFBRWxoRSxVQUFVK3JCLFlBQVltMUMsRUFBRUEsRUFBRTc4RCxPQUFPLFNBQVNlLEVBQUU3RSxHQUFHLE9BQU95bkUsRUFBRTlHLEVBQUU5N0QsRUFBRTdFLElBQUkyZ0UsRUFBRXdrQixTQUFTLFNBQVMxZCxHQUFHcEYsRUFBRTFCLEVBQUU4RyxJQUFJOUcsRUFBRTd2RCxRQUFRLFNBQVMyMkQsR0FBRyxPQUFPNGEsR0FBRzFoQixFQUFFbGhFLFVBQVVnb0UsR0FBRzlHLEdBQUdBLEVBQUVrdEIsUUFBUSxTQUFTcG1CLEdBQUcsT0FBTzRhLEdBQUcxaEIsRUFBRThHLEdBQUc5RyxHQUFHQSxFQUFFN3ZELFFBQVE5USxHQUFHNnRGLFFBQVF2c0YsR0FBR3EvRCxFQUE3akIsQ0FBZ2tCN2hFLE9BQU8sQ0FBQzZ1RixVQUFVLE9BQU9HLFVBQVUsU0FBU3JtQixFQUFFNWlFLEVBQUU3RSxHQUFHLE9BQU95bkUsRUFBRWhvRSxVQUFVb0YsR0FBR3BCLE1BQU02QixLQUFLdEYsSUFBSU4sU0FBUyxXQUFXLE9BQU80RixLQUFLa21CLFlBQVl2VixRQUFRLE9BQU93eEQsRUFBbHhCLENBQXF4QixJQUFJc21CLEdBQUc3YixFQUFFOGIsS0FBS3ZMLEdBQUcsQ0FBQ21MLFdBQVcsU0FBU25tQixHQUFHNk8sR0FBRzdPLElBQUluaUUsS0FBS2kvRCxLQUFLa0QsRUFBRWxtRSxPQUFPMDFFLEdBQUd4UCxHQUFFLFNBQVVBLEVBQUU1aUUsR0FBR1MsS0FBS21pRSxHQUFHNWlFLElBQUlTLFFBQVFBLEtBQUtpL0QsS0FBSzJPLEVBQUV6TCxHQUFHbG1FLE9BQU8wMUUsR0FBR3hQLEdBQUUsU0FBVUEsRUFBRTVpRSxHQUFHUyxLQUFLVCxHQUFHNGlFLElBQUluaUUsT0FBT2t0RSxFQUFFbHRFLFNBQVNvOUUsR0FBR3hRLEVBQUVwOUQsaUJBQWlCLFNBQVMyeUQsR0FBRyxPQUFPQSxFQUFFamdFLE9BQU9zTixrQkFBa0J0TixPQUFPeW1GLHdCQUF3QnptRixPQUFPMG1GLHVCQUF1QnptQixFQUFFZ2IsR0FBRyxDQUFDbUwsV0FBVyxhQUFhbi9FLFFBQVEsYUFBYTAvRSxXQUFXLGFBQWFDLFlBQVksZ0JBQWdCM21CLEVBQWxOLENBQXFOLElBQUk0bUIsR0FBR25jLEVBQUVvYyxPQUFPLFNBQVM3bUIsR0FBRyxJQUFJNWlFLEVBQUUsSUFBSTRpRSxFQUFFZ2IsR0FBRyxDQUFDa0wsVUFBVSxTQUFTQyxXQUFXLFNBQVNubUIsR0FBRyxPQUFPbmlFLEtBQUsvRCxPQUFPLEVBQUVrbUUsRUFBRWdRLEdBQUdoUSxHQUFHNWlFLEVBQUVtM0UsS0FBS3ZVLFFBQVFBLEVBQUUxbEMsV0FBV3o4QixLQUFLLEdBQUdtaUUsRUFBRW5pRSxLQUFLL0QsT0FBTyxJQUFJK0QsTUFBTTAyRSxLQUFLLFNBQVNuM0UsR0FBRyxJQUFJN0UsRUFBRSxJQUFJeW5FLEVBQUUsT0FBT25pRSxLQUFLKzZELE1BQUssWUFBYSxTQUFTb0gsRUFBRTVpRSxHQUFHLElBQUksSUFBSTdFLEVBQUU2RSxFQUFFdEQsT0FBT0QsRUFBRW1tRSxFQUFFbG1FLE9BQU9vL0QsRUFBRSxFQUFFQSxFQUFFM2dFLEVBQUUyZ0UsSUFBSThHLEVBQUVubUUsS0FBS3VELEVBQUU4N0QsR0FBRzhHLEVBQUVsbUUsT0FBT0QsRUFBN0UsQ0FBZ0Z0QixFQUFFc0YsS0FBS2lwRixpQkFBaUIxcEYsT0FBTzdFLEdBQUdxZ0UsS0FBSyxTQUFTb0gsR0FBRyxPQUFPd1AsR0FBRzN4RSxNQUFLLFNBQVVULEVBQUU3RSxHQUFHeW5FLEVBQUU3bkUsS0FBS2lGLEVBQUU3RSxFQUFFNkUsTUFBTVMsU0FBUzZQLFVBQVUsT0FBT3N5RCxFQUF0YSxDQUF5YSxJQUFJK21CLEdBQUd0YyxFQUFFdWMsU0FBUyxTQUFTaG5CLEdBQUcsT0FBTythLEdBQUcvSyxHQUFHaFEsR0FBRyxJQUFJNG1CLEdBQUc1bUIsR0FBR0EsSUFBSWluQixHQUFHeGMsRUFBRXljLE1BQU0sU0FBU2xuQixHQUFHLE9BQU9BLEVBQUUsU0FBU0EsRUFBRTVpRSxFQUFFN0UsR0FBRyxHQUFHeW5FLEVBQUUrbUIsR0FBRy9tQixHQUFHMUUsRUFBRS9pRSxJQUFJeTNFLEdBQUc1eUUsR0FBRyxPQUFPLFNBQVM0aUUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRWhwQyxhQUFhNTVCLEdBQXBDLENBQXdDNGlFLEVBQUUsR0FBRzVpRSxHQUFHLElBQUl2RCxFQUFFdUQsRUFBRWkrRCxFQUFFeGhFLE1BQU1BLEVBQUUsSUFBSXVELEdBQUc3RSxHQUFHLFNBQVN5bkUsRUFBRTVpRSxHQUFHb3lFLEdBQUd4UCxHQUFFLFNBQVVBLEdBQUd3UCxHQUFHcHlFLEdBQUUsU0FBVUEsRUFBRTdFLEdBQUd5bkUsRUFBRTkwQyxhQUFhM3lCLEVBQUU2RSxTQUFyRSxDQUErRTRpRSxFQUFFbm1FLEtBQUtLLE9BQU8sU0FBUzhsRSxFQUFFNWlFLEdBQUc0aUUsRUFBRSttQixHQUFHL21CLEdBQUc1aUUsRUFBRTI5RSxHQUFHMzlFLEdBQUdveUUsR0FBR3hQLEdBQUUsU0FBVUEsR0FBR3dQLEdBQUdweUUsR0FBRSxTQUFVQSxHQUFHNGlFLEVBQUUxeEMsZ0JBQWdCbHhCLFVBQVU0aUUsRUFBMVUsQ0FBNlUsSUFBSW1uQixHQUFHMWMsRUFBRTJjLEtBQUssU0FBU3BuQixHQUFHQSxFQUFFLFNBQVNBLEVBQUV6bkUsRUFBRXNCLEdBQUcsR0FBR21tRSxFQUFFK21CLEdBQUcvbUIsR0FBRzFFLEVBQUV6aEUsSUFBSW0yRSxHQUFHejNFLEdBQUcsT0FBTyxTQUFTeW5FLEVBQUU1aUUsR0FBRyxPQUFPNGlFLEVBQUV6aUQsTUFBTXF5RCxHQUFHeHlFLEtBQUsrN0IsaUJBQWlCNm1DLEVBQUUsSUFBSXFuQixpQkFBaUJqcUYsR0FBN0UsQ0FBaUY0aUUsRUFBRSxHQUFHem5FLEdBQUcsSUFBSTJnRSxFQUFFM2dFLEVBQUU4aUUsRUFBRW5DLE1BQU1BLEVBQUUsSUFBSTNnRSxHQUFHc0IsR0FBRyxTQUFTbW1FLEVBQUV6bkUsR0FBR2kzRSxHQUFHeFAsR0FBRSxTQUFVQSxHQUFHLElBQUlubUUsRUFBRSxJQUFJMjFFLEdBQUdqM0UsR0FBRSxTQUFVeW5FLEVBQUV6bkUsR0FBR0EsRUFBRXEzRSxHQUFHMFIsS0FBSy9vRixHQUFHc0IsR0FBR3RCLEVBQUUsSUFBSSxTQUFTeW5FLEVBQUV6bkUsR0FBRyxPQUFPazNFLEdBQUdsM0UsS0FBSzQzRSxHQUFHL3lFLEVBQUU0ckUsRUFBRWhKLElBQUl6bkUsRUFBRSxLQUFLQSxFQUEvQyxDQUFrREEsRUFBRXluRSxHQUFHLE9BQU9BLEVBQUV6aUQsTUFBTThYLFNBQVN4N0IsS0FBbkssQ0FBeUttbUUsRUFBRTlHLElBQUksSUFBSTk3RCxFQUFFLENBQUMsZUFBZSxVQUFVLGNBQWMsY0FBYyxVQUFVLFVBQVUsUUFBUSxPQUFPNGlFLEVBQS9iLENBQWtjLElBQUlzbkIsR0FBRzdjLEVBQUU4YyxNQUFNLFNBQVN2bkIsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXVELEVBQUUsT0FBTzR5RSxHQUFHNXlFLEtBQUt2RCxFQUFFLFFBQVF1RCxHQUFHaStELEVBQUVqK0QsS0FBS3ZELEVBQUUsR0FBRzIxRSxHQUFHcHlFLEdBQUUsU0FBVTRpRSxFQUFFNWlFLEdBQUd2RCxFQUFFLFFBQVF1RCxHQUFHNGlFLE1BQU1pbkIsR0FBR2puQixFQUFFbm1FLEVBQUV0QixJQUFJaXZGLEdBQUcvYyxFQUFFZ2QsUUFBUSxTQUFTem5CLEdBQUcsU0FBUzVpRSxFQUFFNGlFLEdBQUcsT0FBTyxTQUFTNWlFLEVBQUU3RSxHQUFHNkUsRUFBRTJwRixHQUFHM3BGLEdBQUdveUUsR0FBR3B5RSxHQUFFLFNBQVVBLEdBQUdBLEVBQUVzcUYsbUJBQW1CMW5CLEVBQUV6bkUsT0FBTyxNQUFNLENBQUM4bUIsT0FBT2ppQixFQUFFLGVBQWVtaUQsTUFBTW5pRCxFQUFFLFlBQVk4bUQsT0FBTzltRCxFQUFFLGFBQWF5L0MsUUFBUXovQyxFQUFFLGVBQTFMLEdBQTRNdXFGLEdBQUdsZCxFQUFFbWQsUUFBUSxTQUFTNW5CLEdBQUcsSUFBSTVpRSxHQUFHNGlFLEVBQUUrbUIsR0FBRy9tQixJQUFJLEdBQUduOEIsd0JBQXdCLE1BQU0sQ0FBQ0ssS0FBSzltQyxFQUFFOG1DLEtBQUtua0MsT0FBTytzRCxZQUFZMW9CLElBQUlobkMsRUFBRWduQyxJQUFJcmtDLE9BQU9pdEQsWUFBWXlRLE1BQU0va0UsS0FBSzJnRSxNQUFNajhELEVBQUVxZ0UsT0FBT0MsT0FBT2hsRSxLQUFLMmdFLE1BQU1qOEQsRUFBRXNnRSxVQUFVbXFCLEdBQUdwZCxFQUFFcWQsVUFBVSxTQUFTOW5CLEdBQUcsU0FBUzVpRSxFQUFFNGlFLEdBQUcsT0FBTyxTQUFTNWlFLEVBQUU3RSxHQUFHLElBQUlzQixHQUFHdUQsRUFBRTJwRixHQUFHM3BGLElBQUksR0FBRyxHQUFHaytELEVBQUUvaUUsR0FBRyxPQUFPc0IsRUFBRUEsRUFBRW1tRSxHQUFHLEdBQUdubUUsR0FBRzIxRSxHQUFHcHlFLEdBQUUsU0FBVUEsR0FBR0EsRUFBRTRpRSxHQUFHem5FLE1BQU0sTUFBTSxDQUFDc3VDLEtBQUt6cEMsRUFBRSxhQUFhd0csS0FBS3hHLEVBQUUsZUFBZTlFLElBQUk4RSxFQUFFLFVBQWxMLEdBQStMMnFGLEdBQUd0ZCxFQUFFdWQsUUFBUSxTQUFTaG9CLEdBQUdBLEVBQUUrbUIsR0FBRy9tQixHQUFHd1AsR0FBR3hQLEdBQUUsU0FBVUEsR0FBRyxJQUFJNWlFLEVBQUU0aUUsRUFBRXIyQyxXQUFXdnNCLEdBQUdBLEVBQUVxdUIsWUFBWXUwQyxPQUFPaW9CLEdBQUd4ZCxFQUFFeWQsTUFBTSxTQUFTbG9CLEdBQUdBLEVBQUUsU0FBU0EsR0FBR0EsRUFBRSttQixHQUFHL21CLEdBQUd3UCxHQUFHeFAsR0FBRSxTQUFVQSxJQUFHLFNBQVVBLEdBQUcsTUFBTSxRQUFRN21DLGlCQUFpQjZtQyxFQUFFLElBQUlxbkIsaUJBQWlCLFlBQW5FLENBQWdGcm5CLEtBQUtBLEVBQUV6aUQsTUFBTThrQixRQUFRLFNBQVMyOUIsR0FBRyxJQUFJem5FLEVBQUVzQixFQUE2TCxPQUEzTHVELEVBQUU0aUUsS0FBS3puRSxFQUFFbVYsU0FBU3lKLGNBQWM2b0QsR0FBR3R5RCxTQUFTd3JDLGdCQUFnQnh0QixZQUFZbnpCLEdBQUdzQixFQUFFcy9CLGlCQUFpQjVnQyxFQUFFLElBQUk4dUYsaUJBQWlCLFdBQVc5dUYsRUFBRW94QixXQUFXOEIsWUFBWWx6QixHQUFHLFFBQVFzQixJQUFJQSxFQUFFLFNBQVN1RCxFQUFFNGlFLEdBQUdubUUsR0FBVXVELEVBQUU0aUUsR0FBeE4sQ0FBNE5BLEVBQUVtb0IsZUFBZSxJQUFJL3FGLEVBQUUsR0FBRyxPQUFPNGlFLEVBQXRaLENBQXlaLElBQUlrYixHQUFHelEsRUFBRTJkLE1BQU1wTixHQUFHLENBQUNtTCxXQUFXLFdBQVd0b0YsS0FBS3dFLFNBQVNBLE1BQU0sV0FBV3hFLEtBQUt3cUYsT0FBTyxHQUFHeHFGLEtBQUtpL0QsS0FBSyxHQUFHajZELEtBQUssU0FBU205RCxHQUFHLE9BQU9uaUUsS0FBS3dxRixPQUFPeGxGLEtBQUttOUQsS0FBS25pRSxLQUFLaS9ELE1BQU12NUQsSUFBSSxXQUFXLEdBQUcxRixLQUFLaS9ELEtBQUssT0FBT2ovRCxLQUFLaS9ELE9BQU9qL0QsS0FBS3dxRixPQUFPOWtGLE9BQU8ra0YsS0FBSyxXQUFXLE9BQU96cUYsS0FBS3dxRixPQUFPeHFGLEtBQUtpL0QsS0FBSyxJQUFJcDNELFFBQVEsU0FBU3M2RCxFQUFFNWlFLEdBQUdBLEVBQUVyQixVQUFVakMsT0FBTyxFQUFFc0QsRUFBRVMsS0FBSyxJQUFJLElBQUl0RixFQUFFc0YsS0FBS3dxRixPQUFPeHVGLEVBQUVnRSxLQUFLaS9ELEtBQUssRUFBRTVELEVBQUUsRUFBRXIvRCxHQUFHLEVBQUVBLElBQUlxL0QsSUFBSThHLEVBQUU3bkUsS0FBS2lGLEVBQUU3RSxFQUFFc0IsR0FBR3EvRCxFQUFFcjdELE9BQU9rb0YsTUFBTSxXQUFXLE9BQU94YSxFQUFFMXRFLEtBQUt3cUYsV0FBV0UsR0FBRzlkLEVBQUUrZCxTQUFTLFNBQVN4b0IsR0FBRyxTQUFTNWlFLElBQUksT0FBTSxFQUFHLFNBQVM3RSxJQUFJLE9BQU0sRUFBRyxTQUFTc0IsRUFBRXVELEdBQUcsSUFBSTdFLEVBQUVzQixFQUFFZ0UsS0FBS2cwQixPQUFPejBCLEVBQUU4TCxNQUFNck4sRUFBRXE5RCxFQUFFL2dFLEtBQUswRixLQUFLVCxFQUFFdkQsR0FBR3VELEVBQUUsSUFBSTRpRSxFQUFFOFMsTUFBTTExRSxHQUFHLElBQUksSUFBSW9rQyxFQUFFekgsRUFBRXNyQyxFQUFFLEdBQUd0ckMsRUFBRWwrQixFQUFFd3BFLFFBQVFqb0UsRUFBRXFyRix3QkFBd0IsSUFBSXJyRixFQUFFc3JGLFVBQVUzdUQsRUFBRWxVLEdBQUcyYixFQUFFLEdBQUdqcEMsRUFBRXdoQyxFQUFFemIsU0FBU2tqQixRQUFRcGtDLEVBQUV1ckYsa0NBQWlDLElBQUtwd0YsRUFBRStULFFBQVF0USxNQUFNKzlCLEVBQUVsVSxHQUFHLENBQUN6b0IsTUFBTUEsRUFBRW1zRCxpQkFBaUJuc0QsRUFBRXdyRixtQkFBbUIsU0FBUzF2QixFQUFFOEcsRUFBRTVpRSxHQUFHLElBQUk3RSxFQUFFc0IsRUFBRXEvRCxFQUFFcjlELEVBQUUybEMsRUFBRXcrQixFQUFFaDlELE9BQU8rMkIsRUFBRSxHQUFHc3JDLEVBQUVqb0UsRUFBRXlyRixjQUFjLEdBQUdybkQsRUFBRWxILFNBQVMsS0FBS2tILElBQUkzakMsS0FBSzJqQyxFQUFFQSxFQUFFN1gsWUFBWTlyQixLQUFLLENBQUMsSUFBSWhFLEVBQUUsR0FBR2dDLEVBQUUsRUFBRUEsRUFBRXdwRSxFQUFFeHBFLFNBQUksSUFBU2hDLEVBQUV0QixHQUFHMmdFLEVBQUU5N0QsRUFBRXZCLElBQUl3eEQsU0FBUyxPQUFPeHpELEVBQUV0QixHQUFHNDNFLEdBQUd0eUUsS0FBS2lwRixpQkFBaUJ2dUYsR0FBR2lwQyxJQUFJM25DLEVBQUV0QixJQUFJc0IsRUFBRWdKLEtBQUtxMkQsR0FBR3IvRCxFQUFFQyxRQUFRaWdDLEVBQUVsM0IsS0FBSyxDQUFDZ2pCLEdBQUcyYixFQUFFbGpCLFNBQVN6a0IsSUFBSSxPQUFPd3JFLEVBQUVqb0UsRUFBRXRELFFBQVFpZ0MsRUFBRWwzQixLQUFLLENBQUNnakIsR0FBR2hvQixLQUFLeWdCLFNBQVNsaEIsRUFBRTlCLE1BQU0rcEUsS0FBS3RyQyxFQUFFLE9BQU9pbUMsRUFBRSxDQUFDNTlELElBQUksU0FBUzQ5RCxFQUFFNWlFLEVBQUU3RSxFQUFFMmdFLEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUUsQ0FBQzZyQixTQUFTOTBELEVBQUUrVCxRQUFRNHNELEdBQUc4RyxFQUFFbnVDLFNBQVNtdUMsRUFBRW51QyxPQUFPLEtBQUtoMkIsRUFBRW1rRSxFQUFFbnVDLE9BQU96MEIsT0FBT3ZCLEVBQUVta0UsRUFBRW51QyxPQUFPejBCLEdBQUcsSUFBSXlyRixjQUFjLEVBQUU3b0IsRUFBRTcrRCxpQkFBaUIvRCxHQUFFLFdBQVl2RCxFQUFFbUMsTUFBTWdrRSxFQUFFamtFLGNBQWEsSUFBS3hELEVBQUVzRCxFQUFFdEIsT0FBT3NCLEVBQUVndEYsZ0JBQWdCLEVBQUVybkQsR0FBRzNsQyxFQUFFZ0gsS0FBSzIrQixJQUFJdG5DLE9BQU8sU0FBUzhsRSxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsR0FBRyxJQUFJcS9ELEVBQUU4RyxFQUFFbnVDLE9BQU8sR0FBR3FuQyxHQUFHQSxFQUFFOTdELEdBQUcsSUFBSSxJQUFJdkIsRUFBRTJsQyxFQUFFMDNCLEVBQUU5N0QsR0FBRzI4QixFQUFFeUgsRUFBRTFuQyxPQUFPaWdDLEtBQUtsK0IsRUFBRTJsQyxFQUFFekgsR0FBR3hoQyxHQUFHc0QsRUFBRXd4RCxVQUFVOTBELEdBQUdzRCxFQUFFeVEsU0FBU3pTLElBQUkybkMsRUFBRWpuQyxPQUFPdy9CLEVBQUUsR0FBR2wrQixFQUFFd3hELFVBQVU3ckIsRUFBRXFuRCxrQkFBa0IvVixNQUFNa0ksR0FBRyxDQUFDa0wsVUFBVSxRQUFRQyxXQUFXLFNBQVNubUIsR0FBR25pRSxLQUFLaXJGLFVBQVU5b0IsR0FBRytvQixtQkFBbUJ4d0YsRUFBRWt3RixxQkFBcUJsd0YsRUFBRW93Riw4QkFBOEJwd0YsRUFBRWd4RCxlQUFlLFdBQVcsSUFBSXlXLEVBQUVuaUUsS0FBS2lyRixVQUFVanJGLEtBQUtrckYsbUJBQW1CM3JGLEVBQUU0aUUsR0FBR0EsRUFBRXpXLGdCQUFnQnlXLEVBQUV6VyxrQkFBa0JxL0IsZ0JBQWdCLFdBQVcsSUFBSTVvQixFQUFFbmlFLEtBQUtpckYsVUFBVWpyRixLQUFLNHFGLHFCQUFxQnJyRixFQUFFNGlFLEdBQUdBLEVBQUU0b0IsaUJBQWlCNW9CLEVBQUU0b0IsbUJBQW1CaDZELHlCQUF5QixXQUFXLElBQUlveEMsRUFBRW5pRSxLQUFLaXJGLFVBQVVqckYsS0FBSzhxRiw4QkFBOEJ2ckYsRUFBRTRpRSxHQUFHQSxFQUFFcHhDLDBCQUEwQm94QyxFQUFFcHhDLDJCQUEyQi93QixLQUFLK3FGLHNCQUFobEQsQ0FBdW1ELElBQUlJLEdBQUd2ZSxFQUFFMTJELE9BQU8sU0FBU2lzRCxHQUFHLFNBQVM1aUUsRUFBRTRpRSxHQUFHLE9BQU8sU0FBUzVpRSxFQUFFN0UsRUFBRXNCLEVBQUVxL0QsR0FBRzk3RCxFQUFFMnBGLEdBQUczcEYsR0FBR2srRCxFQUFFcEMsS0FBS0EsRUFBRXIvRCxFQUFFQSxPQUFFLEdBQVEyMUUsR0FBR3B5RSxHQUFFLFNBQVVBLEdBQUdtckYsR0FBR3ZvQixHQUFHNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxPQUFPLE1BQU0sQ0FBQ2pxRCxHQUFHN1IsRUFBRSxPQUFPaTZFLElBQUlqNkUsRUFBRSxXQUE5SSxHQUE0Sis5RSxHQUFHMVEsRUFBRTVoRSxPQUFPLFdBQVcsSUFBSSxJQUFJbTNELEVBQUUrYSxHQUFHaC9FLFdBQVdxQixFQUFFLEdBQUc3RSxFQUFFLEVBQUVzQixFQUFFbW1FLEVBQUVsbUUsT0FBT3ZCLEVBQUVzQixFQUFFdEIsSUFBSTZFLEVBQUVBLEVBQUV5TCxPQUFPa3lFLEdBQUcvYSxFQUFFem5FLEtBQUssT0FBTzZFLEdBQUc2ckYsR0FBR3hlLEVBQUV5ZSxPQUFPLFNBQVNscEIsRUFBRTVpRSxFQUFFN0UsR0FBRzZFLEVBQUU0bUYsR0FBRzVtRixFQUFFN0UsR0FBRyxJQUFJLElBQUlzQixFQUFFNHhFLEVBQUV6TCxHQUFHOUcsRUFBRXIvRCxFQUFFQyxPQUFPK0IsRUFBRSxHQUFHMmxDLEVBQUUsRUFBRUEsRUFBRTAzQixFQUFFMTNCLElBQUksQ0FBQyxJQUFJekgsRUFBRWxnQyxFQUFFMm5DLEdBQUczbEMsRUFBRWsrQixHQUFHMzhCLEVBQUU0aUUsRUFBRWptQyxHQUFHQSxFQUFFaW1DLEdBQUcsT0FBT25rRSxHQUFHdS9FLEdBQUczUSxFQUFFMGUsV0FBVy9oQixFQUFFLEdBQUdBLEVBQUUsU0FBU3BILEdBQUcsT0FBTzZPLEdBQUc3TyxHQUFHQSxFQUFFdm1FLEtBQUksU0FBVXVtRSxHQUFHLE9BQU9vSCxFQUFFcEgsTUFBTTNFLEVBQUUyRSxLQUFLb1AsR0FBR3BQLEdBQUdpcEIsR0FBR2pwQixHQUFFLFNBQVVBLEdBQUcsT0FBT29ILEVBQUVwSCxNQUFNQSxJQUFJb3BCLEdBQUczZSxFQUFFbHBDLEtBQUssU0FBU3krQixFQUFFNWlFLEVBQUU3RSxHQUFHNkUsRUFBRTRtRixHQUFHNW1GLEVBQUU3RSxHQUFHLElBQUksSUFBSXNCLEdBQUdvMUUsR0FBR2pQLElBQUl5TCxFQUFFekwsR0FBRzlHLEdBQUdyL0QsR0FBR21tRSxHQUFHbG1FLE9BQU8rQixFQUFFLEVBQUVBLEVBQUVxOUQsRUFBRXI5RCxJQUFJLENBQUMsSUFBSTJsQyxFQUFFM25DLEVBQUVBLEVBQUVnQyxHQUFHQSxFQUFFLEdBQUd1QixFQUFFNGlFLEVBQUV4K0IsR0FBR0EsRUFBRXcrQixHQUFHLE9BQU0sRUFBRyxPQUFNLEdBQUlxcEIsR0FBRzVlLEVBQUU2ZSxPQUFPLFNBQVN0cEIsR0FBRyxTQUFTNWlFLEVBQUU0aUUsR0FBRyxPQUFPZ1EsR0FBR2hRLEdBQUdBLEVBQUVwbUUsTUFBTSxPQUFPbWhGLEdBQUcvYSxHQUFHLE9BQU9BLEVBQUUsQ0FBQzU5RCxJQUFJLFNBQVM3SixFQUFFc0IsR0FBR3RCLEVBQUV3dUYsR0FBR3h1RixHQUFHLElBQUkyZ0UsRUFBRTk3RCxFQUFFdkQsR0FBRzIxRSxHQUFHajNFLEdBQUUsU0FBVTZFLEdBQUcsSUFBSTdFLEVBQUUsR0FBR2kzRSxHQUFHdFcsR0FBRSxTQUFVci9ELEdBQUdtbUUsRUFBRTc5RCxJQUFJL0UsRUFBRXZELElBQUl0QixFQUFFc0ssS0FBS2hKLE1BQU0sSUFBSXRCLEVBQUV1QixTQUFTc0QsRUFBRThvRixZQUFZOW9GLEVBQUU4b0YsVUFBVSxJQUFJLElBQUkzdEYsRUFBRXcxQixLQUFLLFVBQVU1ckIsSUFBSSxTQUFTNjlELEVBQUU1aUUsR0FBRzRpRSxFQUFFK21CLEdBQUcvbUIsR0FBRyxJQUFJem5FLEVBQUUsSUFBSW9ILE9BQU8sVUFBVXZDLEVBQUUsV0FBVyxPQUFPZ3NGLEdBQUdwcEIsR0FBRSxTQUFVQSxHQUFHLE9BQU96bkUsRUFBRWlJLEtBQUt3L0QsRUFBRWttQixlQUFlcUQsT0FBTyxTQUFTbnNGLEVBQUU3RSxHQUFHNkUsRUFBRTJwRixHQUFHM3BGLEdBQUdveUUsR0FBR3B5RSxHQUFFLFNBQVVBLEdBQUcsSUFBSTRpRSxFQUFFNzlELElBQUkvRSxFQUFFN0UsR0FBRyxPQUFPeW5FLEVBQUU1OUQsSUFBSWhGLEVBQUU3RSxHQUFHeW5FLEVBQUU5bEUsT0FBT2tELEVBQUU3RSxPQUFPMkIsT0FBTyxTQUFTOGxFLEVBQUV6bkUsR0FBR3luRSxFQUFFK21CLEdBQUcvbUIsR0FBRyxJQUFJbm1FLEVBQUV1RCxFQUFFN0UsR0FBR2kzRSxHQUFHeFAsR0FBRSxTQUFVQSxHQUFHd1AsR0FBRzMxRSxHQUFFLFNBQVV1RCxHQUFHNGlFLEVBQUVqcEMsVUFBVTc4QixPQUFPa0QsV0FBOWlCLENBQTJqQixJQUFJaStFLEdBQUc1USxFQUFFcUIsRUFBRSxTQUFTOUwsR0FBR0EsRUFBRSxTQUFTQSxHQUFHLE9BQU8sSUFBSTRtQixHQUFHNW1CLElBQUk0bUIsR0FBR3Y5RSxRQUFRLENBQUM4N0MsT0FBTyxXQUFXLE9BQU93aUMsR0FBRzlwRixPQUFPMnJGLEtBQUssV0FBVyxPQUFPM3JGLEtBQUt1NUIsSUFBSSxVQUFVLFNBQVMyRSxLQUFLLFdBQVcsT0FBT2tzRCxHQUFHcHFGLE1BQU1BLE1BQU1xa0UsTUFBTSxXQUFXLE9BQU9sQyxFQUFFbmlFLEtBQUssS0FBS3dTLEtBQUssV0FBVyxPQUFPMnZELEVBQUV6aEQsRUFBRTFnQixRQUFRcUQsSUFBSSxTQUFTOCtELEdBQUcsT0FBT25pRSxLQUFLbWlFLElBQUl5cEIsR0FBRyxTQUFTcnNGLEdBQUcsT0FBTzRpRSxFQUFFbmlFLEtBQUtULEtBQUs2UixHQUFHLFNBQVMrd0QsRUFBRTVpRSxFQUFFN0UsR0FBRyxPQUFPeXdGLEdBQUcvNUUsR0FBR3BSLEtBQUttaUUsRUFBRTVpRSxFQUFFN0UsR0FBR3NGLE1BQU13NUUsSUFBSSxTQUFTclgsRUFBRTVpRSxFQUFFN0UsR0FBRyxPQUFPeXdGLEdBQUczUixJQUFJeDVFLEtBQUttaUUsRUFBRTVpRSxFQUFFN0UsR0FBR3NGLE1BQU1ncEMsS0FBSyxTQUFTbTVCLEdBQUcsSUFBSTVpRSxFQUFFeXFGLEdBQUdoaEQsS0FBS2hwQyxLQUFLbWlFLEdBQUcsT0FBTzFFLEVBQUUwRSxHQUFHNWlFLEVBQUVTLE1BQU0rRixLQUFLLFNBQVNvOEQsR0FBRyxJQUFJNWlFLEVBQUV5cUYsR0FBR2prRixLQUFLL0YsS0FBS21pRSxHQUFHLE9BQU8xRSxFQUFFMEUsR0FBRzVpRSxFQUFFUyxNQUFNdkYsSUFBSSxTQUFTMG5FLEdBQUcsSUFBSTVpRSxFQUFFeXFGLEdBQUd2dkYsSUFBSXVGLEtBQUttaUUsR0FBRyxPQUFPMUUsRUFBRTBFLEdBQUc1aUUsRUFBRVMsTUFBTXU1QixJQUFJLFNBQVM0b0MsRUFBRXpuRSxHQUFHLElBQUlzQixFQUFFc3RGLEdBQUd0cEYsS0FBS21pRSxFQUFFem5FLEdBQUcsT0FBTzZFLEVBQUU0aUUsRUFBRXpuRSxHQUFHc0IsRUFBRWdFLE1BQU1xckIsS0FBSyxTQUFTODJDLEVBQUV6bkUsR0FBRyxJQUFJc0IsRUFBRW90RixHQUFHcHBGLEtBQUttaUUsRUFBRXpuRSxHQUFHLE9BQU82RSxFQUFFNGlFLEVBQUV6bkUsR0FBR3NCLEVBQUVnRSxNQUFNNkYsS0FBSyxTQUFTczhELEVBQUV6bkUsR0FBRyxJQUFJc0IsRUFBRXl0RixHQUFHenBGLEtBQUttaUUsRUFBRXpuRSxHQUFHLE9BQU82RSxFQUFFNGlFLEVBQUV6bkUsR0FBR3NCLEVBQUVnRSxNQUFNNnJGLE9BQU8sU0FBUzFwQixHQUFHLE9BQU9pbkIsR0FBRy9zRixPQUFPMkQsS0FBS21pRSxHQUFHbmlFLE1BQU0zRCxPQUFPLFdBQVcsT0FBTzZ0RixHQUFHbHFGLE1BQU1BLE1BQU1pNUIsU0FBUyxTQUFTa3BDLEdBQUcsT0FBT3FwQixHQUFHam5GLElBQUl2RSxLQUFLbWlFLEdBQUduaUUsTUFBTThyRixRQUFRLFNBQVMzcEIsR0FBRyxPQUFPcXBCLEdBQUdudkYsT0FBTzJELEtBQUttaUUsR0FBR25pRSxNQUFNK3JGLFlBQVksU0FBUzVwQixHQUFHLE9BQU9xcEIsR0FBR0UsT0FBTzFyRixLQUFLbWlFLEdBQUduaUUsTUFBTWdzRixTQUFTLFNBQVM3cEIsR0FBRyxPQUFPcXBCLEdBQUdsbkYsSUFBSXRFLEtBQUttaUUsSUFBSTE3RCxPQUFPLFdBQVcsT0FBTzA3RCxFQUFFbmlFLEtBQUssR0FBRzhyQixhQUFhdTZCLE9BQU8sU0FBUzhiLEdBQUcsT0FBT3duQixHQUFHdGpDLE9BQU9ybUQsS0FBS21pRSxHQUFHbmlFLE1BQU1nL0MsUUFBUSxTQUFTbWpCLEdBQUcsT0FBT3duQixHQUFHM3FDLFFBQVFoL0MsS0FBS21pRSxHQUFHbmlFLE1BQU13aEIsT0FBTyxTQUFTMmdELEdBQUcsT0FBT3duQixHQUFHbm9FLE9BQU94aEIsS0FBS21pRSxHQUFHbmlFLE1BQU0waEQsTUFBTSxTQUFTeWdCLEdBQUcsT0FBT3duQixHQUFHam9DLE1BQU0xaEQsS0FBS21pRSxHQUFHbmlFLFFBQVEsSUFBSVQsRUFBRSxTQUFTNGlFLEVBQUU1aUUsR0FBRyxPQUFPaytELEVBQUVsK0QsSUFBSTR5RSxHQUFHaFEsSUFBSSxPQUFPQSxFQUEvMEMsQ0FBazFDLElBQUk4cEIsR0FBR3JmLEVBQUVzZixXQUFXLFNBQVMvcEIsR0FBR0EsRUFBRSxDQUFDZ3FCLFFBQVEsU0FBU2hxQixHQUFHLE9BQU96bkUsRUFBRXluRSxHQUFHNWlFLEVBQUU0aUUsR0FBR25pRSxLQUFLbWlFLEtBQUssTUFBTWlxQixRQUFRLFNBQVNqcUIsRUFBRW5tRSxHQUFHdEIsRUFBRXluRSxHQUFHNWlFLEVBQUU0aUUsR0FBR25tRSxFQUFFZ0UsS0FBS21pRSxHQUFHbm1FLEdBQUdxd0YsV0FBVyxTQUFTbHFCLEdBQUd6bkUsRUFBRXluRSxVQUFVNWlFLEVBQUU0aUUsVUFBVW5pRSxLQUFLbWlFLElBQUl0bEUsSUFBSSxTQUFTc2xFLEdBQUcsSUFBSTVpRSxFQUFFdkQsSUFBSSxPQUFPbW1FLEdBQUcsR0FBR0EsRUFBRTVpRSxFQUFFdEQsT0FBT3NELEVBQUU0aUUsR0FBRyxNQUFNMzlELE1BQU0sV0FBVyxJQUFJLElBQUkyOUQsRUFBRXpuRSxFQUFFMmdFLElBQUlyL0QsRUFBRSxFQUFFbW1FLEVBQUV6bkUsRUFBRXNCLEdBQUdBLFdBQVdnRSxLQUFLbWlFLEdBQUd6bkUsRUFBRXNELElBQUksSUFBSSxJQUFJMmxDLEVBQUV6SCxFQUFFLEVBQUV5SCxFQUFFanBDLEVBQUV3aEMsR0FBR0EsV0FBVzM4QixFQUFFb2tDLEtBQUtucUMsT0FBT2tJLGVBQWV5Z0UsRUFBRSxTQUFTLENBQUMxZ0UsWUFBVyxFQUFHRyxjQUFhLEVBQUd5QixJQUFJLFdBQVcsT0FBT3JILElBQUlDLFVBQVUsSUFBSXNELEVBQUUsR0FBRzdFLEVBQUUsQ0FBQ3l4RixRQUFRLEVBQUVDLFFBQVEsRUFBRUMsV0FBVyxFQUFFeHZGLElBQUksRUFBRTJILE1BQU0sRUFBRXZJLE9BQU8sR0FBRyxTQUFTRCxJQUFJLE9BQU9xL0QsSUFBSXJ3RCxPQUFPaE4sS0FBSyxTQUFTcTlELElBQUksT0FBT3VTLEVBQUV6TCxHQUFHdDdDLFFBQU8sU0FBVXM3QyxHQUFHLE9BQU96bkUsRUFBRXluRSxNQUFNLFNBQVNua0UsSUFBSSxPQUFPNHZFLEVBQUVydUUsR0FBRyxPQUFPNGlFLEVBQTNuQixDQUE4bkIsSUFBSXNiLEdBQUc3USxFQUFFMGYsWUFBWSxTQUFTbnFCLEdBQUcsSUFBSTVpRSxFQUFFLE9BQU80aUUsRUFBRUEsR0FBRyxTQUFTLElBQUksUUFBUTVpRSxFQUFFMkMsT0FBT3FxRixhQUFhLE1BQU0sSUFBSSxVQUFVaHRGLEVBQUUyQyxPQUFPc3FGLGVBQWUsSUFBSSxJQUFJOXhGLEVBQUUscUJBQXFCOEUsS0FBSzBoQixNQUFNM2hCLEVBQUU2c0YsUUFBUTF4RixFQUFFQSxHQUFHLElBQUlzQixFQUFFdUQsRUFBRTRzRixRQUFRenhGLEdBQUcsR0FBRzZFLEVBQUU4c0YsV0FBVzN4RixHQUFHc0IsSUFBSXRCLEVBQUUsTUFBTSxJQUFJKzFELE1BQU0sTUFBTTBSLEdBQUcsT0FBTzhwQixHQUFHLE9BQU8xc0YsR0FBR2t0RixHQUFHN2YsRUFBRW4zQixLQUFLLFNBQVMwc0IsSUFBSUEsRUFBRSxTQUFTQSxFQUFFOUcsR0FBRyxHQUFHb0MsRUFBRTBFLEdBQUcsT0FBT25rRSxFQUFFLEdBQUd0RCxHQUFFLFNBQVV5bkUsRUFBRTVpRSxHQUFHdkIsRUFBRW1rRSxHQUFHNWlFLEtBQUt2QixFQUFFLElBQUlBLEVBQUUsR0FBR20wRSxHQUFHaFEsSUFBSTFFLEVBQUVwQyxJQUFJMlYsR0FBRzdPLEdBQUcsT0FBTyxTQUFTQSxHQUFHLElBQUlnUSxHQUFHaFEsR0FBRyxDQUFDLElBQUk1aUUsRUFBRSxHQUFHLE9BQU83RSxHQUFFLFNBQVVBLEVBQUVzQixHQUFHczJFLEdBQUduUSxFQUFFem5FLEtBQUs2RSxFQUFFN0UsR0FBR3NCLE1BQU11RCxFQUFFLElBQUk4N0QsRUFBRXIvRCxFQUFFbW1FLEdBQUcsR0FBRzlHLEVBQUUsT0FBT0EsRUFBRWxpQyxhQUFhLFdBQXJILENBQWlJZ3BDLEdBQUcsSUFBSXgrQixFQUFFdytCLEVBQUUzRSxFQUFFNzVCLE1BQU1BLEVBQUUsSUFBSXcrQixHQUFHOUcsR0FBRyxTQUFTOEcsR0FBR3dQLEdBQUd4UCxHQUFFLFNBQVVBLEVBQUV6bkUsR0FBRyxJQUFJMmdFLEVBQUVyL0QsRUFBRXRCLEdBQUcsR0FBRzJnRSxFQUFFLE9BQU9BLEVBQUVodUMsYUFBYSxVQUFVODBDLElBQUk5RyxFQUFFOTdELEVBQUUrWixjQUFjLFNBQVMrVCxhQUFhLE9BQU8zeUIsR0FBRzJnRSxFQUFFaHVDLGFBQWEsVUFBVTgwQyxHQUFHNWlFLEVBQUVtdEYsS0FBSzcrRCxZQUFZd3RDLE1BQXJMLENBQTRMMTNCLEtBQUt0bkMsT0FBTyxTQUFTOGxFLEdBQUdBLEVBQUUrYSxHQUFHL2EsR0FBR3dQLEdBQUd4UCxHQUFFLFNBQVVBLEdBQUcsSUFBSXpuRSxFQUFFc0IsRUFBRW1tRSxHQUFHem5FLEdBQUc2RSxFQUFFbXRGLEtBQUs5K0QsWUFBWWx6QixPQUFPLElBQUk2RSxFQUFFc1EsU0FBUyxTQUFTblYsRUFBRXluRSxHQUFHLElBQUl6bkUsRUFBRTZFLEVBQUUwcEYsaUJBQWlCLFFBQVF0WCxHQUFHajNFLEdBQUUsU0FBVTZFLEdBQUcsSUFBSTdFLEVBQUU2RSxFQUFFNDVCLGFBQWEsUUFBUW45QixFQUFFdUQsRUFBRTQ1QixhQUFhLFdBQVd6K0IsR0FBR3NCLEdBQUdtbUUsRUFBRXpuRSxFQUFFc0IsTUFBTSxTQUFTQSxFQUFFbW1FLEdBQUcsT0FBTzVpRSxFQUFFMHRCLGNBQWMsY0FBY2sxQyxFQUFFLE1BQU0sT0FBT0EsRUFBbHdCLENBQXF3QixJQUFJdWIsR0FBRzlRLEVBQUUrZixNQUFNLFNBQVN4cUIsR0FBRyxHQUFHeVAsR0FBR3pQLEdBQUcsT0FBT0EsRUFBRSxHQUFHM0UsRUFBRTJFLEdBQUcsQ0FBQyxJQUFJNWlFLEVBQUVneUUsR0FBR3BQLEVBQUV5cUIsU0FBU3pxQixFQUFFeXFCLFVBQVV6cUIsRUFBRUEsRUFBRTNFLEVBQUVqK0QsR0FBR0EsRUFBRSxHQUFHQSxFQUFFLE9BQU80eUUsR0FBR2hRLElBQUlBLEVBQUUsSUFBSUEsRUFBRUEsR0FBR0EsR0FBR3diLEdBQUcvUSxFQUFFdFAsR0FBRyxTQUFTNkUsR0FBR0EsRUFBRSxTQUFTQSxHQUFHLEdBQUdnUSxHQUFHaFEsR0FBRyxDQUFDLElBQUk5RyxFQUFFOEcsRUFBRW4vRCxNQUFNaEgsR0FBRyxPQUFPcS9ELEVBQUVxaUIsR0FBR3JpQixFQUFFLElBQUk5N0QsRUFBRTg3RCxFQUFFLElBQUksTUFBTSxFQUFFLElBQUksSUFBSXI5RCxFQUFFbWtFLEVBQUV4K0IsRUFBRSxLQUFLekgsRUFBRSxFQUFFc3JDLEVBQUU5c0UsRUFBRXVCLE9BQU9pZ0MsRUFBRXNyQyxFQUFFdHJDLElBQUksR0FBR2wrQixHQUFHdUIsRUFBRTdFLEVBQUV3aEMsSUFBSSxDQUFDeUgsRUFBRWpwQyxFQUFFd2hDLEdBQUcsTUFBTSxRQUFRbCtCLEVBQUV1QixFQUFFb2tDLElBQUlpcUIsUUFBUSxHQUFHanFCLEdBQUcsSUFBSXBrQyxFQUFFLENBQUMrOUQsR0FBRyxFQUFFcGhDLEVBQUUsS0FBSzM4QixFQUFFMHpCLEVBQUUsR0FBRzF6QixFQUFFMjhCLEVBQUUzOEIsRUFBRXlsQyxFQUFFLEdBQUd6bEMsRUFBRTB6QixFQUFFMXpCLEVBQUU4WixFQUFFLEdBQUc5WixFQUFFeWxDLEVBQUV6bEMsRUFBRTJ2RCxFQUFFLE9BQU8zdkQsRUFBRThaLEVBQUUsSUFBSTNlLEVBQUUsQ0FBQyxJQUFJLElBQUksSUFBSSxJQUFJLEtBQUtzQixFQUFFLG1DQUFtQyxPQUFPbW1FLEVBQXRVLENBQXlVLElBQUl5YixHQUFHaFIsRUFBRWlnQixNQUFNLFNBQVMxcUIsR0FBRyxPQUFPQSxHQUFHQSxFQUFFdWIsR0FBR3ZiLElBQUlBLEVBQUUsRUFBRSxJQUFJQSxFQUFFQSxFQUFFLEdBQUcwYixHQUFHalIsRUFBRWtnQixjQUFjLFNBQVMzcUIsR0FBR0EsRUFBRSxTQUFTQSxHQUFHLElBQUlua0UsRUFBRXE5RCxFQUFFOEcsR0FBR0EsRUFBRUEsSUFBSXFNLEVBQUVoc0UsVUFBVUMsVUFBVSxLQUFLdkcsY0FBYyxTQUFTLEdBQUc4QixFQUFFLE1BQU0sQ0FBQ210QixRQUFRbnRCLEVBQUUyUyxLQUFLLE1BQU0sR0FBR2pXLEVBQUVpSSxLQUFLdy9ELEdBQUcsTUFBTSxDQUFDaDNDLFFBQVEsR0FBR3hhLEtBQUssTUFBTSxJQUFJLElBQUlnekIsRUFBRSxFQUFFekgsRUFBRWxnQyxFQUFFQyxPQUFPMG5DLEVBQUV6SCxFQUFFeUgsSUFBSSxDQUFDLElBQUk2akMsRUFBRXhyRSxFQUFFMm5DLEdBQUcxbEMsRUFBRWtrRSxFQUFFbi9ELE1BQU16RCxFQUFFaW9FLElBQUksR0FBRyxNQUFNdnBFLEVBQUUsQ0FBQyxJQUFJWixFQUFFdWdGLEdBQUczL0UsRUFBRSxHQUFHbEMsTUFBTSxLQUFLLElBQUksTUFBTSxVQUFVeXJFLElBQUlucUUsRUFBRWcrRCxFQUFFOEcsRUFBRSxhQUFhOWtFLEdBQUcsQ0FBQ3NULEtBQUs2MkQsRUFBRXI4QyxRQUFROXRCLElBQUksTUFBTSxDQUFDc1QsS0FBSyxVQUFVd2EsU0FBUyxJQUFJLElBQUk1ckIsRUFBRSxDQUFDd3RGLEtBQUssbUJBQW1CQyxRQUFRLDZCQUE2QkMsTUFBTSwyQkFBMkJDLFFBQVEscUJBQXFCQyxJQUFJLHdDQUF3Q0MsT0FBTyw4QkFBOEJDLE9BQU8sbURBQW1EM3lGLEVBQUUsZUFBZXNCLEVBQUU0eEUsRUFBRXJ1RSxHQUFHLFNBQVM4N0QsRUFBRThHLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXluRSxFQUFFMWxFLFFBQVE4QyxHQUFHLEdBQUc3RSxHQUFHLEVBQUUsT0FBT2tqRixHQUFHemIsRUFBRTd6QixVQUFVNXpDLEVBQUU2RSxFQUFFdEQsT0FBT2ttRSxFQUFFMWxFLFFBQVEsSUFBSS9CLEtBQUssT0FBT3luRSxFQUF4dkIsQ0FBMnZCLElBQUkyYixHQUFHbFIsRUFBRTU4RCxTQUFTLFNBQVNteUQsR0FBRyxTQUFTNWlFLEVBQUU0aUUsR0FBRyxHQUFHLG1CQUFtQkEsRUFBRSxNQUFNLElBQUloYSxVQUFVZ2EsRUFBRSxzQkFBc0IsT0FBT0EsRUFBRSxNQUFPLGlCQUFZLElBQVNubUUsRUFBRSxZQUFZbXhFLElBQUlueEUsS0FBS0EsRUFBRWdVLFNBQVNoVSxFQUFFZ1UsU0FBUyxtQkFBbUJxckQsRUFBRSxTQUFTOEcsR0FBRzlHLEVBQUU5N0QsRUFBRTRpRSxLQUFLLFNBQVNBLEdBQUc1eUQsV0FBV2hRLEVBQUU0aUUsR0FBRyxJQUF0UCxHQUE4UDRiLEdBQUduUixFQUFFMXJELElBQUkxaEIsS0FBSzBoQixLQUFLLFdBQVcsT0FBTSxJQUFLMWhCLE1BQU1DLFdBQVc2dEYsR0FBRzFnQixFQUFFanRCLFFBQVFncEIsR0FBRSxTQUFVeEcsRUFBRTVpRSxHQUFHLE9BQU8sV0FBVyxJQUFJN0UsRUFBRSxHQUFHLE9BQU9BLEdBQUdBLEVBQUVBLEVBQUVzUSxPQUFPekwsSUFBSXlMLE9BQU9reUUsR0FBR2gvRSxZQUFZaWtFLEVBQUVoa0UsTUFBTTZCLEtBQUt0RixPQUFPNnlGLEdBQUczZ0IsRUFBRTlzRSxLQUFLd3RGLEdBQUdyZ0IsRUFBRSxHQUFHK1EsR0FBR3BSLEVBQUU0Z0IsUUFBUSxTQUFTcnJCLEdBQUcsT0FBT0EsRUFBRWdiLEdBQUcsQ0FBQ21MLFdBQVcsV0FBV3RvRixLQUFLMG5CLFFBQVExbkIsS0FBSzBuQixTQUFTLElBQUl0VyxHQUFHLFNBQVMrd0QsRUFBRTVpRSxHQUFHLE9BQU9TLEtBQUswbkIsUUFBUXk2QyxHQUFHbmlFLEtBQUswbkIsUUFBUXk2QyxJQUFJLEdBQUduaUUsS0FBSzBuQixRQUFReTZDLEdBQUduOUQsS0FBS3pGLEdBQUdTLE1BQU13NUUsSUFBSSxTQUFTclgsRUFBRTVpRSxHQUFHLEdBQUdtK0QsRUFBRTE5RCxLQUFLMG5CLFFBQVF5NkMsR0FBRyxPQUFPbmlFLEtBQUswbkIsUUFBUXk2QyxHQUFHemxFLE9BQU9zRCxLQUFLMG5CLFFBQVF5NkMsR0FBRzFsRSxRQUFROEMsR0FBRyxHQUFHUyxNQUFNRixLQUFLLFNBQVNxaUUsRUFBRTVpRSxHQUFHLE9BQU9TLEtBQUtvUixHQUFHK3dELEVBQUVvckIsR0FBR2h1RixJQUFJUyxNQUFNK2hCLEtBQUssU0FBU29nRCxHQUFHLEdBQUd6RSxFQUFFMTlELEtBQUswbkIsUUFBUXk2QyxHQUFHLENBQUMsSUFBSTVpRSxFQUFFaXFFLEVBQUV0ckUsVUFBVSxHQUFHLE9BQU95ekUsR0FBRzN4RSxLQUFLMG5CLFFBQVF5NkMsSUFBRyxTQUFVQSxHQUFHQSxFQUFFaGtFLE1BQU02QixLQUFLVCxLQUFLUyxNQUFNQSxRQUFRLENBQUNzbUIsTUFBTSxTQUFTL21CLEdBQUdveUUsR0FBRyxDQUFDLEtBQUssTUFBTSxPQUFPLFNBQVEsU0FBVWozRSxHQUFHNkUsRUFBRTdFLEdBQUd5bkUsRUFBRWhvRSxVQUFVTyxNQUFNNkUsRUFBRW1vQixRQUFRbm9CLEVBQUVtb0IsU0FBUyxNQUEvaUIsQ0FBc2pCLElBQUl1MkQsR0FBR3JSLEVBQUU2Z0IsT0FBTyxTQUFTdHJCLEdBQUcsT0FBT0EsRUFBRTZiLEdBQUd4L0UsT0FBTyxDQUFDOHBGLFdBQVcsU0FBUy9vRixFQUFFN0UsR0FBR3NGLEtBQUsyUSxLQUFLcFIsRUFBRVMsS0FBSzB0RixTQUFTandCLEVBQUUvaUUsR0FBR3luRSxFQUFFd3JCLE1BQU1DLE1BQU1sekYsR0FBR3NGLEtBQUt3b0YsVUFBVXhLLEdBQUcsYUFBYTkvRSxZQUFZd3ZGLFNBQVMsU0FBU251RixHQUFHLE9BQU80eUUsR0FBRzV5RSxLQUFLQSxFQUFFNGlFLEVBQUV3ckIsTUFBTXB1RixFQUFFakMsa0JBQWtCMEMsS0FBSzZ0RixPQUFPdHVGLEdBQUdTLE9BQU80eEUsR0FBR3J5RSxLQUFLUyxLQUFLNnRGLE9BQU90dUYsR0FBR1MsT0FBTzh0RixTQUFTLFdBQVcsT0FBTzl0RixLQUFLNnRGLFFBQVFFLFVBQVUsU0FBUzVyQixFQUFFNWlFLEdBQUcsT0FBT0EsR0FBR3l1RixNQUFNLFdBQVcsT0FBT2h1RixLQUFLaXVGLEtBQUssUUFBUS92RixZQUFZZ3dGLE1BQU0sV0FBVyxPQUFPbHVGLEtBQUtpdUYsS0FBSyxRQUFRL3ZGLFlBQVlpUSxLQUFLLFdBQVcsT0FBT25PLEtBQUtpdUYsS0FBSyxPQUFPL3ZGLFlBQVl1RyxLQUFLLFdBQVcsT0FBT3pFLEtBQUtpdUYsS0FBSyxPQUFPL3ZGLFlBQVkyUSxNQUFNLFdBQVcsT0FBTzdPLEtBQUtpdUYsS0FBSyxRQUFRL3ZGLFlBQVkrdkYsS0FBSyxTQUFTMXVGLEVBQUU3RSxHQUFHLE9BQU8sS0FBS0EsRUFBRXdpRixHQUFHeGlGLElBQUl1QixTQUFhK0QsS0FBSytoQixLQUFLLE1BQU14aUIsRUFBRXk5RSxHQUFHdGlGLElBQUl5bkUsRUFBRXdyQixNQUFNcHVGLEVBQUVqQyxlQUFlMEMsS0FBSzZ0RixTQUFTN3RGLEtBQUsraEIsS0FBS3hpQixFQUFFeTlFLEdBQUd0aUYsS0FBSyxVQUFVNkUsRUFBRXFQLFFBQVFreUUsSUFBSWx5RSxRQUFRclAsSUFBSXBCLE1BQU15USxRQUFRNU8sS0FBSyt0RixVQUFVeHVGLEVBQUU3RSxNQUE3SnNGLE9BQTBLLENBQUMydEYsTUFBTSxJQUFJbEYsR0FBRyxDQUFDMEYsTUFBTSxFQUFFUCxNQUFNLEVBQUVRLEtBQUssRUFBRUMsS0FBSyxFQUFFQyxNQUFNLEVBQUVDLE9BQU8sTUFBbjNCLENBQTAzQixJQUFJQyxHQUFHNWhCLEVBQUU2aEIsV0FBV3pRLEdBQUd4L0UsT0FBTyxDQUFDNnBGLFVBQVUsYUFBYUMsV0FBVyxTQUFTbm1CLEdBQUcsSUFBSTVpRSxFQUFFUyxLQUFLQSxLQUFLd29GLFVBQVV4SyxHQUFHLGNBQWNoK0UsS0FBSzB1RixLQUFLeHNGLE9BQU95c0YsV0FBV3hzQixHQUFHbmlFLEtBQUswdUYsS0FBS25WLGFBQVksV0FBWWg2RSxFQUFFd2lCLEtBQUt4aUIsRUFBRThqRixVQUFVLFFBQVEsZUFBZUEsUUFBUSxXQUFXLE9BQU9yakYsS0FBSzB1RixLQUFLam9FLFdBQVd5M0QsR0FBR3RSLEVBQUVnaUIsWUFBWTNwQyxFQUFFLElBQUl1cEMsR0FBRyxnQ0FBZ0MsV0FBVyxPQUFPdnBDLEVBQUVvK0IsWUFBWXdMLEdBQUdqaUIsRUFBRXB2QixNQUFNd2dDLEdBQUd4L0UsT0FBTyxDQUFDOHBGLFdBQVcsU0FBU25tQixHQUFHbmlFLEtBQUt3b0YsVUFBVXhLLEdBQUcsYUFBYTkvRSxXQUFXOEIsS0FBSytqQixNQUFNbytDLEdBQUcsR0FBR25pRSxLQUFLOHVGLEtBQUs5dUYsS0FBSytqQixRQUFRMWYsSUFBSSxTQUFTODlELEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXkzRSxHQUFHaFEsSUFBSXpuRSxFQUFFLElBQUl5bkUsR0FBRzVpRSxFQUFFaStELEVBQUUyRSxLQUFLem5FLEVBQUV5bkUsR0FBRyxJQUFJbm1FLEVBQUVnRSxLQUFLMnhFLEdBQUdqM0UsR0FBRSxTQUFVeW5FLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXNCLEVBQUUrbkIsTUFBTXhrQixHQUFHdkQsRUFBRStuQixNQUFNeGtCLEdBQUc0aUUsRUFBRW5tRSxFQUFFK2xCLEtBQUssU0FBU3hpQixFQUFFNGlFLEVBQUV6bkUsTUFBTXNGLEtBQUs4dUYsS0FBSzl1RixLQUFLK2pCLFFBQVExZ0IsSUFBSSxTQUFTOCtELEdBQUcsSUFBSTVpRSxFQUFFUyxLQUFLK2pCLE1BQU0sR0FBR291RCxHQUFHaFEsR0FBRyxPQUFPNWlFLEVBQUU0aUUsR0FBRyxJQUFJem5FLEVBQUUsR0FBRyxPQUFPaTNFLEdBQUd4UCxHQUFFLFNBQVVBLEdBQUd6bkUsRUFBRXluRSxHQUFHNWlFLEVBQUU0aUUsTUFBTXpuRSxHQUFHMkIsT0FBTyxTQUFTOGxFLEdBQUdBLEVBQUUrYSxHQUFHL2EsR0FBRyxJQUFJNWlFLEVBQUVTLEtBQUsrakIsTUFBTTR0RCxHQUFHeFAsR0FBRSxTQUFVQSxVQUFVNWlFLEVBQUU0aUUsTUFBTW5pRSxLQUFLOHVGLEtBQUt2dkYsSUFBSWlGLE1BQU0sV0FBV3hFLEtBQUsrakIsTUFBTSxHQUFHL2pCLEtBQUs4dUYsS0FBSzl1RixLQUFLK2pCLFFBQVFnM0MsS0FBSyxTQUFTb0gsR0FBR3dQLEdBQUczeEUsS0FBSytqQixNQUFNbytDLElBQUkyc0IsS0FBSyxTQUFTM3NCLEdBQUduaUUsS0FBSytqQixNQUFNbytDLEtBQUtnYyxHQUFHdlIsRUFBRW1pQixZQUFZLFNBQVM1c0IsR0FBRyxJQUFJNWlFLEVBQUUyQyxPQUFPOHNGLE9BQU8sT0FBTzdzQixFQUFFLENBQUM5K0QsSUFBSSxXQUFXLEdBQUc5RCxFQUFFLENBQUMsSUFBSTRpRSxFQUFFOE8sR0FBRzF4RSxFQUFFLG9CQUFvQixHQUFHNGlFLEVBQUUsT0FBT0EsRUFBRXBtRSxNQUFNLEtBQUsyVyxRQUFRLE9BQU94USxPQUFPK3NGLFdBQVcvc0YsT0FBT2d0RixZQUFZLFlBQVksYUFBYWxSLEdBQUcxM0QsTUFBTTY3QyxHQUFHamdFLE9BQU9vQixpQkFBaUIscUJBQW9CLFdBQVlpTSxZQUFXLFdBQVk0eUQsRUFBRXBnRCxLQUFLLFNBQVNvZ0QsRUFBRTkrRCxTQUFTLFFBQU8sR0FBSTgrRCxFQUFyVSxDQUF3VSxJQUFJaWMsR0FBR3hSLEVBQUV1aUIsUUFBUSxTQUFTaHRCLEdBQUcsSUFBSTVpRSxFQUFFN0UsRUFBRTh5RSxFQUFFaHRFLFlBQVl4RSxFQUFFd3hFLEVBQUUrSyxRQUFRLEdBQUc3OUUsR0FBR0EsRUFBRXdtQixJQUFJaWhELEVBQUUsV0FBVyxPQUFPem5FLEVBQUV3bUIsWUFBWSxHQUFHbGxCLEdBQUdBLEVBQUVvekYsT0FBTyxDQUFDLElBQUkvekIsRUFBRSxXQUFXLElBQUk4RyxFQUFFbm1FLEVBQUVvekYsU0FBUyxPQUFPLElBQUlqdEIsRUFBRSxHQUFHQSxFQUFFLElBQUk1aUUsRUFBRTg3RCxJQUFJLElBQUlyL0QsRUFBRXF6RixTQUFTbHRCLEVBQUUsV0FBVyxPQUFPOUcsSUFBSTk3RCxHQUFHLFVBQVVBLEVBQUV3K0UsS0FBSzViLEVBQUUsV0FBVyxPQUFPNGIsS0FBS3grRSxHQUFHLE9BQU80aUUsRUFBeFEsQ0FBMlEsSUFBSWtjLEdBQUd6UixFQUFFOVQsS0FBSyxTQUFTcUosRUFBRTVpRSxFQUFFN0UsR0FBRyxHQUFHeTNFLEdBQUc1eUUsS0FBS0EsRUFBRSxDQUFDQSxJQUFJeXhFLEdBQUd6eEUsR0FBRyxDQUFDLElBQUl2RCxFQUFFdUQsRUFBRUEsRUFBRSxTQUFTNGlFLEVBQUU1aUUsR0FBRyxPQUFPK3lFLEdBQUd0MkUsRUFBRXVELElBQUksSUFBSTg3RCxFQUFFLEdBQUdyOUQsRUFBRSxTQUFTbWtFLEVBQUV6bkUsR0FBRzZFLEVBQUU0aUUsRUFBRXpuRSxLQUFLMmdFLEVBQUUzZ0UsR0FBR3luRSxJQUFJLE9BQU96bkUsSUFBSXNELEVBQUUsU0FBU21rRSxFQUFFem5FLEdBQUc2RSxFQUFFNGlFLEVBQUV6bkUsS0FBSzJnRSxFQUFFM2dFLEdBQUd5bkUsS0FBS3dQLEdBQUd4UCxFQUFFbmtFLEdBQUdxOUQsR0FBR2lqQixHQUFHMVIsRUFBRTBpQixRQUFRLFNBQVNudEIsR0FBRyxPQUFPdWIsR0FBR3ZiLEVBQUVobEUsUUFBUSxLQUFLLE1BQU1vaEYsR0FBRzNSLEVBQUVweUMsSUFBSSxTQUFTMm5DLEdBQUcsSUFBSTVpRSxFQUFFN0UsRUFBRXNCLEVBQUUsRUFBRSxHQUFHd3lFLEVBQUUsQ0FBQ2p2RSxFQUFFMkMsT0FBT3U0QixzQkFBc0IvL0IsRUFBRXdILE9BQU9xdEYscUJBQXFCLElBQUksSUFBSWwwQixFQUFFLENBQUMsS0FBSyxNQUFNLFNBQVMsS0FBS3I5RCxFQUFFLEVBQUUybEMsRUFBRTAzQixFQUFFcC9ELE9BQU8rQixFQUFFMmxDLElBQUlwa0MsRUFBRXZCLElBQUl1QixFQUFFMkMsT0FBT201RCxFQUFFcjlELEdBQUcseUJBQXlCdEQsRUFBRXdILE9BQU9tNUQsRUFBRXI5RCxHQUFHLHlCQUF5QmtFLE9BQU9tNUQsRUFBRXI5RCxHQUFHLCtCQUErQixPQUFPdEQsRUFBRUEsR0FBRyxTQUFTeW5FLEdBQUd6a0QsYUFBYXlrRCxLQUFLNWlFLEVBQUVBLEdBQUcsU0FBUzRpRSxHQUFHLElBQUk1aUUsRUFBRXcrRSxLQUFLcmpGLEVBQUVHLEtBQUtvUCxJQUFJLEVBQUUsSUFBSTFLLEVBQUV2RCxJQUFJcS9ELEVBQUU5ckQsWUFBVyxXQUFZNHlELEVBQUU1aUUsRUFBRTdFLEtBQUtBLEdBQUcsT0FBT3NCLEVBQUV1RCxFQUFFN0UsRUFBRTJnRSxJQUFJbTBCLE9BQU85MEYsRUFBRTZFLEVBQS9hLEdBQW9iaS9FLEdBQUc1UixFQUFFNmlCLFNBQVMsU0FBU3R0QixHQUFHLElBQUk1aUUsRUFBRTdFLEVBQUV3SCxPQUFPbWpELFNBQVNycEQsRUFBRXRCLEVBQUVnMUYsU0FBU3IwQixFQUFFM2dFLEVBQUVvNUQsU0FBUzkxRCxFQUFFaEMsRUFBRUQsTUFBTSxLQUFLNG5DLEVBQUUwM0IsRUFBRXQvRCxNQUFNLEtBQUttZ0MsRUFBRSxHQUFHc3JDLEVBQUU3akMsRUFBRTFuQyxPQUFPLElBQUlvVCxJQUFJLElBQUksSUFBSXBSLEVBQUVELEVBQUUvQixPQUFPLEVBQUVnQyxHQUFHLEVBQUVBLElBQUksQ0FBQyxJQUFJWixFQUFFVyxFQUFFQyxHQUFHLEdBQUcsS0FBS1osRUFBRSxDQUFDLEdBQUdnUyxFQUFFLENBQUNxMUQsT0FBT3hvQyxFQUFFLEtBQUtBLEVBQUU3K0IsRUFBRUEsRUFBRSxJQUFJNitCLEVBQUVuWixLQUFLeGpCLEVBQUUsT0FBTzhQLEVBQUUsQ0FBQ3ExRCxPQUFPeG9DLElBQUksT0FBTyxJQUFJLElBQUk5K0IsRUFBRSxFQUFFQSxFQUFFb3FFLEVBQUVwcUUsSUFBSSxDQUFDLElBQUk0bkMsRUFBRXJCLEVBQUV2bUMsR0FBRyxHQUFHLEtBQUs0bkMsRUFBRSxDQUFDLEdBQUczMUIsRUFBRSxDQUFDcTFELE9BQU94b0MsRUFBRW5aLEtBQUt4akIsR0FBR3lsQyxLQUFLMzFCLEVBQUUsQ0FBQzBULEtBQUt4akIsSUFBSSxPQUFPLEdBQUc4UCxFQUFFLENBQUNxMUQsT0FBT3hvQyxFQUFFblosS0FBS3hqQixHQUFHLE9BQU84UCxFQUFFLENBQUMwVCxLQUFLeGpCLElBQUksVUFBVSxTQUFTOFAsRUFBRTlQLEdBQUcsT0FBT0EsRUFBRUEsR0FBRyxHQUFHc29GLEdBQUd4ckYsT0FBTzhsRSxFQUFFNWlFLElBQUlzb0YsR0FBR3hrRixJQUFJOCtELEtBQUsvd0QsR0FBR3c3RCxFQUFFK2lCLE1BQU0sU0FBU3h0QixHQUFHLElBQUk1aUUsRUFBRSxPQUFPLE9BQU8sU0FBUzRpRSxFQUFFem5FLEdBQUcsR0FBRyxNQUFNQSxFQUFFLE9BQU95bkUsRUFBRWhsRSxRQUFRb0MsRUFBRSxJQUFJLElBQUksSUFBSXZELEVBQUVxL0QsRUFBRXI5RCxFQUFFbWtFLEVBQUVsbUUsT0FBTyxFQUFFMG5DLEVBQUVqcEMsRUFBRXVCLE9BQU9pZ0MsR0FBRSxFQUFHQSxHQUFHbCtCLEdBQUcsR0FBRyxJQUFJaytCLEdBQUUsRUFBR2xnQyxHQUFHLEVBQUVxL0QsRUFBRThHLEVBQUUza0UsT0FBT1EsS0FBS2hDLEVBQUUybkMsR0FBRyxHQUFHMDNCLElBQUkzZ0UsRUFBRXNCLEdBQUcsQ0FBQ2tnQyxHQUFFLEVBQUdsK0IsSUFBSSxNQUFNLE9BQU9BLEdBQUcsRUFBRW1rRSxFQUFFN3pCLFVBQVUsRUFBRXR3QyxFQUFFLEdBQUcsSUFBaE8sR0FBdU95Z0YsR0FBRzdSLEVBQUVuNkMsS0FBSyxTQUFTMHZDLEdBQUcsSUFBSTVpRSxFQUFFLGFBQWEsT0FBTyxTQUFTNGlFLEVBQUV6bkUsR0FBRyxPQUFPLE1BQU1BLEVBQUV5bkUsRUFBRWhsRSxRQUFRb0MsRUFBRSxJQUFJeW1GLEdBQUc1MEUsR0FBRyt3RCxFQUFFem5FLEdBQUdBLElBQTlGLEdBQXFHazFGLEdBQUdoakIsRUFBRWlqQixZQUFZLFNBQVMxdEIsR0FBR0EsRUFBRSxTQUFTQSxHQUFHLElBQUl6bkUsRUFBRXdpRixHQUFHL2EsRUFBRW4vRCxNQUFNekQsSUFBSSxPQUFPZ3JDLEdBQUdueUIsR0FBRzFkLEdBQUUsU0FBVXluRSxHQUFHLE9BQU9zYyxHQUFHdGMsUUFBUSxJQUFJNWlFLEVBQUUsdUVBQXVFLE9BQU80aUUsRUFBakwsQ0FBb0wsSUFBSXVjLEdBQUc5UixFQUFFa2pCLFFBQVEsU0FBUzN0QixHQUFHLFNBQVM1aUUsRUFBRTRpRSxHQUFHLE1BQU0sWUFBWUEsRUFBRSxLQUFLQSxFQUFFLE9BQU8sT0FBTyxTQUFTQSxFQUFFem5FLEdBQUdBLEVBQUVBLEdBQUc2RSxFQUFFLElBQUl2RCxFQUFFNHpGLEdBQUd6dEIsR0FBRyxPQUFPd1AsR0FBRzMxRSxHQUFFLFNBQVV1RCxHQUFHNGlFLEVBQUVBLEVBQUVobEUsUUFBUSxJQUFJMkUsT0FBTzB1RSxHQUFHanhFLEdBQUcsS0FBSzdFLE1BQU15bkUsR0FBckssR0FBMks0dEIsR0FBR25qQixFQUFFNy9DLE1BQU0sU0FBU28xQyxHQUFHQSxFQUFFLENBQUNwMkIsTUFBTSxTQUFTbzJCLEdBQUcsSUFBSXpuRSxFQUFFLEdBQUcsT0FBT3luRSxFQUFFc2MsR0FBR3RjLEdBQUdobEUsUUFBUW9DLEVBQUUsSUFBSW95RSxHQUFHeFAsRUFBRXBtRSxNQUFNLE1BQUssU0FBVW9tRSxHQUFHLElBQUk1aUUsRUFBRTRpRSxFQUFFcG1FLE1BQU0sS0FBS0MsRUFBRXVELEVBQUVtVCxRQUFRMm9ELEVBQUU5N0QsRUFBRXRELE9BQU8sRUFBRXNELEVBQUUyd0IsS0FBSyxLQUFLLEtBQUtsMEIsRUFBRTJvRCxtQkFBbUIzb0QsR0FBR3EvRCxFQUFFMVcsbUJBQW1CMFcsR0FBR29DLEVBQUUvaUUsRUFBRXNCLElBQUl0QixFQUFFc0IsR0FBR3EvRCxFQUFFMlYsR0FBR3QyRSxFQUFFc0IsSUFBSXRCLEVBQUVzQixHQUFHZ0osS0FBS3EyRCxHQUFHM2dFLEVBQUVzQixHQUFHLENBQUN0QixFQUFFc0IsR0FBR3EvRCxNQUFNM2dFLEdBQUdZLFVBQVUsU0FBU2lFLEVBQUU3RSxHQUFHLE9BQU9raUYsR0FBR3hrRSxHQUFHN1ksR0FBRSxTQUFVQSxFQUFFdkQsR0FBRyxPQUFPd2hFLEVBQUVqK0QsSUFBSTh4RSxHQUFHOXhFLEdBQUcsR0FBR3l4RSxHQUFHenhFLEdBQUc0aUUsRUFBRTdtRSxVQUFVaUUsRUFBRXZELElBQUl0QixFQUFFK3BELG1CQUFtQi9wRCxHQUFHK3BELG1CQUFtQnpvRCxJQUFJLElBQUl5b0QsbUJBQW1CbGxELE9BQU0sU0FBVTRpRSxHQUFHLE9BQU9BLEVBQUVsbUUsT0FBTyxLQUFLaTBCLEtBQUssT0FBTyxJQUFJM3dCLEVBQUUsYUFBYSxPQUFPNGlFLEVBQWxnQixDQUFxZ0IsSUFBSTFxRCxHQUFHbTFELEVBQUVvakIsSUFBSSxTQUFTN3RCLEdBQUdBLEVBQUVnYixHQUFHLENBQUNrTCxVQUFVLE1BQU1DLFdBQVcsU0FBUy9vRixJQUFJQSxHQUFHaXZFLElBQUlqdkUsRUFBRTJDLE9BQU9takQsU0FBU25LLE1BQU02aEMsR0FBRy84RSxLQUFLbWlFLEVBQUVwMkIsTUFBTXhzQyxHQUFHLE1BQU0wd0YsU0FBUyxTQUFTOXRCLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXNGLEtBQUsrc0IsTUFBTSxPQUFPeXdDLEVBQUUyRSxHQUFHd1AsR0FBR3hQLEdBQUUsU0FBVUEsRUFBRTVpRSxHQUFHN0UsRUFBRTZFLEdBQUc0aUUsS0FBS3puRSxFQUFFeW5FLEdBQUc1aUUsRUFBRVMsTUFBTWt3RixRQUFRLFNBQVMvdEIsR0FBRyxJQUFJNWlFLEVBQUVTLEtBQUsrc0IsTUFBTSxPQUFPaWtELEdBQUc3TyxLQUFLQSxFQUFFK2EsR0FBRy9hLElBQUl3UCxHQUFHeFAsR0FBRSxTQUFVQSxVQUFVNWlFLEVBQUU0aUUsTUFBTW5pRSxNQUFNNUYsU0FBUyxXQUFXLE9BQU8rbkUsRUFBRTdtRSxVQUFVMEUsUUFBUSxDQUFDK3JDLE1BQU0sU0FBU28yQixHQUFHLElBQUk5RyxFQUFFLENBQUNsTixTQUFTLEdBQUdnaUMsS0FBSyxHQUFHVCxTQUFTLEdBQUd6OUUsS0FBSyxHQUFHOGEsTUFBTSxHQUFHcWpFLEtBQUssR0FBR3Q4QixTQUFTLEdBQUd1OEIsU0FBUSxHQUFJcnlGLEVBQUV5Z0YsR0FBR3RjLEdBQUd4K0IsR0FBRSxFQUFHekgsRUFBRWwrQixFQUFFZ0YsTUFBTXpELEdBQUcsR0FBRzI4QixJQUFJQSxFQUFFQSxFQUFFLEdBQUdtL0IsRUFBRWxOLFNBQVNqeUIsRUFBRWhnQyxjQUFjOEIsRUFBRUEsRUFBRThwRCxPQUFPNXJCLEVBQUVqZ0MsU0FBU2lnQyxJQUFJeUgsRUFBRSxPQUFPM2xDLEVBQUU4cEQsT0FBTyxFQUFFLE1BQU05cEQsRUFBRUEsRUFBRVAsTUFBTSxHQUFHNDlELEVBQUVnMUIsU0FBUSxHQUFJMXNELEVBQUUsQ0FBQyxJQUFJLElBQUk2akMsRUFBRXhwRSxFQUFFQyxHQUFHLEVBQUVaLEVBQUUsRUFBRUQsRUFBRXBCLEVBQUVDLE9BQU9vQixFQUFFRCxFQUFFQyxJQUFJLENBQUMsSUFBSTJuQyxFQUFFaG5DLEVBQUV2QixRQUFRVCxFQUFFcUIsS0FBSyxJQUFJMm5DLEtBQUssSUFBSS9tQyxHQUFHK21DLEVBQUUvbUMsS0FBS0EsRUFBRSttQyxHQUFHL21DLEdBQUcsSUFBSXVwRSxFQUFFeHBFLEVBQUVQLE1BQU0sRUFBRVEsR0FBR0QsRUFBRUEsRUFBRVAsTUFBTVEsSUFBSSxJQUFJb1IsRUFBRW00RCxFQUFFcnlDLFlBQVksTUFBTSxJQUFJOWxCLElBQUlnc0QsRUFBRTgwQixLQUFLeHJDLG1CQUFtQjZpQixFQUFFL3BFLE1BQU0sRUFBRTRSLElBQUltNEQsRUFBRUEsRUFBRS9wRSxNQUFNNFIsRUFBRSxJQUFJZ3NELEVBQUVxMEIsU0FBU2xvQixFQUFFLElBQUludUQsRUFBRW11RCxFQUFFeGtFLE1BQU10SSxHQUFHMmUsSUFBSSxPQUFPQSxFQUFFQSxFQUFFLE1BQU1naUQsRUFBRSswQixLQUFLLzJFLEVBQUV5dUMsT0FBTyxJQUFJdVQsRUFBRXEwQixTQUFTbG9CLEVBQUUxZixPQUFPLEVBQUUwZixFQUFFdnJFLE9BQU9vZCxFQUFFcGQsU0FBUyxJQUFJZ21FLEVBQUVqa0UsRUFBRXZCLFFBQVEsTUFBTSxJQUFJd2xFLElBQUk1RyxFQUFFcHBELEtBQUtqVSxFQUFFOHBELE9BQU9tYSxHQUFHamtFLEVBQUVBLEVBQUVQLE1BQU0sRUFBRXdrRSxJQUFJLElBQUl0b0UsRUFBRXFFLEVBQUV2QixRQUFRLEtBQUssT0FBTyxJQUFJOUMsSUFBSTBoRSxFQUFFdHVDLE1BQU1nakUsR0FBR2hrRCxNQUFNL3RDLEVBQUU4cEQsT0FBT251RCxFQUFFLElBQUlxRSxFQUFFQSxFQUFFUCxNQUFNLEVBQUU5RCxJQUFJMGhFLEVBQUV2SCxTQUFTOTFELEdBQUcsSUFBSXE5RCxHQUFHLy9ELFVBQVUsU0FBUzZtRSxHQUFHLElBQUk1aUUsRUFBRTRpRSxFQUFFaFUsVUFBVWdVLEVBQUVrdUIsUUFBUSxLQUFLLEtBQUtsdUIsRUFBRWd1QixLQUFLMXJDLG1CQUFtQjBkLEVBQUVndUIsTUFBTSxJQUFJLElBQUlodUIsRUFBRXV0QixVQUFVdnRCLEVBQUVpdUIsS0FBSyxJQUFJanVCLEVBQUVpdUIsS0FBSyxJQUFJanVCLEVBQUVyTyxTQUFTLE9BQU91ZCxHQUFHbFAsRUFBRXAxQyxTQUFTeHRCLEdBQUcsSUFBSXd3RixHQUFHejBGLFVBQVU2bUUsRUFBRXAxQyxRQUFRbzFDLEVBQUVsd0QsT0FBTzFTLEdBQUc0aUUsRUFBRWx3RCxNQUFNMVMsS0FBSyxJQUFJQSxFQUFFLG9CQUFvQjdFLEVBQUUsV0FBV3NCLEVBQUUsQ0FBQyxJQUFJLElBQUksS0FBSyxPQUFPbW1FLEVBQXQzQyxDQUF5M0MsSUFBSXdjLEdBQUcvUixFQUFFMGpCLFlBQVksU0FBU251QixHQUFHLElBQUk1aUUsRUFBRW1oQixFQUFFeWhELEVBQUVwbUUsTUFBTSxNQUFNLE9BQU93RCxFQUFFOUMsUUFBUSxNQUFNLElBQUk4QyxFQUFFay9FLEdBQUdsL0UsRUFBRXhELE1BQU0sS0FBSyxLQUFLLEtBQUt3RCxJQUFJQSxHQUFHNGlFLEVBQUUsSUFBSTFxRCxHQUFHMHFELElBQUl1dEIsVUFBVW53RixHQUFHcS9FLEdBQUdoUyxFQUFFMmpCLEtBQUssU0FBU3B1QixHQUFHLFNBQVM1aUUsRUFBRTRpRSxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsR0FBRyxPQUFPdTFFLEdBQUdoeUUsS0FBS3ZELEVBQUV0QixFQUFFQSxFQUFFNkUsRUFBRUEsRUFBRSxJQUFJLENBQUMwd0QsSUFBSWtTLEVBQUV0OEQsS0FBS3RHLEVBQUVpeEYsUUFBUTkxRixFQUFFKzFGLFNBQVN6MEYsR0FBRyxPQUFRbW1FLEVBQUUsU0FBUzVpRSxHQUFHczlFLEdBQUd0OUUsRUFBRTRpRSxFQUFFdXVCLFNBQVMsSUFBSWgyRixFQUFFc0IsRUFBRXVELEVBQUU4TCxLQUFLZ3dELEVBQUU5N0QsRUFBRTB3RCxJQUFJanlELEVBQUV1QixFQUFFc0csS0FBSzg5QixFQUFFcGtDLEVBQUVreEYsU0FBU3YwRCxFQUFFMzhCLEVBQUVpeEYsUUFBUWhwQixFQUFFam9FLEVBQUVzUCxNQUFNNVEsRUFBRXNCLEVBQUV5ZSxRQUFRM2dCLEVBQUVrQyxFQUFFb3hGLFNBQVN2ekYsRUFBRW1DLEVBQUVvM0UsTUFBTSxPQUFPdjVFLEVBQUVpL0UsbUJBQW1CLFdBQVcsR0FBRyxJQUFJai9FLEVBQUV3NUUsV0FBVyxDQUFDLElBQUl6VSxFQUFFemtELGFBQWFoakIsR0FBRyxJQUFJNkUsRUFBRW5DLEVBQUVtNkUsT0FBTyxHQUFHaDRFLEdBQUcsS0FBS0EsRUFBRSxLQUFLLE1BQU1BLEVBQUUsQ0FBQzRpRSxFQUFFL2tFLEVBQUVzNkUsYUFBYSxRQUFRL3pDLElBQUl3K0IsRUFBRS9rRSxFQUFFODZFLGFBQWEsSUFBSSxTQUFTdjBDLElBQUl3K0IsRUFBRTltRSxLQUFLMHdDLE1BQU1vMkIsSUFBSSxNQUFNQSxJQUFJam1DLEVBQUVpbUMsRUFBRS9rRSxRQUFRb3FFLEVBQUVwcUUsR0FBR0MsRUFBRUQsS0FBSyxRQUFRcEIsR0FBR2dDLEVBQUUreEYsR0FBR3owRixVQUFVMEMsR0FBR3E5RCxHQUFHQSxFQUFFNStELFFBQVEsTUFBTSxFQUFFLElBQUl1QixFQUFFLElBQUlBLEdBQUcsc0NBQXNDdUIsRUFBRXF4RixZQUFZcHpCLEVBQUV4L0QsS0FBS0EsRUFBRSt4RixHQUFHejBGLFVBQVUwQyxJQUFJLHFCQUFxQnVCLEVBQUVxeEYsYUFBYXB6QixFQUFFeC9ELEtBQUtBLEVBQUUzQyxLQUFLQyxVQUFVMEMsSUFBSVosRUFBRWlyQyxLQUFLcnNDLEVBQUVxL0QsR0FBRSxHQUFJaitELEVBQUUrNUUsaUJBQWlCLGVBQWU1M0UsRUFBRXF4RixhQUFhM3lGLEVBQUUsSUFBSXZELEVBQUU2VSxZQUFXLFdBQVluUyxFQUFFaS9FLG1CQUFtQm5SLEVBQUU5dEUsRUFBRW0xRCxRQUFRaVYsRUFBRXBxRSxFQUFFLFdBQVdDLEVBQUVELEtBQUthLElBQUliLEVBQUVrNkUsS0FBSyxRQUFRdDdFLEVBQUUsS0FBS2dDLEdBQUdaLElBQUlzekYsUUFBUSxDQUFDcmxGLEtBQUssTUFBTW1sRixRQUFRdGxCLEVBQUVyOEQsTUFBTXE4RCxFQUFFeWxCLFNBQVN6bEIsRUFBRXVsQixTQUFTLE9BQU9HLFlBQVksb0NBQW9DL3FGLEtBQUssR0FBRzh3RSxJQUFJLFdBQVcsT0FBTyxJQUFJNWUsZ0JBQWdCLzVDLFFBQVEsR0FBR21rRCxFQUFFOStELElBQUksV0FBVyxPQUFPOCtELEVBQUU1aUUsRUFBRXBCLE1BQU0sS0FBS0QsYUFBYWlrRSxFQUFFMHVCLEtBQUssV0FBVyxJQUFJbjJGLEVBQUU2RSxFQUFFcEIsTUFBTSxLQUFLRCxXQUFXLE9BQU94RCxFQUFFMlEsS0FBSyxPQUFPODJELEVBQUV6bkUsSUFBSXluRSxFQUE1b0MsQ0FBZ3BDLElBQUkwYyxHQUFHalMsRUFBRWtrQixTQUFTLFNBQVMzdUIsR0FBR0EsRUFBRSxTQUFTQSxHQUFHLElBQUl6bkUsRUFBRXdELFVBQVVqQyxPQUFPLFFBQUcsSUFBU2lDLFVBQVUsR0FBR0EsVUFBVSxHQUFHLEdBQUcyK0UsR0FBR25pRixFQUFFNkUsR0FBRyxJQUFJdkQsRUFBRXRCLEVBQUUybkIsS0FBS2c1QyxFQUFFM2dFLEVBQUVxMkYsV0FBVy95RixFQUFFLEdBQUcybEMsRUFBRSxHQUFHLFNBQVN6SCxFQUFFaW1DLEdBQUcsSUFBSTVpRSxFQUFFN0UsRUFBRXNELEVBQUV2QixRQUFRMGxFLEdBQUcsR0FBR3puRSxHQUFHLEVBQUUsT0FBT2lwQyxFQUFFanBDLEdBQUcsR0FBR3MyRSxHQUFHN08sR0FBRyxDQUFDNWlFLEVBQUUsR0FBR3ZCLEVBQUVnSCxLQUFLbTlELEdBQUd4K0IsRUFBRTMrQixLQUFLekYsR0FBRyxJQUFJLElBQUlpb0UsRUFBRSxFQUFFdnBFLEVBQUVra0UsRUFBRWxtRSxPQUFPdXJFLEVBQUV2cEUsRUFBRXVwRSxJQUFJLENBQUMsSUFBSW5xRSxFQUFFOGtFLEVBQUVxRixHQUFHeHJFLEdBQUd3aEUsRUFBRW5nRSxHQUFHa0MsRUFBRWlvRSxHQUFHdHJDLEVBQUU3K0IsR0FBR2tDLEVBQUVpb0UsR0FBR25xRSxPQUFPLENBQUNrQyxFQUFFLEdBQUd2QixFQUFFZ0gsS0FBS205RCxHQUFHeCtCLEVBQUUzK0IsS0FBS3pGLEdBQUcsSUFBSSxJQUFJbkMsRUFBRXd3RSxFQUFFekwsR0FBRzVnRCxLQUFLODVDLEdBQUdyMkIsRUFBRSxFQUFFMzFCLEVBQUVqUyxFQUFFbkIsT0FBTytvQyxFQUFFMzFCLEVBQUUyMUIsSUFBSSxDQUFDLElBQUkzckIsRUFBRWpjLEVBQUU0bkMsR0FBR2k5QixFQUFFRSxFQUFFOW9ELEdBQUdyZCxHQUFHd2hFLEVBQUV5RSxHQUFHMWlFLEVBQUU4WixHQUFHNmlCLEVBQUUrbEMsR0FBRzFpRSxFQUFFOFosR0FBRzRvRCxHQUFHLE9BQU8xaUUsRUFBRSxPQUFPMjhCLEVBQUVpbUMsSUFBSSxJQUFJNWlFLEVBQUUsQ0FBQzhpQixNQUFLLEVBQUcwdUUsV0FBV2pOLEdBQUdFLGVBQWUsT0FBTzdoQixFQUF6ZSxDQUE0ZSxJQUFJcGxFLEdBQUc2dkUsRUFBRXZoRSxLQUFLLFNBQVM4MkQsR0FBR0EsRUFBRSxTQUFTQSxHQUFHLElBQUl6bkUsSUFBSXdELFVBQVVqQyxPQUFPLFFBQUcsSUFBU2lDLFVBQVUsS0FBS0EsVUFBVSxHQUFHLEdBQUcsT0FBT2lrRSxFQUFFLE9BQU96bkUsRUFBRSxPQUFPLE9BQU8sUUFBRyxJQUFTeW5FLEVBQUUsT0FBT3puRSxFQUFFLFlBQVksWUFBWSxHQUFHK2hGLEdBQUd0YSxHQUFHLE9BQU96bkUsRUFBRSxNQUFNLE1BQU0sSUFBSXNCLEVBQUUyMEUsR0FBR3hPLEdBQUduL0QsTUFBTXpELEdBQUcsT0FBT3ZELEVBQUV0QixFQUFFc0IsRUFBRSxHQUFHRSxjQUFjRixFQUFFLEdBQUcsSUFBSSxJQUFJdUQsRUFBRSxzQkFBc0IsT0FBTzRpRSxFQUExUyxDQUE2UyxJQUFJNnVCLEdBQUdwa0IsRUFBRXR4RSxVQUFVLFNBQVM2bUUsRUFBRTVpRSxHQUFHLE9BQU9sRSxLQUFLQyxVQUFVNm1FLEVBQUUsV0FBVyxJQUFJQSxFQUFFLEdBQUc1aUUsRUFBRSxHQUFHLE9BQU8sU0FBUzdFLEVBQUVzQixHQUFHLEdBQUdtbUUsRUFBRWxtRSxPQUFPLEVBQUUsQ0FBQyxJQUFJby9ELEVBQUU4RyxFQUFFMWxFLFFBQVF1RCxNQUFNcTdELEdBQUcsR0FBRzhHLEVBQUV6bEUsT0FBTzIrRCxFQUFFLEdBQUc5N0QsRUFBRTdDLE9BQU8yK0QsRUFBRSxJQUFJM2dFLEtBQUt5bkUsRUFBRW45RCxLQUFLaEYsTUFBTVQsRUFBRXlGLEtBQUt0SyxJQUFJLElBQUlzRCxFQUFFbWtFLEVBQUUxbEUsUUFBUVQsR0FBR2dDLEdBQUcsSUFBSWhDLEVBQUVtbUUsRUFBRSxLQUFLbm1FLEVBQUUsZUFBZSxlQUFldUQsRUFBRTlCLE1BQU0sRUFBRU8sR0FBR2t5QixLQUFLLEtBQUssVUFBVWl5QyxFQUFFbjlELEtBQUtoSixHQUFHLE9BQU9zc0UsR0FBR3RzRSxJQUFJdTFFLEdBQUd2MUUsR0FBR0EsRUFBRSxJQUFJKzBFLEdBQUdoMEUsR0FBR2YsSUFBSSxJQUFJa3dFLEVBQUVsd0UsR0FBRyxJQUFJeWhFLEVBQUV6aEUsS0FBS0EsRUFBRSxNQUFNQSxHQUFqVSxHQUF1VXVELElBQUl1L0UsR0FBR2xTLEVBQUVxa0IsV0FBVyxTQUFTOXVCLEdBQUcsSUFBSTVpRSxFQUFFaytFLEdBQUcsU0FBUyxPQUFPb1IsR0FBR3J3RixPQUFPLENBQUM4cEYsV0FBVyxTQUFTbm1CLEVBQUV6bkUsR0FBR3NGLEtBQUtpakQsTUFBTWtmLEVBQUV6bkUsRUFBRUEsR0FBRyxHQUFHLElBQUlzQixFQUFFdUQsRUFBRTRzRixRQUFRaHFCLEdBQUcsSUFBSW5tRSxFQUFFWCxLQUFLMHdDLE1BQU0vdkMsR0FBRyxNQUFNbW1FLEdBQUdubUUsRUFBRSxHQUFHd2hFLEVBQUV4aEUsS0FBS0EsRUFBRSxJQUFJdEIsRUFBRW1pRixHQUFHN2dGLEVBQUV0QixHQUFHc0YsS0FBS3dvRixVQUFVcUcsR0FBRyxhQUFhLENBQUNuMEYsS0FBS28wRixLQUFLLFNBQVMzc0IsR0FBRyxHQUFHa1AsR0FBR2xQLEdBQUcsT0FBTzVpRSxFQUFFOHNGLFdBQVdyc0YsS0FBS2lqRCxPQUFPMWpELEVBQUU2c0YsUUFBUXBzRixLQUFLaWpELE1BQU0rdEMsR0FBRzd1QixPQUFqUyxHQUEyUzRjLEdBQUduUyxFQUFFc2tCLGFBQWEsU0FBUy91QixHQUFHLFNBQVM1aUUsRUFBRUEsRUFBRXZELEVBQUVxL0QsRUFBRXI5RCxHQUFHLElBQUkybEMsRUFBRSxHQUFHLE9BQU9ndUMsR0FBRzMxRSxHQUFFLFNBQVV1RCxHQUFHLElBQUl2RCxFQUFFa2dDLEVBQUUxaUMsT0FBT21RLHlCQUF5QjB4RCxFQUFFOTdELEdBQUdpb0UsRUFBRXRyQyxHQUFHQSxFQUFFNzRCLElBQUlwRixFQUFFaStCLEdBQUdBLEVBQUU3M0IsSUFBSSxJQUFJckcsRUFBRW16RixjQUFjM3BCLEVBQUV4ckUsRUFBRSxhQUFhLElBQUksR0FBR0EsRUFBRXEvRCxFQUFFOTdELEdBQUcreUUsR0FBR3QwRSxFQUFFb3pGLE9BQU9wMUYsR0FBRyxPQUFPK3JFLEdBQUcvckUsSUFBSUEsRUFBRWQsT0FBTSxlQUFnQixNQUFNaW5FLEdBQUdubUUsRUFBRW1tRSxFQUFFdFIsUUFBUWx0QixFQUFFMytCLEtBQUssR0FBR2dHLE9BQU90USxFQUFFNkUsR0FBRyxLQUFLeUwsT0FBT20zRCxFQUFFbm1FLEVBQUVnQyxLQUFLd3BFLEdBQUc3akMsRUFBRTMrQixLQUFLLEdBQUdnRyxPQUFPdFEsRUFBRSxPQUFPd3hFLEVBQUUzc0UsSUFBSSxLQUFLeUwsT0FBT20zRCxFQUFFam1DLEVBQUU3NEIsSUFBSXJGLEtBQUtDLEdBQUcwbEMsRUFBRTMrQixLQUFLLEdBQUdnRyxPQUFPdFEsRUFBRSxPQUFPd3hFLEVBQUUzc0UsSUFBSSxLQUFLeUwsT0FBT20zRCxFQUFFam1DLEVBQUU3M0IsSUFBSXJHLFFBQVEsSUFBSWdOLE9BQU96TCxFQUFFLE9BQU9va0MsRUFBRXpULEtBQUssS0FBSyxJQUFJLFNBQVN4MUIsRUFBRXluRSxHQUFHLE1BQU0sSUFBSW4zRCxPQUFPcXdELEVBQUU4RyxHQUFHLEtBQUssU0FBU25tRSxFQUFFbW1FLEdBQUcsTUFBTSxJQUFJbjNELE9BQU9xd0QsRUFBRTZRLEVBQUUvSixJQUFJLEtBQUssU0FBUzlHLEVBQUU4RyxHQUFHLE9BQU9pTyxHQUFHak8sR0FBR2hsRSxRQUFRLE9BQU8sS0FBS0EsUUFBUSxNQUFNLE9BQU9nbEUsRUFBRSxTQUFTem5FLEdBQUcsSUFBSTJnRSxFQUFFbjlELFVBQVVqQyxPQUFPLFFBQUcsSUFBU2lDLFVBQVUsR0FBR0EsVUFBVSxHQUFHLEdBQUd5bEMsRUFBRTAzQixFQUFFL2xCLEtBQUtwWixFQUFFbS9CLEVBQUVnMkIsVUFBVTdwQixPQUFFLElBQVN0ckMsRUFBRTZoRCxLQUFLN2hELEVBQUVqK0IsRUFBRW85RCxFQUFFcjlDLFFBQVEzZ0IsT0FBRSxJQUFTWSxFQUFFLEVBQUVBLEVBQUViLEVBQUVpK0QsRUFBRTlYLE1BQU12ZSxPQUFFLElBQVM1bkMsRUFBRSxFQUFFQSxFQUFFaVMsRUFBRWdzRCxFQUFFaTJCLFNBQVNqNEUsT0FBRSxJQUFTaEssRUFBRSxFQUFFQSxFQUFFNHlELEVBQUU1RyxFQUFFazJCLFFBQVE1M0YsT0FBRSxJQUFTc29FLEVBQUUsSUFBSWprRSxFQUFFaWtFLEVBQUV4bUIsRUFBRTRmLEVBQUVzckIsYUFBYTF6RCxPQUFFLElBQVN3b0IsR0FBR0EsRUFBRTM4QyxFQUFFdThELEVBQUUvakQsT0FBTzQzQyxPQUFFLElBQVNwd0QsR0FBR0EsRUFBRXlxRSxFQUFFbE8sRUFBRTgxQixhQUFhbHNDLE9BQUUsSUFBU3NrQixHQUFHQSxFQUFFSCxFQUFFL04sRUFBRSsxQixPQUFPbmpCLE9BQUUsSUFBUzdFLEVBQUUsR0FBR0EsRUFBRXdELEVBQUUsR0FBR2xzRCxFQUFFLENBQUM2d0UsUUFBUTUzRixFQUFFZ3RGLGFBQWExekQsRUFBRTNiLE9BQU80M0MsRUFBRWlpQyxhQUFhbHNDLEVBQUUxQixNQUFNdmUsRUFBRXNzRCxTQUFTajRFLEVBQUUsRUFBRTJFLFFBQVEzZ0IsRUFBRWcwRixVQUFVN3BCLEVBQUU0cEIsT0FBT25qQixHQUFHeFEsRUFBRTFnRSxHQUFHckMsR0FBRSxHQUFJLEdBQUcsV0FBVytpRSxFQUFFbVAsRUFBRTV3RSxFQUFFdEIsUUFBUSxHQUFHLFdBQVcraUUsRUFBRW1QLEVBQUVWLEVBQUV4eEUsR0FBRzYxRSxHQUFHM0QsRUFBRSxjQUFjQSxFQUFFLGFBQWE1aEUsT0FBTzRoRSxFQUFFLDRCQUE0QixHQUFHLFFBQVFuUCxFQUFFbVAsRUFBRSx1Q0FBdUMsR0FBRyxZQUFZblAsRUFBRW1QLEVBQUVseUUsRUFBRSxPQUFPLGFBQWEsR0FBRyxTQUFTK2lFLEVBQUVtUCxFQUFFLFlBQVksR0FBRyxjQUFjblAsRUFBRW1QLEVBQUUsNEJBQTRCLEdBQUcsV0FBV25QLEVBQUUsQ0FBQyxJQUFJRCxFQUFFLFNBQVMsSUFBSUEsRUFBRTBPLEVBQUV4eEUsR0FBRyxNQUFNeW5FLElBQUl5SyxFQUFFLFlBQVk1aEUsT0FBT2hQLEVBQUV3aEUsR0FBRyx5QkFBeUIsQ0FBQyxHQUFHbmdFLEdBQUcwZ0YsS0FBS3ZXLEVBQUVucUUsRUFBRSxPQUFPckIsRUFBRSxXQUFXLEdBQUdncEMsR0FBRzNyQixFQUFFMnJCLEVBQUUsT0FBT2hwQyxFQUFFLFNBQVM0d0UsRUFBRSxJQUFJLElBQUlsUCxFQUFFOEwsRUFBRSxHQUFHa0UsRUFBRS96RSxFQUFFMEosSUFBSTNJLEdBQUcsR0FBR2d6RSxHQUFHaFEsRUFBRWdRLEVBQUU5b0UsR0FBRzRrRSxFQUFFeGtFLEtBQUssZUFBZWdHLE9BQU8weUQsTUFBTUEsRUFBRS9qRSxFQUFFMEssSUFBSTNKLEdBQUc4dUUsRUFBRXhrRSxLQUFLLFFBQVFnRyxPQUFPMHlELEtBQUs4TCxFQUFFeGtFLEtBQUssV0FBV2dHLE9BQU95eUQsRUFBRSxNQUFNOFMsR0FBRzlTLEVBQUUsWUFBWStMLEVBQUV4a0UsS0FBSyxXQUFXZ0csT0FBT2hQLEVBQUVxMkUsR0FBRzMzRSxNQUFNLFdBQVcraUUsR0FBRytMLEVBQUV4a0UsS0FBSyxXQUFXZ0csT0FBT2hQLEVBQUV0QixNQUFNZ3pFLEVBQUUsQ0FBQyxJQUFJYyxFQUFFWixFQUFFbHpFLEdBQUcsR0FBRzh6RSxFQUFFdnlFLFFBQVF1dEUsRUFBRXhrRSxLQUFLekYsRUFBRSxhQUFhaXZFLEVBQUU3cUMsR0FBR2pwQyxFQUFFZ21CLElBQUl1UyxFQUFFLENBQUMsSUFBSWk0QyxFQUFFbWIsR0FBR0csR0FBRzlyRixFQUFFLENBQUNQLFdBQVUsRUFBR3dzRixjQUFhLElBQUtuWSxHQUFHdEQsRUFBRWp2RSxRQUFRdXRFLEVBQUV4a0UsS0FBS3pGLEVBQUUsZUFBZTJyRSxFQUFFdm5DLEdBQUdqcEMsRUFBRWdtQixJQUFJLEdBQUd3dUMsRUFBRSxDQUFDLElBQUkrZCxFQUFFMlAsR0FBRzRKLEdBQUc5ckYsRUFBRSxDQUFDUCxXQUFVLEVBQUdtZCxRQUFPLEtBQUssU0FBVTZxRCxHQUFHLE1BQU0sV0FBV2dMLElBQUloTCxNQUFNOEssRUFBRWh4RSxRQUFRdXRFLEVBQUV4a0UsS0FBS3pGLEVBQUUsU0FBUzB0RSxFQUFFdHBDLEdBQUdqcEMsRUFBRWdtQixJQUFJLElBQUkrc0QsRUFBRW9FLEdBQUduM0UsR0FBRyxHQUFHK3lFLElBQUk2RSxHQUFHckUsRUFBRVIsR0FBRyxDQUFDLElBQUkvUSxFQUFFLFdBQVcxeEQsT0FBT20zRCxFQUFFc0wsRUFBRXNQLEdBQUdyOEQsRUFBRSxDQUFDNDBCLEtBQUszUixHQUFHanBDLE1BQU04dUUsRUFBRXhrRSxLQUFLMDNELElBQUlrUSxHQUFHcEQsRUFBRXQ1QyxLQUFLLEtBQUssSUFBSSxPQUFPMDhDLEdBQUcsSUFBSTV1RSxFQUFFbS9FLEdBQUcsQ0FBQ21MLFdBQVcsV0FBV3RvRixLQUFLNEUsR0FBRyxFQUFFNUUsS0FBS3d4RixRQUFRLElBQUludEYsSUFBSSxTQUFTODlELEdBQUcsSUFBSTVpRSxFQUFFUyxLQUFLd3hGLFFBQVE5MkYsRUFBRXNGLEtBQUs0RSxHQUFHNUksRUFBRSxDQUFDNEksR0FBR2xLLEVBQUVELElBQUkwbkUsR0FBRyxPQUFPNWlFLEVBQUV5RixLQUFLaEosR0FBR2dFLEtBQUs0RSxLQUFLbEssR0FBRzJJLElBQUksU0FBUzgrRCxHQUFHLElBQUksSUFBSTVpRSxFQUFFUyxLQUFLd3hGLFFBQVE5MkYsRUFBRSxFQUFFc0IsRUFBRXVELEVBQUV0RCxPQUFPdkIsRUFBRXNCLEVBQUV0QixJQUFJLENBQUMsSUFBSTJnRSxFQUFFOTdELEVBQUU3RSxHQUFHLEdBQUd5bkUsSUFBSTlHLEVBQUU1Z0UsSUFBSSxPQUFPNGdFLEVBQUUsT0FBTSxLQUFNLE9BQU84RyxFQUFuNkUsQ0FBczZFLElBQUk2YyxHQUFHcFMsRUFBRTZrQixTQUFTLFNBQVN0dkIsRUFBRTVpRSxHQUFHLE9BQU9vdEUsRUFBRXhLLEVBQUU1aUUsR0FBRSxJQUFLMC9FLEdBQUdyUyxFQUFFOGtCLFNBQVMsU0FBU3Z2QixHQUFHLElBQUk1aUUsRUFBRSxHQUFHN0UsR0FBRSxFQUFHLFNBQVMyZ0UsRUFBRThHLEdBQUcsR0FBR3puRSxFQUFFLElBQUksSUFBSXNCLEVBQUUsRUFBRXEvRCxFQUFFOTdELEVBQUV0RCxPQUFPRCxFQUFFcS9ELEVBQUVyL0QsSUFBSXVELEVBQUV2RCxHQUFHbW1FLEdBQUcsT0FBT0EsRUFBRSxDQUFDN2pFLE1BQU0sV0FBVzVELEdBQUUsR0FBSTA2QyxLQUFLLFdBQVcxNkMsR0FBRSxHQUFJNitFLFlBQVksU0FBU3BYLEdBQUc1aUUsRUFBRXlGLEtBQUttOUQsSUFBSXd2QixXQUFXLFNBQVN4dkIsR0FBRyxJQUFJem5FLEVBQUU2RSxFQUFFOUMsUUFBUTBsRSxHQUFHem5FLEdBQUcsR0FBRzZFLEVBQUU3QyxPQUFPaEMsRUFBRSxJQUFJazNGLGVBQWUsV0FBV3J5RixFQUFFLEtBQUtpdkUsR0FBR3RzRSxPQUFPb0IsaUJBQWlCLFNBQVEsU0FBVTYrRCxHQUFHOUcsRUFBRThHLEVBQUV0ekQsVUFBVTNNLE9BQU9vQixpQkFBaUIsc0JBQXFCLFNBQVU2K0QsR0FBRzlHLEVBQUU4RyxFQUFFdGtELGFBQWE3aEIsRUFBRW9WLEdBQUcsb0JBQW9CaXFELEdBQUdyL0QsRUFBRW9WLEdBQUcscUJBQXFCaXFELElBQUk4RyxFQUFqZCxDQUFvZCxJQUFJK2MsR0FBR3RTLEVBQUVpbEIsUUFBUXpvQixFQUFFLEVBQUUsU0FBU2pILEdBQUcsSUFBSTVpRSxJQUFJNnBFLEVBQUUsR0FBRyxPQUFPakgsRUFBRUEsRUFBRTVpRSxFQUFFQSxJQUFJNC9FLEdBQUd2UyxFQUFFa2xCLGNBQWMsV0FBVyxJQUFJM3ZCLEVBQUVzcUIsR0FBRyxZQUFZLElBQUl0cUIsRUFBRSxPQUFPLEVBQUVBLEVBQUUvcEQsR0FBRytwRCxFQUFFcG1FLE1BQU0sTUFBSyxTQUFVb21FLEdBQUcsT0FBT3NjLEdBQUd0YyxNQUFNLElBQUk1aUUsRUFBRSxJQUFJN0UsRUFBRSxFQUFFc0IsRUFBRSxFQUFFMjFFLEdBQUd4UCxHQUFFLFNBQVVBLEdBQUcsSUFBSTlHLEdBQUc4RyxFQUFFQSxFQUFFcG1FLE1BQU0sTUFBTSxHQUFHb21FLEVBQUVBLEVBQUUsR0FBRyxrQkFBa0I5RyxJQUFJci9ELEdBQUdtbUUsR0FBRyxrQkFBa0I5RyxJQUFJM2dFLEdBQUd5bkUsR0FBRyxrQkFBa0I5RyxJQUFJOTdELEdBQUc0aUUsTUFBTSxJQUFJOUcsRUFBRWdTLEVBQUVyeEUsRUFBRXVELEVBQUU3RSxHQUFHLE9BQU8raEYsR0FBR3BoQixHQUFHLEVBQUVBLEdBQUcrakIsR0FBR3hTLEVBQUVtbEIsS0FBSyxTQUFTNXZCLEVBQUU1aUUsR0FBRyxPQUFPK3RGLEdBQUcvdEYsRUFBRTRpRSxJQUFJa2QsR0FBR3pTLEVBQUVvbEIsTUFBTSxTQUFTN3ZCLEdBQUcsSUFBSSxJQUFJNWlFLEVBQUUsR0FBRzdFLEVBQUVtVixTQUFTeVQsU0FBUzYrQyxFQUFFdHlELFNBQVMsS0FBS29pRixZQUFZQywyQkFBMkIsTUFBTWwyRixFQUFFLEVBQUVBLEVBQUV0QixFQUFFeTNGLGVBQWVuMkYsSUFBSXVELEVBQUV5RixLQUFLdEssRUFBRTAzRixhQUFhcDJGLElBQUksT0FBT3VELEdBQUdBLEVBQUUyaUUsRUFBRTBLLElBQUl0eUUsS0FBSzBGLEtBQUt0RixFQUFFLElBQUlBLEVBQUUsSUFBSUEsRUFBRSxJQUFJK1UsZUFBZSxTQUFTMHlELEVBQUU1aUUsR0FBRyxTQUFTN0UsRUFBRTZFLEdBQUcsT0FBTzRpRSxFQUFFeG1CLFFBQVFqaEQsRUFBRWxCLE9BQU82NEYsZUFBZTc0RixPQUFPaWlGLGVBQWUsU0FBU3RaLEdBQUcsT0FBT0EsRUFBRXA1RCxXQUFXdlAsT0FBT2lpRixlQUFldFosSUFBSXpuRSxFQUFFNkUsR0FBRzRpRSxFQUFFeG1CLFFBQVFqaEQsR0FBRyxTQUFTeW5FLEVBQUU1aUUsR0FBRzRpRSxFQUFFeG1CLFFBQVEsU0FBU3dtQixFQUFFNWlFLEdBQUcsS0FBSzRpRSxhQUFhNWlFLEdBQUcsTUFBTSxJQUFJNG9ELFVBQVUsdUNBQXVDLFNBQVNnYSxFQUFFNWlFLEdBQUcsU0FBUzdFLEVBQUV5bkUsRUFBRTVpRSxHQUFHLElBQUksSUFBSTdFLEVBQUUsRUFBRUEsRUFBRTZFLEVBQUV0RCxPQUFPdkIsSUFBSSxDQUFDLElBQUlzQixFQUFFdUQsRUFBRTdFLEdBQUdzQixFQUFFeUYsV0FBV3pGLEVBQUV5RixhQUFZLEVBQUd6RixFQUFFNEYsY0FBYSxFQUFHLFVBQVU1RixJQUFJQSxFQUFFMkYsVUFBUyxHQUFJbkksT0FBT2tJLGVBQWV5Z0UsRUFBRW5tRSxFQUFFYSxJQUFJYixJQUFJbW1FLEVBQUV4bUIsUUFBUSxTQUFTd21CLEVBQUU1aUUsRUFBRXZELEdBQUcsT0FBT3VELEdBQUc3RSxFQUFFeW5FLEVBQUVob0UsVUFBVW9GLEdBQUd2RCxHQUFHdEIsRUFBRXluRSxFQUFFbm1FLEdBQUdtbUUsSUFBSSxTQUFTQSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxJQUFJMmdFLEVBQUUzZ0UsRUFBRSxHQUFHeW5FLEVBQUV4bUIsUUFBUSxTQUFTd21CLEVBQUU1aUUsR0FBRyxPQUFPQSxHQUFHLFdBQVd2RCxFQUFFdUQsSUFBSSxtQkFBbUJBLEVBQUU4N0QsRUFBRThHLEdBQUc1aUUsSUFBSSxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLElBQUl5bkUsRUFBRXhtQixRQUFRLFNBQVN3bUIsRUFBRTVpRSxHQUFHLEdBQUcsbUJBQW1CQSxHQUFHLE9BQU9BLEVBQUUsTUFBTSxJQUFJNG9ELFVBQVUsc0RBQXNEZ2EsRUFBRWhvRSxVQUFVWCxPQUFPcUMsT0FBTzBELEdBQUdBLEVBQUVwRixVQUFVLENBQUMrckIsWUFBWSxDQUFDbnNCLE1BQU1vb0UsRUFBRXhnRSxVQUFTLEVBQUdDLGNBQWEsS0FBTXJDLEdBQUd2RCxFQUFFbW1FLEVBQUU1aUUsS0FBSyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLElBQUksU0FBUzJnRSxFQUFFOTdELEVBQUU3RSxFQUFFc0QsR0FBRyxNQUFNLG9CQUFvQmtHLFNBQVNBLFFBQVFiLElBQUk4K0QsRUFBRXhtQixRQUFRMGYsRUFBRW4zRCxRQUFRYixJQUFJOCtELEVBQUV4bUIsUUFBUTBmLEVBQUUsU0FBUzhHLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSTJnRSxFQUFFci9ELEVBQUVtbUUsRUFBRTVpRSxHQUFHLEdBQUc4N0QsRUFBRSxDQUFDLElBQUlyOUQsRUFBRXhFLE9BQU9tUSx5QkFBeUIweEQsRUFBRTk3RCxHQUFHLE9BQU92QixFQUFFcUYsSUFBSXJGLEVBQUVxRixJQUFJL0ksS0FBS0ksR0FBR3NELEVBQUVqRSxRQUFRc2hFLEVBQUU5N0QsRUFBRTdFLEVBQUVzRCxHQUFHdUIsR0FBRzRpRSxFQUFFeG1CLFFBQVEwZixHQUFHLFNBQVM4RyxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxJQUFJc0IsRUFBRXMyRixlQUFlLFVBQVMsV0FBWSxJQUFJbndCLEVBQUVqa0UsVUFBVWpDLE9BQU8sUUFBRyxJQUFTaUMsVUFBVSxHQUFHQSxVQUFVLEdBQUcsRUFBRXFCLEVBQUVyQixVQUFVakMsT0FBTyxFQUFFaUMsVUFBVSxRQUFHLEVBQU8sR0FBR2lrRSxFQUFFLEVBQUUsT0FBTzVpRSxFQUFFZ3pGLFFBQVF2eUYsTUFBTSxJQUFJdEYsRUFBRSxFQUFFc0IsRUFBRSxFQUFFcS9ELEVBQUU4RyxFQUFFem5FLEVBQUVzQixFQUFFZ0MsRUFBRWhDLEVBQUUybkMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFJekgsRUFBRSxDQUFDMS9CLE1BQU13QixFQUFFZzdELE1BQU1tSixFQUFFN2pFLE1BQU10QyxFQUFFbzBELEtBQUsxMUQsRUFBRTJwRSxNQUFNcm1FLElBQUloQyxFQUFFd1csS0FBS3hVLEdBQUdxOUQsRUFBRTNnRSxHQUFHOHNFLEVBQUUsQ0FBQ3hwRSxFQUFFaytCLEdBQUd5SCxHQUFHcGtDLEVBQUV4QyxHQUFHaUQsS0FBSyxDQUFDNkYsS0FBS3EyQixFQUFFczJELFlBQVlockIsSUFBSXhwRSxHQUFHaytCLEVBQUVrMEIsV0FBV3B5RCxFQUFFcTlELEdBQUcsT0FBTzEzQixLQUFLM25DLEVBQUVzMkYsZUFBZSxTQUFRLFNBQVVud0IsR0FBRyxJQUFJNWlFLEVBQUU0aUUsRUFBRXBtRSxNQUFNLE9BQU8sT0FBT3dELEVBQUVBLEVBQUUzRCxLQUFJLFNBQVV1bUUsR0FBRyxNQUFNLFNBQVNuM0QsT0FBT20zRCxNQUFNLFVBQVVuM0QsT0FBT3pMLEVBQUUyd0IsS0FBSyxLQUFLLFFBQVFsMEIsRUFBRXMyRixlQUFlLFVBQVMsV0FBWSxJQUFJLElBQUlud0IsRUFBRSxHQUFHNWlFLEVBQUUsRUFBRTdFLEVBQUV3RCxVQUFVakMsT0FBT3NELEVBQUU3RSxFQUFFNkUsSUFBSSxDQUFDLElBQUl2RCxFQUFFa0MsVUFBVXFCLEdBQUcsaUJBQWlCdkQsSUFBSW1tRSxHQUFHbm1FLEdBQUcsT0FBT21tRSxLQUFLQSxFQUFFeG1CLFFBQVEzL0MsR0FBRyxTQUFTbW1FLEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYXluRSxFQUFFeG1CLFFBQVEsU0FBU3dtQixHQUFHLElBQUk1aUUsRUFBRSxHQUFHLE9BQU9BLEVBQUVuRixTQUFTLFdBQVcsT0FBTzRGLEtBQUtwRSxLQUFJLFNBQVUyRCxHQUFHLElBQUk3RSxFQUFFLFNBQVN5bkUsRUFBRTVpRSxHQUFHLElBQXlYb2tDLEVBQUV6SCxFQUFFc3JDLEVBQXpYOXNFLEVBQUV5bkUsRUFBRSxJQUFJLEdBQUdubUUsRUFBRW1tRSxFQUFFLEdBQUcsSUFBSW5tRSxFQUFFLE9BQU90QixFQUFFLEdBQUc2RSxHQUFHLG1CQUFtQmt6RixLQUFLLENBQUMsSUFBSXAzQixHQUFHMTNCLEVBQUUzbkMsRUFBRWtnQyxFQUFFdTJELEtBQUtDLFNBQVNqdUMsbUJBQW1CcHBELEtBQUtDLFVBQVVxb0MsTUFBTTZqQyxFQUFFLCtEQUErRHg4RCxPQUFPa3hCLEdBQUcsT0FBT2x4QixPQUFPdzhELEVBQUUsUUFBUXhwRSxFQUFFaEMsRUFBRTIyRixRQUFRLzJGLEtBQUksU0FBVXVtRSxHQUFHLE1BQU0saUJBQWlCbjNELE9BQU9oUCxFQUFFNDJGLFlBQVksSUFBSTVuRixPQUFPbTNELEVBQUUsVUFBVSxNQUFNLENBQUN6bkUsR0FBR3NRLE9BQU9oTixHQUFHZ04sT0FBTyxDQUFDcXdELElBQUluckMsS0FBSyxNQUFnQixNQUFNLENBQUN4MUIsR0FBR3cxQixLQUFLLE1BQTVaLENBQW1hM3dCLEVBQUU0aUUsR0FBRyxPQUFPNWlFLEVBQUUsR0FBRyxVQUFVeUwsT0FBT3pMLEVBQUUsR0FBRyxNQUFNeUwsT0FBT3RRLEVBQUUsS0FBS0EsS0FBS3cxQixLQUFLLEtBQUszd0IsRUFBRXZELEVBQUUsU0FBU21tRSxFQUFFem5FLEVBQUVzQixHQUFHLGlCQUFpQm1tRSxJQUFJQSxFQUFFLENBQUMsQ0FBQyxLQUFLQSxFQUFFLE1BQU0sSUFBSTlHLEVBQUUsR0FBRyxHQUFHci9ELEVBQUUsSUFBSSxJQUFJZ0MsRUFBRSxFQUFFQSxFQUFFZ0MsS0FBSy9ELE9BQU8rQixJQUFJLENBQUMsSUFBSTJsQyxFQUFFM2pDLEtBQUtoQyxHQUFHLEdBQUcsTUFBTTJsQyxJQUFJMDNCLEVBQUUxM0IsSUFBRyxHQUFJLElBQUksSUFBSXpILEVBQUUsRUFBRUEsRUFBRWltQyxFQUFFbG1FLE9BQU9pZ0MsSUFBSSxDQUFDLElBQUlzckMsRUFBRSxHQUFHeDhELE9BQU9tM0QsRUFBRWptQyxJQUFJbGdDLEdBQUdxL0QsRUFBRW1NLEVBQUUsTUFBTTlzRSxJQUFJOHNFLEVBQUUsR0FBR0EsRUFBRSxHQUFHLEdBQUd4OEQsT0FBT3RRLEVBQUUsU0FBU3NRLE9BQU93OEQsRUFBRSxJQUFJQSxFQUFFLEdBQUc5c0UsR0FBRzZFLEVBQUV5RixLQUFLd2lFLE1BQU1qb0UsSUFBSSxTQUFTNGlFLEVBQUU1aUUsR0FBRzRpRSxFQUFFeG1CLFFBQVEsU0FBU3dtQixHQUFHLFFBQUcsSUFBU0EsRUFBRSxNQUFNLElBQUkwd0IsZUFBZSw2REFBNkQsT0FBTzF3QixJQUFJLFNBQVNBLEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYTZFLEVBQUV5Z0IsWUFBVyxFQUFHemdCLEVBQUVmLE9BQU8wOUIsRUFBRTM4QixFQUFFOUMsUUFBUSxTQUFTMGxFLEVBQUU1aUUsR0FBRyxJQUFJLElBQUk3RSxFQUFFLEVBQUVzQixFQUFFbW1FLEVBQUVsbUUsT0FBT3ZCLEVBQUVzQixFQUFFdEIsSUFBSSxHQUFHeW5FLEVBQUV6bkUsS0FBSzZFLEVBQUUsT0FBTzdFLEVBQUUsT0FBTyxHQUFHNkUsRUFBRXV6RixpQkFBaUIsU0FBUzN3QixHQUFHLEdBQUcsaUJBQWlCQSxFQUFFLENBQUMsR0FBR0EsR0FBR0EsRUFBRTR3QixPQUFPLE9BQU81d0IsRUFBRTR3QixTQUFTLEdBQUcsTUFBTTV3QixFQUFFLE1BQU0sR0FBRyxJQUFJQSxFQUFFLE9BQU9BLEVBQUUsR0FBR0EsRUFBRSxHQUFHQSxFQUFFLE9BQUlua0UsRUFBRTJFLEtBQUt3L0QsR0FBbUJBLEVBQUVobEUsUUFBUWsrRCxFQUFFMTNCLEdBQXJCdytCLEdBQXlCNWlFLEVBQUU2aUYsUUFBUSxTQUFTamdCLEdBQUcsT0FBT0EsR0FBRyxJQUFJQSxNQUFNOWtFLEVBQUU4a0UsSUFBSSxJQUFJQSxFQUFFbG1FLFNBQVNzRCxFQUFFeXpGLFlBQVksU0FBUzd3QixHQUFHLElBQUk1aUUsRUFBRTI4QixFQUFFLEdBQUdpbUMsR0FBRyxPQUFPNWlFLEVBQUUwekYsUUFBUTl3QixFQUFFNWlFLEdBQUdBLEVBQUVpekYsWUFBWSxTQUFTcndCLEVBQUU1aUUsR0FBRyxPQUFPNGlFLEVBQUVwL0MsS0FBS3hqQixFQUFFNGlFLEdBQUc1aUUsRUFBRTJ6RixrQkFBa0IsU0FBUy93QixFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFQSxFQUFFLElBQUksSUFBSTVpRSxHQUFHLElBQUl2RCxFQUFFLENBQUMsSUFBSSxRQUFRLElBQUksT0FBTyxJQUFJLE9BQU8sSUFBSSxTQUFTLElBQUksU0FBUyxJQUFJLFNBQVMsSUFBSSxVQUFVcS9ELEVBQUUsYUFBYXI5RCxFQUFFLFlBQVksU0FBUzJsQyxFQUFFdytCLEdBQUcsT0FBT25tRSxFQUFFbW1FLEdBQUcsU0FBU2ptQyxFQUFFaW1DLEdBQUcsSUFBSSxJQUFJNWlFLEVBQUUsRUFBRUEsRUFBRXJCLFVBQVVqQyxPQUFPc0QsSUFBSSxJQUFJLElBQUk3RSxLQUFLd0QsVUFBVXFCLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs0RCxVQUFVcUIsR0FBRzdFLEtBQUt5bkUsRUFBRXpuRSxHQUFHd0QsVUFBVXFCLEdBQUc3RSxJQUFJLE9BQU95bkUsRUFBRSxJQUFJcUYsRUFBRWh1RSxPQUFPVyxVQUFVQyxTQUFTbUYsRUFBRW5GLFNBQVNvdEUsRUFBRSxJQUFJdnBFLEVBQUUsU0FBU2trRSxHQUFHLE1BQU0sbUJBQW1CQSxHQUFHbGtFLEVBQUUsT0FBT3NCLEVBQUVvNEUsV0FBVzE1RSxFQUFFLFNBQVNra0UsR0FBRyxNQUFNLG1CQUFtQkEsR0FBRyxzQkFBc0JxRixFQUFFbHRFLEtBQUs2bkUsS0FBSzVpRSxFQUFFbzRFLFdBQVcxNUUsRUFBRSxJQUFJWixFQUFFbEMsTUFBTUMsU0FBUyxTQUFTK21FLEdBQUcsU0FBU0EsR0FBRyxpQkFBaUJBLElBQUksbUJBQW1CcUYsRUFBRWx0RSxLQUFLNm5FLElBQUk1aUUsRUFBRW5FLFFBQVFpQyxHQUFHLFNBQVM4a0UsRUFBRTVpRSxFQUFFN0UsR0FBRyxhQUFhLElBQUlzQixFQUFFcS9ELEVBQUVyL0QsRUFBRSxDQUFDdEIsRUFBRSxJQUFJQSxFQUFFLElBQUlBLEVBQUUsVUFBSyxLQUFVMmdFLEVBQUUsU0FBUzhHLEVBQUU1aUUsRUFBRTdFLEdBQUcsT0FBTyxTQUFTeW5FLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUUsU0FBU3VELEVBQUU3RSxHQUFHLE9BQU95bkUsRUFBRWd4QixZQUFZNXpGLEVBQUU3RSxJQUFJLE9BQU9zQixFQUFFa3JGLEdBQUcva0IsRUFBRWd4QixZQUFZbjNGLEVBQUV1OUIsSUFBSWg2QixFQUFFNnpGLGFBQWFwM0YsRUFBRWd0QyxLQUFLdHVDLEVBQUUyNEYsY0FBY3IzRixFQUFFbTNGLFlBQVloeEIsRUFBRWd4QixZQUFZbjNGLEVBQUVvM0YsYUFBYTd6RixFQUFFNnpGLGFBQWFwM0YsRUFBRXEzRixjQUFjMzRGLEVBQUUyNEYsY0FBY3IzRixFQUEvTixDQUFrT21tRSxFQUFFNWlFLEVBQUU3RSxJQUFJeUQsTUFBTW9CLEVBQUV2RCxNQUFNbW1FLEVBQUV4bUIsUUFBUTBmLElBQUksU0FBUzhHLEVBQUU1aUUsR0FBRyxTQUFTN0UsRUFBRTZFLEdBQUcsTUFBTSxtQkFBbUIwRSxRQUFRLGlCQUFpQkEsT0FBT3FRLFNBQVM2dEQsRUFBRXhtQixRQUFRamhELEVBQUUsU0FBU3luRSxHQUFHLGNBQWNBLEdBQUdBLEVBQUV4bUIsUUFBUWpoRCxFQUFFLFNBQVN5bkUsR0FBRyxPQUFPQSxHQUFHLG1CQUFtQmwrRCxRQUFRaytELEVBQUVqOEMsY0FBY2ppQixRQUFRaytELElBQUlsK0QsT0FBTzlKLFVBQVUsZ0JBQWdCZ29FLEdBQUd6bkUsRUFBRTZFLEdBQUc0aUUsRUFBRXhtQixRQUFRamhELEdBQUcsU0FBU3luRSxFQUFFNWlFLEVBQUU3RSxHQUFHLGFBQWE2RSxFQUFFeWdCLFlBQVcsRUFBRyxJQUFJaGtCLEVBQUUsQ0FBQyxjQUFjLFdBQVcsYUFBYSxnQkFBZ0IsVUFBVSxPQUFPLFNBQVMsU0FBUyxTQUFTcS9ELEVBQUU4RyxFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUU2RSxHQUFHQSxFQUFFK3pGLElBQUl0MUYsT0FBRSxFQUFPMmxDLE9BQUUsRUFBT3pILE9BQUUsRUFBT3NyQyxPQUFFLEVBQU85c0UsSUFBSXNELEVBQUV0RCxFQUFFNEQsTUFBTXFwRSxLQUFLaGtDLEVBQUVqcEMsRUFBRW02QixJQUFJOHlDLEtBQUt6ckMsRUFBRXhoQyxFQUFFNEQsTUFBTXNwRSxPQUFPSixFQUFFOXNFLEVBQUVtNkIsSUFBSSt5QyxPQUFPekYsR0FBRyxNQUFNbmtFLEVBQUUsSUFBSWsrQixHQUFHLElBQUksSUFBSWorQixFQUFFd3lELE1BQU10MkQsVUFBVStyQixZQUFZNXJCLEtBQUswRixLQUFLbWlFLEdBQUc5a0UsRUFBRSxFQUFFQSxFQUFFckIsRUFBRUMsT0FBT29CLElBQUkyQyxLQUFLaEUsRUFBRXFCLElBQUlZLEVBQUVqQyxFQUFFcUIsSUFBSW96RCxNQUFNOGlDLG1CQUFtQjlpQyxNQUFNOGlDLGtCQUFrQnZ6RixLQUFLcTdELEdBQUcsSUFBSTNnRSxJQUFJc0YsS0FBS3d6RixXQUFXeDFGLEVBQUVnQyxLQUFLeXpGLGNBQWM5dkQsRUFBRW5xQyxPQUFPa0ksZ0JBQWdCbEksT0FBT2tJLGVBQWUxQixLQUFLLFNBQVMsQ0FBQ2pHLE1BQU1taUMsRUFBRXo2QixZQUFXLElBQUtqSSxPQUFPa0ksZUFBZTFCLEtBQUssWUFBWSxDQUFDakcsTUFBTXl0RSxFQUFFL2xFLFlBQVcsTUFBT3pCLEtBQUs0bkUsT0FBTzFyQyxFQUFFbDhCLEtBQUswekYsVUFBVWxzQixJQUFJLE1BQU1yRixLQUFLOUcsRUFBRWxoRSxVQUFVLElBQUlzMkQsTUFBTWx4RCxFQUFFa08sUUFBUTR0RCxFQUFFOEcsRUFBRXhtQixRQUFRcDhDLEVBQUVrTyxTQUFTLFNBQVMwMEQsRUFBRTVpRSxHQUFHNGlFLEVBQUV4bUIsUUFBUSxTQUFTd21CLEVBQUU1aUUsRUFBRTdFLEdBQUcsT0FBTzZFLEtBQUs0aUUsRUFBRTNvRSxPQUFPa0ksZUFBZXlnRSxFQUFFNWlFLEVBQUUsQ0FBQ3hGLE1BQU1XLEVBQUUrRyxZQUFXLEVBQUdHLGNBQWEsRUFBR0QsVUFBUyxJQUFLd2dFLEVBQUU1aUUsR0FBRzdFLEVBQUV5bkUsSUFBSSxTQUFTQSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxJQUFJMmdFLEVBQUUzZ0UsRUFBRSxJQUFJc0QsRUFBRXRELEVBQUUsSUFBSXluRSxFQUFFeG1CLFFBQVEsU0FBU3dtQixFQUFFNWlFLEdBQUcsT0FBT3ZELEVBQUVtbUUsSUFBSTlHLEVBQUU4RyxFQUFFNWlFLElBQUl2QixNQUFNLFNBQVNta0UsRUFBRTVpRSxHQUFHLElBQUk3RSxFQUFFQSxFQUFFLFdBQVcsT0FBT3NGLEtBQWxCLEdBQTBCLElBQUl0RixFQUFFQSxHQUFHLElBQUltRCxTQUFTLGNBQWIsR0FBOEIsTUFBTXNrRSxHQUFHLGlCQUFpQmpnRSxTQUFTeEgsRUFBRXdILFFBQVFpZ0UsRUFBRXhtQixRQUFRamhELEdBQUcsU0FBU3luRSxFQUFFNWlFLEVBQUU3RSxHQUFHd0gsT0FBT2lnRSxFQUFFeG1CLFFBQVEsU0FBU3dtQixHQUFHLElBQUk1aUUsRUFBRSxHQUFHLFNBQVM3RSxFQUFFc0IsR0FBRyxHQUFHdUQsRUFBRXZELEdBQUcsT0FBT3VELEVBQUV2RCxHQUFHMi9DLFFBQVEsSUFBSTBmLEVBQUU5N0QsRUFBRXZELEdBQUcsQ0FBQ0EsRUFBRUEsRUFBRWlDLEdBQUUsRUFBRzA5QyxRQUFRLElBQUksT0FBT3dtQixFQUFFbm1FLEdBQUcxQixLQUFLK2dFLEVBQUUxZixRQUFRMGYsRUFBRUEsRUFBRTFmLFFBQVFqaEQsR0FBRzJnRSxFQUFFcDlELEdBQUUsRUFBR285RCxFQUFFMWYsUUFBUSxPQUFPamhELEVBQUV1NEIsRUFBRWt2QyxFQUFFem5FLEVBQUUyQyxFQUFFa0MsRUFBRTdFLEVBQUUyZSxFQUFFLFNBQVM4b0QsRUFBRTVpRSxFQUFFdkQsR0FBR3RCLEVBQUVpcEMsRUFBRXcrQixFQUFFNWlFLElBQUkvRixPQUFPa0ksZUFBZXlnRSxFQUFFNWlFLEVBQUUsQ0FBQ2tDLFlBQVcsRUFBRzRCLElBQUlySCxLQUFLdEIsRUFBRTJnRSxFQUFFLFNBQVM4RyxHQUFHLG9CQUFvQmwrRCxRQUFRQSxPQUFPZ2MsYUFBYXptQixPQUFPa0ksZUFBZXlnRSxFQUFFbCtELE9BQU9nYyxZQUFZLENBQUNsbUIsTUFBTSxXQUFXUCxPQUFPa0ksZUFBZXlnRSxFQUFFLGFBQWEsQ0FBQ3BvRSxPQUFNLEtBQU1XLEVBQUV5bkUsRUFBRSxTQUFTQSxFQUFFNWlFLEdBQUcsR0FBRyxFQUFFQSxJQUFJNGlFLEVBQUV6bkUsRUFBRXluRSxJQUFJLEVBQUU1aUUsRUFBRSxPQUFPNGlFLEVBQUUsR0FBRyxFQUFFNWlFLEdBQUcsaUJBQWlCNGlFLEdBQUdBLEdBQUdBLEVBQUVuaUQsV0FBVyxPQUFPbWlELEVBQUUsSUFBSW5tRSxFQUFFeEMsT0FBT3FDLE9BQU8sTUFBTSxHQUFHbkIsRUFBRTJnRSxFQUFFci9ELEdBQUd4QyxPQUFPa0ksZUFBZTFGLEVBQUUsVUFBVSxDQUFDeUYsWUFBVyxFQUFHMUgsTUFBTW9vRSxJQUFJLEVBQUU1aUUsR0FBRyxpQkFBaUI0aUUsRUFBRSxJQUFJLElBQUk5RyxLQUFLOEcsRUFBRXpuRSxFQUFFMmUsRUFBRXJkLEVBQUVxL0QsRUFBRSxTQUFTOTdELEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUkzQixLQUFLLEtBQUt5OUQsSUFBSSxPQUFPci9ELEdBQUd0QixFQUFFQSxFQUFFLFNBQVN5bkUsR0FBRyxJQUFJNWlFLEVBQUU0aUUsR0FBR0EsRUFBRW5pRCxXQUFXLFdBQVcsT0FBT21pRCxFQUFFMTBELFNBQVMsV0FBVyxPQUFPMDBELEdBQUcsT0FBT3puRSxFQUFFMmUsRUFBRTlaLEVBQUUsSUFBSUEsR0FBR0EsR0FBRzdFLEVBQUVpcEMsRUFBRSxTQUFTdytCLEVBQUU1aUUsR0FBRyxPQUFPL0YsT0FBT1csVUFBVXdDLGVBQWVyQyxLQUFLNm5FLEVBQUU1aUUsSUFBSTdFLEVBQUUyVSxFQUFFLFdBQVczVSxFQUFFQSxFQUFFd2hDLEVBQUUsSUFBejVCLENBQTg1QixDQUFDLFNBQVNpbUMsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXRCLEVBQUUsR0FBRzJnRSxFQUFFM2dFLEVBQUUsR0FBR3NELEVBQUV0RCxFQUFFLElBQUlBLEVBQUUsSUFBSTZFLEVBQUUsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlpcEMsRUFBRXpILEVBQUUsR0FBRzM4QixFQUFFdkIsRUFBRXVCLEVBQUU3RSxHQUFHc0IsRUFBRW1tRSxHQUFHLElBQUl4K0IsRUFBRSxFQUFFekgsRUFBRWltQyxFQUFFbG1FLE9BQU8wbkMsRUFBRXpILEVBQUV5SCxJQUFJcGtDLEVBQUU0aUUsRUFBRXgrQixHQUFHQSxFQUFFdytCLE9BQU8sQ0FBQyxJQUFJcUYsRUFBRW5NLEVBQUU4RyxHQUFHLElBQUl4K0IsRUFBRSxFQUFFekgsRUFBRXNyQyxFQUFFdnJFLE9BQU8wbkMsRUFBRXpILEVBQUV5SCxJQUFJcGtDLEVBQUU0aUUsRUFBRXFGLEVBQUU3akMsSUFBSTZqQyxFQUFFN2pDLEdBQUd3K0IsR0FBRyxPQUFPQSxHQUFHQSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLEdBQUc2RSxFQUFFLFNBQVM0aUUsR0FBRyxNQUFNLG9CQUFvQm5tRSxFQUFFbW1FLElBQUlBLEVBQUV4bUIsUUFBUXA4QyxHQUFHLFNBQVM0aUUsRUFBRTVpRSxHQUFHQSxFQUFFLFNBQVM0aUUsR0FBRyxJQUFJNWlFLFNBQVM0aUUsRUFBRSxRQUFRQSxJQUFJLGFBQWE1aUUsR0FBRyxXQUFXQSxJQUFJNGlFLEVBQUV4bUIsUUFBUXA4QyxHQUFHLFNBQVM0aUUsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXRCLEVBQUUsR0FBRzJnRSxFQUFFM2dFLEVBQUUsSUFBSXNELEVBQUV0RCxFQUFFLElBQUk2RSxFQUFFLFNBQVM0aUUsR0FBRyxPQUFPOUcsRUFBRXIvRCxFQUFFbW1FLEdBQUcsSUFBSW5rRSxFQUFFbWtFLEdBQUdBLElBQUlBLEVBQUV4bUIsUUFBUXA4QyxHQUFHLFNBQVM0aUUsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXRCLEVBQUUsSUFBSTJnRSxFQUFFM2dFLEVBQUUsSUFBSTZFLEVBQUUvRixPQUFPbUcsT0FBTzA3RCxJQUFJN2hFLE9BQU9tRyxLQUFLLFNBQVN3aUUsR0FBRyxJQUFJNWlFLEVBQUUsR0FBRyxJQUFJLElBQUk3RSxLQUFLeW5FLEVBQUVubUUsRUFBRW1tRSxFQUFFem5FLElBQUk2RSxFQUFFeUYsS0FBS3RLLEdBQUcsT0FBTzZFLEdBQUc0aUUsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEdBQUdBLEVBQUUsU0FBUzRpRSxHQUFHLFlBQU8sSUFBU0EsR0FBR0EsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxHQUFHNkUsRUFBRSxTQUFTNGlFLEdBQUcsTUFBTSxvQkFBb0JubUUsRUFBRW1tRSxJQUFJQSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLEdBQUc2RSxFQUFFLFNBQVM0aUUsR0FBRyxJQUFJNWlFLEVBQUV2RCxFQUFFbW1FLEdBQUcsTUFBTSxzQkFBc0I1aUUsR0FBRywrQkFBK0JBLEdBQUcsMkJBQTJCQSxHQUFHNGlFLEVBQUV4bUIsUUFBUXA4QyxHQUFHLFNBQVM0aUUsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXRCLEVBQUUsR0FBRzJnRSxFQUFFM2dFLEVBQUUsR0FBR3NELEVBQUVuRCxLQUFLa21GLElBQUksRUFBRSxJQUFJLEVBQUV4aEYsRUFBRSxTQUFTNGlFLEdBQUcsSUFBSUEsRUFBRSxPQUFNLEVBQUcsSUFBSTVpRSxFQUFFNGlFLEVBQUVsbUUsT0FBTyxPQUFPRCxFQUFFdUQsSUFBSUEsR0FBRyxHQUFHQSxHQUFHdkIsSUFBSXE5RCxFQUFFOEcsSUFBSUEsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUVsQixPQUFPVyxVQUFVQyxTQUFTbUYsRUFBRSxTQUFTNGlFLEdBQUcsT0FBT3puRSxFQUFFSixLQUFLNm5FLElBQUlBLEVBQUV4bUIsUUFBUXA4QyxHQUFHLFNBQVM0aUUsRUFBRTVpRSxHQUFHLElBQUk3RSxFQUFFbEIsT0FBT1csVUFBVXdDLGVBQWU0QyxFQUFFLFNBQVM0aUUsRUFBRTVpRSxHQUFHLE9BQU83RSxFQUFFSixLQUFLNm5FLEVBQUU1aUUsSUFBSTRpRSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLEdBQUcyZ0UsRUFBRTNnRSxFQUFFLElBQUlzRCxFQUFFdEQsRUFBRSxJQUFJaXBDLEVBQUVqcEMsRUFBRSxHQUFHNkUsRUFBRSxTQUFTNGlFLEdBQUcsT0FBT0EsRUFBRW5rRSxFQUFFbWtFLEdBQUdBLEVBQUVubUUsRUFBRW1tRSxLQUFLeCtCLEVBQUV3K0IsR0FBRzlHLEVBQUU4RyxHQUFHLENBQUNBLEdBQUcsSUFBSUEsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEdBQUdBLEVBQUUsR0FBRzRpRSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLEdBQUc2RSxFQUFFcEUsTUFBTUMsU0FBUyxTQUFTK21FLEdBQUcsTUFBTSxtQkFBbUJubUUsRUFBRW1tRSxJQUFJQSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLElBQUkyZ0UsRUFBRTNnRSxFQUFFLElBQUlzRCxFQUFFdEQsRUFBRSxJQUFJaXBDLEVBQUVqcEMsRUFBRSxJQUFJd2hDLEVBQUV4aEMsRUFBRSxJQUFJOHNFLEdBQUdqb0UsRUFBRSxTQUFTNGlFLEVBQUU1aUUsR0FBRyxPQUFPaW9FLEVBQUVocEUsT0FBTzJqRSxFQUFFNWlFLEtBQUs2b0YsS0FBSyxTQUFTam1CLEVBQUU1aUUsRUFBRTdFLEVBQUU4c0UsR0FBR0EsRUFBRUEsR0FBRyxHQUFHLElBQUl2cEUsRUFBRVosRUFBRTNDLEVBQUUydEYsV0FBVzFrRCxFQUFFanBDLEVBQUUsb0JBQW9CLEdBQUcsY0FBY0EsRUFBRTJ0RixVQUFVcHFGLEVBQUVpK0IsRUFBRSxXQUFXLElBQUlpbUMsRUFBRTlHLEVBQUVuOUQsV0FBVyxPQUFPOEIsS0FBS3NvRixZQUFZdG9GLEtBQUtzb0YsV0FBV25xRixNQUFNNkIsS0FBS21pRSxJQUFJbmlFLE1BQU0sSUFBSW5DLFNBQVMsUUFBUSxtQkFBbUJSLEVBQUUsOEdBQTFDLENBQXlKZytELEdBQUdyOUQsRUFBRUMsRUFBRXNCLEdBQUd0QixFQUFFOUQsVUFBVStyQixZQUFZam9CLEVBQUVBLEVBQUVPLE9BQU8sU0FBU2UsRUFBRTdFLEdBQUcsT0FBT3luRSxFQUFFbGtFLEVBQUVzQixFQUFFN0UsSUFBSXVELEVBQUU0aEYsU0FBUyxTQUFTMWQsR0FBR25rRSxFQUFFQyxFQUFFa2tFLElBQUlsa0UsRUFBRXVOLFFBQVEsU0FBUzIyRCxHQUFHLE9BQU9ubUUsRUFBRWlDLEVBQUU5RCxVQUFVZ29FLEdBQUdsa0UsR0FBR0EsRUFBRXNxRixRQUFRLFNBQVNwbUIsR0FBRyxPQUFPbm1FLEVBQUVpQyxFQUFFa2tFLEdBQUdsa0UsR0FBR0EsRUFBRXVOLFFBQVE5USxHQUFHNnRGLFFBQVEvZ0IsR0FBR3ZwRSxFQUF2akIsQ0FBMGpCekUsT0FBTyxDQUFDNnVGLFVBQVUsT0FBT0csVUFBVSxTQUFTcm1CLEVBQUU1aUUsRUFBRTdFLEdBQUcsT0FBT3luRSxFQUFFaG9FLFVBQVVvRixHQUFHcEIsTUFBTTZCLEtBQUt0RixJQUFJTixTQUFTLFdBQVcsT0FBTzRGLEtBQUtrbUIsWUFBWXZWLFFBQVF3eEQsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxJQUFJMmdFLEVBQUUzZ0UsRUFBRSxHQUFHQSxFQUFFLElBQUk2RSxFQUFFLFNBQVM0aUUsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0QsRUFBRSxHQUFHLE9BQU91QixFQUFFdkQsRUFBRXVELEVBQUU3RSxHQUFHMmdFLEVBQUU4RyxHQUFFLFNBQVVBLEVBQUV6bkUsRUFBRXNCLEdBQUd1RCxFQUFFNGlFLEVBQUV6bkUsRUFBRXNCLElBQUlnQyxFQUFFZ0gsS0FBS205RCxNQUFNbmtFLEdBQUdta0UsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxHQUFHMmdFLEVBQUUzZ0UsRUFBRSxHQUFHc0QsRUFBRXRELEVBQUUsSUFBSWlwQyxFQUFFanBDLEVBQUUsSUFBSXdoQyxFQUFFeGhDLEVBQUUsSUFBSTZFLEVBQUUsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLE9BQU8sTUFBTXluRSxFQUFFam1DLEVBQUVsZ0MsRUFBRW1tRSxHQUFHbmtFLEVBQUVta0UsRUFBRTVpRSxFQUFFN0UsR0FBRzJnRSxFQUFFOEcsR0FBR3grQixFQUFFdytCLEdBQUcsU0FBU0EsR0FBRyxPQUFPLFNBQVM1aUUsR0FBRyxPQUFPLE1BQU1BLE9BQUUsRUFBT0EsRUFBRTRpRSxNQUFNQSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsR0FBR0EsRUFBRSxTQUFTNGlFLEdBQUcsT0FBTyxNQUFNQSxFQUFFLEdBQUdBLEVBQUUvbkUsWUFBWStuRSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsR0FBR0EsRUFBRSxTQUFTNGlFLEdBQUcsT0FBT0EsRUFBRWxtRSxPQUFPLEVBQUVrbUUsRUFBRUEsRUFBRSxHQUFHN2tFLGNBQWM2a0UsRUFBRTFrRSxNQUFNLElBQUkwa0UsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxJQUFJMmdFLEVBQUUzZ0UsRUFBRSxHQUFHc0QsRUFBRXRELEVBQUUsR0FBR2lwQyxFQUFFanBDLEVBQUUsSUFBSTZFLEVBQUUsU0FBUzRpRSxFQUFFNWlFLEdBQUcsT0FBTzg3RCxFQUFFOEcsR0FBR0EsRUFBRTFsRSxRQUFROEMsSUFBSSxHQUFHdkIsRUFBRW1rRSxLQUFLQSxFQUFFeCtCLEVBQUV3K0IsSUFBSW5tRSxFQUFFbW1FLEVBQUU1aUUsSUFBSSxJQUFJNGlFLEVBQUV4bUIsUUFBUXA4QyxHQUFHLFNBQVM0aUUsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXRCLEVBQUUsSUFBSTJnRSxFQUFFM2dFLEVBQUUsSUFBSXNELEVBQUV0RCxFQUFFLEdBQUdpcEMsRUFBRWpwQyxFQUFFLElBQUl3aEMsRUFBRXhoQyxFQUFFLElBQUk2RSxFQUFFdkQsRUFBRSxDQUFDc3NGLFdBQVcsV0FBV3RvRixLQUFLMG5CLFFBQVExbkIsS0FBSzBuQixTQUFTLElBQUl0VyxHQUFHLFNBQVMrd0QsRUFBRTVpRSxHQUFHLE9BQU9TLEtBQUswbkIsUUFBUXk2QyxHQUFHbmlFLEtBQUswbkIsUUFBUXk2QyxJQUFJLEdBQUduaUUsS0FBSzBuQixRQUFReTZDLEdBQUduOUQsS0FBS3pGLEdBQUdTLE1BQU13NUUsSUFBSSxTQUFTclgsRUFBRTVpRSxHQUFHLEdBQUc4N0QsRUFBRXI3RCxLQUFLMG5CLFFBQVF5NkMsR0FBRyxPQUFPbmlFLEtBQUswbkIsUUFBUXk2QyxHQUFHemxFLE9BQU9zRCxLQUFLMG5CLFFBQVF5NkMsR0FBRzFsRSxRQUFROEMsR0FBRyxHQUFHUyxNQUFNRixLQUFLLFNBQVNxaUUsRUFBRTVpRSxHQUFHLE9BQU9TLEtBQUtvUixHQUFHK3dELEVBQUVqbUMsRUFBRTM4QixJQUFJUyxNQUFNK2hCLEtBQUssU0FBU29nRCxHQUFHLEdBQUc5RyxFQUFFcjdELEtBQUswbkIsUUFBUXk2QyxHQUFHLENBQUMsSUFBSTVpRSxFQUFFb2tDLEVBQUV6bEMsVUFBVSxHQUFHLE9BQU9GLEVBQUVnQyxLQUFLMG5CLFFBQVF5NkMsSUFBRyxTQUFVQSxHQUFHQSxFQUFFaGtFLE1BQU02QixLQUFLVCxLQUFLUyxNQUFNQSxRQUFRLENBQUNzbUIsTUFBTSxTQUFTNjdDLEdBQUdua0UsRUFBRSxDQUFDLEtBQUssTUFBTSxPQUFPLFNBQVEsU0FBVXRELEdBQUd5bkUsRUFBRXpuRSxHQUFHNkUsRUFBRXBGLFVBQVVPLE1BQU15bkUsRUFBRXo2QyxRQUFReTZDLEVBQUV6NkMsU0FBUyxNQUFNeTZDLEVBQUV4bUIsUUFBUXA4QyxHQUFHLFNBQVM0aUUsRUFBRTVpRSxFQUFFN0UsR0FBRzZFLEVBQUU3RSxFQUFFLEdBQUZBLENBQU1BLEVBQUUsS0FBS3luRSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLEdBQUcyZ0UsRUFBRTNnRSxFQUFFLEdBQUc2RSxFQUFFLFNBQVM0aUUsRUFBRTVpRSxHQUFHLE9BQU8sU0FBUzdFLEdBQUcsT0FBTzJnRSxFQUFFbjlELFdBQVUsU0FBVUYsRUFBRTJsQyxHQUFHLEdBQUcsSUFBSUEsRUFBRSxDQUFDLElBQUl6SCxFQUFFaW1DLEVBQUVua0UsR0FBR3E5RCxFQUFFbi9CLEdBQUUsU0FBVWltQyxHQUFHNWlFLElBQUl2RCxFQUFFdEIsRUFBRXluRSxNQUFNem5FLEVBQUV5bkUsR0FBR25rRSxFQUFFbWtFLFdBQVd6bkUsSUFBSXluRSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLEdBQUc2RSxFQUFFLFNBQVM0aUUsRUFBRTVpRSxFQUFFN0UsR0FBRyxHQUFHc0IsRUFBRXVELEdBQUcsT0FBTzRpRSxFQUFFLE9BQU8sTUFBTXpuRSxFQUFFLEVBQUVBLEdBQUcsS0FBSyxFQUFFLE9BQU8sU0FBU0EsR0FBRyxPQUFPeW5FLEVBQUU3bkUsS0FBS2lGLEVBQUU3RSxJQUFJLEtBQUssRUFBRSxPQUFPLFNBQVNBLEVBQUVzQixFQUFFcS9ELEdBQUcsT0FBTzhHLEVBQUU3bkUsS0FBS2lGLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxJQUFJLEtBQUssRUFBRSxPQUFPLFNBQVMzZ0UsRUFBRXNCLEVBQUVxL0QsRUFBRXI5RCxHQUFHLE9BQU9ta0UsRUFBRTduRSxLQUFLaUYsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEVBQUVyOUQsSUFBSSxPQUFPLFdBQVcsT0FBT21rRSxFQUFFaGtFLE1BQU1vQixFQUFFckIsYUFBYWlrRSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLEdBQUcyZ0UsRUFBRTNnRSxFQUFFLElBQUlzRCxFQUFFdEQsRUFBRSxJQUFJaXBDLEVBQUVucUMsT0FBT2lQLG9CQUFvQnl6QixFQUFFMWlDLE9BQU9rdEYsc0JBQXNCbm5GLEVBQUUsU0FBUzRpRSxHQUFHLElBQUk1aUUsRUFBRXJCLFVBQVVqQyxPQUFPLFFBQUcsSUFBU2lDLFVBQVUsR0FBR0EsVUFBVSxHQUFHLEdBQUd4RCxFQUFFNkUsRUFBRXBGLFVBQVVxdEUsT0FBRSxJQUFTOXNFLEdBQUdBLEVBQUV1RCxFQUFFc0IsRUFBRW9uRixhQUFhdHBGLE9BQUUsSUFBU1ksR0FBR0EsRUFBRWIsRUFBRW1DLEVBQUUrWCxPQUFPMHRCLE9BQUUsSUFBUzVuQyxHQUFHQSxFQUFFaVMsRUFBRSxHQUFHLElBQUloUyxHQUFHMm5DLElBQUlyQixFQUFFLENBQUMsSUFBSXRxQixFQUFFcmQsRUFBRXFCLEdBQUdzbUMsSUFBSXRxQixFQUFFc3FCLEdBQUcsR0FBR3QwQixFQUFFQSxFQUFFckUsT0FBT3FPLEVBQUU4b0QsSUFBSW45QixHQUFHOUksSUFBSTdzQixFQUFFQSxFQUFFckUsT0FBT2t4QixFQUFFaW1DLFdBQVdxRixJQUFJckYsRUFBRTlHLEVBQUU4RyxLQUFLQSxJQUFJM29FLE9BQU9XLFdBQVdrVixFQUFFclIsRUFBRXFSLFFBQVEsR0FBR200RCxFQUFFLElBQUksSUFBSXZGLEtBQUtFLEVBQUU5eUQsRUFBRXJLLEtBQUtpOUQsUUFBUTV5RCxFQUFFclQsRUFBRW1tRSxHQUFHLE9BQU85eUQsR0FBRzh5RCxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLEdBQUcyZ0UsRUFBRTNnRSxFQUFFLEdBQUdzRCxFQUFFeEUsT0FBT2lpRixlQUFlOTNDLEVBQUUsR0FBR3pkLFlBQVkzbUIsRUFBRSxTQUFTNGlFLEdBQUcsR0FBR25tRSxFQUFFbW1FLEdBQUcsQ0FBQyxHQUFHbmtFLEVBQUUsT0FBT0EsRUFBRW1rRSxHQUFHLElBQUk1aUUsRUFBRTRpRSxFQUFFcDVELFVBQVUsT0FBT3hKLEdBQUcsT0FBT0EsRUFBRUEsRUFBRTg3RCxFQUFFOEcsRUFBRWo4QyxhQUFhaThDLEVBQUVqOEMsWUFBWS9yQixVQUFVZ29FLGFBQWF4K0IsRUFBRUEsRUFBRXhwQyxlQUFVLElBQVNnb0UsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEdBQUdBLEVBQUUsU0FBUzRpRSxFQUFFNWlFLEdBQUcsT0FBT0EsRUFBRSxNQUFNQSxFQUFFNGlFLEVBQUVsbUUsT0FBTyxHQUFHc0QsRUFBRSxXQUFXLElBQUk3RSxFQUFFc0IsRUFBRW5CLEtBQUtvUCxJQUFJL0wsVUFBVWpDLE9BQU9zRCxFQUFFLEdBQUc4N0QsRUFBRSxJQUFJbGdFLE1BQU1hLEdBQUcsSUFBSXRCLEVBQUUsRUFBRUEsRUFBRXNCLEVBQUV0QixJQUFJMmdFLEVBQUUzZ0UsR0FBR3dELFVBQVV4RCxFQUFFNkUsR0FBRyxPQUFPQSxHQUFHLEtBQUssRUFBRSxPQUFPNGlFLEVBQUU3bkUsS0FBSzBGLEtBQUtxN0QsR0FBRyxLQUFLLEVBQUUsT0FBTzhHLEVBQUU3bkUsS0FBSzBGLEtBQUs5QixVQUFVLEdBQUdtOUQsR0FBRyxLQUFLLEVBQUUsT0FBTzhHLEVBQUU3bkUsS0FBSzBGLEtBQUs5QixVQUFVLEdBQUdBLFVBQVUsR0FBR205RCxHQUFHLElBQUlyOUQsRUFBRSxJQUFJN0MsTUFBTW9FLEVBQUUsR0FBRyxJQUFJN0UsRUFBRSxFQUFFQSxFQUFFNkUsRUFBRTdFLElBQUlzRCxFQUFFdEQsR0FBR3dELFVBQVV4RCxHQUFHLE9BQU9zRCxFQUFFdUIsR0FBRzg3RCxFQUFFOEcsRUFBRWhrRSxNQUFNNkIsS0FBS2hDLEtBQUtta0UsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEdBQUdBLEVBQUUsU0FBUzRpRSxHQUFHLE9BQU0sSUFBS0EsSUFBRyxJQUFLQSxHQUFHQSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLElBQUk2RSxFQUFFLFNBQVM0aUUsR0FBRyxPQUFPbm1FLEVBQUVtbUUsR0FBR2lpQixxQkFBcUJqaUIsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxHQUFHNkUsRUFBRSxTQUFTNGlFLEdBQUcsT0FBT25tRSxFQUFFbW1FLElBQUlBLEtBQUtBLEdBQUdBLEVBQUV4bUIsUUFBUXA4QyxHQUFHLFNBQVM0aUUsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXRCLEVBQUUsSUFBSTJnRSxFQUFFM2dFLEVBQUUsSUFBSXNELEVBQUV0RCxFQUFFLElBQUlpcEMsRUFBRWpwQyxFQUFFLElBQUl3aEMsRUFBRXhoQyxFQUFFLElBQUk4c0UsRUFBRTlzRSxFQUFFLElBQUl1RCxFQUFFdkQsRUFBRSxJQUFJMkMsRUFBRTNDLEVBQUUsSUFBSTBDLEVBQUUxQyxFQUFFLElBQUlzcUMsRUFBRXRxQyxFQUFFLElBQUkyVSxFQUFFM1UsRUFBRSxJQUFJMmUsRUFBRTNlLEVBQUUsSUFBSXVuRSxFQUFFdm5FLEVBQUUsR0FBR2YsRUFBRWUsRUFBRSxHQUFHNkUsRUFBRSxTQUFTNGlFLEdBQUcsT0FBTyxJQUFJbm1FLEVBQUVtbUUsSUFBSW5tRSxFQUFFd1AsUUFBUSxDQUFDODdDLE9BQU8sV0FBVyxPQUFPK1QsRUFBRXI3RCxPQUFPMnJGLEtBQUssV0FBVyxPQUFPM3JGLEtBQUt1NUIsSUFBSSxVQUFVLFNBQVMyRSxLQUFLLFdBQVcsT0FBT2xnQyxFQUFFZ0MsTUFBTUEsTUFBTXFrRSxNQUFNLFdBQVcsT0FBTzlrRSxFQUFFUyxLQUFLLEtBQUt3UyxLQUFLLFdBQVcsT0FBT2pULEVBQUV0QixFQUFFK0IsUUFBUXFELElBQUksU0FBUzgrRCxHQUFHLE9BQU9uaUUsS0FBS21pRSxJQUFJeXBCLEdBQUcsU0FBU3pwQixHQUFHLE9BQU81aUUsRUFBRVMsS0FBS21pRSxLQUFLL3dELEdBQUcsU0FBUyt3RCxFQUFFNWlFLEVBQUU3RSxHQUFHLE9BQU9zcUMsRUFBRTV6QixHQUFHcFIsS0FBS21pRSxFQUFFNWlFLEVBQUU3RSxHQUFHc0YsTUFBTXc1RSxJQUFJLFNBQVNyWCxFQUFFNWlFLEVBQUU3RSxHQUFHLE9BQU9zcUMsRUFBRXcwQyxJQUFJeDVFLEtBQUttaUUsRUFBRTVpRSxFQUFFN0UsR0FBR3NGLE1BQU1ncEMsS0FBSyxTQUFTbTVCLEdBQUcsSUFBSTVpRSxFQUFFaW9FLEVBQUV4K0IsS0FBS2hwQyxLQUFLbWlFLEdBQUcsT0FBT0YsRUFBRUUsR0FBRzVpRSxFQUFFUyxNQUFNK0YsS0FBSyxTQUFTbzhELEdBQUcsSUFBSTVpRSxFQUFFaW9FLEVBQUV6aEUsS0FBSy9GLEtBQUttaUUsR0FBRyxPQUFPRixFQUFFRSxHQUFHNWlFLEVBQUVTLE1BQU12RixJQUFJLFNBQVMwbkUsR0FBRyxJQUFJNWlFLEVBQUVpb0UsRUFBRS9zRSxJQUFJdUYsS0FBS21pRSxHQUFHLE9BQU9GLEVBQUVFLEdBQUc1aUUsRUFBRVMsTUFBTXU1QixJQUFJLFNBQVM0b0MsRUFBRTVpRSxHQUFHLElBQUk3RSxFQUFFaXBDLEVBQUUzakMsS0FBS21pRSxFQUFFNWlFLEdBQUcsT0FBT2s4QyxFQUFFMG1CLEVBQUU1aUUsR0FBRzdFLEVBQUVzRixNQUFNcXJCLEtBQUssU0FBUzgyQyxFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUV3aEMsRUFBRWw4QixLQUFLbWlFLEVBQUU1aUUsR0FBRyxPQUFPazhDLEVBQUUwbUIsRUFBRTVpRSxHQUFHN0UsRUFBRXNGLE1BQU02RixLQUFLLFNBQVNzOEQsRUFBRTVpRSxHQUFHLElBQUk3RSxFQUFFMEMsRUFBRTRDLEtBQUttaUUsRUFBRTVpRSxHQUFHLE9BQU9rOEMsRUFBRTBtQixFQUFFNWlFLEdBQUc3RSxFQUFFc0YsTUFBTTZyRixPQUFPLFNBQVMxcEIsR0FBRyxPQUFPam1DLEVBQUU3L0IsT0FBTzJELEtBQUttaUUsR0FBR25pRSxNQUFNM0QsT0FBTyxXQUFXLE9BQU9nQixFQUFFMkMsTUFBTUEsTUFBTWk1QixTQUFTLFNBQVNrcEMsR0FBRyxPQUFPOXlELEVBQUU5SyxJQUFJdkUsS0FBS21pRSxHQUFHbmlFLE1BQU04ckYsUUFBUSxTQUFTM3BCLEdBQUcsT0FBTzl5RCxFQUFFaFQsT0FBTzJELEtBQUttaUUsR0FBR25pRSxNQUFNK3JGLFlBQVksU0FBUzVwQixHQUFHLE9BQU85eUQsRUFBRXE4RSxPQUFPMXJGLEtBQUttaUUsR0FBR25pRSxNQUFNZ3NGLFNBQVMsU0FBUzdwQixHQUFHLE9BQU85eUQsRUFBRS9LLElBQUl0RSxLQUFLbWlFLElBQUkxN0QsT0FBTyxXQUFXLE9BQU9sSCxFQUFFUyxLQUFLLEdBQUc4ckIsYUFBYXU2QixPQUFPLFNBQVM4YixHQUFHLE9BQU85b0QsRUFBRWd0QyxPQUFPcm1ELEtBQUttaUUsR0FBR25pRSxNQUFNZy9DLFFBQVEsU0FBU21qQixHQUFHLE9BQU85b0QsRUFBRTJsQyxRQUFRaC9DLEtBQUttaUUsR0FBR25pRSxNQUFNd2hCLE9BQU8sU0FBUzJnRCxHQUFHLE9BQU85b0QsRUFBRW1JLE9BQU94aEIsS0FBS21pRSxHQUFHbmlFLE1BQU0waEQsTUFBTSxTQUFTeWdCLEdBQUcsT0FBTzlvRCxFQUFFcW9DLE1BQU0xaEQsS0FBS21pRSxHQUFHbmlFLFFBQVEsSUFBSXk3QyxFQUFFLFNBQVMwbUIsRUFBRTVpRSxHQUFHLE9BQU8waUUsRUFBRTFpRSxJQUFJNUYsRUFBRXdvRSxJQUFJQSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLElBQUkyZ0UsRUFBRTNnRSxFQUFFLEdBQUdzRCxFQUFFdEQsRUFBRSxHQUFHaXBDLEVBQUUsSUFBSXBrQyxFQUFFdkQsRUFBRSxDQUFDcXNGLFVBQVUsU0FBU0MsV0FBVyxTQUFTbm1CLEdBQUcsT0FBT25pRSxLQUFLL0QsT0FBTyxFQUFFa21FLEVBQUU5RyxFQUFFOEcsR0FBR3grQixFQUFFK3lDLEtBQUt2VSxRQUFRQSxFQUFFMWxDLFdBQVd6OEIsS0FBSyxHQUFHbWlFLEVBQUVuaUUsS0FBSy9ELE9BQU8sSUFBSStELE1BQU0wMkUsS0FBSyxTQUFTdlUsR0FBRyxJQUFJem5FLEVBQUUsSUFBSTZFLEVBQUUsT0FBT1MsS0FBSys2RCxNQUFLLFlBQWEsU0FBU29ILEVBQUU1aUUsR0FBRyxJQUFJLElBQUk3RSxFQUFFNkUsRUFBRXRELE9BQU9ELEVBQUVtbUUsRUFBRWxtRSxPQUFPby9ELEVBQUUsRUFBRUEsRUFBRTNnRSxFQUFFMmdFLElBQUk4RyxFQUFFbm1FLEtBQUt1RCxFQUFFODdELEdBQUc4RyxFQUFFbG1FLE9BQU9ELEVBQTdFLENBQWdGdEIsRUFBRXNGLEtBQUtpcEYsaUJBQWlCOW1CLE9BQU96bkUsR0FBR3FnRSxLQUFLLFNBQVNvSCxHQUFHLE9BQU9ua0UsRUFBRWdDLE1BQUssU0FBVVQsRUFBRTdFLEdBQUd5bkUsRUFBRTduRSxLQUFLaUYsRUFBRTdFLEVBQUU2RSxNQUFNUyxTQUFTNlAsVUFBVXN5RCxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLElBQUk2RSxFQUFFLFNBQVM0aUUsR0FBRyxPQUFPbm1FLEVBQUVtbUUsR0FBR2p5QyxLQUFLLE1BQU1peUMsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUUsV0FBV3NCLEVBQUUsWUFBWXEvRCxFQUFFLGFBQWE5N0QsRUFBRSxTQUFTNGlFLEdBQUcsT0FBT0EsRUFBRUEsRUFBRWhsRSxRQUFRekMsRUFBRSxPQUFPd0IsY0FBY2lCLFFBQVFuQixFQUFFLEtBQUttQixRQUFRaytELEVBQUUsS0FBS3QvRCxNQUFNLE1BQU1vbUUsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxJQUFJMmdFLEVBQUUzZ0UsRUFBRSxHQUFHc0QsRUFBRXRELEVBQUUsR0FBR2lwQyxFQUFFanBDLEVBQUUsR0FBR3doQyxFQUFFeGhDLEVBQUUsR0FBRzhzRSxFQUFFOXNFLEVBQUUsSUFBSTZFLEVBQUUsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLEdBQUd5bkUsRUFBRXFGLEVBQUVyRixHQUFHam1DLEVBQUV4aEMsSUFBSXNELEVBQUV1QixHQUFHLE9BQU8sU0FBUzRpRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFaHBDLGFBQWE1NUIsR0FBcEMsQ0FBd0M0aUUsRUFBRSxHQUFHNWlFLEdBQUcsSUFBSXZELEVBQUV1RCxFQUFFODdELEVBQUVyL0QsTUFBTUEsRUFBRSxJQUFJdUQsR0FBRzdFLEdBQUcsU0FBU3luRSxFQUFFNWlFLEdBQUdva0MsRUFBRXcrQixHQUFFLFNBQVVBLEdBQUd4K0IsRUFBRXBrQyxHQUFFLFNBQVVBLEVBQUU3RSxHQUFHeW5FLEVBQUU5MEMsYUFBYTN5QixFQUFFNkUsU0FBbkUsQ0FBNkU0aUUsRUFBRW5tRSxLQUFLSyxPQUFPLFNBQVM4bEUsRUFBRTVpRSxHQUFHNGlFLEVBQUVxRixFQUFFckYsR0FBRzVpRSxFQUFFdkQsRUFBRXVELEdBQUdva0MsRUFBRXcrQixHQUFFLFNBQVVBLEdBQUd4K0IsRUFBRXBrQyxHQUFFLFNBQVVBLEdBQUc0aUUsRUFBRTF4QyxnQkFBZ0JseEIsVUFBVTRpRSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsR0FBR0EsRUFBRSxTQUFTNGlFLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRSxHQUFHNkUsRUFBRUEsR0FBRyxFQUFFLElBQUksSUFBSXZELEVBQUUsRUFBRXEvRCxFQUFFeGdFLEtBQUtvaEUsS0FBS2tHLEVBQUVsbUUsT0FBT3NELEdBQUd2RCxFQUFFcS9ELEVBQUVyL0QsSUFBSSxDQUFDLElBQUlnQyxFQUFFaEMsRUFBRXVELEVBQUVva0MsRUFBRTNsQyxFQUFFdUIsRUFBRTdFLEVBQUVzSyxLQUFLbTlELEVBQUUxa0UsTUFBTU8sRUFBRTJsQyxJQUFJLE9BQU9qcEMsR0FBR3luRSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYSxJQUFJc0IsRUFBRWdFLE1BQU1BLEtBQUsyekYsaUJBQWlCLFNBQVN4eEIsR0FBRyxPQUFPQSxHQUFHQSxFQUFFbmlELFdBQVdtaUQsRUFBRSxDQUFDMTBELFFBQVEwMEQsSUFBSTNvRSxPQUFPa0ksZUFBZW5DLEVBQUUsYUFBYSxDQUFDeEYsT0FBTSxJQUFLLElBQUlzaEUsRUFBRXIvRCxFQUFFdEIsRUFBRSxLQUFLc0QsRUFBRWhDLEVBQUV0QixFQUFFLEtBQUtpcEMsRUFBRTNuQyxFQUFFdEIsRUFBRSxLQUFLd2hDLEVBQUVsZ0MsRUFBRXRCLEVBQUUsS0FBSzhzRSxFQUFFeHJFLEVBQUV0QixFQUFFLEtBQUs2RSxFQUFFaWxELE9BQU8sU0FBUzJkLEdBQUcsT0FBT3FGLEVBQUUvNUQsUUFBUTR0RCxFQUFFNXRELFFBQVEwMEQsSUFBSWhsRSxRQUFRLE1BQU0sS0FBS0EsUUFBUSxZQUFZLEtBQUtvQyxFQUFFcTBGLGNBQWMsU0FBU3p4QixHQUFHLE9BQU9BLEVBQUVsbUUsT0FBTyxNQUFNa21FLEVBQUVBLEVBQUUxa0UsTUFBTSxFQUFFLEtBQUssT0FBTyxLQUFLTyxFQUFFeVAsUUFBUSxTQUFTMDBELEdBQUcsSUFBSTVpRSxFQUFFNGlFLEVBQUVuL0QsTUFBTS9FLEdBQUcsT0FBT3NCLEVBQUVBLEVBQUUsR0FBRzRpRSxFQUEzQyxDQUE4Q0EsR0FBR2hsRSxRQUFRLFdBQVcsTUFBTSxJQUFJYyxFQUFFLHlCQUF5QixTQUFTWixFQUFFOGtFLEVBQUU1aUUsR0FBRyxPQUFPNGlFLEVBQUUva0UsRUFBRStrRSxLQUFLNWlFLEVBQUVuQyxFQUFFbUMsSUFBSSxFQUFFNGlFLEVBQUU1aUUsR0FBRyxFQUFFLEVBQUUsU0FBU25DLEVBQUUra0UsR0FBRyxPQUFPLEtBQUtBLEVBQUUsSUFBSUEsRUFBRTVpRSxFQUFFczBGLFlBQVksU0FBUzF4QixFQUFFNWlFLEdBQUc0aUUsRUFBRTlHLEVBQUU1dEQsUUFBUTAwRCxHQUFHNWlFLEVBQUU4N0QsRUFBRTV0RCxRQUFRbE8sR0FBRyxJQUFJN0UsRUFBRWlwQyxFQUFFbDJCLFFBQVEwMEQsR0FBR25tRSxFQUFFMm5DLEVBQUVsMkIsUUFBUWxPLEdBQUcsSUFBSS9ELE1BQU1kLEtBQUtjLE1BQU1RLEdBQUcsT0FBT3RCLEVBQUVzQixFQUFFLEVBQUV0QixFQUFFc0IsR0FBRyxFQUFFLEdBQUdrZ0MsRUFBRXp1QixRQUFRMDBELEVBQUUsU0FBU2ptQyxFQUFFenVCLFFBQVEwMEQsRUFBRSxXQUFXQSxFQUFFQSxFQUFFMWtFLE1BQU0sS0FBS3krQixFQUFFenVCLFFBQVFsTyxFQUFFLFNBQVMyOEIsRUFBRXp1QixRQUFRbE8sRUFBRSxXQUFXQSxFQUFFQSxFQUFFOUIsTUFBTSxJQUFJLElBQUksSUFBSU8sRUFBRW1rRSxFQUFFbG1FLE9BQU91ckUsRUFBRWpvRSxFQUFFdEQsT0FBT2dDLEVBQUVELEVBQUV3cEUsRUFBRUEsRUFBRXhwRSxFQUFFWixFQUFFLEVBQUVBLEVBQUVhLEVBQUViLElBQUksQ0FBQyxJQUFJNG5DLEVBQUUzbkMsRUFBRThrRSxFQUFFNWdFLFdBQVduRSxHQUFHbUMsRUFBRWdDLFdBQVduRSxJQUFJLEdBQUcsSUFBSTRuQyxFQUFFLE9BQU9BLEVBQUUsT0FBT2huQyxFQUFFd3BFLEVBQUUsRUFBRXhwRSxFQUFFd3BFLEdBQUcsRUFBRSxJQUFJLFNBQVNyRixFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxHQUFHMmdFLEVBQUUzZ0UsRUFBRSxHQUFHc0QsRUFBRXRELEVBQUUsR0FBR2lwQyxFQUFFanBDLEVBQUUsR0FBRzZFLEVBQUUsU0FBUzRpRSxHQUFHLEdBQUdubUUsRUFBRW1tRSxHQUFHLE9BQU9BLEVBQUUsR0FBRzlHLEVBQUU4RyxHQUFHLENBQUMsSUFBSTVpRSxFQUFFdkIsRUFBRW1rRSxFQUFFeXFCLFNBQVN6cUIsRUFBRXlxQixVQUFVenFCLEVBQUVBLEVBQUU5RyxFQUFFOTdELEdBQUdBLEVBQUUsR0FBR0EsRUFBRSxPQUFPb2tDLEVBQUV3K0IsSUFBSUEsRUFBRSxJQUFJQSxFQUFFQSxHQUFHQSxHQUFHQSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsR0FBR0EsRUFBRSxTQUFTNGlFLEVBQUU1aUUsR0FBRyxPQUFPLElBQUk0aUUsRUFBRTFsRSxRQUFROEMsSUFBSTRpRSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYSxJQUFJc0IsRUFBRXEvRCxFQUFFcjlELEVBQUVnQyxNQUFNQSxLQUFLOHpGLFlBQVk5M0YsRUFBRSxTQUFTbW1FLEVBQUU1aUUsR0FBRyxPQUFPdkQsRUFBRXhDLE9BQU82NEYsZ0JBQWdCLENBQUN0cEYsVUFBVSxjQUFjNU4sT0FBTyxTQUFTZ25FLEVBQUU1aUUsR0FBRzRpRSxFQUFFcDVELFVBQVV4SixJQUFJLFNBQVM0aUUsRUFBRTVpRSxHQUFHLElBQUksSUFBSTdFLEtBQUs2RSxFQUFFQSxFQUFFNUMsZUFBZWpDLEtBQUt5bkUsRUFBRXpuRSxHQUFHNkUsRUFBRTdFLE1BQU15bkUsRUFBRTVpRSxJQUFJLFNBQVM0aUUsRUFBRTVpRSxHQUFHLFNBQVM3RSxJQUFJc0YsS0FBS2ttQixZQUFZaThDLEVBQUVubUUsRUFBRW1tRSxFQUFFNWlFLEdBQUc0aUUsRUFBRWhvRSxVQUFVLE9BQU9vRixFQUFFL0YsT0FBT3FDLE9BQU8wRCxJQUFJN0UsRUFBRVAsVUFBVW9GLEVBQUVwRixVQUFVLElBQUlPLEtBQUtpcEMsRUFBRTNqQyxNQUFNQSxLQUFLMnpGLGlCQUFpQixTQUFTeHhCLEdBQUcsT0FBT0EsR0FBR0EsRUFBRW5pRCxXQUFXbWlELEVBQUUsQ0FBQzEwRCxRQUFRMDBELElBQUkzb0UsT0FBT2tJLGVBQWVuQyxFQUFFLGFBQWEsQ0FBQ3hGLE9BQU0sSUFBSyxJQUFJbWlDLEVBQUV5SCxFQUFFanBDLEVBQUUsS0FBSzhzRSxFQUFFN2pDLEVBQUVqcEMsRUFBRSxLQUFLdUQsRUFBRTBsQyxFQUFFanBDLEVBQUUsSUFBSTJDLEVBQUVzbUMsRUFBRWpwQyxFQUFFLEtBQUswQyxFQUFFdW1DLEVBQUVqcEMsRUFBRSxLQUFLc3FDLEVBQUVyQixFQUFFanBDLEVBQUUsSUFBSTJVLEVBQUVzMEIsRUFBRWpwQyxFQUFFLEtBQUsyZSxFQUFFc3FCLEVBQUVqcEMsRUFBRSxLQUFLdW5FLEVBQUV0K0IsRUFBRWpwQyxFQUFFLElBQUlmLEVBQUVncUMsRUFBRWpwQyxFQUFFLElBQUkrZ0QsRUFBRTlYLEVBQUVqcEMsRUFBRSxLQUFLdTRCLEVBQUUwUSxFQUFFanBDLEVBQUUsS0FBS29FLEVBQUU2a0MsRUFBRWpwQyxFQUFFLEtBQUt3MEQsRUFBRXZyQixFQUFFanBDLEVBQUUsS0FBSzZ1RSxFQUFFNWxDLEVBQUVqcEMsRUFBRSxLQUFLdXFELEVBQUV0aEIsRUFBRWpwQyxFQUFFLEtBQUswdUUsRUFBRXpsQyxFQUFFanBDLEVBQUUsS0FBS3V6RSxFQUFFdHFDLEVBQUVqcEMsRUFBRSxLQUFLeXlFLEVBQUV4cEMsRUFBRWpwQyxFQUFFLEtBQUtreUUsRUFBRWpwQyxFQUFFanBDLEVBQUUsS0FBS2dtQixFQUFFaWpCLEVBQUVqcEMsRUFBRSxLQUFLK2lFLEVBQUUvaUUsRUFBRSxJQUFJOGlFLEVBQUU3NUIsRUFBRWpwQyxFQUFFLEtBQUtBLEVBQUUsSUFBSSxJQUFJZ2pFLEVBQUUsc0JBQXNCeUUsRUFBRXhtQixVQUFVMGYsRUFBRSxTQUFTOEcsR0FBRyxTQUFTNWlFLEVBQUVBLEVBQUU3RSxHQUFHLElBQUlzQixPQUFFLElBQVN0QixFQUFFLEdBQUdBLEVBQUUyZ0UsRUFBRXIvRCxFQUFFMnFGLGFBQWEzb0YsT0FBRSxJQUFTcTlELEdBQUdBLEVBQUUxM0IsRUFBRTNuQyxFQUFFbTFGLGFBQWFqMUQsT0FBRSxJQUFTeUgsR0FBR0EsRUFBRTZqQyxFQUFFckYsRUFBRTduRSxLQUFLMEYsT0FBT0EsS0FBSyxPQUFPd25FLEVBQUV1c0IsV0FBVzdrQyxFQUFFemhELFFBQVFsTyxHQUFHaW9FLEVBQUV1c0IsV0FBVzk2RCxTQUFTLHNCQUFzQnV1QyxFQUFFbWYsYUFBYTNvRixFQUFFd3BFLEVBQUUycEIsYUFBYWoxRCxFQUFFc3JDLEVBQUV3c0IsWUFBWXhzQixFQUFFLE9BQU94cEUsRUFBRXVCLEVBQUU0aUUsR0FBRzVpRSxFQUFFcEYsVUFBVWtLLElBQUksU0FBUzg5RCxHQUFHbmlFLEtBQUs2RixLQUFLLENBQUNzOEQsR0FBR25pRSxLQUFLdXhGLFFBQVEsSUFBSTd3RSxFQUFFalQsUUFBUXpOLEtBQUtwRSxJQUFJLEdBQUdvRSxLQUFLaTBGLGFBQWExMEYsRUFBRXBGLFVBQVUrNUYsVUFBVSxTQUFTL3hCLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXNGLEtBQUtoRSxFQUFFZ0UsS0FBS3V4RixRQUFRbDJCLEVBQUU4RyxFQUFFbmtFLEdBQUUsRUFBRzJsQyxFQUFFM25DLEVBQUVxSCxJQUFJOCtELEdBQUd4K0IsR0FBR0EsRUFBRTJSLE9BQU8rbEIsRUFBRTEzQixFQUFFMlIsTUFBTSxJQUFJcFosRUFBRSxHQUFHaitCLEVBQUUsQ0FBQyxjQUFjWixFQUFFNGtFLEVBQUV4MEQsUUFBUTAwRCxHQUFHL2tFLEVBQUUsR0FBRzRuQyxFQUFFLEdBQUczckIsRUFBRSxHQUFHb2lDLEVBQUUsR0FBRyxHQUFHejdDLEtBQUsybUYsZUFBZXBuRixJQUFJdEIsRUFBRStHLEtBQUssZ0JBQWdCL0csRUFBRStHLEtBQUssVUFBVTVILEVBQUVtc0UsRUFBRTk3RCxRQUFRdzNDLEVBQUV4M0MsUUFBUTAwRCxFQUFFLENBQUNob0UsV0FBVSxFQUFHd3NGLGNBQWEsSUFBS3RwRixHQUFHMm5DLEVBQUVva0MsRUFBRTM3RCxRQUFRdzNDLEVBQUV4M0MsUUFBUTAwRCxFQUFFLENBQUNob0UsV0FBVSxFQUFHbWQsUUFBTyxLQUFLLFNBQVU2cUQsR0FBRyxNQUFNLGlCQUFpQkEsTUFBTTl5RCxFQUFFNUIsUUFBUTAwRCxJQUFJQSxFQUFFbG1FLE9BQU8sSUFBSSxDQUFDZ0MsRUFBRTBzQixRQUFRLFdBQVczc0IsR0FBRSxFQUFHLElBQUljLEVBQUUsRUFBRW93RCxFQUFFLEdBQUd2MUQsRUFBRThULFFBQVF3Z0UsRUFBRXhnRSxRQUFRMDBELEVBQUUsTUFBSyxTQUFVQSxHQUFHLElBQUk1aUUsRUFBRS9GLE9BQU9xQyxPQUFPLE1BQU1uQixFQUFFb0UsRUFBRTlDLEVBQUUsSUFBSXRCLEVBQUVmLEVBQUU4VCxRQUFRMDBELEdBQUUsU0FBVUEsR0FBRzVpRSxFQUFFVCxHQUFHcWpFLEVBQUVqVCxFQUFFcHdELElBQUcsRUFBR0EsT0FBTyxJQUFJdThELEVBQUV2OEQsRUFBRSxFQUFFMjhDLEVBQUV6L0MsSUFBSXEvRCxFQUFFM2dFLEVBQUUsRUFBRSxNQUFNMmdFLEVBQUUsSUFBSSxLQUFLOTdELEtBQUs4WixFQUFFNG9ELEVBQUV4MEQsUUFBUWd1QyxHQUFHcCtDLEVBQUUrckUsRUFBRTM3RCxRQUFRcFEsR0FBRSxTQUFVOGtFLEdBQUcsT0FBT2pULEVBQUVpVCxNQUFNeG9FLEVBQUU4VCxRQUFReFAsR0FBRSxTQUFVakMsR0FBRyxJQUFJMm5DLEVBQUUsR0FBR0EsRUFBRSxXQUFXM25DLEVBQUVncEMsRUFBRSxpQkFBaUJocEMsRUFBRW9CLEVBQUUsWUFBWXBCLEVBQUVxZCxFQUFFaGMsRUFBRVcsR0FBRzJsQyxFQUFFcGlCLEtBQUtrOEMsRUFBRW8yQixhQUFhLElBQUksSUFBSXJzQixFQUFFLEVBQUV2cEUsRUFBRTBsQyxFQUFFMW5DLE9BQU91ckUsRUFBRXZwRSxFQUFFdXBFLElBQUksQ0FBQyxJQUFJbjRELEVBQUU4OUQsRUFBRTEvRCxRQUFRazJCLEVBQUU2akMsSUFBSXZGLEVBQUUsR0FBR3RvRSxFQUFFSCxPQUFPbVEseUJBQXlCdzRELEVBQUU5eUQsR0FBR3ZRLEVBQUVuRixHQUFHQSxFQUFFMEosSUFBSTZyRCxFQUFFdjFELEdBQUdBLEVBQUUwSyxJQUFJLEdBQUd2RixJQUFJcEUsRUFBRXkyRixhQUFhbHZCLEVBQUUsYUFBYSxJQUFJQSxFQUFFLFlBQVlqbUUsRUFBRXkvQyxFQUFFcHNDLEdBQUdnc0QsRUFBRWhzRCxHQUFHNGpCLEVBQUV4bEIsUUFBUXcwRCxJQUFJQSxFQUFFL21FLE1BQU0weEUsRUFBRW4vRCxTQUFTLE1BQU0wMEQsR0FBR0YsRUFBRUUsRUFBRXRSLFFBQVEzMEIsR0FBR3hoQyxFQUFFeTVGLFNBQVM5a0YsRUFBRTh5RCxFQUFFRixFQUFFam1FLEVBQUV1RCxHQUFHVCxJQUFJbzlCLEdBQUd4aEMsRUFBRXk1RixTQUFTLE9BQU85a0YsRUFBRTh5RCxFQUFFeG9FLEVBQUUwSixJQUFJckgsRUFBRXVELElBQUkydkQsSUFBSWh6QixHQUFHeGhDLEVBQUV5NUYsU0FBUyxPQUFPOWtGLEVBQUU4eUQsRUFBRXhvRSxFQUFFMEssSUFBSXJJLEVBQUV1RCxRQUFRLElBQUltaEIsRUFBRThtRCxFQUFFLzVELFFBQVEwMEQsR0FBRyxJQUFJNWlFLEdBQUdtaEIsRUFBRSxHQUFHLEtBQUt3YixFQUFFLENBQUMsSUFBSXNoQyxFQUFFeGhFLEVBQUVxSSxJQUFJcWMsRUFBRSxDQUFDNDBCLEtBQUs2c0IsSUFBSW5pRSxLQUFLcEUsSUFBSTRoRSxHQUFHOThDLEVBQUV3YixFQUFFbDhCLEtBQUtrMEYsVUFBVXh6RSxRQUFRd2IsR0FBR2w4QixLQUFLbTBGLFNBQVMsWUFBWTk0QixHQUFHOEcsRUFBRXpoRCxFQUFFLFNBQVMsT0FBT3diLEdBQUczOEIsRUFBRXBGLFVBQVVnNkYsU0FBUyxTQUFTaHlCLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELFFBQUcsSUFBU0EsSUFBSUEsR0FBRSxHQUFJLElBQUlyOUQsRUFBRWdDLEtBQUt1eEYsUUFBUTV0RCxTQUFTanBDLEVBQUV3aEMsRUFBRXA5QixFQUFFMk8sUUFBUS9TLEdBQUUsR0FBSSxHQUFHLFlBQVlzQixJQUFJa2dDLEVBQUVpbUMsR0FBRyxPQUFPem5FLEVBQUUsTUFBTSxPQUFPdzBELEVBQUVpVCxHQUFHLGdCQUFnQnpFLEVBQUUseUJBQXlCLEdBQUd6L0QsRUFBRXdQLFFBQVEvUyxJQUFJMkMsRUFBRW9RLFFBQVEvUyxHQUFHLE1BQU0sT0FBT3cwRCxFQUFFaVQsR0FBRyxpQkFBaUJ6RSxFQUFFLzVCLEdBQUcsS0FBSzg1QixFQUFFalosT0FBTzlwRCxHQUFHLGVBQWUsR0FBRyxXQUFXd2hDLElBQUl5SCxFQUFFLFVBQVUsV0FBV3pILElBQUl5SCxFQUFFLFVBQVUsV0FBV3pILEdBQUcsV0FBV0EsRUFBRSxNQUFNLE9BQU9nekIsRUFBRWlULEdBQUcsaUJBQWlCekUsRUFBRS81QixHQUFHLEtBQUs4NUIsRUFBRWpaLE9BQU85cEQsRUFBRVgsT0FBTyxlQUFlLEdBQUcsY0FBY21pQyxHQUFHLFdBQVdBLEVBQUUsTUFBTSxPQUFPZ3pCLEVBQUVpVCxHQUFHLGdCQUFnQnpFLEVBQUUsWUFBWXRnRSxFQUFFcVEsUUFBUXl1QixHQUFHLGVBQWUsR0FBRyxVQUFVeGhDLEVBQUUsTUFBTSxPQUFPdzBELEVBQUVpVCxHQUFHLGdCQUFnQnpFLEVBQUUsWUFBWWhqRSxFQUFFLGVBQWUsR0FBR3NxQyxFQUFFdjNCLFFBQVEvUyxHQUFHLENBQUMsSUFBSThzRSxFQUFFeHBFLEVBQUVxRixJQUFJM0ksR0FBRzJVLE9BQUUsRUFBTyxHQUFHbTRELEVBQUVuNEQsRUFBRW00RCxFQUFFNWlFLE9BQU8sQ0FBQyxJQUFJcTlELEVBQUUsR0FBRyxVQUFVam1FLElBQUlpbUUsRUFBRTNzQixLQUFLLzFDLEdBQUc4UCxFQUFFclIsRUFBRXFHLElBQUkzSixFQUFFdW5FLEdBQUdqaUUsS0FBS3BFLElBQUl5VCxHQUFHM1UsRUFBRSxJQUFJZixFQUFFLFNBQVN3b0UsRUFBRTVpRSxHQUFHLEdBQUdBLEVBQUUsTUFBTSxhQUFhQSxFQUFFaytELEVBQUVtMkIsY0FBY240QyxFQUFFaHVDLFFBQVEwMEQsSUFBSSxVQUFVNWlFLEVBQUUsU0FBUzRpRSxFQUFFbG1FLE9BQU8sSUFBSXNELEVBQXhHLENBQTJHN0UsRUFBRXdoQyxJQUFJN2lCLEVBQUU1TCxRQUFRazJCLEdBQUcxUSxFQUFFLFFBQVFvb0MsRUFBRSwwQkFBMEIsSUFBSSxvQkFBb0Joc0QsRUFBRSxtQkFBbUJnc0QsRUFBRSxHQUFHcUMsRUFBRSxZQUFZQSxFQUFFLGFBQWEsWUFBWXhPLEVBQUVpVCxHQUFHLGdCQUFnQnpFLEVBQUUsVUFBVXJDLEVBQUUsR0FBRzFoRSxHQUFHLHNCQUFzQitqRSxFQUFFLzVCLEdBQUcsTUFBTTAzQixFQUFFLEdBQUcsd0JBQXdCLElBQUksT0FBT0EsSUFBSXBvQyxHQUFHanpCLEtBQUtrMEYsVUFBVXg1RixJQUFJdTRCLEVBQUUscUJBQXFCeXFDLEVBQUUsc0JBQXNCLFNBQVN4TyxFQUFFaVQsR0FBRyxHQUFHOUcsRUFBRSxNQUFNLEdBQUcsR0FBR3IyQixFQUFFdjNCLFFBQVEvUyxJQUFJLFlBQVlzQixFQUFFLE1BQU0sR0FBRyxJQUFJdUQsRUFBRW0rRCxFQUFFLE1BQU0sTUFBTSxpQkFBaUIxaEUsR0FBRyxVQUFVQSxHQUFHLFdBQVdBLElBQUl1RCxFQUFFbStELEVBQUUsZUFBZSxnQkFBZ0JuK0QsRUFBRSxLQUFLaytELEVBQUVqWixPQUFPMmQsR0FBRyxZQUFZLE1BQU0sT0FBT2pULEVBQUVpVCxHQUFHLGdCQUFnQnpFLFNBQVNoakUsRUFBRSxNQUFNK2lFLEVBQUVqWixPQUFPOXBELEdBQUcsaUJBQWlCNkUsRUFBRXBGLFVBQVU4NUYsVUFBVSxXQUFXajBGLEtBQUsrekYsV0FBVy9xRCxLQUFLaHBDLEtBQUtrMEYsVUFBVWwwRixLQUFLNkYsTUFBSyxLQUFNdEcsRUFBRXBGLFVBQVU2NUYsVUFBVSxXQUFXLElBQUk3eEIsRUFBRW5pRSxLQUFLQSxLQUFLK3pGLFdBQVczaUYsR0FBRyxRQUFRLE1BQUssU0FBVTdSLEdBQUcsSUFBSTdFLEVBQUV5bkUsRUFBRXZtRSxJQUFJSSxFQUFFa3pELEVBQUV6aEQsUUFBUXpOLE1BQU1xN0QsRUFBRXIvRCxFQUFFNkosS0FBSyxhQUFhN0gsRUFBRWt4RCxFQUFFemhELFFBQVF6TixNQUFNMDJFLEtBQUssUUFBUWtWLEdBQUcsR0FBRyxJQUFJNXZGLEVBQUU2SixLQUFLLGlCQUFpQncxRCxJQUFJci9ELEVBQUUwNkUsS0FBSyxNQUFNMXRDLEtBQUttNUIsRUFBRSt4QixVQUFVeDVGLEVBQUUyZ0UsSUFBRyxJQUFLci9ELEVBQUU2dkYsT0FBTyxtQkFBbUJ0c0YsRUFBRXd4QiwyQkFBMkIveUIsRUFBRWd1RixTQUFTdHVCLEVBQUUsYUFBYSxDQUFDLElBQUkvNUIsRUFBRTNuQyxFQUFFMDZFLEtBQUssTUFBTWtWLEdBQUcsR0FBRzV0RixFQUFFZ3VGLFNBQVN0dUIsRUFBRSxjQUFjMS9ELEVBQUU4dEYsUUFBUXB1QixFQUFFLGFBQWEvNUIsRUFBRXpGLFNBQVNsZ0MsRUFBRWk3QixTQUFTeWtDLEVBQUUsYUFBYS81QixFQUFFZ29ELFFBQVF4cEIsRUFBRXBnRCxLQUFLLGVBQWV4aUIsRUFBanFILENBQW9xSDI4QixFQUFFenVCLFVBQVUybUYsT0FBTzUyQixFQUFFL3ZELFFBQVE0dEQsSUFBSSxTQUFTOEcsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXRCLEVBQUUsSUFBSTZFLEVBQUUsV0FBVyxJQUFJLElBQUk0aUUsRUFBRSxFQUFFNWlFLEVBQUU4N0QsRUFBRXAvRCxPQUFPa21FLEVBQUU1aUUsRUFBRTRpRSxJQUFJLENBQUMsSUFBSXpuRSxFQUFFMmdFLEVBQUU4RyxHQUFHLEdBQUcsbUJBQW1Cbm1FLEVBQUV0QixHQUFHLE9BQU0sRUFBRyxPQUFNLEdBQUksSUFBSTJnRSxFQUFFLENBQUMsWUFBWSxRQUFRLGFBQWEsU0FBUyxXQUFXLE1BQU04RyxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLElBQUcsU0FBVXNCLEdBQUcsSUFBSXEvRCxFQUFFM2dFLEVBQUUsSUFBSTZFLEVBQUU4N0QsRUFBRW41RCxPQUFPbEcsRUFBRW1tRSxFQUFFeG1CLFFBQVFwOEMsSUFBSWpGLEtBQUswRixLQUFLdEYsRUFBRSxNQUFNLFNBQVN5bkUsRUFBRTVpRSxHQUFHLElBQUk3RSxFQUFFQSxFQUFFLFdBQVcsT0FBT3NGLEtBQWxCLEdBQTBCLElBQUl0RixFQUFFQSxHQUFHLElBQUltRCxTQUFTLGNBQWIsR0FBOEIsTUFBTXNrRSxHQUFHLGlCQUFpQmpnRSxTQUFTeEgsRUFBRXdILFFBQVFpZ0UsRUFBRXhtQixRQUFRamhELEdBQUcsU0FBU3luRSxFQUFFNWlFLEdBQUdBLEVBQUUsaUJBQWlCMkMsUUFBUSxpQkFBaUIyTixVQUFVLElBQUlBLFNBQVM0c0IsU0FBUzBsQyxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLElBQUksU0FBUzJnRSxFQUFFOEcsRUFBRTVpRSxHQUFHLE9BQU80aUUsSUFBSTVpRSxFQUFFQSxFQUFFLFNBQVM0aUUsRUFBRTVpRSxHQUFHLE9BQU9BLEVBQUVBLEdBQUc4N0QsRUFBRXIvRCxFQUFFbW1FLEdBQUUsU0FBVUEsRUFBRXpuRSxFQUFFc0IsR0FBRyxJQUFJLElBQUlxL0QsRUFBRXIvRCxFQUFFQyxTQUFTdkIsRUFBRTJnRSxHQUFHLEdBQUc5N0QsRUFBRTRpRSxFQUFFbm1FLEVBQUV0QixJQUFJLE9BQU0sRUFBRyxPQUFNLE1BQU95bkUsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxJQUFJMmdFLEVBQUUzZ0UsRUFBRSxJQUFJNkUsRUFBRSxTQUFTNGlFLEdBQUcsT0FBT0EsRUFBRW5tRSxFQUFFLEdBQUdtbUUsR0FBRyxTQUFTNWlFLEdBQUcsT0FBTzg3RCxFQUFFOTdELEVBQUU0aUUsS0FBS0EsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxHQUFHNkUsRUFBRTdFLEVBQUUsR0FBRkEsQ0FBTXNCLEdBQUdtbUUsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxHQUFHNkUsRUFBRSxTQUFTNGlFLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXNCLEVBQUV1RCxHQUFHODdELEVBQUUzZ0UsRUFBRXVCLE9BQU8sR0FBRyxNQUFNa21FLEVBQUUsT0FBTzlHLEVBQUU4RyxFQUFFM29FLE9BQU8yb0UsR0FBRyxJQUFJLElBQUlua0UsRUFBRSxFQUFFQSxFQUFFcTlELEVBQUVyOUQsSUFBSSxDQUFDLElBQUkybEMsRUFBRWpwQyxFQUFFc0QsR0FBRyxHQUFHdUIsRUFBRW9rQyxLQUFLdytCLEVBQUV4K0IsTUFBTUEsS0FBS3crQixHQUFHLE9BQU0sRUFBRyxPQUFNLEdBQUlBLEVBQUV4bUIsUUFBUXA4QyxHQUFHLFNBQVM0aUUsRUFBRTVpRSxHQUFHQSxFQUFFLFNBQVM0aUUsR0FBRyxPQUFPQSxHQUFHQSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLElBQUkyZ0UsRUFBRTNnRSxFQUFFLEdBQUdzRCxFQUFFdEQsRUFBRSxHQUFHQSxFQUFFLElBQUk2RSxFQUFFLFNBQVM0aUUsRUFBRTVpRSxFQUFFN0UsR0FBRzZFLEVBQUV2RCxFQUFFdUQsRUFBRTdFLEdBQUcsSUFBSSxJQUFJaXBDLEdBQUczbEMsRUFBRW1rRSxJQUFJOUcsRUFBRThHLEdBQUdqbUMsR0FBR3lILEdBQUd3K0IsR0FBR2xtRSxPQUFPdXJFLEVBQUVyc0UsTUFBTStnQyxHQUFHaitCLEVBQUUsRUFBRUEsRUFBRWkrQixFQUFFaitCLElBQUksQ0FBQyxJQUFJWixFQUFFc21DLEVBQUVBLEVBQUUxbEMsR0FBR0EsRUFBRXVwRSxFQUFFdnBFLEdBQUdzQixFQUFFNGlFLEVBQUU5a0UsR0FBR0EsRUFBRThrRSxHQUFHLE9BQU9xRixHQUFHckYsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxJQUFJNkUsRUFBRSxTQUFTNGlFLEVBQUU1aUUsR0FBRzRpRSxFQUFFaG9FLFVBQVU2QixFQUFFdUQsRUFBRXBGLFlBQVlnb0UsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxHQUFHNkUsRUFBRSxTQUFTNGlFLEdBQUcsSUFBSW5tRSxFQUFFbW1FLEdBQUcsTUFBTSxHQUFHLEdBQUc5RyxFQUFFLE9BQU9BLEVBQUU4RyxHQUFHLFNBQVM1aUUsS0FBSyxPQUFPQSxFQUFFcEYsVUFBVWdvRSxFQUFFLElBQUk1aUUsR0FBRyxJQUFJODdELEVBQUU3aEUsT0FBT3FDLE9BQU9zbUUsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxHQUFHMmdFLEVBQUUzZ0UsRUFBRSxJQUFJNkUsRUFBRSxTQUFTNGlFLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRSxJQUFJQSxHQUFHNkUsRUFBRTg3RCxFQUFFOTdELEVBQUU0aUUsSUFBSXp2RCxTQUFTMVcsRUFBRXRCLElBQUksQ0FBQyxHQUFHLE9BQU95bkUsRUFBRUEsRUFBRXpuRSxJQUFJLE9BQU9BLEVBQUU2RSxFQUFFbVQsUUFBUSxPQUFPeXZELEdBQUdBLEVBQUV4bUIsUUFBUXA4QyxHQUFHLFNBQVM0aUUsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXRCLEVBQUUsSUFBSTJnRSxFQUFFM2dFLEVBQUUsSUFBSTZFLEVBQUUsU0FBUzRpRSxFQUFFNWlFLEdBQUcsR0FBRzg3RCxFQUFFOEcsR0FBRyxPQUFPQSxFQUFFLEdBQUc1aUUsR0FBR3ZELEVBQUV1RCxFQUFFNGlFLEdBQUcsTUFBTSxDQUFDQSxHQUFHLElBQUl6bkUsRUFBRSxHQUFHLE9BQU95bkUsRUFBRWhsRSxRQUFRYSxHQUFFLFNBQVVta0UsRUFBRTVpRSxFQUFFdkQsRUFBRXEvRCxHQUFHM2dFLEVBQUVzSyxLQUFLaEosRUFBRXEvRCxFQUFFbCtELFFBQVF3bUMsRUFBRSxNQUFNcGtDLEdBQUc0aUUsTUFBTXpuRSxHQUFHLElBQUlzRCxFQUFFLG1HQUFtRzJsQyxFQUFFLFdBQVd3K0IsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxHQUFHNkUsRUFBRSxvQkFBb0JxaUYsSUFBSTVsRixFQUFFNGxGLEdBQUdDLGNBQWMxZixFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsR0FBR0EsRUFBRSxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUVtbUUsRUFBRWxtRSxPQUFPc0QsRUFBRSxNQUFNQSxFQUFFLEVBQUVBLEVBQUUsRUFBRTFFLEtBQUtvUCxJQUFJak8sRUFBRXVELEVBQUUsR0FBRzFFLEtBQUtnK0QsSUFBSXQ1RCxFQUFFdkQsR0FBR3RCLEVBQUUsTUFBTUEsRUFBRXNCLEVBQUV0QixFQUFFLEVBQUVHLEtBQUtvUCxJQUFJak8sRUFBRXRCLEVBQUUsR0FBR0csS0FBS2crRCxJQUFJbitELEVBQUVzQixHQUFHLElBQUksSUFBSXEvRCxFQUFFLEdBQUc5N0QsRUFBRTdFLEdBQUcyZ0UsRUFBRXIyRCxLQUFLbTlELEVBQUU1aUUsTUFBTSxPQUFPODdELEdBQUc4RyxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUc2RSxFQUFFN0UsRUFBRSxHQUFGQSxDQUFNQSxFQUFFLElBQUksR0FBR3luRSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLElBQUkyZ0UsRUFBRTNnRSxFQUFFLElBQUk2RSxFQUFFdkQsR0FBRSxTQUFVbW1FLEVBQUU1aUUsR0FBRyxPQUFPLFdBQVcsSUFBSTdFLEVBQUUsR0FBRyxPQUFPQSxHQUFHQSxFQUFFQSxFQUFFc1EsT0FBT3pMLElBQUl5TCxPQUFPcXdELEVBQUVuOUQsWUFBWWlrRSxFQUFFaGtFLE1BQU02QixLQUFLdEYsT0FBT3luRSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsR0FBR0EsRUFBRSxTQUFTNGlFLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRSxPQUFPLFdBQVcsUUFBUXluRSxFQUFFLElBQUl6bkUsRUFBRTZFLEVBQUVwQixNQUFNNkIsS0FBSzlCLFlBQVlpa0UsR0FBRyxJQUFJNWlFLEVBQUUsTUFBTTdFLElBQUl5bkUsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxJQUFJNkUsRUFBRSxTQUFTNGlFLEdBQUcsR0FBR25tRSxFQUFFbW1FLEdBQUcsTUFBTSxHQUFHLElBQUksT0FBTzlHLEVBQUUvZ0UsS0FBSzZuRSxHQUFHLE1BQU1BLElBQUksSUFBSSxPQUFPQSxFQUFFLEdBQUcsTUFBTUEsSUFBSSxNQUFNLElBQUksSUFBSTlHLEVBQUV4OUQsU0FBUzFELFVBQVVDLFNBQVMrbkUsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEdBQUdBLEVBQUUsU0FBUzRpRSxHQUFHLE9BQU8sTUFBTUEsR0FBR0EsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxHQUFHMmdFLEVBQUUzZ0UsRUFBRSxHQUFHNkUsRUFBRSxTQUFTNGlFLEdBQUcsT0FBT25tRSxFQUFFbW1FLElBQUk5RyxFQUFFOEcsRUFBRWxuRSxPQUFPa25FLEVBQUV4bUIsUUFBUXA4QyxHQUFHLFNBQVM0aUUsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXRCLEVBQUUsR0FBRzJnRSxFQUFFM2dFLEVBQUUsSUFBSTZFLEVBQUUsU0FBUzRpRSxHQUFHLElBQUk1aUUsSUFBSXJCLFVBQVVqQyxPQUFPLFFBQUcsSUFBU2lDLFVBQVUsS0FBS0EsVUFBVSxHQUFHLEdBQUcsT0FBT2lrRSxFQUFFLE9BQU81aUUsRUFBRSxPQUFPLE9BQU8sUUFBRyxJQUFTNGlFLEVBQUUsT0FBTzVpRSxFQUFFLFlBQVksWUFBWSxHQUFHODdELEVBQUU4RyxHQUFHLE9BQU81aUUsRUFBRSxNQUFNLE1BQU0sSUFBSTdFLEVBQUVzQixFQUFFbW1FLEdBQUduL0QsTUFBTWhGLEdBQUcsT0FBT3RELEVBQUU2RSxFQUFFN0UsRUFBRSxHQUFHd0IsY0FBY3hCLEVBQUUsR0FBRyxJQUFJLElBQUlzRCxFQUFFLHNCQUFzQm1rRSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLEdBQUc2RSxFQUFFLFNBQVM0aUUsR0FBRyxJQUFJNWlFLEdBQUc0aUUsRUFBRW5tRSxFQUFFbW1FLElBQUksR0FBR244Qix3QkFBd0IsTUFBTSxDQUFDSyxLQUFLOW1DLEVBQUU4bUMsS0FBS25rQyxPQUFPK3NELFlBQVkxb0IsSUFBSWhuQyxFQUFFZ25DLElBQUlya0MsT0FBT2l0RCxZQUFZeVEsTUFBTS9rRSxLQUFLMmdFLE1BQU1qOEQsRUFBRXFnRSxPQUFPQyxPQUFPaGxFLEtBQUsyZ0UsTUFBTWo4RCxFQUFFc2dFLFVBQVVzQyxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLEdBQUcyZ0UsRUFBRTNnRSxFQUFFLEdBQUc2RSxFQUFFLFNBQVM0aUUsR0FBR0EsRUFBRTlHLEVBQUU4RyxHQUFHbm1FLEVBQUVtbUUsR0FBRSxTQUFVQSxJQUFHLFNBQVVBLEdBQUcsTUFBTSxRQUFRN21DLGlCQUFpQjZtQyxFQUFFLElBQUlxbkIsaUJBQWlCLFlBQW5FLENBQWdGcm5CLEtBQUtBLEVBQUV6aUQsTUFBTThrQixRQUFRLFNBQVMyOUIsR0FBRyxJQUFJNWlFLEVBQUU3RSxFQUFFLE9BQU9zRCxFQUFFbWtFLEtBQUs1aUUsRUFBRXNRLFNBQVN5SixjQUFjNm9ELEdBQUd0eUQsU0FBU3dyQyxnQkFBZ0J4dEIsWUFBWXR1QixHQUFHN0UsRUFBRTRnQyxpQkFBaUIvN0IsRUFBRSxJQUFJaXFGLGlCQUFpQixXQUFXanFGLEVBQUV1c0IsV0FBVzhCLFlBQVlydUIsR0FBRyxRQUFRN0UsSUFBSUEsRUFBRSxTQUFTc0QsRUFBRW1rRSxHQUFHem5FLEdBQUdzRCxFQUFFbWtFLEdBQXhOLENBQTROQSxFQUFFbW9CLGVBQWUsSUFBSXRzRixFQUFFLEdBQUdta0UsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxHQUFHMmdFLEVBQUUzZ0UsRUFBRSxHQUFHc0QsRUFBRXRELEVBQUUsSUFBSWlwQyxFQUFFanBDLEVBQUUsR0FBR3doQyxFQUFFeGhDLEVBQUUsSUFBSThzRSxFQUFFOXNFLEVBQUUsR0FBR3VELEVBQUV2RCxFQUFFLEdBQUcyQyxFQUFFM0MsRUFBRSxJQUFJMEMsRUFBRTFDLEVBQUUsR0FBRzZFLEVBQUUsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLEdBQUd5bkUsRUFBRWxrRSxFQUFFa2tFLEdBQUd4K0IsRUFBRWpwQyxJQUFJc0IsRUFBRXVELEdBQUcsT0FBTyxTQUFTNGlFLEVBQUU1aUUsR0FBRyxPQUFPNGlFLEVBQUV6aUQsTUFBTXJpQixFQUFFa0MsS0FBSys3QixpQkFBaUI2bUMsRUFBRSxJQUFJcW5CLGlCQUFpQmpxRixHQUE1RSxDQUFnRjRpRSxFQUFFLEdBQUc1aUUsR0FBRyxJQUFJOFAsRUFBRTlQLEVBQUU4N0QsRUFBRWhzRCxNQUFNQSxFQUFFLElBQUk5UCxHQUFHN0UsR0FBRyxTQUFTeW5FLEVBQUU1aUUsR0FBR25DLEVBQUUra0UsR0FBRSxTQUFVQSxHQUFHLElBQUl6bkUsRUFBRSxJQUFJMEMsRUFBRW1DLEdBQUUsU0FBVTRpRSxFQUFFNWlFLEdBQUdBLEVBQUVsQyxFQUFFb21GLEtBQUtsa0YsR0FBRzdFLEdBQUc2RSxFQUFFLElBQUksU0FBUzRpRSxFQUFFNWlFLEdBQUcsT0FBT2lvRSxFQUFFam9FLEtBQUsyOEIsRUFBRThJLEVBQUVobkMsRUFBRW1rRSxJQUFJNWlFLEVBQUUsS0FBS0EsRUFBN0MsQ0FBZ0RBLEVBQUU0aUUsR0FBRyxPQUFPQSxFQUFFemlELE1BQU04WCxTQUFTOThCLEtBQTlKLENBQW9LeW5FLEVBQUU5eUQsSUFBSSxJQUFJMjFCLEVBQUUsQ0FBQyxlQUFlLFVBQVUsY0FBYyxjQUFjLFVBQVUsVUFBVSxRQUFRbTlCLEVBQUV4bUIsUUFBUXA4QyxHQUFHLFNBQVM0aUUsRUFBRTVpRSxHQUFHQSxFQUFFLFNBQVM0aUUsRUFBRTVpRSxFQUFFN0UsR0FBRyxPQUFPUyxNQUFNaEIsVUFBVXNDLFFBQVFuQyxLQUFLNm5FLEVBQUU1aUUsRUFBRTdFLElBQUl5bkUsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxHQUFHNkUsRUFBRSxTQUFTNGlFLEdBQUcsSUFBSTVpRSxFQUFFLEdBQUcsT0FBT3ZELEVBQUVtbUUsR0FBRSxTQUFVQSxHQUFHNWlFLEVBQUV5RixLQUFLbTlELE1BQU01aUUsR0FBRzRpRSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLElBQUkyZ0UsRUFBRTNnRSxFQUFFLElBQUlzRCxFQUFFdEQsRUFBRSxJQUFJaXBDLEVBQUVqcEMsRUFBRSxJQUFJd2hDLEVBQUV4aEMsRUFBRSxLQUFLNkUsRUFBRXZELEdBQUUsU0FBVW1tRSxHQUFHLEdBQUdBLEVBQUVBLEVBQUVobEUsUUFBUWMsRUFBRSxJQUFJa2tFLEVBQUU5RyxFQUFFOEcsR0FBR3grQixFQUFFdG1DLEVBQUU4a0UsR0FBRyxPQUFPQSxFQUFFLElBQUksSUFBSTVpRSxFQUFFaW9FLEVBQUV2ckUsT0FBT3NELEtBQUssQ0FBQyxJQUFJN0UsRUFBRThzRSxFQUFFam9FLEdBQUd2QixFQUFFbWtFLEdBQUcsR0FBR3grQixFQUFFdG1DLEVBQUUzQyxHQUFHLE9BQU9BLEVBQUUsT0FBT3luRSxNQUFNc2hCLEtBQUt6bkYsR0FBRSxTQUFVbW1FLEdBQUcsSUFBSXpuRSxFQUFFNkUsRUFBRTRpRSxHQUFHLE9BQU9sa0UsRUFBRTBFLEtBQUtqSSxHQUFHLElBQUksSUFBSXdoQyxFQUFFeGhDLE1BQU0sSUFBSThzRSxFQUFFLENBQUMsSUFBSSxLQUFLLE1BQU0sVUFBVXZwRSxFQUFFLDREQUE0RFosRUFBRXdTLFNBQVN5SixjQUFjLEtBQUtvRyxNQUFNeWlELEVBQUV4bUIsUUFBUXA4QyxHQUFHLFNBQVM0aUUsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXRCLEVBQUUsSUFBSTZFLEVBQUUsU0FBUzRpRSxFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUUsU0FBUzJnRSxHQUFHLElBQUlyOUQsRUFBRXRELEVBQUVzQyxNQUFNMm1DLEVBQUUsSUFBSXBrQyxFQUFFQSxFQUFFcEIsTUFBTTZCLEtBQUs5QixXQUFXbTlELEdBQUcsT0FBT3IvRCxFQUFFZ0MsRUFBRTJsQyxLQUFLM2xDLEVBQUUybEMsR0FBR3crQixFQUFFaGtFLE1BQU02QixLQUFLOUIsWUFBWUYsRUFBRTJsQyxJQUFJLE9BQU9qcEMsRUFBRXNDLE1BQU0sR0FBR3RDLEdBQUd5bkUsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxJQUFJLFNBQVMyZ0UsRUFBRThHLEVBQUU1aUUsR0FBR1MsS0FBS1QsR0FBRzRpRSxFQUFFaGxFLFFBQVEsTUFBSyxTQUFVZ2xFLEdBQUcsT0FBT0EsRUFBRTdrRSxpQkFBaUJpQyxFQUFFLFNBQVM0aUUsR0FBRyxJQUFJNWlFLEVBQUV2RCxFQUFFbW1FLEdBQUd6bkUsRUFBRTZFLEVBQUUsR0FBRyxPQUFPQSxFQUFFbVQsUUFBUW5ULEVBQUVzSSxRQUFRd3pELEVBQUU5N0QsR0FBRzdFLEVBQUU2RSxFQUFFMndCLEtBQUssS0FBS2l5QyxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLEdBQUcyZ0UsRUFBRTNnRSxFQUFFLEdBQUdzRCxFQUFFdEQsRUFBRSxHQUFHLFNBQVNpcEMsRUFBRXcrQixHQUFHLE9BQU8sU0FBUzVpRSxFQUFFN0UsR0FBRyxJQUFJaXBDLEdBQUdwa0MsRUFBRXZCLEVBQUV1QixJQUFJLEdBQUcsR0FBR3ZELEVBQUV0QixHQUFHLE9BQU9pcEMsRUFBRUEsRUFBRXcrQixHQUFHLEdBQUd4K0IsR0FBRzAzQixFQUFFOTdELEdBQUUsU0FBVUEsR0FBR0EsRUFBRTRpRSxHQUFHem5FLE1BQU02RSxFQUFFLENBQUN5cEMsS0FBS3JGLEVBQUUsYUFBYTU5QixLQUFLNDlCLEVBQUUsZUFBZWxwQyxJQUFJa3BDLEVBQUUsVUFBVXcrQixFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsR0FBR0EsRUFBRSxTQUFTNGlFLEdBQUcsSUFBSTVpRSxFQUFFNGlFLEVBQUVBLEVBQUVsbUUsT0FBTyxFQUFFLEdBQUdzRCxFQUFFLE9BQU80aUUsRUFBRTVpRSxFQUFFLElBQUk0aUUsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxHQUFHMmdFLEVBQUUzZ0UsRUFBRSxHQUFHNkUsRUFBRSxTQUFTNGlFLEdBQUdBLEVBQUU5RyxFQUFFOEcsR0FBR25tRSxFQUFFbW1FLEdBQUUsU0FBVUEsR0FBRyxJQUFJNWlFLEVBQUU0aUUsRUFBRXIyQyxXQUFXdnNCLEdBQUdBLEVBQUVxdUIsWUFBWXUwQyxPQUFPQSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLElBQUkyZ0UsRUFBRTNnRSxFQUFFLEdBQUdzRCxFQUFFdEQsRUFBRSxHQUFHaXBDLEVBQUVqcEMsRUFBRSxHQUFHQSxFQUFFLEdBQUc2RSxFQUFFLFNBQVM0aUUsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJd2hDLEVBQUUzOEIsRUFBRSxPQUFPODdELEVBQUU5N0QsS0FBSzI4QixFQUFFLFFBQVEzOEIsR0FBR3ZCLEVBQUV1QixLQUFLMjhCLEVBQUUsR0FBR3lILEVBQUVwa0MsR0FBRSxTQUFVNGlFLEVBQUU1aUUsR0FBRzI4QixFQUFFLFFBQVEzOEIsR0FBRzRpRSxNQUFNbm1FLEVBQUVtbUUsRUFBRWptQyxFQUFFeGhDLElBQUl5bkUsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxJQUFJMmdFLEVBQUUzZ0UsRUFBRSxHQUFHc0QsRUFBRXRELEVBQUUsR0FBR2lwQyxFQUFFanBDLEVBQUUsR0FBRyxTQUFTd2hDLEVBQUVpbUMsR0FBRyxPQUFPLFNBQVM1aUUsRUFBRTdFLEVBQUV3aEMsRUFBRXNyQyxHQUFHam9FLEVBQUV2QixFQUFFdUIsR0FBRzg3RCxFQUFFbU0sS0FBS0EsRUFBRXRyQyxFQUFFQSxPQUFFLEdBQVF5SCxFQUFFcGtDLEdBQUUsU0FBVUEsR0FBR3ZELEVBQUVtbUUsR0FBRzVpRSxFQUFFN0UsRUFBRXdoQyxFQUFFc3JDLE9BQU9qb0UsRUFBRSxDQUFDNlIsR0FBRzhxQixFQUFFLE9BQU9zOUMsSUFBSXQ5QyxFQUFFLFdBQVdpbUMsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxJQUFJMmdFLEVBQUUzZ0UsRUFBRSxJQUFJLFNBQVNzRCxJQUFJLE9BQU0sRUFBRyxTQUFTMmxDLElBQUksT0FBTSxFQUFHLFNBQVN6SCxFQUFFaW1DLEdBQUcsSUFBSXpuRSxFQUFFc0IsRUFBRWdFLEtBQUtnMEIsT0FBT211QyxFQUFFOTJELE1BQU1nd0QsRUFBRW1NLEVBQUVsdEUsS0FBSzBGLEtBQUttaUUsRUFBRW5tRSxHQUFHbW1FLEVBQUUsSUFBSTVpRSxFQUFFMDFFLE1BQU05UyxHQUFHLElBQUksSUFBSW5rRSxFQUFFMmxDLEVBQUV6SCxFQUFFLEdBQUd5SCxFQUFFMDNCLEVBQUVuL0IsUUFBUWltQyxFQUFFeW9CLHdCQUF3QixJQUFJem9CLEVBQUUwb0IsVUFBVWxuRCxFQUFFM2IsR0FBR2hxQixFQUFFLEdBQUd0RCxFQUFFaXBDLEVBQUVsakIsU0FBU3ppQixRQUFRbWtFLEVBQUUyb0Isa0NBQWlDLElBQUtwd0YsRUFBRStULFFBQVF0USxNQUFNd2xDLEVBQUUzYixHQUFHLENBQUNtNkMsTUFBTUEsRUFBRXpXLGlCQUFpQnlXLEVBQUU0b0IsbUJBQW1CLFNBQVN2akIsRUFBRXJGLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXNCLEVBQUVnQyxFQUFFMmxDLEVBQUV6SCxFQUFFaW1DLEVBQUVoOUQsT0FBT3FpRSxFQUFFLEdBQUd2cEUsRUFBRXNCLEVBQUV5ckYsY0FBYyxHQUFHOXVELEVBQUVPLFNBQVMsS0FBS1AsSUFBSWw4QixLQUFLazhCLEVBQUVBLEVBQUVwUSxZQUFZOXJCLEtBQUssQ0FBQyxJQUFJaEUsRUFBRSxHQUFHMm5DLEVBQUUsRUFBRUEsRUFBRTFsQyxFQUFFMGxDLFNBQUksSUFBUzNuQyxFQUFFdEIsR0FBR3NELEVBQUV1QixFQUFFb2tDLElBQUk2ckIsU0FBUyxPQUFPeHpELEVBQUV0QixHQUFHMmdFLEVBQUVyN0QsS0FBS2lwRixpQkFBaUJ2dUYsR0FBR3doQyxJQUFJbGdDLEVBQUV0QixJQUFJc0IsRUFBRWdKLEtBQUtoSCxHQUFHaEMsRUFBRUMsUUFBUXVyRSxFQUFFeGlFLEtBQUssQ0FBQ2dqQixHQUFHa1UsRUFBRXpiLFNBQVN6a0IsSUFBSSxPQUFPaUMsRUFBRXNCLEVBQUV0RCxRQUFRdXJFLEVBQUV4aUUsS0FBSyxDQUFDZ2pCLEdBQUdob0IsS0FBS3lnQixTQUFTbGhCLEVBQUU5QixNQUFNUSxLQUFLdXBFLEVBQUVqb0UsRUFBRSxDQUFDZ0YsSUFBSSxTQUFTNDlELEVBQUU1aUUsRUFBRTdFLEVBQUVzQixHQUFHLElBQUlxL0QsRUFBRXI5RCxFQUFFLENBQUN3eEQsU0FBUzkwRCxFQUFFK1QsUUFBUXpTLEdBQUdtbUUsRUFBRW51QyxTQUFTbXVDLEVBQUVudUMsT0FBTyxLQUFLcW5DLEVBQUU4RyxFQUFFbnVDLE9BQU96MEIsT0FBTzg3RCxFQUFFOEcsRUFBRW51QyxPQUFPejBCLEdBQUcsSUFBSXlyRixjQUFjLEVBQUU3b0IsRUFBRTcrRCxpQkFBaUIvRCxHQUFFLFdBQVkyOEIsRUFBRS85QixNQUFNZ2tFLEVBQUVqa0UsY0FBYSxJQUFLeEQsRUFBRTJnRSxFQUFFMytELE9BQU8yK0QsRUFBRTJ2QixnQkFBZ0IsRUFBRWh0RixHQUFHcTlELEVBQUVyMkQsS0FBS2hILElBQUkzQixPQUFPLFNBQVM4bEUsRUFBRTVpRSxFQUFFN0UsRUFBRXNCLEdBQUcsSUFBSXEvRCxFQUFFOEcsRUFBRW51QyxPQUFPLEdBQUdxbkMsR0FBR0EsRUFBRTk3RCxHQUFHLElBQUksSUFBSXZCLEVBQUUybEMsRUFBRTAzQixFQUFFOTdELEdBQUcyOEIsRUFBRXlILEVBQUUxbkMsT0FBT2lnQyxLQUFLbCtCLEVBQUUybEMsRUFBRXpILEdBQUd4aEMsR0FBR3NELEVBQUV3eEQsVUFBVTkwRCxHQUFHc0QsRUFBRXlRLFNBQVN6UyxJQUFJMm5DLEVBQUVqbkMsT0FBT3cvQixFQUFFLEdBQUdsK0IsRUFBRXd4RCxVQUFVN3JCLEVBQUVxbkQsa0JBQWtCL1YsTUFBTWo1RSxFQUFFLENBQUNxc0YsVUFBVSxRQUFRQyxXQUFXLFNBQVNubUIsR0FBR25pRSxLQUFLaXJGLFVBQVU5b0IsR0FBRytvQixtQkFBbUJ2bkQsRUFBRWluRCxxQkFBcUJqbkQsRUFBRW1uRCw4QkFBOEJubkQsRUFBRStuQixlQUFlLFdBQVcsSUFBSXlXLEVBQUVuaUUsS0FBS2lyRixVQUFVanJGLEtBQUtrckYsbUJBQW1CbHRGLEVBQUVta0UsR0FBR0EsRUFBRXpXLGdCQUFnQnlXLEVBQUV6VyxrQkFBa0JxL0IsZ0JBQWdCLFdBQVcsSUFBSTVvQixFQUFFbmlFLEtBQUtpckYsVUFBVWpyRixLQUFLNHFGLHFCQUFxQjVzRixFQUFFbWtFLEdBQUdBLEVBQUU0b0IsaUJBQWlCNW9CLEVBQUU0b0IsbUJBQW1CaDZELHlCQUF5QixXQUFXLElBQUlveEMsRUFBRW5pRSxLQUFLaXJGLFVBQVVqckYsS0FBSzhxRiw4QkFBOEI5c0YsRUFBRW1rRSxHQUFHQSxFQUFFcHhDLDBCQUEwQm94QyxFQUFFcHhDLDJCQUEyQi93QixLQUFLK3FGLHNCQUFzQjVvQixFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLElBQUkyZ0UsRUFBRTNnRSxFQUFFLElBQUlzRCxFQUFFdEQsRUFBRSxHQUFHaXBDLEVBQUVqcEMsRUFBRSxHQUFHd2hDLEVBQUV4aEMsRUFBRSxHQUFHLFNBQVM4c0UsRUFBRXJGLEdBQUcsT0FBT3grQixFQUFFdytCLEdBQUdBLEVBQUVwbUUsTUFBTSxPQUFPQyxFQUFFbW1FLEdBQUc1aUUsRUFBRSxDQUFDZ0YsSUFBSSxTQUFTNDlELEVBQUV6bkUsR0FBR3luRSxFQUFFbmtFLEVBQUVta0UsR0FBRyxJQUFJbm1FLEVBQUV3ckUsRUFBRTlzRSxHQUFHd2hDLEVBQUVpbUMsR0FBRSxTQUFVQSxHQUFHLElBQUl6bkUsRUFBRSxHQUFHd2hDLEVBQUVsZ0MsR0FBRSxTQUFVQSxHQUFHdUQsRUFBRStFLElBQUk2OUQsRUFBRW5tRSxJQUFJdEIsRUFBRXNLLEtBQUtoSixNQUFNLElBQUl0QixFQUFFdUIsU0FBU2ttRSxFQUFFa21CLFlBQVlsbUIsRUFBRWttQixVQUFVLElBQUksSUFBSTN0RixFQUFFdzFCLEtBQUssVUFBVTVyQixJQUFJLFNBQVM2OUQsRUFBRTVpRSxHQUFHNGlFLEVBQUVua0UsRUFBRW1rRSxHQUFHLElBQUl6bkUsRUFBRSxJQUFJb0gsT0FBTyxVQUFVdkMsRUFBRSxXQUFXLE9BQU84N0QsRUFBRThHLEdBQUUsU0FBVUEsR0FBRyxPQUFPem5FLEVBQUVpSSxLQUFLdy9ELEVBQUVrbUIsZUFBZXFELE9BQU8sU0FBU3ZwQixFQUFFem5FLEdBQUd5bkUsRUFBRW5rRSxFQUFFbWtFLEdBQUdqbUMsRUFBRWltQyxHQUFFLFNBQVVBLEdBQUcsSUFBSTVpRSxFQUFFK0UsSUFBSTY5RCxFQUFFem5FLEdBQUcsT0FBTzZFLEVBQUVnRixJQUFJNDlELEVBQUV6bkUsR0FBRzZFLEVBQUVsRCxPQUFPOGxFLEVBQUV6bkUsT0FBTzJCLE9BQU8sU0FBUzhsRSxFQUFFNWlFLEdBQUc0aUUsRUFBRW5rRSxFQUFFbWtFLEdBQUcsSUFBSXpuRSxFQUFFOHNFLEVBQUVqb0UsR0FBRzI4QixFQUFFaW1DLEdBQUUsU0FBVUEsR0FBR2ptQyxFQUFFeGhDLEdBQUUsU0FBVTZFLEdBQUc0aUUsRUFBRWpwQyxVQUFVNzhCLE9BQU9rRCxXQUFXNGlFLEVBQUV4bUIsUUFBUXA4QyxHQUFHLFNBQVM0aUUsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXRCLEVBQUUsSUFBSTJnRSxFQUFFM2dFLEVBQUUsR0FBR3NELEVBQUV0RCxFQUFFLEdBQUdBLEVBQUUsSUFBSTZFLEVBQUUsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHNkUsRUFBRXZELEVBQUV1RCxFQUFFN0UsR0FBRyxJQUFJLElBQUlpcEMsR0FBRzAzQixFQUFFOEcsSUFBSW5rRSxFQUFFbWtFLEdBQUdqbUMsR0FBR3lILEdBQUd3K0IsR0FBR2xtRSxPQUFPdXJFLEVBQUUsRUFBRUEsRUFBRXRyQyxFQUFFc3JDLElBQUksQ0FBQyxJQUFJdnBFLEVBQUUwbEMsRUFBRUEsRUFBRTZqQyxHQUFHQSxFQUFFLEdBQUdqb0UsRUFBRTRpRSxFQUFFbGtFLEdBQUdBLEVBQUVra0UsR0FBRyxPQUFNLEVBQUcsT0FBTSxHQUFJQSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLEdBQUcyZ0UsRUFBRTNnRSxFQUFFLEdBQUcsU0FBU3NELEVBQUVta0UsR0FBRyxPQUFPLFNBQVM1aUUsRUFBRTdFLEdBQUc2RSxFQUFFODdELEVBQUU5N0QsR0FBR3ZELEVBQUV1RCxHQUFFLFNBQVVBLEdBQUdBLEVBQUVzcUYsbUJBQW1CMW5CLEVBQUV6bkUsT0FBTzZFLEVBQUUsQ0FBQ2lpQixPQUFPeGpCLEVBQUUsZUFBZTBqRCxNQUFNMWpELEVBQUUsWUFBWXFvRCxPQUFPcm9ELEVBQUUsYUFBYWdoRCxRQUFRaGhELEVBQUUsZUFBZW1rRSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLElBQUkyZ0UsRUFBRTNnRSxFQUFFLElBQUlzRCxFQUFFdEQsRUFBRSxJQUFJaXBDLEVBQUVqcEMsRUFBRSxJQUFJNkUsRUFBRXZELEdBQUUsU0FBVW1tRSxFQUFFNWlFLEdBQUcsT0FBT0EsRUFBRTg3RCxFQUFFOTdELEdBQUd2QixFQUFFbWtFLEdBQUUsU0FBVUEsR0FBRyxPQUFPeCtCLEVBQUVwa0MsRUFBRTRpRSxTQUFTQSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLElBQUk2RSxFQUFFLFNBQVM0aUUsR0FBRyxPQUFPLFNBQVNBLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSSxJQUFJMmdFLEVBQUVyOUQsRUFBRXVCLEVBQUV0RCxPQUFPMG5DLEdBQUcsRUFBRTNsQyxLQUFLcTlELEVBQUU5N0QsSUFBSW9rQyxHQUFHM25DLEVBQUVxL0QsR0FBRzhHLEVBQUU5RyxFQUFFM2dFLEdBQUdBLEVBQUVzSyxLQUFLcTJELEdBQUcsT0FBTzNnRSxFQUFyRixDQUF3RnluRSxFQUFFLEtBQUtBLEVBQUV4bUIsUUFBUXA4QyxHQUFHLFNBQVM0aUUsRUFBRTVpRSxHQUFHQSxFQUFFLGFBQWE0aUUsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLGFBQWEsSUFBSXNCLEVBQUVnRSxNQUFNQSxLQUFLMnpGLGlCQUFpQixTQUFTeHhCLEdBQUcsT0FBT0EsR0FBR0EsRUFBRW5pRCxXQUFXbWlELEVBQUUsQ0FBQzEwRCxRQUFRMDBELElBQUkzb0UsT0FBT2tJLGVBQWVuQyxFQUFFLGFBQWEsQ0FBQ3hGLE9BQU0sSUFBSyxJQUFJc2hFLEVBQUVyL0QsRUFBRXRCLEVBQUUsS0FBS3NELEVBQUUsV0FBVyxTQUFTbWtFLElBQUluaUUsS0FBSzRFLEdBQUcsRUFBRTVFLEtBQUt3eEYsUUFBUSxHQUFHLE9BQU9ydkIsRUFBRWhvRSxVQUFVa0ssSUFBSSxTQUFTODlELEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXNGLEtBQUt3eEYsUUFBUXgxRixFQUFFZ0UsS0FBSzRFLEdBQUc1RyxFQUFFLENBQUM0RyxHQUFHNUksRUFBRXZCLElBQUkwbkUsR0FBRyxPQUFPOUcsRUFBRTV0RCxRQUFRelAsRUFBRXVCLEdBQUc3RSxFQUFFc0ssS0FBS2hILEdBQUdnQyxLQUFLNEUsS0FBSzVJLEdBQUdtbUUsRUFBRWhvRSxVQUFVa0osSUFBSSxTQUFTOCtELEdBQUcsSUFBSSxJQUFJNWlFLEVBQUVTLEtBQUt3eEYsUUFBUTkyRixFQUFFLEVBQUVzQixFQUFFdUQsRUFBRXRELE9BQU92QixFQUFFc0IsRUFBRXRCLElBQUksQ0FBQyxJQUFJMmdFLEVBQUU5N0QsRUFBRTdFLEdBQUcsR0FBR3luRSxJQUFJOUcsRUFBRTVnRSxJQUFJLE9BQU80Z0UsRUFBRSxPQUFNLEdBQUk4RyxFQUF0UyxHQUEyUzVpRSxFQUFFa08sUUFBUXpQLEdBQUcsU0FBU21rRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxJQUFJMmdFLEVBQUUzZ0UsRUFBRSxJQUFJc0QsRUFBRSxhQUFhdUIsRUFBRSxTQUFTNGlFLEVBQUU1aUUsR0FBRyxPQUFPLE1BQU1BLEVBQUU0aUUsRUFBRWhsRSxRQUFRYSxFQUFFLElBQUloQyxFQUFFcS9ELEVBQUU4RyxFQUFFNWlFLEdBQUdBLElBQUk0aUUsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUUsT0FBTzZFLEVBQUUsU0FBUzRpRSxFQUFFNWlFLEdBQUcsR0FBRyxNQUFNQSxFQUFFLE9BQU80aUUsRUFBRWhsRSxRQUFRekMsRUFBRSxJQUFJLElBQUksSUFBSXNCLEVBQUVxL0QsRUFBRXI5RCxFQUFFLEVBQUUybEMsRUFBRXcrQixFQUFFbG1FLE9BQU9pZ0MsRUFBRTM4QixFQUFFdEQsT0FBT3VyRSxHQUFFLEVBQUdBLEdBQUd4cEUsRUFBRTJsQyxHQUFHLElBQUk2akMsR0FBRSxFQUFHeHJFLEdBQUcsRUFBRXEvRCxFQUFFOEcsRUFBRTNrRSxPQUFPUSxLQUFLaEMsRUFBRWtnQyxHQUFHLEdBQUdtL0IsSUFBSTk3RCxFQUFFdkQsR0FBRyxDQUFDd3JFLEdBQUUsRUFBR3hwRSxJQUFJLE1BQU0sT0FBT0EsR0FBRzJsQyxFQUFFLEdBQUd3K0IsRUFBRXJhLE9BQU85cEQsRUFBRTJsQyxJQUFJdytCLEVBQUV4bUIsUUFBUXA4QyxHQUFHLFNBQVM0aUUsRUFBRTVpRSxHQUFHLElBQUk3RSxFQUFFLE9BQU82RSxFQUFFLFNBQVM0aUUsRUFBRTVpRSxHQUFHLEdBQUcsTUFBTUEsRUFBRSxPQUFPNGlFLEVBQUVobEUsUUFBUXpDLEVBQUUsSUFBSSxJQUFJLElBQUlzQixFQUFFcS9ELEVBQUVyOUQsRUFBRW1rRSxFQUFFbG1FLE9BQU8sRUFBRTBuQyxFQUFFcGtDLEVBQUV0RCxPQUFPaWdDLEdBQUUsRUFBR0EsR0FBR2wrQixHQUFHLEdBQUcsSUFBSWsrQixHQUFFLEVBQUdsZ0MsR0FBRyxFQUFFcS9ELEVBQUU4RyxFQUFFM2tFLE9BQU9RLEtBQUtoQyxFQUFFMm5DLEdBQUcsR0FBRzAzQixJQUFJOTdELEVBQUV2RCxHQUFHLENBQUNrZ0MsR0FBRSxFQUFHbCtCLElBQUksTUFBTSxPQUFPQSxHQUFHLEVBQUVta0UsRUFBRTd6QixVQUFVLEVBQUV0d0MsRUFBRSxHQUFHLElBQUlta0UsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxHQUFHMmdFLEdBQUc5N0QsRUFBRSxTQUFTNGlFLEdBQUcsT0FBT3grQixFQUFFaGhDLEtBQUt3L0QsR0FBR0EsRUFBRWhsRSxRQUFRKytCLEVBQUVzckMsR0FBR3JGLElBQUl2bUUsSUFBSSxDQUFDLElBQUksUUFBUSxJQUFJLE9BQU8sSUFBSSxPQUFPLElBQUksU0FBUyxJQUFJLFNBQVMsSUFBSSxVQUFVb0MsRUFBRSxNQUFNaEMsRUFBRXEvRCxHQUFHbnJDLEtBQUssS0FBSyxJQUFJeVQsRUFBRSxJQUFJN2hDLE9BQU85RCxHQUFHaytCLEVBQUUsSUFBSXA2QixPQUFPOUQsRUFBRSxLQUFLd3BFLEVBQUUsU0FBU3JGLEdBQUcsT0FBTzlHLEVBQUU4RyxJQUFJQSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYSxJQUFJc0IsRUFBRXEvRCxFQUFFcjdELE1BQU1BLEtBQUs4ekYsWUFBWTkzRixFQUFFLFNBQVNtbUUsRUFBRTVpRSxHQUFHLE9BQU92RCxFQUFFeEMsT0FBTzY0RixnQkFBZ0IsQ0FBQ3RwRixVQUFVLGNBQWM1TixPQUFPLFNBQVNnbkUsRUFBRTVpRSxHQUFHNGlFLEVBQUVwNUQsVUFBVXhKLElBQUksU0FBUzRpRSxFQUFFNWlFLEdBQUcsSUFBSSxJQUFJN0UsS0FBSzZFLEVBQUVBLEVBQUU1QyxlQUFlakMsS0FBS3luRSxFQUFFem5FLEdBQUc2RSxFQUFFN0UsTUFBTXluRSxFQUFFNWlFLElBQUksU0FBUzRpRSxFQUFFNWlFLEdBQUcsU0FBUzdFLElBQUlzRixLQUFLa21CLFlBQVlpOEMsRUFBRW5tRSxFQUFFbW1FLEVBQUU1aUUsR0FBRzRpRSxFQUFFaG9FLFVBQVUsT0FBT29GLEVBQUUvRixPQUFPcUMsT0FBTzBELElBQUk3RSxFQUFFUCxVQUFVb0YsRUFBRXBGLFVBQVUsSUFBSU8sS0FBS3NELEVBQUVnQyxNQUFNQSxLQUFLMnpGLGlCQUFpQixTQUFTeHhCLEdBQUcsT0FBT0EsR0FBR0EsRUFBRW5pRCxXQUFXbWlELEVBQUUsQ0FBQzEwRCxRQUFRMDBELElBQUkzb0UsT0FBT2tJLGVBQWVuQyxFQUFFLGFBQWEsQ0FBQ3hGLE9BQU0sSUFBSyxJQUFJNHBDLEVBQUUzbEMsRUFBRXRELEVBQUUsS0FBS3doQyxFQUFFbCtCLEVBQUV0RCxFQUFFLEtBQUs4c0UsRUFBRXhwRSxFQUFFdEQsRUFBRSxJQUFJdUQsRUFBRUQsRUFBRXRELEVBQUUsS0FBSzJDLEVBQUVXLEVBQUV0RCxFQUFFLEtBQUswQyxFQUFFWSxFQUFFdEQsRUFBRSxLQUFLc3FDLEVBQUVobkMsRUFBRXRELEVBQUUsS0FBSzJVLEVBQUVyUixFQUFFdEQsRUFBRSxJQUFJMmUsRUFBRXJiLEVBQUV0RCxFQUFFLEtBQUt1bkUsRUFBRWprRSxFQUFFdEQsRUFBRSxJQUFJZixFQUFFcUUsRUFBRXRELEVBQUUsS0FBSytnRCxFQUFFejlDLEVBQUV0RCxFQUFFLElBQUl1NEIsRUFBRWoxQixFQUFFdEQsRUFBRSxJQUFJb0UsRUFBRWQsRUFBRXRELEVBQUUsS0FBS3cwRCxFQUFFbHhELEVBQUV0RCxFQUFFLEtBQUs2dUUsRUFBRTd1RSxFQUFFLElBQUl1cUQsRUFBRSxzQkFBc0Jta0IsRUFBRSxTQUFTakgsR0FBRyxTQUFTNWlFLEVBQUVBLEdBQUcsSUFBSTdFLEVBQUV5bkUsRUFBRTduRSxLQUFLMEYsT0FBT0EsS0FBSyxPQUFPdEYsRUFBRXE1RixXQUFXcHdELEVBQUVsMkIsUUFBUWxPLEdBQUc3RSxFQUFFcTVGLFdBQVc5NkQsU0FBUyxzQkFBc0J2K0IsRUFBRXM1RixZQUFZdDVGLEVBQUUsT0FBTzJnRSxFQUFFOTdELEVBQUU0aUUsR0FBRzVpRSxFQUFFcEYsVUFBVWtLLElBQUksU0FBUzg5RCxHQUFHMW1CLEVBQUVodUMsUUFBUTAwRCxLQUFLQSxFQUFFOW1FLEtBQUswd0MsTUFBTW8yQixJQUFJbmlFLEtBQUs2RixLQUFLLENBQUNqQixHQUFHM0csRUFBRXdQLFFBQVEsUUFBUWhNLFdBQVcsQ0FBQzR5RixFQUFFbHlCLElBQUluaUUsS0FBS3BFLElBQUksR0FBRyxTQUFTdW1FLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFa0ssR0FBRyxHQUFHNUksR0FBRyxJQUFJQSxFQUFFLENBQUMsR0FBR3RCLEVBQUUyUSxNQUFNNndCLEVBQUV6dUIsUUFBUS9TLEVBQUUyUSxLQUFLLFVBQVUzUSxFQUFFK0csV0FBVyxDQUFDLElBQUk0NUQsRUFBRSxTQUFTOEcsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRSxHQUFHcS9ELEVBQUUsR0FBRyxPQUFPaHNELEVBQUU1QixRQUFRMDBELEVBQUUxZ0UsWUFBVyxTQUFVMGdFLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRTBDLEVBQUVxUSxRQUFRbE8sR0FBRzhaLEVBQUU1TCxRQUFRL1MsR0FBRzJnRSxFQUFFOTdELEdBQUc0aUUsRUFBRW5tRSxFQUFFdEIsR0FBR3luRSxLQUFLbm1FLEVBQUV5RixXQUFXNDVELEVBQUVyL0QsRUFBRXFQLEtBQUszUSxFQUFFc0IsRUFBRTRJLEdBQUdyRixFQUFFNGlFLEVBQUV3a0IsZUFBZTNxRixFQUFFMnFGLGFBQWF4a0IsRUFBRXdrQixjQUFjeGtCLEVBQUU3cUQsU0FBU3RiLEVBQUVzYixPQUFPNnFELEVBQUU3cUQsUUFBUTZxRCxFQUFFbXlCLFFBQVF0NEYsRUFBRXM0RixNQUFNbnlCLEVBQUVteUIsT0FBT3Q0RixFQUFwUSxDQUF1UXRCLEVBQUVzQixFQUFFdEIsRUFBRTJRLE1BQU1nd0QsRUFBRXAvRCxPQUFPLE1BQU12QixFQUFFLFNBQVN5bkUsR0FBRyxJQUFJNWlFLEVBQUUsRUFBRTdFLEVBQUUsR0FBRzJVLEVBQUU1QixRQUFRdTNCLEVBQUV2M0IsUUFBUTAwRCxFQUFFLE1BQUssU0FBVUEsR0FBRyxJQUFJbm1FLEVBQUUsR0FBR3EvRCxFQUFFOTdELEVBQUV2RCxFQUFFcVAsS0FBSyxJQUFJZ3dELEVBQUVyL0QsRUFBRXlGLFdBQVcsR0FBRzROLEVBQUU1QixRQUFRMDBELEdBQUUsU0FBVUEsR0FBR25tRSxFQUFFeUYsV0FBV2xDLEdBQUc0aUUsRUFBRTVpRSxHQUFHLEtBQUssSUFBSXZCLEVBQUV1QixFQUFFLEVBQUV2RCxFQUFFcVAsT0FBT3JOLEVBQUVxOUQsRUFBRSxFQUFFLE1BQU1yOUQsRUFBRSxJQUFJLElBQUloQyxFQUFFNEksR0FBRzNHLEVBQUV3UCxRQUFRLFFBQVF6UixFQUFFdTRGLGNBQWEsRUFBRzc1RixFQUFFNkUsR0FBR3ZELEtBQUssSUFBSUEsRUFBRSxHQUFHLE9BQU9BLEVBQUV5RixXQUFXL0csRUFBRXNCLEVBQUU0SSxHQUFHdTlELEVBQUV2OUQsR0FBRzVJLEVBQUVxUCxLQUFLODJELEVBQUU5MkQsS0FBSzgyRCxFQUFFd2tCLGVBQWUzcUYsRUFBRTJxRixhQUFheGtCLEVBQUV3a0IsY0FBY3hrQixFQUFFN3FELFNBQVN0YixFQUFFc2IsT0FBTzZxRCxFQUFFN3FELFFBQVE2cUQsRUFBRW15QixRQUFRdDRGLEVBQUVzNEYsTUFBTW55QixFQUFFbXlCLE9BQU90NEYsRUFBMVosQ0FBNlpxL0QsSUFBSTk3RCxFQUFFdkQsR0FBR3RCLEVBQUUsSUFBSXNELEVBQUUsR0FBR3FSLEVBQUU1QixRQUFRLENBQUMsYUFBYSxlQUFlLFdBQVUsU0FBVTAwRCxHQUFHLEdBQUd6bkUsRUFBRXluRSxHQUFHLElBQUksSUFBSTVpRSxLQUFLN0UsRUFBRXluRSxHQUFHbmtFLEVBQUVnSCxLQUFLdEssRUFBRXluRSxHQUFHNWlFLE9BQU83RSxFQUFFNDVGLE9BQU90MkYsRUFBRWdILEtBQUt0SyxFQUFFNDVGLE9BQU8sSUFBSSxJQUFJM3dELEVBQUUsRUFBRXRtQyxFQUFFVyxFQUFFL0IsT0FBTzBuQyxFQUFFdG1DLEVBQUVzbUMsSUFBSSxDQUFDLElBQUlzK0IsRUFBRWprRSxFQUFFMmxDLEdBQUc2akMsRUFBRS81RCxRQUFRdzBELElBQUlFLEVBQUU1aUUsRUFBRTBpRSxLQUF4L0IsQ0FBOC9CamlFLEtBQUtwRSxJQUFJb0UsS0FBSzZGLE1BQU03RixLQUFLaTBGLGFBQWExMEYsRUFBRXBGLFVBQVUrNUYsVUFBVSxTQUFTL3hCLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXNGLEtBQUtoRSxFQUFFLEdBQUcsT0FBT3FULEVBQUU1QixRQUFRLENBQUMsYUFBYSxlQUFlLFdBQVUsU0FBVTR0RCxHQUFHLEdBQUc4RyxFQUFFOUcsR0FBRyxDQUFDLElBQUlyOUQsRUFBRWkxQixFQUFFeGxCLFFBQVEwMEQsRUFBRTlHLElBQUlyOUQsRUFBRXVqQixLQUFLZ29ELEVBQUVzcUIsYUFBYSxJQUFJLElBQUlsd0QsRUFBRSxFQUFFekgsRUFBRWwrQixFQUFFL0IsT0FBTzBuQyxFQUFFekgsRUFBRXlILElBQUksQ0FBQyxJQUFJNmpDLEVBQUV4cEUsRUFBRTJsQyxHQUFHM25DLEdBQUd0QixFQUFFeTVGLFNBQVMzc0IsRUFBRXJGLEVBQUU5RyxHQUFHbU0sR0FBR25NLEVBQUU5N0QsUUFBUTRpRSxFQUFFbXlCLFFBQVEsS0FBS3Q0RixFQUFFQSxFQUFFZ0UsS0FBS2swRixVQUFVL3hCLEVBQUVteUIsT0FBT3Q0RixHQUFHZ0UsS0FBS20wRixTQUFTLFlBQVloeUIsRUFBRW15QixNQUFNLFVBQVV0NEYsR0FBR3VELEVBQUVwRixVQUFVZzZGLFNBQVMsU0FBU2h5QixFQUFFNWlFLEVBQUU3RSxFQUFFc0IsUUFBRyxJQUFTQSxJQUFJQSxHQUFFLEdBQUksSUFBSXEvRCxTQUFTOTdELEVBQUUsR0FBRyxPQUFPQSxFQUFFLE1BQU0sT0FBT25DLEVBQUUra0UsR0FBRyxnQkFBZ0JsZCxFQUFFLHlCQUF5QixHQUFHZ2QsRUFBRXgwRCxRQUFRbE8sSUFBSTVGLEVBQUU4VCxRQUFRbE8sR0FBRyxNQUFNLE9BQU9uQyxFQUFFK2tFLEdBQUcsaUJBQWlCbGQsRUFBRW9XLEdBQUcsS0FBS2tPLEVBQUUva0IsT0FBT2psRCxHQUFHLGVBQWUsR0FBRyxXQUFXQSxFQUFFOEwsT0FBT2d3RCxFQUFFLFVBQVUsV0FBVzk3RCxFQUFFOEwsT0FBT2d3RCxFQUFFLFVBQVUsV0FBVzk3RCxFQUFFOEwsTUFBTSxXQUFXOUwsRUFBRThMLEtBQUssTUFBTSxPQUFPak8sRUFBRStrRSxHQUFHLGlCQUFpQmxkLEVBQUVvVyxHQUFHLEtBQUtrTyxFQUFFL2tCLE9BQU9qbEQsRUFBRXhGLE9BQU8sZUFBZSxHQUFHLGNBQWN3RixFQUFFOEwsTUFBTSxXQUFXOUwsRUFBRThMLEtBQUssTUFBTSxPQUFPak8sRUFBRStrRSxHQUFHLGdCQUFnQmxkLEVBQUUsWUFBWW5tRCxFQUFFMk8sUUFBUWxPLEVBQUU4TCxNQUFNLGVBQWUsR0FBRyxVQUFVOUwsRUFBRSxNQUFNLE9BQU9uQyxFQUFFK2tFLEdBQUcsZ0JBQWdCbGQsRUFBRSxZQUFZMWxELEVBQUUsZUFBZSxHQUFHaW9FLEVBQUUvNUQsUUFBUWxPLEdBQUcsQ0FBQyxJQUFJdkIsRUFBRXVCLEVBQUVxRixHQUFHKytCLEVBQUVwa0MsRUFBRWkxRixVQUFVdDRELEVBQUUreEMsRUFBRTF1RSxJQUFJbEMsRUFBRW9RLFFBQVE0dEQsR0FBR3A5RCxFQUFFLFFBQVFqQyxFQUFFLDBCQUEwQixJQUFJLHFCQUFxQjJuQyxHQUFHM2xDLEdBQUcsbUJBQW1CaEMsRUFBRSxHQUFHaXBELEVBQUUsWUFBWUEsRUFBRSxhQUFhLFlBQVk3bkQsRUFBRStrRSxHQUFHLGdCQUFnQmxkLEVBQUUsVUFBVWpwRCxFQUFFLEdBQUdrZ0MsR0FBRyxzQkFBc0Irb0IsRUFBRW9XLEdBQUcsTUFBTXIvRCxFQUFFLEdBQUcsd0JBQXdCLElBQUksT0FBT0EsSUFBSWlDLEdBQUcrQixLQUFLazBGLFVBQVVsMEYsS0FBS3BFLElBQUlvQyxLQUFLQyxFQUFFLHFCQUFxQmduRCxFQUFFLHNCQUFzQixTQUFTN25ELEVBQUUra0UsR0FBRyxHQUFHbm1FLEVBQUUsTUFBTSxHQUFHLEdBQUd3ckUsRUFBRS81RCxRQUFRbE8sSUFBSUEsRUFBRWcxRixhQUFhLE1BQU0sR0FBRyxJQUFJbDVCLEVBQUVwVyxFQUFFLE1BQU0sTUFBTSxpQkFBaUJ2cUQsR0FBRyxVQUFVQSxHQUFHLFdBQVdBLElBQUkyZ0UsRUFBRXBXLEVBQUUsZUFBZSxnQkFBZ0JvVyxFQUFFLEtBQUtrTyxFQUFFL2tCLE9BQU8yZCxHQUFHLFlBQVksTUFBTSxPQUFPL2tFLEVBQUUra0UsR0FBRyxnQkFBZ0JsZCxTQUFTMWxELEVBQUUsTUFBTWdxRSxFQUFFL2tCLE9BQU9qbEQsR0FBRyxpQkFBaUJBLEVBQUVwRixVQUFVODVGLFVBQVUsV0FBVyxJQUFJOXhCLEVBQUVuaUUsS0FBS3BFLElBQUlvRSxLQUFLNkYsS0FBS2pCLElBQUk1RSxLQUFLK3pGLFdBQVcvcUQsS0FBS2hwQyxLQUFLazBGLFVBQVUveEIsR0FBRSxLQUFNNWlFLEVBQUVwRixVQUFVNjVGLFVBQVUsV0FBVyxJQUFJN3hCLEVBQUVuaUUsS0FBS0EsS0FBSyt6RixXQUFXM2lGLEdBQUcsUUFBUSxNQUFLLFNBQVU3UixHQUFHLElBQUk3RSxFQUFFeW5FLEVBQUV2bUUsSUFBSUksRUFBRTJuQyxFQUFFbDJCLFFBQVF6TixNQUFNcTdELEVBQUVyL0QsRUFBRTZKLEtBQUssYUFBYTdILEVBQUUybEMsRUFBRWwyQixRQUFRek4sTUFBTTAyRSxLQUFLLFFBQVFrVixHQUFHLEdBQUcsSUFBSTV2RixFQUFFNkosS0FBSyxpQkFBaUJ3MUQsSUFBSXIvRCxFQUFFMDZFLEtBQUssTUFBTTF0QyxLQUFLbTVCLEVBQUUreEIsVUFBVXg1RixFQUFFMmdFLElBQUcsSUFBS3IvRCxFQUFFNnZGLE9BQU8sbUJBQW1CdHNGLEVBQUV3eEIsMkJBQTJCL3lCLEVBQUVndUYsU0FBUy9tQyxFQUFFLGFBQWEsQ0FBQyxJQUFJL29CLEVBQUVsZ0MsRUFBRTA2RSxLQUFLLE1BQU1rVixHQUFHLEdBQUc1dEYsRUFBRWd1RixTQUFTL21DLEVBQUUsY0FBY2puRCxFQUFFOHRGLFFBQVE3bUMsRUFBRSxhQUFhL29CLEVBQUVnQyxTQUFTbGdDLEVBQUVpN0IsU0FBU2dzQixFQUFFLGFBQWEvb0IsRUFBRXl2RCxRQUFReHBCLEVBQUVwZ0QsS0FBSyxlQUFleGlCLEVBQTcvRyxDQUFnZ0gydkQsRUFBRXpoRCxTQUFTLFNBQVN3Z0UsRUFBRTlMLEdBQUcsSUFBSTVpRSxFQUFFNGlFLEVBQUU5MkQsS0FBSzNRLEVBQUV5bkUsRUFBRXBvRSxNQUFNLEdBQUd3RixFQUFFLE1BQU0sYUFBYUEsRUFBRWdxRSxFQUFFcXFCLGNBQWNsNUYsR0FBRyxVQUFVNkUsR0FBRzRpRSxFQUFFd2tCLGFBQWEsU0FBU3hrQixFQUFFd2tCLGFBQWExcUYsT0FBTyxJQUFJa21FLEVBQUU5MkQsS0FBSzlMLEVBQUVrTyxRQUFRMjdELEVBQUU3cEUsRUFBRWsxRixlQUFleG1CLEdBQUcsU0FBUzlMLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRSxFQUFFNkUsRUFBRSxTQUFTNGlFLEdBQUcsSUFBSTVpRSxJQUFJN0UsRUFBRSxHQUFHLE9BQU95bkUsRUFBRUEsRUFBRTVpRSxFQUFFQSxHQUFHNGlFLEVBQUV4bUIsUUFBUXA4QyxHQUFHLFNBQVM0aUUsRUFBRTVpRSxFQUFFN0UsUUFBUSxTQUFTeW5FLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUVxL0QsRUFBRUEsRUFBRSxTQUFTOEcsR0FBRyxJQUFJNWlFLEVBQUUsR0FBRyxTQUFTN0UsRUFBRXNCLEdBQUcsR0FBR3VELEVBQUV2RCxHQUFHLE9BQU91RCxFQUFFdkQsR0FBRzIvQyxRQUFRLElBQUkwZixFQUFFOTdELEVBQUV2RCxHQUFHLENBQUNBLEVBQUVBLEVBQUVpQyxHQUFFLEVBQUcwOUMsUUFBUSxJQUFJLE9BQU93bUIsRUFBRW5tRSxHQUFHMUIsS0FBSytnRSxFQUFFMWYsUUFBUTBmLEVBQUVBLEVBQUUxZixRQUFRamhELEdBQUcyZ0UsRUFBRXA5RCxHQUFFLEVBQUdvOUQsRUFBRTFmLFFBQVEsT0FBT2poRCxFQUFFdTRCLEVBQUVrdkMsRUFBRXpuRSxFQUFFMkMsRUFBRWtDLEVBQUU3RSxFQUFFMmUsRUFBRSxTQUFTOG9ELEVBQUU1aUUsRUFBRXZELEdBQUd0QixFQUFFaXBDLEVBQUV3K0IsRUFBRTVpRSxJQUFJL0YsT0FBT2tJLGVBQWV5Z0UsRUFBRTVpRSxFQUFFLENBQUNrQyxZQUFXLEVBQUc0QixJQUFJckgsS0FBS3RCLEVBQUUyZ0UsRUFBRSxTQUFTOEcsR0FBRyxvQkFBb0JsK0QsUUFBUUEsT0FBT2djLGFBQWF6bUIsT0FBT2tJLGVBQWV5Z0UsRUFBRWwrRCxPQUFPZ2MsWUFBWSxDQUFDbG1CLE1BQU0sV0FBV1AsT0FBT2tJLGVBQWV5Z0UsRUFBRSxhQUFhLENBQUNwb0UsT0FBTSxLQUFNVyxFQUFFeW5FLEVBQUUsU0FBU0EsRUFBRTVpRSxHQUFHLEdBQUcsRUFBRUEsSUFBSTRpRSxFQUFFem5FLEVBQUV5bkUsSUFBSSxFQUFFNWlFLEVBQUUsT0FBTzRpRSxFQUFFLEdBQUcsRUFBRTVpRSxHQUFHLGlCQUFpQjRpRSxHQUFHQSxHQUFHQSxFQUFFbmlELFdBQVcsT0FBT21pRCxFQUFFLElBQUlubUUsRUFBRXhDLE9BQU9xQyxPQUFPLE1BQU0sR0FBR25CLEVBQUUyZ0UsRUFBRXIvRCxHQUFHeEMsT0FBT2tJLGVBQWUxRixFQUFFLFVBQVUsQ0FBQ3lGLFlBQVcsRUFBRzFILE1BQU1vb0UsSUFBSSxFQUFFNWlFLEdBQUcsaUJBQWlCNGlFLEVBQUUsSUFBSSxJQUFJOUcsS0FBSzhHLEVBQUV6bkUsRUFBRTJlLEVBQUVyZCxFQUFFcS9ELEVBQUUsU0FBUzk3RCxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJM0IsS0FBSyxLQUFLeTlELElBQUksT0FBT3IvRCxHQUFHdEIsRUFBRUEsRUFBRSxTQUFTeW5FLEdBQUcsSUFBSTVpRSxFQUFFNGlFLEdBQUdBLEVBQUVuaUQsV0FBVyxXQUFXLE9BQU9taUQsRUFBRTEwRCxTQUFTLFdBQVcsT0FBTzAwRCxHQUFHLE9BQU96bkUsRUFBRTJlLEVBQUU5WixFQUFFLElBQUlBLEdBQUdBLEdBQUc3RSxFQUFFaXBDLEVBQUUsU0FBU3crQixFQUFFNWlFLEdBQUcsT0FBTy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLElBQUk3RSxFQUFFMlUsRUFBRSxHQUFHM1UsRUFBRUEsRUFBRXdoQyxFQUFFLEdBQWo1QixDQUFxNUIsQ0FBQyxTQUFTaW1DLEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYSxJQUFJc0IsRUFBRXRCLEVBQUUsR0FBR2c2RixXQUFXcjVCLEVBQUUzZ0UsRUFBRSxHQUFHaTZGLFFBQVF4eUIsRUFBRXhtQixRQUFRLFNBQVN3bUIsRUFBRTVpRSxHQUFHLE9BQU8sSUFBSXZELEVBQUVtbUUsRUFBRTVpRSxHQUFHcTFGLFlBQVl6eUIsRUFBRXhtQixRQUFRazVDLGVBQWUsV0FBVyxPQUFPLElBQUl4NUIsSUFBSSxTQUFTOEcsRUFBRTVpRSxFQUFFN0UsR0FBRyxhQUFhLElBQUlzQixFQUFFdEIsRUFBRSxHQUFHbzZGLE9BQU96NUIsRUFBRTNnRSxFQUFFLEdBQUcwckUsTUFBTXBvRSxFQUFFdEQsRUFBRSxHQUFHaXBDLEVBQUVqcEMsRUFBRSxHQUFHaTZGLFFBQVF6NEQsRUFBRXhoQyxFQUFFLEdBQUdxNkYsVUFBVXZ0QixFQUFFOXNFLEVBQUUsR0FBR3M2RixjQUFjLzJGLEVBQUV2RCxFQUFFLEdBQUd1NkYsdUJBQXVCNTNGLEVBQUUzQyxFQUFFLEdBQUd3NkYsTUFBTSxTQUFTOTNGLEVBQUUra0UsRUFBRTVpRSxHQUFHLE9BQU8sSUFBSUEsRUFBRTlDLFFBQVEwbEUsR0FBRyxTQUFTbjlCLEVBQUVtOUIsRUFBRTVpRSxHQUFHLE9BQU80aUUsR0FBR0EsRUFBRTkyRCxPQUFPaE8sRUFBRTgzRixVQUFVaHpCLEVBQUVwOEQsT0FBT3hHLEVBQUUsU0FBUzhQLEVBQUU4eUQsRUFBRTVpRSxHQUFHLE9BQU80aUUsR0FBR0EsRUFBRTkyRCxPQUFPaE8sRUFBRTgzRixVQUFVLzNGLEVBQUUra0UsRUFBRXA4RCxLQUFLeEcsR0FBRyxJQUFJOFosRUFBRSxDQUFDLE9BQU8sU0FBUyxLQUFLLEtBQUssUUFBUSxPQUFPLFFBQVEsUUFBUSxXQUFXLFNBQVM0b0QsRUFBRSxTQUFTRSxHQUFHLElBQUksSUFBSTVpRSxFQUFFLEdBQUc3RSxFQUFFLEVBQUVBLEVBQUV5bkUsRUFBRWxtRSxPQUFPdkIsSUFBSTZFLEVBQUU0aUUsRUFBRXpuRSxHQUFHeUMsUUFBUSxLQUFLLE1BQU1nbEUsRUFBRXpuRSxHQUFHLE9BQU82RSxFQUFsRixDQUFxRixDQUFDLGlCQUFpQixnQkFBZ0IscUJBQXFCNUYsRUFBRSxDQUFDc29FLEVBQUVtekIsZUFBZW56QixFQUFFb3pCLGtCQUFrQjU1QyxFQUFFLGlCQUFpQnhvQixFQUFFLFlBQVluMEIsRUFBRSxnQkFBZ0Jvd0QsRUFBRSxlQUFlcWEsRUFBRSxpQkFBaUJ0a0IsRUFBRSxjQUFjbWtCLEVBQUUsYUFBYSxTQUFTNkUsRUFBRTlMLEVBQUU1aUUsR0FBR0EsRUFBRSsxRixpQkFBaUIvMUYsRUFBRW9sQyxPQUFPNGtDLEdBQUdocUUsRUFBRW9sQyxPQUFPc2dCLEdBQUdrZCxFQUFFb3pCLGNBQWNoMkYsRUFBRWkyRixrQkFBa0IsU0FBU3JvQixFQUFFaEwsR0FBRyxPQUFPQSxJQUFJalQsRUFBRSxTQUFTMGQsRUFBRXpLLEdBQUcsT0FBTy9rRSxFQUFFK2tFLEVBQUUsQ0FBQ2lILEVBQUVHLEVBQUV0a0IsSUFBSSxTQUFTdmtDLEVBQUV5aEQsRUFBRTVpRSxHQUFHQSxFQUFFQSxHQUFHLEdBQUdTLEtBQUt5MUYsYUFBYXR6QixHQUFHLEdBQUduaUUsS0FBSzAxRixRQUFRLEtBQUsxMUYsS0FBSzIxRixRQUFRLEtBQUszMUYsS0FBSzQxRixnQkFBZ0IsS0FBSzUxRixLQUFLNjFGLE9BQU8sS0FBSzcxRixLQUFLODFGLGdCQUFnQixLQUFLOTFGLEtBQUsrMUYsWUFBWSxLQUFLLzFGLEtBQUt3Z0QsU0FBUyxJQUFJN2MsRUFBRXBrQyxHQUFHbWhCLEVBQUV2bUIsVUFBVTY3RixhQUFhLFNBQVM3ekIsRUFBRTVpRSxHQUFHLElBQUk3RSxFQUFFLEVBQUUsT0FBT3luRSxJQUFJem5FLEVBQUV5bkUsRUFBRTh6QixtQkFBbUJqMkYsS0FBSzAxRixRQUFRUSxzQkFBc0IvekIsRUFBRWcwQixrQkFBa0J6N0YsSUFBSUEsRUFBRXluRSxFQUFFZzBCLG9CQUFvQixDQUFDeHhELEtBQUtwbEMsRUFBRWtILE9BQU8wN0QsRUFBRWkwQixXQUFXajBCLEVBQUVBLEVBQUVpMEIsV0FBVyxJQUFJLzZCLEVBQUVoK0QsRUFBRWc1RixZQUFZLElBQUlDLFVBQVVuMEIsRUFBRUEsRUFBRW0wQixVQUFVLEdBQUdDLHVCQUFzQixFQUFHQyx3QkFBdUIsRUFBR2xCLGlCQUFnQixFQUFHbUIsY0FBYSxFQUFHQyxVQUFTLEVBQUdDLFlBQVcsRUFBR0MsVUFBUyxFQUFHQyxVQUFTLEVBQUdDLGNBQWEsRUFBR0MsbUJBQWtCLEVBQUdDLFNBQVEsRUFBR0MsV0FBVSxFQUFHaEIsa0JBQWtCdjdGLEVBQUV3OEYsVUFBVSxFQUFFZixrQkFBa0JoMEIsRUFBRUEsRUFBRWcwQixrQkFBa0J6N0YsRUFBRTg2RixpQkFBaUJ4MUYsS0FBSzAxRixRQUFReUIsa0JBQWtCQyxjQUFjLElBQUkxMkUsRUFBRXZtQixVQUFVazlGLE9BQU8sU0FBU2wxQixHQUFHLElBQUk1aUUsRUFBRTRpRSxFQUFFbi9ELE1BQU0sV0FBVyxHQUFHaEQsS0FBSzQxRixnQkFBZ0IsR0FBRzUxRixLQUFLMDFGLFFBQVEsSUFBSTE1RixFQUFFZ0UsS0FBS3dnRCxTQUFTamhELEdBQUdTLEtBQUswMUYsUUFBUWh2RixJQUFJMUcsS0FBS3dnRCxTQUFTODJDLGdCQUFnQnQzRixLQUFLKzFGLFlBQVksR0FBRy8xRixLQUFLdTNGLFNBQVM5N0MsR0FBRyxJQUFJL2dELEVBQUUsSUFBSXdoQyxFQUFFaW1DLEVBQUVuaUUsS0FBS3dnRCxVQUFVLE9BQU94Z0QsS0FBSzIxRixRQUFRajdGLEVBQUU4OEYsV0FBV3IxQixHQUFHemhELEVBQUV2bUIsVUFBVXk2RixTQUFTLFdBQVcsR0FBRzUwRixLQUFLd2dELFNBQVNpM0MsU0FBUyxPQUFPejNGLEtBQUt5MUYsYUFBYSxJQUFJdHpCLEVBQUVuaUUsS0FBS3EzRixPQUFPcjNGLEtBQUt5MUYsY0FBY2wyRixFQUFFUyxLQUFLd2dELFNBQVNrM0MsSUFBSSxTQUFTMTNGLEtBQUt3Z0QsU0FBU2szQyxNQUFNbjRGLEVBQUUsS0FBSzRpRSxHQUFHbmtFLEVBQUUyNUYsVUFBVWgxRixLQUFLdy9ELEdBQUcsTUFBTTVpRSxFQUFFNGlFLEVBQUVuL0QsTUFBTWhGLEVBQUUyNUYsV0FBVyxLQUFLLElBQUksSUFBSWo5RixFQUFFc0YsS0FBSzIxRixRQUFRcGhGLE9BQU83WixHQUFHc0YsS0FBSzQzRixhQUFhbDlGLEdBQUdzRixLQUFLNDFGLGdCQUFnQjUxRixLQUFLNjFGLE9BQU9PLFdBQVdyd0YsS0FBSy9GLEtBQUs2MUYsT0FBT08sV0FBVzE3RixFQUFFQSxFQUFFc0YsS0FBSzIxRixRQUFRcGhGLE9BQU8sT0FBT3ZVLEtBQUswMUYsUUFBUW1DLFNBQVN0NEYsSUFBSW1oQixFQUFFdm1CLFVBQVV5OUYsYUFBYSxTQUFTejFCLEVBQUU1aUUsR0FBRzRpRSxFQUFFOTJELE9BQU9oTyxFQUFFeTZGLFdBQVc5M0YsS0FBSyszRixrQkFBa0I1MUIsR0FBR0EsRUFBRTkyRCxPQUFPaE8sRUFBRTI2RixTQUFTaDRGLEtBQUtpNEYsZ0JBQWdCOTFCLEdBQUdBLEVBQUU5MkQsT0FBT2hPLEVBQUVnNUYsWUFBWXIyRixLQUFLazRGLG1CQUFtQi8xQixHQUFHQSxFQUFFOTJELE9BQU9oTyxFQUFFODZGLFVBQVVuNEYsS0FBS280RixpQkFBaUJqMkIsR0FBR0EsRUFBRTkyRCxPQUFPaE8sRUFBRWc3RixNQUFNbDJCLEVBQUU5MkQsT0FBT2hPLEVBQUU4M0YsU0FBU24xRixLQUFLczRGLFlBQVluMkIsR0FBR0EsRUFBRTkyRCxPQUFPaE8sRUFBRWs3RixVQUFVdjRGLEtBQUt3NEYsaUJBQWlCcjJCLEdBQUdBLEVBQUU5MkQsT0FBT2hPLEVBQUVvN0YsT0FBT3o0RixLQUFLMDRGLGNBQWN2MkIsR0FBR0EsRUFBRTkyRCxPQUFPaE8sRUFBRXM3RixPQUFPMzRGLEtBQUs0NEYsY0FBY3oyQixHQUFHQSxFQUFFOTJELE9BQU9oTyxFQUFFdzdGLFNBQVM3NEYsS0FBSzg0RixnQkFBZ0IzMkIsR0FBR0EsRUFBRTkyRCxPQUFPaE8sRUFBRTA3RixNQUFNLzRGLEtBQUtnNUYsYUFBYTcyQixHQUFHQSxFQUFFOTJELE9BQU9oTyxFQUFFNDdGLGNBQWNqNUYsS0FBS2s1RixxQkFBcUIvMkIsRUFBRTVpRSxHQUFHNGlFLEVBQUU5MkQsT0FBT2hPLEVBQUU4N0YsUUFBUW41RixLQUFLbzVGLGVBQWVqM0IsRUFBRTVpRSxHQUFHNGlFLEVBQUU5MkQsT0FBT2hPLEVBQUVnOEYsSUFBSXI1RixLQUFLczVGLFdBQVduM0IsR0FBR0EsRUFBRTkyRCxPQUFPaE8sRUFBRWs4RixJQUFJdjVGLEtBQUt3NUYsV0FBV3IzQixJQUFJQSxFQUFFOTJELEtBQUtoTyxFQUFFbzhGLFFBQVF6NUYsS0FBSzA1RixlQUFldjNCLEVBQUU1aUUsS0FBS21oQixFQUFFdm1CLFVBQVV3L0YsK0JBQStCLFNBQVN4M0IsRUFBRTVpRSxHQUFHLElBQUk3RSxFQUFFeW5FLEVBQUV5M0IsU0FBUzU5RixFQUFFZ0UsS0FBS3dnRCxTQUFTcTVDLHdCQUF3QjFzQixFQUFFbnRFLEtBQUs2MUYsT0FBT2x4RCxNQUFNLEdBQUd3OUIsRUFBRTIzQixnQkFBZ0IsSUFBSSxJQUFJeitCLEVBQUU4RyxFQUFFMjNCLGdCQUFnQnZsRixPQUFPOG1ELEdBQUdyN0QsS0FBSzI1RiwrQkFBK0J0K0IsRUFBRTk3RCxHQUFHUyxLQUFLNDNGLGFBQWF2OEIsRUFBRTk3RCxHQUFHODdELEVBQUU4RyxFQUFFMjNCLGdCQUFnQnZsRixPQUFPLEdBQUd2WSxFQUFFLElBQUksSUFBSWdDLEVBQUUsRUFBRUEsRUFBRXRELEVBQUVzRCxHQUFHLEVBQUVnQyxLQUFLKzVGLGNBQWMvN0YsRUFBRSxFQUFFdUIsUUFBUSxHQUFHUyxLQUFLd2dELFNBQVN3NUMsdUJBQXVCdC9GLEVBQUVzRixLQUFLd2dELFNBQVN3NUMsd0JBQXdCdC9GLEVBQUVzRixLQUFLd2dELFNBQVN3NUMsdUJBQXVCaDZGLEtBQUt3Z0QsU0FBU3k1QyxtQkFBbUJ2L0YsRUFBRSxFQUFFLENBQUNzRixLQUFLKzVGLGVBQWMsRUFBR3g2RixHQUFHLElBQUksSUFBSW9rQyxFQUFFLEVBQUVBLEVBQUVqcEMsRUFBRWlwQyxHQUFHLEVBQUUzakMsS0FBSys1RixlQUFjLEVBQUd4NkYsS0FBSyxJQUFJaytELEVBQUUsQ0FBQyxRQUFRLFFBQVEsV0FBVyxTQUFTLFFBQVEsU0FBUy84QyxFQUFFdm1CLFVBQVUrL0YsZ0NBQWdDLFNBQVMvM0IsRUFBRTVpRSxHQUFHLEdBQUdBLE9BQUUsSUFBU0EsR0FBR0EsR0FBR1MsS0FBSzAxRixRQUFRUSxxQkFBcUIsQ0FBQyxJQUFJeDdGLEVBQUVzRixLQUFLd2dELFNBQVN5NUMsbUJBQW1COTNCLEVBQUV5M0IsVUFBVXI2RixFQUFFLEdBQUduQyxFQUFFNEMsS0FBSzYxRixPQUFPTyxXQUFXcndGLEtBQUs5SCxJQUFJYixFQUFFK2tFLEVBQUVwOEQsS0FBSzlILEdBQUcsQ0FBQyxJQUFJakMsRUFBRW9CLEVBQUU0QyxLQUFLNjFGLE9BQU9PLFdBQVdyd0YsS0FBSzlILElBQUliLEVBQUU0QyxLQUFLd2dELFNBQVMyNUMsa0JBQWtCeGdHLElBQUl5RCxFQUFFK2tFLEVBQUVwOEQsS0FBSzlILEdBQUd2RCxFQUFFQSxHQUFHc0IsRUFBRSxHQUFHdEIsRUFBRXNGLEtBQUsrNUYsZUFBYyxHQUFHLFFBQVMsR0FBRy81RixLQUFLd2dELFNBQVM0NUMsaUJBQWlCLENBQUMsR0FBRy9xRixFQUFFclAsS0FBSzYxRixPQUFPTyxXQUFXMzRCLEdBQUcsT0FBT3o5RCxLQUFLMDFGLFFBQVEyRSxvQkFBb0IzNUUsRUFBRXZtQixVQUFVNC9GLGNBQWMsU0FBUzUzQixFQUFFNWlFLEdBQUcsSUFBSUEsR0FBRyxNQUFNUyxLQUFLNjFGLE9BQU9PLFdBQVdyd0YsTUFBTSxNQUFNL0YsS0FBSzYxRixPQUFPTyxXQUFXcndGLE1BQU0sTUFBTS9GLEtBQUs2MUYsT0FBT08sV0FBV3J3RixPQUFPL0YsS0FBSzYxRixPQUFPTyxXQUFXL3FGLE9BQU9oTyxFQUFFdzdGLFVBQVUsT0FBTzc0RixLQUFLNjFGLE9BQU9PLFdBQVdyd0YsTUFBTSxPQUFPL0YsS0FBSzYxRixPQUFPTyxXQUFXcndGLE1BQU0sSUFBSSxJQUFJckwsRUFBRXNGLEtBQUsyMUYsUUFBUWxMLFNBQVN6cUYsS0FBSzYxRixPQUFPbHhELE9BQU8xUixHQUFHanpCLEtBQUs2MUYsT0FBT2EsVUFBVTF4RCxFQUFFdHFDLEVBQUUsU0FBU3NGLEtBQUs2MUYsT0FBT2UsV0FBVzUyRixLQUFLczZGLGVBQWV0NkYsS0FBSzAxRixRQUFRNkUsYUFBYXA0QixLQUFLbmlFLEtBQUs2MUYsT0FBT1AsaUJBQWdCLElBQUs1MEUsRUFBRXZtQixVQUFVcWdHLDZCQUE2QixTQUFTcjRCLEdBQUduaUUsS0FBSzAxRixRQUFRUSx1QkFBdUJsMkYsS0FBS3dnRCxTQUFTcTVDLHdCQUF3QjEzQixFQUFFeTNCLFdBQVcsTUFBTXozQixFQUFFcDhELE1BQU1vbkUsRUFBRW50RSxLQUFLNjFGLE9BQU9seEQsUUFBUTNrQyxLQUFLMDFGLFFBQVErRSxhQUFhQyxZQUFZLEdBQUcxNkYsS0FBSzAxRixRQUFRK0UsYUFBYXoxRixLQUFLbTlELEVBQUV3NEIsbUJBQW1CMzZGLEtBQUswMUYsUUFBUWtGLG9CQUFtQixHQUFJNTZGLEtBQUswMUYsUUFBUWdGLFdBQVcxNkYsS0FBSzYxRixPQUFPSSxrQkFBa0JqMkYsS0FBSzYxRixPQUFPcUIsYUFBYWwzRixLQUFLNjFGLE9BQU9NLGtCQUFrQm4yRixLQUFLNjFGLE9BQU9JLHFCQUFxQnYxRSxFQUFFdm1CLFVBQVUwZ0csWUFBWSxTQUFTMTRCLEdBQUcsR0FBR25pRSxLQUFLMDFGLFFBQVFodkYsSUFBSTFHLEtBQUswMUYsUUFBUW9GLGNBQWMzNEIsT0FBTyxDQUFDLEdBQUduaUUsS0FBS3dnRCxTQUFTdTZDLGFBQWE1NEIsRUFBRTY0QixVQUFVNzRCLEVBQUU2NEIsU0FBUzN2RixPQUFPaE8sRUFBRTA3RixPQUFPLzRGLEtBQUswMUYsUUFBUVEsc0JBQXNCLE1BQU1sMkYsS0FBSzAxRixRQUFRdUYsY0FBY3pvRixPQUFPLENBQUMsSUFBSWpULEVBQUVTLEtBQUswMUYsUUFBUXVGLGNBQWN2MUYsTUFBTTFGLEtBQUswMUYsUUFBUXVGLGNBQWNDLGFBQWFsN0YsS0FBSzAxRixRQUFRdUYsY0FBY2oyRixLQUFLekYsR0FBR1MsS0FBSzAxRixRQUFRampFLE1BQUssR0FBSXp5QixLQUFLMDFGLFFBQVErRSxhQUFhLzBGLE1BQU0xRixLQUFLMDFGLFFBQVFqakUsUUFBUXp5QixLQUFLdzZGLDZCQUE2QnI0QixHQUFHbmlFLEtBQUswMUYsUUFBUXlGLFVBQVUsS0FBS243RixLQUFLMDFGLFFBQVFrRixvQkFBbUIsRUFBRzU2RixLQUFLdzZGLDZCQUE2QnI0QixHQUFHbmlFLEtBQUswMUYsUUFBUTBGLG9CQUFtQixFQUFHcDdGLEtBQUswMUYsUUFBUXlGLFVBQVVoNUIsRUFBRXA4RCxNQUFNL0YsS0FBSzAxRixRQUFRMkYseUJBQXlCcjdGLEtBQUs2MUYsT0FBT1AsaUJBQWdCLEtBQU01MEUsRUFBRXZtQixVQUFVbWhHLE9BQU8sV0FBV3Q3RixLQUFLNjFGLE9BQU9JLG1CQUFtQixFQUFFajJGLEtBQUswMUYsUUFBUWdGLFdBQVcxNkYsS0FBSzYxRixPQUFPSSxrQkFBa0JqMkYsS0FBSzYxRixPQUFPcUIsWUFBWXgyRSxFQUFFdm1CLFVBQVVvaEcsU0FBUyxXQUFXdjdGLEtBQUs2MUYsT0FBT0ksa0JBQWtCLEtBQUtqMkYsS0FBSzYxRixPQUFPcHZGLFFBQVF6RyxLQUFLNjFGLE9BQU9JLGtCQUFrQmoyRixLQUFLNjFGLE9BQU9wdkYsT0FBT3d2RixxQkFBcUJqMkYsS0FBSzYxRixPQUFPSSxtQkFBbUIsRUFBRWoyRixLQUFLMDFGLFFBQVFnRixXQUFXMTZGLEtBQUs2MUYsT0FBT0ksa0JBQWtCajJGLEtBQUs2MUYsT0FBT3FCLGFBQWF4MkUsRUFBRXZtQixVQUFVbzlGLFNBQVMsU0FBU3AxQixHQUFHbmlFLEtBQUs2MUYsUUFBUTcxRixLQUFLKzFGLFlBQVkvd0YsS0FBS2hGLEtBQUs2MUYsUUFBUTcxRixLQUFLODFGLGdCQUFnQjkxRixLQUFLNjFGLFFBQVE3MUYsS0FBSzgxRixnQkFBZ0I5MUYsS0FBS2cyRixhQUFhLEtBQUs3ekIsR0FBR25pRSxLQUFLNjFGLE9BQU83MUYsS0FBS2cyRixhQUFhaDJGLEtBQUs4MUYsZ0JBQWdCM3pCLEdBQUduaUUsS0FBSzAxRixRQUFRZ0YsV0FBVzE2RixLQUFLNjFGLE9BQU9JLGtCQUFrQmoyRixLQUFLNjFGLE9BQU9xQixZQUFZeDJFLEVBQUV2bUIsVUFBVW1nRyxhQUFhLFdBQVd0NkYsS0FBSysxRixZQUFZOTVGLE9BQU8sSUFBSStELEtBQUs4MUYsZ0JBQWdCOTFGLEtBQUs2MUYsT0FBTzcxRixLQUFLNjFGLE9BQU83MUYsS0FBSysxRixZQUFZcndGLE1BQU0xRixLQUFLODFGLGdCQUFnQm54RCxPQUFPMVIsR0FBR2c3QyxFQUFFanVFLEtBQUswMUYsUUFBUTExRixLQUFLODFGLGlCQUFpQjkxRixLQUFLMDFGLFFBQVFnRixXQUFXMTZGLEtBQUs2MUYsT0FBT0ksa0JBQWtCajJGLEtBQUs2MUYsT0FBT3FCLGFBQWF4MkUsRUFBRXZtQixVQUFVcWhHLHlCQUF5QixXQUFXLE9BQU94N0YsS0FBSzYxRixPQUFPcHZGLE9BQU9rK0IsT0FBTzdsQyxHQUFHa0IsS0FBSzYxRixPQUFPbHhELE9BQU8xUixJQUFJLE1BQU1qekIsS0FBSzYxRixPQUFPTyxXQUFXcndGLE1BQU0sSUFBSS9GLEtBQUs2MUYsT0FBT3VCLGVBQWUvbkYsRUFBRXJQLEtBQUs2MUYsT0FBT08sV0FBVyxDQUFDLE1BQU0sVUFBVTExRSxFQUFFdm1CLFVBQVVzaEcsbUJBQW1CLFNBQVN0NUIsR0FBRyxJQUFJNWlFLEdBQUUsRUFBRyxTQUFTQSxHQUFHQSxHQUFHQSxHQUFHQSxHQUFHQSxHQUFHQSxHQUFHQSxFQUFFQSxHQUFHOFAsRUFBRXJQLEtBQUs2MUYsT0FBT08sV0FBVyxDQUFDLE1BQU0sTUFBTSxXQUFXajBCLEVBQUU5MkQsT0FBT2hPLEVBQUVnN0YsT0FBT3J6RCxFQUFFaGxDLEtBQUs2MUYsT0FBT08sV0FBVyxVQUFVcDJGLEtBQUs2MUYsT0FBT3B2RixPQUFPaytCLE9BQU83bEMsR0FBR2tCLEtBQUs2MUYsT0FBT2x4RCxPQUFPMVIsSUFBSTVqQixFQUFFclAsS0FBSzYxRixPQUFPTyxXQUFXMzRCLEtBQUswRSxFQUFFeTNCLFdBQVc1MEQsRUFBRWhsQyxLQUFLNjFGLE9BQU9PLFdBQVcsV0FBV3B4RCxFQUFFbTlCLEVBQUUsUUFBUUEsRUFBRTIzQixtQkFBbUI5NUYsS0FBSzYxRixPQUFPTyxXQUFXL3FGLE9BQU9oTyxFQUFFMjZGLFdBQVdoNEYsS0FBSzgxRixnQkFBZ0JueEQsT0FBTzRrQyxHQUFHdnBFLEtBQUs4MUYsZ0JBQWdCbnhELE9BQU9zZ0IsS0FBS2psRCxLQUFLNjFGLE9BQU9PLFdBQVcvcUYsT0FBT2hPLEVBQUVnN0YsTUFBTXI0RixLQUFLNjFGLE9BQU9seEQsT0FBTzhXLElBQUl6N0MsS0FBSzYxRixPQUFPbUIsV0FBVyxPQUFPNzBCLEVBQUVwOEQsTUFBTSxPQUFPbzhELEVBQUVwOEQsT0FBTyxhQUFhL0YsS0FBSzQxRixpQkFBaUJ6ekIsRUFBRTkyRCxPQUFPaE8sRUFBRWc3RixNQUFNbDJCLEVBQUU5MkQsT0FBT2hPLEVBQUU4M0YsV0FBV24xRixLQUFLNjFGLE9BQU9seEQsT0FBTzdsQyxJQUFJLE1BQU1rQixLQUFLNjFGLE9BQU9PLFdBQVdyd0YsTUFBTSxJQUFJL0YsS0FBSzYxRixPQUFPdUIsZUFBZS9uRixFQUFFclAsS0FBSzYxRixPQUFPTyxXQUFXLENBQUMsTUFBTSxZQUFZcDJGLEtBQUt1M0YsU0FBU3RrRSxHQUFHanpCLEtBQUtzN0YsU0FBU3Q3RixLQUFLMjVGLCtCQUErQngzQixHQUFFLEdBQUluaUUsS0FBS3c3Riw0QkFBNEJ4N0YsS0FBS2s2RixnQ0FBZ0MvM0IsRUFBRTl5RCxFQUFFOHlELEVBQUUsQ0FBQyxLQUFLLE1BQU0sS0FBSyxZQUFXLElBQUt6aEQsRUFBRXZtQixVQUFVNDlGLGtCQUFrQixTQUFTNTFCLEdBQUduaUUsS0FBS3k3RixtQkFBbUJ0NUIsSUFBSW5pRSxLQUFLMjVGLCtCQUErQngzQixHQUFHLElBQUk1aUUsRUFBRTZwRSxFQUFFLEdBQUcsTUFBTWpILEVBQUVwOEQsS0FBSyxDQUFDLEdBQUcvRixLQUFLNjFGLE9BQU9PLFdBQVcvcUYsT0FBT2hPLEVBQUVnN0YsTUFBTSxNQUFNcjRGLEtBQUs2MUYsT0FBT08sV0FBV3J3RixLQUFLLE9BQU9zSixFQUFFclAsS0FBSzYxRixPQUFPTyxXQUFXNXVCLEtBQUt4bkUsS0FBSzAxRixRQUFRa0Ysb0JBQW1CLEdBQUk1NkYsS0FBSzY2RixZQUFZMTRCLEdBQUduaUUsS0FBS3UzRixTQUFTaDRGLEdBQUdTLEtBQUtzN0YsY0FBY3Q3RixLQUFLd2dELFNBQVNrN0MsaUJBQWlCMTdGLEtBQUswMUYsUUFBUWtGLG9CQUFtQixJQUFLcjdGLEVBQUUydkQsRUFBRWllLEVBQUVudEUsS0FBSzYxRixPQUFPbHhELFFBQVEsTUFBTTNrQyxLQUFLNjFGLE9BQU9PLFdBQVdyd0YsT0FBTyxNQUFNL0YsS0FBSzYxRixPQUFPTyxXQUFXcndGLE1BQU0sTUFBTS9GLEtBQUs0MUYsaUJBQWlCLE1BQU01MUYsS0FBSzQxRixrQkFBa0I1MUYsS0FBS3dnRCxTQUFTcTVDLHdCQUF3Qjc1RixLQUFLKzVGLGlCQUFpQjM4RixFQUFFNEMsS0FBSzYxRixPQUFPTyxXQUFXL3FGLEtBQUssQ0FBQ2hPLEVBQUV5NkYsV0FBV3o2RixFQUFFMjZGLFNBQVMzNkYsRUFBRWc3RixLQUFLaDdGLEVBQUV3N0YsYUFBYTc0RixLQUFLMDFGLFFBQVFrRixvQkFBbUIsT0FBUSxDQUFDLEdBQUc1NkYsS0FBSzYxRixPQUFPTyxXQUFXL3FGLE9BQU9oTyxFQUFFODNGLFNBQVMsUUFBUW4xRixLQUFLNjFGLE9BQU9PLFdBQVdyd0YsTUFBTS9GLEtBQUswMUYsUUFBUWtGLG1CQUFtQjU2RixLQUFLd2dELFNBQVNtN0MseUJBQXlCcDhGLEVBQUVncUUsR0FBR25zRSxFQUFFNEMsS0FBSzYxRixPQUFPTyxXQUFXcndGLEtBQUssQ0FBQyxLQUFLLFdBQVcvRixLQUFLMDFGLFFBQVFrRixtQkFBbUI1NkYsS0FBS3dnRCxTQUFTbTdDLHlCQUF5QnA4RixFQUFFMGxELEdBQUc3bkQsRUFBRTRDLEtBQUs2MUYsT0FBT1MsVUFBVSxDQUFDLFFBQVEsVUFBVXQyRixLQUFLMDFGLFFBQVFrRixvQkFBbUIsRUFBRyxXQUFXNTZGLEtBQUs2MUYsT0FBT08sV0FBV3J3RixNQUFNLEtBQUtvOEQsRUFBRXc0QixrQkFBa0IzNkYsS0FBSzAxRixRQUFRa0Ysb0JBQW1CLEdBQUl4OUYsRUFBRTRDLEtBQUs2MUYsT0FBT08sV0FBV3J3RixLQUFLeWhFLElBQUksVUFBVXhuRSxLQUFLNjFGLE9BQU9PLFdBQVdyd0YsUUFBUS9GLEtBQUswMUYsUUFBUWtGLG9CQUFtQixRQUFTLEdBQUc1NkYsS0FBSzYxRixPQUFPTyxXQUFXL3FGLE9BQU9oTyxFQUFFczdGLFFBQVEzNEYsS0FBSzYxRixPQUFPTyxXQUFXL3FGLE9BQU9oTyxFQUFFdzdGLFNBQVM3NEYsS0FBS3c3Riw0QkFBNEJ4N0YsS0FBS2s2RixnQ0FBZ0MvM0IsUUFBUSxHQUFHbmlFLEtBQUs2MUYsT0FBT08sV0FBVy9xRixPQUFPaE8sRUFBRWc3RixLQUFLLENBQUNyNEYsS0FBSzAxRixRQUFRa0Ysb0JBQW1CLEVBQUcsSUFBSWxnRyxFQUFFc0YsS0FBSzIxRixRQUFRbEwsTUFBTSxHQUFHLEdBQUd6cUYsS0FBS3dnRCxTQUFTbzdDLDRCQUE0QmxoRyxFQUFFLENBQUMsSUFBSXNCLEVBQUVnRSxLQUFLMjFGLFFBQVFsTCxNQUFNLEdBQUdwN0UsRUFBRTNVLEVBQUUsQ0FBQyxRQUFRLGNBQWMsTUFBTUEsRUFBRXFMLE1BQU1zSixFQUFFclQsRUFBRSxDQUFDLFFBQVEsYUFBYWdFLEtBQUswMUYsUUFBUWtGLG9CQUFtQixFQUFHNTZGLEtBQUs2MUYsT0FBT2x4RCxPQUFPN2xDLElBQUksTUFBTXBFLEVBQUVxTCxNQUFNLE1BQU1yTCxFQUFFcUwsT0FBTyxNQUFNckwsRUFBRXFMLE1BQU0sTUFBTS9KLEVBQUUrSixNQUFNLE1BQU0vSixFQUFFK0osUUFBUS9GLEtBQUswMUYsUUFBUWtGLG9CQUFtQixVQUFXNTZGLEtBQUtrNkYsZ0NBQWdDLzNCLElBQUluaUUsS0FBSzYxRixPQUFPTyxXQUFXL3FGLE9BQU9oTyxFQUFFODNGLFdBQVcsYUFBYW4xRixLQUFLNjFGLE9BQU9TLFdBQVcsV0FBV3QyRixLQUFLNjFGLE9BQU9TLFlBQVksTUFBTXQyRixLQUFLNjFGLE9BQU9PLFdBQVdyd0YsT0FBTzNJLEVBQUU0QyxLQUFLNDFGLGdCQUFnQixDQUFDLFdBQVcsV0FBVzUxRixLQUFLNjFGLE9BQU9seEQsT0FBTzdsQyxHQUFHMUIsRUFBRTRDLEtBQUs0MUYsZ0JBQWdCLENBQUMsSUFBSSxVQUFVNTFGLEtBQUswMUYsUUFBUWtGLG1CQUFtQjU2RixLQUFLd2dELFNBQVNxN0MsMkJBQTJCLE1BQU03N0YsS0FBSzYxRixPQUFPTyxXQUFXcndGLE1BQU0vRixLQUFLNjFGLE9BQU9PLFdBQVcvcUYsT0FBT2hPLEVBQUVnNUYsWUFBWXIyRixLQUFLKzVGLGdCQUFnQi81RixLQUFLNjFGLE9BQU9PLFdBQVcvcUYsT0FBT2hPLEVBQUUyNkYsVUFBVWg0RixLQUFLNjFGLE9BQU9PLFdBQVcvcUYsT0FBT2hPLEVBQUV5NkYsWUFBWTkzRixLQUFLNjFGLE9BQU9PLFdBQVcvcUYsT0FBT2hPLEVBQUU4NkYsV0FBVyxNQUFNbjRGLEtBQUs2MUYsT0FBT08sV0FBV3J3RixNQUFNL0YsS0FBSzYxRixPQUFPTyxXQUFXL3FGLE9BQU9oTyxFQUFFMDdGLE9BQU8vNEYsS0FBS2s2RixnQ0FBZ0MvM0IsRUFBRUEsRUFBRXkzQixVQUFVNTVGLEtBQUs2NkYsWUFBWTE0QixHQUFHbmlFLEtBQUt1M0YsU0FBU2g0RixHQUFHUyxLQUFLd2dELFNBQVNrN0MsaUJBQWlCMTdGLEtBQUswMUYsUUFBUWtGLG9CQUFtQixHQUFJNTZGLEtBQUtzN0YsVUFBVTU2RSxFQUFFdm1CLFVBQVU4OUYsZ0JBQWdCLFNBQVM5MUIsR0FBRyxLQUFLbmlFLEtBQUs2MUYsT0FBT2x4RCxPQUFPMVIsR0FBR2p6QixLQUFLczZGLGVBQWV0NkYsS0FBSzI1RiwrQkFBK0J4M0IsR0FBR25pRSxLQUFLNjFGLE9BQU9QLGlCQUFpQnQxRixLQUFLazZGLGdDQUFnQy8zQixFQUFFLE1BQU1BLEVBQUVwOEQsTUFBTW9uRSxFQUFFbnRFLEtBQUs2MUYsT0FBT2x4RCxRQUFRM2tDLEtBQUt3Z0QsU0FBU3E1Qyx3QkFBd0I3NUYsS0FBS3dnRCxTQUFTazdDLGlCQUFpQjE3RixLQUFLNjFGLE9BQU9PLFdBQVcvcUYsT0FBT2hPLEVBQUV5NkYsWUFBWTkzRixLQUFLd2dELFNBQVNzN0MscUJBQXFCOTdGLEtBQUswMUYsUUFBUWtGLG9CQUFtQixHQUFJNTZGLEtBQUswMUYsUUFBUWpqRSxPQUFPenlCLEtBQUswMUYsUUFBUWtGLG9CQUFtQixJQUFLNTZGLEtBQUt1N0YsV0FBV3Y3RixLQUFLNjZGLFlBQVkxNEIsR0FBR25pRSxLQUFLczZGLGVBQWVyc0IsRUFBRWp1RSxLQUFLMDFGLFFBQVExMUYsS0FBSzgxRixpQkFBaUI5MUYsS0FBSzYxRixPQUFPZ0IsVUFBVTcyRixLQUFLODFGLGdCQUFnQm54RCxPQUFPc2dCLElBQUlqbEQsS0FBSzgxRixnQkFBZ0JueEQsS0FBS3lrQyxFQUFFcHBFLEtBQUs2MUYsT0FBT2UsVUFBUyxFQUFHNTJGLEtBQUs2MUYsT0FBT2dCLFVBQVMsSUFBS24yRSxFQUFFdm1CLFVBQVUrOUYsbUJBQW1CLFNBQVMvMUIsR0FBR25pRSxLQUFLMjVGLCtCQUErQngzQixHQUFHLElBQUk1aUUsRUFBRVMsS0FBSzIxRixRQUFRbEwsT0FBTy92RixFQUFFc0YsS0FBSzIxRixRQUFRbEwsS0FBSyxHQUFHLFdBQVd6cUYsS0FBSzYxRixPQUFPUyxXQUFXdDJGLEtBQUs2MUYsT0FBT08sV0FBVy9xRixPQUFPaE8sRUFBRTI2RixVQUFVaDRGLEtBQUt1M0YsU0FBUzk3QyxHQUFHejdDLEtBQUs2MUYsT0FBT2tCLG1CQUFrQixHQUFJLzJGLEtBQUs2MUYsT0FBT29CLFVBQVVqM0YsS0FBS3UzRixTQUFTOTdDLEdBQUcvZ0QsSUFBSTBDLEVBQUUxQyxFQUFFcUwsS0FBSyxDQUFDLElBQUksT0FBTzNJLEVBQUVtQyxFQUFFOEwsS0FBSyxDQUFDaE8sRUFBRW83RixPQUFPcDdGLEVBQUVnN0YsS0FBS2g3RixFQUFFODNGLFlBQVkvM0YsRUFBRW1DLEVBQUV3RyxLQUFLLENBQUMsTUFBTSxNQUFNLFNBQVMzSSxFQUFFMUMsRUFBRTJRLEtBQUssQ0FBQ2hPLEVBQUVnN0YsS0FBS2g3RixFQUFFODNGLFlBQVkvM0YsRUFBRTRDLEtBQUs0MUYsZ0JBQWdCLENBQUMsUUFBUSxjQUFjNTFGLEtBQUt1M0YsU0FBUzk3QyxHQUFHejdDLEtBQUt1M0YsU0FBU3o0RixHQUFHa0IsS0FBSzYxRixPQUFPTyxXQUFXL3FGLE9BQU9oTyxFQUFFdzdGLFVBQVUsT0FBTzc0RixLQUFLNjFGLE9BQU9PLFdBQVdyd0YsS0FBSy9GLEtBQUt1M0YsU0FBUzk3QyxHQUFHcitDLEVBQUU0QyxLQUFLNjFGLE9BQU9PLFdBQVcvcUYsS0FBSyxDQUFDaE8sRUFBRXM3RixPQUFPdDdGLEVBQUV5NkYsV0FBV3o2RixFQUFFMDdGLE1BQU0xN0YsRUFBRXc3RixZQUFZeHBGLEVBQUVyUCxLQUFLNjFGLE9BQU9PLFdBQVcsQ0FBQyxTQUFTLFFBQVEsU0FBUyxZQUFZcDJGLEtBQUt1M0YsU0FBU3o0RixHQUFHa0IsS0FBS3UzRixTQUFTOTdDLEdBQUcsSUFBSXovQyxHQUFHdUQsRUFBRXU2RixpQkFBaUIsTUFBTXY2RixFQUFFd0csS0FBS3MxRCxFQUFFci9ELEdBQUcsYUFBYWdFLEtBQUs2MUYsT0FBT1MsV0FBV3QyRixLQUFLNjFGLE9BQU9PLFdBQVcvcUYsT0FBT2hPLEVBQUUyNkYsU0FBUyxHQUFHaDRGLEtBQUt3Z0QsU0FBU3U3QyxzQkFBc0IsQ0FBQyxJQUFJLzlGLEVBQUUsRUFBRTJsQyxFQUFFLEtBQUszakMsS0FBSzYxRixPQUFPWSxjQUFhLEVBQUcsR0FBRyxHQUFHejRGLEdBQUcsR0FBRzJsQyxFQUFFM2pDLEtBQUsyMUYsUUFBUWxMLEtBQUt6c0YsRUFBRSxJQUFJNDdGLFNBQVMsQ0FBQzU1RixLQUFLNjFGLE9BQU9ZLGNBQWEsRUFBRyxhQUFhOXlELEVBQUV0NEIsT0FBT2hPLEVBQUVrOEYsTUFBTTUxRCxFQUFFdDRCLE9BQU9oTyxFQUFFODZGLFdBQVd4MEQsRUFBRXE0RCxTQUFTNzVCLEtBQUssV0FBV25pRSxLQUFLd2dELFNBQVN5N0MsYUFBYSxTQUFTajhGLEtBQUt3Z0QsU0FBU3k3QyxhQUFhOTVCLEVBQUV5M0IsWUFBWTU1RixLQUFLNjFGLE9BQU9ZLGFBQWF6MkYsS0FBSzYxRixPQUFPTyxXQUFXL3FGLE9BQU9oTyxFQUFFdzdGLFdBQVd4OUIsR0FBR3I3RCxLQUFLNjFGLE9BQU9PLFdBQVcvcUYsT0FBT2hPLEVBQUVzN0YsUUFBUXRwRixFQUFFclAsS0FBSzYxRixPQUFPTyxXQUFXLzhFLElBQUksU0FBU3JaLEtBQUs2MUYsT0FBT08sV0FBV3J3RixNQUFNL0YsS0FBSzAxRixRQUFRa0Ysb0JBQW1CLEVBQUc1NkYsS0FBSys1RixlQUFjLEdBQUcsS0FBTTVzQixFQUFFbnRFLEtBQUs4MUYsZ0JBQWdCbnhELE9BQU8za0MsS0FBSzYxRixPQUFPTyxXQUFXL3FGLE9BQU9oTyxFQUFFeTZGLFlBQVk5M0YsS0FBSzYxRixPQUFPTyxXQUFXL3FGLE9BQU9oTyxFQUFFMDdGLFNBQVMvNEYsS0FBSzYxRixPQUFPTyxXQUFXL3FGLE9BQU9oTyxFQUFFMDdGLE9BQU8vNEYsS0FBS3dnRCxTQUFTazdDLGtCQUFrQjE3RixLQUFLMDFGLFFBQVFrRixvQkFBbUIsSUFBSzU2RixLQUFLNjFGLE9BQU9PLFdBQVcvcUYsT0FBT2hPLEVBQUUwN0YsT0FBTy80RixLQUFLNjFGLE9BQU9PLFdBQVcvcUYsT0FBT2hPLEVBQUV5NkYsWUFBWTkzRixLQUFLNjFGLE9BQU9ZLGdCQUFnQnoyRixLQUFLazZGLGdDQUFnQy8zQixHQUFHbmlFLEtBQUs4MUYsZ0JBQWdCUixnQkFBZ0J0MUYsS0FBSzgxRixnQkFBZ0JSLGlCQUFpQnQxRixLQUFLNjFGLE9BQU9QLGdCQUFnQnQxRixLQUFLNjFGLE9BQU9QLGlCQUFnQixJQUFLdDFGLEtBQUs2MUYsT0FBT08sV0FBVy9xRixPQUFPaE8sRUFBRXc3RixVQUFVNzRGLEtBQUs2MUYsT0FBT08sV0FBVy9xRixPQUFPaE8sRUFBRXk2RixhQUFhOTNGLEtBQUs2MUYsT0FBT08sV0FBVy9xRixPQUFPaE8sRUFBRWc1RixhQUFhcjJGLEtBQUs2MUYsT0FBT1ksYUFBYXoyRixLQUFLMDFGLFFBQVFrRixvQkFBbUIsRUFBRzU2RixLQUFLKzVGLGtCQUFrQi81RixLQUFLNjZGLFlBQVkxNEIsR0FBR25pRSxLQUFLczdGLFNBQVN0L0YsR0FBR2dFLEtBQUt3Z0QsU0FBU3U3Qyx1QkFBdUIvN0YsS0FBSzYxRixPQUFPWSxjQUFjejJGLEtBQUsrNUYsaUJBQWlCcjVFLEVBQUV2bUIsVUFBVWkrRixpQkFBaUIsU0FBU2oyQixHQUFHLElBQUluaUUsS0FBSzI1RiwrQkFBK0J4M0IsR0FBR25pRSxLQUFLNjFGLE9BQU9seEQsT0FBTzFSLEdBQUdqekIsS0FBS3M2RixlQUFlLElBQUkvNkYsRUFBRVMsS0FBSzYxRixPQUFPTyxXQUFXL3FGLE9BQU9oTyxFQUFFZzVGLFlBQVlyMkYsS0FBSzYxRixPQUFPWSxlQUFlbDNGLEVBQUVTLEtBQUswMUYsUUFBUWtGLG9CQUFtQixFQUFHLFdBQVc1NkYsS0FBS3dnRCxTQUFTeTdDLFlBQVkxOEYsR0FBR1MsS0FBSys1RixnQkFBZ0J4NkYsSUFBSTR0RSxFQUFFbnRFLEtBQUs2MUYsT0FBT2x4RCxPQUFPM2tDLEtBQUt3Z0QsU0FBU3E1Qyx3QkFBd0I3NUYsS0FBS3dnRCxTQUFTcTVDLHdCQUF1QixFQUFHNzVGLEtBQUsrNUYsZ0JBQWdCLzVGLEtBQUt3Z0QsU0FBU3E1Qyx3QkFBdUIsR0FBSTc1RixLQUFLKzVGLGlCQUFpQi81RixLQUFLczZGLGVBQWV0NkYsS0FBSzY2RixZQUFZMTRCLElBQUl6aEQsRUFBRXZtQixVQUFVbStGLFlBQVksU0FBU24yQixHQUFHLEdBQUdBLEVBQUU5MkQsT0FBT2hPLEVBQUU4M0YsV0FBVy8zRixFQUFFK2tFLEVBQUVwOEQsS0FBSyxDQUFDLE1BQU0sU0FBUy9GLEtBQUs2MUYsT0FBT2x4RCxPQUFPN2xDLEdBQUcsV0FBV3FqRSxFQUFFcDhELE1BQU0sTUFBTS9GLEtBQUsyMUYsUUFBUWxMLE9BQU8xa0YsTUFBTTNJLEVBQUUra0UsRUFBRXA4RCxLQUFLLENBQUMsS0FBSyxXQUFXL0YsS0FBSzYxRixPQUFPaUIsY0FBYzkyRixLQUFLNjFGLE9BQU9seEQsT0FBTzdsQyxHQUFHLE1BQU1rQixLQUFLMjFGLFFBQVFsTCxPQUFPMWtGLFFBQVFvOEQsRUFBRTkyRCxLQUFLaE8sRUFBRWc3RixNQUFNcjRGLEtBQUt5N0YsbUJBQW1CdDVCLEdBQUc5eUQsRUFBRXJQLEtBQUs2MUYsT0FBT08sV0FBVyxDQUFDLE1BQU0sTUFBTSxXQUFXajBCLEVBQUU5MkQsT0FBT2hPLEVBQUVnN0YsT0FBT3I0RixLQUFLNjFGLE9BQU9VLHVCQUFzQixJQUFLcDBCLEVBQUV5M0IsVUFBVWh0QixFQUFFNXNFLEtBQUs2MUYsT0FBT2x4RCxPQUFPM2tDLEtBQUs2MUYsT0FBT08sV0FBVy9xRixPQUFPaE8sRUFBRXc3RixVQUFVLE9BQU83NEYsS0FBSzYxRixPQUFPTyxXQUFXcndGLE1BQU0sT0FBTy9GLEtBQUs2MUYsT0FBT08sV0FBV3J3RixNQUFNL0YsS0FBSzYxRixPQUFPTyxXQUFXL3FGLE9BQU9oTyxFQUFFczdGLFNBQVMzNEYsS0FBS3dnRCxTQUFTeTVDLG1CQUFtQjVxRixFQUFFclAsS0FBSzYxRixPQUFPTyxXQUFXLENBQUMsTUFBTSxNQUFNLFFBQVEsTUFBTSxRQUFRcDJGLEtBQUsyNUYsK0JBQStCeDNCLElBQUluaUUsS0FBSzI1RiwrQkFBK0J4M0IsR0FBR25pRSxLQUFLKzVGLGlCQUFpQi81RixLQUFLNjFGLE9BQU9lLFdBQVc1MkYsS0FBSzYxRixPQUFPZ0IsU0FBUyxDQUFDLEdBQUc3eEQsRUFBRW05QixFQUFFLFNBQVMsT0FBT25pRSxLQUFLMDFGLFFBQVFrRixvQkFBbUIsRUFBRzU2RixLQUFLNjZGLFlBQVkxNEIsR0FBR25pRSxLQUFLMDFGLFFBQVFrRixvQkFBbUIsT0FBUTU2RixLQUFLNjFGLE9BQU9nQixVQUFTLEdBQUk3MkYsS0FBSys1RixnQkFBZ0IvNUYsS0FBSzYxRixPQUFPZSxVQUFTLEVBQUcsR0FBRzUyRixLQUFLNjFGLE9BQU9hLFNBQVMsSUFBSTEyRixLQUFLNjFGLE9BQU9jLFlBQVkzeEQsRUFBRW05QixFQUFFLFFBQVFuaUUsS0FBSzYxRixPQUFPYyxZQUFXLE1BQU8sQ0FBQyxLQUFLMzJGLEtBQUs2MUYsT0FBT2x4RCxPQUFPMVIsR0FBR2p6QixLQUFLczZGLGVBQWV0NkYsS0FBSzYxRixPQUFPYSxVQUFTLEVBQUcxMkYsS0FBSzYxRixPQUFPYyxZQUFXLEVBQUcsR0FBRzMyRixLQUFLNjFGLE9BQU9rQixtQkFBbUIxbkYsRUFBRTh5RCxFQUFFLENBQUMsT0FBTyxZQUFZLE9BQU9uaUUsS0FBSys1RixnQkFBZ0IvNUYsS0FBSzYxRixPQUFPTyxXQUFXL3FGLE9BQU9oTyxFQUFFODZGLFlBQVluNEYsS0FBSzYxRixPQUFPb0IsV0FBV2ozRixLQUFLd2dELFNBQVMwN0MsZUFBZWw4RixLQUFLdTdGLFdBQVd2N0YsS0FBSzYxRixPQUFPb0IsV0FBVSxFQUFHajNGLEtBQUs2NkYsWUFBWTE0QixRQUFRbmlFLEtBQUs2MUYsT0FBT21CLFNBQVEsR0FBSSxHQUFHaDNGLEtBQUs2MUYsT0FBT08sV0FBVy9xRixPQUFPaE8sRUFBRTA3RixPQUFPLzRGLEtBQUs2MUYsT0FBT08sV0FBVy9xRixPQUFPaE8sRUFBRXk2RixZQUFZOTNGLEtBQUs2MUYsT0FBT08sV0FBVy9xRixPQUFPaE8sRUFBRXM3RixRQUFRMzRGLEtBQUs2MUYsT0FBT08sV0FBVy9xRixPQUFPaE8sRUFBRXc3RixVQUFVNzRGLEtBQUt3N0YsNEJBQTRCeDdGLEtBQUtrNkYsZ0NBQWdDLzNCLEdBQUduOUIsRUFBRW05QixFQUFFLFlBQVksT0FBTy9rRSxFQUFFNEMsS0FBSzYxRixPQUFPTyxXQUFXcndGLEtBQUssQ0FBQyxJQUFJLE9BQU8vRixLQUFLMDFGLFFBQVFRLHVCQUF1Qjk0RixFQUFFNEMsS0FBSzYxRixPQUFPTyxXQUFXcndGLEtBQUssQ0FBQyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksT0FBTy9GLEtBQUs2MUYsT0FBT08sV0FBVy9xRixPQUFPaE8sRUFBRXc3RixZQUFZNzRGLEtBQUswMUYsUUFBUXlHLHdCQUF3Qmg2QixFQUFFMjNCLGtCQUFrQjk1RixLQUFLKzVGLGdCQUFnQi81RixLQUFLKzVGLGVBQWMsS0FBTS81RixLQUFLNjFGLE9BQU9PLFdBQVcvcUYsT0FBT2hPLEVBQUU4M0YsVUFBVW4xRixLQUFLNjFGLE9BQU9PLFdBQVcvcUYsT0FBT2hPLEVBQUVnN0YsS0FBS2hwRixFQUFFclAsS0FBSzYxRixPQUFPTyxXQUFXLENBQUMsTUFBTSxNQUFNLE1BQU0sWUFBWS9tRixFQUFFclAsS0FBSzYxRixPQUFPTyxXQUFXMzRCLElBQUl6NEIsRUFBRWhsQyxLQUFLNjFGLE9BQU9PLFdBQVcsWUFBWSxXQUFXcDJGLEtBQUs0MUYsaUJBQWlCLFlBQVk1MUYsS0FBSzYxRixPQUFPTyxXQUFXcndGLEtBQUsvRixLQUFLMDFGLFFBQVFrRixvQkFBbUIsRUFBRzU2RixLQUFLKzVGLGdCQUFnQi81RixLQUFLNjFGLE9BQU9PLFdBQVcvcUYsT0FBT2hPLEVBQUV3N0YsVUFBVSxNQUFNNzRGLEtBQUs2MUYsT0FBT08sV0FBV3J3RixLQUFLL0YsS0FBSzAxRixRQUFRa0Ysb0JBQW1CLEdBQUk1NkYsS0FBSzYxRixPQUFPUCxrQkFBa0Ixb0IsRUFBRTVzRSxLQUFLNjFGLE9BQU9seEQsUUFBUXdvQyxFQUFFbnRFLEtBQUs2MUYsT0FBT2x4RCxRQUFRM2tDLEtBQUsrNUYsZ0JBQWdCLzVGLEtBQUs2NkYsWUFBWTE0QixRQUFRbmlFLEtBQUs2MUYsT0FBT1MsVUFBVW4wQixFQUFFcDhELE1BQU0sSUFBSXhHLEVBQUUsT0FBT1MsS0FBSzYxRixPQUFPTyxXQUFXL3FGLE9BQU9oTyxFQUFFODZGLFVBQVVuNEYsS0FBSzgxRixnQkFBZ0JXLGFBQWFsM0YsRUFBRSxRQUFROFAsRUFBRTh5RCxFQUFFLENBQUMsT0FBTyxRQUFRLFVBQVUsU0FBUyxXQUFXbmlFLEtBQUt3Z0QsU0FBU3k3QyxhQUFhLGVBQWVqOEYsS0FBS3dnRCxTQUFTeTdDLGFBQWEsU0FBU2o4RixLQUFLd2dELFNBQVN5N0MsYUFBYTk1QixFQUFFeTNCLFNBQVNyNkYsRUFBRSxXQUFXQSxFQUFFLFFBQVFTLEtBQUswMUYsUUFBUWtGLG9CQUFtQixHQUFJcjdGLEVBQUUsVUFBVVMsS0FBSzYxRixPQUFPTyxXQUFXL3FGLE9BQU9oTyxFQUFFazdGLFdBQVd2NEYsS0FBSzYxRixPQUFPbHhELE9BQU84VyxFQUFFbDhDLEVBQUUsVUFBVVMsS0FBSzYxRixPQUFPTyxXQUFXL3FGLE9BQU9oTyxFQUFFazdGLFdBQVczckIsRUFBRTVzRSxLQUFLNjFGLE9BQU9seEQsTUFBTXBsQyxFQUFFLFFBQVFTLEtBQUs2MUYsT0FBT08sV0FBVy9xRixPQUFPaE8sRUFBRW83RixPQUFPbDVGLEVBQUUsVUFBVVMsS0FBSzYxRixPQUFPTyxXQUFXL3FGLE9BQU9oTyxFQUFFODNGLFVBQVVuMUYsS0FBSzYxRixPQUFPTyxXQUFXL3FGLE9BQU9oTyxFQUFFZzdGLE1BQU0sTUFBTXI0RixLQUFLNjFGLE9BQU9PLFdBQVdyd0YsT0FBTzNJLEVBQUU0QyxLQUFLNDFGLGdCQUFnQixDQUFDLFdBQVcsV0FBVzUxRixLQUFLNjFGLE9BQU9seEQsT0FBTzdsQyxHQUFHMUIsRUFBRTRDLEtBQUs0MUYsZ0JBQWdCLENBQUMsSUFBSSxPQUFPcjJGLEVBQUUsUUFBUVMsS0FBSzYxRixPQUFPTyxXQUFXL3FGLE9BQU9oTyxFQUFFZzVGLFlBQVk5MkYsRUFBRVMsS0FBSzYxRixPQUFPWSxhQUFhLFFBQVEsVUFBVXoyRixLQUFLNjFGLE9BQU9PLFdBQVcvcUYsT0FBT2hPLEVBQUUyNkYsV0FBV2g0RixLQUFLMDFGLFFBQVFrRixvQkFBbUIsRUFBR3I3RixFQUFFLFdBQVc4UCxFQUFFOHlELEVBQUVxRixJQUFJLE1BQU14bkUsS0FBSzYxRixPQUFPTyxXQUFXcndGLE9BQU94RyxFQUFFUyxLQUFLNjFGLE9BQU9ZLGNBQWMsU0FBU3oyRixLQUFLNjFGLE9BQU9PLFdBQVdyd0YsTUFBTSxXQUFXL0YsS0FBSzYxRixPQUFPTyxXQUFXcndGLEtBQUssUUFBUSxXQUFXc0osRUFBRTh5RCxFQUFFLENBQUMsT0FBTyxRQUFRLGFBQWFuaUUsS0FBSzYxRixPQUFPTyxXQUFXL3FGLE9BQU9oTyxFQUFFODZGLFdBQVduNEYsS0FBSzgxRixnQkFBZ0JueEQsT0FBTzhXLEdBQUcsV0FBV3o3QyxLQUFLd2dELFNBQVN5N0MsYUFBYSxlQUFlajhGLEtBQUt3Z0QsU0FBU3k3QyxhQUFhLFNBQVNqOEYsS0FBS3dnRCxTQUFTeTdDLGFBQWE5NUIsRUFBRXkzQixZQUFZNTVGLEtBQUs2MUYsT0FBT1ksYUFBYXoyRixLQUFLKzVGLGlCQUFpQi81RixLQUFLMDFGLFFBQVFqakUsTUFBSyxHQUFJLE1BQU16eUIsS0FBSzAxRixRQUFRK0UsYUFBYWpvRixRQUFReFMsS0FBSys1RixnQkFBZ0IvNUYsS0FBSzAxRixRQUFRa0Ysb0JBQW1CLEdBQUksWUFBWXI3RixFQUFFOFAsRUFBRXJQLEtBQUs2MUYsT0FBT08sV0FBVy84RSxJQUFJLFlBQVlyWixLQUFLNjFGLE9BQU9PLFdBQVdyd0YsTUFBTXNKLEVBQUU4eUQsRUFBRSxDQUFDLE1BQU0sTUFBTSxVQUFVbmlFLEtBQUswMUYsUUFBUWtGLG9CQUFtQixFQUFHNTZGLEtBQUs2MUYsT0FBT08sV0FBVy9xRixPQUFPaE8sRUFBRTI2RixTQUFTaDRGLEtBQUs2MUYsT0FBT08sV0FBVy9xRixPQUFPaE8sRUFBRXk2RixZQUFZem9GLEVBQUU4eUQsRUFBRSxDQUFDLE1BQU0sTUFBTSxXQUFXLE1BQU1uaUUsS0FBSzYxRixPQUFPTyxXQUFXcndGLE9BQU9pL0IsRUFBRW05QixFQUFFLE9BQU9uOUIsRUFBRW05QixFQUFFNjRCLFNBQVMsUUFBUWg3RixLQUFLMDFGLFFBQVFrRixvQkFBbUIsRUFBRzU2RixLQUFLKzVGLGlCQUFpQjFxRixFQUFFOHlELEVBQUVxRixJQUFJLE1BQU14bkUsS0FBSzYxRixPQUFPTyxXQUFXcndGLE1BQU0vRixLQUFLKzVGLGdCQUFnQi81RixLQUFLNjFGLE9BQU9QLGlCQUFpQm5vQixFQUFFbnRFLEtBQUs2MUYsT0FBT2x4RCxPQUFPLE1BQU0za0MsS0FBSzYxRixPQUFPTyxXQUFXcndGLE1BQU0sTUFBTS9GLEtBQUs0MUYsZ0JBQWdCNTFGLEtBQUsrNUYsZ0JBQWdCLFVBQVV4NkYsSUFBSVMsS0FBSzAxRixRQUFRa0Ysb0JBQW1CLElBQUt6NEIsRUFBRTY0QixVQUFVNzRCLEVBQUU2NEIsU0FBUzN2RixPQUFPaE8sRUFBRWc3RixNQUFNbDJCLEVBQUU2NEIsU0FBUzN2RixPQUFPaE8sRUFBRTgzRixXQUFXbjFGLEtBQUswMUYsUUFBUWtGLG9CQUFtQixHQUFJNTZGLEtBQUs2NkYsWUFBWTE0QixHQUFHbmlFLEtBQUs2MUYsT0FBT1MsVUFBVW4wQixFQUFFcDhELEtBQUtvOEQsRUFBRTkyRCxPQUFPaE8sRUFBRTgzRixXQUFXLE9BQU9oekIsRUFBRXA4RCxLQUFLL0YsS0FBSzYxRixPQUFPZSxVQUFTLEVBQUcsT0FBT3owQixFQUFFcDhELEtBQUsvRixLQUFLNjFGLE9BQU9hLFVBQVMsRUFBRyxXQUFXdjBCLEVBQUVwOEQsS0FBSy9GLEtBQUs2MUYsT0FBT2lCLGNBQWEsRUFBRzkyRixLQUFLNjFGLE9BQU9pQixjQUFjOXhELEVBQUVtOUIsRUFBRSxVQUFVbmlFLEtBQUs2MUYsT0FBT2lCLGNBQWEsS0FBTXAyRSxFQUFFdm1CLFVBQVVxK0YsaUJBQWlCLFNBQVNyMkIsR0FBR25pRSxLQUFLeTdGLG1CQUFtQnQ1QixHQUFHbmlFLEtBQUswMUYsUUFBUWtGLG9CQUFtQixFQUFHNTZGLEtBQUsyNUYsK0JBQStCeDNCLEdBQUcsSUFBSSxJQUFJNWlFLEVBQUVTLEtBQUsyMUYsUUFBUWxMLFNBQVN6cUYsS0FBSzYxRixPQUFPbHhELE9BQU8xUixHQUFHanpCLEtBQUs2MUYsT0FBT2EsVUFBVTF4RCxFQUFFemxDLEVBQUUsU0FBU1MsS0FBSzYxRixPQUFPZSxXQUFXNTJGLEtBQUtzNkYsZUFBZXQ2RixLQUFLNjFGLE9BQU9pQixlQUFlOTJGLEtBQUs2MUYsT0FBT2lCLGNBQWEsR0FBSTkyRixLQUFLNjZGLFlBQVkxNEIsSUFBSXpoRCxFQUFFdm1CLFVBQVV1K0YsY0FBYyxTQUFTdjJCLEdBQUduaUUsS0FBS3k3RixtQkFBbUJ0NUIsR0FBR25pRSxLQUFLMDFGLFFBQVFrRixvQkFBbUIsR0FBSTU2RixLQUFLMjVGLCtCQUErQngzQixHQUFHbmlFLEtBQUs2MUYsT0FBT08sV0FBVy9xRixPQUFPaE8sRUFBRTgzRixVQUFVbjFGLEtBQUs2MUYsT0FBT08sV0FBVy9xRixPQUFPaE8sRUFBRWc3RixNQUFNcjRGLEtBQUs2MUYsT0FBT1ksYUFBYXoyRixLQUFLMDFGLFFBQVFrRixvQkFBbUIsRUFBRzU2RixLQUFLNjFGLE9BQU9PLFdBQVcvcUYsT0FBT2hPLEVBQUUwN0YsT0FBTy80RixLQUFLNjFGLE9BQU9PLFdBQVcvcUYsT0FBT2hPLEVBQUV5NkYsWUFBWTkzRixLQUFLNjFGLE9BQU9PLFdBQVcvcUYsT0FBT2hPLEVBQUVzN0YsUUFBUTM0RixLQUFLNjFGLE9BQU9PLFdBQVcvcUYsT0FBT2hPLEVBQUV3N0YsU0FBUzc0RixLQUFLdzdGLDRCQUE0Qng3RixLQUFLazZGLGdDQUFnQy8zQixHQUFHbmlFLEtBQUsrNUYsaUJBQWlCLzVGLEtBQUs2NkYsWUFBWTE0QixJQUFJemhELEVBQUV2bUIsVUFBVXkrRixjQUFjLFNBQVN6MkIsR0FBR25pRSxLQUFLeTdGLG1CQUFtQnQ1QixJQUFJbmlFLEtBQUsyNUYsK0JBQStCeDNCLEdBQUduaUUsS0FBSzYxRixPQUFPVSx3QkFBd0J2MkYsS0FBSzYxRixPQUFPVyx3QkFBdUIsR0FBSXgyRixLQUFLMDFGLFFBQVFrRixvQkFBbUIsRUFBRzU2RixLQUFLNjZGLFlBQVkxNEIsR0FBR25pRSxLQUFLMDFGLFFBQVFrRixvQkFBbUIsR0FBSWw2RSxFQUFFdm1CLFVBQVU2K0YsYUFBYSxTQUFTNzJCLEdBQUduaUUsS0FBSzI1RiwrQkFBK0J4M0IsR0FBRSxHQUFJbmlFLEtBQUs2NkYsWUFBWTE0QixHQUFHbmlFLEtBQUswMUYsUUFBUWtGLG9CQUFtQixFQUFHNTZGLEtBQUs2MUYsT0FBT1UsdUJBQXVCM3BCLEVBQUU1c0UsS0FBSzYxRixPQUFPcHZGLE9BQU9rK0IsUUFBUTNrQyxLQUFLNjFGLE9BQU9XLHdCQUF1QixHQUFJeDJGLEtBQUs2MUYsT0FBT1csd0JBQXdCeDJGLEtBQUs2MUYsT0FBT1csd0JBQXVCLEVBQUd4MkYsS0FBSys1RixlQUFjLEdBQUcsSUFBSy81RixLQUFLd2dELFNBQVN1NkMsYUFBYS82RixLQUFLazZGLGdDQUFnQy8zQixJQUFJbmlFLEtBQUs2MUYsT0FBT2x4RCxPQUFPN2xDLEdBQUdrQixLQUFLNjFGLE9BQU9seEQsT0FBTzFSLEdBQUdqekIsS0FBSzYxRixPQUFPcHZGLE9BQU9rK0IsT0FBTzdsQyxHQUFHa0IsS0FBSzYxRixPQUFPbHhELE9BQU8xUixHQUFHanpCLEtBQUtzNkYsZUFBZXQ2RixLQUFLNjFGLE9BQU9ZLGNBQWN6MkYsS0FBSys1RixpQkFBaUIvNUYsS0FBS3dnRCxTQUFTdTZDLGFBQWEvNkYsS0FBS2s2RixnQ0FBZ0MvM0IsSUFBSXpoRCxFQUFFdm1CLFVBQVUyK0YsZ0JBQWdCLFNBQVMzMkIsR0FBRyxJQUFJNWlFLEVBQUUsTUFBTTRpRSxFQUFFcDhELE9BQU9zSixFQUFFclAsS0FBSzYxRixPQUFPTyxXQUFXLENBQUMsV0FBVyxXQUFXaDVGLEVBQUU0QyxLQUFLNjFGLE9BQU9PLFdBQVcvcUYsS0FBSyxDQUFDaE8sRUFBRWc1RixZQUFZaDVGLEVBQUUwN0YsTUFBTTE3RixFQUFFODZGLFVBQVU5NkYsRUFBRWs3RixhQUFhNzlGLEVBQUUwQyxFQUFFK2tFLEVBQUVwOEQsS0FBSyxDQUFDLElBQUksUUFBUTNJLEVBQUU0QyxLQUFLNjFGLE9BQU9PLFdBQVcvcUYsS0FBSyxDQUFDaE8sRUFBRWc1RixZQUFZaDVGLEVBQUV5NkYsV0FBV3o2RixFQUFFczdGLE9BQU90N0YsRUFBRXc3RixZQUFZejdGLEVBQUU0QyxLQUFLNjFGLE9BQU9PLFdBQVdyd0YsS0FBS3loRSxJQUFJLE1BQU14bkUsS0FBSzYxRixPQUFPTyxXQUFXcndGLE1BQU0sR0FBRy9GLEtBQUt5N0YsbUJBQW1CdDVCLFFBQVEsQ0FBQyxJQUFJbm1FLEdBQUd1RCxFQUFFUyxLQUFLMjVGLCtCQUErQngzQixFQUFFbm1FLEdBQUcsR0FBR3FULEVBQUVyUCxLQUFLNjFGLE9BQU9PLFdBQVcvOEUsR0FBRyxPQUFPclosS0FBSzAxRixRQUFRa0Ysb0JBQW1CLE9BQVE1NkYsS0FBSzY2RixZQUFZMTRCLEdBQUcsR0FBRyxNQUFNQSxFQUFFcDhELE1BQU0vRixLQUFLNjFGLE9BQU9PLFdBQVcvcUYsT0FBT2hPLEVBQUVnOEYsSUFBSSxHQUFHLE9BQU9sM0IsRUFBRXA4RCxLQUFLLENBQUMsR0FBRy9GLEtBQUs2MUYsT0FBT08sV0FBVy9xRixPQUFPaE8sRUFBRXc3RixVQUFVejdGLEVBQUU0QyxLQUFLd2dELFNBQVMyNUMsa0JBQWtCeGdHLElBQUlxRyxLQUFLazZGLGdDQUFnQy8zQixHQUFHLE1BQU1BLEVBQUVwOEQsTUFBTS9GLEtBQUs2MUYsT0FBT21CLFFBQVEsT0FBT2gzRixLQUFLNjZGLFlBQVkxNEIsR0FBR25pRSxLQUFLNjFGLE9BQU9tQixTQUFRLEVBQUdoM0YsS0FBSzYxRixPQUFPb0IsV0FBVSxPQUFRajNGLEtBQUsyMUYsUUFBUWxMLE9BQU9wL0UsT0FBT2hPLEVBQUVnNUYsYUFBYXIyRixLQUFLczdGLFNBQVN0N0YsS0FBSys1RixpQkFBaUIvNUYsS0FBSzAxRixRQUFRa0Ysb0JBQW1CLEdBQUksSUFBSXYvQixHQUFFLEVBQUdyOUQsR0FBRSxFQUFHMmxDLEdBQUUsRUFBRyxHQUFHLE1BQU13K0IsRUFBRXA4RCxLQUFLLElBQUkvRixLQUFLNjFGLE9BQU91QixjQUFjLzdCLEdBQUUsR0FBSXI3RCxLQUFLNjFGLE9BQU91QixlQUFlLEVBQUV6ekQsR0FBRSxHQUFJLE1BQU13K0IsRUFBRXA4RCxPQUFPL0YsS0FBSzYxRixPQUFPdUIsZUFBZSxJQUFJMThGLElBQUk2RSxHQUFHUyxLQUFLd2dELFNBQVN5NUMsbUJBQW1CNzhGLEVBQUUra0UsRUFBRXA4RCxLQUFLOUgsR0FBRyxDQUFDLElBQUlpK0IsRUFBRSxNQUFNaW1DLEVBQUVwOEQsS0FBS2kvQixFQUFFOUksR0FBR3lILEVBQUU3a0MsRUFBRW85QixJQUFJeUgsRUFBRSxPQUFPM2pDLEtBQUt3Z0QsU0FBUzI1QyxtQkFBbUIsS0FBS2w0QixFQUFFbXpCLGVBQWUsT0FBT3AxRixLQUFLMDFGLFFBQVFrRixvQkFBb0I5N0YsRUFBRWtCLEtBQUs2NkYsWUFBWTE0QixHQUFHam1DLElBQUk4SSxHQUFHaGxDLEtBQUtrNkYsZ0NBQWdDLzNCLFFBQVFuaUUsS0FBSzAxRixRQUFRa0Ysb0JBQW1CLEdBQUksS0FBSzM0QixFQUFFbTZCLGNBQWMsT0FBT3A4RixLQUFLMDFGLFFBQVFrRixvQkFBbUIsR0FBSTErRCxHQUFHOEksRUFBRWhsQyxLQUFLMjFGLFFBQVFsTCxPQUFPbVAsU0FBUzU1RixLQUFLKzVGLGVBQWMsR0FBRyxHQUFJLzVGLEtBQUtrNkYsZ0NBQWdDLzNCLEdBQUduaUUsS0FBSzAxRixRQUFRa0Ysb0JBQW1CLEVBQUc1NkYsS0FBSzY2RixZQUFZMTRCLFFBQVFuaUUsS0FBSzAxRixRQUFRa0Ysb0JBQW1CLEdBQUksS0FBSzM0QixFQUFFb3pCLGlCQUFpQixPQUFPdjJGLEdBQUdrQixLQUFLazZGLGdDQUFnQy8zQixHQUFHOUcsSUFBSXI3RCxLQUFLMDFGLFFBQVFRLHNCQUFzQnAzRixHQUFHa0IsS0FBSzAxRixRQUFRa0YsbUJBQW1Cdi9CLEVBQUVyN0QsS0FBSzY2RixZQUFZMTRCLFFBQVFuaUUsS0FBSzAxRixRQUFRa0Ysb0JBQW1CLElBQUssR0FBR3I3RixFQUFFLENBQUNTLEtBQUtrNkYsZ0NBQWdDLzNCLEdBQUc5RyxHQUFFLEVBQUcsSUFBSW5NLEVBQUVsdkQsS0FBSzIxRixRQUFRbEwsT0FBT3pzRixFQUFFa3hELEdBQUc5eEQsRUFBRTh4RCxFQUFFN2pELEtBQUssQ0FBQ2hPLEVBQUVnN0YsS0FBS2g3RixFQUFFODNGLGVBQWUsUUFBUWh6QixFQUFFcDhELE1BQU0vRixLQUFLazZGLGdDQUFnQy8zQixHQUFHOUcsRUFBRXI3RCxLQUFLNjFGLE9BQU9PLFdBQVcvcUYsT0FBT2hPLEVBQUVnNUYsWUFBWXI0RixHQUFFLElBQUtaLEVBQUUra0UsRUFBRXA4RCxLQUFLLENBQUMsS0FBSyxLQUFLLElBQUksT0FBT3JMLEtBQUtzRixLQUFLNjFGLE9BQU9PLFdBQVcvcUYsT0FBT2hPLEVBQUUwN0YsT0FBTy80RixLQUFLNjFGLE9BQU9PLFdBQVcvcUYsT0FBT2hPLEVBQUV5NkYsWUFBWTkzRixLQUFLazZGLGdDQUFnQy8zQixHQUFHOUcsR0FBRSxFQUFHcjlELEdBQUUsR0FBSW1rRSxFQUFFeTNCLFVBQVUsT0FBT3ozQixFQUFFcDhELE1BQU0sT0FBT284RCxFQUFFcDhELE1BQU0vRixLQUFLKzVGLGVBQWMsR0FBRyxHQUFJLE1BQU0vNUYsS0FBSzYxRixPQUFPTyxXQUFXcndGLE1BQU02bUUsRUFBRTVzRSxLQUFLNjFGLE9BQU9seEQsUUFBUTAyQixHQUFFLEdBQUlyN0QsS0FBSzYxRixPQUFPTyxXQUFXL3FGLE9BQU9oTyxFQUFFODNGLFNBQVM5NUIsR0FBRSxFQUFHcjdELEtBQUs2MUYsT0FBT08sV0FBVy9xRixPQUFPaE8sRUFBRTI2RixTQUFTMzhCLElBQUksTUFBTXI3RCxLQUFLNjFGLE9BQU9PLFdBQVdyd0YsT0FBTyxPQUFPbzhELEVBQUVwOEQsTUFBTSxPQUFPbzhELEVBQUVwOEQsT0FBTy9GLEtBQUs2MUYsT0FBT08sV0FBVy9xRixPQUFPaE8sRUFBRXc3RixXQUFXeDlCLEVBQUVqK0QsRUFBRStrRSxFQUFFcDhELEtBQUssQ0FBQyxLQUFLLElBQUksS0FBSyxPQUFPM0ksRUFBRTRDLEtBQUs2MUYsT0FBT08sV0FBV3J3RixLQUFLLENBQUMsS0FBSyxJQUFJLEtBQUssTUFBTTNJLEVBQUUra0UsRUFBRXA4RCxLQUFLLENBQUMsSUFBSSxPQUFPM0ksRUFBRTRDLEtBQUs2MUYsT0FBT08sV0FBV3J3RixLQUFLLENBQUMsS0FBSyxTQUFTL0gsR0FBRSxLQUFNZ0MsS0FBSzYxRixPQUFPbHhELE9BQU84VyxHQUFHejdDLEtBQUs2MUYsT0FBT1ksZUFBZXoyRixLQUFLNjFGLE9BQU9seEQsT0FBTzFSLEdBQUcsTUFBTWp6QixLQUFLNjFGLE9BQU9PLFdBQVdyd0YsTUFBTSxNQUFNL0YsS0FBSzYxRixPQUFPTyxXQUFXcndGLE1BQU0vRixLQUFLKzVGLGlCQUFpQi81RixLQUFLMDFGLFFBQVFrRixtQkFBbUI1NkYsS0FBSzAxRixRQUFRa0Ysb0JBQW9Cdi9CLEVBQUVyN0QsS0FBSzY2RixZQUFZMTRCLEdBQUduaUUsS0FBSzAxRixRQUFRa0YsbUJBQW1CNThGLE9BQU9nQyxLQUFLNjZGLFlBQVkxNEIsUUFBUW5pRSxLQUFLNjZGLFlBQVkxNEIsSUFBSXpoRCxFQUFFdm1CLFVBQVUrK0YscUJBQXFCLFNBQVMvMkIsRUFBRTVpRSxHQUFHLE9BQU9TLEtBQUswMUYsUUFBUWh2RixLQUFLMUcsS0FBSzAxRixRQUFRb0YsY0FBYzM0QixRQUFRQSxFQUFFaDJELFlBQVksUUFBUWcyRCxFQUFFaDJELFdBQVdnRyxXQUFXblMsS0FBSzAxRixRQUFRaHZGLElBQUkxRyxLQUFLd2dELFNBQVM4MkMsbUJBQW1CbjFCLEVBQUVoMkQsWUFBWW5NLEtBQUsrNUYsZUFBYyxFQUFHeDZGLEdBQUdTLEtBQUs2NkYsWUFBWTE0QixHQUFHLFVBQVVBLEVBQUVoMkQsV0FBV2dHLFdBQVduUyxLQUFLMDFGLFFBQVFodkYsS0FBSSxRQUFTMUcsS0FBSys1RixlQUFjLEdBQUcsSUFBSy83RixFQUFFcStGLFFBQVExNUYsS0FBS3cvRCxFQUFFcDhELE9BQU9vOEQsRUFBRXkzQixjQUFjNTVGLEtBQUtzOEYscUJBQXFCbjZCLEVBQUU1aUUsSUFBSVMsS0FBSzAxRixRQUFRa0Ysb0JBQW1CLEVBQUc1NkYsS0FBSzY2RixZQUFZMTRCLFFBQVFuaUUsS0FBSzAxRixRQUFRa0Ysb0JBQW1CLEtBQU1sNkUsRUFBRXZtQixVQUFVbWlHLHFCQUFxQixTQUFTbjZCLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXNCLEVBQUUsU0FBU21tRSxHQUFHLElBQUksSUFBSTVpRSxFQUFFLEdBQUc3RSxHQUFHeW5FLEVBQUVBLEVBQUVobEUsUUFBUWEsRUFBRXUrRixjQUFjLE9BQU85L0YsUUFBUSxPQUFPLElBQUkvQixHQUFHNkUsRUFBRXlGLEtBQUttOUQsRUFBRTd6QixVQUFVLEVBQUU1ekMsSUFBSUEsR0FBR3luRSxFQUFFQSxFQUFFN3pCLFVBQVU1ekMsRUFBRSxJQUFJK0IsUUFBUSxNQUFNLE9BQU8wbEUsRUFBRWxtRSxRQUFRc0QsRUFBRXlGLEtBQUttOUQsR0FBRzVpRSxFQUE5SyxDQUFpTDRpRSxFQUFFcDhELE1BQU1zMUQsR0FBRSxFQUFHMTNCLEdBQUUsRUFBR3pILEVBQUVpbUMsRUFBRXc0QixrQkFBa0JuekIsRUFBRXRyQyxFQUFFamdDLE9BQU8sR0FBRytELEtBQUsrNUYsZUFBYyxFQUFHeDZGLEdBQUdTLEtBQUt3NkYsNkJBQTZCcjRCLEdBQUduaUUsS0FBSzAxRixRQUFReUYsVUFBVW4vRixFQUFFLElBQUlnRSxLQUFLKzVGLGVBQWMsRUFBR3g2RixHQUFHdkQsRUFBRUMsT0FBTyxFQUFFLENBQUMsSUFBSW8vRCxFQUFFLFNBQVM4RyxFQUFFNWlFLEdBQUcsSUFBSSxJQUFJN0UsRUFBRSxFQUFFQSxFQUFFeW5FLEVBQUVsbUUsT0FBT3ZCLElBQUksR0FBNkQsTUFBMUR5bkUsRUFBRXpuRSxHQUFHKzNCLE9BQU9qMUIsT0FBTyxHQUFPLE9BQU0sRUFBRyxPQUFNLEVBQXJGLENBQXlGeEIsRUFBRUEsRUFBRXlCLE1BQU0sSUFBUWttQyxFQUFFLFNBQVN3K0IsRUFBRTVpRSxHQUFHLElBQUksSUFBSTdFLEVBQUVzQixFQUFFLEVBQUVxL0QsRUFBRThHLEVBQUVsbUUsT0FBT0QsRUFBRXEvRCxFQUFFci9ELElBQUksSUFBSXRCLEVBQUV5bkUsRUFBRW5tRSxLQUFLLElBQUl0QixFQUFFK0IsUUFBUThDLEdBQUcsT0FBTSxFQUFHLE9BQU0sRUFBNUYsQ0FBZ0d2RCxFQUFFa2dDLEdBQUdtL0IsSUFBSXI3RCxLQUFLNjFGLE9BQU9xQixVQUFVLEdBQUd4OEYsRUFBRSxFQUFFQSxFQUFFc0IsRUFBRUMsT0FBT3ZCLElBQUkyZ0UsR0FBR3I3RCxLQUFLdzZGLDZCQUE2QnI0QixHQUFHbmlFLEtBQUswMUYsUUFBUXlGLFVBQVVuL0YsRUFBRXRCLEdBQUd5QyxRQUFRLFFBQVEsTUFBTXdtQyxHQUFHM25DLEVBQUV0QixJQUFJc0YsS0FBS3c2Riw2QkFBNkJyNEIsR0FBR25pRSxLQUFLMDFGLFFBQVF5RixVQUFVbi9GLEVBQUV0QixHQUFHNHpDLFVBQVVrNUIsTUFBTXhuRSxLQUFLMDFGLFFBQVErRSxhQUFhQyxZQUFZLEdBQUcxNkYsS0FBSzAxRixRQUFReUYsVUFBVW4vRixFQUFFdEIsS0FBS3NGLEtBQUsrNUYsZUFBYyxFQUFHeDZGLEdBQUdTLEtBQUs2MUYsT0FBT3FCLFVBQVUsSUFBSXgyRSxFQUFFdm1CLFVBQVVpL0YsZUFBZSxTQUFTajNCLEVBQUU1aUUsR0FBRzRpRSxFQUFFeTNCLFNBQVM1NUYsS0FBSys1RixlQUFjLEVBQUd4NkYsR0FBR1MsS0FBSzAxRixRQUFRampFLE1BQUssR0FBSXp5QixLQUFLMDFGLFFBQVFrRixvQkFBbUIsRUFBRzU2RixLQUFLNjZGLFlBQVkxNEIsR0FBR25pRSxLQUFLKzVGLGVBQWMsRUFBR3g2RixJQUFJbWhCLEVBQUV2bUIsVUFBVW0vRixXQUFXLFNBQVNuM0IsR0FBR25pRSxLQUFLeTdGLG1CQUFtQnQ1QixJQUFJbmlFLEtBQUsyNUYsK0JBQStCeDNCLEdBQUUsR0FBSTl5RCxFQUFFclAsS0FBSzYxRixPQUFPTyxXQUFXLzhFLEdBQUdyWixLQUFLMDFGLFFBQVFrRixvQkFBbUIsRUFBRzU2RixLQUFLazZGLGdDQUFnQy8zQixFQUFFLE1BQU1uaUUsS0FBSzYxRixPQUFPTyxXQUFXcndGLE1BQU0vRixLQUFLd2dELFNBQVNnOEMsdUJBQXVCeDhGLEtBQUt3Z0QsU0FBU2k4QywwQkFBMEJ6OEYsS0FBSzAxRixRQUFRUSxzQkFBc0JsMkYsS0FBS3U3RixXQUFXdjdGLEtBQUs2NkYsWUFBWTE0QixJQUFJemhELEVBQUV2bUIsVUFBVXUvRixlQUFlLFNBQVN2M0IsRUFBRTVpRSxHQUFHUyxLQUFLNjZGLFlBQVkxNEIsR0FBRyxPQUFPQSxFQUFFcDhELEtBQUtvOEQsRUFBRXA4RCxLQUFLOUosT0FBTyxJQUFJK0QsS0FBSys1RixlQUFjLEVBQUd4NkYsSUFBSW1oQixFQUFFdm1CLFVBQVVxL0YsV0FBVyxTQUFTcjNCLEdBQUcsS0FBS25pRSxLQUFLNjFGLE9BQU9seEQsT0FBTzFSLEdBQUdqekIsS0FBS3M2RixlQUFldDZGLEtBQUsyNUYsK0JBQStCeDNCLElBQUlBLEVBQUV4bUIsUUFBUSs0QyxXQUFXaDBFLEdBQUcsU0FBU3loRCxFQUFFNWlFLEVBQUU3RSxHQUFHLGFBQWEsU0FBU3NCLEVBQUVtbUUsR0FBR25pRSxLQUFLMDhGLFNBQVN2NkIsRUFBRW5pRSxLQUFLMjhGLGtCQUFrQixFQUFFMzhGLEtBQUs0OEYsZ0JBQWdCLEVBQUU1OEYsS0FBSzY4RixrQkFBa0IsRUFBRTc4RixLQUFLODhGLG1CQUFtQixFQUFFOThGLEtBQUsrOEYsNkJBQTZCLEVBQUUvOEYsS0FBS2c5RiwyQkFBMkIsRUFBRWg5RixLQUFLaTlGLDZCQUE2QixFQUFFajlGLEtBQUtrOUYsUUFBUSxHQUFHLFNBQVM3aEMsRUFBRThHLEVBQUU1aUUsR0FBR1MsS0FBS205RixRQUFRLENBQUMsSUFBSW45RixLQUFLbzlGLGNBQWNqN0IsRUFBRWs3QixZQUFZcjlGLEtBQUtzOUYsZ0JBQWdCbjdCLEVBQUVvN0IsWUFBWXA3QixFQUFFcTdCLG1CQUFtQng5RixLQUFLczlGLGdCQUFnQixJQUFJbmlHLE1BQU1nbkUsRUFBRWs3QixZQUFZLEdBQUdudEUsS0FBS2l5QyxFQUFFbzdCLGNBQWNoK0YsRUFBRUEsR0FBRyxHQUFHNGlFLEVBQUVzN0IsYUFBYSxJQUFJbCtGLEVBQUUsSUFBSXBFLE1BQU1nbkUsRUFBRXM3QixhQUFhLEdBQUd2dEUsS0FBS2x3QixLQUFLczlGLGtCQUFrQnQ5RixLQUFLMDlGLGNBQWNuK0YsRUFBRVMsS0FBSzI5RixxQkFBcUJwK0YsRUFBRXRELE9BQU8sU0FBUytCLEVBQUVta0UsRUFBRTVpRSxHQUFHUyxLQUFLNDlGLGVBQWUsSUFBSXZpQyxFQUFFOEcsRUFBRTVpRSxHQUFHUyxLQUFLMEcsS0FBSSxFQUFHMUcsS0FBSzY5RixrQkFBa0IxN0IsRUFBRTI3QixpQkFBaUI5OUYsS0FBS3E5RixZQUFZbDdCLEVBQUVrN0IsWUFBWXI5RixLQUFLbzZGLGlCQUFpQmo0QixFQUFFaTRCLGlCQUFpQnA2RixLQUFLKzlGLG1CQUFtQjU3QixFQUFFNDdCLG1CQUFtQi85RixLQUFLZytGLFFBQVEsR0FBR2grRixLQUFLaTdGLGNBQWMsS0FBS2o3RixLQUFLeTZGLGFBQWEsS0FBS3o2RixLQUFLaStGLFVBQVUsSUFBSWppRyxFQUFFZ0UsTUFBTUEsS0FBSzQ2RixvQkFBbUIsRUFBRzU2RixLQUFLbzdGLG9CQUFtQixFQUFHcDdGLEtBQUtxN0Ysd0JBQXVCLEVBQUdyN0YsS0FBS2srRixtQkFBbUJsaUcsRUFBRTdCLFVBQVVna0csWUFBWSxXQUFXLElBQUloOEIsRUFBRSxJQUFJbm1FLEVBQUVnRSxLQUFLMDhGLFVBQVUsT0FBT3Y2QixFQUFFdTRCLFdBQVcxNkYsS0FBSzQ4RixlQUFlNThGLEtBQUs2OEYsbUJBQW1CMTZCLEdBQUdubUUsRUFBRTdCLFVBQVVvQyxLQUFLLFNBQVM0bEUsR0FBRyxPQUFPQSxFQUFFLEVBQUVuaUUsS0FBS2s5RixRQUFRbDlGLEtBQUtrOUYsUUFBUWpoRyxPQUFPa21FLEdBQUduaUUsS0FBS2s5RixRQUFRLzZCLElBQUlubUUsRUFBRTdCLFVBQVVpa0csVUFBVSxTQUFTajhCLEdBQUcsSUFBSSxJQUFJNWlFLEVBQUVTLEtBQUtrOUYsUUFBUWpoRyxPQUFPLEVBQUVzRCxHQUFHLEVBQUVBLElBQUksR0FBR1MsS0FBS2s5RixRQUFRMzlGLEdBQUd5RCxNQUFNbS9ELEdBQUcsT0FBTSxFQUFHLE9BQU0sR0FBSW5tRSxFQUFFN0IsVUFBVXVnRyxXQUFXLFNBQVN2NEIsRUFBRTVpRSxHQUFHUyxLQUFLazdGLGFBQWFsN0YsS0FBSzQ4RixlQUFlejZCLEdBQUcsRUFBRW5pRSxLQUFLNjhGLGtCQUFrQnQ5RixHQUFHLEVBQUVTLEtBQUsyOEYsa0JBQWtCMzhGLEtBQUswOEYsU0FBUzJCLGdCQUFnQnIrRixLQUFLNDhGLGVBQWU1OEYsS0FBSzY4RixxQkFBcUI3Z0csRUFBRTdCLFVBQVVta0csZ0JBQWdCLFdBQVd0K0YsS0FBSzA4RixTQUFTdEMsbUJBQW1CcDZGLEtBQUs4OEYsbUJBQW1COThGLEtBQUtrOUYsUUFBUWpoRyxPQUFPK0QsS0FBSys4Riw2QkFBNkIvOEYsS0FBSzI4RixrQkFBa0IzOEYsS0FBS2c5RiwwQkFBMEJoOUYsS0FBSzA4RixTQUFTdUIsVUFBVXJCLGVBQWU1OEYsS0FBS2k5Riw2QkFBNkJqOUYsS0FBSzA4RixTQUFTdUIsVUFBVXBCLG9CQUFvQjdnRyxFQUFFN0IsVUFBVW9rRyxhQUFhLFdBQVcsT0FBT3YrRixLQUFLODhGLG9CQUFvQjk4RixLQUFLMjhGLGtCQUFrQjM4RixLQUFLMDhGLFNBQVN0QyxrQkFBa0JwNkYsS0FBSys4Riw2QkFBNkIvOEYsS0FBSzA4RixTQUFTdUIsVUFBVXRCLG1CQUFtQjNnRyxFQUFFN0IsVUFBVXFrRyxZQUFZLFdBQVcsR0FBR3grRixLQUFLdStGLGVBQWUsQ0FBQ3YrRixLQUFLMDhGLFNBQVNuQyxlQUFlLElBQUlwNEIsRUFBRW5pRSxLQUFLMDhGLFNBQVNqQyxhQUFhLE9BQU90NEIsRUFBRXU0QixXQUFXMTZGLEtBQUtnOUYsMEJBQTBCaDlGLEtBQUtpOUYsOEJBQThCOTZCLEVBQUUrNkIsUUFBUWw5RixLQUFLazlGLFFBQVF6L0YsTUFBTXVDLEtBQUs4OEYsb0JBQW9COThGLEtBQUtrOUYsUUFBUWw5RixLQUFLazlGLFFBQVF6L0YsTUFBTSxFQUFFdUMsS0FBSzg4RixvQkFBb0IzNkIsRUFBRXc2QixtQkFBbUIzOEYsS0FBSzI4RixrQkFBa0IzOEYsS0FBSys4Riw2QkFBNkIvOEYsS0FBSzI4RixrQkFBa0IzOEYsS0FBSys4Riw2QkFBNkIsTUFBTTU2QixFQUFFKzZCLFFBQVEsS0FBSy82QixFQUFFKzZCLFFBQVF4Z0csT0FBTyxFQUFFLEdBQUd5bEUsRUFBRXc2QixtQkFBbUIsSUFBRyxFQUFHLE9BQU0sR0FBSTNnRyxFQUFFN0IsVUFBVStnRyxTQUFTLFdBQVcsT0FBTyxJQUFJbDdGLEtBQUtrOUYsUUFBUWpoRyxRQUFRRCxFQUFFN0IsVUFBVXFZLEtBQUssV0FBVyxPQUFPeFMsS0FBS2s3RixXQUFXLEtBQUtsN0YsS0FBS2s5RixRQUFRbDlGLEtBQUtrOUYsUUFBUWpoRyxPQUFPLElBQUlELEVBQUU3QixVQUFVNkssS0FBSyxTQUFTbTlELEdBQUduaUUsS0FBS2s5RixRQUFRbDRGLEtBQUttOUQsR0FBRyxJQUFJNWlFLEVBQUU0aUUsRUFBRWh0QyxZQUFZLE9BQU8sSUFBSTUxQixFQUFFUyxLQUFLMjhGLGtCQUFrQng2QixFQUFFbG1FLE9BQU9zRCxFQUFFUyxLQUFLMjhGLG1CQUFtQng2QixFQUFFbG1FLFFBQVFELEVBQUU3QixVQUFVdUwsSUFBSSxXQUFXLElBQUl5OEQsRUFBRSxLQUFLLE9BQU9uaUUsS0FBS2s3RixhQUFhLzRCLEVBQUVuaUUsS0FBS2s5RixRQUFReDNGLE1BQU0xRixLQUFLMjhGLG1CQUFtQng2QixFQUFFbG1FLFFBQVFrbUUsR0FBR25tRSxFQUFFN0IsVUFBVXNrRyxlQUFlLFdBQVd6K0YsS0FBSzQ4RixlQUFlLElBQUk1OEYsS0FBSzQ4RixnQkFBZ0IsRUFBRTU4RixLQUFLMjhGLG1CQUFtQjM4RixLQUFLMDhGLFNBQVNXLGNBQWNyaEcsRUFBRTdCLFVBQVV1a0csb0JBQW9CLFdBQVcxK0YsS0FBS2c5RiwwQkFBMEIsSUFBSWg5RixLQUFLZzlGLDJCQUEyQixJQUFJaGhHLEVBQUU3QixVQUFVczRCLEtBQUssV0FBVyxLQUFLLE1BQU16eUIsS0FBS3dTLFFBQVF4UyxLQUFLazlGLFFBQVF4M0YsTUFBTTFGLEtBQUsyOEYsbUJBQW1CLEdBQUczZ0csRUFBRTdCLFVBQVVDLFNBQVMsV0FBVyxJQUFJK25FLEVBQUUsR0FBRyxPQUFPbmlFLEtBQUtrN0YsV0FBV2w3RixLQUFLMDhGLFNBQVNxQixxQkFBcUI1N0IsRUFBRW5pRSxLQUFLMDhGLFNBQVNpQyxrQkFBa0IzK0YsS0FBSzQ4RixrQkFBa0J6NkIsRUFBRW5pRSxLQUFLMDhGLFNBQVNpQyxrQkFBa0IzK0YsS0FBSzQ4RixlQUFlNThGLEtBQUs2OEYsbUJBQW1CMTZCLEdBQUduaUUsS0FBS2s5RixRQUFRaHRFLEtBQUssS0FBS2l5QyxHQUFHOUcsRUFBRWxoRSxVQUFVa2tHLGdCQUFnQixTQUFTbDhCLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXNGLEtBQUsyOUYscUJBQXFCLE9BQU9wK0YsRUFBRUEsR0FBRyxFQUFFNGlFLEVBQUUsSUFBSXpuRSxFQUFFLElBQUdBLEdBQUd5bkUsRUFBRW5pRSxLQUFLbzlGLGVBQWlCNzlGLEdBQUc4N0QsRUFBRWxoRSxVQUFVd2tHLGtCQUFrQixTQUFTeDhCLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXNGLEtBQUswOUYsY0FBYyxPQUFPbitGLEVBQUVBLEdBQUcsRUFBRTRpRSxFQUFFLElBQUlBLEVBQUUsRUFBRXpuRSxFQUFFLElBQUk2RSxHQUFHNGlFLEVBQUVuaUUsS0FBS285RixjQUFjcDlGLEtBQUs0K0YsZUFBZXIvRixHQUFHN0UsRUFBR3NGLEtBQUttOUYsUUFBUTU5RixJQUFJODdELEVBQUVsaEUsVUFBVXlrRyxlQUFlLFNBQVN6OEIsR0FBRyxLQUFLQSxHQUFHbmlFLEtBQUttOUYsUUFBUWxoRyxRQUFRK0QsS0FBSzYrRixnQkFBZ0J4akMsRUFBRWxoRSxVQUFVMGtHLGFBQWEsV0FBVyxJQUFJMThCLEVBQUVuaUUsS0FBS205RixRQUFRbGhHLE9BQU9zRCxFQUFFLEVBQUU3RSxFQUFFLEdBQUdzRixLQUFLbzlGLGVBQWVqN0IsR0FBR25pRSxLQUFLbzlGLGdCQUFnQmo3QixJQUFJNWlFLEVBQUUxRSxLQUFLQyxNQUFNcW5FLEVBQUVuaUUsS0FBS285RixnQkFBZ0JwOUYsS0FBS285RixjQUFjMWlHLEVBQUUsSUFBSVMsTUFBTW9FLEVBQUUsR0FBRzJ3QixLQUFLbHdCLEtBQUtzOUYsa0JBQWtCbjdCLElBQUl6bkUsR0FBRyxJQUFJUyxNQUFNZ25FLEVBQUUsR0FBR2p5QyxLQUFLLE1BQU1sd0IsS0FBS205RixRQUFRbjRGLEtBQUt0SyxJQUFJc0QsRUFBRTdELFVBQVUrakcsaUJBQWlCLFdBQVdsK0YsS0FBS2k3RixjQUFjajdGLEtBQUt5NkYsYUFBYXo2RixLQUFLeTZGLGFBQWF6NkYsS0FBS2krRixVQUFVRSxjQUFjbitGLEtBQUtnK0YsUUFBUWg1RixLQUFLaEYsS0FBS3k2RixlQUFlejhGLEVBQUU3RCxVQUFVZzlGLGdCQUFnQixXQUFXLE9BQU9uM0YsS0FBS2crRixRQUFRL2hHLFFBQVErQixFQUFFN0QsVUFBVXdrRyxrQkFBa0IsU0FBU3g4QixFQUFFNWlFLEdBQUcsT0FBT1MsS0FBSzQ5RixlQUFlZSxrQkFBa0J4OEIsRUFBRTVpRSxJQUFJdkIsRUFBRTdELFVBQVVra0csZ0JBQWdCLFNBQVNsOEIsRUFBRTVpRSxHQUFHLE9BQU9TLEtBQUs0OUYsZUFBZVMsZ0JBQWdCbDhCLEVBQUU1aUUsSUFBSXZCLEVBQUU3RCxVQUFVK2dHLFNBQVMsV0FBVyxPQUFPbDdGLEtBQUtpN0YsZUFBZWo3RixLQUFLeTZGLGFBQWFTLFlBQVlsOUYsRUFBRTdELFVBQVVvZ0csYUFBYSxTQUFTcDRCLEdBQUcsUUFBUW5pRSxLQUFLazdGLGFBQWEvNEIsR0FBR25pRSxLQUFLazJGLHVCQUF1QmwyRixLQUFLMEcsS0FBSzFHLEtBQUtrK0YsbUJBQW1CLEtBQUtsZ0csRUFBRTdELFVBQVUwOUYsU0FBUyxTQUFTMTFCLEdBQUduaUUsS0FBS3l5QixNQUFLLEdBQUksSUFBSWx6QixFQUFFUyxLQUFLeTZGLGFBQWEvMEYsTUFBTW5HLElBQUksT0FBT0EsRUFBRUEsRUFBRXRELE9BQU8sS0FBS3NELEVBQUVBLEVBQUVwQyxRQUFRLFFBQVEsS0FBSzZDLEtBQUt5NkYsYUFBYXoxRixLQUFLekYsSUFBSVMsS0FBSzY5RixtQkFBbUI3OUYsS0FBS2srRixtQkFBbUIsSUFBSXhqRyxFQUFFc0YsS0FBS2crRixRQUFROXRFLEtBQUssTUFBTSxNQUFNLE9BQU9peUMsSUFBSXpuRSxFQUFFQSxFQUFFeUMsUUFBUSxRQUFRZ2xFLElBQUl6bkUsR0FBR3NELEVBQUU3RCxVQUFVa2dHLGVBQWUsV0FBV3I2RixLQUFLeTZGLGFBQWE2RCxtQkFBbUJ0Z0csRUFBRTdELFVBQVV1Z0csV0FBVyxTQUFTdjRCLEVBQUU1aUUsR0FBRyxPQUFPNGlFLEVBQUVBLEdBQUcsRUFBRTVpRSxFQUFFQSxHQUFHLEVBQUVTLEtBQUtpK0YsVUFBVXZELFdBQVd2NEIsRUFBRTVpRSxHQUFHUyxLQUFLZytGLFFBQVEvaEcsT0FBTyxHQUFHK0QsS0FBS3k2RixhQUFhQyxXQUFXdjRCLEVBQUU1aUUsSUFBRyxJQUFLUyxLQUFLeTZGLGFBQWFDLGNBQWEsSUFBSzE4RixFQUFFN0QsVUFBVTJnRyxjQUFjLFNBQVMzNEIsR0FBRyxJQUFJLElBQUk1aUUsRUFBRSxFQUFFQSxFQUFFNGlFLEVBQUV5M0IsU0FBU3I2RixJQUFJUyxLQUFLaytGLG1CQUFtQmwrRixLQUFLeTZGLGFBQWFDLFlBQVksR0FBRzE2RixLQUFLeTZGLGFBQWF6MUYsS0FBS205RCxFQUFFdzRCLG1CQUFtQjM2RixLQUFLeTZGLGFBQWF6MUYsS0FBS205RCxFQUFFcDhELE1BQU0vRixLQUFLNDZGLG9CQUFtQixFQUFHNTZGLEtBQUtvN0Ysb0JBQW1CLEVBQUdwN0YsS0FBS3E3Rix3QkFBdUIsR0FBSXI5RixFQUFFN0QsVUFBVWdoRyxVQUFVLFNBQVNoNUIsR0FBR25pRSxLQUFLOCtGLDJCQUEyQjkrRixLQUFLeTZGLGFBQWF6MUYsS0FBS205RCxHQUFHbmlFLEtBQUs0NkYsb0JBQW1CLEVBQUc1NkYsS0FBS283RixvQkFBbUIsRUFBR3A3RixLQUFLcTdGLHVCQUF1QnI3RixLQUFLeTZGLGFBQWErRCxlQUFleGdHLEVBQUU3RCxVQUFVMmtHLHlCQUF5QixXQUFXOStGLEtBQUs0NkYscUJBQXFCNTZGLEtBQUtrMkYsdUJBQXVCbDJGLEtBQUtvN0Ysb0JBQW9CcDdGLEtBQUtxNkYsaUJBQWlCcjZGLEtBQUt5NkYsYUFBYXoxRixLQUFLLE9BQU9oSCxFQUFFN0QsVUFBVW83RixjQUFjLFNBQVNwekIsR0FBRyxJQUFJLElBQUk1aUUsRUFBRVMsS0FBS2crRixRQUFRL2hHLE9BQU9rbUUsRUFBRTVpRSxHQUFHUyxLQUFLZytGLFFBQVE3N0IsR0FBR3M4QixpQkFBaUJ0OEIsSUFBSW5pRSxLQUFLeTZGLGFBQWFpRSx1QkFBdUIxZ0csRUFBRTdELFVBQVVzNEIsS0FBSyxTQUFTMHZDLEdBQUcsSUFBSUEsT0FBRSxJQUFTQSxHQUFHQSxFQUFFbmlFLEtBQUt5NkYsYUFBYWhvRSxPQUFPMHZDLEdBQUduaUUsS0FBS2crRixRQUFRL2hHLE9BQU8sR0FBRytELEtBQUt5NkYsYUFBYVMsWUFBWWw3RixLQUFLZytGLFFBQVF0NEYsTUFBTTFGLEtBQUt5NkYsYUFBYXo2RixLQUFLZytGLFFBQVFoK0YsS0FBS2crRixRQUFRL2hHLE9BQU8sR0FBRytELEtBQUt5NkYsYUFBYWhvRSxPQUFPenlCLEtBQUtpN0YsY0FBY2o3RixLQUFLZytGLFFBQVEvaEcsT0FBTyxFQUFFK0QsS0FBS2crRixRQUFRaCtGLEtBQUtnK0YsUUFBUS9oRyxPQUFPLEdBQUcsTUFBTStCLEVBQUU3RCxVQUFVKzdGLG1CQUFtQixXQUFXLE9BQU9sMkYsS0FBS3k2RixhQUFhUyxZQUFZbDlGLEVBQUU3RCxVQUFVZ2lHLHFCQUFxQixXQUFXLE9BQU9uOEYsS0FBS2s3RixZQUFZbDdGLEtBQUt5NkYsYUFBYVMsWUFBWWw3RixLQUFLaTdGLGNBQWNDLFlBQVlsOUYsRUFBRTdELFVBQVU0a0csd0JBQXdCLFNBQVM1OEIsRUFBRTVpRSxHQUFHLElBQUksSUFBSTdFLEVBQUVzRixLQUFLZytGLFFBQVEvaEcsT0FBTyxFQUFFdkIsR0FBRyxHQUFHLENBQUMsSUFBSTJnRSxFQUFFcjdELEtBQUtnK0YsUUFBUXRqRyxHQUFHLEdBQUcyZ0UsRUFBRTYvQixXQUFXLE1BQU0sR0FBRyxJQUFJNy9CLEVBQUU5K0QsS0FBSyxHQUFHRSxRQUFRMGxFLElBQUk5RyxFQUFFOStELE1BQU0sS0FBS2dELEVBQUUsQ0FBQ1MsS0FBS2crRixRQUFRdGhHLE9BQU9oQyxFQUFFLEVBQUUsRUFBRSxJQUFJc0IsRUFBRWdFLE9BQU9BLEtBQUtpN0YsY0FBY2o3RixLQUFLZytGLFFBQVFoK0YsS0FBS2crRixRQUFRL2hHLE9BQU8sR0FBRyxNQUFNdkIsTUFBTXluRSxFQUFFeG1CLFFBQVFtNUMsT0FBTzkyRixHQUFHLFNBQVNta0UsRUFBRTVpRSxFQUFFN0UsR0FBRyxhQUFheW5FLEVBQUV4bUIsUUFBUXlxQixNQUFNLFNBQVNqRSxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsR0FBR2dFLEtBQUtxTCxLQUFLODJELEVBQUVuaUUsS0FBSytGLEtBQUt4RyxFQUFFUyxLQUFLODVGLGdCQUFnQixLQUFLOTVGLEtBQUs0NUYsU0FBU2wvRixHQUFHLEVBQUVzRixLQUFLMjZGLGtCQUFrQjMrRixHQUFHLEdBQUdnRSxLQUFLeUcsT0FBTyxLQUFLekcsS0FBS3VVLEtBQUssS0FBS3ZVLEtBQUtnN0YsU0FBUyxLQUFLaDdGLEtBQUtnOEYsT0FBTyxLQUFLaDhGLEtBQUtnL0YsT0FBTyxLQUFLaC9GLEtBQUttTSxXQUFXLE9BQU8sU0FBU2cyRCxFQUFFNWlFLEVBQUU3RSxHQUFHLGFBQWEsSUFBSXNCLEVBQUUsMnZKQUE2dE9nQyxFQUFFLHFFQUFxRWhDLEVBQUUsS0FBS3VELEVBQUUwL0YsV0FBVyxJQUFJbjlGLE9BQU85RCxFQUFFLDh4T0FBOHhPLEtBQUt1QixFQUFFMi9GLGdCQUFnQixJQUFJcDlGLE9BQU85RCxHQUFHdUIsRUFBRTQvRixnQkFBZ0IsSUFBSXI5RixPQUFPLHNFQUFzRTlGLEVBQXRFLG8rRUFBaUZ1RCxFQUFFODhGLFFBQVEscUJBQXFCOThGLEVBQUVvNEYsVUFBVSxJQUFJNzFGLE9BQU8sUUFBUXZDLEVBQUU4OEYsUUFBUXZwRixRQUFRdlQsRUFBRWc5RixjQUFjLElBQUl6NkYsT0FBT3ZDLEVBQUVvNEYsVUFBVTdrRixPQUFPLE1BQU0sU0FBU3F2RCxFQUFFNWlFLEVBQUU3RSxHQUFHLGFBQWEsSUFBSXNCLEVBQUV0QixFQUFFLEdBQUdpNkYsUUFBUXQ1QixFQUFFLENBQUMsaUJBQWlCLGdCQUFnQixvQkFBb0IsU0FBU3I5RCxFQUFFbWtFLEdBQUdubUUsRUFBRTFCLEtBQUswRixLQUFLbWlFLEVBQUUsTUFBTSxJQUFJNWlFLEVBQUVTLEtBQUtvL0YsWUFBWW5ELGFBQWEsS0FBSyxrQkFBa0IxOEYsRUFBRVMsS0FBS28vRixZQUFZbkQsWUFBWSxTQUFTLDZCQUE2QjE4RixFQUFFUyxLQUFLby9GLFlBQVluRCxZQUFZLGdDQUEyQixJQUFTajhGLEtBQUtvL0YsWUFBWUMscUJBQXFCci9GLEtBQUtvL0YsWUFBWW5ELFlBQVlqOEYsS0FBS28vRixZQUFZQyxtQkFBbUIsU0FBUyxZQUFZLElBQUkza0csRUFBRXNGLEtBQUtzL0Ysb0JBQW9CLGNBQWMsQ0FBQyxXQUFXLFNBQVMsYUFBYSxPQUFPLG9CQUFvQnQvRixLQUFLKzdGLHVCQUFzQixFQUFHLzdGLEtBQUtpOEYsWUFBWSxXQUFXLElBQUksSUFBSWorRixFQUFFLEVBQUVBLEVBQUV0RCxFQUFFdUIsT0FBTytCLElBQUksb0JBQW9CdEQsRUFBRXNELEdBQUdnQyxLQUFLKzdGLHVCQUFzQixFQUFHLzdGLEtBQUtpOEYsWUFBWXZoRyxFQUFFc0QsR0FBR2dDLEtBQUt5OEYseUJBQXlCejhGLEtBQUt1L0YsYUFBYSw0QkFBNEJ2L0YsS0FBS3c4RixzQkFBc0J4OEYsS0FBS3UvRixhQUFhLHlCQUF5QnYvRixLQUFLMDdGLGVBQWUxN0YsS0FBS3UvRixhQUFhLGtCQUFrQnYvRixLQUFLODdGLHFCQUFxQjk3RixLQUFLdS9GLGFBQWEsd0JBQXdCdi9GLEtBQUtrOEYsYUFBYWw4RixLQUFLdS9GLGFBQWEsZ0JBQWdCdi9GLEtBQUs2N0YsMEJBQTBCNzdGLEtBQUt1L0YsYUFBYSw2QkFBNkJ2L0YsS0FBSzQ3RiwyQkFBMkI1N0YsS0FBS3UvRixhQUFhLDhCQUE4QnYvRixLQUFLNjVGLHVCQUF1Qjc1RixLQUFLdS9GLGFBQWEsMEJBQTBCdi9GLEtBQUsyN0YseUJBQXlCMzdGLEtBQUt1L0YsYUFBYSw0QkFBMkIsR0FBSXYvRixLQUFLdy9GLGlCQUFpQngvRixLQUFLdS9GLGFBQWEsb0JBQW9Cdi9GLEtBQUt5L0YsSUFBSXovRixLQUFLdS9GLGFBQWEsT0FBT3YvRixLQUFLKzZGLFlBQVkvNkYsS0FBS3UvRixhQUFhLGVBQWV2L0YsS0FBS202RixrQkFBa0JuNkYsS0FBSzAvRixlQUFlLG9CQUFvQnJrQyxHQUFHcjdELEtBQUtzM0YsZ0JBQWdCdDNGLEtBQUt1L0YsYUFBYSxtQkFBbUJ2L0YsS0FBS2s4RixlQUFlbDhGLEtBQUs2N0YsMkJBQTBCLEdBQUk3OUYsRUFBRTdELFVBQVUsSUFBSTZCLEVBQUVtbUUsRUFBRXhtQixRQUFRZzVDLFFBQVEzMkYsR0FBRyxTQUFTbWtFLEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYSxTQUFTc0IsRUFBRW1tRSxFQUFFNWlFLEdBQUdTLEtBQUtvL0YsWUFBWS9qQyxFQUFFOEcsRUFBRTVpRSxHQUFHUyxLQUFLeTNGLFNBQVN6M0YsS0FBS3UvRixhQUFhLFlBQVl2L0YsS0FBSzAzRixJQUFJMTNGLEtBQUsyL0YsZ0JBQWdCLE1BQU0sUUFBUTMvRixLQUFLODlGLGlCQUFpQjk5RixLQUFLdS9GLGFBQWEsb0JBQW9Cdi9GLEtBQUtxOUYsWUFBWXI5RixLQUFLNC9GLFlBQVksY0FBYyxHQUFHNS9GLEtBQUt1OUYsWUFBWXY5RixLQUFLMi9GLGdCQUFnQixjQUFjLEtBQUszL0YsS0FBS3k5RixhQUFhejlGLEtBQUs0L0YsWUFBWSxnQkFBZ0I1L0YsS0FBS2k2RixrQkFBa0JqNkYsS0FBS3UvRixhQUFhLHFCQUFvQixHQUFJdi9GLEtBQUtnNkYsc0JBQXNCaDZGLEtBQUs0L0YsWUFBWSx3QkFBd0IsT0FBTzUvRixLQUFLaTZGLG9CQUFvQmo2RixLQUFLZzZGLHNCQUFzQixHQUFHaDZGLEtBQUt3OUYsaUJBQWlCeDlGLEtBQUt1L0YsYUFBYSxtQkFBbUIsT0FBT3YvRixLQUFLdTlGLGFBQWF2OUYsS0FBS3c5RixtQkFBbUJ4OUYsS0FBS3U5RixZQUFZLEtBQUssSUFBSXY5RixLQUFLcTlGLGNBQWNyOUYsS0FBS3E5RixZQUFZLElBQUlyOUYsS0FBS282RixpQkFBaUJwNkYsS0FBSzQvRixZQUFZLG1CQUFtQjUvRixLQUFLNC9GLFlBQVksYUFBYTUvRixLQUFLKzlGLG1CQUFtQi85RixLQUFLdS9GLGFBQWEsc0JBQXNCdi9GLEtBQUs2L0YsV0FBVzcvRixLQUFLcy9GLG9CQUFvQixhQUFhLENBQUMsT0FBTyxPQUFPLFNBQVMsTUFBTSxhQUFhLE9BQU8sQ0FBQyxTQUFTLFNBQVNqa0MsRUFBRThHLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXNCLEVBQUUsR0FBRyxJQUFJdEIsS0FBS3luRSxFQUFFbmtFLEVBQUVta0UsR0FBR3puRSxJQUFJNkUsSUFBSXZELEVBQUV0QixHQUFHeW5FLEVBQUV6bkUsSUFBSSxHQUFHNkUsR0FBRzRpRSxFQUFFNWlFLEdBQUcsSUFBSTdFLEtBQUt5bkUsRUFBRTVpRSxHQUFHdkQsRUFBRXRCLEdBQUd5bkUsRUFBRTVpRSxHQUFHN0UsR0FBRyxPQUFPc0IsRUFBRSxTQUFTZ0MsRUFBRW1rRSxHQUFHLElBQUk1aUUsRUFBRTdFLEVBQUUsR0FBRyxJQUFJNkUsS0FBSzRpRSxFQUFFem5FLEVBQUU2RSxFQUFFcEMsUUFBUSxLQUFLLE1BQU1nbEUsRUFBRTVpRSxHQUFHLE9BQU83RSxFQUFFc0IsRUFBRTdCLFVBQVUybEcsV0FBVyxTQUFTMzlCLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXNGLEtBQUtvL0YsWUFBWWo5QixHQUFHbm1FLEVBQUV1RCxHQUFHLEdBQUcsTUFBTSxpQkFBaUI3RSxFQUFFLE9BQU9BLEdBQUcsbUJBQW1CQSxFQUFFc1EsU0FBU2hQLEVBQUV0QixFQUFFc1EsVUFBVSxpQkFBaUJ0USxJQUFJc0IsRUFBRXRCLEVBQUVxQixNQUFNLHVCQUF1QkMsR0FBR0EsRUFBRTdCLFVBQVVvbEcsYUFBYSxTQUFTcDlCLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXNGLEtBQUtvL0YsWUFBWWo5QixHQUFHLFlBQU8sSUFBU3puRSxJQUFJNkUsSUFBSTdFLEdBQUdzQixFQUFFN0IsVUFBVXdsRyxnQkFBZ0IsU0FBU3g5QixFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUVzRixLQUFLby9GLFlBQVlqOUIsR0FBR25tRSxFQUFFdUQsR0FBRyxHQUFHLE1BQU0saUJBQWlCN0UsSUFBSXNCLEVBQUV0QixFQUFFeUMsUUFBUSxNQUFNLE1BQU1BLFFBQVEsTUFBTSxNQUFNQSxRQUFRLE1BQU0sT0FBT25CLEdBQUdBLEVBQUU3QixVQUFVeWxHLFlBQVksU0FBU3o5QixFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUVzRixLQUFLby9GLFlBQVlqOUIsR0FBRzVpRSxFQUFFMnFCLFNBQVMzcUIsRUFBRSxJQUFJL0QsTUFBTStELEtBQUtBLEVBQUUsR0FBRyxJQUFJdkQsRUFBRWt1QixTQUFTeHZCLEVBQUUsSUFBSSxPQUFPYyxNQUFNUSxLQUFLQSxFQUFFdUQsR0FBR3ZELEdBQUdBLEVBQUU3QixVQUFVdWxHLGVBQWUsU0FBU3Y5QixFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFZ0UsS0FBS3MvRixvQkFBb0JuOUIsRUFBRTVpRSxFQUFFN0UsR0FBRyxHQUFHLElBQUlzQixFQUFFQyxPQUFPLE1BQU0sSUFBSXcwRCxNQUFNLHFDQUFxQzBSLEVBQUUsK0NBQStDNWlFLEVBQUUscUJBQXFCUyxLQUFLby9GLFlBQVlqOUIsR0FBRyxLQUFLLE9BQU9ubUUsRUFBRSxJQUFJQSxFQUFFN0IsVUFBVW1sRyxvQkFBb0IsU0FBU245QixFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUk2RSxHQUFHLElBQUlBLEVBQUV0RCxPQUFPLE1BQU0sSUFBSXcwRCxNQUFNLG1DQUFtQyxHQUFHLzFELEVBQUVBLEdBQUcsQ0FBQzZFLEVBQUUsS0FBS1MsS0FBSysvRixvQkFBb0JybEcsRUFBRTZFLEdBQUcsTUFBTSxJQUFJa3hELE1BQU0sMEJBQTBCLElBQUl6MEQsRUFBRWdFLEtBQUs4L0YsV0FBVzM5QixFQUFFem5FLEdBQUcsSUFBSXNGLEtBQUsrL0Ysb0JBQW9CL2pHLEVBQUV1RCxHQUFHLE1BQU0sSUFBSWt4RCxNQUFNLHFDQUFxQzBSLEVBQUUsNkNBQTZDNWlFLEVBQUUscUJBQXFCUyxLQUFLby9GLFlBQVlqOUIsR0FBRyxLQUFLLE9BQU9ubUUsR0FBR0EsRUFBRTdCLFVBQVU0bEcsb0JBQW9CLFNBQVM1OUIsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRWxtRSxRQUFRc0QsRUFBRXRELFNBQVNrbUUsRUFBRXorQixNQUFLLFNBQVV5K0IsR0FBRyxPQUFPLElBQUk1aUUsRUFBRTlDLFFBQVEwbEUsT0FBT0EsRUFBRXhtQixRQUFRZzVDLFFBQVEzNEYsRUFBRW1tRSxFQUFFeG1CLFFBQVFxa0QsY0FBY2hpRyxFQUFFbWtFLEVBQUV4bUIsUUFBUXNrRCxVQUFVNWtDLEdBQUcsU0FBUzhHLEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYSxJQUFJc0IsRUFBRXRCLEVBQUUsR0FBR3dsRyxhQUFhN2tDLEVBQUUzZ0UsRUFBRSxHQUFHcTZGLFVBQVUvMkYsRUFBRXRELEVBQUUsR0FBR3c2RixNQUFNdnhELEVBQUVqcEMsRUFBRSxJQUFJeWxHLFdBQVdqa0UsRUFBRXhoQyxFQUFFLEdBQUc4c0UsRUFBRTlzRSxFQUFFLElBQUkwbEcsUUFBUW5pRyxFQUFFdkQsRUFBRSxJQUFJMmxHLG1CQUFtQixTQUFTaGpHLEVBQUU4a0UsRUFBRTVpRSxHQUFHLE9BQU8sSUFBSUEsRUFBRTlDLFFBQVEwbEUsR0FBRyxJQUFJL2tFLEVBQUUsQ0FBQzA2RixXQUFXLGdCQUFnQkUsU0FBUyxjQUFjM0IsWUFBWSxpQkFBaUI4QixVQUFVLGVBQWVFLEtBQUssVUFBVWxELFNBQVMsY0FBY29ELFVBQVUsZUFBZUUsT0FBTyxZQUFZRSxPQUFPLFlBQVlFLFNBQVMsY0FBY0UsTUFBTSxXQUFXRSxjQUFjLG1CQUFtQkUsUUFBUSxhQUFhRSxJQUFJLFNBQVNJLFFBQVEsYUFBYTl6QyxNQUFNM25ELEVBQUUybkQsTUFBTTI2QyxJQUFJdGlHLEVBQUVzaUcsSUFBSS9HLElBQUl2N0YsRUFBRXU3RixLQUFLdjBELEVBQUUsSUFBSXJCLEVBQUUsT0FBTyxRQUFRdDBCLEVBQUUsdUdBQXVHZ0ssRUFBRSxRQUFRNG9ELEVBQUUsVUFBVXRvRSxFQUFFLGlFQUFpRW9DLE1BQU0sS0FBSzAvQyxFQUFFLGdJQUFnSUEsR0FBR0EsRUFBRUEsRUFBRXQrQyxRQUFRLHlCQUF5QixTQUFTQSxRQUFRLEtBQUssS0FBSyxJQUFJODFCLEVBQUVuMEIsRUFBRSxJQUFJZ0QsT0FBTzI1QyxHQUFHeVQsRUFBRSx3R0FBd0duekQsTUFBTSxLQUFLd3RFLEVBQUVyYSxFQUFFbGtELE9BQU8sQ0FBQyxLQUFLLEtBQUssS0FBSyxPQUFPLE1BQU0sTUFBTSxNQUFNLFFBQVEsVUFBVSxTQUFTLFFBQVEsUUFBUSxRQUFRLE9BQU8sT0FBT2k2QyxFQUFFLElBQUluakQsT0FBTyxPQUFPeW5FLEVBQUVyNUMsS0FBSyxLQUFLLE1BQU1rNUMsRUFBRSxTQUFTakgsRUFBRTVpRSxHQUFHODdELEVBQUUvZ0UsS0FBSzBGLEtBQUttaUUsRUFBRTVpRSxHQUFHUyxLQUFLdWdHLFVBQVVoMEQsV0FBV3ZzQyxLQUFLdWdHLFVBQVVoMEQsV0FBV2kwRCxTQUFTLDBEQUEwRDF0RixPQUFPLGVBQWVBLFFBQVEsSUFBSXBZLEVBQUUsSUFBSThzRSxFQUFFeG5FLEtBQUt5Z0csUUFBUXprRyxFQUFFLElBQUlpQyxFQUFFK0IsS0FBS3lnRyxRQUFRQyxhQUFhMWdHLEtBQUt3Z0QsVUFBVXhnRCxLQUFLMmdHLFdBQVcsQ0FBQzMwRCxTQUFTaHdDLEVBQUVpakcsV0FBV2pqRyxFQUFFNGtHLGNBQWMxa0UsRUFBRStpRSxZQUFZdUIsU0FBU3RrRSxFQUFFaWpFLGlCQUFpQnBxRSxPQUFPcjZCLEVBQUU4bEcsU0FBU254RixHQUFHd3hGLE1BQU1ubUcsRUFBRThsRyxTQUFTMWhHLEdBQUc4cUMsUUFBUWx2QyxFQUFFa21HLGNBQWMsUUFBUUUsTUFBTSxzQkFBc0JDLGNBQWNybUcsRUFBRWttRyxjQUFjLFFBQVFJLFlBQVksUUFBUUMsbUJBQW1Cdm1HLEVBQUU4bEcsU0FBUyxRQUFRVSxpQkFBaUJ4bUcsRUFBRThsRyxTQUFTLE9BQU81MkUsUUFBUWx2QixFQUFFa21HLGNBQWMsWUFBWUksWUFBWTlrRSxFQUFFeTdELFdBQVd3SixRQUFRem1HLEVBQUVrbUcsY0FBYyxNQUFNSSxZQUFZOWtFLEVBQUV5N0QsV0FBV3lKLElBQUkxbUcsRUFBRThsRyxTQUFTLDZLQUE2S2EsYUFBYXJsRyxFQUFFOGtHLE1BQU0seUJBQXlCUSxhQUFhdGxHLEVBQUU4a0csTUFBTSx5QkFBeUJTLGNBQWN2bEcsRUFBRThrRyxNQUFNLFVBQVVVLG9CQUFvQnhsRyxFQUFFOGtHLE1BQU0sYUFBYTEzQixFQUFFanZFLFVBQVUsSUFBSWtoRSxHQUFHb21DLFlBQVksU0FBU3QvQixHQUFHLE9BQU9BLEVBQUU5MkQsT0FBT2pPLEVBQUUrN0YsU0FBU2gzQixFQUFFOTJELE9BQU9qTyxFQUFFNjdGLGVBQWU5MkIsRUFBRTkyRCxPQUFPak8sRUFBRXE4RixTQUFTcndCLEVBQUVqdkUsVUFBVXVuRyxZQUFZLFNBQVN2L0IsR0FBRyxPQUFPQSxFQUFFOTJELE9BQU9qTyxFQUFFaTVGLGFBQWFsMEIsRUFBRTkyRCxPQUFPak8sRUFBRTA2RixZQUFZMXVCLEVBQUVqdkUsVUFBVXduRyxZQUFZLFNBQVN4L0IsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTkyRCxPQUFPak8sRUFBRSs2RixXQUFXaDJCLEVBQUU5MkQsT0FBT2pPLEVBQUU0NkYsV0FBV3o0RixJQUFJLE1BQU00aUUsRUFBRXA4RCxNQUFNLE1BQU14RyxFQUFFd0csTUFBTSxNQUFNbzhELEVBQUVwOEQsTUFBTSxNQUFNeEcsRUFBRXdHLE1BQU0sTUFBTW84RCxFQUFFcDhELE1BQU0sTUFBTXhHLEVBQUV3RyxPQUFPcWpFLEVBQUVqdkUsVUFBVWs5RixPQUFPLFdBQVdwa0UsR0FBRSxHQUFJbTJDLEVBQUVqdkUsVUFBVXluRyxnQkFBZ0IsU0FBU3ovQixFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUUsS0FBS3NGLEtBQUs2aEcsa0JBQWtCLElBQUk3bEcsRUFBRWdFLEtBQUt5Z0csT0FBT2hXLE9BQU8sT0FBTyxPQUFPenVGLEVBQUVnRSxLQUFLOGhHLGNBQWMxa0csRUFBRW04RixJQUFJLElBQUk3K0YsR0FBR0EsR0FBR0EsR0FBR0EsR0FBR0EsR0FBR0EsR0FBR0EsR0FBR0EsR0FBR0EsRUFBRUEsR0FBR3NGLEtBQUsraEcscUJBQXFCL2xHLEtBQUtnRSxLQUFLZ2lHLGFBQWFobUcsS0FBS2dFLEtBQUtpaUcsV0FBVzkvQixLQUFLbmlFLEtBQUtraUcsY0FBY2xtRyxLQUFLZ0UsS0FBS21pRyxjQUFjbm1HLEtBQUtnRSxLQUFLb2lHLGFBQWFwbUcsRUFBRW1tRSxLQUFLbmlFLEtBQUtxaUcsVUFBVXJtRyxFQUFFbW1FLEtBQUtuaUUsS0FBS3NpRyxzQkFBc0J0aUcsS0FBSzhoRyxjQUFjMWtHLEVBQUVxOEYsUUFBUXo1RixLQUFLeWdHLE9BQU9sc0YsU0FBUzYwRCxFQUFFanZFLFVBQVU4bkcsV0FBVyxTQUFTOS9CLEdBQUcsSUFBSTVpRSxFQUFFLE1BQU0sTUFBTUEsRUFBRVMsS0FBSzJnRyxXQUFXMUIsV0FBV3NELFNBQVNoakcsRUFBRUEsRUFBRXBDLFFBQVErK0IsRUFBRXFnRSxjQUFjLE1BQU1wNkIsRUFBRTkyRCxPQUFPak8sRUFBRWk4RixNQUFNbDNCLEVBQUU5MkQsT0FBT2pPLEVBQUUrM0YsVUFBVSxRQUFRaHpCLEVBQUVwOEQsTUFBTSxRQUFRbzhELEVBQUVwOEQsT0FBT2svQyxFQUFFdGlELEtBQUtwRCxHQUFHLE9BQU9BLEdBQUcsT0FBT0EsRUFBRVMsS0FBSzhoRyxjQUFjMWtHLEVBQUV5N0YsU0FBU3Q1RixHQUFHUyxLQUFLOGhHLGNBQWMxa0csRUFBRSszRixTQUFTNTFGLEdBQUdTLEtBQUs4aEcsY0FBYzFrRyxFQUFFaTdGLEtBQUs5NEYsSUFBSSxNQUFNQSxFQUFFUyxLQUFLMmdHLFdBQVc1ckUsT0FBT3d0RSxRQUFRdmlHLEtBQUs4aEcsY0FBYzFrRyxFQUFFaTdGLEtBQUs5NEYsUUFBRyxHQUFRNnBFLEVBQUVqdkUsVUFBVStuRyxjQUFjLFNBQVMvL0IsR0FBRyxJQUFJNWlFLEVBQUUsS0FBSyxNQUFNLE1BQU00aUUsR0FBRyxNQUFNQSxFQUFFNWlFLEVBQUVTLEtBQUs4aEcsY0FBYzFrRyxFQUFFMDZGLFdBQVczMUIsR0FBRyxNQUFNQSxHQUFHLE1BQU1BLEVBQUU1aUUsRUFBRVMsS0FBSzhoRyxjQUFjMWtHLEVBQUU0NkYsU0FBUzcxQixHQUFHLE1BQU1BLEVBQUU1aUUsRUFBRVMsS0FBSzhoRyxjQUFjMWtHLEVBQUVpNUYsWUFBWWwwQixHQUFHLE1BQU1BLEVBQUU1aUUsRUFBRVMsS0FBSzhoRyxjQUFjMWtHLEVBQUUrNkYsVUFBVWgyQixHQUFHLE1BQU1BLEVBQUU1aUUsRUFBRVMsS0FBSzhoRyxjQUFjMWtHLEVBQUVtN0YsVUFBVXAyQixHQUFHLE1BQU1BLEdBQUdGLEVBQUV0L0QsS0FBSzNDLEtBQUt5Z0csT0FBT2hXLEtBQUssSUFBSWxyRixFQUFFUyxLQUFLOGhHLGNBQWMxa0csRUFBRWk4RixJQUFJbDNCLEdBQUcsTUFBTUEsSUFBSTVpRSxFQUFFUyxLQUFLOGhHLGNBQWMxa0csRUFBRTI3RixNQUFNNTJCLElBQUk1aUUsR0FBR1MsS0FBS3lnRyxPQUFPbHNGLE9BQU9oVixHQUFHNnBFLEVBQUVqdkUsVUFBVW1vRyxrQkFBa0IsV0FBVyxJQUFJbmdDLEVBQUVuaUUsS0FBSzJnRyxXQUFXRSxNQUFNMEIsT0FBTyxHQUFHLEtBQUtwZ0MsRUFBRSxNQUFNLE1BQU1BLEVBQUVuaUUsS0FBSzhoRyxjQUFjMWtHLEVBQUV1N0YsT0FBT3gyQixHQUFHbmlFLEtBQUs4aEcsY0FBYzFrRyxFQUFFeTdGLFNBQVMxMkIsSUFBSWlILEVBQUVqdkUsVUFBVTRuRyxxQkFBcUIsU0FBUzUvQixHQUFHLElBQUk1aUUsRUFBRSxHQUFHLEdBQUcsTUFBTTRpRSxFQUFFLENBQUMsR0FBR25pRSxLQUFLd2lHLG9CQUFvQmpqRyxFQUFFUyxLQUFLMmdHLFdBQVdRLFFBQVFvQixRQUFRLE9BQU92aUcsS0FBSzhoRyxjQUFjMWtHLEVBQUVxOEYsUUFBUWw2RixFQUFFa3pCLE9BQU8sTUFBTSxHQUFHbHpCLEVBQUVTLEtBQUsyZ0csV0FBVy8yRSxRQUFRMjRFLE9BQU8sT0FBT3ZpRyxLQUFLOGhHLGNBQWMxa0csRUFBRXE4RixRQUFRbDZGLEVBQUVrekIsT0FBTyxNQUFNMHZDLEVBQUVuaUUsS0FBS3lnRyxPQUFPbHNGLE9BQU8sSUFBSTdaLEVBQUUsSUFBSSxHQUFHc0YsS0FBS3lnRyxPQUFPZ0MsV0FBV3ppRyxLQUFLeWdHLE9BQU9pQyxTQUFTcnBGLEdBQUcsQ0FBQyxHQUFHM2UsR0FBR3luRSxFQUFFbmlFLEtBQUt5Z0csT0FBT2xzRixhQUFhdlUsS0FBS3lnRyxPQUFPZ0MsV0FBVyxNQUFNdGdDLEdBQUcsTUFBTUEsR0FBRyxNQUFNLE1BQU1BLElBQUksTUFBTW5pRSxLQUFLeWdHLE9BQU9oVyxRQUFRLE1BQU16cUYsS0FBS3lnRyxPQUFPaFcsS0FBSyxJQUFJL3ZGLEdBQUcsS0FBS3NGLEtBQUt5Z0csT0FBT2xzRixPQUFPdlUsS0FBS3lnRyxPQUFPbHNGLFFBQVEsTUFBTXZVLEtBQUt5Z0csT0FBT2hXLFFBQVEsTUFBTXpxRixLQUFLeWdHLE9BQU9oVyxLQUFLLEtBQUsvdkYsR0FBRyxLQUFLc0YsS0FBS3lnRyxPQUFPbHNGLE9BQU92VSxLQUFLeWdHLE9BQU9sc0YsU0FBU3ZVLEtBQUs4aEcsY0FBYzFrRyxFQUFFaTdGLEtBQUszOUYsR0FBR3NGLEtBQUt5Z0csT0FBT3JyQyxZQUFZLEdBQUcsTUFBTStNLEdBQUduaUUsS0FBS3dpRyxtQkFBbUIsR0FBR2pqRyxFQUFFUyxLQUFLMmdHLFdBQVdNLG1CQUFtQnNCLE9BQU8sQ0FBQyxLQUFLdmlHLEtBQUt5Z0csT0FBT2dDLFlBQVl6aUcsS0FBS3lnRyxPQUFPaUMsU0FBU3htRSxFQUFFbWdFLFVBQVU5OEYsR0FBR1MsS0FBS3lnRyxPQUFPbHNGLE9BQU8sT0FBTzBlLEdBQUUsRUFBR2p6QixLQUFLOGhHLGNBQWMxa0csRUFBRSs3RixRQUFRNTVGLFNBQVMsR0FBRzB6QixHQUFHLE1BQU1rdkMsSUFBSTVpRSxFQUFFUyxLQUFLMmdHLFdBQVdPLGlCQUFpQnFCLFFBQVEsT0FBT3R2RSxHQUFFLEVBQUdqekIsS0FBSzhoRyxjQUFjMWtHLEVBQUUrN0YsUUFBUTU1RixHQUFHLE9BQU8sTUFBTTZwRSxFQUFFanZFLFVBQVVnb0csY0FBYyxTQUFTaGdDLEdBQUcsSUFBSTVpRSxFQUFFLEtBQUssR0FBRyxNQUFNNGlFLEVBQUUsQ0FBQyxJQUFJem5FLEVBQUUsR0FBRyxHQUFHLE1BQU1zRixLQUFLeWdHLE9BQU9oVyxLQUFLLEdBQUcsQ0FBQy92RixFQUFFc0YsS0FBSzJnRyxXQUFXSSxjQUFjd0IsT0FBTyxJQUFJdm1HLEVBQUVncEMsRUFBRTI5RCxlQUFlam9HLEdBQUdzQixHQUFHLFVBQVVBLEVBQUVvMUYsU0FBUzEyRixHQUFHc3FDLEVBQUU0OUQsWUFBWTVpRyxLQUFLeWdHLFNBQVMvbEcsRUFBRUEsRUFBRXlDLFFBQVErK0IsRUFBRXFnRSxjQUFjLE9BQU9oOUYsRUFBRVMsS0FBSzhoRyxjQUFjMWtHLEVBQUU2N0YsY0FBY3YrRixJQUFJeVIsV0FBV25RLE1BQU0sTUFBTWdFLEtBQUt5Z0csT0FBT2hXLEtBQUssS0FBSy92RixFQUFFc0YsS0FBSzJnRyxXQUFXLzJELFFBQVEyNEQsT0FBT2hqRyxFQUFFUyxLQUFLOGhHLGNBQWMxa0csRUFBRSs3RixRQUFReitGLElBQUksT0FBTzZFLEdBQUc2cEUsRUFBRWp2RSxVQUFVNm5HLGFBQWEsU0FBUzcvQixHQUFHLEdBQUcsTUFBTUEsR0FBRyxNQUFNQSxHQUFHLE1BQU1BLEVBQUUsQ0FBQyxJQUFJNWlFLEVBQUVTLEtBQUt5Z0csT0FBT2xzRixPQUFPLE9BQU92VSxLQUFLNmlHLGtCQUFpQixFQUFHdGpHLEdBQUcsTUFBTTRpRSxFQUFFbmlFLEtBQUs4aUcsdUJBQXVCLEtBQUksRUFBRyxNQUFNOWlHLEtBQUs4aUcsdUJBQXVCM2dDLEdBQUduaUUsS0FBSzZpRyxrQkFBa0I3aUcsS0FBS3dnRCxTQUFTZy9DLG1CQUFtQmpnRyxFQUFFLFNBQVM0aUUsR0FBRyxJQUFJLElBQUk1aUUsRUFBRSxHQUFHN0UsRUFBRSxFQUFFMmdFLEVBQUUsSUFBSXIvRCxFQUFFbW1FLEdBQUdua0UsRUFBRSxLQUFLcTlELEVBQUVvbkMsV0FBVyxJQUFJemtHLEVBQUVxOUQsRUFBRXI0RCxNQUFNLDBCQUEwQnpELEdBQUd2QixFQUFFLElBQUksT0FBT3E5RCxFQUFFb3ZCLE9BQU8sQ0FBQyxHQUFHcHZCLEVBQUU5bUQsT0FBTyxNQUFNOG1ELEVBQUVvdkIsT0FBT3pzRixFQUFFcTlELEVBQUVyNEQsTUFBTSwwQkFBMEIsQ0FBQyxHQUFHLE1BQU1xNEQsRUFBRW92QixPQUFPLENBQUNsckYsR0FBRyxLQUFLODdELEVBQUVvbkMsWUFBWWxqRyxHQUFHODdELEVBQUU5bUQsUUFBUSxTQUFTdlcsRUFBRXE5RCxFQUFFcjRELE1BQU0sc0JBQXNCLElBQUloRixFQUFFLE9BQU9ta0UsRUFBRSxJQUFJem5FLEVBQUV3dkIsU0FBU2xzQixFQUFFLEdBQUcsS0FBSyxLQUFLdEQsR0FBRyxLQUFLLElBQUlzRCxFQUFFLEdBQUd2QixRQUFRLEtBQUssT0FBTzBsRSxFQUFFLEdBQUd6bkUsR0FBRyxHQUFHQSxFQUFFLEdBQUcsQ0FBQzZFLEdBQUcsS0FBS3ZCLEVBQUUsR0FBRyxTQUFTdUIsR0FBRyxLQUFLN0UsR0FBRyxLQUFLQSxHQUFHLEtBQUtBLEVBQUUsS0FBS0UsT0FBT3k0RSxhQUFhMzRFLEdBQUdFLE9BQU95NEUsYUFBYTM0RSxHQUFHLE9BQU82RSxFQUExZSxDQUE2ZUEsSUFBSVMsS0FBS3lnRyxPQUFPaFcsU0FBU3RvQixJQUFJNWlFLEdBQUdTLEtBQUt5Z0csT0FBT2xzRixRQUFRaFYsRUFBRUEsRUFBRXBDLFFBQVErK0IsRUFBRXFnRSxjQUFjLE1BQU12OEYsS0FBSzhoRyxjQUFjMWtHLEVBQUVxN0YsT0FBT2w1RixHQUFHLE9BQU8sTUFBTTZwRSxFQUFFanZFLFVBQVU0b0cscUJBQXFCLFNBQVM1Z0MsR0FBRyxPQUFPQSxFQUFFOTJELE9BQU9qTyxFQUFFKzNGLFVBQVU5M0YsRUFBRThrRSxFQUFFcDhELEtBQUssQ0FBQyxTQUFTLE9BQU8sUUFBUSxPQUFPLEtBQUssU0FBUyxXQUFXbzhELEVBQUU5MkQsT0FBT2pPLEVBQUU0NkYsVUFBVSxNQUFNNzFCLEVBQUVwOEQsTUFBTW84RCxFQUFFNjVCLE9BQU9oQixTQUFTM3ZGLE9BQU9qTyxFQUFFKzNGLFVBQVU5M0YsRUFBRThrRSxFQUFFNjVCLE9BQU9oQixTQUFTajFGLEtBQUssQ0FBQyxLQUFLLFFBQVEsU0FBUzFJLEVBQUU4a0UsRUFBRTkyRCxLQUFLLENBQUNqTyxFQUFFKzdGLFFBQVEvN0YsRUFBRTA2RixXQUFXMTZGLEVBQUVpNUYsWUFBWWo1RixFQUFFdW9ELE1BQU12b0QsRUFBRSs2RixVQUFVLzZGLEVBQUV5N0YsU0FBU3o3RixFQUFFdTdGLE9BQU92N0YsRUFBRW04RixJQUFJbjhGLEVBQUVtN0YsVUFBVW43RixFQUFFMjdGLFNBQVMzdkIsRUFBRWp2RSxVQUFVaW9HLGFBQWEsU0FBU2pnQyxFQUFFNWlFLEdBQUcsR0FBRyxNQUFNNGlFLEdBQUduaUUsS0FBSytpRyxxQkFBcUJ4akcsR0FBRyxDQUFDLElBQUksSUFBSTdFLEVBQUVzRixLQUFLeWdHLE9BQU9sc0YsT0FBT3ZZLEdBQUUsRUFBR3EvRCxHQUFFLEVBQUdyN0QsS0FBS3lnRyxPQUFPZ0MsWUFBWXptRyxHQUFHcS9ELEdBQUdyN0QsS0FBS3lnRyxPQUFPaFcsU0FBU3RvQixLQUFLbmlFLEtBQUt5Z0csT0FBT2lDLFNBQVN4bUUsRUFBRW1nRSxVQUFVM2hHLEdBQUdzRixLQUFLeWdHLE9BQU9oVyxPQUFPenVGLEVBQUVBLEdBQUUsR0FBSUEsRUFBRSxPQUFPZ0UsS0FBS3lnRyxPQUFPaFcsT0FBTyxNQUFNenFGLEtBQUt5Z0csT0FBT2hXLE9BQU9wdkIsR0FBRSxFQUFHLE1BQU1yN0QsS0FBS3lnRyxPQUFPaFcsU0FBU3B2QixHQUFFLElBQUtyN0QsS0FBS3lnRyxPQUFPbHNGLE9BQU8sT0FBT3ZVLEtBQUt5Z0csT0FBT2hXLFNBQVN0b0IsSUFBSXpuRSxHQUFHc0YsS0FBS3lnRyxPQUFPbHNGLE9BQU83WixHQUFHc0YsS0FBS3lnRyxPQUFPOEIsS0FBS3JtRSxFQUFFK2lFLGFBQWFqL0YsS0FBSzhoRyxjQUFjMWtHLEVBQUVxN0YsT0FBTy85RixHQUFHLE9BQU8sTUFBTTB1RSxFQUFFanZFLFVBQVVrb0csVUFBVSxTQUFTbGdDLEVBQUU1aUUsR0FBRyxHQUFHUyxLQUFLd2dELFNBQVNpL0MsS0FBSyxNQUFNdDlCLEdBQUduaUUsS0FBSytpRyxxQkFBcUJ4akcsR0FBRyxDQUFDLElBQUk3RSxFQUFFLEdBQUdzQixFQUFFZ0UsS0FBSzJnRyxXQUFXUyxJQUFJNEIsYUFBYSxHQUFHaG5HLEVBQUUsQ0FBQyxJQUFJLElBQUlxL0QsRUFBRXIvRCxFQUFFLEdBQUdtQixRQUFRLFFBQVEsS0FBS0EsUUFBUSxRQUFRLEtBQUthLEVBQUUsSUFBSXE5RCxFQUFFNStELFFBQVEsS0FBS2tuQyxFQUFFLEVBQUUzbkMsR0FBRyxDQUFDLElBQUl3ckUsSUFBSXhyRSxFQUFFLEdBQUdpQyxFQUFFakMsRUFBRSxHQUFHLEtBQUtBLEVBQUVBLEVBQUVDLE9BQU8sSUFBSSxhQUFhZ0MsRUFBRVIsTUFBTSxFQUFFLE1BQU1RLElBQUlvOUQsR0FBR3I5RCxHQUFHQyxFQUFFZCxRQUFRLFFBQVEsS0FBS0EsUUFBUSxRQUFRLFFBQVFxcUUsSUFBSTdqQyxJQUFJQSxHQUFHanBDLEdBQUdzQixFQUFFLEdBQUcybkMsR0FBRyxFQUFFLE1BQU0zbkMsRUFBRWdFLEtBQUsyZ0csV0FBV1MsSUFBSTRCLGFBQWEsT0FBT2huRyxJQUFJdEIsR0FBR3NGLEtBQUt5Z0csT0FBT3o5RixNQUFNLFlBQVksSUFBSXRJLEVBQUVBLEVBQUV5QyxRQUFRKytCLEVBQUVxZ0UsY0FBYyxNQUFNdjhGLEtBQUs4aEcsY0FBYzFrRyxFQUFFcTdGLE9BQU8vOUYsSUFBSSxPQUFPLE1BQU0wdUUsRUFBRWp2RSxVQUFVMm9HLHVCQUF1QixTQUFTM2dDLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUVxL0QsRUFBRSxNQUFNOEcsRUFBRTlHLEVBQUVyN0QsS0FBSzJnRyxXQUFXVSxhQUFhLE1BQU1sL0IsRUFBRTlHLEVBQUVyN0QsS0FBSzJnRyxXQUFXVyxhQUFhLE1BQU1uL0IsRUFBRTlHLEVBQUVyN0QsS0FBSzJnRyxXQUFXWSxjQUFjLE1BQU1wL0IsSUFBSTlHLEVBQUVyN0QsS0FBSzJnRyxXQUFXYSxxQkFBcUIsSUFBSSxJQUFJeGpHLEVBQUVxOUQsRUFBRWtuQyxPQUFPNStELEVBQUUsR0FBRzNqQyxLQUFLeWdHLE9BQU9nQyxXQUFXLENBQUMsSUFBSTkrRCxFQUFFM2pDLEtBQUt5Z0csT0FBT2xzRixVQUFVNHRELElBQUk1aUUsR0FBRzI4QixFQUFFbWdFLFFBQVExNUYsS0FBS2doQyxHQUFHLENBQUMzakMsS0FBS3lnRyxPQUFPcnJDLE9BQU8sTUFBTSxPQUFPenhCLEdBQUczakMsS0FBS3lnRyxPQUFPZ0MsV0FBVyxPQUFPem1HLEVBQUVnRSxLQUFLeWdHLE9BQU9oVyxTQUFTLE1BQU16dUYsRUFBRWdFLEtBQUs2aUcsa0JBQWlCLEVBQUcsT0FBTzdtRyxHQUFHLE9BQU9nRSxLQUFLeWdHLE9BQU9oVyxLQUFLLElBQUl6cUYsS0FBS3lnRyxPQUFPbHNGLE9BQU9vdkIsR0FBRzNqQyxLQUFLeWdHLE9BQU9sc0YsUUFBUTdaLElBQUksT0FBT0EsR0FBRyxNQUFNaXBDLEdBQUcsTUFBTTNqQyxLQUFLeWdHLE9BQU9oVyxTQUFTOW1ELEdBQUczakMsS0FBS3lnRyxPQUFPbHNGLFFBQVE3WixJQUFJaXBDLElBQUlBLEdBQUcsTUFBTXcrQixFQUFFbmlFLEtBQUs4aUcsdUJBQXVCLElBQUl2akcsRUFBRSxLQUFLUyxLQUFLOGlHLHVCQUF1QixJQUFJdmpHLEVBQUUsTUFBTVMsS0FBS3lnRyxPQUFPZ0MsWUFBWTkrRCxHQUFHM2pDLEtBQUt5Z0csT0FBT2xzRixVQUFVdlcsR0FBRzJsQyxHQUFHMDNCLEVBQUVrbkMsT0FBTyxPQUFPdmtHLEdBQUdta0UsRUFBRXhtQixRQUFRbzVDLFVBQVUzckIsRUFBRWpILEVBQUV4bUIsUUFBUXU1QyxNQUFNOTNGLEVBQUUra0UsRUFBRXhtQixRQUFRczVDLHVCQUF1QnQ3RixFQUFFOEQsUUFBUTBrRSxFQUFFeG1CLFFBQVFxNUMsY0FBYzlsQyxFQUFFenhELFNBQVMsU0FBUzBrRSxFQUFFNWlFLEVBQUU3RSxHQUFHLGFBQWEsSUFBSXNCLEVBQUU4RixPQUFPM0gsVUFBVXdDLGVBQWUsVUFBVSxTQUFTMCtELEVBQUU4RyxHQUFHbmlFLEtBQUtpakcsUUFBUTlnQyxHQUFHLEdBQUduaUUsS0FBS2tqRyxlQUFlbGpHLEtBQUtpakcsUUFBUWhuRyxPQUFPK0QsS0FBS21qRyxXQUFXLEVBQUU5bkMsRUFBRWxoRSxVQUFVaXBHLFFBQVEsV0FBV3BqRyxLQUFLbWpHLFdBQVcsR0FBRzluQyxFQUFFbGhFLFVBQVVpN0QsS0FBSyxXQUFXcDFELEtBQUttakcsV0FBVyxJQUFJbmpHLEtBQUttakcsWUFBWSxJQUFJOW5DLEVBQUVsaEUsVUFBVXNvRyxRQUFRLFdBQVcsT0FBT3ppRyxLQUFLbWpHLFdBQVduakcsS0FBS2tqRyxnQkFBZ0I3bkMsRUFBRWxoRSxVQUFVb2EsS0FBSyxXQUFXLElBQUk0dEQsRUFBRSxLQUFLLE9BQU9uaUUsS0FBS3lpRyxZQUFZdGdDLEVBQUVuaUUsS0FBS2lqRyxRQUFRemxHLE9BQU93QyxLQUFLbWpHLFlBQVluakcsS0FBS21qRyxZQUFZLEdBQUdoaEMsR0FBRzlHLEVBQUVsaEUsVUFBVXN3RixLQUFLLFNBQVN0b0IsR0FBRyxJQUFJNWlFLEVBQUUsS0FBSyxPQUFPNGlFLEVBQUVBLEdBQUcsR0FBR0EsR0FBR25pRSxLQUFLbWpHLGFBQWEsR0FBR2hoQyxFQUFFbmlFLEtBQUtrakcsaUJBQWlCM2pHLEVBQUVTLEtBQUtpakcsUUFBUXpsRyxPQUFPMmtFLElBQUk1aUUsR0FBRzg3RCxFQUFFbGhFLFVBQVVrcEcsUUFBUSxTQUFTbGhDLEVBQUU1aUUsR0FBRzRpRSxFQUFFNXZELFVBQVVoVCxFQUFFLElBQUk3RSxFQUFFeW5FLEVBQUU3eEIsS0FBS3R3QyxLQUFLaWpHLFNBQVMsT0FBT3ZvRyxHQUFHc0IsR0FBR21tRSxFQUFFbWhDLFFBQVE1b0csRUFBRThCLFFBQVErQyxJQUFJN0UsRUFBRSxNQUFNQSxHQUFHMmdFLEVBQUVsaEUsVUFBVXdJLEtBQUssU0FBU3cvRCxFQUFFNWlFLEdBQUcsT0FBT0EsRUFBRUEsR0FBRyxHQUFHQSxHQUFHUyxLQUFLbWpHLGFBQWEsR0FBRzVqRyxFQUFFUyxLQUFLa2pHLGtCQUFrQmxqRyxLQUFLcWpHLFFBQVFsaEMsRUFBRTVpRSxJQUFJODdELEVBQUVsaEUsVUFBVXVvRyxTQUFTLFNBQVN2Z0MsRUFBRTVpRSxHQUFHLElBQUk3RSxFQUFFc0YsS0FBS3lxRixLQUFLbHJGLEdBQUcsT0FBTzRpRSxFQUFFNXZELFVBQVUsRUFBRSxPQUFPN1gsR0FBR3luRSxFQUFFeC9ELEtBQUtqSSxJQUFJMmdFLEVBQUVsaEUsVUFBVTZJLE1BQU0sU0FBU20vRCxHQUFHLElBQUk1aUUsRUFBRVMsS0FBS3FqRyxRQUFRbGhDLEVBQUVuaUUsS0FBS21qRyxZQUFZLE9BQU81akcsRUFBRVMsS0FBS21qRyxZQUFZNWpHLEVBQUUsR0FBR3RELE9BQU9zRCxFQUFFLEtBQUtBLEdBQUc4N0QsRUFBRWxoRSxVQUFVb29HLEtBQUssU0FBU3BnQyxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFcS9ELEVBQUUsR0FBRyxPQUFPOEcsSUFBSW5tRSxFQUFFZ0UsS0FBS2dELE1BQU1tL0QsTUFBTTlHLEdBQUdyL0QsRUFBRSxLQUFLdUQsSUFBSXZELEdBQUdtbUUsSUFBSTlHLEdBQUdyN0QsS0FBS3VqRyxVQUFVaGtHLEVBQUU3RSxJQUFJMmdFLEdBQUdBLEVBQUVsaEUsVUFBVW9wRyxVQUFVLFNBQVNwaEMsRUFBRTVpRSxHQUFHLElBQUk3RSxFQUFFc0IsRUFBRWdFLEtBQUttakcsV0FBV2hoQyxFQUFFNXZELFVBQVV2UyxLQUFLbWpHLFdBQVcsSUFBSTluQyxFQUFFOEcsRUFBRTd4QixLQUFLdHdDLEtBQUtpakcsU0FBUyxPQUFPNW5DLEdBQUdyL0QsRUFBRXEvRCxFQUFFNytELE1BQU0rQyxJQUFJdkQsR0FBR3EvRCxFQUFFLEdBQUdwL0QsU0FBU0QsRUFBRWdFLEtBQUtrakcsZUFBZXhvRyxFQUFFc0YsS0FBS2lqRyxRQUFRMzBELFVBQVV0dUMsS0FBS21qRyxXQUFXbm5HLEdBQUdnRSxLQUFLbWpHLFdBQVdubkcsRUFBRXRCLEdBQUcyZ0UsRUFBRWxoRSxVQUFVcXBHLGVBQWUsU0FBU3JoQyxHQUFHLE9BQU9uaUUsS0FBS3VqRyxVQUFVcGhDLEdBQUUsSUFBSzlHLEVBQUVsaEUsVUFBVXNwRyxXQUFXLFNBQVN0aEMsRUFBRTVpRSxHQUFHLElBQUk3RSxFQUFFLEtBQUsyZ0UsRUFBRSxJQUFJLE9BQU85N0QsR0FBR3ZELElBQUlxL0QsRUFBRSxLQUFLLGlCQUFpQjhHLEdBQUcsS0FBS0EsRUFBRXpuRSxFQUFFLElBQUlvSCxPQUFPcWdFLEVBQUU5RyxHQUFHOEcsSUFBSXpuRSxFQUFFLElBQUlvSCxPQUFPcWdFLEVBQUVydkQsT0FBT3VvRCxJQUFJM2dFLEdBQUcyZ0UsRUFBRWxoRSxVQUFVdXBHLG1CQUFtQixTQUFTdmhDLEdBQUcsT0FBT3JnRSxPQUFPcWdFLEVBQUVobEUsUUFBUSx5QkFBeUIsVUFBVWsrRCxFQUFFbGhFLFVBQVV3cEcsZUFBZSxTQUFTeGhDLEdBQUcsSUFBSTVpRSxFQUFFUyxLQUFLbWpHLFdBQVd6b0csRUFBRXNGLEtBQUt3akcsZUFBZXJoQyxHQUFHLE9BQU9uaUUsS0FBS21qRyxXQUFXNWpHLEVBQUU3RSxHQUFHMmdFLEVBQUVsaEUsVUFBVXlwRyxTQUFTLFNBQVN6aEMsR0FBRyxJQUFJNWlFLEVBQUVTLEtBQUttakcsV0FBVyxFQUFFLE9BQU81akcsR0FBRzRpRSxFQUFFbG1FLFFBQVErRCxLQUFLaWpHLFFBQVEzMEQsVUFBVS91QyxFQUFFNGlFLEVBQUVsbUUsT0FBT3NELEdBQUdyRCxnQkFBZ0JpbUUsR0FBR0EsRUFBRXhtQixRQUFRdWtELGFBQWE3a0MsR0FBRyxTQUFTOEcsRUFBRTVpRSxFQUFFN0UsR0FBRyxhQUFhLElBQUlzQixFQUFFdEIsRUFBRSxHQUFHd2xHLGFBQWE3a0MsRUFBRTNnRSxFQUFFLEdBQUcwckUsTUFBTXBvRSxFQUFFdEQsRUFBRSxJQUFJbXBHLFlBQVlsZ0UsRUFBRWpwQyxFQUFFLElBQUlvcEcsa0JBQWtCNW5FLEVBQUUsQ0FBQ3lwQixNQUFNLFdBQVcyNkMsSUFBSSxTQUFTL0csSUFBSSxVQUFVL3hCLEVBQUUsU0FBU3JGLEVBQUU1aUUsR0FBR1MsS0FBS3lnRyxPQUFPLElBQUl6a0csRUFBRW1tRSxHQUFHbmlFLEtBQUt3Z0QsU0FBU2poRCxHQUFHLEdBQUdTLEtBQUsrakcsU0FBUyxLQUFLL2pHLEtBQUt1Z0csVUFBVSxHQUFHdmdHLEtBQUt1Z0csVUFBVWgwRCxXQUFXLElBQUk1SSxFQUFFM2pDLEtBQUt5Z0csU0FBU2o1QixFQUFFcnRFLFVBQVVxOUYsU0FBUyxXQUFXLElBQUlyMUIsRUFBRW5pRSxLQUFLeWdHLE9BQU8yQyxVQUFVcGpHLEtBQUsrakcsU0FBUyxJQUFJL2xHLEVBQUVnQyxLQUFLcTNGLFNBQVMsSUFBSSxJQUFJOTNGLEVBQUUsSUFBSTg3RCxFQUFFbi9CLEVBQUV5cEIsTUFBTSxJQUFJanJELEVBQUUsS0FBS3NCLEVBQUUsR0FBRzJuQyxFQUFFLElBQUkzbEMsRUFBRXVCLEVBQUU4TCxPQUFPNndCLEVBQUVxOUQsS0FBSyxDQUFDLElBQUlwM0IsRUFBRW5pRSxLQUFLNGhHLGdCQUFnQnJpRyxFQUFFN0UsR0FBR3NGLEtBQUt5aEcsWUFBWXQvQixJQUFJeCtCLEVBQUVwL0IsSUFBSTQ5RCxHQUFHQSxFQUFFbmlFLEtBQUs0aEcsZ0JBQWdCcmlHLEVBQUU3RSxHQUFHaXBDLEVBQUV5K0MsWUFBWWpnQixFQUFFMjNCLGdCQUFnQm4yRCxFQUFFQSxFQUFFLElBQUkzbEMsR0FBR21rRSxFQUFFMTdELE9BQU8vTCxFQUFFc0YsS0FBSzBoRyxZQUFZdi9CLElBQUlubUUsRUFBRWdKLEtBQUt0SyxHQUFHQSxFQUFFeW5FLEdBQUd6bkUsR0FBR3NGLEtBQUsyaEcsWUFBWXgvQixFQUFFem5FLEtBQUt5bkUsRUFBRTY1QixPQUFPdGhHLEVBQUVBLEVBQUVza0csT0FBTzc4QixFQUFFem5FLEVBQUVzQixFQUFFMEosTUFBTXk4RCxFQUFFMTdELE9BQU8vTCxHQUFHeW5FLEVBQUU2NEIsU0FBU3o3RixFQUFFQSxFQUFFZ1YsS0FBSzR0RCxFQUFFbmlFLEtBQUsrakcsU0FBU3gvRixJQUFJNDlELEdBQUc1aUUsRUFBRTRpRSxFQUFFLE9BQU9uaUUsS0FBSytqRyxVQUFVdjhCLEVBQUVydEUsVUFBVXFvRyxnQkFBZ0IsV0FBVyxPQUFPeGlHLEtBQUsrakcsU0FBUzNoQixXQUFXNWEsRUFBRXJ0RSxVQUFVazlGLE9BQU8sYUFBYTd2QixFQUFFcnRFLFVBQVV5bkcsZ0JBQWdCLFNBQVN6L0IsRUFBRTVpRSxHQUFHUyxLQUFLNmhHLGtCQUFrQixJQUFJbm5HLEVBQUVzRixLQUFLeWdHLE9BQU84QixLQUFLLE9BQU8sT0FBTzduRyxFQUFFc0YsS0FBSzhoRyxjQUFjNWxFLEVBQUVva0UsSUFBSTVsRyxHQUFHc0YsS0FBSzhoRyxjQUFjNWxFLEVBQUVxOUQsSUFBSSxLQUFLL3hCLEVBQUVydEUsVUFBVXNuRyxZQUFZLFNBQVN0L0IsR0FBRyxPQUFNLEdBQUlxRixFQUFFcnRFLFVBQVV1bkcsWUFBWSxTQUFTdi9CLEdBQUcsT0FBTSxHQUFJcUYsRUFBRXJ0RSxVQUFVd25HLFlBQVksU0FBU3gvQixFQUFFNWlFLEdBQUcsT0FBTSxHQUFJaW9FLEVBQUVydEUsVUFBVTJuRyxjQUFjLFNBQVMzL0IsRUFBRTVpRSxHQUFHLE9BQU8sSUFBSTg3RCxFQUFFOEcsRUFBRTVpRSxFQUFFUyxLQUFLdWdHLFVBQVVoMEQsV0FBV3kzRCxjQUFjaGtHLEtBQUt1Z0csVUFBVWgwRCxXQUFXMDNELDBCQUEwQno4QixFQUFFcnRFLFVBQVUwbkcsZ0JBQWdCLFdBQVcsT0FBTzdoRyxLQUFLdWdHLFVBQVVoMEQsV0FBV2cyRCxRQUFRcGdDLEVBQUV4bUIsUUFBUW81QyxVQUFVdnRCLEVBQUVyRixFQUFFeG1CLFFBQVF1NUMsTUFBTWg1RCxHQUFHLFNBQVNpbUMsRUFBRTVpRSxFQUFFN0UsR0FBRyxhQUFhLFNBQVNzQixFQUFFbW1FLEdBQUduaUUsS0FBSytqRyxTQUFTLEdBQUcvakcsS0FBS2trRyxnQkFBZ0Jsa0csS0FBSytqRyxTQUFTOW5HLE9BQU8rRCxLQUFLbWpHLFdBQVcsRUFBRW5qRyxLQUFLbWtHLGVBQWVoaUMsRUFBRW5tRSxFQUFFN0IsVUFBVWlwRyxRQUFRLFdBQVdwakcsS0FBS21qRyxXQUFXLEdBQUdubkcsRUFBRTdCLFVBQVVpb0YsUUFBUSxXQUFXLE9BQU8sSUFBSXBpRixLQUFLa2tHLGlCQUFpQmxvRyxFQUFFN0IsVUFBVXNvRyxRQUFRLFdBQVcsT0FBT3ppRyxLQUFLbWpHLFdBQVduakcsS0FBS2trRyxpQkFBaUJsb0csRUFBRTdCLFVBQVVvYSxLQUFLLFdBQVcsSUFBSTR0RCxFQUFFLEtBQUssT0FBT25pRSxLQUFLeWlHLFlBQVl0Z0MsRUFBRW5pRSxLQUFLK2pHLFNBQVMvakcsS0FBS21qRyxZQUFZbmpHLEtBQUttakcsWUFBWSxHQUFHaGhDLEdBQUdubUUsRUFBRTdCLFVBQVVzd0YsS0FBSyxTQUFTdG9CLEdBQUcsSUFBSTVpRSxFQUFFLEtBQUssT0FBTzRpRSxFQUFFQSxHQUFHLEdBQUdBLEdBQUduaUUsS0FBS21qRyxhQUFhLEdBQUdoaEMsRUFBRW5pRSxLQUFLa2tHLGtCQUFrQjNrRyxFQUFFUyxLQUFLK2pHLFNBQVM1aEMsSUFBSTVpRSxHQUFHdkQsRUFBRTdCLFVBQVVvSyxJQUFJLFNBQVM0OUQsR0FBR25pRSxLQUFLbWtHLGlCQUFpQmhpQyxFQUFFMTdELE9BQU96RyxLQUFLbWtHLGdCQUFnQm5rRyxLQUFLK2pHLFNBQVMvK0YsS0FBS205RCxHQUFHbmlFLEtBQUtra0csaUJBQWlCLEdBQUcvaEMsRUFBRXhtQixRQUFRa29ELFlBQVk3bkcsR0FBRyxTQUFTbW1FLEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYSxJQUFJc0IsRUFBRXRCLEVBQUUsSUFBSTBsRyxRQUFRLFNBQVMva0MsRUFBRThHLEVBQUU1aUUsR0FBR3ZELEVBQUUxQixLQUFLMEYsS0FBS21pRSxFQUFFNWlFLEdBQUdBLEVBQUVTLEtBQUtva0csYUFBYXBrRyxLQUFLeWdHLE9BQU9nRCxXQUFXbGtHLEVBQUU2a0csY0FBY3BrRyxLQUFLcWtHLDBCQUEwQixHQUFHLElBQUlya0csS0FBS2drRyxjQUFjLEVBQUVoa0csS0FBS2lrRyx3QkFBd0IsR0FBRzVvQyxFQUFFbGhFLFVBQVUsSUFBSTZCLEVBQUVxL0QsRUFBRWxoRSxVQUFVa3FHLDBCQUEwQixTQUFTbGlDLEVBQUU1aUUsR0FBRzRpRSxHQUFHLE9BQU81aUUsR0FBRyxTQUFTUyxLQUFLc2tHLGVBQWV0a0csS0FBS3lnRyxPQUFPZ0QsV0FBVyxJQUFJdGhDLEVBQUU1aUUsRUFBRSxNQUFLLEdBQUlTLEtBQUt1a0csZ0JBQWdCdmtHLEtBQUt5Z0csT0FBT2dELFdBQVcsV0FBV2xrRyxFQUFFLE1BQU04N0QsRUFBRWxoRSxVQUFVb29HLEtBQUssV0FBV3ZpRyxLQUFLZ2tHLGNBQWMsRUFBRWhrRyxLQUFLaWtHLHdCQUF3QixHQUFHLElBQUk5aEMsRUFBRW5pRSxLQUFLeWdHLE9BQU84QixLQUFLdmlHLEtBQUtza0csZ0JBQWdCLEdBQUcsTUFBTW5pQyxFQUFFbmlFLEtBQUtpa0csd0JBQXdCLFNBQVMsR0FBRzloQyxFQUFFLENBQUMsSUFBSTVpRSxFQUFFUyxLQUFLd2tHLFFBQVF4a0csS0FBS3VrRyxnQkFBZ0JwaUMsR0FBR25pRSxLQUFLZ2tHLGNBQWN6a0csRUFBRXRELE9BQU8sRUFBRStELEtBQUtpa0csd0JBQXdCMWtHLEVBQUVTLEtBQUtna0csZUFBZSxPQUFPN2hDLEdBQUc5RyxFQUFFbGhFLFVBQVVxbUcsU0FBUyxTQUFTcitCLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXNGLEtBQUt5a0csVUFBVSxPQUFPL3BHLEVBQUUycEcsMEJBQTBCbGlDLEVBQUU1aUUsR0FBRzdFLEVBQUVtdUIsVUFBVW51QixHQUFHMmdFLEVBQUVsaEUsVUFBVXNxRyxRQUFRLFdBQVcsT0FBTyxJQUFJcHBDLEVBQUVyN0QsS0FBS3lnRyxPQUFPemdHLE9BQU9xN0QsRUFBRWxoRSxVQUFVcXFHLFFBQVEsU0FBU3JpQyxFQUFFNWlFLEdBQUc0aUUsRUFBRTV2RCxVQUFVLEVBQUUsSUFBSSxJQUFJN1gsRUFBRSxFQUFFc0IsRUFBRSxHQUFHcS9ELEVBQUU4RyxFQUFFN3hCLEtBQUsvd0MsR0FBRzg3RCxHQUFHci9ELEVBQUVnSixLQUFLekYsRUFBRSt1QyxVQUFVNXpDLEVBQUUyZ0UsRUFBRTcrRCxRQUFROUIsRUFBRTJnRSxFQUFFNytELE1BQU02K0QsRUFBRSxHQUFHcC9ELE9BQU9vL0QsRUFBRThHLEVBQUU3eEIsS0FBSy93QyxHQUFHLE9BQU83RSxFQUFFNkUsRUFBRXRELE9BQU9ELEVBQUVnSixLQUFLekYsRUFBRSt1QyxVQUFVNXpDLEVBQUU2RSxFQUFFdEQsU0FBU0QsRUFBRWdKLEtBQUssSUFBSWhKLEdBQUdtbUUsRUFBRXhtQixRQUFRbW9ELGtCQUFrQnpvQyxHQUFHLFNBQVM4RyxFQUFFNWlFLEVBQUU3RSxHQUFHLGFBQWEsU0FBU3NCLEVBQUVtbUUsRUFBRTVpRSxHQUFHUyxLQUFLeWdHLE9BQU90K0IsRUFBRW5pRSxLQUFLMGtHLGtCQUFrQixLQUFLMWtHLEtBQUtza0csZUFBZSxLQUFLdGtHLEtBQUsya0csZUFBZSxLQUFLM2tHLEtBQUs0a0csY0FBYSxFQUFHcmxHLElBQUlTLEtBQUswa0csa0JBQWtCMWtHLEtBQUt5Z0csT0FBT2dELFdBQVdsa0csRUFBRW1sRyxtQkFBa0IsR0FBSTFrRyxLQUFLc2tHLGVBQWV0a0csS0FBS3lnRyxPQUFPZ0QsV0FBV2xrRyxFQUFFK2tHLGdCQUFlLEdBQUl0a0csS0FBSzJrRyxlQUFlM2tHLEtBQUt5Z0csT0FBT2dELFdBQVdsa0csRUFBRW9sRyxnQkFBZ0Iza0csS0FBSzRrRyxhQUFhcmxHLEVBQUVxbEcsY0FBYzVvRyxFQUFFN0IsVUFBVW9vRyxLQUFLLFdBQVcsSUFBSXBnQyxFQUFFbmlFLEtBQUt5Z0csT0FBTzhCLEtBQUt2aUcsS0FBSzBrRyxtQkFBbUIsT0FBTzFrRyxLQUFLMGtHLG9CQUFvQnZpQyxJQUFJQSxHQUFHbmlFLEtBQUt5Z0csT0FBTzhCLEtBQUt2aUcsS0FBS3NrRyxlQUFldGtHLEtBQUsya0csZUFBZTNrRyxLQUFLNGtHLGVBQWV6aUMsR0FBR25tRSxFQUFFN0IsVUFBVTZvRyxXQUFXLFdBQVcsT0FBT2hqRyxLQUFLeWdHLE9BQU96OUYsTUFBTWhELEtBQUtza0csaUJBQWlCdG9HLEVBQUU3QixVQUFVNm1HLFlBQVksU0FBUzcrQixHQUFHLElBQUk1aUUsRUFBRVMsS0FBS3lrRyxVQUFVLE9BQU9sbEcsRUFBRXFsRyxjQUFhLEVBQUdybEcsRUFBRW9sRyxlQUFlM2tHLEtBQUt5Z0csT0FBT2dELFdBQVd0aEMsR0FBRzVpRSxFQUFFc3BCLFVBQVV0cEIsR0FBR3ZELEVBQUU3QixVQUFVMm1HLE1BQU0sU0FBUzMrQixHQUFHLElBQUk1aUUsRUFBRVMsS0FBS3lrRyxVQUFVLE9BQU9sbEcsRUFBRXFsRyxjQUFhLEVBQUdybEcsRUFBRW9sRyxlQUFlM2tHLEtBQUt5Z0csT0FBT2dELFdBQVd0aEMsR0FBRzVpRSxFQUFFc3BCLFVBQVV0cEIsR0FBR3ZELEVBQUU3QixVQUFVeW1HLGNBQWMsU0FBU3orQixHQUFHLElBQUk1aUUsRUFBRVMsS0FBS3lrRyxVQUFVLE9BQU9sbEcsRUFBRW1sRyxrQkFBa0Ixa0csS0FBS3lnRyxPQUFPZ0QsV0FBV3RoQyxHQUFFLEdBQUk1aUUsRUFBRXNwQixVQUFVdHBCLEdBQUd2RCxFQUFFN0IsVUFBVXFtRyxTQUFTLFNBQVNyK0IsR0FBRyxJQUFJNWlFLEVBQUVTLEtBQUt5a0csVUFBVSxPQUFPbGxHLEVBQUUra0csZUFBZXRrRyxLQUFLeWdHLE9BQU9nRCxXQUFXdGhDLEdBQUUsR0FBSTVpRSxFQUFFc3BCLFVBQVV0cEIsR0FBR3ZELEVBQUU3QixVQUFVc3FHLFFBQVEsV0FBVyxPQUFPLElBQUl6b0csRUFBRWdFLEtBQUt5Z0csT0FBT3pnRyxPQUFPaEUsRUFBRTdCLFVBQVUwdUIsUUFBUSxhQUFhczVDLEVBQUV4bUIsUUFBUXlrRCxRQUFRcGtHLEdBQUcsU0FBU21tRSxFQUFFNWlFLEVBQUU3RSxHQUFHLGFBQWEsU0FBU3NCLEVBQUVtbUUsRUFBRTVpRSxHQUFHNGlFLEVBQUUsaUJBQWlCQSxFQUFFQSxFQUFFQSxFQUFFcnZELE9BQU92VCxFQUFFLGlCQUFpQkEsRUFBRUEsRUFBRUEsRUFBRXVULE9BQU85UyxLQUFLNmtHLDJCQUEyQixJQUFJL2lHLE9BQU9xZ0UsRUFBRSwwQkFBMEJydkQsT0FBT3ZULEVBQUUsS0FBS1MsS0FBSzhrRyxvQkFBb0Isa0JBQWtCOWtHLEtBQUsra0csZ0NBQWdDLElBQUlqakcsT0FBT3FnRSxFQUFFLDJCQUEyQnJ2RCxPQUFPdlQsRUFBRSxLQUFLdkQsRUFBRTdCLFVBQVV3b0csZUFBZSxTQUFTeGdDLEdBQUcsSUFBSUEsRUFBRW4vRCxNQUFNaEQsS0FBSzZrRyw0QkFBNEIsT0FBTyxLQUFLLElBQUl0bEcsRUFBRSxHQUFHUyxLQUFLOGtHLG9CQUFvQnZ5RixVQUFVLEVBQUUsSUFBSSxJQUFJN1gsRUFBRXNGLEtBQUs4a0csb0JBQW9CeDBELEtBQUs2eEIsR0FBR3puRSxHQUFHNkUsRUFBRTdFLEVBQUUsSUFBSUEsRUFBRSxHQUFHQSxFQUFFc0YsS0FBSzhrRyxvQkFBb0J4MEQsS0FBSzZ4QixHQUFHLE9BQU81aUUsR0FBR3ZELEVBQUU3QixVQUFVeW9HLFlBQVksU0FBU3pnQyxHQUFHLE9BQU9BLEVBQUVxaEMsZUFBZXhqRyxLQUFLK2tHLGtDQUFrQzVpQyxFQUFFeG1CLFFBQVF3a0QsV0FBV25rRyxHQUFHLFNBQVNtbUUsRUFBRTVpRSxFQUFFN0UsR0FBRyxhQUFhLElBQUlzQixFQUFFdEIsRUFBRSxJQUFJMGxHLFFBQVEva0MsRUFBRSxDQUFDMnBDLFFBQU8sRUFBR0MsS0FBSSxFQUFHQyxZQUFXLEVBQUdDLEtBQUksR0FBSSxTQUFTbm5HLEVBQUVta0UsRUFBRTVpRSxHQUFHdkQsRUFBRTFCLEtBQUswRixLQUFLbWlFLEVBQUU1aUUsR0FBR1MsS0FBS29sRyxtQkFBbUIsS0FBS3BsRyxLQUFLcWxHLFVBQVU3ckcsT0FBTzhyRyxPQUFPLEdBQUdqcUMsR0FBR3I3RCxLQUFLdWxHLFVBQVUvckcsT0FBTzhyRyxPQUFPLEdBQUdqcUMsR0FBRzk3RCxJQUFJUyxLQUFLb2xHLG1CQUFtQnBsRyxLQUFLeWdHLE9BQU9nRCxXQUFXbGtHLEVBQUU2bEcsb0JBQW9CcGxHLEtBQUt1bEcsVUFBVS9yRyxPQUFPOHJHLE9BQU90bEcsS0FBS3VsRyxVQUFVaG1HLEVBQUVnbUcsV0FBV3ZsRyxLQUFLcWxHLFVBQVU3ckcsT0FBTzhyRyxPQUFPdGxHLEtBQUtxbEcsVUFBVTlsRyxFQUFFOGxHLFlBQVksSUFBSTNxRyxFQUFFLElBQUlzQixFQUFFbW1FLEdBQUduaUUsS0FBSzJnRyxXQUFXLENBQUM2RSxtQkFBbUI5cUcsRUFBRWttRyxjQUFjLFNBQVNJLFlBQVksUUFBUXlFLHFCQUFxQi9xRyxFQUFFa21HLGNBQWMsT0FBT0ksWUFBWSxPQUFPa0UsV0FBV3hxRyxFQUFFa21HLGNBQWMsTUFBTUksWUFBWSxNQUFNbUUsSUFBSXpxRyxFQUFFa21HLGNBQWMsa0JBQWtCSSxZQUFZLE9BQU9pRSxJQUFJdnFHLEVBQUVrbUcsY0FBYyxVQUFVSSxZQUFZLFVBQVVnRSxPQUFPdHFHLEVBQUVrbUcsY0FBYyxNQUFNSSxZQUFZLE1BQU0wRSxhQUFhaHJHLEVBQUVrbUcsY0FBYyxNQUFNSSxZQUFZLE1BQU0yRSxlQUFlanJHLEVBQUVrbUcsY0FBYyxNQUFNSSxZQUFZLE9BQU9oakcsRUFBRTdELFVBQVUsSUFBSTZCLEVBQUVnQyxFQUFFN0QsVUFBVXNxRyxRQUFRLFdBQVcsT0FBTyxJQUFJem1HLEVBQUVnQyxLQUFLeWdHLE9BQU96Z0csT0FBT2hDLEVBQUU3RCxVQUFVMHVCLFFBQVEsV0FBVzdvQixLQUFLNGxHLDJCQUEyQjVuRyxFQUFFN0QsVUFBVTByRyxRQUFRLFNBQVMxakMsR0FBRyxJQUFJNWlFLEVBQUVTLEtBQUt5a0csVUFBVSxPQUFPbGxHLEVBQUU4bEcsVUFBVWxqQyxJQUFHLEVBQUc1aUUsRUFBRXNwQixVQUFVdHBCLEdBQUd2QixFQUFFN0QsVUFBVXVtRyxhQUFhLFNBQVN2K0IsR0FBRyxJQUFJNWlFLEVBQUVTLEtBQUt5a0csVUFBVSxJQUFJLElBQUkvcEcsS0FBSzJnRSxFQUFFOTdELEVBQUU4bEcsVUFBVTNxRyxJQUFJLElBQUl5bkUsRUFBRTA5QixXQUFXcGpHLFFBQVEvQixHQUFHLE9BQU82RSxFQUFFc3BCLFVBQVV0cEIsR0FBR3ZCLEVBQUU3RCxVQUFVMHZCLFFBQVEsU0FBU3M0QyxHQUFHLElBQUk1aUUsRUFBRVMsS0FBS3lrRyxVQUFVLE9BQU9sbEcsRUFBRWdtRyxVQUFVcGpDLElBQUcsRUFBRzVpRSxFQUFFc3BCLFVBQVV0cEIsR0FBR3ZCLEVBQUU3RCxVQUFVb29HLEtBQUssV0FBVyxJQUFJcGdDLEVBQUUsR0FBR0EsRUFBRW5pRSxLQUFLc2tHLGVBQWV0a0csS0FBS3lnRyxPQUFPOEIsS0FBS3ZpRyxLQUFLMGtHLG1CQUFtQjFrRyxLQUFLeWdHLE9BQU84QixLQUFLdmlHLEtBQUswa0csa0JBQWtCMWtHLEtBQUtvbEcsb0JBQW9CLElBQUksSUFBSTdsRyxFQUFFUyxLQUFLOGxHLGlCQUFpQnZtRyxHQUFHUyxLQUFLc2tHLGVBQWUva0csR0FBR1MsS0FBS3lnRyxPQUFPOEIsS0FBS3ZpRyxLQUFLc2tHLGdCQUFnQi9rRyxHQUFHUyxLQUFLeWdHLE9BQU84QyxVQUFVdmpHLEtBQUtvbEcsb0JBQW9CampDLEdBQUc1aUUsRUFBRUEsRUFBRVMsS0FBSzhsRyxpQkFBaUIsT0FBTzlsRyxLQUFLNGtHLGVBQWV6aUMsR0FBR25pRSxLQUFLeWdHLE9BQU8rQyxlQUFleGpHLEtBQUsya0csaUJBQWlCeGlDLEdBQUdua0UsRUFBRTdELFVBQVV5ckcsd0JBQXdCLFdBQVcsSUFBSXpqQyxFQUFFLEdBQUduaUUsS0FBS3FsRyxVQUFVRixLQUFLaGpDLEVBQUVuOUQsS0FBS2hGLEtBQUsyZ0csV0FBV3dFLElBQUlULGtCQUFrQjV4RixRQUFROVMsS0FBS3FsRyxVQUFVSCxZQUFZL2lDLEVBQUVuOUQsS0FBS2hGLEtBQUsyZ0csV0FBV3VFLFdBQVdSLGtCQUFrQjV4RixRQUFROVMsS0FBS3FsRyxVQUFVSixLQUFLOWlDLEVBQUVuOUQsS0FBS2hGLEtBQUsyZ0csV0FBV3NFLElBQUlQLGtCQUFrQjV4RixRQUFROVMsS0FBS3FsRyxVQUFVTCxTQUFTN2lDLEVBQUVuOUQsS0FBS2hGLEtBQUsyZ0csV0FBV3FFLE9BQU9OLGtCQUFrQjV4RixRQUFRcXZELEVBQUVuOUQsS0FBS2hGLEtBQUsyZ0csV0FBVytFLGFBQWFoQixrQkFBa0I1eEYsUUFBUXF2RCxFQUFFbjlELEtBQUtoRixLQUFLMmdHLFdBQVdnRixlQUFlakIsa0JBQWtCNXhGLFNBQVM5UyxLQUFLMmtHLGdCQUFnQnhpQyxFQUFFbjlELEtBQUtoRixLQUFLMmtHLGVBQWU3eEYsUUFBUTlTLEtBQUtvbEcsbUJBQW1CcGxHLEtBQUt5Z0csT0FBT2dELFdBQVcsTUFBTXRoQyxFQUFFanlDLEtBQUssS0FBSyxNQUFNbHlCLEVBQUU3RCxVQUFVMnJHLGVBQWUsV0FBVyxJQUFJM2pDLEVBQUUsR0FBRzVpRSxFQUFFUyxLQUFLeWdHLE9BQU9oVyxPQUFPLEdBQUcsTUFBTWxyRixFQUFFLENBQUMsSUFBSTdFLEVBQUVzRixLQUFLeWdHLE9BQU9oVyxLQUFLLEdBQUd6cUYsS0FBS3FsRyxVQUFVRixLQUFLbmxHLEtBQUt1bEcsVUFBVUosS0FBSyxNQUFNenFHLElBQUl5bkUsRUFBRUEsR0FBR25pRSxLQUFLMmdHLFdBQVd3RSxJQUFJNUMsUUFBUXZpRyxLQUFLcWxHLFVBQVVKLEtBQUtqbEcsS0FBS3VsRyxVQUFVTixLQUFLLE1BQU12cUcsSUFBSXluRSxFQUFFQSxHQUFHbmlFLEtBQUsyZ0csV0FBV3NFLElBQUkxQyxZQUFZLE1BQU1oakcsSUFBSVMsS0FBS3FsRyxVQUFVSCxZQUFZbGxHLEtBQUt1bEcsVUFBVUwsYUFBYS9pQyxHQUFHQSxHQUFHQSxFQUFFQSxHQUFHbmlFLEtBQUsyZ0csV0FBVzZFLG1CQUFtQmpELFNBQVN2aUcsS0FBSzJnRyxXQUFXOEUscUJBQXFCbEQsU0FBU3ZpRyxLQUFLMmdHLFdBQVd1RSxXQUFXM0MsUUFBUXZpRyxLQUFLcWxHLFVBQVVMLFNBQVNobEcsS0FBS3VsRyxVQUFVUCxRQUFRaGxHLEtBQUt1bEcsVUFBVUwsYUFBYS9pQyxFQUFFQSxHQUFHbmlFLEtBQUsyZ0csV0FBVytFLGFBQWFuRCxRQUFRdmlHLEtBQUt1bEcsVUFBVVAsU0FBUzdpQyxHQUFHQSxFQUFFQSxHQUFHbmlFLEtBQUsyZ0csV0FBV2dGLGVBQWVwRCxTQUFTdmlHLEtBQUsyZ0csV0FBV3FFLE9BQU96QyxVQUFVLE9BQU9wZ0MsR0FBR0EsRUFBRXhtQixRQUFRMGtELG1CQUFtQnJpRyxVQUFLLEtBQVVoQyxFQUFFLFdBQVcsTUFBTSxDQUFDbTNGLFlBQVk5M0IsSUFBSWw5RCxNQUFNb0IsRUFBRSxPQUFPNGlFLEVBQUV4bUIsUUFBUTMvQyxJQUFJLFNBQVNtbUUsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXEvRCxFQUFFQSxFQUFFLFNBQVM4RyxHQUFHLElBQUk1aUUsRUFBRSxHQUFHLFNBQVM3RSxFQUFFc0IsR0FBRyxHQUFHdUQsRUFBRXZELEdBQUcsT0FBT3VELEVBQUV2RCxHQUFHMi9DLFFBQVEsSUFBSTBmLEVBQUU5N0QsRUFBRXZELEdBQUcsQ0FBQ0EsRUFBRUEsRUFBRWlDLEdBQUUsRUFBRzA5QyxRQUFRLElBQUksT0FBT3dtQixFQUFFbm1FLEdBQUcxQixLQUFLK2dFLEVBQUUxZixRQUFRMGYsRUFBRUEsRUFBRTFmLFFBQVFqaEQsR0FBRzJnRSxFQUFFcDlELEdBQUUsRUFBR285RCxFQUFFMWYsUUFBUSxPQUFPamhELEVBQUV1NEIsRUFBRWt2QyxFQUFFem5FLEVBQUUyQyxFQUFFa0MsRUFBRTdFLEVBQUUyZSxFQUFFLFNBQVM4b0QsRUFBRTVpRSxFQUFFdkQsR0FBR3RCLEVBQUVpcEMsRUFBRXcrQixFQUFFNWlFLElBQUkvRixPQUFPa0ksZUFBZXlnRSxFQUFFNWlFLEVBQUUsQ0FBQ2tDLFlBQVcsRUFBRzRCLElBQUlySCxLQUFLdEIsRUFBRTJnRSxFQUFFLFNBQVM4RyxHQUFHLG9CQUFvQmwrRCxRQUFRQSxPQUFPZ2MsYUFBYXptQixPQUFPa0ksZUFBZXlnRSxFQUFFbCtELE9BQU9nYyxZQUFZLENBQUNsbUIsTUFBTSxXQUFXUCxPQUFPa0ksZUFBZXlnRSxFQUFFLGFBQWEsQ0FBQ3BvRSxPQUFNLEtBQU1XLEVBQUV5bkUsRUFBRSxTQUFTQSxFQUFFNWlFLEdBQUcsR0FBRyxFQUFFQSxJQUFJNGlFLEVBQUV6bkUsRUFBRXluRSxJQUFJLEVBQUU1aUUsRUFBRSxPQUFPNGlFLEVBQUUsR0FBRyxFQUFFNWlFLEdBQUcsaUJBQWlCNGlFLEdBQUdBLEdBQUdBLEVBQUVuaUQsV0FBVyxPQUFPbWlELEVBQUUsSUFBSW5tRSxFQUFFeEMsT0FBT3FDLE9BQU8sTUFBTSxHQUFHbkIsRUFBRTJnRSxFQUFFci9ELEdBQUd4QyxPQUFPa0ksZUFBZTFGLEVBQUUsVUFBVSxDQUFDeUYsWUFBVyxFQUFHMUgsTUFBTW9vRSxJQUFJLEVBQUU1aUUsR0FBRyxpQkFBaUI0aUUsRUFBRSxJQUFJLElBQUk5RyxLQUFLOEcsRUFBRXpuRSxFQUFFMmUsRUFBRXJkLEVBQUVxL0QsRUFBRSxTQUFTOTdELEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUkzQixLQUFLLEtBQUt5OUQsSUFBSSxPQUFPci9ELEdBQUd0QixFQUFFQSxFQUFFLFNBQVN5bkUsR0FBRyxJQUFJNWlFLEVBQUU0aUUsR0FBR0EsRUFBRW5pRCxXQUFXLFdBQVcsT0FBT21pRCxFQUFFMTBELFNBQVMsV0FBVyxPQUFPMDBELEdBQUcsT0FBT3puRSxFQUFFMmUsRUFBRTlaLEVBQUUsSUFBSUEsR0FBR0EsR0FBRzdFLEVBQUVpcEMsRUFBRSxTQUFTdytCLEVBQUU1aUUsR0FBRyxPQUFPL0YsT0FBT1csVUFBVXdDLGVBQWVyQyxLQUFLNm5FLEVBQUU1aUUsSUFBSTdFLEVBQUUyVSxFQUFFLEdBQUczVSxFQUFFQSxFQUFFd2hDLEVBQUUsSUFBajVCLENBQXM1QixDQUFDLENBQUMsQ0FBQyxTQUFTaW1DLEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYSxTQUFTc0IsRUFBRW1tRSxHQUFHbmlFLEtBQUswOEYsU0FBU3Y2QixFQUFFbmlFLEtBQUsyOEYsa0JBQWtCLEVBQUUzOEYsS0FBSzQ4RixnQkFBZ0IsRUFBRTU4RixLQUFLNjhGLGtCQUFrQixFQUFFNzhGLEtBQUs4OEYsbUJBQW1CLEVBQUU5OEYsS0FBSys4Riw2QkFBNkIsRUFBRS84RixLQUFLZzlGLDJCQUEyQixFQUFFaDlGLEtBQUtpOUYsNkJBQTZCLEVBQUVqOUYsS0FBS2s5RixRQUFRLEdBQUcsU0FBUzdoQyxFQUFFOEcsRUFBRTVpRSxHQUFHUyxLQUFLbTlGLFFBQVEsQ0FBQyxJQUFJbjlGLEtBQUtvOUYsY0FBY2o3QixFQUFFazdCLFlBQVlyOUYsS0FBS3M5RixnQkFBZ0JuN0IsRUFBRW83QixZQUFZcDdCLEVBQUVxN0IsbUJBQW1CeDlGLEtBQUtzOUYsZ0JBQWdCLElBQUluaUcsTUFBTWduRSxFQUFFazdCLFlBQVksR0FBR250RSxLQUFLaXlDLEVBQUVvN0IsY0FBY2grRixFQUFFQSxHQUFHLEdBQUc0aUUsRUFBRXM3QixhQUFhLElBQUlsK0YsRUFBRSxJQUFJcEUsTUFBTWduRSxFQUFFczdCLGFBQWEsR0FBR3Z0RSxLQUFLbHdCLEtBQUtzOUYsa0JBQWtCdDlGLEtBQUswOUYsY0FBY24rRixFQUFFUyxLQUFLMjlGLHFCQUFxQnArRixFQUFFdEQsT0FBTyxTQUFTK0IsRUFBRW1rRSxFQUFFNWlFLEdBQUdTLEtBQUs0OUYsZUFBZSxJQUFJdmlDLEVBQUU4RyxFQUFFNWlFLEdBQUdTLEtBQUswRyxLQUFJLEVBQUcxRyxLQUFLNjlGLGtCQUFrQjE3QixFQUFFMjdCLGlCQUFpQjk5RixLQUFLcTlGLFlBQVlsN0IsRUFBRWs3QixZQUFZcjlGLEtBQUtvNkYsaUJBQWlCajRCLEVBQUVpNEIsaUJBQWlCcDZGLEtBQUsrOUYsbUJBQW1CNTdCLEVBQUU0N0IsbUJBQW1CLzlGLEtBQUtnK0YsUUFBUSxHQUFHaCtGLEtBQUtpN0YsY0FBYyxLQUFLajdGLEtBQUt5NkYsYUFBYSxLQUFLejZGLEtBQUtpK0YsVUFBVSxJQUFJamlHLEVBQUVnRSxNQUFNQSxLQUFLNDZGLG9CQUFtQixFQUFHNTZGLEtBQUtvN0Ysb0JBQW1CLEVBQUdwN0YsS0FBS3E3Rix3QkFBdUIsRUFBR3I3RixLQUFLaytGLG1CQUFtQmxpRyxFQUFFN0IsVUFBVWdrRyxZQUFZLFdBQVcsSUFBSWg4QixFQUFFLElBQUlubUUsRUFBRWdFLEtBQUswOEYsVUFBVSxPQUFPdjZCLEVBQUV1NEIsV0FBVzE2RixLQUFLNDhGLGVBQWU1OEYsS0FBSzY4RixtQkFBbUIxNkIsR0FBR25tRSxFQUFFN0IsVUFBVW9DLEtBQUssU0FBUzRsRSxHQUFHLE9BQU9BLEVBQUUsRUFBRW5pRSxLQUFLazlGLFFBQVFsOUYsS0FBS2s5RixRQUFRamhHLE9BQU9rbUUsR0FBR25pRSxLQUFLazlGLFFBQVEvNkIsSUFBSW5tRSxFQUFFN0IsVUFBVWlrRyxVQUFVLFNBQVNqOEIsR0FBRyxJQUFJLElBQUk1aUUsRUFBRVMsS0FBS2s5RixRQUFRamhHLE9BQU8sRUFBRXNELEdBQUcsRUFBRUEsSUFBSSxHQUFHUyxLQUFLazlGLFFBQVEzOUYsR0FBR3lELE1BQU1tL0QsR0FBRyxPQUFNLEVBQUcsT0FBTSxHQUFJbm1FLEVBQUU3QixVQUFVdWdHLFdBQVcsU0FBU3Y0QixFQUFFNWlFLEdBQUdTLEtBQUtrN0YsYUFBYWw3RixLQUFLNDhGLGVBQWV6NkIsR0FBRyxFQUFFbmlFLEtBQUs2OEYsa0JBQWtCdDlGLEdBQUcsRUFBRVMsS0FBSzI4RixrQkFBa0IzOEYsS0FBSzA4RixTQUFTMkIsZ0JBQWdCcitGLEtBQUs0OEYsZUFBZTU4RixLQUFLNjhGLHFCQUFxQjdnRyxFQUFFN0IsVUFBVW1rRyxnQkFBZ0IsV0FBV3QrRixLQUFLMDhGLFNBQVN0QyxtQkFBbUJwNkYsS0FBSzg4RixtQkFBbUI5OEYsS0FBS2s5RixRQUFRamhHLE9BQU8rRCxLQUFLKzhGLDZCQUE2Qi84RixLQUFLMjhGLGtCQUFrQjM4RixLQUFLZzlGLDBCQUEwQmg5RixLQUFLMDhGLFNBQVN1QixVQUFVckIsZUFBZTU4RixLQUFLaTlGLDZCQUE2Qmo5RixLQUFLMDhGLFNBQVN1QixVQUFVcEIsb0JBQW9CN2dHLEVBQUU3QixVQUFVb2tHLGFBQWEsV0FBVyxPQUFPditGLEtBQUs4OEYsb0JBQW9COThGLEtBQUsyOEYsa0JBQWtCMzhGLEtBQUswOEYsU0FBU3RDLGtCQUFrQnA2RixLQUFLKzhGLDZCQUE2Qi84RixLQUFLMDhGLFNBQVN1QixVQUFVdEIsbUJBQW1CM2dHLEVBQUU3QixVQUFVcWtHLFlBQVksV0FBVyxHQUFHeCtGLEtBQUt1K0YsZUFBZSxDQUFDditGLEtBQUswOEYsU0FBU25DLGVBQWUsSUFBSXA0QixFQUFFbmlFLEtBQUswOEYsU0FBU2pDLGFBQWEsT0FBT3Q0QixFQUFFdTRCLFdBQVcxNkYsS0FBS2c5RiwwQkFBMEJoOUYsS0FBS2k5Riw4QkFBOEI5NkIsRUFBRSs2QixRQUFRbDlGLEtBQUtrOUYsUUFBUXovRixNQUFNdUMsS0FBSzg4RixvQkFBb0I5OEYsS0FBS2s5RixRQUFRbDlGLEtBQUtrOUYsUUFBUXovRixNQUFNLEVBQUV1QyxLQUFLODhGLG9CQUFvQjM2QixFQUFFdzZCLG1CQUFtQjM4RixLQUFLMjhGLGtCQUFrQjM4RixLQUFLKzhGLDZCQUE2Qi84RixLQUFLMjhGLGtCQUFrQjM4RixLQUFLKzhGLDZCQUE2QixNQUFNNTZCLEVBQUUrNkIsUUFBUSxLQUFLLzZCLEVBQUUrNkIsUUFBUXhnRyxPQUFPLEVBQUUsR0FBR3lsRSxFQUFFdzZCLG1CQUFtQixJQUFHLEVBQUcsT0FBTSxHQUFJM2dHLEVBQUU3QixVQUFVK2dHLFNBQVMsV0FBVyxPQUFPLElBQUlsN0YsS0FBS2s5RixRQUFRamhHLFFBQVFELEVBQUU3QixVQUFVcVksS0FBSyxXQUFXLE9BQU94UyxLQUFLazdGLFdBQVcsS0FBS2w3RixLQUFLazlGLFFBQVFsOUYsS0FBS2s5RixRQUFRamhHLE9BQU8sSUFBSUQsRUFBRTdCLFVBQVU2SyxLQUFLLFNBQVNtOUQsR0FBR25pRSxLQUFLazlGLFFBQVFsNEYsS0FBS205RCxHQUFHLElBQUk1aUUsRUFBRTRpRSxFQUFFaHRDLFlBQVksT0FBTyxJQUFJNTFCLEVBQUVTLEtBQUsyOEYsa0JBQWtCeDZCLEVBQUVsbUUsT0FBT3NELEVBQUVTLEtBQUsyOEYsbUJBQW1CeDZCLEVBQUVsbUUsUUFBUUQsRUFBRTdCLFVBQVV1TCxJQUFJLFdBQVcsSUFBSXk4RCxFQUFFLEtBQUssT0FBT25pRSxLQUFLazdGLGFBQWEvNEIsRUFBRW5pRSxLQUFLazlGLFFBQVF4M0YsTUFBTTFGLEtBQUsyOEYsbUJBQW1CeDZCLEVBQUVsbUUsUUFBUWttRSxHQUFHbm1FLEVBQUU3QixVQUFVc2tHLGVBQWUsV0FBV3orRixLQUFLNDhGLGVBQWUsSUFBSTU4RixLQUFLNDhGLGdCQUFnQixFQUFFNThGLEtBQUsyOEYsbUJBQW1CMzhGLEtBQUswOEYsU0FBU1csY0FBY3JoRyxFQUFFN0IsVUFBVXVrRyxvQkFBb0IsV0FBVzErRixLQUFLZzlGLDBCQUEwQixJQUFJaDlGLEtBQUtnOUYsMkJBQTJCLElBQUloaEcsRUFBRTdCLFVBQVVzNEIsS0FBSyxXQUFXLEtBQUssTUFBTXp5QixLQUFLd1MsUUFBUXhTLEtBQUtrOUYsUUFBUXgzRixNQUFNMUYsS0FBSzI4RixtQkFBbUIsR0FBRzNnRyxFQUFFN0IsVUFBVUMsU0FBUyxXQUFXLElBQUkrbkUsRUFBRSxHQUFHLE9BQU9uaUUsS0FBS2s3RixXQUFXbDdGLEtBQUswOEYsU0FBU3FCLHFCQUFxQjU3QixFQUFFbmlFLEtBQUswOEYsU0FBU2lDLGtCQUFrQjMrRixLQUFLNDhGLGtCQUFrQno2QixFQUFFbmlFLEtBQUswOEYsU0FBU2lDLGtCQUFrQjMrRixLQUFLNDhGLGVBQWU1OEYsS0FBSzY4RixtQkFBbUIxNkIsR0FBR25pRSxLQUFLazlGLFFBQVFodEUsS0FBSyxLQUFLaXlDLEdBQUc5RyxFQUFFbGhFLFVBQVVra0csZ0JBQWdCLFNBQVNsOEIsRUFBRTVpRSxHQUFHLElBQUk3RSxFQUFFc0YsS0FBSzI5RixxQkFBcUIsT0FBT3ArRixFQUFFQSxHQUFHLEVBQUU0aUUsRUFBRSxJQUFJem5FLEVBQUUsSUFBR0EsR0FBR3luRSxFQUFFbmlFLEtBQUtvOUYsZUFBaUI3OUYsR0FBRzg3RCxFQUFFbGhFLFVBQVV3a0csa0JBQWtCLFNBQVN4OEIsRUFBRTVpRSxHQUFHLElBQUk3RSxFQUFFc0YsS0FBSzA5RixjQUFjLE9BQU9uK0YsRUFBRUEsR0FBRyxFQUFFNGlFLEVBQUUsSUFBSUEsRUFBRSxFQUFFem5FLEVBQUUsSUFBSTZFLEdBQUc0aUUsRUFBRW5pRSxLQUFLbzlGLGNBQWNwOUYsS0FBSzQrRixlQUFlci9GLEdBQUc3RSxFQUFHc0YsS0FBS205RixRQUFRNTlGLElBQUk4N0QsRUFBRWxoRSxVQUFVeWtHLGVBQWUsU0FBU3o4QixHQUFHLEtBQUtBLEdBQUduaUUsS0FBS205RixRQUFRbGhHLFFBQVErRCxLQUFLNitGLGdCQUFnQnhqQyxFQUFFbGhFLFVBQVUwa0csYUFBYSxXQUFXLElBQUkxOEIsRUFBRW5pRSxLQUFLbTlGLFFBQVFsaEcsT0FBT3NELEVBQUUsRUFBRTdFLEVBQUUsR0FBR3NGLEtBQUtvOUYsZUFBZWo3QixHQUFHbmlFLEtBQUtvOUYsZ0JBQWdCajdCLElBQUk1aUUsRUFBRTFFLEtBQUtDLE1BQU1xbkUsRUFBRW5pRSxLQUFLbzlGLGdCQUFnQnA5RixLQUFLbzlGLGNBQWMxaUcsRUFBRSxJQUFJUyxNQUFNb0UsRUFBRSxHQUFHMndCLEtBQUtsd0IsS0FBS3M5RixrQkFBa0JuN0IsSUFBSXpuRSxHQUFHLElBQUlTLE1BQU1nbkUsRUFBRSxHQUFHanlDLEtBQUssTUFBTWx3QixLQUFLbTlGLFFBQVFuNEYsS0FBS3RLLElBQUlzRCxFQUFFN0QsVUFBVStqRyxpQkFBaUIsV0FBV2wrRixLQUFLaTdGLGNBQWNqN0YsS0FBS3k2RixhQUFhejZGLEtBQUt5NkYsYUFBYXo2RixLQUFLaStGLFVBQVVFLGNBQWNuK0YsS0FBS2crRixRQUFRaDVGLEtBQUtoRixLQUFLeTZGLGVBQWV6OEYsRUFBRTdELFVBQVVnOUYsZ0JBQWdCLFdBQVcsT0FBT24zRixLQUFLZytGLFFBQVEvaEcsUUFBUStCLEVBQUU3RCxVQUFVd2tHLGtCQUFrQixTQUFTeDhCLEVBQUU1aUUsR0FBRyxPQUFPUyxLQUFLNDlGLGVBQWVlLGtCQUFrQng4QixFQUFFNWlFLElBQUl2QixFQUFFN0QsVUFBVWtrRyxnQkFBZ0IsU0FBU2w4QixFQUFFNWlFLEdBQUcsT0FBT1MsS0FBSzQ5RixlQUFlUyxnQkFBZ0JsOEIsRUFBRTVpRSxJQUFJdkIsRUFBRTdELFVBQVUrZ0csU0FBUyxXQUFXLE9BQU9sN0YsS0FBS2k3RixlQUFlajdGLEtBQUt5NkYsYUFBYVMsWUFBWWw5RixFQUFFN0QsVUFBVW9nRyxhQUFhLFNBQVNwNEIsR0FBRyxRQUFRbmlFLEtBQUtrN0YsYUFBYS80QixHQUFHbmlFLEtBQUtrMkYsdUJBQXVCbDJGLEtBQUswRyxLQUFLMUcsS0FBS2srRixtQkFBbUIsS0FBS2xnRyxFQUFFN0QsVUFBVTA5RixTQUFTLFNBQVMxMUIsR0FBR25pRSxLQUFLeXlCLE1BQUssR0FBSSxJQUFJbHpCLEVBQUVTLEtBQUt5NkYsYUFBYS8wRixNQUFNbkcsSUFBSSxPQUFPQSxFQUFFQSxFQUFFdEQsT0FBTyxLQUFLc0QsRUFBRUEsRUFBRXBDLFFBQVEsUUFBUSxLQUFLNkMsS0FBS3k2RixhQUFhejFGLEtBQUt6RixJQUFJUyxLQUFLNjlGLG1CQUFtQjc5RixLQUFLaytGLG1CQUFtQixJQUFJeGpHLEVBQUVzRixLQUFLZytGLFFBQVE5dEUsS0FBSyxNQUFNLE1BQU0sT0FBT2l5QyxJQUFJem5FLEVBQUVBLEVBQUV5QyxRQUFRLFFBQVFnbEUsSUFBSXpuRSxHQUFHc0QsRUFBRTdELFVBQVVrZ0csZUFBZSxXQUFXcjZGLEtBQUt5NkYsYUFBYTZELG1CQUFtQnRnRyxFQUFFN0QsVUFBVXVnRyxXQUFXLFNBQVN2NEIsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRUEsR0FBRyxFQUFFNWlFLEVBQUVBLEdBQUcsRUFBRVMsS0FBS2krRixVQUFVdkQsV0FBV3Y0QixFQUFFNWlFLEdBQUdTLEtBQUtnK0YsUUFBUS9oRyxPQUFPLEdBQUcrRCxLQUFLeTZGLGFBQWFDLFdBQVd2NEIsRUFBRTVpRSxJQUFHLElBQUtTLEtBQUt5NkYsYUFBYUMsY0FBYSxJQUFLMThGLEVBQUU3RCxVQUFVMmdHLGNBQWMsU0FBUzM0QixHQUFHLElBQUksSUFBSTVpRSxFQUFFLEVBQUVBLEVBQUU0aUUsRUFBRXkzQixTQUFTcjZGLElBQUlTLEtBQUtrK0YsbUJBQW1CbCtGLEtBQUt5NkYsYUFBYUMsWUFBWSxHQUFHMTZGLEtBQUt5NkYsYUFBYXoxRixLQUFLbTlELEVBQUV3NEIsbUJBQW1CMzZGLEtBQUt5NkYsYUFBYXoxRixLQUFLbTlELEVBQUVwOEQsTUFBTS9GLEtBQUs0NkYsb0JBQW1CLEVBQUc1NkYsS0FBS283RixvQkFBbUIsRUFBR3A3RixLQUFLcTdGLHdCQUF1QixHQUFJcjlGLEVBQUU3RCxVQUFVZ2hHLFVBQVUsU0FBU2g1QixHQUFHbmlFLEtBQUs4K0YsMkJBQTJCOStGLEtBQUt5NkYsYUFBYXoxRixLQUFLbTlELEdBQUduaUUsS0FBSzQ2RixvQkFBbUIsRUFBRzU2RixLQUFLbzdGLG9CQUFtQixFQUFHcDdGLEtBQUtxN0YsdUJBQXVCcjdGLEtBQUt5NkYsYUFBYStELGVBQWV4Z0csRUFBRTdELFVBQVUya0cseUJBQXlCLFdBQVc5K0YsS0FBSzQ2RixxQkFBcUI1NkYsS0FBS2syRix1QkFBdUJsMkYsS0FBS283RixvQkFBb0JwN0YsS0FBS3E2RixpQkFBaUJyNkYsS0FBS3k2RixhQUFhejFGLEtBQUssT0FBT2hILEVBQUU3RCxVQUFVbzdGLGNBQWMsU0FBU3B6QixHQUFHLElBQUksSUFBSTVpRSxFQUFFUyxLQUFLZytGLFFBQVEvaEcsT0FBT2ttRSxFQUFFNWlFLEdBQUdTLEtBQUtnK0YsUUFBUTc3QixHQUFHczhCLGlCQUFpQnQ4QixJQUFJbmlFLEtBQUt5NkYsYUFBYWlFLHVCQUF1QjFnRyxFQUFFN0QsVUFBVXM0QixLQUFLLFNBQVMwdkMsR0FBRyxJQUFJQSxPQUFFLElBQVNBLEdBQUdBLEVBQUVuaUUsS0FBS3k2RixhQUFhaG9FLE9BQU8wdkMsR0FBR25pRSxLQUFLZytGLFFBQVEvaEcsT0FBTyxHQUFHK0QsS0FBS3k2RixhQUFhUyxZQUFZbDdGLEtBQUtnK0YsUUFBUXQ0RixNQUFNMUYsS0FBS3k2RixhQUFhejZGLEtBQUtnK0YsUUFBUWgrRixLQUFLZytGLFFBQVEvaEcsT0FBTyxHQUFHK0QsS0FBS3k2RixhQUFhaG9FLE9BQU96eUIsS0FBS2k3RixjQUFjajdGLEtBQUtnK0YsUUFBUS9oRyxPQUFPLEVBQUUrRCxLQUFLZytGLFFBQVFoK0YsS0FBS2crRixRQUFRL2hHLE9BQU8sR0FBRyxNQUFNK0IsRUFBRTdELFVBQVUrN0YsbUJBQW1CLFdBQVcsT0FBT2wyRixLQUFLeTZGLGFBQWFTLFlBQVlsOUYsRUFBRTdELFVBQVVnaUcscUJBQXFCLFdBQVcsT0FBT244RixLQUFLazdGLFlBQVlsN0YsS0FBS3k2RixhQUFhUyxZQUFZbDdGLEtBQUtpN0YsY0FBY0MsWUFBWWw5RixFQUFFN0QsVUFBVTRrRyx3QkFBd0IsU0FBUzU4QixFQUFFNWlFLEdBQUcsSUFBSSxJQUFJN0UsRUFBRXNGLEtBQUtnK0YsUUFBUS9oRyxPQUFPLEVBQUV2QixHQUFHLEdBQUcsQ0FBQyxJQUFJMmdFLEVBQUVyN0QsS0FBS2crRixRQUFRdGpHLEdBQUcsR0FBRzJnRSxFQUFFNi9CLFdBQVcsTUFBTSxHQUFHLElBQUk3L0IsRUFBRTkrRCxLQUFLLEdBQUdFLFFBQVEwbEUsSUFBSTlHLEVBQUU5K0QsTUFBTSxLQUFLZ0QsRUFBRSxDQUFDUyxLQUFLZytGLFFBQVF0aEcsT0FBT2hDLEVBQUUsRUFBRSxFQUFFLElBQUlzQixFQUFFZ0UsT0FBT0EsS0FBS2k3RixjQUFjajdGLEtBQUtnK0YsUUFBUWgrRixLQUFLZytGLFFBQVEvaEcsT0FBTyxHQUFHLE1BQU12QixNQUFNeW5FLEVBQUV4bUIsUUFBUW01QyxPQUFPOTJGLEdBQUcsQ0FBQyxDQUFDLENBQUMsU0FBU21rRSxFQUFFNWlFLEVBQUU3RSxHQUFHLGFBQWEsU0FBU3NCLEVBQUVtbUUsRUFBRTVpRSxHQUFHUyxLQUFLby9GLFlBQVkvakMsRUFBRThHLEVBQUU1aUUsR0FBR1MsS0FBS3kzRixTQUFTejNGLEtBQUt1L0YsYUFBYSxZQUFZdi9GLEtBQUswM0YsSUFBSTEzRixLQUFLMi9GLGdCQUFnQixNQUFNLFFBQVEzL0YsS0FBSzg5RixpQkFBaUI5OUYsS0FBS3UvRixhQUFhLG9CQUFvQnYvRixLQUFLcTlGLFlBQVlyOUYsS0FBSzQvRixZQUFZLGNBQWMsR0FBRzUvRixLQUFLdTlGLFlBQVl2OUYsS0FBSzIvRixnQkFBZ0IsY0FBYyxLQUFLMy9GLEtBQUt5OUYsYUFBYXo5RixLQUFLNC9GLFlBQVksZ0JBQWdCNS9GLEtBQUtpNkYsa0JBQWtCajZGLEtBQUt1L0YsYUFBYSxxQkFBb0IsR0FBSXYvRixLQUFLZzZGLHNCQUFzQmg2RixLQUFLNC9GLFlBQVksd0JBQXdCLE9BQU81L0YsS0FBS2k2RixvQkFBb0JqNkYsS0FBS2c2RixzQkFBc0IsR0FBR2g2RixLQUFLdzlGLGlCQUFpQng5RixLQUFLdS9GLGFBQWEsbUJBQW1CLE9BQU92L0YsS0FBS3U5RixhQUFhdjlGLEtBQUt3OUYsbUJBQW1CeDlGLEtBQUt1OUYsWUFBWSxLQUFLLElBQUl2OUYsS0FBS3E5RixjQUFjcjlGLEtBQUtxOUYsWUFBWSxJQUFJcjlGLEtBQUtvNkYsaUJBQWlCcDZGLEtBQUs0L0YsWUFBWSxtQkFBbUI1L0YsS0FBSzQvRixZQUFZLGFBQWE1L0YsS0FBSys5RixtQkFBbUIvOUYsS0FBS3UvRixhQUFhLHNCQUFzQnYvRixLQUFLNi9GLFdBQVc3L0YsS0FBS3MvRixvQkFBb0IsYUFBYSxDQUFDLE9BQU8sT0FBTyxTQUFTLE1BQU0sYUFBYSxPQUFPLENBQUMsU0FBUyxTQUFTamtDLEVBQUU4RyxFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUVzQixFQUFFLEdBQUcsSUFBSXRCLEtBQUt5bkUsRUFBRW5rRSxFQUFFbWtFLEdBQUd6bkUsSUFBSTZFLElBQUl2RCxFQUFFdEIsR0FBR3luRSxFQUFFem5FLElBQUksR0FBRzZFLEdBQUc0aUUsRUFBRTVpRSxHQUFHLElBQUk3RSxLQUFLeW5FLEVBQUU1aUUsR0FBR3ZELEVBQUV0QixHQUFHeW5FLEVBQUU1aUUsR0FBRzdFLEdBQUcsT0FBT3NCLEVBQUUsU0FBU2dDLEVBQUVta0UsR0FBRyxJQUFJNWlFLEVBQUU3RSxFQUFFLEdBQUcsSUFBSTZFLEtBQUs0aUUsRUFBRXpuRSxFQUFFNkUsRUFBRXBDLFFBQVEsS0FBSyxNQUFNZ2xFLEVBQUU1aUUsR0FBRyxPQUFPN0UsRUFBRXNCLEVBQUU3QixVQUFVMmxHLFdBQVcsU0FBUzM5QixFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUVzRixLQUFLby9GLFlBQVlqOUIsR0FBR25tRSxFQUFFdUQsR0FBRyxHQUFHLE1BQU0saUJBQWlCN0UsRUFBRSxPQUFPQSxHQUFHLG1CQUFtQkEsRUFBRXNRLFNBQVNoUCxFQUFFdEIsRUFBRXNRLFVBQVUsaUJBQWlCdFEsSUFBSXNCLEVBQUV0QixFQUFFcUIsTUFBTSx1QkFBdUJDLEdBQUdBLEVBQUU3QixVQUFVb2xHLGFBQWEsU0FBU3A5QixFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUVzRixLQUFLby9GLFlBQVlqOUIsR0FBRyxZQUFPLElBQVN6bkUsSUFBSTZFLElBQUk3RSxHQUFHc0IsRUFBRTdCLFVBQVV3bEcsZ0JBQWdCLFNBQVN4OUIsRUFBRTVpRSxHQUFHLElBQUk3RSxFQUFFc0YsS0FBS28vRixZQUFZajlCLEdBQUdubUUsRUFBRXVELEdBQUcsR0FBRyxNQUFNLGlCQUFpQjdFLElBQUlzQixFQUFFdEIsRUFBRXlDLFFBQVEsTUFBTSxNQUFNQSxRQUFRLE1BQU0sTUFBTUEsUUFBUSxNQUFNLE9BQU9uQixHQUFHQSxFQUFFN0IsVUFBVXlsRyxZQUFZLFNBQVN6OUIsRUFBRTVpRSxHQUFHLElBQUk3RSxFQUFFc0YsS0FBS28vRixZQUFZajlCLEdBQUc1aUUsRUFBRTJxQixTQUFTM3FCLEVBQUUsSUFBSS9ELE1BQU0rRCxLQUFLQSxFQUFFLEdBQUcsSUFBSXZELEVBQUVrdUIsU0FBU3h2QixFQUFFLElBQUksT0FBT2MsTUFBTVEsS0FBS0EsRUFBRXVELEdBQUd2RCxHQUFHQSxFQUFFN0IsVUFBVXVsRyxlQUFlLFNBQVN2OUIsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRWdFLEtBQUtzL0Ysb0JBQW9CbjlCLEVBQUU1aUUsRUFBRTdFLEdBQUcsR0FBRyxJQUFJc0IsRUFBRUMsT0FBTyxNQUFNLElBQUl3MEQsTUFBTSxxQ0FBcUMwUixFQUFFLCtDQUErQzVpRSxFQUFFLHFCQUFxQlMsS0FBS28vRixZQUFZajlCLEdBQUcsS0FBSyxPQUFPbm1FLEVBQUUsSUFBSUEsRUFBRTdCLFVBQVVtbEcsb0JBQW9CLFNBQVNuOUIsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJNkUsR0FBRyxJQUFJQSxFQUFFdEQsT0FBTyxNQUFNLElBQUl3MEQsTUFBTSxtQ0FBbUMsR0FBRy8xRCxFQUFFQSxHQUFHLENBQUM2RSxFQUFFLEtBQUtTLEtBQUsrL0Ysb0JBQW9CcmxHLEVBQUU2RSxHQUFHLE1BQU0sSUFBSWt4RCxNQUFNLDBCQUEwQixJQUFJejBELEVBQUVnRSxLQUFLOC9GLFdBQVczOUIsRUFBRXpuRSxHQUFHLElBQUlzRixLQUFLKy9GLG9CQUFvQi9qRyxFQUFFdUQsR0FBRyxNQUFNLElBQUlreEQsTUFBTSxxQ0FBcUMwUixFQUFFLDZDQUE2QzVpRSxFQUFFLHFCQUFxQlMsS0FBS28vRixZQUFZajlCLEdBQUcsS0FBSyxPQUFPbm1FLEdBQUdBLEVBQUU3QixVQUFVNGxHLG9CQUFvQixTQUFTNTlCLEVBQUU1aUUsR0FBRyxPQUFPNGlFLEVBQUVsbUUsUUFBUXNELEVBQUV0RCxTQUFTa21FLEVBQUV6K0IsTUFBSyxTQUFVeStCLEdBQUcsT0FBTyxJQUFJNWlFLEVBQUU5QyxRQUFRMGxFLE9BQU9BLEVBQUV4bUIsUUFBUWc1QyxRQUFRMzRGLEVBQUVtbUUsRUFBRXhtQixRQUFRcWtELGNBQWNoaUcsRUFBRW1rRSxFQUFFeG1CLFFBQVFza0QsVUFBVTVrQyxHQUFHLENBQUMsU0FBUzhHLEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYSxJQUFJc0IsRUFBRThGLE9BQU8zSCxVQUFVd0MsZUFBZSxVQUFVLFNBQVMwK0QsRUFBRThHLEdBQUduaUUsS0FBS2lqRyxRQUFROWdDLEdBQUcsR0FBR25pRSxLQUFLa2pHLGVBQWVsakcsS0FBS2lqRyxRQUFRaG5HLE9BQU8rRCxLQUFLbWpHLFdBQVcsRUFBRTluQyxFQUFFbGhFLFVBQVVpcEcsUUFBUSxXQUFXcGpHLEtBQUttakcsV0FBVyxHQUFHOW5DLEVBQUVsaEUsVUFBVWk3RCxLQUFLLFdBQVdwMUQsS0FBS21qRyxXQUFXLElBQUluakcsS0FBS21qRyxZQUFZLElBQUk5bkMsRUFBRWxoRSxVQUFVc29HLFFBQVEsV0FBVyxPQUFPemlHLEtBQUttakcsV0FBV25qRyxLQUFLa2pHLGdCQUFnQjduQyxFQUFFbGhFLFVBQVVvYSxLQUFLLFdBQVcsSUFBSTR0RCxFQUFFLEtBQUssT0FBT25pRSxLQUFLeWlHLFlBQVl0Z0MsRUFBRW5pRSxLQUFLaWpHLFFBQVF6bEcsT0FBT3dDLEtBQUttakcsWUFBWW5qRyxLQUFLbWpHLFlBQVksR0FBR2hoQyxHQUFHOUcsRUFBRWxoRSxVQUFVc3dGLEtBQUssU0FBU3RvQixHQUFHLElBQUk1aUUsRUFBRSxLQUFLLE9BQU80aUUsRUFBRUEsR0FBRyxHQUFHQSxHQUFHbmlFLEtBQUttakcsYUFBYSxHQUFHaGhDLEVBQUVuaUUsS0FBS2tqRyxpQkFBaUIzakcsRUFBRVMsS0FBS2lqRyxRQUFRemxHLE9BQU8ya0UsSUFBSTVpRSxHQUFHODdELEVBQUVsaEUsVUFBVWtwRyxRQUFRLFNBQVNsaEMsRUFBRTVpRSxHQUFHNGlFLEVBQUU1dkQsVUFBVWhULEVBQUUsSUFBSTdFLEVBQUV5bkUsRUFBRTd4QixLQUFLdHdDLEtBQUtpakcsU0FBUyxPQUFPdm9HLEdBQUdzQixHQUFHbW1FLEVBQUVtaEMsUUFBUTVvRyxFQUFFOEIsUUFBUStDLElBQUk3RSxFQUFFLE1BQU1BLEdBQUcyZ0UsRUFBRWxoRSxVQUFVd0ksS0FBSyxTQUFTdy9ELEVBQUU1aUUsR0FBRyxPQUFPQSxFQUFFQSxHQUFHLEdBQUdBLEdBQUdTLEtBQUttakcsYUFBYSxHQUFHNWpHLEVBQUVTLEtBQUtrakcsa0JBQWtCbGpHLEtBQUtxakcsUUFBUWxoQyxFQUFFNWlFLElBQUk4N0QsRUFBRWxoRSxVQUFVdW9HLFNBQVMsU0FBU3ZnQyxFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUVzRixLQUFLeXFGLEtBQUtsckYsR0FBRyxPQUFPNGlFLEVBQUU1dkQsVUFBVSxFQUFFLE9BQU83WCxHQUFHeW5FLEVBQUV4L0QsS0FBS2pJLElBQUkyZ0UsRUFBRWxoRSxVQUFVNkksTUFBTSxTQUFTbS9ELEdBQUcsSUFBSTVpRSxFQUFFUyxLQUFLcWpHLFFBQVFsaEMsRUFBRW5pRSxLQUFLbWpHLFlBQVksT0FBTzVqRyxFQUFFUyxLQUFLbWpHLFlBQVk1akcsRUFBRSxHQUFHdEQsT0FBT3NELEVBQUUsS0FBS0EsR0FBRzg3RCxFQUFFbGhFLFVBQVVvb0csS0FBSyxTQUFTcGdDLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUVxL0QsRUFBRSxHQUFHLE9BQU84RyxJQUFJbm1FLEVBQUVnRSxLQUFLZ0QsTUFBTW0vRCxNQUFNOUcsR0FBR3IvRCxFQUFFLEtBQUt1RCxJQUFJdkQsR0FBR21tRSxJQUFJOUcsR0FBR3I3RCxLQUFLdWpHLFVBQVVoa0csRUFBRTdFLElBQUkyZ0UsR0FBR0EsRUFBRWxoRSxVQUFVb3BHLFVBQVUsU0FBU3BoQyxFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUVzQixFQUFFZ0UsS0FBS21qRyxXQUFXaGhDLEVBQUU1dkQsVUFBVXZTLEtBQUttakcsV0FBVyxJQUFJOW5DLEVBQUU4RyxFQUFFN3hCLEtBQUt0d0MsS0FBS2lqRyxTQUFTLE9BQU81bkMsR0FBR3IvRCxFQUFFcS9ELEVBQUU3K0QsTUFBTStDLElBQUl2RCxHQUFHcS9ELEVBQUUsR0FBR3AvRCxTQUFTRCxFQUFFZ0UsS0FBS2tqRyxlQUFleG9HLEVBQUVzRixLQUFLaWpHLFFBQVEzMEQsVUFBVXR1QyxLQUFLbWpHLFdBQVdubkcsR0FBR2dFLEtBQUttakcsV0FBV25uRyxFQUFFdEIsR0FBRzJnRSxFQUFFbGhFLFVBQVVxcEcsZUFBZSxTQUFTcmhDLEdBQUcsT0FBT25pRSxLQUFLdWpHLFVBQVVwaEMsR0FBRSxJQUFLOUcsRUFBRWxoRSxVQUFVc3BHLFdBQVcsU0FBU3RoQyxFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUUsS0FBSzJnRSxFQUFFLElBQUksT0FBTzk3RCxHQUFHdkQsSUFBSXEvRCxFQUFFLEtBQUssaUJBQWlCOEcsR0FBRyxLQUFLQSxFQUFFem5FLEVBQUUsSUFBSW9ILE9BQU9xZ0UsRUFBRTlHLEdBQUc4RyxJQUFJem5FLEVBQUUsSUFBSW9ILE9BQU9xZ0UsRUFBRXJ2RCxPQUFPdW9ELElBQUkzZ0UsR0FBRzJnRSxFQUFFbGhFLFVBQVV1cEcsbUJBQW1CLFNBQVN2aEMsR0FBRyxPQUFPcmdFLE9BQU9xZ0UsRUFBRWhsRSxRQUFRLHlCQUF5QixVQUFVaytELEVBQUVsaEUsVUFBVXdwRyxlQUFlLFNBQVN4aEMsR0FBRyxJQUFJNWlFLEVBQUVTLEtBQUttakcsV0FBV3pvRyxFQUFFc0YsS0FBS3dqRyxlQUFlcmhDLEdBQUcsT0FBT25pRSxLQUFLbWpHLFdBQVc1akcsRUFBRTdFLEdBQUcyZ0UsRUFBRWxoRSxVQUFVeXBHLFNBQVMsU0FBU3poQyxHQUFHLElBQUk1aUUsRUFBRVMsS0FBS21qRyxXQUFXLEVBQUUsT0FBTzVqRyxHQUFHNGlFLEVBQUVsbUUsUUFBUStELEtBQUtpakcsUUFBUTMwRCxVQUFVL3VDLEVBQUU0aUUsRUFBRWxtRSxPQUFPc0QsR0FBR3JELGdCQUFnQmltRSxHQUFHQSxFQUFFeG1CLFFBQVF1a0QsYUFBYTdrQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUzhHLEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYSxTQUFTc0IsRUFBRW1tRSxFQUFFNWlFLEdBQUc0aUUsRUFBRSxpQkFBaUJBLEVBQUVBLEVBQUVBLEVBQUVydkQsT0FBT3ZULEVBQUUsaUJBQWlCQSxFQUFFQSxFQUFFQSxFQUFFdVQsT0FBTzlTLEtBQUs2a0csMkJBQTJCLElBQUkvaUcsT0FBT3FnRSxFQUFFLDBCQUEwQnJ2RCxPQUFPdlQsRUFBRSxLQUFLUyxLQUFLOGtHLG9CQUFvQixrQkFBa0I5a0csS0FBSytrRyxnQ0FBZ0MsSUFBSWpqRyxPQUFPcWdFLEVBQUUsMkJBQTJCcnZELE9BQU92VCxFQUFFLEtBQUt2RCxFQUFFN0IsVUFBVXdvRyxlQUFlLFNBQVN4Z0MsR0FBRyxJQUFJQSxFQUFFbi9ELE1BQU1oRCxLQUFLNmtHLDRCQUE0QixPQUFPLEtBQUssSUFBSXRsRyxFQUFFLEdBQUdTLEtBQUs4a0csb0JBQW9CdnlGLFVBQVUsRUFBRSxJQUFJLElBQUk3WCxFQUFFc0YsS0FBSzhrRyxvQkFBb0J4MEQsS0FBSzZ4QixHQUFHem5FLEdBQUc2RSxFQUFFN0UsRUFBRSxJQUFJQSxFQUFFLEdBQUdBLEVBQUVzRixLQUFLOGtHLG9CQUFvQngwRCxLQUFLNnhCLEdBQUcsT0FBTzVpRSxHQUFHdkQsRUFBRTdCLFVBQVV5b0csWUFBWSxTQUFTemdDLEdBQUcsT0FBT0EsRUFBRXFoQyxlQUFleGpHLEtBQUsra0csa0NBQWtDNWlDLEVBQUV4bUIsUUFBUXdrRCxXQUFXbmtHLEdBQUcsQ0FBQyxTQUFTbW1FLEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYSxJQUFJc0IsRUFBRXRCLEVBQUUsSUFBSWc2RixXQUFXcjVCLEVBQUUzZ0UsRUFBRSxJQUFJaTZGLFFBQVF4eUIsRUFBRXhtQixRQUFRLFNBQVN3bUIsRUFBRTVpRSxHQUFHLE9BQU8sSUFBSXZELEVBQUVtbUUsRUFBRTVpRSxHQUFHcTFGLFlBQVl6eUIsRUFBRXhtQixRQUFRazVDLGVBQWUsV0FBVyxPQUFPLElBQUl4NUIsSUFBSSxTQUFTOEcsRUFBRTVpRSxFQUFFN0UsR0FBRyxhQUFhLElBQUlzQixFQUFFdEIsRUFBRSxJQUFJaTZGLFFBQVF0NUIsRUFBRTNnRSxFQUFFLEdBQUdvNkYsT0FBTzkyRixFQUFFdEQsRUFBRSxHQUFHd2xHLGFBQWF2OEQsRUFBRSxJQUFHLEVBQUdqcEMsRUFBRSxJQUFJeWxHLFlBQVksT0FBTyxRQUFRamtFLEVBQUUsY0FBY3NyQyxFQUFFLGVBQWV2cEUsRUFBRSxLQUFLWixFQUFFLGNBQWNELEVBQUUsZ0NBQWdDNG5DLEVBQUUsZ0NBQWdDLFNBQVMzMUIsRUFBRTh5RCxFQUFFNWlFLEdBQUdTLEtBQUt5MUYsYUFBYXR6QixHQUFHLEdBQUduaUUsS0FBS3dnRCxTQUFTLElBQUl4a0QsRUFBRXVELEdBQUdTLEtBQUsrbEcsSUFBSSxLQUFLL2xHLEtBQUt5Z0csT0FBTyxLQUFLemdHLEtBQUtnbUcsZUFBZSxDQUFDLFNBQVEsRUFBRyxjQUFhLEVBQUcsY0FBYSxFQUFHLFVBQVMsRUFBRyxhQUFZLEVBQUcsYUFBWSxHQUFJaG1HLEtBQUtpbUcsdUJBQXVCLENBQUMsVUFBUyxFQUFHLGFBQVksRUFBRyxhQUFZLEdBQUk1MkYsRUFBRWxWLFVBQVUrckcsVUFBVSxTQUFTL2pDLEdBQUcsSUFBSTVpRSxFQUFFLEdBQUcsSUFBSVMsS0FBSytsRyxJQUFJL2xHLEtBQUt5Z0csT0FBT2xzRixPQUFPdlUsS0FBSytsRyxLQUFLLENBQUMsR0FBR3htRyxHQUFHUyxLQUFLK2xHLElBQUksT0FBTy9sRyxLQUFLK2xHLElBQUl4bUcsR0FBR1MsS0FBS3lnRyxPQUFPbHNGLFlBQVksSUFBSSxJQUFJNHRELEVBQUUxbEUsUUFBUXVELEtBQUsrbEcsTUFBTSxPQUFPL2xHLEtBQUsrbEcsSUFBSSxNQUFNL2xHLEtBQUsrbEcsSUFBSS9sRyxLQUFLeWdHLE9BQU9sc0YsT0FBTyxPQUFPaFYsR0FBRzhQLEVBQUVsVixVQUFVZ3NHLGNBQWMsU0FBU2hrQyxHQUFHLElBQUksSUFBSTVpRSxFQUFFdEIsRUFBRTBFLEtBQUszQyxLQUFLeWdHLE9BQU9oVyxRQUFRL3ZGLEdBQUUsRUFBR3VELEVBQUUwRSxLQUFLM0MsS0FBS3lnRyxPQUFPaFcsU0FBU3pxRixLQUFLK2xHLElBQUkvbEcsS0FBS3lnRyxPQUFPbHNGLE9BQU80dEQsR0FBRyxPQUFPbmlFLEtBQUsrbEcsTUFBTS9sRyxLQUFLd2dELFNBQVN5NUMsbUJBQW1Cdi9GLEtBQUtBLEdBQUUsRUFBR3NGLEtBQUswMUYsUUFBUTZFLGNBQWEsSUFBSyxPQUFPaDdGLEdBQUc4UCxFQUFFbFYsVUFBVWlzRyx1QkFBdUIsV0FBVyxJQUFJLElBQUlqa0MsRUFBRSxFQUFFNWlFLEVBQUUsRUFBRTdFLEVBQUVzRixLQUFLeWdHLE9BQU9oVyxLQUFLbHJGLEdBQUc3RSxHQUFHLENBQUMsR0FBRyxNQUFNQSxFQUFFLE9BQU0sRUFBRyxHQUFHLE1BQU1BLEVBQUV5bkUsR0FBRyxPQUFPLEdBQUcsTUFBTXpuRSxFQUFFLENBQUMsR0FBRyxJQUFJeW5FLEVBQUUsT0FBTSxFQUFHQSxHQUFHLE9BQU8sR0FBRyxNQUFNem5FLEdBQUcsTUFBTUEsRUFBRSxPQUFNLEVBQUc2RSxJQUFJN0UsRUFBRXNGLEtBQUt5Z0csT0FBT2hXLEtBQUtsckYsR0FBRyxPQUFNLEdBQUk4UCxFQUFFbFYsVUFBVWtzRyxhQUFhLFNBQVNsa0MsR0FBR25pRSxLQUFLMDFGLFFBQVFnRixXQUFXMTZGLEtBQUtzbUcsY0FBY3RtRyxLQUFLMDFGLFFBQVEwRixvQkFBbUIsRUFBR3A3RixLQUFLMDFGLFFBQVF5RixVQUFVaDVCLElBQUk5eUQsRUFBRWxWLFVBQVVvc0csb0JBQW9CLFNBQVNwa0MsR0FBR0EsSUFBSW5pRSxLQUFLMDFGLFFBQVFrRixvQkFBbUIsSUFBS3ZyRixFQUFFbFYsVUFBVW1oRyxPQUFPLFdBQVd0N0YsS0FBS3NtRyxnQkFBZ0JqM0YsRUFBRWxWLFVBQVVxc0csUUFBUSxXQUFXeG1HLEtBQUtzbUcsYUFBYSxHQUFHdG1HLEtBQUtzbUcsZ0JBQWdCajNGLEVBQUVsVixVQUFVeTZGLFNBQVMsV0FBVyxHQUFHNTBGLEtBQUt3Z0QsU0FBU2kzQyxTQUFTLE9BQU96M0YsS0FBS3kxRixhQUFhLElBQUl0ekIsRUFBRW5pRSxLQUFLeTFGLGFBQWFsMkYsRUFBRVMsS0FBS3dnRCxTQUFTazNDLElBQUksU0FBU240RixJQUFJQSxFQUFFLEtBQUs0aUUsR0FBR2ptQyxFQUFFdjVCLEtBQUt3L0QsR0FBRyxNQUFNNWlFLEVBQUU0aUUsRUFBRW4vRCxNQUFNazVCLEdBQUcsS0FBSyxJQUFJeGhDLEdBQUd5bkUsRUFBRUEsRUFBRWhsRSxRQUFRcXFFLEVBQUUsT0FBT3hrRSxNQUFNLFdBQVcsR0FBR2hELEtBQUswMUYsUUFBUSxJQUFJcjZCLEVBQUVyN0QsS0FBS3dnRCxTQUFTOWxELEdBQUdzRixLQUFLeWdHLE9BQU8sSUFBSXppRyxFQUFFbWtFLEdBQUduaUUsS0FBS3NtRyxhQUFhLEVBQUV0bUcsS0FBS3ltRyxhQUFhLEVBQUV6bUcsS0FBSytsRyxJQUFJLEtBQUssSUFBSSxJQUFJL3BHLEVBQUVxVCxFQUFFZ0ssRUFBRSxFQUFFNG9ELEdBQUUsRUFBR3RvRSxHQUFFLEVBQUc4aEQsR0FBRSxFQUFHeG9CLEdBQUUsRUFBR24wQixHQUFFLEVBQUdvd0QsRUFBRWx2RCxLQUFLK2xHLElBQUkvcEcsRUFBRSxLQUFLZ0UsS0FBS3lnRyxPQUFPOEIsS0FBS2xsRyxHQUFHZ1MsRUFBRTYvQyxFQUFFbHZELEtBQUsrbEcsSUFBSS9sRyxLQUFLeWdHLE9BQU9sc0YsT0FBTyxPQUFPdlUsS0FBSytsRyxLQUFLL2xHLEtBQUt5Z0csT0FBT2dDLFlBQVl6aUcsS0FBSytsRyxLQUFLL2xHLEtBQUt5Z0csT0FBT2xzRixRQUFRMjZDLEVBQUVsdkQsS0FBSytsRyxJQUFJL2xHLEtBQUsrbEcsS0FBSyxHQUFHLE1BQU0vbEcsS0FBSytsRyxLQUFLLE1BQU0vbEcsS0FBS3lnRyxPQUFPaFcsT0FBTyxDQUFDenFGLEtBQUswMUYsUUFBUTZFLGVBQWV2NkYsS0FBS3lnRyxPQUFPcnJDLE9BQU8sSUFBSW1VLEVBQUV2cEUsS0FBS3lnRyxPQUFPOEIsS0FBS25sRyxHQUFHNm5ELEVBQUV0aEIsRUFBRWcvRCxlQUFlcDVCLEdBQUd0a0IsR0FBRyxVQUFVQSxFQUFFbXNDLFNBQVM3bkIsR0FBRzVsQyxFQUFFaS9ELFlBQVk1aUcsS0FBS3lnRyxTQUFTemdHLEtBQUtxbUcsYUFBYTk4QixHQUFHdnBFLEtBQUttbUcsZUFBYyxHQUFJbm1HLEtBQUswMUYsUUFBUTZFLG9CQUFvQixHQUFHLE1BQU12NkYsS0FBSytsRyxLQUFLLE1BQU0vbEcsS0FBS3lnRyxPQUFPaFcsT0FBT3pxRixLQUFLMDFGLFFBQVFrRixvQkFBbUIsRUFBRzU2RixLQUFLeWdHLE9BQU9yckMsT0FBT3AxRCxLQUFLcW1HLGFBQWFybUcsS0FBS3lnRyxPQUFPOEIsS0FBS3Y5RCxJQUFJaGxDLEtBQUttbUcsZUFBYyxRQUFTLEdBQUcsTUFBTW5tRyxLQUFLK2xHLElBQUksR0FBRy9sRyxLQUFLdW1HLG9CQUFvQnZxRyxHQUFHLE1BQU1nRSxLQUFLeWdHLE9BQU9oVyxPQUFPenFGLEtBQUtxbUcsYUFBYXJtRyxLQUFLK2xHLElBQUkvbEcsS0FBS2ttRyxVQUFVLFVBQVUsQ0FBQ2xtRyxLQUFLcW1HLGFBQWFybUcsS0FBSytsRyxLQUFLLElBQUkzOEIsRUFBRXBwRSxLQUFLeWdHLE9BQU9rRCxlQUFlLHVCQUF1QnY2QixFQUFFcG1FLE1BQU0sV0FBV29tRSxFQUFFcHBFLEtBQUtrbUcsVUFBVSxNQUFNL29HLFFBQVEsTUFBTSxJQUFJNkMsS0FBS3FtRyxhQUFhajlCLEdBQUdwcEUsS0FBSzAxRixRQUFRa0Ysb0JBQW1CLEdBQUksWUFBWXh4QixFQUFFQSxFQUFFanNFLFFBQVEsTUFBTSxLQUFLODFCLEdBQUUsRUFBRyxXQUFXbTJDLElBQUl0cUUsR0FBRSxHQUFJc3FFLEtBQUtwcEUsS0FBS2dtRyxnQkFBZ0JobUcsS0FBS3ltRyxjQUFjLEVBQUVyOUIsS0FBS3BwRSxLQUFLaW1HLHlCQUF5QnhxRCxHQUFFLElBQUt3bUIsR0FBRyxJQUFJNW9ELElBQUksSUFBSSt2RCxFQUFFM3NFLFFBQVEsT0FBTzlDLEdBQUUsRUFBR3FHLEtBQUtzN0YsY0FBYyxNQUFNdDdGLEtBQUsrbEcsS0FBSyxNQUFNL2xHLEtBQUt5Z0csT0FBT2hXLFFBQVF6cUYsS0FBS3VtRyxvQkFBb0J2cUcsR0FBR2dFLEtBQUtxbUcsYUFBYXJtRyxLQUFLK2xHLElBQUkvbEcsS0FBS2ttRyxVQUFVLE9BQU8sTUFBTWxtRyxLQUFLK2xHLEtBQUtwc0csSUFBSUEsR0FBRSxFQUFHcUcsS0FBS3dtRyxXQUFXeG1HLEtBQUtzN0YsU0FBU3Q3RixLQUFLMDFGLFFBQVFrRixvQkFBbUIsRUFBRzU2RixLQUFLcW1HLGFBQWFybUcsS0FBSytsRyxLQUFLdHFELEdBQUdBLEdBQUUsRUFBR3dtQixFQUFFamlFLEtBQUtzbUcsYUFBYXRtRyxLQUFLeW1HLGNBQWN4a0MsRUFBRWppRSxLQUFLc21HLGNBQWN0bUcsS0FBS3ltRyxhQUFhem1HLEtBQUt3Z0QsU0FBU2ttRCx1QkFBdUJ6a0MsR0FBR2ppRSxLQUFLMDFGLFFBQVF1RixlQUFlLE1BQU1qN0YsS0FBSzAxRixRQUFRdUYsY0FBYzErRixNQUFNLElBQUl5RCxLQUFLMDFGLFFBQVFxSix3QkFBd0IsSUFBSSxLQUFLLytGLEtBQUttbUcsZUFBYyxHQUFJbm1HLEtBQUswMUYsUUFBUTZFLGdCQUFnQixNQUFNdjZGLEtBQUsrbEcsS0FBSy9sRyxLQUFLd21HLFVBQVV4bUcsS0FBSzAxRixRQUFRNkUsZUFBZSxNQUFNbHJGLEdBQUdyUCxLQUFLMDFGLFFBQVFqakUsTUFBSyxHQUFJM3pCLEdBQUUsRUFBR20wQixHQUFFLEVBQUd0NUIsSUFBSXFHLEtBQUt3bUcsVUFBVTdzRyxHQUFFLEdBQUlxRyxLQUFLcW1HLGFBQWFybUcsS0FBSytsRyxLQUFLOWpDLEdBQUUsRUFBR2ppRSxLQUFLeW1HLGNBQWN6bUcsS0FBS3ltRyxlQUFlem1HLEtBQUttbUcsZUFBYyxHQUFJbm1HLEtBQUswMUYsUUFBUTZFLGVBQWV2NkYsS0FBS3dnRCxTQUFTa21ELHdCQUF3QjFtRyxLQUFLMDFGLFFBQVF5Ryx3QkFBd0IsTUFBTW44RixLQUFLeWdHLE9BQU9oVyxRQUFRenFGLEtBQUswMUYsUUFBUTZFLGNBQWEsSUFBSyxNQUFNdjZGLEtBQUsrbEcsS0FBSzlqQyxJQUFJeG1CLEdBQUd6N0MsS0FBS3lnRyxPQUFPbUQsU0FBUyxNQUFNNWpHLEtBQUtvbUcsMEJBQTBCcG1HLEtBQUt5Z0csT0FBT21ELFNBQVMsTUFBTTN3RSxHQUFHLElBQUk1WixHQUFHclosS0FBS3lnRyxPQUFPbUQsU0FBUyxPQUFPNWpHLEtBQUswMUYsUUFBUWtGLG9CQUFtQixHQUFJLE1BQU01NkYsS0FBS3lnRyxPQUFPaFcsUUFBUXpxRixLQUFLK2xHLElBQUkvbEcsS0FBS3lnRyxPQUFPbHNGLE9BQU92VSxLQUFLcW1HLGFBQWEsT0FBT3JtRyxLQUFLcW1HLGFBQWEsT0FBT3JtRyxLQUFLcW1HLGFBQWEsS0FBSzFzRyxJQUFJQSxHQUFFLEVBQUdxRyxLQUFLMDFGLFFBQVFrRixvQkFBbUIsRUFBRzU2RixLQUFLbW1HLGVBQWMsR0FBSW5tRyxLQUFLczdGLFdBQVcsTUFBTXQ3RixLQUFLK2xHLEtBQUssTUFBTS9sRyxLQUFLK2xHLEtBQUsvbEcsS0FBS3VtRyxvQkFBb0J2cUcsR0FBR2dFLEtBQUtxbUcsYUFBYXJtRyxLQUFLK2xHLElBQUkvbEcsS0FBS2ttRyxVQUFVbG1HLEtBQUsrbEcsTUFBTS9sRyxLQUFLbW1HLGVBQWMsSUFBSyxNQUFNbm1HLEtBQUsrbEcsSUFBSSxJQUFJMXNGLEdBQUcxZixJQUFJcUcsS0FBS3dtRyxVQUFVN3NHLEdBQUUsR0FBSXM1QixHQUFFLEVBQUduMEIsR0FBRSxFQUFHa0IsS0FBS3FtRyxhQUFhcm1HLEtBQUsrbEcsS0FBSy9sRyxLQUFLbW1HLGVBQWMsR0FBSSxNQUFNbm1HLEtBQUt5Z0csT0FBT2hXLFFBQVF6cUYsS0FBSzAxRixRQUFRNkUsaUJBQWlCdjZGLEtBQUtxbUcsYUFBYXJtRyxLQUFLK2xHLEtBQUsvbEcsS0FBS21tRyxlQUFjLEdBQUlubUcsS0FBSzAxRixRQUFRa0Ysb0JBQW1CLEdBQUksTUFBTTU2RixLQUFLK2xHLElBQUkvbEcsS0FBS3lnRyxPQUFPbUQsU0FBUyxRQUFRNWpHLEtBQUtxbUcsYUFBYXJtRyxLQUFLK2xHLEtBQUsvbEcsS0FBS21tRyxnQkFBZ0I5c0YsSUFBSXJaLEtBQUtzN0YsU0FBU3Q3RixLQUFLK2xHLElBQUkvbEcsS0FBS3lnRyxPQUFPbHNGLE9BQU8sTUFBTXZVLEtBQUsrbEcsS0FBSyxNQUFNL2xHLEtBQUsrbEcsS0FBSyxNQUFNL2xHLEtBQUsrbEcsSUFBSS9sRyxLQUFLeWdHLE9BQU9yckMsT0FBT3AxRCxLQUFLK2xHLE1BQU0vbEcsS0FBS3FtRyxhQUFhcm1HLEtBQUsrbEcsSUFBSS9sRyxLQUFLa21HLFVBQVUsTUFBTTdzRixJQUFJQSxJQUFJclosS0FBS3dtRyxjQUFjeG1HLEtBQUt1bUcsb0JBQW9CdnFHLEdBQUdnRSxLQUFLcW1HLGFBQWFybUcsS0FBSytsRyxLQUFLL2xHLEtBQUttbUcsZ0JBQWdCOXNGLElBQUlyWixLQUFLczdGLFVBQVUsTUFBTXQ3RixLQUFLK2xHLEtBQUsxc0YsSUFBSUEsSUFBSXJaLEtBQUt3bUcsV0FBV3htRyxLQUFLcW1HLGFBQWFybUcsS0FBSytsRyxNQUFNLE1BQU0vbEcsS0FBSytsRyxLQUFLL2xHLEtBQUtxbUcsYUFBYXJtRyxLQUFLK2xHLEtBQUsvbEcsS0FBS21tRyxlQUFjLElBQUtubUcsS0FBS3dnRCxTQUFTbW1ELDRCQUE0Qmh0RyxHQUFHLElBQUkwZixHQUFHdmEsRUFBRWtCLEtBQUswMUYsUUFBUWtGLG9CQUFtQixFQUFHNTZGLEtBQUswMUYsUUFBUTZFLGdCQUFnQixNQUFNdjZGLEtBQUsrbEcsS0FBSyxNQUFNL2xHLEtBQUsrbEcsS0FBSyxNQUFNL2xHLEtBQUsrbEcsS0FBS3BzRyxHQUFHLElBQUkwZixFQUFFLE1BQU1yWixLQUFLK2xHLElBQUkvbEcsS0FBS3FtRyxhQUFhcm1HLEtBQUsrbEcsS0FBSyxNQUFNL2xHLEtBQUsrbEcsS0FBSy9sRyxLQUFLdW1HLG9CQUFvQnZxRyxHQUFHZ0UsS0FBS3FtRyxhQUFhcm1HLEtBQUsrbEcsTUFBTSxNQUFNL2xHLEtBQUsrbEcsS0FBSy9sRyxLQUFLbW1HLGdCQUFnQm5tRyxLQUFLcW1HLGFBQWEsS0FBS3BvRyxFQUFFMEUsS0FBSzNDLEtBQUsrbEcsT0FBTy9sRyxLQUFLK2xHLElBQUksS0FBSyxNQUFNL2xHLEtBQUsrbEcsS0FBSy9sRyxLQUFLeWdHLE9BQU9tRCxTQUFTLE9BQU81akcsS0FBS3VtRyxvQkFBb0J2cUcsR0FBR2dFLEtBQUtxbUcsYUFBYXJtRyxLQUFLK2xHLE9BQU8vbEcsS0FBS3FtRyxhQUFhLEtBQUtybUcsS0FBS3FtRyxhQUFhcm1HLEtBQUsrbEcsTUFBTS9sRyxLQUFLd2dELFNBQVNvbUQseUJBQXlCNW1HLEtBQUswMUYsUUFBUWtGLG9CQUFtQixFQUFHNTZGLEtBQUtxbUcsYUFBYXJtRyxLQUFLK2xHLEtBQUsvbEcsS0FBSzAxRixRQUFRa0Ysb0JBQW1CLElBQUs1NkYsS0FBS3FtRyxhQUFhcm1HLEtBQUsrbEcsS0FBSy9sRyxLQUFLbW1HLGdCQUFnQm5tRyxLQUFLK2xHLEtBQUs5bkcsRUFBRTBFLEtBQUszQyxLQUFLK2xHLE9BQU8vbEcsS0FBSytsRyxJQUFJLEtBQUssT0FBTy9sRyxLQUFLMDFGLFFBQVFtQyxTQUFTdDRGLElBQUk0aUUsRUFBRXhtQixRQUFRKzRDLFdBQVdybEYsR0FBRyxTQUFTOHlELEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYSxJQUFJc0IsRUFBRXRCLEVBQUUsR0FBR2k2RixRQUFRLFNBQVN0NUIsRUFBRThHLEdBQUdubUUsRUFBRTFCLEtBQUswRixLQUFLbWlFLEVBQUUsT0FBT25pRSxLQUFLMm1HLDJCQUEyQjNtRyxLQUFLdS9GLGFBQWEsOEJBQTZCLEdBQUl2L0YsS0FBSzBtRyxzQkFBc0IxbUcsS0FBS3UvRixhQUFhLHlCQUF3QixHQUFJLElBQUloZ0csRUFBRVMsS0FBS3UvRixhQUFhLG1DQUFtQ3YvRixLQUFLNG1HLHdCQUF3QjVtRyxLQUFLdS9GLGFBQWEsNEJBQTRCaGdHLEVBQUU4N0QsRUFBRWxoRSxVQUFVLElBQUk2QixFQUFFbW1FLEVBQUV4bUIsUUFBUWc1QyxRQUFRdDVCLFVBQUssS0FBVXIvRCxFQUFFLFdBQVcsTUFBTSxDQUFDbzNGLGFBQWEvM0IsSUFBSWw5RCxNQUFNb0IsRUFBRSxPQUFPNGlFLEVBQUV4bUIsUUFBUTMvQyxJQUFJLFNBQVNtbUUsRUFBRTVpRSxHQUFHLFNBQVM3RSxFQUFFNkUsRUFBRXZELEdBQUcsT0FBT21tRSxFQUFFeG1CLFFBQVFqaEQsRUFBRWxCLE9BQU82NEYsZ0JBQWdCLFNBQVNsd0IsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRXA1RCxVQUFVeEosRUFBRTRpRSxHQUFHem5FLEVBQUU2RSxFQUFFdkQsR0FBR21tRSxFQUFFeG1CLFFBQVFqaEQsR0FBRyxTQUFTeW5FLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXNCLEVBQUVxL0QsRUFBRThHLEVBQUV4bUIsUUFBUSxHQUFHLFNBQVMzOUMsSUFBSSxNQUFNLElBQUl5eUQsTUFBTSxtQ0FBbUMsU0FBUzlzQixJQUFJLE1BQU0sSUFBSThzQixNQUFNLHFDQUFxQyxTQUFTdjBCLEVBQUVpbUMsR0FBRyxHQUFHem5FLElBQUk2VSxXQUFXLE9BQU9BLFdBQVc0eUQsRUFBRSxHQUFHLElBQUl6bkUsSUFBSXNELElBQUl0RCxJQUFJNlUsV0FBVyxPQUFPN1UsRUFBRTZVLFdBQVdBLFdBQVc0eUQsRUFBRSxHQUFHLElBQUksT0FBT3puRSxFQUFFeW5FLEVBQUUsR0FBRyxNQUFNNWlFLEdBQUcsSUFBSSxPQUFPN0UsRUFBRUosS0FBSyxLQUFLNm5FLEVBQUUsR0FBRyxNQUFNNWlFLEdBQUcsT0FBTzdFLEVBQUVKLEtBQUswRixLQUFLbWlFLEVBQUUsTUFBTSxXQUFXLElBQUl6bkUsRUFBRSxtQkFBbUI2VSxXQUFXQSxXQUFXdlIsRUFBRSxNQUFNbWtFLEdBQUd6bkUsRUFBRXNELEVBQUUsSUFBSWhDLEVBQUUsbUJBQW1CMGhCLGFBQWFBLGFBQWFpbUIsRUFBRSxNQUFNdytCLEdBQUdubUUsRUFBRTJuQyxHQUF6SSxHQUErSSxJQUFJNmpDLEVBQUV2cEUsRUFBRSxHQUFHWixHQUFFLEVBQUdELEdBQUcsRUFBRSxTQUFTNG5DLElBQUkzbkMsR0FBR21xRSxJQUFJbnFFLEdBQUUsRUFBR21xRSxFQUFFdnJFLE9BQU9nQyxFQUFFdXBFLEVBQUV4OEQsT0FBTy9NLEdBQUdiLEdBQUcsRUFBRWEsRUFBRWhDLFFBQVFvVCxLQUFLLFNBQVNBLElBQUksSUFBSWhTLEVBQUUsQ0FBQyxJQUFJOGtFLEVBQUVqbUMsRUFBRThJLEdBQUczbkMsR0FBRSxFQUFHLElBQUksSUFBSWtDLEVBQUV0QixFQUFFaEMsT0FBT3NELEdBQUcsQ0FBQyxJQUFJaW9FLEVBQUV2cEUsRUFBRUEsRUFBRSxLQUFLYixFQUFFbUMsR0FBR2lvRSxHQUFHQSxFQUFFcHFFLEdBQUdxa0IsTUFBTXJrQixHQUFHLEVBQUVtQyxFQUFFdEIsRUFBRWhDLE9BQU91ckUsRUFBRSxLQUFLbnFFLEdBQUUsRUFBRyxTQUFTOGtFLEdBQUcsR0FBR25tRSxJQUFJMGhCLGFBQWEsT0FBT0EsYUFBYXlrRCxHQUFHLElBQUlubUUsSUFBSTJuQyxJQUFJM25DLElBQUkwaEIsYUFBYSxPQUFPMWhCLEVBQUUwaEIsYUFBYUEsYUFBYXlrRCxHQUFHLElBQUlubUUsRUFBRW1tRSxHQUFHLE1BQU01aUUsR0FBRyxJQUFJLE9BQU92RCxFQUFFMUIsS0FBSyxLQUFLNm5FLEdBQUcsTUFBTTVpRSxHQUFHLE9BQU92RCxFQUFFMUIsS0FBSzBGLEtBQUttaUUsS0FBbE0sQ0FBd01BLElBQUksU0FBUzlvRCxFQUFFOG9ELEVBQUU1aUUsR0FBR1MsS0FBSzI0RSxJQUFJeFcsRUFBRW5pRSxLQUFLMDRELE1BQU1uNUQsRUFBRSxTQUFTMGlFLEtBQUs1RyxFQUFFcnJELFNBQVMsU0FBU215RCxHQUFHLElBQUk1aUUsRUFBRSxJQUFJcEUsTUFBTStDLFVBQVVqQyxPQUFPLEdBQUcsR0FBR2lDLFVBQVVqQyxPQUFPLEVBQUUsSUFBSSxJQUFJdkIsRUFBRSxFQUFFQSxFQUFFd0QsVUFBVWpDLE9BQU92QixJQUFJNkUsRUFBRTdFLEVBQUUsR0FBR3dELFVBQVV4RCxHQUFHdUQsRUFBRStHLEtBQUssSUFBSXFVLEVBQUU4b0QsRUFBRTVpRSxJQUFJLElBQUl0QixFQUFFaEMsUUFBUW9CLEdBQUc2K0IsRUFBRTdzQixJQUFJZ0ssRUFBRWxmLFVBQVVzbkIsSUFBSSxXQUFXemhCLEtBQUsyNEUsSUFBSXg2RSxNQUFNLEtBQUs2QixLQUFLMDRELFFBQVEyQyxFQUFFNkksTUFBTSxVQUFVN0ksRUFBRStkLFNBQVEsRUFBRy9kLEVBQUUzM0QsSUFBSSxHQUFHMjNELEVBQUVnZSxLQUFLLEdBQUdoZSxFQUFFbHdDLFFBQVEsR0FBR2t3QyxFQUFFaWUsU0FBUyxHQUFHamUsRUFBRWpxRCxHQUFHNndELEVBQUU1RyxFQUFFa2UsWUFBWXRYLEVBQUU1RyxFQUFFdjdELEtBQUttaUUsRUFBRTVHLEVBQUVtZSxJQUFJdlgsRUFBRTVHLEVBQUVvZSxlQUFleFgsRUFBRTVHLEVBQUVxZSxtQkFBbUJ6WCxFQUFFNUcsRUFBRXQ1QyxLQUFLa2dELEVBQUU1RyxFQUFFc2UsZ0JBQWdCMVgsRUFBRTVHLEVBQUV1ZSxvQkFBb0IzWCxFQUFFNUcsRUFBRXJpRCxVQUFVLFNBQVNtcEQsR0FBRyxNQUFNLElBQUk5RyxFQUFFbjRCLFFBQVEsU0FBU2kvQixHQUFHLE1BQU0sSUFBSTFSLE1BQU0scUNBQXFDNEssRUFBRXdlLElBQUksV0FBVyxNQUFNLEtBQUt4ZSxFQUFFeWUsTUFBTSxTQUFTM1gsR0FBRyxNQUFNLElBQUkxUixNQUFNLG1DQUFtQzRLLEVBQUUwZSxNQUFNLFdBQVcsT0FBTyxJQUFJLFNBQVM1WCxFQUFFNWlFLEVBQUU3RSxHQUFHLGFBQWEsU0FBU3NCLEVBQUVtbUUsR0FBRyxPQUFPQSxHQUFHQSxFQUFFbmlELFdBQVdtaUQsRUFBRSxDQUFDMTBELFFBQVEwMEQsR0FBRzVpRSxFQUFFeWdCLFlBQVcsRUFBR3pnQixFQUFFc25HLHNCQUFzQnhwRyxFQUFFLElBQUlnK0QsRUFBRTNnRSxFQUFFLElBQUlzRCxFQUFFaEMsRUFBRXRCLEVBQUUsS0FBS2lwQyxFQUFFanBDLEVBQUUsSUFBSXdoQyxFQUFFeGhDLEVBQUUsSUFBSThzRSxFQUFFeHJFLEVBQUV0QixFQUFFLEtBQUt1RCxFQUFFdkQsRUFBRSxJQUFrUCxTQUFTMkMsRUFBRThrRSxFQUFFNWlFLEVBQUU3RSxHQUFHc0YsS0FBSzhtRyxRQUFRM2tDLEdBQUcsR0FBR25pRSxLQUFLK21HLFNBQVN4bkcsR0FBRyxHQUFHUyxLQUFLZ25HLFdBQVd0c0csR0FBRyxHQUFHaXBDLEVBQUVzakUsdUJBQXVCam5HLE1BQU1rOEIsRUFBRWdyRSwwQkFBMEJsbkcsTUFBeFhULEVBQUU0bkcsUUFBUSxRQUFRNW5HLEVBQUU2bkcsa0JBQWtCLEVBQUU3bkcsRUFBRThuRyxrQ0FBa0MsRUFBRTluRyxFQUFFK25HLGlCQUFpQixDQUFDQyxFQUFFLGNBQWNDLEVBQUUsZ0JBQWdCQyxFQUFFLGdCQUFnQkMsRUFBRSxXQUFXQyxFQUFFLG1CQUFtQkMsRUFBRSxrQkFBa0JDLEVBQUUsa0JBQWtCQyxFQUFFLFlBQTRKenFHLEVBQUVsRCxVQUFVLENBQUMrckIsWUFBWTdvQixFQUFFMHFHLE9BQU92Z0MsRUFBRS81RCxRQUFRcXpFLElBQUl0WixFQUFFLzVELFFBQVFxekUsSUFBSXdSLGVBQWUsU0FBU253QixFQUFFNWlFLEdBQUcsR0FBRyxvQkFBb0I4N0QsRUFBRWpoRSxTQUFTRSxLQUFLNm5FLEdBQUcsQ0FBQyxHQUFHNWlFLEVBQUUsTUFBTSxJQUFJdkIsRUFBRXlQLFFBQVEsMkNBQTJDNHRELEVBQUU3OEQsT0FBT3dCLEtBQUs4bUcsUUFBUTNrQyxRQUFRbmlFLEtBQUs4bUcsUUFBUTNrQyxHQUFHNWlFLEdBQUd5b0csaUJBQWlCLFNBQVM3bEMsVUFBVW5pRSxLQUFLOG1HLFFBQVEza0MsSUFBSThsQyxnQkFBZ0IsU0FBUzlsQyxFQUFFNWlFLEdBQUcsR0FBRyxvQkFBb0I4N0QsRUFBRWpoRSxTQUFTRSxLQUFLNm5FLEdBQUc5RyxFQUFFNzhELE9BQU93QixLQUFLK21HLFNBQVM1a0MsT0FBTyxDQUFDLFFBQUcsSUFBUzVpRSxFQUFFLE1BQU0sSUFBSXZCLEVBQUV5UCxRQUFRLDRDQUE0QzAwRCxFQUFFLGtCQUFrQm5pRSxLQUFLK21HLFNBQVM1a0MsR0FBRzVpRSxJQUFJMm9HLGtCQUFrQixTQUFTL2xDLFVBQVVuaUUsS0FBSyttRyxTQUFTNWtDLElBQUlnbUMsa0JBQWtCLFNBQVNobUMsRUFBRTVpRSxHQUFHLEdBQUcsb0JBQW9CODdELEVBQUVqaEUsU0FBU0UsS0FBSzZuRSxHQUFHLENBQUMsR0FBRzVpRSxFQUFFLE1BQU0sSUFBSXZCLEVBQUV5UCxRQUFRLDhDQUE4QzR0RCxFQUFFNzhELE9BQU93QixLQUFLZ25HLFdBQVc3a0MsUUFBUW5pRSxLQUFLZ25HLFdBQVc3a0MsR0FBRzVpRSxHQUFHNm9HLG9CQUFvQixTQUFTam1DLFVBQVVuaUUsS0FBS2duRyxXQUFXN2tDLElBQUlrbUMsNEJBQTRCLFdBQVdwcUcsRUFBRXFxRywwQkFBMEIsSUFBSWxyRyxFQUFFb3FFLEVBQUUvNUQsUUFBUXF6RSxJQUFJdmhGLEVBQUV1aEYsSUFBSTFqRixFQUFFbUMsRUFBRXl6RixZQUFZMzNCLEVBQUUyM0IsWUFBWXp6RixFQUFFd29HLE9BQU92Z0MsRUFBRS81RCxTQUFTLFNBQVMwMEQsRUFBRTVpRSxFQUFFN0UsR0FBRyxhQUFhLFNBQVNzQixFQUFFbW1FLEdBQUcsT0FBT0EsR0FBR0EsRUFBRW5pRCxXQUFXbWlELEVBQUUsQ0FBQzEwRCxRQUFRMDBELEdBQUc1aUUsRUFBRXlnQixZQUFXLEVBQUd6Z0IsRUFBRTBuRyx1QkFBdUIsU0FBUzlrQyxHQUFHOUcsRUFBRTV0RCxRQUFRMDBELEdBQUdua0UsRUFBRXlQLFFBQVEwMEQsR0FBR3grQixFQUFFbDJCLFFBQVEwMEQsR0FBR2ptQyxFQUFFenVCLFFBQVEwMEQsR0FBR3FGLEVBQUUvNUQsUUFBUTAwRCxHQUFHbGtFLEVBQUV3UCxRQUFRMDBELEdBQUc5a0UsRUFBRW9RLFFBQVEwMEQsSUFBSTVpRSxFQUFFZ3BHLGtCQUFrQixTQUFTcG1DLEVBQUU1aUUsRUFBRTdFLEdBQUd5bkUsRUFBRTJrQyxRQUFRdm5HLEtBQUs0aUUsRUFBRWwzRCxNQUFNMUwsR0FBRzRpRSxFQUFFMmtDLFFBQVF2bkcsR0FBRzdFLFVBQVV5bkUsRUFBRTJrQyxRQUFRdm5HLEtBQUssSUFBSTg3RCxFQUFFci9ELEVBQUV0QixFQUFFLEtBQUtzRCxFQUFFaEMsRUFBRXRCLEVBQUUsS0FBS2lwQyxFQUFFM25DLEVBQUV0QixFQUFFLEtBQUt3aEMsRUFBRWxnQyxFQUFFdEIsRUFBRSxLQUFLOHNFLEVBQUV4ckUsRUFBRXRCLEVBQUUsS0FBS3VELEVBQUVqQyxFQUFFdEIsRUFBRSxLQUFLMkMsRUFBRXJCLEVBQUV0QixFQUFFLE1BQU0sU0FBU3luRSxFQUFFNWlFLEVBQUU3RSxHQUFHLGFBQWE2RSxFQUFFeWdCLFlBQVcsRUFBRyxJQUFJaGtCLEVBQUV0QixFQUFFLElBQUkyZ0UsRUFBRSxDQUFDbXRDLFVBQVUsQ0FBQyxRQUFRLE9BQU8sT0FBTyxTQUFTN2EsTUFBTSxPQUFPOGEsWUFBWSxTQUFTdG1DLEdBQUcsR0FBRyxpQkFBaUJBLEVBQUUsQ0FBQyxJQUFJNWlFLEVBQUV2RCxFQUFFUyxRQUFRNCtELEVBQUVtdEMsVUFBVXJtQyxFQUFFam1FLGVBQWVpbUUsRUFBRTVpRSxHQUFHLEVBQUVBLEVBQUUycUIsU0FBU2k0QyxFQUFFLElBQUksT0FBT0EsR0FBRzJlLElBQUksU0FBUzNlLEdBQUcsR0FBR0EsRUFBRTlHLEVBQUVvdEMsWUFBWXRtQyxHQUFHLG9CQUFvQnZ6RCxTQUFTeXNELEVBQUVvdEMsWUFBWXB0QyxFQUFFc3lCLFFBQVF4ckIsRUFBRSxDQUFDLElBQUk1aUUsRUFBRTg3RCxFQUFFbXRDLFVBQVVybUMsR0FBR3Z6RCxRQUFRclAsS0FBS0EsRUFBRSxPQUFPLElBQUksSUFBSTdFLEVBQUV3RCxVQUFVakMsT0FBT0QsRUFBRWIsTUFBTVQsRUFBRSxFQUFFQSxFQUFFLEVBQUUsR0FBR3NELEVBQUUsRUFBRUEsRUFBRXRELEVBQUVzRCxJQUFJaEMsRUFBRWdDLEVBQUUsR0FBR0UsVUFBVUYsR0FBRzRRLFFBQVFyUCxHQUFHcEIsTUFBTXlRLFFBQVE1UyxNQUFNdUQsRUFBRWtPLFFBQVE0dEQsRUFBRThHLEVBQUV4bUIsUUFBUXA4QyxFQUFFa08sU0FBUyxTQUFTMDBELEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYTZFLEVBQUV5Z0IsWUFBVyxFQUFHemdCLEVBQUVtcEcseUJBQXlCLFNBQVN2bUMsR0FBRyxJQUFJNWlFLEVBQUUvRixPQUFPcUMsT0FBTyxNQUFNMEQsRUFBRTJtQixhQUFZLEVBQUczbUIsRUFBRW9wRyxrQkFBaUIsRUFBR3BwRyxFQUFFcXBHLGtCQUFpQixFQUFHcnBHLEVBQUVzcEcsa0JBQWlCLEVBQUcsSUFBSW51RyxFQUFFbEIsT0FBT3FDLE9BQU8sTUFBTSxPQUFPbkIsRUFBRXFPLFdBQVUsRUFBRyxDQUFDa3JFLFdBQVcsQ0FBQzYwQixVQUFVOXNHLEVBQUUrc0csc0JBQXNCcnVHLEVBQUV5bkUsRUFBRTZtQyx3QkFBd0JDLGFBQWE5bUMsRUFBRSttQywrQkFBK0IxOUYsUUFBUSxDQUFDczlGLFVBQVU5c0csRUFBRStzRyxzQkFBc0J4cEcsRUFBRTRpRSxFQUFFZ25DLHFCQUFxQkYsYUFBYTltQyxFQUFFaW5DLDhCQUE4QjdwRyxFQUFFOHBHLGdCQUFnQixTQUFTbG5DLEVBQUU1aUUsRUFBRTdFLEdBQUcsT0FBbVYsU0FBV3luRSxFQUFFNWlFLEdBQUcsWUFBTyxJQUFTNGlFLEVBQUUybUMsVUFBVXZwRyxJQUFHLElBQUs0aUUsRUFBRTJtQyxVQUFVdnBHLFFBQUcsSUFBUzRpRSxFQUFFOG1DLGFBQWE5bUMsRUFBRThtQyxjQUFjLFNBQVM5bUMsSUFBRyxJQUFLbmtFLEVBQUVta0UsS0FBS25rRSxFQUFFbWtFLElBQUcsRUFBRzlHLEVBQUV5bEIsSUFBSSxRQUFRLCtEQUErRDNlLEVBQUUsOE9BQS9HLENBQThWNWlFLElBQUcsR0FBeHhCb2tDLENBQUUsbUJBQW1CdytCLEVBQUU1aUUsRUFBRWlNLFFBQVFqTSxFQUFFMDBFLFdBQVd2NUUsSUFBSTZFLEVBQUUrb0csc0JBQXNCLFdBQVc5dUcsT0FBT21HLEtBQUszQixHQUFHNkosU0FBUSxTQUFVczZELFVBQVVua0UsRUFBRW1rRSxPQUFPLElBQUlubUUsRUFBRXRCLEVBQUUsSUFBSTJnRSxFQUFFLFNBQVM4RyxHQUFHLEdBQUdBLEdBQUdBLEVBQUVuaUQsV0FBVyxPQUFPbWlELEVBQUUsSUFBSTVpRSxFQUFFLEdBQUcsR0FBRyxNQUFNNGlFLEVBQUUsSUFBSSxJQUFJem5FLEtBQUt5bkUsRUFBRTNvRSxPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRXpuRSxLQUFLNkUsRUFBRTdFLEdBQUd5bkUsRUFBRXpuRSxJQUFJLE9BQU82RSxFQUFFa08sUUFBUTAwRCxFQUFFNWlFLEVBQXJKLENBQXdKN0UsRUFBRSxLQUFLc0QsRUFBRXhFLE9BQU9xQyxPQUFPLE9BQXdkLFNBQVNzbUUsRUFBRTVpRSxFQUFFN0UsSUFBSTZFLEVBQUU3RSxFQUFFLEVBQUZBLEVBQUssSUFBS3NLLEtBQUssQ0FBQ205RCxFQUFFbm1FLEVBQUUsbWhLQUFtaEssS0FBS21tRSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUVxL0QsRUFNbm8yTHI5RCxJQUFtd0prRSxPQUE5dkpsRyxFQUFFLENBQUN0QixFQUFFLElBQUlBLEVBQUUsVUFBSyxLQUFVMmdFLEVBQUUsU0FBUzhHLEVBQUU1aUUsR0FBRyxPQUFPLFNBQVM0aUUsRUFBRTVpRSxFQUFFN0UsR0FBRyxhQUFhLFNBQVNzQixFQUFFbW1FLEVBQUU1aUUsR0FBRyxJQUFJLElBQUk3RSxLQUFLNkUsRUFBRTRpRSxFQUFFem5FLEdBQUc2RSxFQUFFN0UsR0FBRyxPQUFPeW5FLEVBQUUsSUFBSTlHLEVBQUU4RyxFQUFFbW5DLE9BQU8sU0FBU3RyRyxFQUFFbWtFLEVBQUU1aUUsR0FBR1MsS0FBSzBzQyxRQUFRLGlCQUFpQnkxQixFQUFFdHlELFNBQVNvZCxjQUFjazFDLEdBQUdBLEVBQUU5RyxJQUFJcjdELEtBQUt1cEcsU0FBU2x1QyxFQUFFcjdELEtBQUswc0MsVUFBVTFzQyxLQUFLOEwsUUFBUTlQLEVBQUUsR0FBR2dFLEtBQUtrbUIsWUFBWTBnRSxVQUFVNW1GLEtBQUsrakMsT0FBT3hrQyxHQUFHUyxLQUFLeWtHLFVBQVUsSUFBSTlnRSxFQUFFM2xDLEVBQUU3RCxVQUFVWCxPQUFPcUMsT0FBT25CLEVBQUVQLFdBQVc2RCxFQUFFNG9GLFNBQVMsR0FBR2pqRCxFQUFFSSxPQUFPLFNBQVNvK0IsR0FBR25tRSxFQUFFZ0UsS0FBSzhMLFFBQVFxMkQsSUFBSSxJQUFJam1DLEVBQUUsQ0FBQ2txQixVQUFTLEVBQUdvakQsVUFBUyxFQUFHbmtDLE9BQU0sR0FBSSxTQUFTbUMsRUFBRXJGLEVBQUU1aUUsRUFBRTdFLEdBQUcsT0FBT0EsRUFBRUEsR0FBRyxRQUFRNkUsRUFBRTFFLEtBQUtILEdBQUd5bkUsRUFBRTVpRSxHQUFHQSxFQUFFNGlFLEVBQW9zSSxPQUFsc0l4K0IsRUFBRThnRSxRQUFRLFdBQVd6a0csS0FBSzZ1RCxTQUFTLEdBQUc3dUQsS0FBS3lwRyxlQUFlenBHLEtBQUswcEcsV0FBVyxDQUFDemtELEVBQUUsRUFBRWlLLEVBQUUsR0FBR2x2RCxLQUFLMnBHLFVBQVUsQ0FBQzFrRCxFQUFFLEVBQUVpSyxFQUFFLEdBQUdsdkQsS0FBSzRwRyxjQUFjNXRHLEVBQUUsR0FBR2dFLEtBQUs2dUQsVUFBVSxJQUFJc1QsRUFBRTdtQyxpQkFBaUJ0N0IsS0FBSzBzQyxTQUFTeFEsRUFBRWltQyxFQUFFdFQsWUFBWTd1RCxLQUFLMHNDLFFBQVFodEIsTUFBTW12QyxTQUFTLFlBQVk3dUQsS0FBS29SLEdBQUcsY0FBY3BSLEtBQUs2cEcsZUFBZTdwRyxLQUFLb1IsR0FBRyxjQUFjcFIsS0FBSzhwRyxlQUFlOXBHLEtBQUtvUixHQUFHLFlBQVlwUixLQUFLK3BHLGFBQWEvcEcsS0FBS2dxRyxTQUFTaHFHLEtBQUtpcUcsY0FBY3RtRSxFQUFFc21FLFdBQVcsV0FBV2pxRyxLQUFLbTRFLFFBQVFuNEUsS0FBSzhMLFFBQVEwdUQsT0FBT3g2RCxLQUFLMHNDLFFBQVF1OEMsaUJBQWlCanBGLEtBQUs4TCxRQUFRMHVELFFBQVEsQ0FBQ3g2RCxLQUFLMHNDLFNBQVMxc0MsS0FBS2txRyxlQUFldm1FLEVBQUVPLGNBQWMsU0FBU2krQixFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFLENBQUN1RCxHQUFHeUwsT0FBT3RRLEdBQUdzRixLQUFLbXFHLFVBQVVob0MsRUFBRW5tRSxHQUFHZ0UsS0FBS29xRyxvQkFBb0Jqb0MsRUFBRTVpRSxFQUFFN0UsSUFBSWlwQyxFQUFFeW1FLG9CQUFvQixTQUFTN3FHLEVBQUU3RSxFQUFFc0IsR0FBRyxJQUFJcS9ELEVBQUU4RyxFQUFFbW5DLE9BQU8sR0FBR2p1QyxHQUFHcjdELEtBQUt1cEcsU0FBUyxDQUFDLElBQUl2ckcsRUFBRXE5RCxFQUFFNFosTUFBTXY2RSxHQUFHc0QsRUFBRXFOLEtBQUs5TCxFQUFFUyxLQUFLdXBHLFNBQVN2bUUsUUFBUWhsQyxFQUFFaEMsS0FBSzJuQyxFQUFFOGxFLGFBQWEsV0FBVyxJQUFJdG5DLEVBQUU3bUMsaUJBQWlCdDdCLEtBQUswc0MsU0FBU250QyxFQUFFUyxLQUFLcXFHLGtCQUFrQmxvQyxFQUFFOTdCLEtBQUssU0FBUzNyQyxFQUFFc0YsS0FBS3FxRyxrQkFBa0Jsb0MsRUFBRTU3QixJQUFJLFVBQVV2bUMsS0FBSzZ1RCxTQUFTNUosRUFBRXpwRCxNQUFNK0QsR0FBRyxFQUFFQSxFQUFFUyxLQUFLNnVELFNBQVNLLEVBQUUxekQsTUFBTWQsR0FBRyxFQUFFQSxFQUFFc0YsS0FBS3NxRyxzQkFBc0Jub0MsSUFBSXgrQixFQUFFMG1FLGtCQUFrQixTQUFTbG9DLEVBQUV6bkUsR0FBRyxJQUFJLEdBQUd5bkUsRUFBRTFsRSxRQUFRLEtBQUssQ0FBQyxJQUFJVCxFQUFFdUQsRUFBRVMsS0FBSzBzQyxRQUFRNWdCLFlBQVksT0FBTzl2QixFQUFFckIsV0FBV3duRSxHQUFHLElBQUlubUUsRUFBRXRCLEdBQUcsRUFBRSxPQUFPd3ZCLFNBQVNpNEMsRUFBRSxLQUFLeCtCLEVBQUUybUUsc0JBQXNCLFNBQVNub0MsR0FBRyxJQUFJNWlFLEVBQUU0aUUsRUFBRTE3QixVQUFVLEdBQUcsSUFBSWxuQyxFQUFFOUMsUUFBUSxVQUFVLENBQUMsSUFBSS9CLEVBQUU2RSxFQUFFeEQsTUFBTSxLQUFLQyxFQUFFLElBQUl1RCxFQUFFOUMsUUFBUSxZQUFZLEdBQUcsRUFBRTQrRCxFQUFFbnhDLFNBQVN4dkIsRUFBRXNCLEdBQUcsSUFBSWdDLEVBQUVrc0IsU0FBU3h2QixFQUFFc0IsRUFBRSxHQUFHLElBQUlnRSxLQUFLNnVELFNBQVM1SixHQUFHb1csRUFBRXI3RCxLQUFLNnVELFNBQVNLLEdBQUdseEQsSUFBSTJsQyxFQUFFa21FLGNBQWMsU0FBUzFuQyxFQUFFNWlFLEdBQUdTLEtBQUswc0MsUUFBUXhULFVBQVUzMEIsSUFBSSxtQkFBbUJ2RSxLQUFLb3FHLG9CQUFvQixjQUFjam9DLEVBQUUsQ0FBQzVpRSxLQUFLb2tDLEVBQUU0bUUsVUFBVSxTQUFTcG9DLEVBQUU1aUUsR0FBR1MsS0FBS3dxRyxZQUFZeHFHLEtBQUt5cEcsZUFBZXpwRyxLQUFLeXFHLHFCQUFxQnpxRyxLQUFLNHBHLGNBQWMza0QsRUFBRWpsRCxLQUFLNnVELFNBQVM1SixFQUFFamxELEtBQUs0cEcsY0FBYzE2QyxFQUFFbHZELEtBQUs2dUQsU0FBU0ssRUFBRWx2RCxLQUFLMHFHLGFBQWExcUcsS0FBSzJwRyxVQUFVMWtELEVBQUUsRUFBRWpsRCxLQUFLMnBHLFVBQVV6NkMsRUFBRSxFQUFFbHZELEtBQUswc0MsUUFBUXhULFVBQVUzMEIsSUFBSSxlQUFldkUsS0FBS2trQyxjQUFjLFlBQVlpK0IsRUFBRSxDQUFDNWlFLElBQUlTLEtBQUsycUcsWUFBWWhuRSxFQUFFOG1FLG1CQUFtQixXQUFXLElBQUl0b0MsRUFBRW5pRSxLQUFLNHFHLGVBQWUsR0FBR3pvQyxFQUFFLENBQUMsSUFBSXpuRSxFQUFFNkUsRUFBRVMsS0FBSzBzQyxTQUFTMXdDLEVBQUV1RCxFQUFFNGlFLEdBQUc5RyxFQUFFcjdELEtBQUswc0MsUUFBUTFHLHdCQUF3QmhvQyxFQUFFbWtFLEVBQUVuOEIsd0JBQXdCckMsRUFBRTNuQyxFQUFFNnVHLGdCQUFnQjd1RyxFQUFFOHVHLGlCQUFpQjV1RSxFQUFFbGdDLEVBQUUrdUcsZUFBZS91RyxFQUFFZ3ZHLGtCQUFrQnhqQyxFQUFFeG5FLEtBQUtpckcsc0JBQXNCLENBQUNobUQsRUFBRW9XLEVBQUVoMUIsTUFBTXJvQyxFQUFFcW9DLEtBQUtycUMsRUFBRTZ1RyxpQkFBaUIzN0MsRUFBRW1NLEVBQUU5MEIsS0FBS3ZvQyxFQUFFdW9DLElBQUl2cUMsRUFBRSt1RyxpQkFBaUIvcUcsS0FBS2tyRyxZQUFZLENBQUN0ckMsTUFBTTVqRSxFQUFFNGpFLE1BQU1qOEIsRUFBRTZqQyxFQUFFdmlCLEVBQUV2cUQsRUFBRWtsRSxNQUFNQyxPQUFPN2pFLEVBQUU2akUsT0FBTzNqQyxFQUFFc3JDLEVBQUV0WSxFQUFFeDBELEVBQUVtbEUsVUFBVWw4QixFQUFFaW5FLGFBQWEsV0FBVyxJQUFJem9DLEVBQUVuaUUsS0FBSzhMLFFBQVFxL0YsWUFBWSxHQUFHaHBDLEVBQUUsT0FBT0EsYUFBYXI2QixZQUFZcTZCLEVBQUUsaUJBQWlCQSxFQUFFdHlELFNBQVNvZCxjQUFjazFDLEdBQUduaUUsS0FBSzBzQyxRQUFRNWdCLFlBQVk2WCxFQUFFbW1FLGNBQWMsU0FBUzNuQyxFQUFFNWlFLEVBQUU3RSxHQUFHc0YsS0FBS29xRyxvQkFBb0IsY0FBY2pvQyxFQUFFLENBQUM1aUUsRUFBRTdFLEtBQUtpcEMsRUFBRXluRSxTQUFTLFNBQVNqcEMsRUFBRTVpRSxFQUFFN0UsR0FBRyxHQUFHc0YsS0FBS3dxRyxVQUFVLENBQUMsSUFBSXh1RyxFQUFFdEIsRUFBRXVxRCxFQUFFb1csRUFBRTNnRSxFQUFFdzBELEVBQUVseEQsRUFBRWdDLEtBQUs4TCxRQUFRdS9GLEtBQUsxbkUsRUFBRTNsQyxHQUFHQSxFQUFFLEdBQUdrK0IsRUFBRWwrQixHQUFHQSxFQUFFLEdBQUdoQyxFQUFFd3JFLEVBQUV4ckUsRUFBRTJuQyxHQUFHMDNCLEVBQUVtTSxFQUFFbk0sRUFBRW4vQixHQUFHbGdDLEVBQUVnRSxLQUFLc3JHLFlBQVksSUFBSXR2RyxFQUFFMm5DLEdBQUcwM0IsRUFBRXI3RCxLQUFLc3JHLFlBQVksSUFBSWp3QyxFQUFFbi9CLEdBQUdsZ0MsRUFBRSxLQUFLZ0UsS0FBSzhMLFFBQVF5L0YsS0FBSyxFQUFFdnZHLEVBQUVxL0QsRUFBRSxLQUFLcjdELEtBQUs4TCxRQUFReS9GLEtBQUssRUFBRWx3QyxFQUFFcjdELEtBQUs2dUQsU0FBUzVKLEVBQUVqbEQsS0FBSzRwRyxjQUFjM2tELEVBQUVqcEQsRUFBRWdFLEtBQUs2dUQsU0FBU0ssRUFBRWx2RCxLQUFLNHBHLGNBQWMxNkMsRUFBRW1NLEVBQUVyN0QsS0FBSzJwRyxVQUFVMWtELEVBQUVqcEQsRUFBRWdFLEtBQUsycEcsVUFBVXo2QyxFQUFFbU0sRUFBRXI3RCxLQUFLa2tDLGNBQWMsV0FBV2krQixFQUFFLENBQUM1aUUsRUFBRTdFLE1BQU1pcEMsRUFBRTJuRSxZQUFZLFNBQVNucEMsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0YsS0FBSzhMLFFBQVFxL0YsWUFBWSxPQUFPNXJHLEVBQUUsSUFBSXZELEVBQUUsS0FBS21tRSxFQUFFLFFBQVEsU0FBUzlHLEVBQUVtTSxHQUFHeG5FLEtBQUtpckcsc0JBQXNCOW9DLEdBQUd6bkUsRUFBRSxRQUFRc0QsRUFBRWdDLEtBQUtrckcsWUFBWWx2RyxHQUFHLE9BQU9nQyxFQUFFd3BFLEVBQUV4cEUsRUFBRXRELEVBQUUsU0FBU0csS0FBS29QLElBQUlveEQsRUFBRXhnRSxLQUFLZytELElBQUk3NkQsRUFBRXVCLEtBQUtva0MsRUFBRW9tRSxZQUFZLFNBQVM1bkMsRUFBRTVpRSxHQUFHUyxLQUFLMHNDLFFBQVF4VCxVQUFVNzhCLE9BQU8sbUJBQW1CMkQsS0FBS29xRyxvQkFBb0IsWUFBWWpvQyxFQUFFLENBQUM1aUUsS0FBS29rQyxFQUFFNm5FLFFBQVEsU0FBU3JwQyxFQUFFNWlFLEdBQUdTLEtBQUt3cUcsWUFBWXhxRyxLQUFLMHNDLFFBQVFodEIsTUFBTSttQixVQUFVLEdBQUd6bUMsS0FBSzBxRyxhQUFhMXFHLEtBQUswc0MsUUFBUXhULFVBQVU3OEIsT0FBTyxlQUFlMkQsS0FBS2trQyxjQUFjLFVBQVVpK0IsRUFBRSxDQUFDNWlFLE1BQU1va0MsRUFBRWduRSxRQUFRLFdBQVcsR0FBRzNxRyxLQUFLeXJHLFdBQVcsQ0FBQ3pyRyxLQUFLMHJHLGVBQWUsSUFBSXZwQyxFQUFFbmlFLEtBQUt5NkIsdUJBQXNCLFdBQVkwbkMsRUFBRXdvQyxlQUFlaG5FLEVBQUUrbUUsV0FBVyxXQUFXMXFHLEtBQUswc0MsUUFBUWh0QixNQUFNMm1CLEtBQUtybUMsS0FBSzZ1RCxTQUFTNUosRUFBRSxLQUFLamxELEtBQUswc0MsUUFBUWh0QixNQUFNNm1CLElBQUl2bUMsS0FBSzZ1RCxTQUFTSyxFQUFFLE1BQU12ckIsRUFBRStuRSxhQUFhLFdBQVcxckcsS0FBSzBzQyxRQUFRaHRCLE1BQU0rbUIsVUFBVSxnQkFBZ0J6bUMsS0FBSzJwRyxVQUFVMWtELEVBQUUsT0FBT2psRCxLQUFLMnBHLFVBQVV6NkMsRUFBRSxVQUFVdnJCLEVBQUVnb0UsWUFBWSxTQUFTeHBDLEVBQUU1aUUsR0FBR1MsS0FBS2trQyxjQUFjLGNBQWNpK0IsRUFBRSxDQUFDNWlFLEtBQUtva0MsRUFBRWlvRSxZQUFZLFNBQVN6cEMsRUFBRTVpRSxHQUFHUyxLQUFLNnVELFNBQVM1SixFQUFFa2QsRUFBRW5pRSxLQUFLNnVELFNBQVNLLEVBQUUzdkQsRUFBRVMsS0FBSzBxRyxjQUFjL21FLEVBQUVxbUUsT0FBTyxXQUFXaHFHLEtBQUt3cUcsV0FBVSxHQUFJN21FLEVBQUVraUUsUUFBUSxXQUFXN2xHLEtBQUt3cUcsV0FBVSxFQUFHeHFHLEtBQUt5ckcsWUFBWXpyRyxLQUFLd3JHLFdBQVc3bkUsRUFBRTFuQixRQUFRLFdBQVdqYyxLQUFLNmxHLFVBQVU3bEcsS0FBSzBzQyxRQUFRaHRCLE1BQU0rbUIsVUFBVSxHQUFHem1DLEtBQUswc0MsUUFBUWh0QixNQUFNMm1CLEtBQUssR0FBR3JtQyxLQUFLMHNDLFFBQVFodEIsTUFBTTZtQixJQUFJLEdBQUd2bUMsS0FBSzBzQyxRQUFRaHRCLE1BQU1tdkMsU0FBUyxHQUFHN3VELEtBQUs2ckcsZ0JBQWdCN3JHLEtBQUt1cEcsVUFBVXZwRyxLQUFLdXBHLFNBQVN1QyxXQUFXLGdCQUFnQm5vRSxFQUFFaGUsTUFBTSxhQUFhMDFDLEdBQUdBLEVBQUUwd0MsU0FBUzF3QyxFQUFFMHdDLFFBQVEsY0FBYy90RyxHQUFVQSxFQUF0cUosQ0FBeXFKQSxFQUFFbWtFLEVBQUU1aUUsSUFBSXBCLE1BQU1vQixFQUFFdkQsTUFBTW1tRSxFQUFFeG1CLFFBQVEwZixJQUFhLFNBQVM4RyxFQUFFNWlFLEdBQUc0aUUsRUFBRXhtQixRQUFRLENBQUN1akIsV0FBVyxJQUFJLG1CQUFtQixLQUFLb29CLE9BQU8sS0FBSyxnQkFBZ0IsS0FBSyxrQkFBa0IsS0FBSyxvQkFBb0IsTUFBTSxlQUFlLEtBQUssZ0JBQWdCLE1BQU0sYUFBYSxLQUFLLG1CQUFtQixNQUFNLGFBQWEsS0FBSyxhQUFhLE1BQU05aUYsTUFBTSxLQUFLazhELE1BQU0sSUFBSXNyQyxRQUFRLEtBQUtDLE9BQU8sS0FBS3puRSxRQUFRLElBQUkwbkUsS0FBSyxLQUFLLGNBQWMsTUFBTXh3QyxNQUFNLElBQUksY0FBYyxLQUFLLFlBQVksS0FBSyxjQUFjLEtBQUttRSxPQUFPLElBQUl4NUIsS0FBSyxJQUFJLGNBQWMsS0FBS21oRCxPQUFPLElBQUksZ0JBQWdCLEtBQUssY0FBYyxLQUFLLGFBQWEsS0FBSyxhQUFhLEtBQUsya0IsUUFBUSxLQUFLbnBCLFNBQVMsSUFBSSxhQUFhLEtBQUssYUFBYSxLQUFLdUUsUUFBUSxJQUFJLGlCQUFpQixLQUFLLGVBQWUsS0FBSyxjQUFjLEtBQUssaUJBQWlCLEtBQUsxNEIsU0FBUyxLQUFLLGFBQWEsS0FBSyxpQkFBaUIsS0FBS3RvQixJQUFJLElBQUloSyxXQUFXLEtBQUssY0FBYyxLQUFLLGtCQUFrQixLQUFLc21ELFdBQVcsSUFBSWpqQixNQUFNLElBQUksY0FBYyxLQUFLLGNBQWMsS0FBSyw2QkFBNkIsTUFBTSxVQUFVLE1BQU0sU0FBU3VDLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLElBQUksU0FBUzJnRSxJQUFJLEdBQUcsb0JBQW9CbjNELFVBQVVBLFFBQVFrb0csVUFBVSxPQUFNLEVBQUcsR0FBR2xvRyxRQUFRa29HLFVBQVVDLEtBQUssT0FBTSxFQUFHLEdBQUcsbUJBQW1CQyxNQUFNLE9BQU0sRUFBRyxJQUFJLE9BQU85c0csS0FBS3JGLFVBQVVDLFNBQVNFLEtBQUs0SixRQUFRa29HLFVBQVU1c0csS0FBSyxJQUFHLGlCQUFpQixFQUFHLE1BQU0yaUUsR0FBRyxPQUFNLEdBQUksU0FBU25rRSxFQUFFdUIsRUFBRTdFLEVBQUVpcEMsR0FBRyxPQUFPMDNCLElBQUk4RyxFQUFFeG1CLFFBQVEzOUMsRUFBRWtHLFFBQVFrb0csVUFBVWpxQyxFQUFFeG1CLFFBQVEzOUMsRUFBRSxTQUFTbWtFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSTJnRSxFQUFFLENBQUMsTUFBTUEsRUFBRXIyRCxLQUFLN0csTUFBTWs5RCxFQUFFOTdELEdBQUcsSUFBSXZCLEVBQUUsSUFBSUgsU0FBU0QsS0FBS08sTUFBTWdrRSxFQUFFOUcsSUFBSSxPQUFPM2dFLEdBQUdzQixFQUFFZ0MsRUFBRXRELEVBQUVQLFdBQVc2RCxHQUFHQSxFQUFFRyxNQUFNLEtBQUtELFdBQVdpa0UsRUFBRXhtQixRQUFRMzlDLEdBQUcsU0FBU21rRSxFQUFFNWlFLEVBQUU3RSxHQUFHeW5FLEVBQUV4bUIsUUFBUWpoRCxFQUFFLElBQUkrUyxTQUFTLFNBQVMwMEQsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXEvRCxFQUtsdk1uNUQsWUFBTyxLQUFVbTVELEVBQUUsbUJBQW1Cci9ELEVBQUUsV0FBVyxhQUFhLFNBQVNtbUUsRUFBRUEsR0FBRyxJQUFJNWlFLEVBQUU1RSxXQUFXd25FLEdBQUcsT0FBTyxHQUFHQSxFQUFFMWxFLFFBQVEsT0FBT2pCLE1BQU0rRCxJQUFJQSxFQUFFLElBQUlBLEVBQUUsb0JBQW9CcVAsUUFBUSxhQUFhLFNBQVN1ekQsR0FBR3Z6RCxRQUFRQyxNQUFNc3pELElBQUl6bkUsRUFBRSxDQUFDLGNBQWMsZUFBZSxhQUFhLGdCQUFnQixhQUFhLGNBQWMsWUFBWSxlQUFlLGtCQUFrQixtQkFBbUIsaUJBQWlCLHFCQUFxQnNCLEVBQUV0QixFQUFFdUIsT0FBTyxTQUFTby9ELEVBQUU4RyxHQUFHLElBQUl6bkUsRUFBRTRnQyxpQkFBaUI2bUMsR0FBRyxPQUFPem5FLEdBQUc2RSxFQUFFLGtCQUFrQjdFLEVBQUUsNkZBQTZGQSxFQUFFLElBQUlzRCxFQUFFMmxDLEdBQUUsRUFBNHJDLE9BQXpyQyxTQUFTekgsRUFBRTM4QixHQUFHLEdBQUcsV0FBVyxJQUFJb2tDLEVBQUUsQ0FBQ0EsR0FBRSxFQUFHLElBQUlwa0MsRUFBRXNRLFNBQVN5SixjQUFjLE9BQU8vWixFQUFFbWdCLE1BQU1rZ0QsTUFBTSxRQUFRcmdFLEVBQUVtZ0IsTUFBTTZuRSxRQUFRLGtCQUFrQmhvRixFQUFFbWdCLE1BQU02c0YsWUFBWSxRQUFRaHRHLEVBQUVtZ0IsTUFBTThzRixZQUFZLGtCQUFrQmp0RyxFQUFFbWdCLE1BQU0rc0YsVUFBVSxhQUFhLElBQUkveEcsRUFBRW1WLFNBQVMyM0IsTUFBTTMzQixTQUFTd3JDLGdCQUFnQjNnRCxFQUFFbXpCLFlBQVl0dUIsR0FBRyxJQUFJdkQsRUFBRXEvRCxFQUFFOTdELEdBQUd2QixFQUFFLEtBQUtuRCxLQUFLMmdFLE1BQU0yRyxFQUFFbm1FLEVBQUU0akUsUUFBUTFqQyxFQUFFd3dFLGVBQWUxdUcsRUFBRXRELEVBQUVrekIsWUFBWXJ1QixJQUE3VixHQUFvVyxpQkFBaUJBLElBQUlBLEVBQUVzUSxTQUFTb2QsY0FBYzF0QixJQUFJQSxHQUFHLGlCQUFpQkEsR0FBR0EsRUFBRWs5QixTQUFTLENBQUMsSUFBSStxQyxFQUFFbk0sRUFBRTk3RCxHQUFHLEdBQUcsUUFBUWlvRSxFQUFFaGpDLFFBQVEsT0FBTyxXQUFXLElBQUksSUFBSTI5QixFQUFFLENBQUN2QyxNQUFNLEVBQUVDLE9BQU8sRUFBRW92QixXQUFXLEVBQUVDLFlBQVksRUFBRXlkLFdBQVcsRUFBRUMsWUFBWSxHQUFHcnRHLEVBQUUsRUFBRUEsRUFBRXZELEVBQUV1RCxJQUFJNGlFLEVBQUV6bkUsRUFBRTZFLElBQUksRUFBRSxPQUFPNGlFLEVBQTNILEdBQWdJLElBQUlsa0UsRUFBRSxHQUFHQSxFQUFFMmhFLE1BQU1yZ0UsRUFBRXN0RyxZQUFZNXVHLEVBQUU0aEUsT0FBT3RnRSxFQUFFa29DLGFBQWEsSUFBSSxJQUFJcHFDLEVBQUVZLEVBQUU2dUcsWUFBWSxjQUFjdGxDLEVBQUVpbEMsVUFBVXJ2RyxFQUFFLEVBQUVBLEVBQUVwQixFQUFFb0IsSUFBSSxDQUFDLElBQUk0bkMsRUFBRXRxQyxFQUFFMEMsR0FBR2lTLEVBQUVtNEQsRUFBRXhpQyxHQUFHM3JCLEVBQUUxZSxXQUFXMFUsR0FBR3BSLEVBQUUrbUMsR0FBR3hwQyxNQUFNNmQsR0FBRyxFQUFFQSxFQUFFLElBQUk0b0QsRUFBRWhrRSxFQUFFOHVHLFlBQVk5dUcsRUFBRSt1RyxhQUFhcnpHLEVBQUVzRSxFQUFFZ3ZHLFdBQVdodkcsRUFBRWl2RyxjQUFjenhELEVBQUV4OUMsRUFBRWt2RyxXQUFXbHZHLEVBQUVtdkcsWUFBWW42RSxFQUFFaDFCLEVBQUVvdkcsVUFBVXB2RyxFQUFFcXZHLGFBQWF4dUcsRUFBRWIsRUFBRTRzRyxnQkFBZ0I1c0csRUFBRTZzRyxpQkFBaUI1N0MsRUFBRWp4RCxFQUFFOHNHLGVBQWU5c0csRUFBRStzRyxrQkFBa0J6aEMsRUFBRWxzRSxHQUFHVyxFQUFFaW5ELEVBQUVrZCxFQUFFcUYsRUFBRTVILFFBQU8sSUFBSzNhLElBQUlobkQsRUFBRTJoRSxNQUFNM2EsR0FBR3NrQixFQUFFLEVBQUV0SCxFQUFFbmpFLElBQUksSUFBSXNxRSxFQUFFakgsRUFBRXFGLEVBQUUzSCxRQUFRLE9BQU0sSUFBS3VKLElBQUluckUsRUFBRTRoRSxPQUFPdUosR0FBR0csRUFBRSxFQUFFNXZFLEVBQUV1MUQsSUFBSWp4RCxFQUFFZ3hGLFdBQVdoeEYsRUFBRTJoRSxPQUFPcUMsRUFBRW5qRSxHQUFHYixFQUFFaXhGLFlBQVlqeEYsRUFBRTRoRSxRQUFRbG1FLEVBQUV1MUQsR0FBR2p4RCxFQUFFMHVHLFdBQVcxdUcsRUFBRTJoRSxNQUFNbmtCLEVBQUV4OUMsRUFBRTJ1RyxZQUFZM3VHLEVBQUU0aEUsT0FBTzVzQyxFQUFFaDFCLE1BQWNqQyxFQUFFMUIsS0FBS2lGLEVBQUU3RSxFQUFFNkUsRUFBRTRpRSxHQUFHbm1FLEtBQUttbUUsRUFBRXhtQixRQUFRMGYsSUFBSSxTQUFTOEcsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXEvRCxFQUtwMERyOUQsSUFBazlFa0UsT0FBNzhFbEcsRUFBRSxDQUFDdEIsRUFBRSxVQUFLLEtBQVUyZ0UsRUFBRSxTQUFTOEcsR0FBRyxPQUFPLFNBQVNBLEVBQUU1aUUsR0FBRyxhQUFhLFNBQVM3RSxLQUFLLElBQUlzQixFQUFFdEIsRUFBRVAsVUFBVVgsT0FBT3FDLE9BQU8wRCxFQUFFcEYsV0FBVzZCLEVBQUVrdUcsWUFBWSxXQUFXbHFHLEtBQUt1dEcsY0FBYSxJQUFLdnhHLEVBQUU2dkcsY0FBYyxXQUFXN3JHLEtBQUt1dEcsY0FBYSxJQUFLdnhHLEVBQUV1eEcsYUFBYSxTQUFTaHVHLEdBQUcsSUFBSSxJQUFJN0UsR0FBRzZFLE9BQUUsSUFBU0EsR0FBR0EsR0FBRyxtQkFBbUIsc0JBQXNCdkQsRUFBRXVELEVBQUVTLEtBQUt3dEcsa0JBQWtCLEdBQUdueUMsRUFBRSxFQUFFQSxFQUFFcjdELEtBQUttNEUsUUFBUWw4RSxPQUFPby9ELElBQUksQ0FBQyxJQUFJcjlELEVBQUVnQyxLQUFLbTRFLFFBQVE5YyxHQUFHcjdELEtBQUt5dEcsZ0JBQWdCenZHLEVBQUV1QixHQUFHdkIsRUFBRXRELEdBQUcsUUFBUXNGLE1BQU1taUUsRUFBRXVyQyxlQUFlMXZHLEVBQUUwaEIsTUFBTWl1RixZQUFZM3hHLEtBQUtBLEVBQUV3eEcsa0JBQWtCLE9BQU94eEcsRUFBRTR4RyxZQUFZLFNBQVN6ckMsRUFBRTVpRSxHQUFHUyxLQUFLNnRHLGdCQUFnQjFyQyxLQUFLbmlFLEtBQUs4dEcsbUJBQW1CdnVHLEVBQUU0aUUsRUFBRXpXLGlCQUFpQjFyRCxLQUFLK3RHLGtCQUFrQi90RyxLQUFLZ3VHLHFCQUFxQjdyQyxHQUFHbmlFLEtBQUttcUcsVUFBVSxjQUFjLENBQUNob0MsRUFBRTVpRSxNQUFNLElBQUk4N0QsRUFBRSxDQUFDNHlDLFVBQVMsRUFBR0MsT0FBTSxFQUFHQyxRQUFPLEVBQUdDLFFBQU8sR0FBSXB3RyxFQUFFLENBQUNxd0csT0FBTSxFQUFHQyxVQUFTLEVBQUc3aUQsUUFBTyxFQUFHOGlELFFBQU8sRUFBR3Z2QyxPQUFNLEVBQUd3dkMsTUFBSyxHQUFJLE9BQU94eUcsRUFBRTZ4RyxnQkFBZ0IsU0FBUzFyQyxHQUFHLElBQUk1aUUsRUFBRTg3RCxFQUFFOEcsRUFBRWg5RCxPQUFPbWxGLFVBQVU1dkYsRUFBRXNELEVBQUVta0UsRUFBRWg5RCxPQUFPa0csTUFBTXJQLEdBQUd1RCxHQUFHN0UsRUFBRSxPQUFPc0IsR0FBR2dFLEtBQUt5dUcsZ0JBQWdCenlHLEdBQUdBLEVBQUUreEcsZ0JBQWdCLFdBQVcsSUFBSTVyQyxFQUFFdHlELFNBQVNzbkIsY0FBY2dyQyxHQUFHQSxFQUFFdXNDLE1BQU12c0MsR0FBR3R5RCxTQUFTMjNCLE1BQU0yNkIsRUFBRXVzQyxRQUFRMXlHLEVBQUUyeUcsWUFBWSxTQUFTeHNDLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXNGLEtBQUs0dUcsaUJBQWlCenNDLEVBQUU1aUUsR0FBR1MsS0FBS21xRyxVQUFVLGNBQWMsQ0FBQ2hvQyxFQUFFNWlFLEVBQUU3RSxJQUFJc0YsS0FBSzZ1RyxVQUFVMXNDLEVBQUU1aUUsRUFBRTdFLElBQUlzQixFQUFFNHlHLGlCQUFpQixTQUFTenNDLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRSxDQUFDdXFELEVBQUUxbEQsRUFBRXV2RyxNQUFNOXVHLEtBQUs4dEcsbUJBQW1CZ0IsTUFBTTUvQyxFQUFFM3ZELEVBQUV3dkcsTUFBTS91RyxLQUFLOHRHLG1CQUFtQmlCLE9BQU8sT0FBTy91RyxLQUFLeXJHLFlBQVl6ckcsS0FBS2d2RyxlQUFldDBHLElBQUlzRixLQUFLaXZHLFdBQVc5c0MsRUFBRTVpRSxHQUFHN0UsR0FBR3NCLEVBQUVnekcsZUFBZSxTQUFTN3NDLEdBQUcsT0FBT3RuRSxLQUFLc3FGLElBQUloakIsRUFBRWxkLEdBQUcsR0FBR3BxRCxLQUFLc3FGLElBQUloakIsRUFBRWpULEdBQUcsR0FBR2x6RCxFQUFFa3pHLFVBQVUsU0FBUy9zQyxFQUFFNWlFLEdBQUdTLEtBQUttcUcsVUFBVSxZQUFZLENBQUNob0MsRUFBRTVpRSxJQUFJUyxLQUFLbXZHLGVBQWVodEMsRUFBRTVpRSxJQUFJdkQsRUFBRW16RyxlQUFlLFNBQVNodEMsRUFBRTVpRSxHQUFHUyxLQUFLeXJHLFdBQVd6ckcsS0FBS292RyxTQUFTanRDLEVBQUU1aUUsR0FBR1MsS0FBS3F2RyxhQUFhbHRDLEVBQUU1aUUsSUFBSXZELEVBQUVpekcsV0FBVyxTQUFTOXNDLEVBQUU1aUUsR0FBR1MsS0FBS3lyRyxZQUFXLEVBQUd6ckcsS0FBS3N2RyxvQkFBbUIsRUFBR3R2RyxLQUFLdXFHLFVBQVVwb0MsRUFBRTVpRSxJQUFJdkQsRUFBRXV1RyxVQUFVLFNBQVNwb0MsRUFBRTVpRSxHQUFHUyxLQUFLbXFHLFVBQVUsWUFBWSxDQUFDaG9DLEVBQUU1aUUsS0FBS3ZELEVBQUU2eUcsVUFBVSxTQUFTMXNDLEVBQUU1aUUsRUFBRTdFLEdBQUdzRixLQUFLeXJHLFlBQVl6ckcsS0FBS29yRyxTQUFTanBDLEVBQUU1aUUsRUFBRTdFLElBQUlzQixFQUFFb3ZHLFNBQVMsU0FBU2pwQyxFQUFFNWlFLEVBQUU3RSxHQUFHeW5FLEVBQUV6VyxpQkFBaUIxckQsS0FBS21xRyxVQUFVLFdBQVcsQ0FBQ2hvQyxFQUFFNWlFLEVBQUU3RSxLQUFLc0IsRUFBRW96RyxTQUFTLFNBQVNqdEMsRUFBRTVpRSxHQUFHUyxLQUFLeXJHLFlBQVcsRUFBR2w4RixXQUFXLGtCQUFrQnZQLEtBQUtzdkcsb0JBQW9CMXhHLEtBQUtvQyxPQUFPQSxLQUFLd3JHLFFBQVFycEMsRUFBRTVpRSxJQUFJdkQsRUFBRXd2RyxRQUFRLFNBQVNycEMsRUFBRTVpRSxHQUFHUyxLQUFLbXFHLFVBQVUsVUFBVSxDQUFDaG9DLEVBQUU1aUUsS0FBS3ZELEVBQUV1ekcsUUFBUSxTQUFTcHRDLEdBQUduaUUsS0FBS3N2RyxvQkFBb0JudEMsRUFBRXpXLGtCQUFrQjF2RCxFQUFFcXpHLGFBQWEsU0FBU2x0QyxFQUFFNWlFLEdBQUdTLEtBQUt3dkcsbUJBQW1CLFdBQVdydEMsRUFBRTkyRCxPQUFPckwsS0FBSzJyRyxZQUFZeHBDLEVBQUU1aUUsR0FBRyxXQUFXNGlFLEVBQUU5MkQsT0FBT3JMLEtBQUt3dkcsbUJBQWtCLEVBQUdqZ0csV0FBVyxrQkFBa0J2UCxLQUFLd3ZHLG1CQUFtQjV4RyxLQUFLb0MsTUFBTSxRQUFRaEUsRUFBRTJ2RyxZQUFZLFNBQVN4cEMsRUFBRTVpRSxHQUFHUyxLQUFLbXFHLFVBQVUsY0FBYyxDQUFDaG9DLEVBQUU1aUUsS0FBSzdFLEVBQUUrMEcsZ0JBQWdCbHdHLEVBQUVrd0csZ0JBQWdCLzBHLEVBQS8zRSxDQUFrNEVzRCxFQUFFbWtFLElBQUloa0UsTUFBTW9CLEVBQUV2RCxNQUFNbW1FLEVBQUV4bUIsUUFBUTBmLElBQWEsU0FBUzhHLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUVxL0QsRUFLai9FcjlELElBQW0xRmtFLE9BQTkwRmxHLEVBQUUsQ0FBQ3RCLEVBQUUsVUFBSyxLQUFVMmdFLEVBQUUsU0FBUzhHLEdBQUcsT0FBTyxTQUFTQSxFQUFFNWlFLEdBQUcsYUFBYSxTQUFTN0UsS0FBSyxJQUFJc0IsRUFBRXRCLEVBQUVQLFVBQVVYLE9BQU9xQyxPQUFPMEQsRUFBRXBGLFdBQVc2QixFQUFFMHpHLGVBQWUsU0FBU3Z0QyxHQUFHbmlFLEtBQUt5dEcsZ0JBQWdCdHJDLEdBQUUsSUFBS25tRSxFQUFFMnpHLGlCQUFpQixTQUFTeHRDLEdBQUduaUUsS0FBS3l0RyxnQkFBZ0J0ckMsR0FBRSxJQUFLbm1FLEVBQUV5eEcsZ0JBQWdCLFNBQVNsdUcsRUFBRTdFLEdBQUcsSUFBSXNCLEdBQUd0QixPQUFFLElBQVNBLEdBQUdBLEdBQUcsbUJBQW1CLHNCQUFzQjJnRSxFQUFFLFlBQVk4RyxFQUFFdXJDLGFBQWFyeUMsRUFBRSxjQUFjLGlCQUFpQjhHLElBQUk5RyxFQUFFLGNBQWM5N0QsRUFBRXZELEdBQUdxL0QsRUFBRXI3RCxPQUFPaEUsRUFBRTR6RyxZQUFZLFNBQVN6dEMsR0FBRyxJQUFJNWlFLEVBQUUsS0FBSzRpRSxFQUFFOTJELEtBQUtyTCxLQUFLVCxJQUFJUyxLQUFLVCxHQUFHNGlFLElBQUlubUUsRUFBRTZ6RyxTQUFTLFNBQVMxdEMsR0FBRyxJQUFJLElBQUk1aUUsRUFBRSxFQUFFQSxFQUFFNGlFLEVBQUVsbUUsT0FBT3NELElBQUksQ0FBQyxJQUFJN0UsRUFBRXluRSxFQUFFNWlFLEdBQUcsR0FBRzdFLEVBQUV1a0csWUFBWWovRixLQUFLOHZHLGtCQUFrQixPQUFPcDFHLElBQUlzQixFQUFFK3pHLFlBQVksU0FBUzV0QyxHQUFHLElBQUk1aUUsRUFBRTRpRSxFQUFFMVcsT0FBT2xzRCxHQUFHLElBQUlBLEdBQUcsSUFBSUEsR0FBR1MsS0FBS2d3RyxhQUFhN3RDLEVBQUVBLElBQUlubUUsRUFBRWkwRyxhQUFhLFNBQVM5dEMsR0FBR25pRSxLQUFLZ3dHLGFBQWE3dEMsRUFBRUEsRUFBRSt0QyxlQUFlLEtBQUtsMEcsRUFBRW0wRyxjQUFjLFNBQVNodUMsR0FBR25pRSxLQUFLZ3dHLGFBQWE3dEMsRUFBRUEsSUFBSW5tRSxFQUFFZzBHLGFBQWEsU0FBUzd0QyxFQUFFNWlFLEdBQUc0aUUsRUFBRTFXLFFBQVF6ckQsS0FBS293RyxnQkFBZ0Jwd0csS0FBS293RyxlQUFjLEVBQUdwd0csS0FBSzh2Ryx1QkFBa0IsSUFBU3Z3RyxFQUFFOHdHLFVBQVU5d0csRUFBRTh3RyxVQUFVOXdHLEVBQUUwL0YsV0FBV2ovRixLQUFLNHRHLFlBQVl6ckMsRUFBRTVpRSxLQUFLdkQsRUFBRTR4RyxZQUFZLFNBQVN6ckMsRUFBRTVpRSxHQUFHUyxLQUFLZ3VHLHFCQUFxQjdyQyxHQUFHbmlFLEtBQUttcUcsVUFBVSxjQUFjLENBQUNob0MsRUFBRTVpRSxLQUFLLElBQUk4N0QsRUFBRSxDQUFDaTFDLFVBQVUsQ0FBQyxZQUFZLFdBQVdDLFdBQVcsQ0FBQyxZQUFZLFdBQVcsZUFBZUMsWUFBWSxDQUFDLGNBQWMsWUFBWSxrQkFBa0IsT0FBT3gwRyxFQUFFZ3lHLHFCQUFxQixTQUFTenVHLEdBQUcsR0FBR0EsRUFBRSxDQUFDLElBQUk3RSxFQUFFMmdFLEVBQUU5N0QsRUFBRThMLE1BQU0zUSxFQUFFbU4sU0FBUSxTQUFVdEksR0FBRzRpRSxFQUFFNytELGlCQUFpQi9ELEVBQUVTLFFBQVFBLE1BQU1BLEtBQUt5d0csb0JBQW9CLzFHLElBQUlzQixFQUFFMDBHLHVCQUF1QixXQUFXMXdHLEtBQUt5d0csc0JBQXNCendHLEtBQUt5d0csb0JBQW9CNW9HLFNBQVEsU0FBVXRJLEdBQUc0aUUsRUFBRW54QyxvQkFBb0J6eEIsRUFBRVMsUUFBUUEsYUFBYUEsS0FBS3l3RyxzQkFBc0J6MEcsRUFBRTIwRyxZQUFZLFNBQVN4dUMsR0FBR25pRSxLQUFLNHdHLGFBQWF6dUMsRUFBRUEsSUFBSW5tRSxFQUFFNjBHLGNBQWMsU0FBUzF1QyxHQUFHQSxFQUFFa3VDLFdBQVdyd0csS0FBSzh2RyxtQkFBbUI5dkcsS0FBSzR3RyxhQUFhenVDLEVBQUVBLElBQUlubUUsRUFBRTgwRyxZQUFZLFNBQVMzdUMsR0FBRyxJQUFJNWlFLEVBQUVTLEtBQUs2dkcsU0FBUzF0QyxFQUFFK3RDLGdCQUFnQjN3RyxHQUFHUyxLQUFLNHdHLGFBQWF6dUMsRUFBRTVpRSxJQUFJdkQsRUFBRTQwRyxhQUFhLFNBQVN6dUMsRUFBRTVpRSxHQUFHUyxLQUFLMnVHLFlBQVl4c0MsRUFBRTVpRSxJQUFJdkQsRUFBRTJ5RyxZQUFZLFNBQVN4c0MsRUFBRTVpRSxHQUFHUyxLQUFLbXFHLFVBQVUsY0FBYyxDQUFDaG9DLEVBQUU1aUUsS0FBS3ZELEVBQUUrMEcsVUFBVSxTQUFTNXVDLEdBQUduaUUsS0FBS2d4RyxXQUFXN3VDLEVBQUVBLElBQUlubUUsRUFBRWkxRyxZQUFZLFNBQVM5dUMsR0FBR0EsRUFBRWt1QyxXQUFXcndHLEtBQUs4dkcsbUJBQW1COXZHLEtBQUtneEcsV0FBVzd1QyxFQUFFQSxJQUFJbm1FLEVBQUVrMUcsV0FBVyxTQUFTL3VDLEdBQUcsSUFBSTVpRSxFQUFFUyxLQUFLNnZHLFNBQVMxdEMsRUFBRSt0QyxnQkFBZ0Izd0csR0FBR1MsS0FBS2d4RyxXQUFXN3VDLEVBQUU1aUUsSUFBSXZELEVBQUVnMUcsV0FBVyxTQUFTN3VDLEVBQUU1aUUsR0FBR1MsS0FBS214RyxlQUFlbnhHLEtBQUtrdkcsVUFBVS9zQyxFQUFFNWlFLElBQUl2RCxFQUFFa3pHLFVBQVUsU0FBUy9zQyxFQUFFNWlFLEdBQUdTLEtBQUttcUcsVUFBVSxZQUFZLENBQUNob0MsRUFBRTVpRSxLQUFLdkQsRUFBRW0xRyxhQUFhLFdBQVdueEcsS0FBS3l1RyxnQkFBZ0J6dUcsS0FBSzB3Ryx5QkFBeUIxd0csS0FBS294RyxlQUFlcDFHLEVBQUV5eUcsY0FBYyxXQUFXenVHLEtBQUtvd0csZUFBYyxTQUFVcHdHLEtBQUs4dkcsbUJBQW1COXpHLEVBQUVvMUcsWUFBWSxhQUFhcDFHLEVBQUVxMUcsZ0JBQWdCLFNBQVNsdkMsR0FBR0EsRUFBRWt1QyxXQUFXcndHLEtBQUs4dkcsbUJBQW1COXZHLEtBQUtzeEcsZUFBZW52QyxFQUFFQSxJQUFJbm1FLEVBQUV1MUcsY0FBYyxTQUFTcHZDLEdBQUcsSUFBSTVpRSxFQUFFUyxLQUFLNnZHLFNBQVMxdEMsRUFBRSt0QyxnQkFBZ0Izd0csR0FBR1MsS0FBS3N4RyxlQUFlbnZDLEVBQUU1aUUsSUFBSXZELEVBQUVzMUcsZUFBZSxTQUFTbnZDLEVBQUU1aUUsR0FBR1MsS0FBS214RyxlQUFlbnhHLEtBQUt3eEcsY0FBY3J2QyxFQUFFNWlFLElBQUl2RCxFQUFFdzFHLGNBQWMsU0FBU3J2QyxFQUFFNWlFLEdBQUdTLEtBQUttcUcsVUFBVSxnQkFBZ0IsQ0FBQ2hvQyxFQUFFNWlFLEtBQUs3RSxFQUFFKzBHLGdCQUFnQixTQUFTdHRDLEdBQUcsTUFBTSxDQUFDbGQsRUFBRWtkLEVBQUUyc0MsTUFBTTUvQyxFQUFFaVQsRUFBRTRzQyxRQUFRcjBHLEVBQWh3RixDQUFtd0ZzRCxFQUFFbWtFLElBQUloa0UsTUFBTW9CLEVBQUV2RCxNQUFNbW1FLEVBQUV4bUIsUUFBUTBmLElBQWEsU0FBUzhHLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUVxL0QsRUFBRSxvQkFBb0JuNUQsUUFBUUEsWUFBTyxLQUFVbTVELEVBQUUsbUJBQW1Cci9ELEVBQUUsV0FBVyxhQUFhLFNBQVNtbUUsS0FBSyxJQUFJNWlFLEVBQUU0aUUsRUFBRWhvRSxVQUFVLE9BQU9vRixFQUFFNlIsR0FBRyxTQUFTK3dELEVBQUU1aUUsR0FBRyxHQUFHNGlFLEdBQUc1aUUsRUFBRSxDQUFDLElBQUk3RSxFQUFFc0YsS0FBSzBuQixRQUFRMW5CLEtBQUswbkIsU0FBUyxHQUFHMXJCLEVBQUV0QixFQUFFeW5FLEdBQUd6bkUsRUFBRXluRSxJQUFJLEdBQUcsT0FBTyxHQUFHbm1FLEVBQUVTLFFBQVE4QyxJQUFJdkQsRUFBRWdKLEtBQUt6RixHQUFHUyxPQUFPVCxFQUFFTyxLQUFLLFNBQVNxaUUsRUFBRTVpRSxHQUFHLEdBQUc0aUUsR0FBRzVpRSxFQUFFLENBQUNTLEtBQUtvUixHQUFHK3dELEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXNGLEtBQUt5eEcsWUFBWXp4RyxLQUFLeXhHLGFBQWEsR0FBRyxPQUFPLzJHLEVBQUV5bkUsR0FBR3puRSxFQUFFeW5FLElBQUksSUFBSTVpRSxJQUFHLEVBQUdTLE9BQU9ULEVBQUVpNkUsSUFBSSxTQUFTclgsRUFBRTVpRSxHQUFHLElBQUk3RSxFQUFFc0YsS0FBSzBuQixTQUFTMW5CLEtBQUswbkIsUUFBUXk2QyxHQUFHLEdBQUd6bkUsR0FBR0EsRUFBRXVCLE9BQU8sQ0FBQyxJQUFJRCxFQUFFdEIsRUFBRStCLFFBQVE4QyxHQUFHLE9BQU8sR0FBR3ZELEdBQUd0QixFQUFFZ0MsT0FBT1YsRUFBRSxHQUFHZ0UsT0FBT1QsRUFBRTRxRyxVQUFVLFNBQVNob0MsRUFBRTVpRSxHQUFHLElBQUk3RSxFQUFFc0YsS0FBSzBuQixTQUFTMW5CLEtBQUswbkIsUUFBUXk2QyxHQUFHLEdBQUd6bkUsR0FBR0EsRUFBRXVCLE9BQU8sQ0FBQ3ZCLEVBQUVBLEVBQUUrQyxNQUFNLEdBQUc4QixFQUFFQSxHQUFHLEdBQUcsSUFBSSxJQUFJdkQsRUFBRWdFLEtBQUt5eEcsYUFBYXp4RyxLQUFLeXhHLFlBQVl0dkMsR0FBRzlHLEVBQUUsRUFBRUEsRUFBRTNnRSxFQUFFdUIsT0FBT28vRCxJQUFJLENBQUMsSUFBSXI5RCxFQUFFdEQsRUFBRTJnRSxHQUFHci9ELEdBQUdBLEVBQUVnQyxLQUFLZ0MsS0FBS3c1RSxJQUFJclgsRUFBRW5rRSxVQUFVaEMsRUFBRWdDLElBQUlBLEVBQUVHLE1BQU02QixLQUFLVCxHQUFHLE9BQU9TLE9BQU9ULEVBQUVteUcsT0FBTyxrQkFBa0IxeEcsS0FBSzBuQixlQUFlMW5CLEtBQUt5eEcsYUFBYXR2QyxJQUFJbm1FLEVBQUUxQixLQUFLaUYsRUFBRTdFLEVBQUU2RSxFQUFFNGlFLEdBQUdubUUsS0FBS21tRSxFQUFFeG1CLFFBQVEwZixJQUFJLFNBQVM4RyxFQUFFNWlFLEVBQUU3RSxJQUFHLFNBQVV5bkUsR0FBRyxJQUFJbm1FLE9BQUUsSUFBU21tRSxHQUFHQSxHQUFHLG9CQUFvQjdzQixNQUFNQSxNQUFNcHpDLE9BQU9tNUQsRUFBRXg5RCxTQUFTMUQsVUFBVWdFLE1BQU0sU0FBU0gsRUFBRW1rRSxFQUFFNWlFLEdBQUdTLEtBQUtrNkUsSUFBSS9YLEVBQUVuaUUsS0FBS202RSxTQUFTNTZFLEVBQUVBLEVBQUVnUSxXQUFXLFdBQVcsT0FBTyxJQUFJdlIsRUFBRXE5RCxFQUFFL2dFLEtBQUtpVixXQUFXdlQsRUFBRWtDLFdBQVd3ZixlQUFlbmUsRUFBRTg2RSxZQUFZLFdBQVcsT0FBTyxJQUFJcjhFLEVBQUVxOUQsRUFBRS9nRSxLQUFLKy9FLFlBQVlyK0UsRUFBRWtDLFdBQVdvOEUsZ0JBQWdCLzZFLEVBQUVtZSxhQUFhbmUsRUFBRSs2RSxjQUFjLFNBQVNuWSxHQUFHQSxHQUFHQSxFQUFFNzVCLFNBQVN0cUMsRUFBRTdELFVBQVVvZ0YsTUFBTXY4RSxFQUFFN0QsVUFBVW92QixJQUFJLGFBQWF2ckIsRUFBRTdELFVBQVVtdUMsTUFBTSxXQUFXdG9DLEtBQUttNkUsU0FBUzcvRSxLQUFLMEIsRUFBRWdFLEtBQUtrNkUsTUFBTTM2RSxFQUFFaTdFLE9BQU8sU0FBU3JZLEVBQUU1aUUsR0FBR21lLGFBQWF5a0QsRUFBRXVZLGdCQUFnQnZZLEVBQUV3WSxhQUFhcDdFLEdBQUdBLEVBQUVxN0UsU0FBUyxTQUFTelksR0FBR3prRCxhQUFheWtELEVBQUV1WSxnQkFBZ0J2WSxFQUFFd1ksY0FBYyxHQUFHcDdFLEVBQUVzN0UsYUFBYXQ3RSxFQUFFaWpCLE9BQU8sU0FBUzIvQyxHQUFHemtELGFBQWF5a0QsRUFBRXVZLGdCQUFnQixJQUFJbjdFLEVBQUU0aUUsRUFBRXdZLGFBQWFwN0UsR0FBRyxJQUFJNGlFLEVBQUV1WSxlQUFlbnJFLFlBQVcsV0FBWTR5RCxFQUFFMlksWUFBWTNZLEVBQUUyWSxlQUFldjdFLEtBQUs3RSxFQUFFLElBQUk2RSxFQUFFa1EsYUFBYSxvQkFBb0I2bEMsTUFBTUEsS0FBSzdsQyxtQkFBYyxJQUFTMHlELEdBQUdBLEVBQUUxeUQsY0FBY3pQLE1BQU1BLEtBQUt5UCxhQUFhbFEsRUFBRXc3RSxlQUFlLG9CQUFvQnpsQyxNQUFNQSxLQUFLeWxDLHFCQUFnQixJQUFTNVksR0FBR0EsRUFBRTRZLGdCQUFnQi82RSxNQUFNQSxLQUFLKzZFLGlCQUFpQnpnRixLQUFLMEYsS0FBS3RGLEVBQUUsTUFBTSxTQUFTeW5FLEVBQUU1aUUsRUFBRTdFLElBQUcsU0FBVXluRSxFQUFFNWlFLElBQUksU0FBUzRpRSxFQUFFem5FLEdBQUcsYUFBYSxJQUFJeW5FLEVBQUUxeUQsYUFBYSxDQUFDLElBQUl6VCxFQUFFcS9ELEVBQUVyOUQsRUFBRTJsQyxFQUFFekgsRUFBRXNyQyxFQUFFLEVBQUV2cEUsRUFBRSxHQUFHWixHQUFFLEVBQUdELEVBQUUra0UsRUFBRXR5RCxTQUFTbTFCLEVBQUV4ckMsT0FBT2lpRixnQkFBZ0JqaUYsT0FBT2lpRixlQUFldFosR0FBR245QixFQUFFQSxHQUFHQSxFQUFFejFCLFdBQVd5MUIsRUFBRW05QixFQUFFLHFCQUFxQixHQUFHL25FLFNBQVNFLEtBQUs2bkUsRUFBRW9XLFNBQVN2OEUsRUFBRSxTQUFTbW1FLEdBQUc1aUUsRUFBRXlRLFVBQVMsV0FBWXFKLEVBQUU4b0QsT0FBUSxXQUFXLEdBQUdBLEVBQUV3WixjQUFjeFosRUFBRXlaLGNBQWMsQ0FBQyxJQUFJcjhFLEdBQUUsRUFBRzdFLEVBQUV5bkUsRUFBRTRaLFVBQVUsT0FBTzVaLEVBQUU0WixVQUFVLFdBQVd4OEUsR0FBRSxHQUFJNGlFLEVBQUV3WixZQUFZLEdBQUcsS0FBS3haLEVBQUU0WixVQUFVcmhGLEVBQUU2RSxHQUE5SSxJQUErZ0Jva0MsRUFBRSxnQkFBZ0I5b0MsS0FBS3lnRSxTQUFTLElBQUlwL0IsRUFBRSxTQUFTMzhCLEdBQUdBLEVBQUV1VCxTQUFTcXZELEdBQUcsaUJBQWlCNWlFLEVBQUVzRyxNQUFNLElBQUl0RyxFQUFFc0csS0FBS3BKLFFBQVFrbkMsSUFBSXRxQixHQUFHOVosRUFBRXNHLEtBQUtwSSxNQUFNa21DLEVBQUUxbkMsVUFBVWttRSxFQUFFNytELGlCQUFpQjYrRCxFQUFFNytELGlCQUFpQixVQUFVNDRCLEdBQUUsR0FBSWltQyxFQUFFbWEsWUFBWSxZQUFZcGdELEdBQUdsZ0MsRUFBRSxTQUFTdUQsR0FBRzRpRSxFQUFFd1osWUFBWWg0QyxFQUFFcGtDLEVBQUUsT0FBMW5CNGlFLEVBQUU4WixpQkFBaUJqK0UsRUFBRSxJQUFJaStFLGdCQUFnQkMsTUFBTUgsVUFBVSxTQUFTNVosR0FBRzlvRCxFQUFFOG9ELEVBQUV0OEQsT0FBTzdKLEVBQUUsU0FBU21tRSxHQUFHbmtFLEVBQUVtK0UsTUFBTVIsWUFBWXhaLEtBQUsva0UsR0FBRyx1QkFBdUJBLEVBQUVrYyxjQUFjLFdBQVcraEQsRUFBRWorRCxFQUFFaStDLGdCQUFnQnIvQyxFQUFFLFNBQVNtbUUsR0FBRyxJQUFJNWlFLEVBQUVuQyxFQUFFa2MsY0FBYyxVQUFVL1osRUFBRTg4RSxtQkFBbUIsV0FBV2hqRSxFQUFFOG9ELEdBQUc1aUUsRUFBRTg4RSxtQkFBbUIsS0FBS2hoQixFQUFFenRDLFlBQVlydUIsR0FBR0EsRUFBRSxNQUFNODdELEVBQUV4dEMsWUFBWXR1QixLQUFLdkQsRUFBRSxTQUFTbW1FLEdBQUc1eUQsV0FBVzhKLEVBQUUsRUFBRThvRCxJQUEyUW45QixFQUFFdjFCLGFBQWEsU0FBUzB5RCxHQUFHLG1CQUFtQkEsSUFBSUEsRUFBRSxJQUFJdGtFLFNBQVMsR0FBR3NrRSxJQUFJLElBQUksSUFBSTVpRSxFQUFFLElBQUlwRSxNQUFNK0MsVUFBVWpDLE9BQU8sR0FBR3ZCLEVBQUUsRUFBRUEsRUFBRTZFLEVBQUV0RCxPQUFPdkIsSUFBSTZFLEVBQUU3RSxHQUFHd0QsVUFBVXhELEVBQUUsR0FBRyxJQUFJMmdFLEVBQUUsQ0FBQ2g5QyxTQUFTOGpELEVBQUVuNkQsS0FBS3pJLEdBQUcsT0FBT3RCLEVBQUV1cEUsR0FBR25NLEVBQUVyL0QsRUFBRXdyRSxHQUFHQSxLQUFLeGlDLEVBQUUrMUMsZUFBZTFyRSxFQUFFLFNBQVNBLEVBQUU4eUQsVUFBVWxrRSxFQUFFa2tFLEdBQUcsU0FBUzlvRCxFQUFFOG9ELEdBQUcsR0FBRzlrRSxFQUFFa1MsV0FBVzhKLEVBQUUsRUFBRThvRCxPQUFPLENBQUMsSUFBSTVpRSxFQUFFdEIsRUFBRWtrRSxHQUFHLEdBQUc1aUUsRUFBRSxDQUFDbEMsR0FBRSxFQUFHLEtBQUssU0FBUzhrRSxHQUFHLElBQUk1aUUsRUFBRTRpRSxFQUFFOWpELFNBQVMzakIsRUFBRXluRSxFQUFFbjZELEtBQUssT0FBT3ROLEVBQUV1QixRQUFRLEtBQUssRUFBRXNELElBQUksTUFBTSxLQUFLLEVBQUVBLEVBQUU3RSxFQUFFLElBQUksTUFBTSxLQUFLLEVBQUU2RSxFQUFFN0UsRUFBRSxHQUFHQSxFQUFFLElBQUksTUFBTSxLQUFLLEVBQUU2RSxFQUFFN0UsRUFBRSxHQUFHQSxFQUFFLEdBQUdBLEVBQUUsSUFBSSxNQUFNLFFBQVE2RSxFQUFFcEIsV0FBTSxFQUFPekQsSUFBN0ssQ0FBa0w2RSxHQUFHLFFBQVE4UCxFQUFFOHlELEdBQUc5a0UsR0FBRSxNQUFwaEQsQ0FBNGhELG9CQUFvQmk0QyxVQUFLLElBQVM2c0IsRUFBRW5pRSxLQUFLbWlFLEVBQUU3c0IsUUFBUWg3QyxLQUFLMEYsS0FBS3RGLEVBQUUsSUFBSUEsRUFBRSxNQUFNLFNBQVN5bkUsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXRCLEVBQUUsR0FBR3luRSxFQUFFeG1CLFFBQVEsU0FBU3dtQixFQUFFNWlFLEdBQUcsTUFBTS9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLElBQUksUUFBUTRpRSxFQUFFbm1FLEVBQUVtbUUsTUFBTSxPQUFPQSxJQUFJLFNBQVNBLEVBQUU1aUUsRUFBRTdFLElBQUk2RSxFQUFFN0UsRUFBRSxFQUFGQSxFQUFLLElBQUtzSyxLQUFLLENBQUNtOUQsRUFBRW5tRSxFQUFFLHNwSEFBc3BILEtBQUttbUUsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxHQUFHeW5FLEVBQUV4bUIsU0FBUzMvQyxFQUFFeVIsU0FBU3pSLEdBQUdnd0MsU0FBUyxDQUFDdTdELEVBQUUsU0FBU3BsQyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLE1BQU0sdUJBQXVCczJDLFNBQVMsQ0FBQyxFQUFFLFlBQVlDLEtBQUssU0FBU3p2QyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRTJsQyxFQUFFdytCLEVBQUUwdkMsT0FBTzMxRSxFQUFFaW1DLEVBQUUyd0IsaUJBQWlCdHJCLEVBQUUsTUFBTWpvRSxFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHN3pHLEVBQUVra0UsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxZQUFZMjhCLEVBQUV5SCxFQUFFLE1BQU1wa0MsRUFBRXRCLEVBQUVzQixFQUFFLE1BQU1BLEVBQUVBLElBQUksTUFBTSxPQUFPdkIsRUFBRUMsRUFBRXZELEVBQUUsU0FBU0osS0FBS2t0RSxFQUFFLFNBQVMsQ0FBQzcyRCxLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLEtBQUtrK0IsRUFBRXlILEVBQUUsTUFBTXBrQyxFQUFFdEIsRUFBRXNCLEVBQUUsUUFBUUEsRUFBRUEsSUFBSSxZQUFZLE9BQU92QixFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLa3RFLEVBQUUsV0FBVyxDQUFDNzJELEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksNEJBQTRCLE9BQU9BLEVBQUVDLEVBQUV2RCxFQUFFLFNBQVNKLEtBQUtrdEUsRUFBRSxRQUFRLENBQUM3MkQsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxhQUFhaytCLEVBQUV5SCxFQUFFLE1BQU1wa0MsRUFBRXRCLEVBQUVzQixFQUFFLE1BQU1BLEVBQUVBLElBQUksTUFBTSxPQUFPdkIsRUFBRUMsRUFBRXZELEVBQUUsTUFBTUosS0FBS2t0RSxFQUFFLE1BQU1qb0UsRUFBRXRCLEVBQUVzQixFQUFFLE9BQU9BLEVBQUUsQ0FBQ29SLEtBQUssS0FBS3NCLEtBQUssR0FBR2xWLEdBQUdvbEUsRUFBRTZ2QyxRQUFRLEVBQUUzMkMsRUFBRSxHQUFHazNCLFFBQVFwd0IsRUFBRXRqRSxLQUFLZ0gsS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxZQUFZLE9BQU9BLEVBQUVDLEVBQUV2RCxFQUFFLFNBQVNKLEtBQUtrdEUsRUFBRSxRQUFRLENBQUM3MkQsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxtQkFBbUIsT0FBT0EsRUFBRUMsRUFBRXZELEVBQUUsU0FBU0osS0FBS2t0RSxFQUFFLFNBQVMsQ0FBQzcyRCxLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLDBCQUEwQmkwRyxTQUFRLEtBQU0sU0FBUzl2QyxFQUFFNWlFLEVBQUU3RSxHQUFHLGFBQWEsU0FBU3NCLEVBQUVtbUUsR0FBRyxPQUFPQSxHQUFHQSxFQUFFbmlELFdBQVdtaUQsRUFBRSxDQUFDMTBELFFBQVEwMEQsR0FBRyxTQUFTOUcsRUFBRThHLEdBQUcsR0FBR0EsR0FBR0EsRUFBRW5pRCxXQUFXLE9BQU9taUQsRUFBRSxJQUFJNWlFLEVBQUUsR0FBRyxHQUFHLE1BQU00aUUsRUFBRSxJQUFJLElBQUl6bkUsS0FBS3luRSxFQUFFM29FLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFem5FLEtBQUs2RSxFQUFFN0UsR0FBR3luRSxFQUFFem5FLElBQUksT0FBTzZFLEVBQUVrTyxRQUFRMDBELEVBQUU1aUUsRUFBRUEsRUFBRXlnQixZQUFXLEVBQUcsSUFBSWhpQixFQUFFcTlELEVBQUUzZ0UsRUFBRSxLQUFLaXBDLEVBQUUzbkMsRUFBRXRCLEVBQUUsS0FBS3doQyxFQUFFbGdDLEVBQUV0QixFQUFFLEtBQUs4c0UsRUFBRW5NLEVBQUUzZ0UsRUFBRSxLQUFLdUQsRUFBRW85RCxFQUFFM2dFLEVBQUUsS0FBSzJDLEVBQUVyQixFQUFFdEIsRUFBRSxLQUFLLFNBQVMwQyxJQUFJLElBQUkra0UsRUFBRSxJQUFJbmtFLEVBQUU2b0csc0JBQXNCLE9BQU9yL0IsRUFBRWhwRSxPQUFPMmpFLEVBQUVua0UsR0FBR21rRSxFQUFFK3ZDLFdBQVd2dUUsRUFBRWwyQixRQUFRMDBELEVBQUVnd0MsVUFBVWoyRSxFQUFFenVCLFFBQVEwMEQsRUFBRWl3QyxNQUFNNXFDLEVBQUVyRixFQUFFMndCLGlCQUFpQnRyQixFQUFFc3JCLGlCQUFpQjN3QixFQUFFa3dDLEdBQUdwMEcsRUFBRWtrRSxFQUFFbjJCLFNBQVMsU0FBU3pzQyxHQUFHLE9BQU90QixFQUFFK3RDLFNBQVN6c0MsRUFBRTRpRSxJQUFJQSxFQUFFLElBQUluOUIsRUFBRTVuQyxJQUFJNG5DLEVBQUVucEMsT0FBT3VCLEVBQUVDLEVBQUVvUSxRQUFRdTNCLEdBQUdBLEVBQUV2M0IsUUFBUXUzQixFQUFFemxDLEVBQUVrTyxRQUFRdTNCLEVBQUVtOUIsRUFBRXhtQixRQUFRcDhDLEVBQUVrTyxTQUFTLFNBQVMwMEQsRUFBRTVpRSxFQUFFN0UsR0FBRyxhQUFhNkUsRUFBRXlnQixZQUFXLEVBQUcsSUFBSWhrQixFQUFFdEIsRUFBRSxJQUFJNkUsRUFBRWtPLFFBQVEsU0FBUzAwRCxHQUFHQSxFQUFFbXdCLGVBQWUsc0JBQXFCLFNBQVUveUYsRUFBRTdFLEdBQUcsSUFBSTJnRSxFQUFFM2dFLEVBQUU2M0YsUUFBUXYwRixFQUFFdEQsRUFBRXFDLEdBQUcsSUFBRyxJQUFLd0MsRUFBRSxPQUFPdkIsRUFBRWdDLE1BQU0sSUFBRyxJQUFLVCxHQUFHLE1BQU1BLEVBQUUsT0FBTzg3RCxFQUFFcjdELE1BQU0sR0FBR2hFLEVBQUVaLFFBQVFtRSxHQUFHLE9BQU9BLEVBQUV0RCxPQUFPLEdBQUd2QixFQUFFNDNHLE1BQU01M0csRUFBRTQzRyxJQUFJLENBQUM1M0csRUFBRWlXLE9BQU93eEQsRUFBRTJrQyxRQUFRL3JDLEtBQUt4N0QsRUFBRTdFLElBQUkyZ0UsRUFBRXI3RCxNQUFNLEdBQUd0RixFQUFFbUwsTUFBTW5MLEVBQUU0M0csSUFBSSxDQUFDLElBQUkzdUUsRUFBRTNuQyxFQUFFZzNGLFlBQVl0NEYsRUFBRW1MLE1BQU04OUIsRUFBRTR1RSxZQUFZdjJHLEVBQUVrM0Ysa0JBQWtCeDRGLEVBQUVtTCxLQUFLMHNHLFlBQVk3M0csRUFBRWlXLE1BQU1qVyxFQUFFLENBQUNtTCxLQUFLODlCLEdBQUcsT0FBTzNsQyxFQUFFdUIsRUFBRTdFLE9BQU95bkUsRUFBRXhtQixRQUFRcDhDLEVBQUVrTyxTQUFTLFNBQVMwMEQsRUFBRTVpRSxFQUFFN0UsR0FBRyxjQUFhLFNBQVVzQixHQUFHdUQsRUFBRXlnQixZQUFXLEVBQUcsSUFBSXE3QyxFQUFFcjlELEVBQUV0RCxFQUFFLElBQVl3aEMsR0FBR20vQixFQUFUM2dFLEVBQUUsTUFBYTJnRSxFQUFFcjdDLFdBQVdxN0MsRUFBRSxDQUFDNXRELFFBQVE0dEQsR0FBRzk3RCxFQUFFa08sUUFBUSxTQUFTMDBELEdBQUdBLEVBQUVtd0IsZUFBZSxRQUFPLFNBQVVud0IsRUFBRTVpRSxHQUFHLElBQUlBLEVBQUUsTUFBTSxJQUFJMjhCLEVBQUV6dUIsUUFBUSwrQkFBK0IsSUFBSS9TLEVBQUUyZ0UsRUFBRTk3RCxFQUFFeEMsR0FBRzRtQyxFQUFFcGtDLEVBQUVnekYsUUFBUS9xQixFQUFFLEVBQUV2cEUsRUFBRSxHQUFHWixPQUFFLEVBQU9ELE9BQUUsRUFBTyxTQUFTNG5DLEVBQUV6bEMsRUFBRTdFLEVBQUVzQixHQUFHcUIsSUFBSUEsRUFBRVIsSUFBSTBDLEVBQUVsQyxFQUFFYixNQUFNOUIsRUFBRTJDLEVBQUVnbkUsTUFBTSxJQUFJM3BFLEVBQUUyQyxFQUFFbVYsT0FBT3hXLEVBQUVvQixJQUFJQyxFQUFFazFHLFlBQVluMUcsRUFBRW1DLElBQUl0QixHQUFHbzlELEVBQUU4RyxFQUFFNWlFLEdBQUcsQ0FBQ3NHLEtBQUt4SSxFQUFFbTFGLFlBQVl4MEYsRUFBRXcwRixZQUFZLENBQUNyd0IsRUFBRTVpRSxHQUFHQSxHQUFHLENBQUNuQyxFQUFFbUMsRUFBRSxTQUFTLEdBQUdBLEVBQUVzRyxNQUFNdEcsRUFBRSt5RyxNQUFNbDFHLEVBQUVZLEVBQUVrMUYsa0JBQWtCM3pGLEVBQUVzRyxLQUFLMHNHLFlBQVloekcsRUFBRSt5RyxJQUFJLElBQUksS0FBS3QwRyxFQUFFMjVFLFdBQVd4VixLQUFLQSxFQUFFQSxFQUFFN25FLEtBQUswRixPQUFPVCxFQUFFc0csT0FBT3hJLEVBQUVXLEVBQUVnMUYsWUFBWXp6RixFQUFFc0csT0FBT3M4RCxHQUFHLGlCQUFpQkEsRUFBRSxHQUFHbmtFLEVBQUU1QyxRQUFRK21FLEdBQUcsSUFBSSxJQUFJOXlELEVBQUU4eUQsRUFBRWxtRSxPQUFPdXJFLEVBQUVuNEQsRUFBRW00RCxJQUFJQSxLQUFLckYsR0FBR245QixFQUFFd2lDLEVBQUVBLEVBQUVBLElBQUlyRixFQUFFbG1FLE9BQU8sUUFBUSxHQUFHRCxFQUFFaUksUUFBUWsrRCxFQUFFbm1FLEVBQUVpSSxPQUFPcVEsVUFBVSxDQUFDLElBQUksSUFBSStFLEVBQUUsR0FBRzRvRCxFQUFFRSxFQUFFbm1FLEVBQUVpSSxPQUFPcVEsWUFBWTNhLEVBQUVzb0UsRUFBRTF0RCxRQUFRNWEsRUFBRTZhLEtBQUs3YSxFQUFFc29FLEVBQUUxdEQsT0FBTzhFLEVBQUVyVSxLQUFLckwsRUFBRUksT0FBTyxJQUFJc1YsR0FBRzh5RCxFQUFFOW9ELEdBQUdwZCxPQUFPdXJFLEVBQUVuNEQsRUFBRW00RCxJQUFJeGlDLEVBQUV3aUMsRUFBRUEsRUFBRUEsSUFBSXJGLEVBQUVsbUUsT0FBTyxRQUFRdkIsT0FBRSxFQUFPbEIsT0FBT21HLEtBQUt3aUUsR0FBR3Q2RCxTQUFRLFNBQVVzNkQsUUFBRyxJQUFTem5FLEdBQUdzcUMsRUFBRXRxQyxFQUFFOHNFLEVBQUUsR0FBRzlzRSxFQUFFeW5FLEVBQUVxRixZQUFPLElBQVM5c0UsR0FBR3NxQyxFQUFFdHFDLEVBQUU4c0UsRUFBRSxHQUFFLEdBQUksT0FBTyxJQUFJQSxJQUFJdnBFLEVBQUUwbEMsRUFBRTNqQyxPQUFPL0IsTUFBTWtrRSxFQUFFeG1CLFFBQVFwOEMsRUFBRWtPLFVBQVVuVCxLQUFLMEYsS0FBS3RGLEVBQUUsTUFBTSxTQUFTeW5FLEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYTZFLEVBQUV5Z0IsWUFBVyxFQUFHLElBQUloa0IsRUFBVWdDLEdBQUdoQyxFQUFUdEIsRUFBRSxNQUFhc0IsRUFBRWdrQixXQUFXaGtCLEVBQUUsQ0FBQ3lSLFFBQVF6UixHQUFHdUQsRUFBRWtPLFFBQVEsU0FBUzAwRCxHQUFHQSxFQUFFbXdCLGVBQWUsaUJBQWdCLFdBQVksR0FBRyxJQUFJcDBGLFVBQVVqQyxPQUFPLE1BQU0sSUFBSStCLEVBQUV5UCxRQUFRLG9CQUFvQnZQLFVBQVVBLFVBQVVqQyxPQUFPLEdBQUcwVSxLQUFLLFNBQVN3eEQsRUFBRXhtQixRQUFRcDhDLEVBQUVrTyxTQUFTLFNBQVMwMEQsRUFBRTVpRSxFQUFFN0UsR0FBRyxhQUFhNkUsRUFBRXlnQixZQUFXLEVBQUcsSUFBSWhrQixFQUFFcS9ELEVBQUUzZ0UsRUFBRSxJQUFZaXBDLEdBQUczbkMsRUFBVHRCLEVBQUUsTUFBYXNCLEVBQUVna0IsV0FBV2hrQixFQUFFLENBQUN5UixRQUFRelIsR0FBR3VELEVBQUVrTyxRQUFRLFNBQVMwMEQsR0FBR0EsRUFBRW13QixlQUFlLE1BQUssU0FBVW53QixFQUFFNWlFLEdBQUcsR0FBRyxHQUFHckIsVUFBVWpDLE9BQU8sTUFBTSxJQUFJMG5DLEVBQUVsMkIsUUFBUSxxQ0FBcUMsT0FBTzR0RCxFQUFFc2MsV0FBV3hWLEtBQUtBLEVBQUVBLEVBQUU3bkUsS0FBSzBGLFFBQVFULEVBQUUwUyxLQUFLdWdHLGNBQWNyd0MsR0FBRzlHLEVBQUUrbUIsUUFBUWpnQixHQUFHNWlFLEVBQUVnekYsUUFBUXZ5RixNQUFNVCxFQUFFeEMsR0FBR2lELFNBQVNtaUUsRUFBRW13QixlQUFlLFVBQVMsU0FBVS95RixFQUFFN0UsR0FBRyxHQUFHLEdBQUd3RCxVQUFVakMsT0FBTyxNQUFNLElBQUkwbkMsRUFBRWwyQixRQUFRLHlDQUF5QyxPQUFPMDBELEVBQUUya0MsUUFBUWg2RCxHQUFHeHlDLEtBQUswRixLQUFLVCxFQUFFLENBQUN4QyxHQUFHckMsRUFBRTYzRixRQUFRQSxRQUFRNzNGLEVBQUVxQyxHQUFHa1YsS0FBS3ZYLEVBQUV1WCxXQUFXa3dELEVBQUV4bUIsUUFBUXA4QyxFQUFFa08sU0FBUyxTQUFTMDBELEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYTZFLEVBQUV5Z0IsWUFBVyxFQUFHemdCLEVBQUVrTyxRQUFRLFNBQVMwMEQsR0FBR0EsRUFBRW13QixlQUFlLE9BQU0sV0FBWSxJQUFJLElBQUkveUYsRUFBRSxNQUFDLEdBQVE3RSxFQUFFd0QsVUFBVUEsVUFBVWpDLE9BQU8sR0FBR0QsRUFBRSxFQUFFQSxFQUFFa0MsVUFBVWpDLE9BQU8sRUFBRUQsSUFBSXVELEVBQUV5RixLQUFLOUcsVUFBVWxDLElBQUksSUFBSXEvRCxFQUFFLEVBQUUsTUFBTTNnRSxFQUFFdVgsS0FBSzA3RSxNQUFNdHlCLEVBQUUzZ0UsRUFBRXVYLEtBQUswN0UsTUFBTWp6RixFQUFFbUwsTUFBTSxNQUFNbkwsRUFBRW1MLEtBQUs4bkYsUUFBUXR5QixFQUFFM2dFLEVBQUVtTCxLQUFLOG5GLE9BQU9wdUYsRUFBRSxHQUFHODdELEVBQUU4RyxFQUFFMmUsSUFBSTNpRixNQUFNZ2tFLEVBQUU1aUUsT0FBTzRpRSxFQUFFeG1CLFFBQVFwOEMsRUFBRWtPLFNBQVMsU0FBUzAwRCxFQUFFNWlFLEVBQUU3RSxHQUFHLGFBQWE2RSxFQUFFeWdCLFlBQVcsRUFBR3pnQixFQUFFa08sUUFBUSxTQUFTMDBELEdBQUdBLEVBQUVtd0IsZUFBZSxVQUFTLFNBQVVud0IsRUFBRTVpRSxFQUFFN0UsR0FBRyxPQUFPeW5FLEVBQUV6bkUsRUFBRXEzRyxlQUFlNXZDLEVBQUU1aUUsR0FBRzRpRSxNQUFNQSxFQUFFeG1CLFFBQVFwOEMsRUFBRWtPLFNBQVMsU0FBUzAwRCxFQUFFNWlFLEVBQUU3RSxHQUFHLGFBQWE2RSxFQUFFeWdCLFlBQVcsRUFBRyxJQUFJaGtCLEVBQUVxL0QsRUFBRTNnRSxFQUFFLElBQVlpcEMsR0FBRzNuQyxFQUFUdEIsRUFBRSxNQUFhc0IsRUFBRWdrQixXQUFXaGtCLEVBQUUsQ0FBQ3lSLFFBQVF6UixHQUFHdUQsRUFBRWtPLFFBQVEsU0FBUzAwRCxHQUFHQSxFQUFFbXdCLGVBQWUsUUFBTyxTQUFVbndCLEVBQUU1aUUsR0FBRyxHQUFHLEdBQUdyQixVQUFVakMsT0FBTyxNQUFNLElBQUkwbkMsRUFBRWwyQixRQUFRLHVDQUF1QzR0RCxFQUFFc2MsV0FBV3hWLEtBQUtBLEVBQUVBLEVBQUU3bkUsS0FBSzBGLE9BQU8sSUFBSXRGLEVBQUU2RSxFQUFFeEMsR0FBRyxHQUFHcytELEVBQUUrbUIsUUFBUWpnQixHQUFHLE9BQU81aUUsRUFBRWd6RixRQUFRdnlGLE1BQU0sSUFBSWhFLEVBQUV1RCxFQUFFc0csS0FBSyxPQUFPdEcsRUFBRXNHLE1BQU10RyxFQUFFK3lHLE9BQU90MkcsRUFBRXEvRCxFQUFFMjNCLFlBQVl6ekYsRUFBRXNHLE9BQU8wc0csWUFBWWwzQyxFQUFFNjNCLGtCQUFrQjN6RixFQUFFc0csS0FBSzBzRyxZQUFZaHpHLEVBQUUreUcsSUFBSSxLQUFLNTNHLEVBQUV5bkUsRUFBRSxDQUFDdDhELEtBQUs3SixFQUFFdzJGLFlBQVluM0IsRUFBRW0zQixZQUFZLENBQUNyd0IsR0FBRyxDQUFDbm1FLEdBQUdBLEVBQUV1Mkcsb0JBQW9CcHdDLEVBQUV4bUIsUUFBUXA4QyxFQUFFa08sU0FBUyxTQUFTMDBELEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYTZFLEVBQUV5Z0IsWUFBVyxFQUFHemdCLEVBQUUybkcsMEJBQTBCLFNBQVMva0MsR0FBR25rRSxFQUFFeVAsUUFBUTAwRCxJQUFJLElBQUlubUUsRUFBVWdDLEdBQUdoQyxFQUFUdEIsRUFBRSxNQUFhc0IsRUFBRWdrQixXQUFXaGtCLEVBQUUsQ0FBQ3lSLFFBQVF6UixJQUFJLFNBQVNtbUUsRUFBRTVpRSxFQUFFN0UsR0FBRyxhQUFhNkUsRUFBRXlnQixZQUFXLEVBQUcsSUFBSWhrQixFQUFFdEIsRUFBRSxJQUFJNkUsRUFBRWtPLFFBQVEsU0FBUzAwRCxHQUFHQSxFQUFFZ21DLGtCQUFrQixVQUFTLFNBQVVobUMsRUFBRTVpRSxFQUFFN0UsRUFBRTJnRSxHQUFHLElBQUlyOUQsRUFBRW1rRSxFQUFFLE9BQU81aUUsRUFBRXduRyxXQUFXeG5HLEVBQUV3bkcsU0FBUyxHQUFHL29HLEVBQUUsU0FBU3E5RCxFQUFFcjlELEdBQUcsSUFBSTJsQyxFQUFFanBDLEVBQUVxc0csU0FBU3JzRyxFQUFFcXNHLFNBQVMvcUcsRUFBRXdDLE9BQU8sR0FBR21sQyxFQUFFcGtDLEVBQUV3bkcsVUFBVSxJQUFJN3FFLEVBQUVpbUMsRUFBRTlHLEVBQUVyOUQsR0FBRyxPQUFPdEQsRUFBRXFzRyxTQUFTcGpFLEVBQUV6SCxJQUFJMzhCLEVBQUV3bkcsU0FBUzFyQyxFQUFFcnpELEtBQUssSUFBSXF6RCxFQUFFdCtELEdBQUdpQixNQUFNbWtFLEVBQUV4bUIsUUFBUXA4QyxFQUFFa08sU0FBUyxTQUFTMDBELEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYTZFLEVBQUV5Z0IsWUFBVyxFQUFHemdCLEVBQUV3cEcsc0JBQXNCLFdBQVcsSUFBSSxJQUFJNW1DLEVBQUVqa0UsVUFBVWpDLE9BQU9zRCxFQUFFcEUsTUFBTWduRSxHQUFHem5FLEVBQUUsRUFBRUEsRUFBRXluRSxFQUFFem5FLElBQUk2RSxFQUFFN0UsR0FBR3dELFVBQVV4RCxHQUFHLE9BQU9zQixFQUFFd0MsT0FBT0wsV0FBTSxFQUFPLENBQUMzRSxPQUFPcUMsT0FBTyxPQUFPbVAsT0FBT3pMLEtBQUssSUFBSXZELEVBQUV0QixFQUFFLEtBQUssU0FBU3luRSxFQUFFNWlFLEVBQUU3RSxHQUFHLGFBQWEsU0FBU3NCLEVBQUVtbUUsR0FBR25pRSxLQUFLMjVELE9BQU93SSxFQUFFNWlFLEVBQUV5Z0IsWUFBVyxFQUFHaGtCLEVBQUU3QixVQUFVQyxTQUFTNEIsRUFBRTdCLFVBQVU0NEYsT0FBTyxXQUFXLE1BQU0sR0FBRy95RixLQUFLMjVELFFBQVFwNkQsRUFBRWtPLFFBQVF6UixFQUFFbW1FLEVBQUV4bUIsUUFBUXA4QyxFQUFFa08sU0FBUyxTQUFTMDBELEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYTZFLEVBQUV5Z0IsWUFBVyxFQUFHemdCLEVBQUVrekcsY0FBYyxTQUFTdHdDLEdBQUcsSUFBSTVpRSxFQUFFNGlFLEdBQUdBLEVBQUUsSUFBSSxFQUFFem5FLEVBQUV3aEMsRUFBRWtyRSxrQkFBa0IsS0FBRzduRyxHQUFHMjhCLEVBQUVtckUsbUNBQW1DOW5HLEdBQUcyOEIsRUFBRWtyRSxtQkFBaEQsQ0FBeUUsR0FBRzduRyxFQUFFMjhCLEVBQUVtckUsa0NBQWtDLENBQUMsSUFBSXJyRyxFQUFFa2dDLEVBQUVvckUsaUJBQWlCNXNHLEdBQUcyZ0UsRUFBRW4vQixFQUFFb3JFLGlCQUFpQi9uRyxHQUFHLE1BQU0sSUFBSW9rQyxFQUFFbDJCLFFBQVEsNklBQTZJelIsRUFBRSxvREFBb0RxL0QsRUFBRSxNQUFNLE1BQU0sSUFBSTEzQixFQUFFbDJCLFFBQVEsd0lBQXdJMDBELEVBQUUsR0FBRyxRQUFPNWlFLEVBQUV5c0MsU0FBUyxTQUFTbTJCLEVBQUU1aUUsR0FBRyxJQUFJQSxFQUFFLE1BQU0sSUFBSW9rQyxFQUFFbDJCLFFBQVEscUNBQXFDLElBQUkwMEQsSUFBSUEsRUFBRXl2QyxLQUFLLE1BQU0sSUFBSWp1RSxFQUFFbDJCLFFBQVEsbUNBQW1DMDBELEdBQUdBLEVBQUV5dkMsS0FBS2MsVUFBVXZ3QyxFQUFFd3dDLE9BQU9wekcsRUFBRTh5RyxHQUFHSSxjQUFjdHdDLEVBQUV3dkMsVUFBVSxJQUFJajNHLEVBQUV5bkUsRUFBRXd2QyxVQUFVLElBQUl4dkMsRUFBRXd2QyxTQUFTLEdBQU8zMUcsRUFBRSxDQUFDMGhELE9BQU8sU0FBU3lrQixFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUt5bkUsS0FBRzVpRSxLQUFLNGlFLEdBQUcsTUFBTSxJQUFJeCtCLEVBQUVsMkIsUUFBUSxJQUFJbE8sRUFBRSxvQkFBb0I0aUUsRUFBRSxDQUFDbXhCLElBQUk1NEYsSUFBSSxPQUFPeW5FLEVBQUU1aUUsSUFBSXd5RyxlQUFlLFNBQVM1dkMsRUFBRTVpRSxHQUFHLElBQUk3RSxFQUFFeW5FLEVBQUU1aUUsR0FBRyxPQUFPLE1BQU03RSxHQUFHbEIsT0FBT1csVUFBVXdDLGVBQWVyQyxLQUFLNm5FLEVBQUU1aUUsSUFBSWxDLEVBQUVnc0csZ0JBQWdCM3VHLEVBQUVzQixFQUFFNDJHLG1CQUFtQnJ6RyxHQUFHN0UsT0FBRSxHQUFRbTRHLE9BQU8sU0FBUzF3QyxFQUFFNWlFLEdBQUcsSUFBSSxJQUFJN0UsRUFBRXluRSxFQUFFbG1FLE9BQU9vL0QsRUFBRSxFQUFFQSxFQUFFM2dFLEVBQUUyZ0UsSUFBSyxHQUFHLE9BQU84RyxFQUFFOUcsSUFBSXIvRCxFQUFFKzFHLGVBQWU1dkMsRUFBRTlHLEdBQUc5N0QsSUFBSSxPQUFPNGlFLEVBQUU5RyxHQUFHOTdELElBQUtzeUcsT0FBTyxTQUFTMXZDLEVBQUU1aUUsR0FBRyxNQUFNLG1CQUFtQjRpRSxFQUFFQSxFQUFFN25FLEtBQUtpRixHQUFHNGlFLEdBQUcyd0IsaUJBQWlCejNCLEVBQUV5M0IsaUJBQWlCZ2dCLGNBQWMsU0FBU3A0RyxFQUFFc0IsRUFBRWdDLEdBQUdBLEVBQUVpVSxPQUFPalcsRUFBRXEvRCxFQUFFNzhELE9BQU8sR0FBR3hDLEVBQUVnQyxFQUFFaVUsTUFBTWpVLEVBQUVzMEcsTUFBTXQwRyxFQUFFczBHLElBQUksSUFBRyxJQUFLNTNHLEVBQUU2RSxFQUFFOHlHLEdBQUdVLGVBQWV6NEcsS0FBSzBGLEtBQUt0RixFQUFFc0IsRUFBRWdDLEdBQUcsSUFBSWsrQixFQUFFbS9CLEVBQUU3OEQsT0FBTyxHQUFHUixFQUFFLENBQUNpTixNQUFNakwsS0FBS2lMLE1BQU0ybkcsbUJBQW1CNXlHLEtBQUs0eUcscUJBQXFCcHJDLEVBQUVqb0UsRUFBRTh5RyxHQUFHUyxjQUFjeDRHLEtBQUswRixLQUFLdEYsRUFBRXNCLEVBQUVrZ0MsR0FBRyxHQUFHLE1BQU1zckMsR0FBR2pvRSxFQUFFaTdDLFVBQVV4OEMsRUFBRStvRyxTQUFTL29HLEVBQUUyUyxNQUFNcFIsRUFBRWk3QyxRQUFROS9DLEVBQUV5bkUsRUFBRTZ3QyxnQkFBZ0J6ekcsR0FBR2lvRSxFQUFFeHBFLEVBQUUrb0csU0FBUy9vRyxFQUFFMlMsTUFBTTNVLEVBQUVrZ0MsSUFBSSxNQUFNc3JDLEVBQUUsQ0FBQyxHQUFHeHBFLEVBQUVzOUYsT0FBTyxDQUFDLElBQUksSUFBSXI5RixFQUFFdXBFLEVBQUV6ckUsTUFBTSxNQUFNc0IsRUFBRSxFQUFFRCxFQUFFYSxFQUFFaEMsT0FBT29CLEVBQUVELElBQUlhLEVBQUVaLElBQUlBLEVBQUUsSUFBSUQsR0FBR0MsSUFBSVksRUFBRVosR0FBR1csRUFBRXM5RixPQUFPcjlGLEVBQUVaLEdBQUdtcUUsRUFBRXZwRSxFQUFFaXlCLEtBQUssTUFBTSxPQUFPczNDLEVBQUUsTUFBTSxJQUFJN2pDLEVBQUVsMkIsUUFBUSxlQUFlelAsRUFBRTJTLEtBQUssNkRBQTZENVQsR0FBRyxTQUFTd0MsR0FBRyxJQUFJN0UsRUFBRXluRSxFQUFFNWlFLEdBQUcsT0FBTzdFLEVBQUVnNEcsVUFBVXZ3QyxFQUFFNWlFLEVBQUUsTUFBTTdFLEdBQUd1NEcsU0FBUyxHQUFHakIsUUFBUSxTQUFTN3ZDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFZ0MsS0FBS2l6RyxTQUFTOXdDLEdBQUd4K0IsRUFBRTNqQyxLQUFLakQsR0FBR29sRSxHQUFHLE9BQU81aUUsR0FBRzg3RCxHQUFHci9ELEdBQUd0QixFQUFFc0QsRUFBRVosRUFBRTRDLEtBQUttaUUsRUFBRXgrQixFQUFFcGtDLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHcjlELElBQUlBLEVBQUVnQyxLQUFLaXpHLFNBQVM5d0MsR0FBRy9rRSxFQUFFNEMsS0FBS21pRSxFQUFFeCtCLElBQUkzbEMsR0FBRzZILEtBQUssU0FBU3M4RCxFQUFFNWlFLEdBQUcsS0FBSzRpRSxHQUFHNWlFLEtBQUs0aUUsRUFBRUEsRUFBRTh3QixRQUFRLE9BQU85d0IsR0FBRyt3QyxjQUFjLFNBQVMvd0MsRUFBRTVpRSxHQUFHLElBQUk3RSxFQUFFeW5FLEdBQUc1aUUsRUFBRSxPQUFPNGlFLEdBQUc1aUUsR0FBRzRpRSxJQUFJNWlFLElBQUk3RSxFQUFFMmdFLEVBQUU3OEQsT0FBTyxHQUFHZSxFQUFFNGlFLElBQUl6bkUsR0FBR28zRyxZQUFZdDRHLE9BQU8yNUcsS0FBSyxJQUFJdDBHLEtBQUtVLEVBQUU4eUcsR0FBR3h6RyxLQUFLdTBHLGFBQWFqeEMsRUFBRXd2QyxVQUFVLFNBQVMzekcsRUFBRXVCLEdBQUcsSUFBSTdFLEVBQUV3RCxVQUFVakMsUUFBUSxRQUFHLElBQVNpQyxVQUFVLEdBQUcsR0FBR0EsVUFBVSxHQUFHbTlELEVBQUUzZ0UsRUFBRW1MLEtBQUs3SCxFQUFFcTFHLE9BQU8zNEcsSUFBSUEsRUFBRWlsRCxTQUFTd2lCLEVBQUU4dkMsVUFBVTUyQyxFQUFFaHNELEVBQUU5UCxFQUFFODdELElBQUksSUFBSTEzQixPQUFFLEVBQU96SCxFQUFFaW1DLEVBQUVteEMsZUFBZSxRQUFHLEVBQU8sU0FBUzlyQyxFQUFFam9FLEdBQUcsTUFBTSxHQUFHNGlFLEVBQUV5dkMsS0FBSzUxRyxFQUFFdUQsRUFBRXZELEVBQUU4cUcsUUFBUTlxRyxFQUFFK3FHLFNBQVMxckMsRUFBRW4vQixFQUFFeUgsR0FBRyxPQUFPdytCLEVBQUVveEMsWUFBWTV2RSxFQUFFanBDLEVBQUU4NEcsT0FBT2owRyxHQUFHN0UsRUFBRTg0RyxPQUFPLEdBQUcsQ0FBQ2owRyxHQUFHeUwsT0FBT3RRLEVBQUU4NEcsUUFBUTk0RyxFQUFFODRHLE9BQU8sQ0FBQ2owRyxLQUFLaW9FLEVBQUVudUQsRUFBRThvRCxFQUFFeXZDLEtBQUtwcUMsRUFBRXhyRSxFQUFFdEIsRUFBRTg0RyxRQUFRLEdBQUduNEMsRUFBRW4vQixJQUFJMzhCLEVBQUU3RSxHQUFHLE9BQU9zRCxFQUFFeTFHLE9BQU0sRUFBR3oxRyxFQUFFcTFHLE9BQU8sU0FBU3IxRyxHQUFHLEdBQUdBLEVBQUUyaEQsUUFBUTNqRCxFQUFFNDJHLG1CQUFtQjUwRyxFQUFFNDBHLG1CQUFtQjUyRyxFQUFFOHFHLFFBQVE5b0csRUFBRThvRyxRQUFROXFHLEVBQUUrcUcsU0FBUy9vRyxFQUFFK29HLFNBQVMvcUcsRUFBRWdyRyxXQUFXaHBHLEVBQUVncEcsV0FBV2hyRyxFQUFFaVAsTUFBTWpOLEVBQUVpTixVQUFVLENBQUMsSUFBSTA0QixFQUFFMDNCLEVBQUU3OEQsT0FBTyxHQUFHZSxFQUFFdW5HLFFBQVE5b0csRUFBRThvRyxVQUFVLFNBQVMza0MsRUFBRTVpRSxHQUFHL0YsT0FBT21HLEtBQUt3aUUsR0FBR3Q2RCxTQUFRLFNBQVVuTixHQUFHLElBQUlzQixFQUFFbW1FLEVBQUV6bkUsR0FBR3luRSxFQUFFem5FLEdBQUcsU0FBU3luRSxFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUU2RSxFQUFFd3lHLGVBQWUsT0FBTzl6RyxFQUFFeTFHLFdBQVd2eEMsR0FBRSxTQUFVQSxHQUFHLE9BQU85RyxFQUFFNzhELE9BQU8sQ0FBQ3V6RyxlQUFlcjNHLEdBQUd5bkUsTUFBM0csQ0FBa0hubUUsRUFBRXVELE1BQXRMLENBQTZMb2tDLEVBQUUzbkMsR0FBR0EsRUFBRThxRyxRQUFRbmpFLEVBQUV3K0IsRUFBRXd4QyxhQUFhMzNHLEVBQUUrcUcsU0FBUy9xRyxFQUFFazNHLGNBQWNsMUcsRUFBRStvRyxTQUFTeG5HLEVBQUV3bkcsWUFBWTVrQyxFQUFFd3hDLFlBQVl4eEMsRUFBRXl4QyxpQkFBaUI1M0csRUFBRWdyRyxXQUFXM3JDLEVBQUU3OEQsT0FBTyxHQUFHZSxFQUFFeW5HLFdBQVdocEcsRUFBRWdwRyxhQUFhaHJHLEVBQUVpUCxNQUFNLEdBQUdqUCxFQUFFNDJHLG1CQUFtQnYxRyxFQUFFcXJHLHlCQUF5QjFxRyxHQUFHLElBQUlrK0IsRUFBRWwrQixFQUFFNjFHLDJCQUEyQm41RyxFQUFFOHNFLEVBQUUrZ0Msa0JBQWtCdnNHLEVBQUUsZ0JBQWdCa2dDLEdBQUdzckMsRUFBRStnQyxrQkFBa0J2c0csRUFBRSxxQkFBcUJrZ0MsS0FBS2wrQixFQUFFODFHLE9BQU8sU0FBU3YwRyxFQUFFN0UsRUFBRTJnRSxFQUFFcjlELEdBQUcsR0FBR21rRSxFQUFFbXhDLGlCQUFpQmo0QyxFQUFFLE1BQU0sSUFBSTEzQixFQUFFbDJCLFFBQVEsMEJBQTBCLEdBQUcwMEQsRUFBRW94QyxZQUFZdjFHLEVBQUUsTUFBTSxJQUFJMmxDLEVBQUVsMkIsUUFBUSwyQkFBMkIsT0FBT3JRLEVBQUVwQixFQUFFdUQsRUFBRTRpRSxFQUFFNWlFLEdBQUc3RSxFQUFFLEVBQUUyZ0UsRUFBRXI5RCxJQUFJQSxHQUFHdUIsRUFBRXcwRyxZQUFZMzJHLEVBQUVtQyxFQUFFd3pHLGVBQWUsU0FBUzV3QyxFQUFFNWlFLEVBQUU3RSxHQUF1SCxPQUFwSHluRSxFQUFFQSxFQUFFN25FLE1BQU1JLEVBQUVpVyxPQUFPalcsRUFBRWlXLEtBQUt3eEQsRUFBRUEsRUFBRXpuRSxFQUFFcXNHLFNBQVM1a0MsSUFBSUEsRUFBRSxtQkFBbUJ6bkUsRUFBRWlXLEtBQUtqVyxFQUFFbUwsS0FBSyxpQkFBaUJuTCxFQUFFcXNHLFNBQVNyc0csRUFBRWlXLE1BQWF3eEQsR0FBRzVpRSxFQUFFdXpHLGNBQWMsU0FBUzN3QyxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRW1MLE1BQU1uTCxFQUFFbUwsS0FBSyxpQkFBaUJuTCxFQUFFaWxELFNBQVEsRUFBR2psRCxFQUFFNDNHLE1BQU01M0csRUFBRW1MLEtBQUswc0csWUFBWTczRyxFQUFFNDNHLElBQUksSUFBSTUzRyxFQUFFbUwsS0FBSzBzRyxhQUFhLElBQUl2MEcsT0FBRSxFQUEyVSxHQUFwVXRELEVBQUVxQyxJQUFJckMsRUFBRXFDLEtBQUtpb0MsR0FBRyxXQUFXdHFDLEVBQUVtTCxLQUFLcTJCLEVBQUU4MkQsWUFBWXQ0RixFQUFFbUwsTUFBTSxJQUFJczhELEVBQUV6bkUsRUFBRXFDLEdBQUdpQixFQUFFdEQsRUFBRW1MLEtBQUssaUJBQWlCLFNBQVN0RyxHQUFHLElBQUk3RSxFQUFFd0QsVUFBVWpDLFFBQVEsUUFBRyxJQUFTaUMsVUFBVSxHQUFHLEdBQUdBLFVBQVUsR0FBRyxPQUFPeEQsRUFBRW1MLEtBQUtxMkIsRUFBRTgyRCxZQUFZdDRGLEVBQUVtTCxNQUFNbkwsRUFBRW1MLEtBQUssaUJBQWlCN0osRUFBRW1tRSxFQUFFNWlFLEVBQUU3RSxJQUFJeW5FLEVBQUU0a0MsV0FBV3JzRyxFQUFFcXNHLFNBQVMxckMsRUFBRTc4RCxPQUFPLEdBQUc5RCxFQUFFcXNHLFNBQVM1a0MsRUFBRTRrQyxXQUFqUixRQUErUixJQUFTNWtDLEdBQUdua0UsSUFBSW1rRSxFQUFFbmtFLFFBQU0sSUFBU21rRSxFQUFFLE1BQU0sSUFBSXgrQixFQUFFbDJCLFFBQVEsZUFBZS9TLEVBQUVpVyxLQUFLLHVCQUF1QixHQUFHd3hELGFBQWF0a0UsU0FBUyxPQUFPc2tFLEVBQUU1aUUsRUFBRTdFLElBQUk2RSxFQUFFVixLQUFLbW1DLEVBQUUsSUFBSWhwQyxFQUFFcS9ELEVBQUUsU0FBUzhHLEdBQUcsR0FBR0EsR0FBR0EsRUFBRW5pRCxXQUFXLE9BQU9taUQsRUFBRSxJQUFJNWlFLEVBQUUsR0FBRyxHQUFHLE1BQU00aUUsRUFBRSxJQUFJLElBQUl6bkUsS0FBS3luRSxFQUFFM29FLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFem5FLEtBQUs2RSxFQUFFN0UsR0FBR3luRSxFQUFFem5FLElBQUksT0FBTzZFLEVBQUVrTyxRQUFRMDBELEVBQUU1aUUsRUFBckosQ0FBd0o3RSxFQUFFLEtBQWFpcEMsR0FBRzNuQyxFQUFUdEIsRUFBRSxNQUFhc0IsRUFBRWdrQixXQUFXaGtCLEVBQUUsQ0FBQ3lSLFFBQVF6UixHQUFHa2dDLEVBQUV4aEMsRUFBRSxJQUFJOHNFLEVBQUU5c0UsRUFBRSxJQUFJdUQsRUFBRXZELEVBQUUsSUFBSTJDLEVBQUUzQyxFQUFFLElBQUksU0FBUzBDLEVBQUUra0UsRUFBRTVpRSxFQUFFN0UsRUFBRXNCLEVBQUVxL0QsRUFBRXI5RCxFQUFFMmxDLEdBQUcsU0FBU3pILEVBQUUzOEIsR0FBRyxJQUFJODdELEVBQUVuOUQsVUFBVWpDLFFBQVEsUUFBRyxJQUFTaUMsVUFBVSxHQUFHLEdBQUdBLFVBQVUsR0FBR2crQixFQUFFeUgsRUFBRSxPQUFPQSxHQUFHcGtDLEdBQUdva0MsRUFBRSxJQUFJcGtDLElBQUk0aUUsRUFBRTJ2QyxhQUFhLE9BQU9udUUsRUFBRSxLQUFLekgsRUFBRSxDQUFDMzhCLEdBQUd5TCxPQUFPMjRCLElBQUlqcEMsRUFBRXluRSxFQUFFNWlFLEVBQUU0aUUsRUFBRTJrQyxRQUFRM2tDLEVBQUU0a0MsU0FBUzFyQyxFQUFFeDFELE1BQU03SixFQUFFZ0MsR0FBRyxDQUFDcTlELEVBQUVtM0IsYUFBYXhuRixPQUFPaE4sR0FBR2srQixHQUFHLE9BQU9BLEVBQUU3aUIsRUFBRTNlLEVBQUV3aEMsRUFBRWltQyxFQUFFeCtCLEVBQUUzbkMsRUFBRWdDLElBQUlnMEcsUUFBUXp5RyxFQUFFMjhCLEVBQUVxbkIsTUFBTTVmLEVBQUVBLEVBQUUxbkMsT0FBTyxFQUFFaWdDLEVBQUVzMkQsWUFBWW4zQixHQUFHLEVBQUVuL0IsRUFBRSxTQUFTOEksSUFBSSxNQUFNLEdBQUcsU0FBUzMxQixFQUFFOHlELEVBQUU1aUUsR0FBRyxPQUFPQSxHQUFHLFNBQVNBLEtBQUtBLEVBQUVBLEVBQUUyOEIsRUFBRTgyRCxZQUFZenpGLEdBQUcsSUFBSTJzQyxLQUFLaTJCLEdBQUc1aUUsRUFBRSxTQUFTOFosRUFBRThvRCxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRWdDLEVBQUUybEMsR0FBRyxHQUFHdytCLEVBQUV1d0MsVUFBVSxDQUFDLElBQUl4MkUsRUFBRSxHQUFHMzhCLEVBQUU0aUUsRUFBRXV3QyxVQUFVbnpHLEVBQUUyOEIsRUFBRXhoQyxFQUFFc0IsR0FBR0EsRUFBRSxHQUFHZ0MsRUFBRTJsQyxFQUFFM25DLEdBQUdxL0QsRUFBRTc4RCxPQUFPZSxFQUFFMjhCLEdBQUcsT0FBTzM4QixJQUFJLFNBQVM0aUUsRUFBRTVpRSxFQUFFN0UsR0FBRyxhQUFhNkUsRUFBRXlnQixZQUFXLEVBQUd6Z0IsRUFBRW0wRyxXQUFXLFNBQVN2eEMsRUFBRTVpRSxHQUFHLE1BQUcsbUJBQW1CNGlFLEVBQVNBLEVBQVMsV0FBVyxJQUFJem5FLEVBQUV3RCxVQUFVQSxVQUFVakMsT0FBTyxHQUFHLE9BQU9pQyxVQUFVQSxVQUFVakMsT0FBTyxHQUFHc0QsRUFBRTdFLEdBQUd5bkUsRUFBRWhrRSxNQUFNNkIsS0FBSzlCLGNBQWMsU0FBU2lrRSxFQUFFNWlFLEVBQUU3RSxHQUFHLGNBQWEsU0FBVUEsR0FBRzZFLEVBQUV5Z0IsWUFBVyxFQUFHemdCLEVBQUVrTyxRQUFRLFNBQVMwMEQsR0FBRyxJQUFJNWlFLE9BQUUsSUFBUzdFLEVBQUVBLEVBQUV3SCxPQUFPbEcsRUFBRXVELEVBQUV5MEcsV0FBVzd4QyxFQUFFOHhDLFdBQVcsV0FBVyxPQUFPMTBHLEVBQUV5MEcsYUFBYTd4QyxJQUFJNWlFLEVBQUV5MEcsV0FBV2g0RyxHQUFHbW1FLElBQUlBLEVBQUV4bUIsUUFBUXA4QyxFQUFFa08sVUFBVW5ULEtBQUswRixLQUFLdEYsRUFBRSxNQUFNLFNBQVN5bkUsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXRCLEVBQUUsR0FBR3luRSxFQUFFeG1CLFNBQVMzL0MsRUFBRXlSLFNBQVN6UixHQUFHZ3dDLFNBQVMsQ0FBQ3U3RCxFQUFFLFNBQVNwbEMsRUFBRTVpRSxFQUFFN0UsRUFBRXNCLEVBQUVxL0QsR0FBRyxNQUFNLFFBQVE4RyxFQUFFMndCLGlCQUFpQjN3QixFQUFFMHZDLE9BQU90eUcsRUFBRUEsSUFBSSxVQUFVb3lHLFNBQVMsQ0FBQyxFQUFFLFlBQVlDLEtBQUssU0FBU3p2QyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRTJsQyxFQUFFdytCLEVBQUUwdkMsT0FBTzMxRSxFQUFFaW1DLEVBQUUyd0IsaUJBQWlCdHJCLEVBQUUsTUFBTWpvRSxFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHN3pHLEVBQUVra0UsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxZQUFZMjhCLEVBQUV5SCxFQUFFLE1BQU1wa0MsRUFBRXRCLEVBQUVzQixFQUFFLE1BQU1BLEVBQUVBLElBQUksTUFBTSxPQUFPdkIsRUFBRUMsRUFBRXZELEVBQUUsU0FBU0osS0FBS2t0RSxFQUFFLFNBQVMsQ0FBQzcyRCxLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFVBQVUsT0FBT0EsRUFBRUMsRUFBRXZELEVBQUUsU0FBU0osS0FBS2t0RSxFQUFFLE9BQU8sQ0FBQzcyRCxLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLEtBQUtrK0IsRUFBRXlILEVBQUUsTUFBTXBrQyxFQUFFdEIsRUFBRXNCLEVBQUUsUUFBUUEsRUFBRUEsSUFBSSxXQUFXLE9BQU92QixFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLa3RFLEVBQUUsTUFBTSxDQUFDNzJELEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksSUFBSWsrQixFQUFFeUgsRUFBRSxNQUFNcGtDLEVBQUV0QixFQUFFc0IsRUFBRSxPQUFPQSxFQUFFQSxJQUFJLDZCQUE2QjI4QixFQUFFeUgsRUFBRSxNQUFNcGtDLEVBQUV0QixFQUFFc0IsRUFBRSxNQUFNQSxFQUFFQSxJQUFJLE9BQU8sT0FBT3ZCLEVBQUVDLEVBQUV2RCxFQUFFLFFBQVFKLEtBQUtrdEUsRUFBRSxNQUFNam9FLEVBQUV0QixFQUFFc0IsRUFBRSxjQUFjQSxFQUFFLENBQUNvUixLQUFLLE9BQU9zQixLQUFLLEdBQUdsVixHQUFHb2xFLEVBQUU2dkMsUUFBUSxFQUFFMzJDLEVBQUUsR0FBR2szQixRQUFRcHdCLEVBQUV0akUsS0FBS2dILEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksZ0JBQWdCaTBHLFNBQVEsS0FBTSxTQUFTOXZDLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLEdBQUd5bkUsRUFBRXhtQixTQUFTMy9DLEVBQUV5UixTQUFTelIsR0FBR2d3QyxTQUFTLENBQUMybEUsU0FBUyxDQUFDLEVBQUUsWUFBWUMsS0FBSyxTQUFTenZDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUV3K0IsRUFBRTB2QyxPQUFPMzFFLEVBQUVpbUMsRUFBRTJ3QixpQkFBaUJ0ckIsRUFBRSxNQUFNam9FLEVBQUVBLEVBQUU0aUUsRUFBRTJ2QyxhQUFhLEdBQUc3ekcsRUFBRWtrRSxFQUFFNHZDLGdCQUFnQixTQUFTNXZDLEVBQUU1aUUsR0FBRyxHQUFHL0YsT0FBT1csVUFBVXdDLGVBQWVyQyxLQUFLNm5FLEVBQUU1aUUsR0FBRyxPQUFPNGlFLEVBQUU1aUUsSUFBSSxNQUFNLFlBQVkyOEIsRUFBRXlILEVBQUUsTUFBTXBrQyxFQUFFdEIsRUFBRXNCLEVBQUUsTUFBTUEsRUFBRUEsSUFBSSxNQUFNLE9BQU92QixFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLa3RFLEVBQUUsUUFBUSxDQUFDNzJELEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksVUFBVSxPQUFPQSxFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLa3RFLEVBQUUsT0FBTyxDQUFDNzJELEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksS0FBS2srQixFQUFFeUgsRUFBRSxNQUFNcGtDLEVBQUV0QixFQUFFc0IsRUFBRSxRQUFRQSxFQUFFQSxJQUFJLFdBQVcsT0FBT3ZCLEVBQUVDLEVBQUV2RCxFQUFFLFNBQVNKLEtBQUtrdEUsRUFBRSxNQUFNLENBQUM3MkQsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxJQUFJaytCLEVBQUV5SCxFQUFFLE1BQU1wa0MsRUFBRXRCLEVBQUVzQixFQUFFLE9BQU9BLEVBQUVBLElBQUksc0JBQXNCLE9BQU92QixFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLa3RFLEVBQUUsa0JBQWtCLENBQUM3MkQsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxhQUFhaytCLEVBQUV5SCxFQUFFLE1BQU1wa0MsRUFBRXRCLEVBQUVzQixFQUFFLE1BQU1BLEVBQUVBLElBQUksV0FBVyxPQUFPdkIsRUFBRUMsRUFBRXZELEVBQUUsU0FBU0osS0FBS2t0RSxFQUFFLGNBQWMsQ0FBQzcyRCxLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFVBQVUsT0FBT0EsRUFBRUMsRUFBRXZELEVBQUUsU0FBU0osS0FBS2t0RSxFQUFFLGtCQUFrQixDQUFDNzJELEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksVUFBVSxPQUFPQSxFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLa3RFLEVBQUUsdUJBQXVCLENBQUM3MkQsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxrQkFBa0JrK0IsRUFBRXlILEVBQUUsTUFBTXBrQyxFQUFFdEIsRUFBRXNCLEVBQUUsWUFBWUEsRUFBRUEsSUFBSSxpREFBaUQyOEIsRUFBRXlILEVBQUUsTUFBTXBrQyxFQUFFdEIsRUFBRXNCLEVBQUUsT0FBT0EsRUFBRUEsSUFBSSxVQUFVMjhCLEVBQUV5SCxFQUFFLE1BQU1wa0MsRUFBRXRCLEVBQUVzQixFQUFFLE9BQU9BLEVBQUVBLElBQUksV0FBVzI4QixFQUFFeUgsRUFBRSxNQUFNcGtDLEVBQUV0QixFQUFFc0IsRUFBRSxRQUFRQSxFQUFFQSxJQUFJLFlBQVkyOEIsRUFBRXlILEVBQUUsTUFBTXBrQyxFQUFFdEIsRUFBRXNCLEVBQUUsT0FBT0EsRUFBRUEsSUFBSSxrQkFBa0IweUcsU0FBUSxLQUFNLFNBQVM5dkMsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXRCLEVBQUUsR0FBR3luRSxFQUFFeG1CLFNBQVMzL0MsRUFBRXlSLFNBQVN6UixHQUFHZ3dDLFNBQVMsQ0FBQ3U3RCxFQUFFLFNBQVNwbEMsRUFBRTVpRSxFQUFFN0UsRUFBRXNCLEVBQUVxL0QsR0FBRyxNQUFNLDJCQUEyQjhHLEVBQUUyd0IsaUJBQWlCM3dCLEVBQUUwdkMsT0FBT3R5RyxFQUFFQSxJQUFJLFlBQVlveUcsU0FBUyxDQUFDLEVBQUUsWUFBWUMsS0FBSyxTQUFTenZDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUV3K0IsRUFBRTB2QyxPQUFPMzFFLEVBQUVpbUMsRUFBRTJ3QixpQkFBaUJ0ckIsRUFBRSxNQUFNam9FLEVBQUVBLEVBQUU0aUUsRUFBRTJ2QyxhQUFhLEdBQUc3ekcsRUFBRWtrRSxFQUFFNHZDLGdCQUFnQixTQUFTNXZDLEVBQUU1aUUsR0FBRyxHQUFHL0YsT0FBT1csVUFBVXdDLGVBQWVyQyxLQUFLNm5FLEVBQUU1aUUsR0FBRyxPQUFPNGlFLEVBQUU1aUUsSUFBSSxNQUFNLFlBQVkyOEIsRUFBRXlILEVBQUUsTUFBTXBrQyxFQUFFdEIsRUFBRXNCLEVBQUUsTUFBTUEsRUFBRUEsSUFBSSxNQUFNLE9BQU92QixFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLa3RFLEVBQUUsUUFBUSxDQUFDNzJELEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksVUFBVSxPQUFPQSxFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLa3RFLEVBQUUsT0FBTyxDQUFDNzJELEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksS0FBS2srQixFQUFFeUgsRUFBRSxNQUFNcGtDLEVBQUV0QixFQUFFc0IsRUFBRSxRQUFRQSxFQUFFQSxJQUFJLFdBQVcsT0FBT3ZCLEVBQUVDLEVBQUV2RCxFQUFFLFNBQVNKLEtBQUtrdEUsRUFBRSxNQUFNLENBQUM3MkQsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSw2QkFBNkJrK0IsRUFBRXlILEVBQUUsTUFBTXBrQyxFQUFFdEIsRUFBRXNCLEVBQUUsT0FBT0EsRUFBRUEsSUFBSSwrQkFBK0IyOEIsRUFBRXlILEVBQUUsTUFBTXBrQyxFQUFFdEIsRUFBRXNCLEVBQUUsTUFBTUEsRUFBRUEsSUFBSSxPQUFPLE9BQU92QixFQUFFQyxFQUFFdkQsRUFBRSxRQUFRSixLQUFLa3RFLEVBQUUsTUFBTWpvRSxFQUFFdEIsRUFBRXNCLEVBQUUsVUFBVUEsRUFBRSxDQUFDb1IsS0FBSyxPQUFPc0IsS0FBSyxHQUFHbFYsR0FBR29sRSxFQUFFNnZDLFFBQVEsRUFBRTMyQyxFQUFFLEdBQUdrM0IsUUFBUXB3QixFQUFFdGpFLEtBQUtnSCxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLGdCQUFnQmkwRyxTQUFRLEtBQU0sU0FBUzl2QyxFQUFFNWlFLEVBQUU3RSxJQUFJNkUsRUFBRTdFLEVBQUUsRUFBRkEsRUFBSyxJQUFLc0ssS0FBSyxDQUFDbTlELEVBQUVubUUsRUFBRSwwUEFBMFAsS0FBS21tRSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLEdBQUd5bkUsRUFBRXhtQixTQUFTMy9DLEVBQUV5UixTQUFTelIsR0FBR2d3QyxTQUFTLENBQUMybEUsU0FBUyxDQUFDLEVBQUUsWUFBWUMsS0FBSyxTQUFTenZDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUUsTUFBTXBrQyxFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHNTFFLEVBQUVpbUMsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxTQUFTLE9BQU92QixFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsWUFBWSxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksV0FBVyxPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsWUFBWSxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksa0JBQWtCaTBHLFNBQVEsS0FBTSxTQUFTOXZDLEVBQUU1aUUsRUFBRTdFLElBQUk2RSxFQUFFN0UsRUFBRSxFQUFGQSxFQUFLLElBQUtzSyxLQUFLLENBQUNtOUQsRUFBRW5tRSxFQUFFLGt2QkFBa3ZCLEtBQUttbUUsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxJQUFJNkUsRUFBRTdFLEVBQUUsRUFBRkEsRUFBSyxJQUFLc0ssS0FBSyxDQUFDbTlELEVBQUVubUUsRUFBRSw4U0FBOFMsS0FBS21tRSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLEdBQUd5bkUsRUFBRXhtQixTQUFTMy9DLEVBQUV5UixTQUFTelIsR0FBR2d3QyxTQUFTLENBQUMybEUsU0FBUyxDQUFDLEVBQUUsWUFBWUMsS0FBSyxTQUFTenZDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUUsTUFBTXBrQyxFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHNTFFLEVBQUVpbUMsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxTQUFTLE9BQU92QixFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsWUFBWSxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksVUFBVSxPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsb0JBQW9CLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxVQUFVLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxVQUFVLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSwwREFBMEQsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFFBQVEsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLGlCQUFpQmkwRyxTQUFRLEtBQU0sU0FBUzl2QyxFQUFFNWlFLEdBQUc0aUUsRUFBRXhtQixRQUFRLFNBQVN3bUIsR0FBRyxHQUFHaG5FLE1BQU1DLFFBQVErbUUsR0FBRyxPQUFPQSxJQUFJLFNBQVNBLEVBQUU1aUUsR0FBRzRpRSxFQUFFeG1CLFFBQVEsU0FBU3dtQixFQUFFNWlFLEdBQUcsR0FBRzBFLE9BQU9xUSxZQUFZOWEsT0FBTzJvRSxJQUFJLHVCQUF1QjNvRSxPQUFPVyxVQUFVQyxTQUFTRSxLQUFLNm5FLEdBQUcsQ0FBQyxJQUFJem5FLEVBQUUsR0FBR3NCLEdBQUUsRUFBR3EvRCxHQUFFLEVBQUdyOUQsT0FBRSxFQUFPLElBQUksSUFBSSxJQUFJMmxDLEVBQUV6SCxFQUFFaW1DLEVBQUVsK0QsT0FBT3FRLGNBQWN0WSxHQUFHMm5DLEVBQUV6SCxFQUFFM25CLFFBQVFDLFFBQVE5WixFQUFFc0ssS0FBSzIrQixFQUFFNXBDLFFBQVF3RixHQUFHN0UsRUFBRXVCLFNBQVNzRCxHQUFHdkQsR0FBRSxJQUFLLE1BQU1tbUUsR0FBRzlHLEdBQUUsRUFBR3I5RCxFQUFFbWtFLEVBQUUsUUFBUSxJQUFJbm1FLEdBQUcsTUFBTWtnQyxFQUFFZzRFLFFBQVFoNEUsRUFBRWc0RSxTQUFTLFFBQVEsR0FBRzc0QyxFQUFFLE1BQU1yOUQsR0FBRyxPQUFPdEQsS0FBSyxTQUFTeW5FLEVBQUU1aUUsR0FBRzRpRSxFQUFFeG1CLFFBQVEsV0FBVyxNQUFNLElBQUl3TSxVQUFVLDBEQUEwRCxTQUFTZ2EsRUFBRTVpRSxFQUFFN0UsSUFBSTZFLEVBQUU3RSxFQUFFLEVBQUZBLEVBQUssSUFBS3NLLEtBQUssQ0FBQ205RCxFQUFFbm1FLEVBQUUsNFVBQTRVLEtBQUttbUUsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFcS9ELEVBQUVyOUQsRUFBRUEsRUFBRSxTQUFTbWtFLEdBQUcsSUFBSTVpRSxFQUFFLEdBQUcsU0FBUzdFLEVBQUVzQixHQUFHLEdBQUd1RCxFQUFFdkQsR0FBRyxPQUFPdUQsRUFBRXZELEdBQUcyL0MsUUFBUSxJQUFJMGYsRUFBRTk3RCxFQUFFdkQsR0FBRyxDQUFDQSxFQUFFQSxFQUFFaUMsR0FBRSxFQUFHMDlDLFFBQVEsSUFBSSxPQUFPd21CLEVBQUVubUUsR0FBRzFCLEtBQUsrZ0UsRUFBRTFmLFFBQVEwZixFQUFFQSxFQUFFMWYsUUFBUWpoRCxHQUFHMmdFLEVBQUVwOUQsR0FBRSxFQUFHbzlELEVBQUUxZixRQUFRLE9BQU9qaEQsRUFBRXU0QixFQUFFa3ZDLEVBQUV6bkUsRUFBRTJDLEVBQUVrQyxFQUFFN0UsRUFBRTJlLEVBQUUsU0FBUzhvRCxFQUFFNWlFLEVBQUV2RCxHQUFHdEIsRUFBRWlwQyxFQUFFdytCLEVBQUU1aUUsSUFBSS9GLE9BQU9rSSxlQUFleWdFLEVBQUU1aUUsRUFBRSxDQUFDa0MsWUFBVyxFQUFHNEIsSUFBSXJILEtBQUt0QixFQUFFMmdFLEVBQUUsU0FBUzhHLEdBQUcsb0JBQW9CbCtELFFBQVFBLE9BQU9nYyxhQUFhem1CLE9BQU9rSSxlQUFleWdFLEVBQUVsK0QsT0FBT2djLFlBQVksQ0FBQ2xtQixNQUFNLFdBQVdQLE9BQU9rSSxlQUFleWdFLEVBQUUsYUFBYSxDQUFDcG9FLE9BQU0sS0FBTVcsRUFBRXluRSxFQUFFLFNBQVNBLEVBQUU1aUUsR0FBRyxHQUFHLEVBQUVBLElBQUk0aUUsRUFBRXpuRSxFQUFFeW5FLElBQUksRUFBRTVpRSxFQUFFLE9BQU80aUUsRUFBRSxHQUFHLEVBQUU1aUUsR0FBRyxpQkFBaUI0aUUsR0FBR0EsR0FBR0EsRUFBRW5pRCxXQUFXLE9BQU9taUQsRUFBRSxJQUFJbm1FLEVBQUV4QyxPQUFPcUMsT0FBTyxNQUFNLEdBQUduQixFQUFFMmdFLEVBQUVyL0QsR0FBR3hDLE9BQU9rSSxlQUFlMUYsRUFBRSxVQUFVLENBQUN5RixZQUFXLEVBQUcxSCxNQUFNb29FLElBQUksRUFBRTVpRSxHQUFHLGlCQUFpQjRpRSxFQUFFLElBQUksSUFBSTlHLEtBQUs4RyxFQUFFem5FLEVBQUUyZSxFQUFFcmQsRUFBRXEvRCxFQUFFLFNBQVM5N0QsR0FBRyxPQUFPNGlFLEVBQUU1aUUsSUFBSTNCLEtBQUssS0FBS3k5RCxJQUFJLE9BQU9yL0QsR0FBR3RCLEVBQUVBLEVBQUUsU0FBU3luRSxHQUFHLElBQUk1aUUsRUFBRTRpRSxHQUFHQSxFQUFFbmlELFdBQVcsV0FBVyxPQUFPbWlELEVBQUUxMEQsU0FBUyxXQUFXLE9BQU8wMEQsR0FBRyxPQUFPem5FLEVBQUUyZSxFQUFFOVosRUFBRSxJQUFJQSxHQUFHQSxHQUFHN0UsRUFBRWlwQyxFQUFFLFNBQVN3K0IsRUFBRTVpRSxHQUFHLE9BQU8vRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxJQUFJN0UsRUFBRTJVLEVBQUUsR0FBRzNVLEVBQUVBLEVBQUV3aEMsRUFBRSxJQUFqNUIsQ0FBczVCLENBQUMsQ0FBQyxDQUFDLFNBQVNpbUMsRUFBRTVpRSxFQUFFN0UsR0FBRyxhQUFhLFNBQVNzQixFQUFFbW1FLEdBQUduaUUsS0FBSzA4RixTQUFTdjZCLEVBQUVuaUUsS0FBSzI4RixrQkFBa0IsRUFBRTM4RixLQUFLNDhGLGdCQUFnQixFQUFFNThGLEtBQUs2OEYsa0JBQWtCLEVBQUU3OEYsS0FBSzg4RixtQkFBbUIsRUFBRTk4RixLQUFLKzhGLDZCQUE2QixFQUFFLzhGLEtBQUtnOUYsMkJBQTJCLEVBQUVoOUYsS0FBS2k5Riw2QkFBNkIsRUFBRWo5RixLQUFLazlGLFFBQVEsR0FBRyxTQUFTN2hDLEVBQUU4RyxFQUFFNWlFLEdBQUdTLEtBQUttOUYsUUFBUSxDQUFDLElBQUluOUYsS0FBS285RixjQUFjajdCLEVBQUVrN0IsWUFBWXI5RixLQUFLczlGLGdCQUFnQm43QixFQUFFbzdCLFlBQVlwN0IsRUFBRXE3QixtQkFBbUJ4OUYsS0FBS3M5RixnQkFBZ0IsSUFBSW5pRyxNQUFNZ25FLEVBQUVrN0IsWUFBWSxHQUFHbnRFLEtBQUtpeUMsRUFBRW83QixjQUFjaCtGLEVBQUVBLEdBQUcsR0FBRzRpRSxFQUFFczdCLGFBQWEsSUFBSWwrRixFQUFFLElBQUlwRSxNQUFNZ25FLEVBQUVzN0IsYUFBYSxHQUFHdnRFLEtBQUtsd0IsS0FBS3M5RixrQkFBa0J0OUYsS0FBSzA5RixjQUFjbitGLEVBQUVTLEtBQUsyOUYscUJBQXFCcCtGLEVBQUV0RCxPQUFPLFNBQVMrQixFQUFFbWtFLEVBQUU1aUUsR0FBR1MsS0FBSzQ5RixlQUFlLElBQUl2aUMsRUFBRThHLEVBQUU1aUUsR0FBR1MsS0FBSzBHLEtBQUksRUFBRzFHLEtBQUs2OUYsa0JBQWtCMTdCLEVBQUUyN0IsaUJBQWlCOTlGLEtBQUtxOUYsWUFBWWw3QixFQUFFazdCLFlBQVlyOUYsS0FBS282RixpQkFBaUJqNEIsRUFBRWk0QixpQkFBaUJwNkYsS0FBSys5RixtQkFBbUI1N0IsRUFBRTQ3QixtQkFBbUIvOUYsS0FBS2crRixRQUFRLEdBQUdoK0YsS0FBS2k3RixjQUFjLEtBQUtqN0YsS0FBS3k2RixhQUFhLEtBQUt6NkYsS0FBS2krRixVQUFVLElBQUlqaUcsRUFBRWdFLE1BQU1BLEtBQUs0NkYsb0JBQW1CLEVBQUc1NkYsS0FBS283RixvQkFBbUIsRUFBR3A3RixLQUFLcTdGLHdCQUF1QixFQUFHcjdGLEtBQUtrK0YsbUJBQW1CbGlHLEVBQUU3QixVQUFVZ2tHLFlBQVksV0FBVyxJQUFJaDhCLEVBQUUsSUFBSW5tRSxFQUFFZ0UsS0FBSzA4RixVQUFVLE9BQU92NkIsRUFBRXU0QixXQUFXMTZGLEtBQUs0OEYsZUFBZTU4RixLQUFLNjhGLG1CQUFtQjE2QixHQUFHbm1FLEVBQUU3QixVQUFVb0MsS0FBSyxTQUFTNGxFLEdBQUcsT0FBT0EsRUFBRSxFQUFFbmlFLEtBQUtrOUYsUUFBUWw5RixLQUFLazlGLFFBQVFqaEcsT0FBT2ttRSxHQUFHbmlFLEtBQUtrOUYsUUFBUS82QixJQUFJbm1FLEVBQUU3QixVQUFVaWtHLFVBQVUsU0FBU2o4QixHQUFHLElBQUksSUFBSTVpRSxFQUFFUyxLQUFLazlGLFFBQVFqaEcsT0FBTyxFQUFFc0QsR0FBRyxFQUFFQSxJQUFJLEdBQUdTLEtBQUtrOUYsUUFBUTM5RixHQUFHeUQsTUFBTW0vRCxHQUFHLE9BQU0sRUFBRyxPQUFNLEdBQUlubUUsRUFBRTdCLFVBQVV1Z0csV0FBVyxTQUFTdjRCLEVBQUU1aUUsR0FBR1MsS0FBS2s3RixhQUFhbDdGLEtBQUs0OEYsZUFBZXo2QixHQUFHLEVBQUVuaUUsS0FBSzY4RixrQkFBa0J0OUYsR0FBRyxFQUFFUyxLQUFLMjhGLGtCQUFrQjM4RixLQUFLMDhGLFNBQVMyQixnQkFBZ0JyK0YsS0FBSzQ4RixlQUFlNThGLEtBQUs2OEYscUJBQXFCN2dHLEVBQUU3QixVQUFVbWtHLGdCQUFnQixXQUFXdCtGLEtBQUswOEYsU0FBU3RDLG1CQUFtQnA2RixLQUFLODhGLG1CQUFtQjk4RixLQUFLazlGLFFBQVFqaEcsT0FBTytELEtBQUsrOEYsNkJBQTZCLzhGLEtBQUsyOEYsa0JBQWtCMzhGLEtBQUtnOUYsMEJBQTBCaDlGLEtBQUswOEYsU0FBU3VCLFVBQVVyQixlQUFlNThGLEtBQUtpOUYsNkJBQTZCajlGLEtBQUswOEYsU0FBU3VCLFVBQVVwQixvQkFBb0I3Z0csRUFBRTdCLFVBQVVva0csYUFBYSxXQUFXLE9BQU92K0YsS0FBSzg4RixvQkFBb0I5OEYsS0FBSzI4RixrQkFBa0IzOEYsS0FBSzA4RixTQUFTdEMsa0JBQWtCcDZGLEtBQUsrOEYsNkJBQTZCLzhGLEtBQUswOEYsU0FBU3VCLFVBQVV0QixtQkFBbUIzZ0csRUFBRTdCLFVBQVVxa0csWUFBWSxXQUFXLEdBQUd4K0YsS0FBS3UrRixlQUFlLENBQUN2K0YsS0FBSzA4RixTQUFTbkMsZUFBZSxJQUFJcDRCLEVBQUVuaUUsS0FBSzA4RixTQUFTakMsYUFBYSxPQUFPdDRCLEVBQUV1NEIsV0FBVzE2RixLQUFLZzlGLDBCQUEwQmg5RixLQUFLaTlGLDhCQUE4Qjk2QixFQUFFKzZCLFFBQVFsOUYsS0FBS2s5RixRQUFRei9GLE1BQU11QyxLQUFLODhGLG9CQUFvQjk4RixLQUFLazlGLFFBQVFsOUYsS0FBS2s5RixRQUFRei9GLE1BQU0sRUFBRXVDLEtBQUs4OEYsb0JBQW9CMzZCLEVBQUV3NkIsbUJBQW1CMzhGLEtBQUsyOEYsa0JBQWtCMzhGLEtBQUsrOEYsNkJBQTZCLzhGLEtBQUsyOEYsa0JBQWtCMzhGLEtBQUsrOEYsNkJBQTZCLE1BQU01NkIsRUFBRSs2QixRQUFRLEtBQUsvNkIsRUFBRSs2QixRQUFReGdHLE9BQU8sRUFBRSxHQUFHeWxFLEVBQUV3NkIsbUJBQW1CLElBQUcsRUFBRyxPQUFNLEdBQUkzZ0csRUFBRTdCLFVBQVUrZ0csU0FBUyxXQUFXLE9BQU8sSUFBSWw3RixLQUFLazlGLFFBQVFqaEcsUUFBUUQsRUFBRTdCLFVBQVVxWSxLQUFLLFdBQVcsT0FBT3hTLEtBQUtrN0YsV0FBVyxLQUFLbDdGLEtBQUtrOUYsUUFBUWw5RixLQUFLazlGLFFBQVFqaEcsT0FBTyxJQUFJRCxFQUFFN0IsVUFBVTZLLEtBQUssU0FBU205RCxHQUFHbmlFLEtBQUtrOUYsUUFBUWw0RixLQUFLbTlELEdBQUcsSUFBSTVpRSxFQUFFNGlFLEVBQUVodEMsWUFBWSxPQUFPLElBQUk1MUIsRUFBRVMsS0FBSzI4RixrQkFBa0J4NkIsRUFBRWxtRSxPQUFPc0QsRUFBRVMsS0FBSzI4RixtQkFBbUJ4NkIsRUFBRWxtRSxRQUFRRCxFQUFFN0IsVUFBVXVMLElBQUksV0FBVyxJQUFJeThELEVBQUUsS0FBSyxPQUFPbmlFLEtBQUtrN0YsYUFBYS80QixFQUFFbmlFLEtBQUtrOUYsUUFBUXgzRixNQUFNMUYsS0FBSzI4RixtQkFBbUJ4NkIsRUFBRWxtRSxRQUFRa21FLEdBQUdubUUsRUFBRTdCLFVBQVVza0csZUFBZSxXQUFXeitGLEtBQUs0OEYsZUFBZSxJQUFJNThGLEtBQUs0OEYsZ0JBQWdCLEVBQUU1OEYsS0FBSzI4RixtQkFBbUIzOEYsS0FBSzA4RixTQUFTVyxjQUFjcmhHLEVBQUU3QixVQUFVdWtHLG9CQUFvQixXQUFXMStGLEtBQUtnOUYsMEJBQTBCLElBQUloOUYsS0FBS2c5RiwyQkFBMkIsSUFBSWhoRyxFQUFFN0IsVUFBVXM0QixLQUFLLFdBQVcsS0FBSyxNQUFNenlCLEtBQUt3UyxRQUFReFMsS0FBS2s5RixRQUFReDNGLE1BQU0xRixLQUFLMjhGLG1CQUFtQixHQUFHM2dHLEVBQUU3QixVQUFVQyxTQUFTLFdBQVcsSUFBSStuRSxFQUFFLEdBQUcsT0FBT25pRSxLQUFLazdGLFdBQVdsN0YsS0FBSzA4RixTQUFTcUIscUJBQXFCNTdCLEVBQUVuaUUsS0FBSzA4RixTQUFTaUMsa0JBQWtCMytGLEtBQUs0OEYsa0JBQWtCejZCLEVBQUVuaUUsS0FBSzA4RixTQUFTaUMsa0JBQWtCMytGLEtBQUs0OEYsZUFBZTU4RixLQUFLNjhGLG1CQUFtQjE2QixHQUFHbmlFLEtBQUtrOUYsUUFBUWh0RSxLQUFLLEtBQUtpeUMsR0FBRzlHLEVBQUVsaEUsVUFBVWtrRyxnQkFBZ0IsU0FBU2w4QixFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUVzRixLQUFLMjlGLHFCQUFxQixPQUFPcCtGLEVBQUVBLEdBQUcsRUFBRTRpRSxFQUFFLElBQUl6bkUsRUFBRSxJQUFHQSxHQUFHeW5FLEVBQUVuaUUsS0FBS285RixlQUFpQjc5RixHQUFHODdELEVBQUVsaEUsVUFBVXdrRyxrQkFBa0IsU0FBU3g4QixFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUVzRixLQUFLMDlGLGNBQWMsT0FBT24rRixFQUFFQSxHQUFHLEVBQUU0aUUsRUFBRSxJQUFJQSxFQUFFLEVBQUV6bkUsRUFBRSxJQUFJNkUsR0FBRzRpRSxFQUFFbmlFLEtBQUtvOUYsY0FBY3A5RixLQUFLNCtGLGVBQWVyL0YsR0FBRzdFLEVBQUdzRixLQUFLbTlGLFFBQVE1OUYsSUFBSTg3RCxFQUFFbGhFLFVBQVV5a0csZUFBZSxTQUFTejhCLEdBQUcsS0FBS0EsR0FBR25pRSxLQUFLbTlGLFFBQVFsaEcsUUFBUStELEtBQUs2K0YsZ0JBQWdCeGpDLEVBQUVsaEUsVUFBVTBrRyxhQUFhLFdBQVcsSUFBSTE4QixFQUFFbmlFLEtBQUttOUYsUUFBUWxoRyxPQUFPc0QsRUFBRSxFQUFFN0UsRUFBRSxHQUFHc0YsS0FBS285RixlQUFlajdCLEdBQUduaUUsS0FBS285RixnQkFBZ0JqN0IsSUFBSTVpRSxFQUFFMUUsS0FBS0MsTUFBTXFuRSxFQUFFbmlFLEtBQUtvOUYsZ0JBQWdCcDlGLEtBQUtvOUYsY0FBYzFpRyxFQUFFLElBQUlTLE1BQU1vRSxFQUFFLEdBQUcyd0IsS0FBS2x3QixLQUFLczlGLGtCQUFrQm43QixJQUFJem5FLEdBQUcsSUFBSVMsTUFBTWduRSxFQUFFLEdBQUdqeUMsS0FBSyxNQUFNbHdCLEtBQUttOUYsUUFBUW40RixLQUFLdEssSUFBSXNELEVBQUU3RCxVQUFVK2pHLGlCQUFpQixXQUFXbCtGLEtBQUtpN0YsY0FBY2o3RixLQUFLeTZGLGFBQWF6NkYsS0FBS3k2RixhQUFhejZGLEtBQUtpK0YsVUFBVUUsY0FBY24rRixLQUFLZytGLFFBQVFoNUYsS0FBS2hGLEtBQUt5NkYsZUFBZXo4RixFQUFFN0QsVUFBVWc5RixnQkFBZ0IsV0FBVyxPQUFPbjNGLEtBQUtnK0YsUUFBUS9oRyxRQUFRK0IsRUFBRTdELFVBQVV3a0csa0JBQWtCLFNBQVN4OEIsRUFBRTVpRSxHQUFHLE9BQU9TLEtBQUs0OUYsZUFBZWUsa0JBQWtCeDhCLEVBQUU1aUUsSUFBSXZCLEVBQUU3RCxVQUFVa2tHLGdCQUFnQixTQUFTbDhCLEVBQUU1aUUsR0FBRyxPQUFPUyxLQUFLNDlGLGVBQWVTLGdCQUFnQmw4QixFQUFFNWlFLElBQUl2QixFQUFFN0QsVUFBVStnRyxTQUFTLFdBQVcsT0FBT2w3RixLQUFLaTdGLGVBQWVqN0YsS0FBS3k2RixhQUFhUyxZQUFZbDlGLEVBQUU3RCxVQUFVb2dHLGFBQWEsU0FBU3A0QixHQUFHLFFBQVFuaUUsS0FBS2s3RixhQUFhLzRCLEdBQUduaUUsS0FBS2syRix1QkFBdUJsMkYsS0FBSzBHLEtBQUsxRyxLQUFLaytGLG1CQUFtQixLQUFLbGdHLEVBQUU3RCxVQUFVMDlGLFNBQVMsU0FBUzExQixHQUFHbmlFLEtBQUt5eUIsTUFBSyxHQUFJLElBQUlsekIsRUFBRVMsS0FBS3k2RixhQUFhLzBGLE1BQU1uRyxJQUFJLE9BQU9BLEVBQUVBLEVBQUV0RCxPQUFPLEtBQUtzRCxFQUFFQSxFQUFFcEMsUUFBUSxRQUFRLEtBQUs2QyxLQUFLeTZGLGFBQWF6MUYsS0FBS3pGLElBQUlTLEtBQUs2OUYsbUJBQW1CNzlGLEtBQUtrK0YsbUJBQW1CLElBQUl4akcsRUFBRXNGLEtBQUtnK0YsUUFBUTl0RSxLQUFLLE1BQU0sTUFBTSxPQUFPaXlDLElBQUl6bkUsRUFBRUEsRUFBRXlDLFFBQVEsUUFBUWdsRSxJQUFJem5FLEdBQUdzRCxFQUFFN0QsVUFBVWtnRyxlQUFlLFdBQVdyNkYsS0FBS3k2RixhQUFhNkQsbUJBQW1CdGdHLEVBQUU3RCxVQUFVdWdHLFdBQVcsU0FBU3Y0QixFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFQSxHQUFHLEVBQUU1aUUsRUFBRUEsR0FBRyxFQUFFUyxLQUFLaStGLFVBQVV2RCxXQUFXdjRCLEVBQUU1aUUsR0FBR1MsS0FBS2crRixRQUFRL2hHLE9BQU8sR0FBRytELEtBQUt5NkYsYUFBYUMsV0FBV3Y0QixFQUFFNWlFLElBQUcsSUFBS1MsS0FBS3k2RixhQUFhQyxjQUFhLElBQUsxOEYsRUFBRTdELFVBQVUyZ0csY0FBYyxTQUFTMzRCLEdBQUcsSUFBSSxJQUFJNWlFLEVBQUUsRUFBRUEsRUFBRTRpRSxFQUFFeTNCLFNBQVNyNkYsSUFBSVMsS0FBS2srRixtQkFBbUJsK0YsS0FBS3k2RixhQUFhQyxZQUFZLEdBQUcxNkYsS0FBS3k2RixhQUFhejFGLEtBQUttOUQsRUFBRXc0QixtQkFBbUIzNkYsS0FBS3k2RixhQUFhejFGLEtBQUttOUQsRUFBRXA4RCxNQUFNL0YsS0FBSzQ2RixvQkFBbUIsRUFBRzU2RixLQUFLbzdGLG9CQUFtQixFQUFHcDdGLEtBQUtxN0Ysd0JBQXVCLEdBQUlyOUYsRUFBRTdELFVBQVVnaEcsVUFBVSxTQUFTaDVCLEdBQUduaUUsS0FBSzgrRiwyQkFBMkI5K0YsS0FBS3k2RixhQUFhejFGLEtBQUttOUQsR0FBR25pRSxLQUFLNDZGLG9CQUFtQixFQUFHNTZGLEtBQUtvN0Ysb0JBQW1CLEVBQUdwN0YsS0FBS3E3Rix1QkFBdUJyN0YsS0FBS3k2RixhQUFhK0QsZUFBZXhnRyxFQUFFN0QsVUFBVTJrRyx5QkFBeUIsV0FBVzkrRixLQUFLNDZGLHFCQUFxQjU2RixLQUFLazJGLHVCQUF1QmwyRixLQUFLbzdGLG9CQUFvQnA3RixLQUFLcTZGLGlCQUFpQnI2RixLQUFLeTZGLGFBQWF6MUYsS0FBSyxPQUFPaEgsRUFBRTdELFVBQVVvN0YsY0FBYyxTQUFTcHpCLEdBQUcsSUFBSSxJQUFJNWlFLEVBQUVTLEtBQUtnK0YsUUFBUS9oRyxPQUFPa21FLEVBQUU1aUUsR0FBR1MsS0FBS2crRixRQUFRNzdCLEdBQUdzOEIsaUJBQWlCdDhCLElBQUluaUUsS0FBS3k2RixhQUFhaUUsdUJBQXVCMWdHLEVBQUU3RCxVQUFVczRCLEtBQUssU0FBUzB2QyxHQUFHLElBQUlBLE9BQUUsSUFBU0EsR0FBR0EsRUFBRW5pRSxLQUFLeTZGLGFBQWFob0UsT0FBTzB2QyxHQUFHbmlFLEtBQUtnK0YsUUFBUS9oRyxPQUFPLEdBQUcrRCxLQUFLeTZGLGFBQWFTLFlBQVlsN0YsS0FBS2crRixRQUFRdDRGLE1BQU0xRixLQUFLeTZGLGFBQWF6NkYsS0FBS2crRixRQUFRaCtGLEtBQUtnK0YsUUFBUS9oRyxPQUFPLEdBQUcrRCxLQUFLeTZGLGFBQWFob0UsT0FBT3p5QixLQUFLaTdGLGNBQWNqN0YsS0FBS2crRixRQUFRL2hHLE9BQU8sRUFBRStELEtBQUtnK0YsUUFBUWgrRixLQUFLZytGLFFBQVEvaEcsT0FBTyxHQUFHLE1BQU0rQixFQUFFN0QsVUFBVSs3RixtQkFBbUIsV0FBVyxPQUFPbDJGLEtBQUt5NkYsYUFBYVMsWUFBWWw5RixFQUFFN0QsVUFBVWdpRyxxQkFBcUIsV0FBVyxPQUFPbjhGLEtBQUtrN0YsWUFBWWw3RixLQUFLeTZGLGFBQWFTLFlBQVlsN0YsS0FBS2k3RixjQUFjQyxZQUFZbDlGLEVBQUU3RCxVQUFVNGtHLHdCQUF3QixTQUFTNThCLEVBQUU1aUUsR0FBRyxJQUFJLElBQUk3RSxFQUFFc0YsS0FBS2crRixRQUFRL2hHLE9BQU8sRUFBRXZCLEdBQUcsR0FBRyxDQUFDLElBQUkyZ0UsRUFBRXI3RCxLQUFLZytGLFFBQVF0akcsR0FBRyxHQUFHMmdFLEVBQUU2L0IsV0FBVyxNQUFNLEdBQUcsSUFBSTcvQixFQUFFOStELEtBQUssR0FBR0UsUUFBUTBsRSxJQUFJOUcsRUFBRTkrRCxNQUFNLEtBQUtnRCxFQUFFLENBQUNTLEtBQUtnK0YsUUFBUXRoRyxPQUFPaEMsRUFBRSxFQUFFLEVBQUUsSUFBSXNCLEVBQUVnRSxPQUFPQSxLQUFLaTdGLGNBQWNqN0YsS0FBS2crRixRQUFRaCtGLEtBQUtnK0YsUUFBUS9oRyxPQUFPLEdBQUcsTUFBTXZCLE1BQU15bkUsRUFBRXhtQixRQUFRbTVDLE9BQU85MkYsR0FBRyxTQUFTbWtFLEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYXluRSxFQUFFeG1CLFFBQVF5cUIsTUFBTSxTQUFTakUsRUFBRTVpRSxFQUFFN0UsRUFBRXNCLEdBQUdnRSxLQUFLcUwsS0FBSzgyRCxFQUFFbmlFLEtBQUsrRixLQUFLeEcsRUFBRVMsS0FBSzg1RixnQkFBZ0IsS0FBSzk1RixLQUFLNDVGLFNBQVNsL0YsR0FBRyxFQUFFc0YsS0FBSzI2RixrQkFBa0IzK0YsR0FBRyxHQUFHZ0UsS0FBS3lHLE9BQU8sS0FBS3pHLEtBQUt1VSxLQUFLLEtBQUt2VSxLQUFLZzdGLFNBQVMsS0FBS2g3RixLQUFLZzhGLE9BQU8sS0FBS2g4RixLQUFLZy9GLE9BQU8sS0FBS2gvRixLQUFLbU0sV0FBVyxPQUFPLENBQUMsQ0FBQyxTQUFTZzJELEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYSxTQUFTc0IsRUFBRW1tRSxFQUFFNWlFLEdBQUdTLEtBQUtvL0YsWUFBWS9qQyxFQUFFOEcsRUFBRTVpRSxHQUFHUyxLQUFLeTNGLFNBQVN6M0YsS0FBS3UvRixhQUFhLFlBQVl2L0YsS0FBSzAzRixJQUFJMTNGLEtBQUsyL0YsZ0JBQWdCLE1BQU0sUUFBUTMvRixLQUFLODlGLGlCQUFpQjk5RixLQUFLdS9GLGFBQWEsb0JBQW9Cdi9GLEtBQUtxOUYsWUFBWXI5RixLQUFLNC9GLFlBQVksY0FBYyxHQUFHNS9GLEtBQUt1OUYsWUFBWXY5RixLQUFLMi9GLGdCQUFnQixjQUFjLEtBQUszL0YsS0FBS3k5RixhQUFhejlGLEtBQUs0L0YsWUFBWSxnQkFBZ0I1L0YsS0FBS2k2RixrQkFBa0JqNkYsS0FBS3UvRixhQUFhLHFCQUFvQixHQUFJdi9GLEtBQUtnNkYsc0JBQXNCaDZGLEtBQUs0L0YsWUFBWSx3QkFBd0IsT0FBTzUvRixLQUFLaTZGLG9CQUFvQmo2RixLQUFLZzZGLHNCQUFzQixHQUFHaDZGLEtBQUt3OUYsaUJBQWlCeDlGLEtBQUt1L0YsYUFBYSxtQkFBbUIsT0FBT3YvRixLQUFLdTlGLGFBQWF2OUYsS0FBS3c5RixtQkFBbUJ4OUYsS0FBS3U5RixZQUFZLEtBQUssSUFBSXY5RixLQUFLcTlGLGNBQWNyOUYsS0FBS3E5RixZQUFZLElBQUlyOUYsS0FBS282RixpQkFBaUJwNkYsS0FBSzQvRixZQUFZLG1CQUFtQjUvRixLQUFLNC9GLFlBQVksYUFBYTUvRixLQUFLKzlGLG1CQUFtQi85RixLQUFLdS9GLGFBQWEsc0JBQXNCdi9GLEtBQUs2L0YsV0FBVzcvRixLQUFLcy9GLG9CQUFvQixhQUFhLENBQUMsT0FBTyxPQUFPLFNBQVMsTUFBTSxhQUFhLE9BQU8sQ0FBQyxTQUFTLFNBQVNqa0MsRUFBRThHLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXNCLEVBQUUsR0FBRyxJQUFJdEIsS0FBS3luRSxFQUFFbmtFLEVBQUVta0UsR0FBR3puRSxJQUFJNkUsSUFBSXZELEVBQUV0QixHQUFHeW5FLEVBQUV6bkUsSUFBSSxHQUFHNkUsR0FBRzRpRSxFQUFFNWlFLEdBQUcsSUFBSTdFLEtBQUt5bkUsRUFBRTVpRSxHQUFHdkQsRUFBRXRCLEdBQUd5bkUsRUFBRTVpRSxHQUFHN0UsR0FBRyxPQUFPc0IsRUFBRSxTQUFTZ0MsRUFBRW1rRSxHQUFHLElBQUk1aUUsRUFBRTdFLEVBQUUsR0FBRyxJQUFJNkUsS0FBSzRpRSxFQUFFem5FLEVBQUU2RSxFQUFFcEMsUUFBUSxLQUFLLE1BQU1nbEUsRUFBRTVpRSxHQUFHLE9BQU83RSxFQUFFc0IsRUFBRTdCLFVBQVUybEcsV0FBVyxTQUFTMzlCLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXNGLEtBQUtvL0YsWUFBWWo5QixHQUFHbm1FLEVBQUV1RCxHQUFHLEdBQUcsTUFBTSxpQkFBaUI3RSxFQUFFLE9BQU9BLEdBQUcsbUJBQW1CQSxFQUFFc1EsU0FBU2hQLEVBQUV0QixFQUFFc1EsVUFBVSxpQkFBaUJ0USxJQUFJc0IsRUFBRXRCLEVBQUVxQixNQUFNLHVCQUF1QkMsR0FBR0EsRUFBRTdCLFVBQVVvbEcsYUFBYSxTQUFTcDlCLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXNGLEtBQUtvL0YsWUFBWWo5QixHQUFHLFlBQU8sSUFBU3puRSxJQUFJNkUsSUFBSTdFLEdBQUdzQixFQUFFN0IsVUFBVXdsRyxnQkFBZ0IsU0FBU3g5QixFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUVzRixLQUFLby9GLFlBQVlqOUIsR0FBR25tRSxFQUFFdUQsR0FBRyxHQUFHLE1BQU0saUJBQWlCN0UsSUFBSXNCLEVBQUV0QixFQUFFeUMsUUFBUSxNQUFNLE1BQU1BLFFBQVEsTUFBTSxNQUFNQSxRQUFRLE1BQU0sT0FBT25CLEdBQUdBLEVBQUU3QixVQUFVeWxHLFlBQVksU0FBU3o5QixFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUVzRixLQUFLby9GLFlBQVlqOUIsR0FBRzVpRSxFQUFFMnFCLFNBQVMzcUIsRUFBRSxJQUFJL0QsTUFBTStELEtBQUtBLEVBQUUsR0FBRyxJQUFJdkQsRUFBRWt1QixTQUFTeHZCLEVBQUUsSUFBSSxPQUFPYyxNQUFNUSxLQUFLQSxFQUFFdUQsR0FBR3ZELEdBQUdBLEVBQUU3QixVQUFVdWxHLGVBQWUsU0FBU3Y5QixFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFZ0UsS0FBS3MvRixvQkFBb0JuOUIsRUFBRTVpRSxFQUFFN0UsR0FBRyxHQUFHLElBQUlzQixFQUFFQyxPQUFPLE1BQU0sSUFBSXcwRCxNQUFNLHFDQUFxQzBSLEVBQUUsK0NBQStDNWlFLEVBQUUscUJBQXFCUyxLQUFLby9GLFlBQVlqOUIsR0FBRyxLQUFLLE9BQU9ubUUsRUFBRSxJQUFJQSxFQUFFN0IsVUFBVW1sRyxvQkFBb0IsU0FBU245QixFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUk2RSxHQUFHLElBQUlBLEVBQUV0RCxPQUFPLE1BQU0sSUFBSXcwRCxNQUFNLG1DQUFtQyxHQUFHLzFELEVBQUVBLEdBQUcsQ0FBQzZFLEVBQUUsS0FBS1MsS0FBSysvRixvQkFBb0JybEcsRUFBRTZFLEdBQUcsTUFBTSxJQUFJa3hELE1BQU0sMEJBQTBCLElBQUl6MEQsRUFBRWdFLEtBQUs4L0YsV0FBVzM5QixFQUFFem5FLEdBQUcsSUFBSXNGLEtBQUsrL0Ysb0JBQW9CL2pHLEVBQUV1RCxHQUFHLE1BQU0sSUFBSWt4RCxNQUFNLHFDQUFxQzBSLEVBQUUsNkNBQTZDNWlFLEVBQUUscUJBQXFCUyxLQUFLby9GLFlBQVlqOUIsR0FBRyxLQUFLLE9BQU9ubUUsR0FBR0EsRUFBRTdCLFVBQVU0bEcsb0JBQW9CLFNBQVM1OUIsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRWxtRSxRQUFRc0QsRUFBRXRELFNBQVNrbUUsRUFBRXorQixNQUFLLFNBQVV5K0IsR0FBRyxPQUFPLElBQUk1aUUsRUFBRTlDLFFBQVEwbEUsT0FBT0EsRUFBRXhtQixRQUFRZzVDLFFBQVEzNEYsRUFBRW1tRSxFQUFFeG1CLFFBQVFxa0QsY0FBY2hpRyxFQUFFbWtFLEVBQUV4bUIsUUFBUXNrRCxVQUFVNWtDLEdBQUcsQ0FBQyxTQUFTOEcsRUFBRTVpRSxFQUFFN0UsR0FBRyxhQUFhLElBQUlzQixFQUFFOEYsT0FBTzNILFVBQVV3QyxlQUFlLFVBQVUsU0FBUzArRCxFQUFFOEcsR0FBR25pRSxLQUFLaWpHLFFBQVE5Z0MsR0FBRyxHQUFHbmlFLEtBQUtrakcsZUFBZWxqRyxLQUFLaWpHLFFBQVFobkcsT0FBTytELEtBQUttakcsV0FBVyxFQUFFOW5DLEVBQUVsaEUsVUFBVWlwRyxRQUFRLFdBQVdwakcsS0FBS21qRyxXQUFXLEdBQUc5bkMsRUFBRWxoRSxVQUFVaTdELEtBQUssV0FBV3AxRCxLQUFLbWpHLFdBQVcsSUFBSW5qRyxLQUFLbWpHLFlBQVksSUFBSTluQyxFQUFFbGhFLFVBQVVzb0csUUFBUSxXQUFXLE9BQU96aUcsS0FBS21qRyxXQUFXbmpHLEtBQUtrakcsZ0JBQWdCN25DLEVBQUVsaEUsVUFBVW9hLEtBQUssV0FBVyxJQUFJNHRELEVBQUUsS0FBSyxPQUFPbmlFLEtBQUt5aUcsWUFBWXRnQyxFQUFFbmlFLEtBQUtpakcsUUFBUXpsRyxPQUFPd0MsS0FBS21qRyxZQUFZbmpHLEtBQUttakcsWUFBWSxHQUFHaGhDLEdBQUc5RyxFQUFFbGhFLFVBQVVzd0YsS0FBSyxTQUFTdG9CLEdBQUcsSUFBSTVpRSxFQUFFLEtBQUssT0FBTzRpRSxFQUFFQSxHQUFHLEdBQUdBLEdBQUduaUUsS0FBS21qRyxhQUFhLEdBQUdoaEMsRUFBRW5pRSxLQUFLa2pHLGlCQUFpQjNqRyxFQUFFUyxLQUFLaWpHLFFBQVF6bEcsT0FBTzJrRSxJQUFJNWlFLEdBQUc4N0QsRUFBRWxoRSxVQUFVa3BHLFFBQVEsU0FBU2xoQyxFQUFFNWlFLEdBQUc0aUUsRUFBRTV2RCxVQUFVaFQsRUFBRSxJQUFJN0UsRUFBRXluRSxFQUFFN3hCLEtBQUt0d0MsS0FBS2lqRyxTQUFTLE9BQU92b0csR0FBR3NCLEdBQUdtbUUsRUFBRW1oQyxRQUFRNW9HLEVBQUU4QixRQUFRK0MsSUFBSTdFLEVBQUUsTUFBTUEsR0FBRzJnRSxFQUFFbGhFLFVBQVV3SSxLQUFLLFNBQVN3L0QsRUFBRTVpRSxHQUFHLE9BQU9BLEVBQUVBLEdBQUcsR0FBR0EsR0FBR1MsS0FBS21qRyxhQUFhLEdBQUc1akcsRUFBRVMsS0FBS2tqRyxrQkFBa0JsakcsS0FBS3FqRyxRQUFRbGhDLEVBQUU1aUUsSUFBSTg3RCxFQUFFbGhFLFVBQVV1b0csU0FBUyxTQUFTdmdDLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXNGLEtBQUt5cUYsS0FBS2xyRixHQUFHLE9BQU80aUUsRUFBRTV2RCxVQUFVLEVBQUUsT0FBTzdYLEdBQUd5bkUsRUFBRXgvRCxLQUFLakksSUFBSTJnRSxFQUFFbGhFLFVBQVU2SSxNQUFNLFNBQVNtL0QsR0FBRyxJQUFJNWlFLEVBQUVTLEtBQUtxakcsUUFBUWxoQyxFQUFFbmlFLEtBQUttakcsWUFBWSxPQUFPNWpHLEVBQUVTLEtBQUttakcsWUFBWTVqRyxFQUFFLEdBQUd0RCxPQUFPc0QsRUFBRSxLQUFLQSxHQUFHODdELEVBQUVsaEUsVUFBVW9vRyxLQUFLLFNBQVNwZ0MsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXEvRCxFQUFFLEdBQUcsT0FBTzhHLElBQUlubUUsRUFBRWdFLEtBQUtnRCxNQUFNbS9ELE1BQU05RyxHQUFHci9ELEVBQUUsS0FBS3VELElBQUl2RCxHQUFHbW1FLElBQUk5RyxHQUFHcjdELEtBQUt1akcsVUFBVWhrRyxFQUFFN0UsSUFBSTJnRSxHQUFHQSxFQUFFbGhFLFVBQVVvcEcsVUFBVSxTQUFTcGhDLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXNCLEVBQUVnRSxLQUFLbWpHLFdBQVdoaEMsRUFBRTV2RCxVQUFVdlMsS0FBS21qRyxXQUFXLElBQUk5bkMsRUFBRThHLEVBQUU3eEIsS0FBS3R3QyxLQUFLaWpHLFNBQVMsT0FBTzVuQyxHQUFHci9ELEVBQUVxL0QsRUFBRTcrRCxNQUFNK0MsSUFBSXZELEdBQUdxL0QsRUFBRSxHQUFHcC9ELFNBQVNELEVBQUVnRSxLQUFLa2pHLGVBQWV4b0csRUFBRXNGLEtBQUtpakcsUUFBUTMwRCxVQUFVdHVDLEtBQUttakcsV0FBV25uRyxHQUFHZ0UsS0FBS21qRyxXQUFXbm5HLEVBQUV0QixHQUFHMmdFLEVBQUVsaEUsVUFBVXFwRyxlQUFlLFNBQVNyaEMsR0FBRyxPQUFPbmlFLEtBQUt1akcsVUFBVXBoQyxHQUFFLElBQUs5RyxFQUFFbGhFLFVBQVVzcEcsV0FBVyxTQUFTdGhDLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRSxLQUFLMmdFLEVBQUUsSUFBSSxPQUFPOTdELEdBQUd2RCxJQUFJcS9ELEVBQUUsS0FBSyxpQkFBaUI4RyxHQUFHLEtBQUtBLEVBQUV6bkUsRUFBRSxJQUFJb0gsT0FBT3FnRSxFQUFFOUcsR0FBRzhHLElBQUl6bkUsRUFBRSxJQUFJb0gsT0FBT3FnRSxFQUFFcnZELE9BQU91b0QsSUFBSTNnRSxHQUFHMmdFLEVBQUVsaEUsVUFBVXVwRyxtQkFBbUIsU0FBU3ZoQyxHQUFHLE9BQU9yZ0UsT0FBT3FnRSxFQUFFaGxFLFFBQVEseUJBQXlCLFVBQVVrK0QsRUFBRWxoRSxVQUFVd3BHLGVBQWUsU0FBU3hoQyxHQUFHLElBQUk1aUUsRUFBRVMsS0FBS21qRyxXQUFXem9HLEVBQUVzRixLQUFLd2pHLGVBQWVyaEMsR0FBRyxPQUFPbmlFLEtBQUttakcsV0FBVzVqRyxFQUFFN0UsR0FBRzJnRSxFQUFFbGhFLFVBQVV5cEcsU0FBUyxTQUFTemhDLEdBQUcsSUFBSTVpRSxFQUFFUyxLQUFLbWpHLFdBQVcsRUFBRSxPQUFPNWpHLEdBQUc0aUUsRUFBRWxtRSxRQUFRK0QsS0FBS2lqRyxRQUFRMzBELFVBQVUvdUMsRUFBRTRpRSxFQUFFbG1FLE9BQU9zRCxHQUFHckQsZ0JBQWdCaW1FLEdBQUdBLEVBQUV4bUIsUUFBUXVrRCxhQUFhN2tDLEdBQUcsU0FBUzhHLEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYSxJQUFJc0IsRUFBRXRCLEVBQUUsR0FBR3dsRyxhQUFhN2tDLEVBQUUzZ0UsRUFBRSxHQUFHMHJFLE1BQU1wb0UsRUFBRXRELEVBQUUsSUFBSW1wRyxZQUFZbGdFLEVBQUVqcEMsRUFBRSxJQUFJb3BHLGtCQUFrQjVuRSxFQUFFLENBQUN5cEIsTUFBTSxXQUFXMjZDLElBQUksU0FBUy9HLElBQUksVUFBVS94QixFQUFFLFNBQVNyRixFQUFFNWlFLEdBQUdTLEtBQUt5Z0csT0FBTyxJQUFJemtHLEVBQUVtbUUsR0FBR25pRSxLQUFLd2dELFNBQVNqaEQsR0FBRyxHQUFHUyxLQUFLK2pHLFNBQVMsS0FBSy9qRyxLQUFLdWdHLFVBQVUsR0FBR3ZnRyxLQUFLdWdHLFVBQVVoMEQsV0FBVyxJQUFJNUksRUFBRTNqQyxLQUFLeWdHLFNBQVNqNUIsRUFBRXJ0RSxVQUFVcTlGLFNBQVMsV0FBVyxJQUFJcjFCLEVBQUVuaUUsS0FBS3lnRyxPQUFPMkMsVUFBVXBqRyxLQUFLK2pHLFNBQVMsSUFBSS9sRyxFQUFFZ0MsS0FBS3EzRixTQUFTLElBQUksSUFBSTkzRixFQUFFLElBQUk4N0QsRUFBRW4vQixFQUFFeXBCLE1BQU0sSUFBSWpyRCxFQUFFLEtBQUtzQixFQUFFLEdBQUcybkMsRUFBRSxJQUFJM2xDLEVBQUV1QixFQUFFOEwsT0FBTzZ3QixFQUFFcTlELEtBQUssQ0FBQyxJQUFJcDNCLEVBQUVuaUUsS0FBSzRoRyxnQkFBZ0JyaUcsRUFBRTdFLEdBQUdzRixLQUFLeWhHLFlBQVl0L0IsSUFBSXgrQixFQUFFcC9CLElBQUk0OUQsR0FBR0EsRUFBRW5pRSxLQUFLNGhHLGdCQUFnQnJpRyxFQUFFN0UsR0FBR2lwQyxFQUFFeStDLFlBQVlqZ0IsRUFBRTIzQixnQkFBZ0JuMkQsRUFBRUEsRUFBRSxJQUFJM2xDLEdBQUdta0UsRUFBRTE3RCxPQUFPL0wsRUFBRXNGLEtBQUswaEcsWUFBWXYvQixJQUFJbm1FLEVBQUVnSixLQUFLdEssR0FBR0EsRUFBRXluRSxHQUFHem5FLEdBQUdzRixLQUFLMmhHLFlBQVl4L0IsRUFBRXpuRSxLQUFLeW5FLEVBQUU2NUIsT0FBT3RoRyxFQUFFQSxFQUFFc2tHLE9BQU83OEIsRUFBRXpuRSxFQUFFc0IsRUFBRTBKLE1BQU15OEQsRUFBRTE3RCxPQUFPL0wsR0FBR3luRSxFQUFFNjRCLFNBQVN6N0YsRUFBRUEsRUFBRWdWLEtBQUs0dEQsRUFBRW5pRSxLQUFLK2pHLFNBQVN4L0YsSUFBSTQ5RCxHQUFHNWlFLEVBQUU0aUUsRUFBRSxPQUFPbmlFLEtBQUsrakcsVUFBVXY4QixFQUFFcnRFLFVBQVVxb0csZ0JBQWdCLFdBQVcsT0FBT3hpRyxLQUFLK2pHLFNBQVMzaEIsV0FBVzVhLEVBQUVydEUsVUFBVWs5RixPQUFPLGFBQWE3dkIsRUFBRXJ0RSxVQUFVeW5HLGdCQUFnQixTQUFTei9CLEVBQUU1aUUsR0FBR1MsS0FBSzZoRyxrQkFBa0IsSUFBSW5uRyxFQUFFc0YsS0FBS3lnRyxPQUFPOEIsS0FBSyxPQUFPLE9BQU83bkcsRUFBRXNGLEtBQUs4aEcsY0FBYzVsRSxFQUFFb2tFLElBQUk1bEcsR0FBR3NGLEtBQUs4aEcsY0FBYzVsRSxFQUFFcTlELElBQUksS0FBSy94QixFQUFFcnRFLFVBQVVzbkcsWUFBWSxTQUFTdC9CLEdBQUcsT0FBTSxHQUFJcUYsRUFBRXJ0RSxVQUFVdW5HLFlBQVksU0FBU3YvQixHQUFHLE9BQU0sR0FBSXFGLEVBQUVydEUsVUFBVXduRyxZQUFZLFNBQVN4L0IsRUFBRTVpRSxHQUFHLE9BQU0sR0FBSWlvRSxFQUFFcnRFLFVBQVUybkcsY0FBYyxTQUFTMy9CLEVBQUU1aUUsR0FBRyxPQUFPLElBQUk4N0QsRUFBRThHLEVBQUU1aUUsRUFBRVMsS0FBS3VnRyxVQUFVaDBELFdBQVd5M0QsY0FBY2hrRyxLQUFLdWdHLFVBQVVoMEQsV0FBVzAzRCwwQkFBMEJ6OEIsRUFBRXJ0RSxVQUFVMG5HLGdCQUFnQixXQUFXLE9BQU83aEcsS0FBS3VnRyxVQUFVaDBELFdBQVdnMkQsUUFBUXBnQyxFQUFFeG1CLFFBQVFvNUMsVUFBVXZ0QixFQUFFckYsRUFBRXhtQixRQUFRdTVDLE1BQU1oNUQsR0FBRyxTQUFTaW1DLEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYSxTQUFTc0IsRUFBRW1tRSxHQUFHbmlFLEtBQUsrakcsU0FBUyxHQUFHL2pHLEtBQUtra0csZ0JBQWdCbGtHLEtBQUsrakcsU0FBUzluRyxPQUFPK0QsS0FBS21qRyxXQUFXLEVBQUVuakcsS0FBS21rRyxlQUFlaGlDLEVBQUVubUUsRUFBRTdCLFVBQVVpcEcsUUFBUSxXQUFXcGpHLEtBQUttakcsV0FBVyxHQUFHbm5HLEVBQUU3QixVQUFVaW9GLFFBQVEsV0FBVyxPQUFPLElBQUlwaUYsS0FBS2trRyxpQkFBaUJsb0csRUFBRTdCLFVBQVVzb0csUUFBUSxXQUFXLE9BQU96aUcsS0FBS21qRyxXQUFXbmpHLEtBQUtra0csaUJBQWlCbG9HLEVBQUU3QixVQUFVb2EsS0FBSyxXQUFXLElBQUk0dEQsRUFBRSxLQUFLLE9BQU9uaUUsS0FBS3lpRyxZQUFZdGdDLEVBQUVuaUUsS0FBSytqRyxTQUFTL2pHLEtBQUttakcsWUFBWW5qRyxLQUFLbWpHLFlBQVksR0FBR2hoQyxHQUFHbm1FLEVBQUU3QixVQUFVc3dGLEtBQUssU0FBU3RvQixHQUFHLElBQUk1aUUsRUFBRSxLQUFLLE9BQU80aUUsRUFBRUEsR0FBRyxHQUFHQSxHQUFHbmlFLEtBQUttakcsYUFBYSxHQUFHaGhDLEVBQUVuaUUsS0FBS2trRyxrQkFBa0Iza0csRUFBRVMsS0FBSytqRyxTQUFTNWhDLElBQUk1aUUsR0FBR3ZELEVBQUU3QixVQUFVb0ssSUFBSSxTQUFTNDlELEdBQUduaUUsS0FBS21rRyxpQkFBaUJoaUMsRUFBRTE3RCxPQUFPekcsS0FBS21rRyxnQkFBZ0Jua0csS0FBSytqRyxTQUFTLytGLEtBQUttOUQsR0FBR25pRSxLQUFLa2tHLGlCQUFpQixHQUFHL2hDLEVBQUV4bUIsUUFBUWtvRCxZQUFZN25HLEdBQUcsU0FBU21tRSxFQUFFNWlFLEVBQUU3RSxHQUFHLGFBQWEsSUFBSXNCLEVBQUV0QixFQUFFLElBQUkwbEcsUUFBUSxTQUFTL2tDLEVBQUU4RyxFQUFFNWlFLEdBQUd2RCxFQUFFMUIsS0FBSzBGLEtBQUttaUUsRUFBRTVpRSxHQUFHQSxFQUFFUyxLQUFLb2tHLGFBQWFwa0csS0FBS3lnRyxPQUFPZ0QsV0FBV2xrRyxFQUFFNmtHLGNBQWNwa0csS0FBS3FrRywwQkFBMEIsR0FBRyxJQUFJcmtHLEtBQUtna0csY0FBYyxFQUFFaGtHLEtBQUtpa0csd0JBQXdCLEdBQUc1b0MsRUFBRWxoRSxVQUFVLElBQUk2QixFQUFFcS9ELEVBQUVsaEUsVUFBVWtxRywwQkFBMEIsU0FBU2xpQyxFQUFFNWlFLEdBQUc0aUUsR0FBRyxPQUFPNWlFLEdBQUcsU0FBU1MsS0FBS3NrRyxlQUFldGtHLEtBQUt5Z0csT0FBT2dELFdBQVcsSUFBSXRoQyxFQUFFNWlFLEVBQUUsTUFBSyxHQUFJUyxLQUFLdWtHLGdCQUFnQnZrRyxLQUFLeWdHLE9BQU9nRCxXQUFXLFdBQVdsa0csRUFBRSxNQUFNODdELEVBQUVsaEUsVUFBVW9vRyxLQUFLLFdBQVd2aUcsS0FBS2drRyxjQUFjLEVBQUVoa0csS0FBS2lrRyx3QkFBd0IsR0FBRyxJQUFJOWhDLEVBQUVuaUUsS0FBS3lnRyxPQUFPOEIsS0FBS3ZpRyxLQUFLc2tHLGdCQUFnQixHQUFHLE1BQU1uaUMsRUFBRW5pRSxLQUFLaWtHLHdCQUF3QixTQUFTLEdBQUc5aEMsRUFBRSxDQUFDLElBQUk1aUUsRUFBRVMsS0FBS3drRyxRQUFReGtHLEtBQUt1a0csZ0JBQWdCcGlDLEdBQUduaUUsS0FBS2drRyxjQUFjemtHLEVBQUV0RCxPQUFPLEVBQUUrRCxLQUFLaWtHLHdCQUF3QjFrRyxFQUFFUyxLQUFLZ2tHLGVBQWUsT0FBTzdoQyxHQUFHOUcsRUFBRWxoRSxVQUFVcW1HLFNBQVMsU0FBU3IrQixFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUVzRixLQUFLeWtHLFVBQVUsT0FBTy9wRyxFQUFFMnBHLDBCQUEwQmxpQyxFQUFFNWlFLEdBQUc3RSxFQUFFbXVCLFVBQVVudUIsR0FBRzJnRSxFQUFFbGhFLFVBQVVzcUcsUUFBUSxXQUFXLE9BQU8sSUFBSXBwQyxFQUFFcjdELEtBQUt5Z0csT0FBT3pnRyxPQUFPcTdELEVBQUVsaEUsVUFBVXFxRyxRQUFRLFNBQVNyaUMsRUFBRTVpRSxHQUFHNGlFLEVBQUU1dkQsVUFBVSxFQUFFLElBQUksSUFBSTdYLEVBQUUsRUFBRXNCLEVBQUUsR0FBR3EvRCxFQUFFOEcsRUFBRTd4QixLQUFLL3dDLEdBQUc4N0QsR0FBR3IvRCxFQUFFZ0osS0FBS3pGLEVBQUUrdUMsVUFBVTV6QyxFQUFFMmdFLEVBQUU3K0QsUUFBUTlCLEVBQUUyZ0UsRUFBRTcrRCxNQUFNNitELEVBQUUsR0FBR3AvRCxPQUFPby9ELEVBQUU4RyxFQUFFN3hCLEtBQUsvd0MsR0FBRyxPQUFPN0UsRUFBRTZFLEVBQUV0RCxPQUFPRCxFQUFFZ0osS0FBS3pGLEVBQUUrdUMsVUFBVTV6QyxFQUFFNkUsRUFBRXRELFNBQVNELEVBQUVnSixLQUFLLElBQUloSixHQUFHbW1FLEVBQUV4bUIsUUFBUW1vRCxrQkFBa0J6b0MsR0FBRyxTQUFTOEcsRUFBRTVpRSxFQUFFN0UsR0FBRyxhQUFhLFNBQVNzQixFQUFFbW1FLEVBQUU1aUUsR0FBR1MsS0FBS3lnRyxPQUFPdCtCLEVBQUVuaUUsS0FBSzBrRyxrQkFBa0IsS0FBSzFrRyxLQUFLc2tHLGVBQWUsS0FBS3RrRyxLQUFLMmtHLGVBQWUsS0FBSzNrRyxLQUFLNGtHLGNBQWEsRUFBR3JsRyxJQUFJUyxLQUFLMGtHLGtCQUFrQjFrRyxLQUFLeWdHLE9BQU9nRCxXQUFXbGtHLEVBQUVtbEcsbUJBQWtCLEdBQUkxa0csS0FBS3NrRyxlQUFldGtHLEtBQUt5Z0csT0FBT2dELFdBQVdsa0csRUFBRStrRyxnQkFBZSxHQUFJdGtHLEtBQUsya0csZUFBZTNrRyxLQUFLeWdHLE9BQU9nRCxXQUFXbGtHLEVBQUVvbEcsZ0JBQWdCM2tHLEtBQUs0a0csYUFBYXJsRyxFQUFFcWxHLGNBQWM1b0csRUFBRTdCLFVBQVVvb0csS0FBSyxXQUFXLElBQUlwZ0MsRUFBRW5pRSxLQUFLeWdHLE9BQU84QixLQUFLdmlHLEtBQUswa0csbUJBQW1CLE9BQU8xa0csS0FBSzBrRyxvQkFBb0J2aUMsSUFBSUEsR0FBR25pRSxLQUFLeWdHLE9BQU84QixLQUFLdmlHLEtBQUtza0csZUFBZXRrRyxLQUFLMmtHLGVBQWUza0csS0FBSzRrRyxlQUFlemlDLEdBQUdubUUsRUFBRTdCLFVBQVU2b0csV0FBVyxXQUFXLE9BQU9oakcsS0FBS3lnRyxPQUFPejlGLE1BQU1oRCxLQUFLc2tHLGlCQUFpQnRvRyxFQUFFN0IsVUFBVTZtRyxZQUFZLFNBQVM3K0IsR0FBRyxJQUFJNWlFLEVBQUVTLEtBQUt5a0csVUFBVSxPQUFPbGxHLEVBQUVxbEcsY0FBYSxFQUFHcmxHLEVBQUVvbEcsZUFBZTNrRyxLQUFLeWdHLE9BQU9nRCxXQUFXdGhDLEdBQUc1aUUsRUFBRXNwQixVQUFVdHBCLEdBQUd2RCxFQUFFN0IsVUFBVTJtRyxNQUFNLFNBQVMzK0IsR0FBRyxJQUFJNWlFLEVBQUVTLEtBQUt5a0csVUFBVSxPQUFPbGxHLEVBQUVxbEcsY0FBYSxFQUFHcmxHLEVBQUVvbEcsZUFBZTNrRyxLQUFLeWdHLE9BQU9nRCxXQUFXdGhDLEdBQUc1aUUsRUFBRXNwQixVQUFVdHBCLEdBQUd2RCxFQUFFN0IsVUFBVXltRyxjQUFjLFNBQVN6K0IsR0FBRyxJQUFJNWlFLEVBQUVTLEtBQUt5a0csVUFBVSxPQUFPbGxHLEVBQUVtbEcsa0JBQWtCMWtHLEtBQUt5Z0csT0FBT2dELFdBQVd0aEMsR0FBRSxHQUFJNWlFLEVBQUVzcEIsVUFBVXRwQixHQUFHdkQsRUFBRTdCLFVBQVVxbUcsU0FBUyxTQUFTcitCLEdBQUcsSUFBSTVpRSxFQUFFUyxLQUFLeWtHLFVBQVUsT0FBT2xsRyxFQUFFK2tHLGVBQWV0a0csS0FBS3lnRyxPQUFPZ0QsV0FBV3RoQyxHQUFFLEdBQUk1aUUsRUFBRXNwQixVQUFVdHBCLEdBQUd2RCxFQUFFN0IsVUFBVXNxRyxRQUFRLFdBQVcsT0FBTyxJQUFJem9HLEVBQUVnRSxLQUFLeWdHLE9BQU96Z0csT0FBT2hFLEVBQUU3QixVQUFVMHVCLFFBQVEsYUFBYXM1QyxFQUFFeG1CLFFBQVF5a0QsUUFBUXBrRyxHQUFHLFNBQVNtbUUsRUFBRTVpRSxFQUFFN0UsR0FBRyxhQUFhLFNBQVNzQixFQUFFbW1FLEVBQUU1aUUsR0FBRzRpRSxFQUFFLGlCQUFpQkEsRUFBRUEsRUFBRUEsRUFBRXJ2RCxPQUFPdlQsRUFBRSxpQkFBaUJBLEVBQUVBLEVBQUVBLEVBQUV1VCxPQUFPOVMsS0FBSzZrRywyQkFBMkIsSUFBSS9pRyxPQUFPcWdFLEVBQUUsMEJBQTBCcnZELE9BQU92VCxFQUFFLEtBQUtTLEtBQUs4a0csb0JBQW9CLGtCQUFrQjlrRyxLQUFLK2tHLGdDQUFnQyxJQUFJampHLE9BQU9xZ0UsRUFBRSwyQkFBMkJydkQsT0FBT3ZULEVBQUUsS0FBS3ZELEVBQUU3QixVQUFVd29HLGVBQWUsU0FBU3hnQyxHQUFHLElBQUlBLEVBQUVuL0QsTUFBTWhELEtBQUs2a0csNEJBQTRCLE9BQU8sS0FBSyxJQUFJdGxHLEVBQUUsR0FBR1MsS0FBSzhrRyxvQkFBb0J2eUYsVUFBVSxFQUFFLElBQUksSUFBSTdYLEVBQUVzRixLQUFLOGtHLG9CQUFvQngwRCxLQUFLNnhCLEdBQUd6bkUsR0FBRzZFLEVBQUU3RSxFQUFFLElBQUlBLEVBQUUsR0FBR0EsRUFBRXNGLEtBQUs4a0csb0JBQW9CeDBELEtBQUs2eEIsR0FBRyxPQUFPNWlFLEdBQUd2RCxFQUFFN0IsVUFBVXlvRyxZQUFZLFNBQVN6Z0MsR0FBRyxPQUFPQSxFQUFFcWhDLGVBQWV4akcsS0FBSytrRyxrQ0FBa0M1aUMsRUFBRXhtQixRQUFRd2tELFdBQVdua0csR0FBRyxTQUFTbW1FLEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYSxJQUFJc0IsRUFBRXRCLEVBQUUsSUFBSTBsRyxRQUFRL2tDLEVBQUUsQ0FBQzJwQyxRQUFPLEVBQUdDLEtBQUksRUFBR0MsWUFBVyxFQUFHQyxLQUFJLEdBQUksU0FBU25uRyxFQUFFbWtFLEVBQUU1aUUsR0FBR3ZELEVBQUUxQixLQUFLMEYsS0FBS21pRSxFQUFFNWlFLEdBQUdTLEtBQUtvbEcsbUJBQW1CLEtBQUtwbEcsS0FBS3FsRyxVQUFVN3JHLE9BQU84ckcsT0FBTyxHQUFHanFDLEdBQUdyN0QsS0FBS3VsRyxVQUFVL3JHLE9BQU84ckcsT0FBTyxHQUFHanFDLEdBQUc5N0QsSUFBSVMsS0FBS29sRyxtQkFBbUJwbEcsS0FBS3lnRyxPQUFPZ0QsV0FBV2xrRyxFQUFFNmxHLG9CQUFvQnBsRyxLQUFLdWxHLFVBQVUvckcsT0FBTzhyRyxPQUFPdGxHLEtBQUt1bEcsVUFBVWhtRyxFQUFFZ21HLFdBQVd2bEcsS0FBS3FsRyxVQUFVN3JHLE9BQU84ckcsT0FBT3RsRyxLQUFLcWxHLFVBQVU5bEcsRUFBRThsRyxZQUFZLElBQUkzcUcsRUFBRSxJQUFJc0IsRUFBRW1tRSxHQUFHbmlFLEtBQUsyZ0csV0FBVyxDQUFDNkUsbUJBQW1COXFHLEVBQUVrbUcsY0FBYyxTQUFTSSxZQUFZLFFBQVF5RSxxQkFBcUIvcUcsRUFBRWttRyxjQUFjLE9BQU9JLFlBQVksT0FBT2tFLFdBQVd4cUcsRUFBRWttRyxjQUFjLE1BQU1JLFlBQVksTUFBTW1FLElBQUl6cUcsRUFBRWttRyxjQUFjLGtCQUFrQkksWUFBWSxPQUFPaUUsSUFBSXZxRyxFQUFFa21HLGNBQWMsVUFBVUksWUFBWSxVQUFVZ0UsT0FBT3RxRyxFQUFFa21HLGNBQWMsTUFBTUksWUFBWSxNQUFNMEUsYUFBYWhyRyxFQUFFa21HLGNBQWMsTUFBTUksWUFBWSxNQUFNMkUsZUFBZWpyRyxFQUFFa21HLGNBQWMsTUFBTUksWUFBWSxPQUFPaGpHLEVBQUU3RCxVQUFVLElBQUk2QixFQUFFZ0MsRUFBRTdELFVBQVVzcUcsUUFBUSxXQUFXLE9BQU8sSUFBSXptRyxFQUFFZ0MsS0FBS3lnRyxPQUFPemdHLE9BQU9oQyxFQUFFN0QsVUFBVTB1QixRQUFRLFdBQVc3b0IsS0FBSzRsRywyQkFBMkI1bkcsRUFBRTdELFVBQVUwckcsUUFBUSxTQUFTMWpDLEdBQUcsSUFBSTVpRSxFQUFFUyxLQUFLeWtHLFVBQVUsT0FBT2xsRyxFQUFFOGxHLFVBQVVsakMsSUFBRyxFQUFHNWlFLEVBQUVzcEIsVUFBVXRwQixHQUFHdkIsRUFBRTdELFVBQVV1bUcsYUFBYSxTQUFTditCLEdBQUcsSUFBSTVpRSxFQUFFUyxLQUFLeWtHLFVBQVUsSUFBSSxJQUFJL3BHLEtBQUsyZ0UsRUFBRTk3RCxFQUFFOGxHLFVBQVUzcUcsSUFBSSxJQUFJeW5FLEVBQUUwOUIsV0FBV3BqRyxRQUFRL0IsR0FBRyxPQUFPNkUsRUFBRXNwQixVQUFVdHBCLEdBQUd2QixFQUFFN0QsVUFBVTB2QixRQUFRLFNBQVNzNEMsR0FBRyxJQUFJNWlFLEVBQUVTLEtBQUt5a0csVUFBVSxPQUFPbGxHLEVBQUVnbUcsVUFBVXBqQyxJQUFHLEVBQUc1aUUsRUFBRXNwQixVQUFVdHBCLEdBQUd2QixFQUFFN0QsVUFBVW9vRyxLQUFLLFdBQVcsSUFBSXBnQyxFQUFFLEdBQUdBLEVBQUVuaUUsS0FBS3NrRyxlQUFldGtHLEtBQUt5Z0csT0FBTzhCLEtBQUt2aUcsS0FBSzBrRyxtQkFBbUIxa0csS0FBS3lnRyxPQUFPOEIsS0FBS3ZpRyxLQUFLMGtHLGtCQUFrQjFrRyxLQUFLb2xHLG9CQUFvQixJQUFJLElBQUk3bEcsRUFBRVMsS0FBSzhsRyxpQkFBaUJ2bUcsR0FBR1MsS0FBS3NrRyxlQUFlL2tHLEdBQUdTLEtBQUt5Z0csT0FBTzhCLEtBQUt2aUcsS0FBS3NrRyxnQkFBZ0Iva0csR0FBR1MsS0FBS3lnRyxPQUFPOEMsVUFBVXZqRyxLQUFLb2xHLG9CQUFvQmpqQyxHQUFHNWlFLEVBQUVBLEVBQUVTLEtBQUs4bEcsaUJBQWlCLE9BQU85bEcsS0FBSzRrRyxlQUFlemlDLEdBQUduaUUsS0FBS3lnRyxPQUFPK0MsZUFBZXhqRyxLQUFLMmtHLGlCQUFpQnhpQyxHQUFHbmtFLEVBQUU3RCxVQUFVeXJHLHdCQUF3QixXQUFXLElBQUl6akMsRUFBRSxHQUFHbmlFLEtBQUtxbEcsVUFBVUYsS0FBS2hqQyxFQUFFbjlELEtBQUtoRixLQUFLMmdHLFdBQVd3RSxJQUFJVCxrQkFBa0I1eEYsUUFBUTlTLEtBQUtxbEcsVUFBVUgsWUFBWS9pQyxFQUFFbjlELEtBQUtoRixLQUFLMmdHLFdBQVd1RSxXQUFXUixrQkFBa0I1eEYsUUFBUTlTLEtBQUtxbEcsVUFBVUosS0FBSzlpQyxFQUFFbjlELEtBQUtoRixLQUFLMmdHLFdBQVdzRSxJQUFJUCxrQkFBa0I1eEYsUUFBUTlTLEtBQUtxbEcsVUFBVUwsU0FBUzdpQyxFQUFFbjlELEtBQUtoRixLQUFLMmdHLFdBQVdxRSxPQUFPTixrQkFBa0I1eEYsUUFBUXF2RCxFQUFFbjlELEtBQUtoRixLQUFLMmdHLFdBQVcrRSxhQUFhaEIsa0JBQWtCNXhGLFFBQVFxdkQsRUFBRW45RCxLQUFLaEYsS0FBSzJnRyxXQUFXZ0YsZUFBZWpCLGtCQUFrQjV4RixTQUFTOVMsS0FBSzJrRyxnQkFBZ0J4aUMsRUFBRW45RCxLQUFLaEYsS0FBSzJrRyxlQUFlN3hGLFFBQVE5UyxLQUFLb2xHLG1CQUFtQnBsRyxLQUFLeWdHLE9BQU9nRCxXQUFXLE1BQU10aEMsRUFBRWp5QyxLQUFLLEtBQUssTUFBTWx5QixFQUFFN0QsVUFBVTJyRyxlQUFlLFdBQVcsSUFBSTNqQyxFQUFFLEdBQUc1aUUsRUFBRVMsS0FBS3lnRyxPQUFPaFcsT0FBTyxHQUFHLE1BQU1sckYsRUFBRSxDQUFDLElBQUk3RSxFQUFFc0YsS0FBS3lnRyxPQUFPaFcsS0FBSyxHQUFHenFGLEtBQUtxbEcsVUFBVUYsS0FBS25sRyxLQUFLdWxHLFVBQVVKLEtBQUssTUFBTXpxRyxJQUFJeW5FLEVBQUVBLEdBQUduaUUsS0FBSzJnRyxXQUFXd0UsSUFBSTVDLFFBQVF2aUcsS0FBS3FsRyxVQUFVSixLQUFLamxHLEtBQUt1bEcsVUFBVU4sS0FBSyxNQUFNdnFHLElBQUl5bkUsRUFBRUEsR0FBR25pRSxLQUFLMmdHLFdBQVdzRSxJQUFJMUMsWUFBWSxNQUFNaGpHLElBQUlTLEtBQUtxbEcsVUFBVUgsWUFBWWxsRyxLQUFLdWxHLFVBQVVMLGFBQWEvaUMsR0FBR0EsR0FBR0EsRUFBRUEsR0FBR25pRSxLQUFLMmdHLFdBQVc2RSxtQkFBbUJqRCxTQUFTdmlHLEtBQUsyZ0csV0FBVzhFLHFCQUFxQmxELFNBQVN2aUcsS0FBSzJnRyxXQUFXdUUsV0FBVzNDLFFBQVF2aUcsS0FBS3FsRyxVQUFVTCxTQUFTaGxHLEtBQUt1bEcsVUFBVVAsUUFBUWhsRyxLQUFLdWxHLFVBQVVMLGFBQWEvaUMsRUFBRUEsR0FBR25pRSxLQUFLMmdHLFdBQVcrRSxhQUFhbkQsUUFBUXZpRyxLQUFLdWxHLFVBQVVQLFNBQVM3aUMsR0FBR0EsRUFBRUEsR0FBR25pRSxLQUFLMmdHLFdBQVdnRixlQUFlcEQsU0FBU3ZpRyxLQUFLMmdHLFdBQVdxRSxPQUFPekMsVUFBVSxPQUFPcGdDLEdBQUdBLEVBQUV4bUIsUUFBUTBrRCxtQkFBbUJyaUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxTQUFTbWtFLEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYSxJQUFJc0IsRUFBRXRCLEVBQUUsSUFBSWc2RixXQUFXcjVCLEVBQUUzZ0UsRUFBRSxJQUFJaTZGLFFBQVF4eUIsRUFBRXhtQixRQUFRLFNBQVN3bUIsRUFBRTVpRSxFQUFFN0UsRUFBRTJnRSxHQUFHLE9BQU8sSUFBSXIvRCxFQUFFbW1FLEVBQUU1aUUsRUFBRTdFLEVBQUUyZ0UsR0FBR3U1QixZQUFZenlCLEVBQUV4bUIsUUFBUWs1QyxlQUFlLFdBQVcsT0FBTyxJQUFJeDVCLElBQUksU0FBUzhHLEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYSxJQUFJc0IsRUFBRXRCLEVBQUUsSUFBSWk2RixRQUFRdDVCLEVBQUUzZ0UsRUFBRSxHQUFHbzZGLE9BQU85MkYsRUFBRXRELEVBQUUsSUFBSXE2RixVQUFVcHhELEVBQUVqcEMsRUFBRSxJQUFJdzZGLE1BQU1oNUQsRUFBRSxjQUFjc3JDLEVBQUUsZUFBZXZwRSxFQUFFLFNBQVNra0UsRUFBRTVpRSxHQUFHUyxLQUFLeTlGLGFBQWEsRUFBRXo5RixLQUFLbTBHLGVBQWUsRUFBRW4wRyxLQUFLZzZGLHNCQUFzQjczQixFQUFFNjNCLHNCQUFzQmg2RixLQUFLaTZGLGtCQUFrQjkzQixFQUFFODNCLGtCQUFrQmo2RixLQUFLMDFGLFFBQVEsSUFBSXI2QixFQUFFOEcsRUFBRTVpRSxJQUFnNkQsU0FBU25DLEVBQUUra0UsRUFBRTVpRSxHQUFHLE9BQU8sSUFBSUEsRUFBRTlDLFFBQVEwbEUsR0FBRyxTQUFTbjlCLEVBQUVtOUIsRUFBRTVpRSxFQUFFN0UsR0FBR3NGLEtBQUt5RyxPQUFPMDdELEdBQUcsS0FBS25pRSxLQUFLNEYsSUFBSXJHLEVBQUVBLEVBQUU2MEcsU0FBUyxHQUFHcDBHLEtBQUt5OUYsYUFBYS9pRyxHQUFHLEVBQUVzRixLQUFLcTBHLGFBQWE5MEcsR0FBRyxLQUFLLFNBQVM4UCxFQUFFOHlELEdBQUduaUUsS0FBS3MwRyxTQUFTbnlDLEVBQUVuaUUsS0FBS3UwRyxlQUFlLEtBQUssU0FBU2w3RixFQUFFOG9ELEVBQUU1aUUsRUFBRTdFLEVBQUUyZ0UsR0FBR3I3RCxLQUFLeTFGLGFBQWF0ekIsR0FBRyxHQUFHNWlFLEVBQUVBLEdBQUcsR0FBR1MsS0FBS3cwRyxhQUFhOTVHLEVBQUVzRixLQUFLeTBHLGNBQWNwNUMsRUFBRXI3RCxLQUFLMDBHLFdBQVcsS0FBSyxJQUFJMTJHLEVBQUUsSUFBSWhDLEVBQUV1RCxFQUFFLFFBQVFTLEtBQUt3Z0QsU0FBU3hpRCxFQUFFZ0MsS0FBSzIwRywwQkFBMEIsVUFBVTMwRyxLQUFLd2dELFNBQVNvMEQsZ0JBQWdCOXNELE9BQU8sRUFBRSxRQUFRN3JELFFBQVErRCxLQUFLNjBHLDJDQUEyQywyQkFBMkI3MEcsS0FBS3dnRCxTQUFTbzBELGdCQUFnQjUwRyxLQUFLODBHLGtDQUFrQyxrQkFBa0I5MEcsS0FBS3dnRCxTQUFTbzBELGdCQUFnQjUwRyxLQUFLKzBHLHFDQUFxQyxxQkFBcUIvMEcsS0FBS3dnRCxTQUFTbzBELGdCQUFnQjUwRyxLQUFLZzFHLDZCQUE2QixhQUFhaDFHLEtBQUt3Z0QsU0FBU28wRCxnQkFBZ0I5c0QsT0FBTyxFQUFFLFdBQVc3ckQsUUFBUStELEtBQUtpMUcscUNBQXFDLHFCQUFxQmoxRyxLQUFLd2dELFNBQVNvMEQsZ0JBQXR6RjMyRyxFQUFFOUQsVUFBVSs2Ryx1QkFBdUIsU0FBUy95QyxHQUFHLE9BQU9uaUUsS0FBSzAxRixRQUFRK0UsYUFBYTJELFVBQVVqOEIsSUFBSWxrRSxFQUFFOUQsVUFBVWc3Ryx1QkFBdUIsU0FBU2h6QyxFQUFFNWlFLEdBQUdTLEtBQUswMUYsUUFBUWtGLG1CQUFtQno0QixFQUFFbmlFLEtBQUswMUYsUUFBUTBGLG1CQUFtQjc3RixHQUFHdEIsRUFBRTlELFVBQVVrZ0csZUFBZSxXQUFXcjZGLEtBQUswMUYsUUFBUWdGLFdBQVcxNkYsS0FBS3k5RixhQUFhejlGLEtBQUttMEcsZ0JBQWdCbjBHLEtBQUswMUYsUUFBUTJFLGtCQUFrQnA4RixFQUFFOUQsVUFBVTJnRyxjQUFjLFNBQVMzNEIsR0FBR25pRSxLQUFLMDFGLFFBQVFvRixjQUFjMzRCLElBQUlsa0UsRUFBRTlELFVBQVVpN0cseUJBQXlCLFNBQVNqekMsR0FBRyxJQUFJNWlFLEVBQUUsRUFBRTRpRSxFQUFFOTJELE9BQU9zNEIsRUFBRTB4RSxNQUFNbHpDLEVBQUU2NEIsU0FBUzN2RixPQUFPczRCLEVBQUUweEUsT0FBTzkxRyxFQUFFNGlFLEVBQUV5M0IsU0FBUyxFQUFFLEdBQUc1NUYsS0FBS2k2RixvQkFBb0IxNkYsRUFBRTRpRSxFQUFFeTNCLFNBQVM1NUYsS0FBS2c2RixzQkFBc0IsRUFBRTczQixFQUFFeTNCLFNBQVM1NUYsS0FBS2c2RixzQkFBc0IsR0FBRyxJQUFJLElBQUl0L0YsRUFBRSxFQUFFQSxFQUFFNkUsRUFBRTdFLElBQUlzRixLQUFLKzVGLGNBQWNyL0YsRUFBRSxHQUFHLE9BQU8sSUFBSTZFLEdBQUd0QixFQUFFOUQsVUFBVW03RyxvQkFBb0IsU0FBU256QyxHQUFHLFNBQVNBLEVBQUV3NEIsb0JBQW9CeDRCLEVBQUV5M0IsV0FBVzU1RixLQUFLbzFHLHlCQUF5Qmp6QyxLQUFLbmlFLEtBQUswMUYsUUFBUWtGLG9CQUFtQixHQUFJLEtBQUszOEYsRUFBRTlELFVBQVVraEcsdUJBQXVCLFdBQVcsT0FBT3I3RixLQUFLMDFGLFFBQVEyRix3QkFBd0JwOUYsRUFBRTlELFVBQVU0L0YsY0FBYyxTQUFTNTNCLEdBQUduaUUsS0FBSzAxRixRQUFRNkUsYUFBYXA0QixJQUFJbGtFLEVBQUU5RCxVQUFVMGdHLFlBQVksU0FBUzE0QixHQUFHQSxFQUFFcDhELE9BQU8vRixLQUFLMDFGLFFBQVFnRixXQUFXMTZGLEtBQUt5OUYsYUFBYXo5RixLQUFLbTBHLGdCQUFnQm4wRyxLQUFLMDFGLFFBQVF5RixVQUFVaDVCLEVBQUVwOEQsUUFBUTlILEVBQUU5RCxVQUFVbWhHLE9BQU8sV0FBV3Q3RixLQUFLeTlGLGdCQUFnQngvRixFQUFFOUQsVUFBVW83RyxnQkFBZ0IsU0FBU3B6QyxHQUFHLE9BQU9BLEVBQUVuaUUsS0FBS3k5RixjQUFjdDdCLEdBQUcsSUFBSSxFQUFFLEdBQUduaUUsS0FBSzAxRixRQUFRaUosa0JBQWtCeDhCLElBQTJoRDl5RCxFQUFFbFYsVUFBVXE3RyxpQkFBaUIsV0FBVyxPQUFPeDFHLEtBQUt1MEcsZUFBZXYwRyxLQUFLdTBHLGVBQWVGLGFBQWEsTUFBTWhsRyxFQUFFbFYsVUFBVXM3RyxXQUFXLFNBQVN0ekMsR0FBRyxJQUFJNWlFLEVBQUUsSUFBSXlsQyxFQUFFaGxDLEtBQUt1MEcsZUFBZXB5QyxFQUFFbmlFLEtBQUtzMEcsU0FBUzdXLGNBQWN6OUYsS0FBS3UwRyxlQUFlaDFHLEdBQUc4UCxFQUFFbFYsVUFBVXU3RyxlQUFlLFNBQVN2ekMsR0FBRyxJQUFJNWlFLEVBQUUsS0FBSyxPQUFPNGlFLElBQUk1aUUsRUFBRTRpRSxFQUFFa3lDLGFBQWFyMEcsS0FBS3MwRyxTQUFTN1csYUFBYXQ3QixFQUFFczdCLGFBQWF6OUYsS0FBS3UwRyxlQUFlcHlDLEVBQUUxN0QsUUFBUWxILEdBQUc4UCxFQUFFbFYsVUFBVXc3RyxXQUFXLFNBQVN4ekMsRUFBRTVpRSxHQUFHLElBQUksSUFBSTdFLEVBQUVzRixLQUFLdTBHLGVBQWU3NUcsSUFBSSxJQUFJeW5FLEVBQUUxbEUsUUFBUS9CLEVBQUVrTCxNQUFNLENBQUMsR0FBR3JHLElBQUksSUFBSUEsRUFBRTlDLFFBQVEvQixFQUFFa0wsS0FBSyxDQUFDbEwsRUFBRSxLQUFLLE1BQU1BLEVBQUVBLEVBQUUrTCxPQUFPLE9BQU8vTCxHQUFHMlUsRUFBRWxWLFVBQVV5N0csUUFBUSxTQUFTenpDLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRXNGLEtBQUsyMUcsV0FBVyxDQUFDeHpDLEdBQUc1aUUsR0FBRyxPQUFPUyxLQUFLMDFHLGVBQWVoN0csSUFBSTJVLEVBQUVsVixVQUFVMDdHLGNBQWMsU0FBUzF6QyxHQUFHLElBQUk1aUUsRUFBRVMsS0FBSzIxRyxXQUFXeHpDLEdBQUc1aUUsSUFBSVMsS0FBS3MwRyxTQUFTN1csYUFBYWwrRixFQUFFaytGLGVBQWVwa0YsRUFBRWxmLFVBQVV5NkYsU0FBUyxXQUFXLEdBQUc1MEYsS0FBS3dnRCxTQUFTaTNDLFNBQVMsT0FBT3ozRixLQUFLeTFGLGFBQWEsSUFBSXR6QixFQUFFbmlFLEtBQUt5MUYsYUFBYWwyRixFQUFFUyxLQUFLd2dELFNBQVNrM0MsSUFBSSxTQUFTMTNGLEtBQUt3Z0QsU0FBU2szQyxNQUFNbjRGLEVBQUUsS0FBSzRpRSxHQUFHam1DLEVBQUV2NUIsS0FBS3cvRCxLQUFLNWlFLEVBQUU0aUUsRUFBRW4vRCxNQUFNazVCLEdBQUcsS0FBSyxJQUFJeGhDLEdBQUd5bkUsRUFBRUEsRUFBRWhsRSxRQUFRcXFFLEVBQUUsT0FBT3hrRSxNQUFNLFdBQVcsR0FBR2hILEVBQUUsQ0FBQytKLEtBQUssR0FBR3NGLEtBQUssSUFBSWd3RCxFQUFFLElBQUk0RyxFQUFFNWtFLEVBQUUsSUFBSVksRUFBRStCLEtBQUt3Z0QsU0FBUzlsRCxHQUFHMEMsRUFBRSxJQUFJWSxFQUFFbWtFLEVBQUVuaUUsS0FBS3dnRCxVQUFVZzNDLFdBQVd4M0YsS0FBSzAwRyxXQUFXLElBQUlybEcsRUFBRWhTLEdBQUcsSUFBSSxJQUFJMm5DLEVBQUUsS0FBSzNyQixFQUFFamMsRUFBRW1YLE9BQU84RSxFQUFFaE8sT0FBT3M0QixFQUFFNDFELEtBQUtsZ0YsRUFBRWhPLE9BQU9zNEIsRUFBRW15RSxVQUFVejhGLEVBQUVoTyxPQUFPczRCLEVBQUV3MUQsUUFBUTk5QixFQUFFcjJCLEVBQUVobEMsS0FBSysxRyxpQkFBaUIxNEcsRUFBRWdjLEVBQUVnaUQsRUFBRXIvRCxHQUFHcWQsRUFBRWhPLE9BQU9zNEIsRUFBRXF5RSxXQUFXMzhGLEVBQUVoTyxPQUFPczRCLEVBQUVnMUQsUUFBUXQvRSxFQUFFaE8sT0FBT3M0QixFQUFFc3lFLE9BQU81OEYsRUFBRWhPLE9BQU9zNEIsRUFBRTB4RSxPQUFPaDZDLEVBQUU2NkMsYUFBYWx4RSxFQUFFaGxDLEtBQUttMkcsbUJBQW1COTRHLEVBQUVnYyxFQUFFZ2lELEVBQUVqK0QsR0FBR2ljLEVBQUVoTyxPQUFPczRCLEVBQUV5eUUsVUFBVXB4RSxFQUFFaGxDLEtBQUtxMkcsa0JBQWtCaDVHLEVBQUVnYyxFQUFFZ2lELEdBQUdoaUQsRUFBRWhPLE9BQU9zNEIsRUFBRTB4RSxLQUFLcndFLEVBQUVobEMsS0FBS3MyRyxhQUFhajVHLEVBQUVnYyxFQUFFZ2lELEdBQUdoK0QsRUFBRXk5RixjQUFjemhGLEdBQUdyZCxFQUFFZ3BDLEVBQUUzckIsRUFBRWpjLEVBQUVtWCxPQUFPLE9BQU9sWCxFQUFFcTRGLFFBQVFtQyxTQUFTdDRGLElBQUk4WixFQUFFbGYsVUFBVWs4RyxrQkFBa0IsU0FBU2wwQyxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFLENBQUMrSixLQUFLeEcsRUFBRXdHLEtBQUtzRixLQUFLOUwsRUFBRThMLE1BQU0sT0FBTzgyRCxFQUFFZ3lDLGVBQWUsRUFBRXo1RyxFQUFFdzdHLGNBQWEsRUFBRy96QyxFQUFFZ3pDLHVCQUF1QjUxRyxFQUFFcTZGLFVBQVUsS0FBS3I2RixFQUFFbzdGLG1CQUFrQixHQUFJamdHLEVBQUU2N0csZUFBZXAwQyxFQUFFMjRCLGNBQWN2N0YsSUFBSSxNQUFNN0UsRUFBRTg3RyxpQkFBaUJyMEMsRUFBRWd6Qyx1QkFBdUIsTUFBTTUxRyxFQUFFd0csS0FBSyxJQUFHLEdBQUkvRixLQUFLNjBHLDRDQUE0Q242RyxFQUFFKzdHLG1CQUFtQnQwQyxFQUFFNDNCLGVBQWMsSUFBSzUzQixFQUFFMDRCLFlBQVl0N0YsS0FBSzdFLEVBQUVnOEcsZ0JBQWdCaDhHLEVBQUU2N0csZ0JBQWdCNzdHLEVBQUVpOEcseUJBQXlCeDBDLEVBQUVtNUIsU0FBUzVnRyxFQUFFZzhHLGdCQUFlLEdBQUloOEcsRUFBRWs4RyxtQkFBbUJsOEcsRUFBRTY3RyxnQkFBZ0I3N0csRUFBRWk4Ryx3QkFBd0J4MEMsRUFBRWs0QixpQkFBaUJyK0YsR0FBR3FkLEVBQUVsZixVQUFVZzhHLG1CQUFtQixTQUFTaDBDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixHQUFHLElBQUlxL0QsRUFBRTNnRSxFQUFFKzdHLGtCQUFrQno0RyxFQUFFLENBQUMrSCxLQUFLeEcsRUFBRXdHLEtBQUtzRixLQUFLOUwsRUFBRThMLE1BQU0sR0FBRzgyRCxFQUFFZ3pDLHVCQUF1QjUxRyxFQUFFcTZGLFVBQVUsS0FBS3I2RixFQUFFbzdGLG1CQUFrQixHQUFJamdHLEVBQUU2N0csZUFBZXAwQyxFQUFFMjRCLGNBQWN2N0YsUUFBUSxHQUFHLE1BQU03RSxFQUFFODdHLGdCQUFnQmozRyxFQUFFOEwsT0FBT3M0QixFQUFFMHhFLEtBQUtsekMsRUFBRWl6Qyx5QkFBeUI3MUcsSUFBSUEsRUFBRXE2RixTQUFTLEVBQUV6M0IsRUFBRTI0QixjQUFjdjdGLElBQUk0aUUsRUFBRTA0QixZQUFZdDdGLE9BQU8sQ0FBQyxHQUFHQSxFQUFFOEwsT0FBT3M0QixFQUFFcXlFLFdBQVc3ekMsRUFBRWd6Qyx3QkFBdUIsR0FBSXo2RyxFQUFFbThHLFlBQVksSUFBSXQzRyxFQUFFOEwsT0FBT3M0QixFQUFFZzFELFFBQVFwNUYsRUFBRThMLE9BQU9zNEIsRUFBRXN5RSxPQUFPMTJHLEVBQUV5N0YsU0FBUzN2RixPQUFPczRCLEVBQUVnMUQsU0FBU3gyQixFQUFFZ3pDLHdCQUF1QixHQUFJNTFHLEVBQUU4TCxPQUFPczRCLEVBQUVxeUUsV0FBVyxNQUFNdDdHLEVBQUU4N0csa0JBQWtCeDJHLEtBQUtnMUcsOEJBQThCaDFHLEtBQUtpMUcsd0NBQXdDOXlDLEVBQUVtekMsb0JBQW9CLzFHLEdBQUc4N0QsRUFBRUEsR0FBRyxJQUFJOTdELEVBQUVxNkYsVUFBVTU1RixLQUFLMjBHLDJCQUEyQixDQUFDLElBQUl6NEUsRUFBRXhoQyxFQUFFbThHLFdBQVcsRUFBRSxHQUFHNzJHLEtBQUs2MEcsNENBQTRDLElBQUluNkcsRUFBRW04RyxXQUFXLENBQUMsSUFBSXJ2QyxFQUFFdnBFLEdBQUUsRUFBR1osRUFBRSxFQUFFLEVBQUUsQ0FBQyxJQUFJbXFFLEVBQUV4ckUsRUFBRXl1RixLQUFLcHRGLElBQUlnTyxPQUFPczRCLEVBQUVxeUUsVUFBVSxDQUFDLzNHLEdBQUUsRUFBRyxNQUFNWixHQUFHLFFBQVFBLEVBQUUsR0FBR21xRSxFQUFFbjhELE9BQU9zNEIsRUFBRTQxRCxLQUFLL3hCLEVBQUVuOEQsT0FBT3M0QixFQUFFeXlFLFdBQVdsNkUsR0FBR2orQixFQUFFaStCLElBQUlpbUMsRUFBRTQzQixlQUFjLEdBQUkxK0IsR0FBRSxHQUFJOEcsRUFBRTA0QixZQUFZdDdGLEdBQUc4N0QsRUFBRUEsR0FBRzhHLEVBQUVrNUIseUJBQXlCM2dHLEVBQUUrN0csa0JBQWtCcDdDLEVBQUUsT0FBT3I5RCxHQUFHcWIsRUFBRWxmLFVBQVVtOEcsYUFBYSxTQUFTbjBDLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUUsQ0FBQytKLEtBQUt4RyxFQUFFd0csS0FBS3NGLEtBQUssY0FBYyxPQUFPM1EsRUFBRW84Ryx1QkFBdUI5MkcsS0FBSysyRyw2QkFBNkI1MEMsRUFBRTVpRSxFQUFFN0UsR0FBR0EsRUFBRTY3RyxnQkFBZ0I3N0csRUFBRWk4Ryx1QkFBdUJ4MEMsRUFBRTI0QixjQUFjdjdGLElBQUk0aUUsRUFBRW16QyxvQkFBb0IvMUcsR0FBRzRpRSxFQUFFMDRCLFlBQVl0N0YsSUFBSXZELEdBQUdxZCxFQUFFbGYsVUFBVTQ4Ryw2QkFBNkIsU0FBUzUwQyxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFZ0UsS0FBSyxHQUFHLEtBQUtULEVBQUV3RyxLQUFLLENBQUMsSUFBSXMxRCxFQUFFcjlELEVBQUV1QixFQUFFd0csS0FBSzQ5QixFQUFFLEVBQUV6SCxFQUFFLEdBQUdzckMsRUFBRSxHQUFHLGVBQWU5c0UsRUFBRW84Ryx3QkFBd0IsbUJBQW1COTJHLEtBQUt3MEcsYUFBYW41QyxFQUFFcjdELEtBQUt3MEcsYUFBYSxRQUFROTVHLEVBQUVvOEcsd0JBQXdCLG1CQUFtQjkyRyxLQUFLeTBHLGNBQWNwNUMsRUFBRXI3RCxLQUFLeTBHLGNBQWMsU0FBUy81RyxFQUFFbzhHLHlCQUF5Qno3QyxFQUFFLFNBQVM4RyxFQUFFNWlFLEdBQUcsT0FBTyxJQUFJOFosRUFBRThvRCxFQUFFNWlFLEVBQUV2RCxFQUFFdzRHLGFBQWF4NEcsRUFBRXk0RyxlQUFlN2YsYUFBYSxTQUFTNTBGLEtBQUt3Z0QsU0FBU3cyRCxlQUFlcnpFLEVBQUUsRUFBRSxhQUFhM2pDLEtBQUt3Z0QsU0FBU3cyRCxpQkFBaUJyekUsR0FBR3crQixFQUFFczdCLGNBQWMsSUFBSXgvRixFQUFFa2tFLEVBQUVvekMsZ0JBQWdCNXhFLEdBQUcsR0FBRzNsQyxFQUFFQSxFQUFFYixRQUFRLFlBQVksSUFBSSxTQUFTekMsRUFBRW84Ryx3QkFBd0IsTUFBTTk0RyxFQUFFLElBQUlBLEVBQUVnRixNQUFNLHVCQUF1QixDQUFDLElBQUkzRixFQUFFLDhEQUE4RGl6QyxLQUFLdHlDLEdBQUcsSUFBSVgsRUFBRSxZQUFZOGtFLEVBQUUyNEIsY0FBY3Y3RixHQUFHMjhCLEVBQUVqK0IsRUFBRVosRUFBRSxHQUFHLEtBQUtXLEVBQUVYLEVBQUUsR0FBR0EsRUFBRSxLQUFLbXFFLEVBQUV2cEUsRUFBRVosRUFBRSxJQUFJVyxFQUFFQSxFQUFFYixRQUFRLFlBQVksS0FBS0UsRUFBRSxLQUFLLElBQUlBLEVBQUUsR0FBR1osUUFBUSxTQUFTWSxFQUFFQSxFQUFFLEdBQUcyRixNQUFNLGNBQWN6RCxFQUFFbzdGLGtCQUFrQnQ5RixFQUFFLElBQUksR0FBR1csRUFBRSxHQUFHcTlELEVBQUUsQ0FBQyxJQUFJaitELEVBQUUsV0FBVzRDLEtBQUswM0YsSUFBSSxNQUFNdDZGLEVBQUVqRCxVQUFVNkYsS0FBS3dnRCxTQUFTNCtDLFlBQVlwaEcsRUFBRXE5RCxFQUFFcDlELEVBQUVELEVBQUUsSUFBSVosT0FBTyxDQUFDLElBQUk0bkMsRUFBRXpsQyxFQUFFbzdGLGtCQUFrQjMxRCxJQUFJaG5DLEVBQUVBLEVBQUViLFFBQVEsSUFBSTJFLE9BQU8sTUFBTWtqQyxFQUFFLEtBQUssS0FBSyxPQUFPaG5DLEVBQUVDLEVBQUVELEVBQUViLFFBQVEsTUFBTSxLQUFLYyxHQUFHaStCLElBQUlsK0IsRUFBRUEsRUFBRWsrQixFQUFFbCtCLEVBQUUsS0FBS3dwRSxFQUFFdHJDLEVBQUVzckMsR0FBR3JGLEVBQUU0M0IsZUFBYyxHQUFJLzdGLElBQUl1QixFQUFFd0csS0FBSy9ILEVBQUV1QixFQUFFbzdGLGtCQUFrQixHQUFHcDdGLEVBQUVxNkYsU0FBUyxFQUFFejNCLEVBQUUyNEIsY0FBY3Y3RixHQUFHNGlFLEVBQUU0M0IsZUFBYyxNQUFPMWdGLEVBQUVsZixVQUFVNDdHLGlCQUFpQixTQUFTNXpDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixHQUFHLElBQUlxL0QsRUFBRXI3RCxLQUFLaTNHLG9CQUFvQjEzRyxHQUFHLE9BQU83RSxFQUFFNjdHLGdCQUFnQjc3RyxFQUFFaThHLHlCQUF5QnAzRyxFQUFFOEwsT0FBT3M0QixFQUFFbXlFLFVBQVUsSUFBSXYyRyxFQUFFd0csS0FBS3RKLFFBQVEsTUFBTTBsRSxFQUFFMjRCLGNBQWN2N0YsSUFBSTRpRSxFQUFFbXpDLG9CQUFvQi8xRyxHQUFHUyxLQUFLazNHLGtCQUFrQi8wQyxFQUFFNWlFLEVBQUU4N0QsRUFBRTNnRSxFQUFFc0IsR0FBR3EvRCxFQUFFdTdDLG1CQUFtQnowQyxFQUFFazRCLGlCQUFpQmw0QixFQUFFMDRCLFlBQVl0N0YsS0FBS1MsS0FBSzgwRyxtQ0FBbUM5MEcsS0FBSyswRyxzQ0FBc0MvMEcsS0FBS2kxRyx3Q0FBd0M1NUMsRUFBRTg0QyxlQUFlNTBHLEVBQUV3RyxLQUFLOUosT0FBTyxHQUFHby9ELEVBQUU2NkMsY0FBYzc2QyxFQUFFazdDLGlCQUFpQnAwQyxFQUFFZ3lDLGVBQWU5NEMsRUFBRTg0QyxnQkFBZ0I5NEMsR0FBRyxJQUFJNEcsRUFBRSxTQUFTRSxFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUVzRixLQUFLeUcsT0FBTzA3RCxHQUFHLEtBQUtuaUUsS0FBSytGLEtBQUssR0FBRy9GLEtBQUtxTCxLQUFLLGNBQWNyTCxLQUFLbzBHLFNBQVMsR0FBR3AwRyxLQUFLNDJHLG1CQUFrQixFQUFHNTJHLEtBQUt1MkcsZ0JBQWUsRUFBR3YyRyxLQUFLMjJHLHdCQUF1QixFQUFHMzJHLEtBQUttM0csa0JBQWlCLEVBQUduM0csS0FBS28zRyxjQUFhLEVBQUdwM0csS0FBS3EzRyxZQUFXLEVBQUdyM0csS0FBSzAyRyxnQkFBZSxFQUFHMTJHLEtBQUtzM0csbUJBQWtCLEVBQUd0M0csS0FBSzgyRyx1QkFBdUIsS0FBSzkyRyxLQUFLdTNHLGdCQUFnQixLQUFLdjNHLEtBQUs2MkcsV0FBVyxFQUFFNzJHLEtBQUt5MkcsbUJBQWtCLEVBQUd6MkcsS0FBS20wRyxlQUFlLEVBQUVuMEcsS0FBS2syRyxjQUFhLEVBQUdsMkcsS0FBS3cyRyxlQUFlLEdBQUd4MkcsS0FBS3czRyxVQUFVLEdBQUdqNEcsR0FBR1MsS0FBS3cyRyxlQUFlajNHLEVBQUV3RyxLQUFLLEdBQUcvRixLQUFLK0YsS0FBS3hHLEVBQUV3RyxLQUFLLE1BQU0vRixLQUFLdzJHLGdCQUFnQjk3RyxFQUFFNkUsRUFBRXdHLEtBQUsvQyxNQUFNLGVBQWVoRCxLQUFLdzNHLFVBQVU5OEcsRUFBRUEsRUFBRSxHQUFHLEtBQUtBLEVBQUU2RSxFQUFFd0csS0FBSy9DLE1BQU0sc0JBQXNCaEQsS0FBS3czRyxVQUFVOThHLEVBQUVBLEVBQUUsR0FBRyxJQUFJc0YsS0FBS3czRyxVQUFVeDNHLEtBQUt3M0csVUFBVXQ3RyxjQUFjcUQsRUFBRThMLE9BQU9zNEIsRUFBRXcxRCxVQUFVbjVGLEtBQUtrMkcsY0FBYSxHQUFJbDJHLEtBQUtvM0csYUFBYSxNQUFNcDNHLEtBQUt3M0csVUFBVWg2RyxPQUFPLEdBQUd3QyxLQUFLbzBHLFNBQVNwMEcsS0FBS28zRyxhQUFhcDNHLEtBQUt3M0csVUFBVXgzRyxLQUFLdzNHLFVBQVUxdkQsT0FBTyxHQUFHOW5ELEtBQUtxM0csWUFBWXIzRyxLQUFLbzNHLGNBQWM3M0csRUFBRXkvRixRQUFRLE9BQU96L0YsRUFBRXkvRixPQUFPajVGLEtBQUsvRixLQUFLcTNHLFdBQVdyM0csS0FBS3EzRyxZQUFZLE1BQU1yM0csS0FBS3cyRyxpQkFBaUJ4MkcsS0FBSytGLEtBQUs5SixPQUFPLEdBQUcsU0FBUzBHLEtBQUszQyxLQUFLK0YsS0FBS3ZJLE9BQU8sTUFBTXdDLEtBQUtrMkcsY0FBYSxHQUFJNzhGLEVBQUVsZixVQUFVODhHLG9CQUFvQixTQUFTOTBDLEdBQUcsSUFBSTVpRSxFQUFFLElBQUkwaUUsRUFBRWppRSxLQUFLMDBHLFdBQVdjLG1CQUFtQnJ6QyxHQUFHLE9BQU81aUUsRUFBRTQwRyxlQUFlbjBHLEtBQUt3Z0QsU0FBU2kzRCw0QkFBNEJsNEcsRUFBRTgzRyxXQUFXOTNHLEVBQUU4M0csWUFBWWo2RyxFQUFFbUMsRUFBRWk0RyxVQUFVeDNHLEtBQUt3Z0QsU0FBU2szRCxlQUFlbjRHLEVBQUU0M0csaUJBQWlCNTNHLEVBQUUyMkcsY0FBYzMyRyxFQUFFNjNHLGNBQWM3M0csRUFBRTgzRyxXQUFXOTNHLEVBQUVnM0csZ0JBQWdCaDNHLEVBQUUyMkcsY0FBYzk0RyxFQUFFbUMsRUFBRWk0RyxVQUFVeDNHLEtBQUt3Z0QsU0FBU20zRCxhQUFhcDRHLEVBQUVvM0csd0JBQXdCcDNHLEVBQUU0M0csa0JBQWtCLzVHLEVBQUVtQyxFQUFFaTRHLFVBQVV4M0csS0FBS3dnRCxTQUFTbzNELHFCQUFxQnI0RyxFQUFFcTNHLGtCQUFrQng1RyxFQUFFbUMsRUFBRTYwRyxTQUFTcDBHLEtBQUt3Z0QsU0FBU3EzRCxTQUFTLE1BQU10NEcsRUFBRWkzRyxlQUFlajNHLEdBQUc4WixFQUFFbGYsVUFBVSs4RyxrQkFBa0IsU0FBUy8wQyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHM2dFLEVBQUV5OEcsbUJBQW1CejhHLEVBQUUyOEcsV0FBVzM4RyxFQUFFNjhHLGdCQUFnQnYzRyxLQUFLMDBHLFdBQVdrQixRQUFRbDdHLEVBQUUwNUcsV0FBV3AwRyxLQUFLODNHLHlCQUF5QnA5RyxLQUFLQSxFQUFFazhHLG9CQUFvQmw4RyxFQUFFK0wsU0FBUy9MLEVBQUUrTCxPQUFPNndHLG1CQUFrQixHQUFJbjFDLEVBQUU0M0IsZUFBYyxLQUFNLzVGLEtBQUswMEcsV0FBV2UsV0FBVy82RyxHQUFHLFdBQVdBLEVBQUUwNUcsVUFBVSxVQUFVMTVHLEVBQUUwNUcsVUFBVTE1RyxFQUFFNjdHLGdCQUFnQjc3RyxFQUFFaThHLHlCQUF5Qmo4RyxFQUFFbzhHLHVCQUFwbFIsU0FBUzMwQyxFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUUsS0FBS3NCLEVBQUUsS0FBSyxPQUFPdUQsRUFBRXkvRixRQUFRLFdBQVc3OEIsRUFBRXpuRSxFQUFFLGtCQUFrQixVQUFVeW5FLElBQUl6bkUsRUFBRSxhQUFhQSxFQUFFLFNBQVN5bkUsR0FBRyxJQUFJLElBQUk1aUUsRUFBRSxLQUFLN0UsRUFBRXluRSxFQUFFNXRELEtBQUs3WixFQUFFMlEsT0FBT3M0QixFQUFFNDFELEtBQUtwM0IsRUFBRTY4QixTQUFTdGtHLEdBQUcsQ0FBQyxHQUFHQSxFQUFFMlEsT0FBT3M0QixFQUFFcXlFLFdBQVcsU0FBU3Q3RyxFQUFFcUwsS0FBSyxDQUFDckwsRUFBRTZaLE1BQU03WixFQUFFNlosS0FBS2xKLE9BQU9zNEIsRUFBRWcxRCxRQUFRaitGLEVBQUU2WixLQUFLQSxNQUFNN1osRUFBRTZaLEtBQUtBLEtBQUtsSixPQUFPczRCLEVBQUVzeUUsUUFBUTEyRyxFQUFFN0UsRUFBRTZaLEtBQUtBLEtBQUt4TyxNQUFNLE1BQU1yTCxFQUFFQSxFQUFFNlosS0FBSyxPQUFPaFYsRUFBak8sQ0FBb09BLElBQUk3RSxHQUFHcTVELE9BQU8sYUFBYSxFQUFFLzNELEVBQUUsTUFBTXRCLEVBQUVxNUQsT0FBTyx1R0FBdUcsRUFBRS8zRCxFQUFFLGFBQWF0QixFQUFFcTVELE9BQU8seUNBQXlDLEVBQUUvM0QsRUFBRSxPQUFPdEIsRUFBRXE1RCxPQUFPLGVBQWUsSUFBSS8zRCxFQUFFLFFBQVFBLEdBQUcsS0FBMGdRcUIsQ0FBRTNDLEVBQUU4OEcsVUFBVWo0RyxNQUFNbkMsRUFBRTFDLEVBQUU4OEcsVUFBVXgzRyxLQUFLd2dELFNBQVN1M0QsZ0JBQWdCNTFDLEVBQUU0M0IsZUFBYyxHQUFJNTNCLEVBQUV1ekIsUUFBUXlHLHdCQUF3Qmg2QixFQUFFNDNCLGVBQWMsSUFBS3IvRixFQUFFeThHLGtCQUFrQixNQUFNejhHLEVBQUU4N0csZ0JBQWdCLFNBQVM5N0csRUFBRTg4RyxZQUFZeDNHLEtBQUswMEcsV0FBV21CLGNBQWMsQ0FBQyxLQUFLLFNBQVMsU0FBU243RyxFQUFFZzhHLGdCQUFlLEVBQUd2MEMsRUFBRSt5Qyx1QkFBdUIsVUFBVS95QyxFQUFFNDNCLGVBQWMsSUFBSyxRQUFRci9GLEVBQUUwNUcsVUFBVS80QyxFQUFFaHdELE9BQU9zNEIsRUFBRXl5RSxXQUFXcDZHLEVBQUVxN0csYUFBYSxJQUFJMzhHLEVBQUVxTCxLQUFLdEosUUFBUSxPQUFPL0IsRUFBRWs4RyxtQkFBbUJsOEcsRUFBRTY3RyxnQkFBZ0JwMEMsRUFBRTQzQixlQUFjLElBQUtyL0YsRUFBRTY3RyxnQkFBZ0I3N0csRUFBRWk4Ryx1QkFBdUJqOEcsRUFBRWs4RyxtQkFBbUJsOEcsRUFBRTY3RyxnQkFBZ0JwMEMsRUFBRTQzQixlQUFjLEdBQUlyL0YsRUFBRTI4RyxZQUFZMzhHLEVBQUU2OEcsaUJBQWlCNzhHLEVBQUU2OEcsZ0JBQWdCRCxxQkFBcUI1OEcsRUFBRWs4RyxtQkFBbUI1NkcsRUFBRTQ2RyxtQkFBbUJ2N0MsRUFBRWh3RCxPQUFPczRCLEVBQUV5eUUsV0FBVzE3RyxFQUFFNjhHLGtCQUFrQnY3RyxHQUFHLGVBQWVxL0QsRUFBRWh3RCxRQUFRODJELEVBQUU0M0IsZUFBYyxJQUFLci9GLEVBQUVnOEcsZ0JBQWdCaDhHLEVBQUVvOEcsdUJBQXVCLE1BQU1wOEcsRUFBRTg3RyxpQkFBaUIsU0FBUzk3RyxFQUFFMDVHLFNBQVMxNUcsRUFBRWc4RyxlQUFlMTJHLEtBQUt3Z0QsU0FBU3czRCxrQkFBa0IsU0FBU3Q5RyxFQUFFMDVHLFNBQVMxNUcsRUFBRWc4RyxlQUFlMTJHLEtBQUt3Z0QsU0FBU3kzRCx1QkFBdUIsU0FBU3Y5RyxFQUFFMDVHLFdBQVcxNUcsRUFBRWc4RyxlQUFlMTJHLEtBQUt3Z0QsU0FBUzAzRCx5QkFBeUJ4OUcsRUFBRWs4RyxtQkFBbUIsZUFBZXY3QyxFQUFFaHdELE9BQU8zUSxFQUFFK0wsU0FBUy9MLEVBQUUrTCxPQUFPNndHLG1CQUFrQixHQUFJbjFDLEVBQUU0M0IsZUFBYyxNQUFPMWdGLEVBQUVsZixVQUFVMjlHLHlCQUF5QixTQUFTMzFDLEdBQUcsSUFBSTVpRSxFQUFFLEtBQUssSUFBSTRpRSxFQUFFZzFDLGtCQUFrQmgxQyxFQUFFaTFDLGNBQWNqMUMsRUFBRTE3RCxPQUFPLE1BQU0sU0FBUzA3RCxFQUFFaXlDLFNBQVM3MEcsRUFBRUEsR0FBR1MsS0FBSzAwRyxXQUFXa0IsUUFBUSxRQUFRLE9BQU96ekMsRUFBRWl5QyxTQUFTNzBHLEVBQUVBLEdBQUdTLEtBQUswMEcsV0FBV2tCLFFBQVEsS0FBSyxDQUFDLEtBQUssT0FBTyxPQUFPenpDLEVBQUVpeUMsVUFBVSxPQUFPanlDLEVBQUVpeUMsU0FBUzcwRyxHQUFHQSxFQUFFQSxHQUFHUyxLQUFLMDBHLFdBQVdrQixRQUFRLEtBQUssQ0FBQyxTQUFTNTFHLEtBQUswMEcsV0FBV2tCLFFBQVEsS0FBSyxDQUFDLE9BQU8sT0FBT3p6QyxFQUFFaXlDLFVBQVUsT0FBT2p5QyxFQUFFaXlDLFNBQVM3MEcsR0FBR0EsRUFBRUEsR0FBR1MsS0FBSzAwRyxXQUFXa0IsUUFBUSxLQUFLLENBQUMsT0FBTyxVQUFVNTFHLEtBQUswMEcsV0FBV2tCLFFBQVEsS0FBSyxDQUFDLE9BQU8sUUFBUSxhQUFhenpDLEVBQUVpeUMsU0FBUzcwRyxFQUFFQSxHQUFHUyxLQUFLMDBHLFdBQVdrQixRQUFRLFdBQVcsQ0FBQyxXQUFXLFdBQVd6ekMsRUFBRWl5QyxTQUFTNzBHLEVBQUVBLEdBQUdTLEtBQUswMEcsV0FBV2tCLFFBQVEsU0FBUyxDQUFDLFNBQVMsV0FBVyxhQUFhLGFBQWF6ekMsRUFBRWl5QyxTQUFTNzBHLEVBQUVBLEdBQUdTLEtBQUswMEcsV0FBV2tCLFFBQVEsVUFBVSxDQUFDLFVBQVUsVUFBVXp6QyxFQUFFaXlDLFNBQVM3MEcsR0FBR0EsRUFBRUEsR0FBR1MsS0FBSzAwRyxXQUFXa0IsUUFBUSxVQUFVLENBQUMsWUFBWTUxRyxLQUFLMDBHLFdBQVdrQixRQUFRLFdBQVcsQ0FBQyxVQUFVLFVBQVV6ekMsRUFBRWl5QyxVQUFVLFVBQVVqeUMsRUFBRWl5QyxTQUFTNzBHLEdBQUdBLEdBQUdBLEdBQUdBLEVBQUVBLEdBQUdTLEtBQUswMEcsV0FBV2tCLFFBQVEsVUFBVSxDQUFDLFlBQVk1MUcsS0FBSzAwRyxXQUFXa0IsUUFBUSxXQUFXLENBQUMsWUFBWTUxRyxLQUFLMDBHLFdBQVdrQixRQUFRLFFBQVEsQ0FBQyxZQUFZNTFHLEtBQUswMEcsV0FBV2tCLFFBQVEsUUFBUSxDQUFDLFVBQVUsT0FBT3p6QyxFQUFFaXlDLFNBQVM3MEcsR0FBR0EsR0FBR0EsRUFBRUEsR0FBR1MsS0FBSzAwRyxXQUFXa0IsUUFBUSxVQUFVLENBQUMsWUFBWTUxRyxLQUFLMDBHLFdBQVdrQixRQUFRLFdBQVcsQ0FBQyxZQUFZNTFHLEtBQUswMEcsV0FBV2tCLFFBQVEsS0FBSyxDQUFDLFFBQVEsUUFBUSxRQUFRLFVBQVUsT0FBT3p6QyxFQUFFaXlDLFVBQVUsT0FBT2p5QyxFQUFFaXlDLFdBQVc3MEcsR0FBR0EsRUFBRUEsR0FBR1MsS0FBSzAwRyxXQUFXa0IsUUFBUSxLQUFLLENBQUMsUUFBUSxRQUFRLFFBQVEsUUFBUSxTQUFTNTFHLEtBQUswMEcsV0FBV2tCLFFBQVEsS0FBSyxDQUFDLFFBQVEsUUFBUSxRQUFRLFFBQVEsUUFBUXp6QyxFQUFFMTdELE9BQU96RyxLQUFLMDBHLFdBQVdjLG1CQUFtQmoyRyxHQUFHNGlFLEVBQUV4bUIsUUFBUSs0QyxXQUFXcjdFLEdBQUcsU0FBUzhvRCxFQUFFNWlFLEVBQUU3RSxHQUFHLGFBQWEsSUFBSXNCLEVBQUV0QixFQUFFLEdBQUdpNkYsUUFBUSxTQUFTdDVCLEVBQUU4RyxHQUFHbm1FLEVBQUUxQixLQUFLMEYsS0FBS21pRSxFQUFFLFFBQVEsSUFBSW5pRSxLQUFLNi9GLFdBQVc1akcsUUFBUSxTQUFTK0QsS0FBSzYvRixXQUFXLEtBQUs3L0YsS0FBSzYvRixXQUFXLENBQUMsU0FBUyxNQUFNLGFBQWEsUUFBUTcvRixLQUFLZzRHLGtCQUFrQmg0RyxLQUFLdS9GLGFBQWEscUJBQXFCdi9GLEtBQUtrNEcsdUJBQXVCbDRHLEtBQUt1L0YsYUFBYSwwQkFBeUIsR0FBSXYvRixLQUFLaTRHLHVCQUF1Qmo0RyxLQUFLdS9GLGFBQWEsMEJBQXlCLEdBQUl2L0YsS0FBS200RyxrQkFBa0JuNEcsS0FBS3UvRixhQUFhLHFCQUFvQixHQUFJdi9GLEtBQUs0MEcsZ0JBQWdCNTBHLEtBQUswL0YsZUFBZSxrQkFBa0IsQ0FBQyxPQUFPLFFBQVEsZ0JBQWdCLHlCQUF5QixtQkFBbUIsV0FBVyxxQkFBcUIxL0YsS0FBS3kzRyw0QkFBNEJ6M0csS0FBSzQvRixZQUFZLDhCQUE4QjUvRixLQUFLcTlGLGFBQWFyOUYsS0FBSyszRyxhQUFhLzNHLEtBQUs4L0YsV0FBVyxlQUFlLENBQUMsT0FBTyxPQUFPLFVBQVU5L0YsS0FBSzYzRyxPQUFPNzNHLEtBQUs4L0YsV0FBVyxTQUFTLENBQUMsSUFBSSxPQUFPLE9BQU8sUUFBUSxJQUFJLE1BQU0sTUFBTSxLQUFLLFNBQVMsU0FBUyxPQUFPLE9BQU8sT0FBTyxXQUFXLE1BQU0sTUFBTSxLQUFLLFFBQVEsSUFBSSxTQUFTLE1BQU0sUUFBUSxNQUFNLE1BQU0sU0FBUyxRQUFRLE1BQU0sT0FBTyxPQUFPLFFBQVEsV0FBVyxTQUFTLFNBQVMsV0FBVyxJQUFJLE9BQU8sSUFBSSxPQUFPLFNBQVMsUUFBUSxPQUFPLFNBQVMsTUFBTSxNQUFNLE1BQU0sV0FBVyxXQUFXLE9BQU8sSUFBSSxNQUFNLFFBQVEsTUFBTSxPQUFPLFVBQVUsTUFBTSxTQUFTLE9BQU85L0YsS0FBSzAzRyxjQUFjMTNHLEtBQUs4L0YsV0FBVyxnQkFBZ0IsQ0FBQyxPQUFPLE9BQU8sS0FBSyxNQUFNLFFBQVEsS0FBSyxNQUFNLFFBQVEsU0FBUyxPQUFPLFdBQVcsT0FBTyxRQUFRLFNBQVMsUUFBUSxNQUFNLFdBQVcsT0FBTyxXQUFXLFlBQVk5L0YsS0FBSzIzRyxZQUFZMzNHLEtBQUs4L0YsV0FBVyxjQUFjLElBQUk5L0YsS0FBSzQzRyxvQkFBb0I1M0csS0FBSzgvRixXQUFXLHNCQUFzQixDQUFDLE1BQU0sYUFBYTkvRixLQUFLbzRHLDhCQUE4QnA0RyxLQUFLMi9GLGdCQUFnQixpQ0FBaUMzL0YsS0FBS2czRyxlQUFlaDNHLEtBQUswL0YsZUFBZSxpQkFBaUIsQ0FBQyxTQUFTLE9BQU8sYUFBYXJrQyxFQUFFbGhFLFVBQVUsSUFBSTZCLEVBQUVtbUUsRUFBRXhtQixRQUFRZzVDLFFBQVF0NUIsR0FBRyxTQUFTOEcsRUFBRTVpRSxFQUFFN0UsR0FBRyxhQUFhLElBQUlzQixFQUFFdEIsRUFBRSxHQUFHcTZGLFVBQVUxNUIsRUFBRTNnRSxFQUFFLEdBQUd3NkYsTUFBTWwzRixFQUFFdEQsRUFBRSxJQUFJeWxHLFdBQVd4OEQsRUFBRWpwQyxFQUFFLElBQUkybEcsbUJBQW1CbmtFLEVBQUV4aEMsRUFBRSxJQUFJMGxHLFFBQVE1NEIsRUFBRSxDQUFDc3VDLFNBQVMsY0FBY00sVUFBVSxlQUFlSixVQUFVLGVBQWVyZCxPQUFPLFlBQVlzZCxNQUFNLFdBQVc5YyxRQUFRLGFBQWFrYyxLQUFLLFVBQVU1YixRQUFRLGFBQWE5ekMsTUFBTTBWLEVBQUUxVixNQUFNMjZDLElBQUlqbEMsRUFBRWlsQyxJQUFJL0csSUFBSWwrQixFQUFFaytCLEtBQUt0N0YsRUFBRSxJQUFJRCxFQUFFLFFBQVEsT0FBT1gsRUFBRSxTQUFTOGtFLEVBQUU1aUUsR0FBR3ZELEVBQUUxQixLQUFLMEYsS0FBS21pRSxFQUFFNWlFLEdBQUdTLEtBQUtxNEcsa0JBQWtCLEdBQUcsSUFBSTM5RyxFQUFFLElBQUlpcEMsRUFBRTNqQyxLQUFLeWdHLFFBQVFDLGFBQWExZ0csS0FBS3dnRCxVQUFVNmEsRUFBRSxJQUFJbi9CLEVBQUVsOEIsS0FBS3lnRyxRQUFRLEdBQUd6Z0csS0FBSzJnRyxXQUFXLENBQUM1OEIsS0FBS3JwRSxFQUFFb21HLE1BQU0sY0FBY08sYUFBYTNtRyxFQUFFc21HLFlBQVksS0FBS00sYUFBYTVtRyxFQUFFc21HLFlBQVksS0FBSzUzRCxVQUFVMXVDLEVBQUVvbUcsTUFBTSxtQkFBbUJ3WCxhQUFhNTlHLEVBQUVvbUcsTUFBTSxnQkFBZ0IwRSxtQkFBbUJucUMsRUFBRXVsQyxjQUFjLFNBQVNJLFlBQVksUUFBUWtFLFdBQVc3cEMsRUFBRXVsQyxjQUFjLE1BQU1JLFlBQVksTUFBTXVYLGdCQUFnQmw5QyxFQUFFeWxDLE1BQU0sY0FBYzBYLHFCQUFxQm45QyxFQUFFeWxDLE1BQU0sTUFBTWwzRCxRQUFReXhCLEVBQUV1bEMsY0FBYyxRQUFRSSxZQUFZLE9BQU95WCxNQUFNcDlDLEVBQUV1bEMsY0FBYyxlQUFlSSxZQUFZLE9BQU8wWCxvQkFBb0JyOUMsRUFBRXVsQyxjQUFjLFFBQVFJLFlBQVksTUFBTTJYLFdBQVd0OUMsRUFBRXVsQyxjQUFjLE9BQU9JLFlBQVksUUFBUWhoRyxLQUFLd2dELFNBQVMyM0Qsb0JBQW9CbjRHLEtBQUsyZ0csV0FBVzU4QixLQUFLL2pFLEtBQUsyZ0csV0FBVzU4QixLQUFLbDZDLFFBQVEsZUFBZTdwQixLQUFLNDRHLCtCQUErQixLQUFLNTRHLEtBQUt3Z0QsU0FBUzQzRCw4QkFBOEIsQ0FBQyxJQUFJcDZHLEVBQUVnQyxLQUFLeWdHLE9BQU9pRCxtQkFBbUIxakcsS0FBS3dnRCxTQUFTNDNELCtCQUErQnA0RyxLQUFLMmdHLFdBQVd5WCw4QkFBOEIvOEMsRUFBRW1sQyxTQUFTeGlHLEdBQUdnakcsWUFBWWhqRyxNQUFNWCxFQUFFbEQsVUFBVSxJQUFJNkIsR0FBR3lsRyxZQUFZLFNBQVN0L0IsR0FBRyxPQUFNLEdBQUk5a0UsRUFBRWxELFVBQVV1bkcsWUFBWSxTQUFTdi9CLEdBQUcsT0FBT0EsRUFBRTkyRCxPQUFPbThELEVBQUVzdUMsVUFBVXo0RyxFQUFFbEQsVUFBVXduRyxZQUFZLFNBQVN4L0IsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTkyRCxPQUFPbThELEVBQUU0dUMsV0FBVzcyRyxLQUFLLE1BQU00aUUsRUFBRXA4RCxNQUFNLE9BQU9vOEQsRUFBRXA4RCxPQUFPLE1BQU14RyxFQUFFd0csS0FBSyxJQUFJLE9BQU9vOEQsRUFBRXA4RCxNQUFNLE1BQU14RyxFQUFFd0csS0FBSyxJQUFJLE1BQU14RyxFQUFFd0csS0FBSyxLQUFLMUksRUFBRWxELFVBQVVrOUYsT0FBTyxXQUFXcjNGLEtBQUtxNEcsa0JBQWtCLElBQUloN0csRUFBRWxELFVBQVV5bkcsZ0JBQWdCLFNBQVN6L0IsRUFBRTVpRSxHQUFHLElBQUk3RSxFQUFFLEtBQUtzRixLQUFLNmhHLGtCQUFrQixJQUFJN2xHLEVBQUVnRSxLQUFLeWdHLE9BQU9oVyxPQUFPLE9BQU8sT0FBT3p1RixFQUFFZ0UsS0FBSzhoRyxjQUFjdDZCLEVBQUUreEIsSUFBSSxJQUFJNytGLEdBQUdBLEdBQUdBLEdBQUdBLEdBQUdBLEdBQUdBLEdBQUdBLEdBQUdBLEdBQUdBLEVBQUVBLEdBQUdzRixLQUFLNjRHLHNCQUFzQjc4RyxFQUFFdUQsS0FBS1MsS0FBSzg0RyxnQkFBZ0I5OEcsRUFBRW1tRSxFQUFFNWlFLEtBQUtTLEtBQUsrNEcsa0JBQWtCLzhHLEVBQUVtbUUsRUFBRTVpRSxLQUFLUyxLQUFLZzVHLFlBQVloOUcsRUFBRXVELEtBQUtTLEtBQUtpNUcsbUJBQW1CajlHLEtBQUtnRSxLQUFLazVHLHVCQUF1Qmw5RyxLQUFLZ0UsS0FBS201RyxpQkFBaUJuOUcsS0FBS2dFLEtBQUtvNUcsV0FBV3A5RyxFQUFFdUQsS0FBS1MsS0FBSzhoRyxjQUFjdDZCLEVBQUVpeUIsUUFBUXo1RixLQUFLeWdHLE9BQU9sc0YsU0FBU2xYLEVBQUVsRCxVQUFVKytHLHVCQUF1QixTQUFTLzJDLEdBQUcsSUFBSTVpRSxFQUFFLEtBQUs3RSxFQUFFLEtBQUtzQixFQUFFLEtBQUssTUFBTSxNQUFNbW1FLElBQUksTUFBTW5pRSxLQUFLeWdHLE9BQU9oVyxLQUFLLE1BQU0vdkYsRUFBRXNGLEtBQUsyZ0csV0FBVy8yRCxRQUFRMjRELFNBQVN2bUcsRUFBRWlDLEVBQUUwa0csZUFBZWpvRyxLQUFLLFVBQVVzQixFQUFFbzFGLFNBQVMxMkYsR0FBR3VELEVBQUUya0csWUFBWTVpRyxLQUFLeWdHLFNBQVMvbEcsRUFBRXNGLEtBQUsyZ0csV0FBVzhYLE1BQU1sVyxRQUFRN25HLEtBQUs2RSxFQUFFUyxLQUFLOGhHLGNBQWN0NkIsRUFBRTJ4QixRQUFReitGLElBQUl5UixXQUFXblEsSUFBSXVELEdBQUdsQyxFQUFFbEQsVUFBVWcvRyxpQkFBaUIsU0FBU2gzQyxHQUFHLElBQUk1aUUsRUFBRSxLQUFLN0UsRUFBRSxLQUFLLEdBQUcsTUFBTXluRSxFQUFFLENBQUMsSUFBSW5tRSxFQUFFZ0UsS0FBS3lnRyxPQUFPaFcsS0FBSyxHQUFHLE1BQU16dUYsR0FBRyxNQUFNQSxJQUFJdEIsR0FBR0EsRUFBRXNGLEtBQUsyZ0csV0FBVytYLG9CQUFvQm5XLFNBQVN2aUcsS0FBSzJnRyxXQUFXZ1ksV0FBV3BXLFFBQVE3bkcsS0FBSzZFLEVBQUVTLEtBQUs4aEcsY0FBY3Q2QixFQUFFMnhCLFFBQVF6K0YsSUFBSXlSLFdBQVcsTUFBTSxPQUFPNU0sR0FBR2xDLEVBQUVsRCxVQUFVaS9HLFdBQVcsU0FBU2ozQyxFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUUsS0FBS3NCLEVBQUUsS0FBSyxPQUFPdUQsR0FBRyxNQUFNNGlFLElBQUl6bkUsRUFBRXNGLEtBQUt5Z0csT0FBT2xzRixPQUFPLE1BQU12VSxLQUFLeWdHLE9BQU9oVyxTQUFTL3ZGLEdBQUdzRixLQUFLeWdHLE9BQU9sc0YsUUFBUTdaLEdBQUdzRixLQUFLMmdHLFdBQVcyWCxhQUFhL1YsT0FBT3ZtRyxFQUFFZ0UsS0FBSzhoRyxjQUFjdDZCLEVBQUVzdUMsU0FBU3A3RyxJQUFJc0IsR0FBR3FCLEVBQUVsRCxVQUFVMCtHLHNCQUFzQixTQUFTMTJDLEVBQUU1aUUsR0FBRyxJQUFJN0UsRUFBRSxLQUFLc0IsRUFBRSxLQUFLLE9BQU91RCxHQUFHUyxLQUFLd2dELFNBQVMyM0QsbUJBQW1CLE1BQU1oMkMsR0FBRyxNQUFNbmlFLEtBQUt5Z0csT0FBT2hXLEtBQUssS0FBSyxNQUFNenFGLEtBQUt5Z0csT0FBT2hXLEtBQUssSUFBSS92RixHQUFHQSxFQUFFc0YsS0FBSzJnRyxXQUFXNkUsbUJBQW1CakQsU0FBU3ZpRyxLQUFLMmdHLFdBQVd1RSxXQUFXM0MsT0FBT3ZtRyxFQUFFZ0UsS0FBSzhoRyxjQUFjdDZCLEVBQUUyeEIsUUFBUXorRixLQUFLQSxFQUFFc0YsS0FBSzJnRyxXQUFXNFgsZ0JBQWdCaFcsT0FBT3ZtRyxFQUFFZ0UsS0FBSzhoRyxjQUFjdDZCLEVBQUVzdUMsU0FBU3A3RyxLQUFLc0IsR0FBR3FCLEVBQUVsRCxVQUFVNitHLFlBQVksU0FBUzcyQyxFQUFFNWlFLEdBQUcsSUFBSTdFLEVBQUUsS0FBS3NCLEVBQUUsS0FBSyxPQUFPdUQsSUFBSSxNQUFNQSxFQUFFd0csS0FBSyxLQUFLLE1BQU1vOEQsR0FBRyxNQUFNQSxHQUFHLE1BQU1uaUUsS0FBS3lnRyxPQUFPaFcsS0FBSyxLQUFLL3ZGLEVBQUVzRixLQUFLeWdHLE9BQU9sc0YsT0FBTyxNQUFNNHRELElBQUl6bkUsR0FBR3NGLEtBQUt5Z0csT0FBT2xzRixRQUFRdlksRUFBRWdFLEtBQUs4aEcsY0FBY3Q2QixFQUFFNHVDLFVBQVUxN0csSUFBSSxNQUFNNkUsRUFBRXdHLEtBQUssSUFBSSxNQUFNbzhELEdBQUcsTUFBTW5pRSxLQUFLeWdHLE9BQU9oVyxLQUFLLEtBQUt6cUYsS0FBS3lnRyxPQUFPbHNGLE9BQU92VSxLQUFLeWdHLE9BQU9sc0YsT0FBT3ZZLEVBQUVnRSxLQUFLOGhHLGNBQWN0NkIsRUFBRTR1QyxVQUFVLFFBQVFwNkcsR0FBR3FCLEVBQUVsRCxVQUFVMitHLGdCQUFnQixTQUFTMzJDLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUUsS0FBS3EvRCxFQUFFLEdBQUcsR0FBRzNnRSxHQUFHLE1BQU1BLEVBQUVxTCxLQUFLLEdBQUcsR0FBRyxNQUFNbzhELEVBQUVubUUsRUFBRWdFLEtBQUs4aEcsY0FBY3Q2QixFQUFFbXhCLE9BQU8zNEYsS0FBS3lnRyxPQUFPbHNGLGFBQWEsR0FBRyxNQUFNNHRELEdBQUcsTUFBTUEsRUFBRSxDQUFDLElBQUlua0UsRUFBRWdDLEtBQUt5Z0csT0FBT2xzRixPQUFPdlcsR0FBRyxNQUFNbWtFLEVBQUVuaUUsS0FBSzJnRyxXQUFXVyxhQUFhaUIsT0FBT3ZpRyxLQUFLMmdHLFdBQVdVLGFBQWFrQixPQUFPdm1HLEVBQUVnRSxLQUFLOGhHLGNBQWN0NkIsRUFBRXl1QyxNQUFNajRHLFFBQVFxOUQsRUFBRXI3RCxLQUFLMmdHLFdBQVd2M0QsVUFBVW01RCxVQUFVdm1HLEVBQUV1RCxFQUFFOEwsT0FBT204RCxFQUFFbXhCLE9BQU8zNEYsS0FBSzhoRyxjQUFjdDZCLEVBQUV5dUMsTUFBTTU2QyxHQUFHcjdELEtBQUs4aEcsY0FBY3Q2QixFQUFFd3VDLFVBQVUzNkMsSUFBSSxPQUFPci9ELEdBQUdxQixFQUFFbEQsVUFBVWsvRyx3QkFBd0IsU0FBU2wzQyxHQUFHLE9BQU8sSUFBSW5pRSxLQUFLd2dELFNBQVNrM0QsY0FBY2o3RyxRQUFRMGxFLE1BQU0sSUFBSW5pRSxLQUFLd2dELFNBQVNvM0Qsb0JBQW9CbjdHLFFBQVEwbEUsS0FBSyxJQUFJbmlFLEtBQUt3Z0QsU0FBU20zRCxZQUFZbDdHLFFBQVEwbEUsS0FBSzlrRSxFQUFFbEQsVUFBVTQrRyxrQkFBa0IsU0FBUzUyQyxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFLEdBQUcsR0FBR3RCLEdBQUcsTUFBTUEsRUFBRXFMLEtBQUssR0FBRy9KLEVBQUVnRSxLQUFLMmdHLFdBQVc2WCxxQkFBcUJqVyxZQUFZLEdBQUdoakcsRUFBRThMLE9BQU9tOEQsRUFBRTR1QyxXQUFXLE1BQU03MkcsRUFBRXk4RixPQUFPajJGLEtBQUssR0FBRyxDQUFDLElBQUlzMUQsRUFBRTk3RCxFQUFFeThGLE9BQU9qMkYsS0FBSytoRCxPQUFPLEdBQUc1ckQsY0FBYyxHQUFHLFdBQVdtL0QsR0FBRyxVQUFVQSxFQUFFLENBQUMsSUFBSXI5RCxFQUFFZ0MsS0FBS2s1Ryx1QkFBdUIvMkMsR0FBRyxHQUFHbmtFLEVBQUUsT0FBT0EsRUFBRXFOLEtBQUttOEQsRUFBRTZ0QyxLQUFLcjNHLEVBQUVoQyxFQUFFZ0UsS0FBS3lnRyxPQUFPOEMsVUFBVSxJQUFJemhHLE9BQU8sS0FBS3U1RCxFQUFFLGtCQUFrQixZQUFZcjdELEtBQUtxNUcsd0JBQXdCaCtDLEtBQUtyL0QsRUFBRWdFLEtBQUt5Z0csT0FBTzhDLFVBQVUsSUFBSXpoRyxPQUFPLEtBQUt1NUQsRUFBRSxrQkFBa0IsUUFBUSxPQUFPci9ELEVBQUVnRSxLQUFLOGhHLGNBQWN0NkIsRUFBRTZ0QyxLQUFLcjVHLEdBQUcsTUFBTXFCLEVBQUVsRCxVQUFVOCtHLG1CQUFtQixTQUFTOTJDLEdBQUcsSUFBSTVpRSxFQUFFLEdBQUcsR0FBR1MsS0FBS3dnRCxTQUFTNDNELCtCQUErQmoyQyxJQUFJbmlFLEtBQUt3Z0QsU0FBUzQzRCw4QkFBOEIsS0FBSzc0RyxFQUFFUyxLQUFLMmdHLFdBQVd5WCw4QkFBOEI3VixRQUFRaGpHLElBQUlBLEVBQUVTLEtBQUsyZ0csV0FBVzU4QixLQUFLdytCLFFBQVFoakcsRUFBRSxPQUFPUyxLQUFLOGhHLGNBQWN0NkIsRUFBRTZ0QyxLQUFLOTFHLElBQUk0aUUsRUFBRXhtQixRQUFRbzVDLFVBQVUxM0YsRUFBRThrRSxFQUFFeG1CLFFBQVF1NUMsTUFBTTF0QixLQUFLeHJFLEVBQUUsQ0FBQ3RCLEVBQUVBLEVBQUUsSUFBSUEsRUFBRSxVQUFLLEtBQVUyZ0UsRUFBRSxTQUFTOEcsR0FBRyxJQUFJNWlFLEVBQUU3RSxFQUFFLElBQUlzQixFQUFFdEIsRUFBRSxJQUFJLE1BQU0sQ0FBQzI0RixjQUFjLFNBQVNseEIsRUFBRXpuRSxHQUFHLE9BQU9zRCxFQUFFbWtFLEVBQUV6bkUsRUFBRTZFLEVBQUU0ekYsWUFBWW4zRixFQUFFbzNGLGlCQUFpQmoxRixNQUFNb0IsRUFBRXZELE1BQU1tbUUsRUFBRXhtQixRQUFRMGYsSUFBSSxTQUFTOEcsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXRCLEVBQUUsR0FBR3luRSxFQUFFeG1CLFNBQVMzL0MsRUFBRXlSLFNBQVN6UixHQUFHZ3dDLFNBQVMsQ0FBQ3U3RCxFQUFFLFNBQVNwbEMsRUFBRTVpRSxFQUFFN0UsRUFBRXNCLEVBQUVxL0QsR0FBRyxJQUFJcjlELEVBQUUybEMsRUFBRSxNQUFNcGtDLEVBQUVBLEVBQUU0aUUsRUFBRTJ2QyxhQUFhLEdBQUc1MUUsRUFBRWltQyxFQUFFMHZDLE9BQU9ycUMsRUFBRXJGLEVBQUUyd0IsaUJBQWlCNzBGLEVBQUVra0UsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxVQUFVLE9BQU92QixFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsU0FBUyxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksTUFBTSxPQUFPQSxFQUFFQyxFQUFFdkQsRUFBRSxVQUFVSixLQUFLcXBDLEVBQUUsT0FBTzNsQyxFQUFFLE1BQU11QixFQUFFdEIsRUFBRXNCLEVBQUUsU0FBU0EsR0FBR3RCLEVBQUVELEVBQUUsZUFBZUEsRUFBRSxDQUFDMlMsS0FBSyxTQUFTc0IsS0FBSyxHQUFHbFYsR0FBR29sRSxFQUFFNnZDLFFBQVEsRUFBRTMyQyxFQUFFLEdBQUdrM0IsUUFBUXB3QixFQUFFdGpFLEtBQUtnSCxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFVBQVUsT0FBT0EsRUFBRUMsRUFBRXZELEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLGlCQUFpQixDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksVUFBVXdwRSxFQUFFdHJDLEVBQUUsTUFBTTM4QixFQUFFdEIsRUFBRXNCLEVBQUUsUUFBUUEsRUFBRUEsSUFBSSxnQkFBZ0Jpb0UsRUFBRXRyQyxFQUFFLE1BQU0zOEIsRUFBRXRCLEVBQUVzQixFQUFFLFFBQVFBLEVBQUVBLElBQUksd0JBQXdCaW9HLEVBQUUsU0FBU3JsQyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRSxNQUFNLFVBQVUsT0FBT0EsR0FBR21rRSxFQUFFNHZDLGdCQUFnQixTQUFTNXZDLEVBQUU1aUUsR0FBRyxHQUFHL0YsT0FBT1csVUFBVXdDLGVBQWVyQyxLQUFLNm5FLEVBQUU1aUUsR0FBRyxPQUFPNGlFLEVBQUU1aUUsS0FBSzdFLEVBQUUsU0FBU0osS0FBSyxNQUFNaUYsRUFBRUEsRUFBRTRpRSxFQUFFMnZDLGFBQWEsR0FBRyxnQkFBZ0IsQ0FBQ25oRyxLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFlBQVkwcEcsRUFBRSxTQUFTdmxDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUUsTUFBTXBrQyxFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHNTFFLEVBQUVpbUMsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxVQUFVLE9BQU92QixFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsaUJBQWlCLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxXQUFXLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRXpILEVBQUV4aEMsRUFBRSxVQUFVSixLQUFLcXBDLEVBQUUsYUFBYSxNQUFNcGtDLEVBQUUyOEIsRUFBRTM4QixFQUFFLFFBQVFBLEVBQUUsQ0FBQ29SLEtBQUssU0FBU3NCLEtBQUssR0FBR3BNLEtBQUt3MUQsSUFBSSxDQUFDMXFELEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksbUJBQW1CMnpHLFNBQVMsQ0FBQyxFQUFFLFlBQVlDLEtBQUssU0FBU3p2QyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRTJsQyxFQUFFLE1BQU1wa0MsRUFBRUEsRUFBRTRpRSxFQUFFMnZDLGFBQWEsR0FBRzUxRSxFQUFFaW1DLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJLE9BQU8sT0FBT3ZCLEVBQUVrK0IsRUFBRXhoQyxFQUFFLE1BQU1KLEtBQUtxcEMsRUFBRSxNQUFNcGtDLEVBQUUyOEIsRUFBRTM4QixFQUFFLGlCQUFpQkEsRUFBRSxDQUFDb1IsS0FBSyxLQUFLc0IsS0FBSyxHQUFHbFYsR0FBR29sRSxFQUFFNnZDLFFBQVEsRUFBRTMyQyxFQUFFLEdBQUdrM0IsUUFBUXB3QixFQUFFdGpFLEtBQUtnSCxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFVBQVUsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFekgsRUFBRXhoQyxFQUFFLFVBQVVKLEtBQUtxcEMsRUFBRSxNQUFNcGtDLEVBQUUyOEIsRUFBRTM4QixFQUFFLFFBQVFBLEVBQUUsWUFBWSxDQUFDb1IsS0FBSyxTQUFTc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxJQUFJLENBQUMxcUQsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxNQUFNLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFVBQVVKLEtBQUtxcEMsRUFBRSxPQUFPM2xDLEVBQUUsTUFBTXVCLEVBQUUyOEIsRUFBRTM4QixFQUFFLFNBQVNBLEdBQUcyOEIsRUFBRWwrQixFQUFFLGVBQWVBLEVBQUUsQ0FBQzJTLEtBQUssU0FBU3NCLEtBQUssR0FBR2xWLEdBQUdvbEUsRUFBRTZ2QyxRQUFRLEVBQUUzMkMsRUFBRSxHQUFHazNCLFFBQVFwd0IsRUFBRXRqRSxLQUFLZ0gsS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxLQUFLLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLE1BQU1KLEtBQUtxcEMsRUFBRSxNQUFNcGtDLEVBQUUyOEIsRUFBRTM4QixFQUFFLFFBQVFBLEVBQUUsQ0FBQ29SLEtBQUssS0FBS3NCLEtBQUssR0FBR2xWLEdBQUdvbEUsRUFBRTZ2QyxRQUFRLEVBQUUzMkMsRUFBRSxHQUFHazNCLFFBQVFwd0IsRUFBRXRqRSxLQUFLZ0gsS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxVQUFVLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSx5QkFBeUIsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFVBQVUsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFFBQVEsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLHNCQUFzQixPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsc0JBQXNCLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxVQUFVLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxjQUFjLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxLQUFLLE9BQU9BLEVBQUVta0UsRUFBRTB2QyxPQUFPLE1BQU10eUcsRUFBRTI4QixFQUFFMzhCLEVBQUUsT0FBT0EsRUFBRUEsSUFBSXZCLEVBQUUsSUFBSSxzQkFBc0JpMEcsU0FBUSxLQUFNLFNBQVM5dkMsRUFBRTVpRSxFQUFFN0UsSUFBSTZFLEVBQUU3RSxFQUFFLEVBQUZBLEVBQUssSUFBS3NLLEtBQUssQ0FBQ205RCxFQUFFbm1FLEVBQUUscS9HQUFxL0csS0FBS21tRSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLElBQUk2RSxFQUFFN0UsRUFBRSxFQUFGQSxFQUFLLElBQUtzSyxLQUFLLENBQUNtOUQsRUFBRW5tRSxFQUFFLDZ1RUFBNnVFLEtBQUttbUUsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxHQUFHeW5FLEVBQUV4bUIsU0FBUzMvQyxFQUFFeVIsU0FBU3pSLEdBQUdnd0MsU0FBUyxDQUFDMmxFLFNBQVMsQ0FBQyxFQUFFLFlBQVlDLEtBQUssU0FBU3p2QyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRTJsQyxFQUFFLE1BQU1wa0MsRUFBRUEsRUFBRTRpRSxFQUFFMnZDLGFBQWEsR0FBRzUxRSxFQUFFaW1DLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJLE1BQU0sU0FBUyxPQUFPdkIsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLG9CQUFvQixDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksVUFBVSxPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsVUFBVSxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksV0FBVyxPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsMkJBQTJCLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxtQkFBbUIsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLGdCQUFnQixDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksd0NBQXdDLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxTQUFTLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSw0Q0FBNEMsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFNBQVMsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLDZDQUE2QyxPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsU0FBUyxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksMENBQTBDLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxpQkFBaUIsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLG1CQUFtQixPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUscUJBQXFCLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSx1QkFBdUIsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLGlCQUFpQixDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksVUFBVSxPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsWUFBWSxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksZUFBZSxPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsWUFBWSxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksY0FBYyxPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsT0FBTyxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksZUFBZSxPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsZUFBZSxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksc0JBQXNCLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxXQUFXLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxVQUFVLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxVQUFVLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxVQUFVLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxnQkFBZ0IsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLHNCQUFzQixPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsaUJBQWlCLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSw4QkFBOEIsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLG1CQUFtQixDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksOENBQThDaTBHLFNBQVEsS0FBTSxTQUFTOXZDLEVBQUU1aUUsRUFBRTdFLElBQUk2RSxFQUFFN0UsRUFBRSxFQUFGQSxFQUFLLElBQUtzSyxLQUFLLENBQUNtOUQsRUFBRW5tRSxFQUFFLG1zRkFBbXNGLEtBQUttbUUsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxHQUFHeW5FLEVBQUV4bUIsU0FBUzMvQyxFQUFFeVIsU0FBU3pSLEdBQUdnd0MsU0FBUyxDQUFDMmxFLFNBQVMsQ0FBQyxFQUFFLFlBQVlDLEtBQUssU0FBU3p2QyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRTJsQyxFQUFFLE1BQU1wa0MsRUFBRUEsRUFBRTRpRSxFQUFFMnZDLGFBQWEsR0FBRzUxRSxFQUFFaW1DLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJLE1BQU0sU0FBUyxPQUFPdkIsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFFBQVEsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLGlCQUFpQixPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsb0JBQW9CLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxXQUFXLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxhQUFhLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSw0QkFBNEIsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFdBQVcsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLGVBQWUsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFNBQVMsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFdBQVdpMEcsU0FBUSxLQUFNLFNBQVM5dkMsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXRCLEVBQUUsR0FBR3luRSxFQUFFeG1CLFNBQVMzL0MsRUFBRXlSLFNBQVN6UixHQUFHZ3dDLFNBQVMsQ0FBQ3U3RCxFQUFFLFNBQVNwbEMsRUFBRTVpRSxFQUFFN0UsRUFBRXNCLEVBQUVxL0QsR0FBRyxJQUFJcjlELEVBQUUybEMsRUFBRXcrQixFQUFFNHZDLGdCQUFnQixTQUFTNXZDLEVBQUU1aUUsR0FBRyxHQUFHL0YsT0FBT1csVUFBVXdDLGVBQWVyQyxLQUFLNm5FLEVBQUU1aUUsR0FBRyxPQUFPNGlFLEVBQUU1aUUsSUFBSSxNQUFNLFVBQVUsT0FBT3ZCLEVBQUUybEMsRUFBRWpwQyxFQUFFLFNBQVNKLEtBQUssTUFBTWlGLEVBQUVBLEVBQUU0aUUsRUFBRTJ2QyxhQUFhLEdBQUcsT0FBTyxDQUFDbmhHLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksSUFBSW1rRSxFQUFFMndCLGlCQUFpQjN3QixFQUFFMHZDLE9BQU8sTUFBTXR5RyxFQUFFb2tDLEVBQUVwa0MsRUFBRSxRQUFRQSxFQUFFQSxJQUFJLFdBQVdrb0csRUFBRSxTQUFTdGxDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUV3K0IsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxLQUFLLE9BQU92QixFQUFFMmxDLEVBQUVqcEMsRUFBRSxRQUFRSixLQUFLLE1BQU1pRixFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHLE1BQU12eUcsRUFBRW9rQyxFQUFFcGtDLEVBQUUsY0FBY0EsRUFBRSxDQUFDb1IsS0FBSyxPQUFPc0IsS0FBSyxHQUFHbFYsR0FBR29sRSxFQUFFNnZDLFFBQVEsRUFBRTMyQyxFQUFFLEdBQUdrM0IsUUFBUXB3QixFQUFFdGpFLEtBQUtnSCxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLEtBQUswcEcsRUFBRSxTQUFTdmxDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUV3K0IsRUFBRTB2QyxPQUFPMzFFLEVBQUVpbUMsRUFBRTJ3QixpQkFBaUJ0ckIsRUFBRXJGLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJLE1BQU0sYUFBYSxPQUFPdkIsRUFBRXdwRSxFQUFFOXNFLEVBQUUsU0FBU0osS0FBSyxNQUFNaUYsRUFBRUEsRUFBRTRpRSxFQUFFMnZDLGFBQWEsR0FBRyxNQUFNLENBQUNuaEcsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxJQUFJaytCLEVBQUV5SCxFQUFFMDNCLEdBQUdtTSxFQUFFbk0sRUFBRSxPQUFPOTdELElBQUksWUFBWTI4QixFQUFFeUgsRUFBRXBrQyxFQUFFQSxJQUFJLGVBQWVxb0csRUFBRSxTQUFTemxDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsTUFBTSw2QkFBNkJ5c0MsRUFBRSxTQUFTM2xDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUV3K0IsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxLQUFLLE9BQU92QixFQUFFMmxDLEVBQUVqcEMsRUFBRSxRQUFRSixLQUFLLE1BQU1pRixFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHLE1BQU12eUcsRUFBRW9rQyxFQUFFcGtDLEVBQUUsY0FBY0EsRUFBRSxDQUFDb1IsS0FBSyxPQUFPc0IsS0FBSyxHQUFHbFYsR0FBR29sRSxFQUFFNnZDLFFBQVEsRUFBRTMyQyxFQUFFLEdBQUdrM0IsUUFBUXB3QixFQUFFdGpFLEtBQUtnSCxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLEtBQUtzN0csR0FBRyxTQUFTbjNDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUV3K0IsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxVQUFVLE9BQU92QixFQUFFMmxDLEVBQUVqcEMsRUFBRSxTQUFTSixLQUFLLE1BQU1pRixFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHLFdBQVcsQ0FBQ25oRyxLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLElBQUlta0UsRUFBRTJ3QixpQkFBaUIzd0IsRUFBRTB2QyxPQUFPLE1BQU10eUcsRUFBRW9rQyxFQUFFcGtDLEVBQUUsVUFBVUEsRUFBRUEsSUFBSSxXQUFXb3lHLFNBQVMsQ0FBQyxFQUFFLFlBQVlDLEtBQUssU0FBU3p2QyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRTJsQyxFQUFFLE1BQU1wa0MsRUFBRUEsRUFBRTRpRSxFQUFFMnZDLGFBQWEsR0FBRzUxRSxFQUFFaW1DLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJLE1BQU0sU0FBUyxPQUFPdkIsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLE9BQU8sQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFVBQVUsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLGFBQWEsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLElBQUlta0UsRUFBRTJ3QixpQkFBaUIzd0IsRUFBRTB2QyxPQUFPLE1BQU10eUcsRUFBRTI4QixFQUFFMzhCLEVBQUUsT0FBT0EsRUFBRUEsSUFBSSxXQUFXLE9BQU92QixFQUFFaytCLEVBQUV4aEMsRUFBRSxNQUFNSixLQUFLcXBDLEVBQUUsTUFBTXBrQyxFQUFFMjhCLEVBQUUzOEIsRUFBRSxRQUFRQSxFQUFFLENBQUNvUixLQUFLLEtBQUtzQixLQUFLLEdBQUdsVixHQUFHb2xFLEVBQUU2dkMsUUFBUSxFQUFFMzJDLEVBQUUsR0FBR2szQixRQUFRcHdCLEVBQUV0akUsS0FBS2dILEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksVUFBVSxPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsVUFBVSxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksb0NBQW9DLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxVQUFVLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxhQUFhLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLE1BQU1KLEtBQUtxcEMsRUFBRSxNQUFNcGtDLEVBQUUyOEIsRUFBRTM4QixFQUFFLGNBQWNBLEVBQUUsQ0FBQ29SLEtBQUssS0FBS3NCLEtBQUssR0FBR2xWLEdBQUdvbEUsRUFBRTZ2QyxRQUFRLEVBQUUzMkMsRUFBRSxHQUFHazNCLFFBQVFwd0IsRUFBRTZ2QyxRQUFRLEVBQUUzMkMsRUFBRSxHQUFHeDFELEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUkscURBQXFELE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxVQUFVLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxhQUFhLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLE1BQU1KLEtBQUtxcEMsRUFBRSxNQUFNcGtDLEVBQUUyOEIsRUFBRTM4QixFQUFFLGNBQWNBLEVBQUUsQ0FBQ29SLEtBQUssS0FBS3NCLEtBQUssR0FBR2xWLEdBQUdvbEUsRUFBRTZ2QyxRQUFRLEVBQUUzMkMsRUFBRSxHQUFHazNCLFFBQVFwd0IsRUFBRTZ2QyxRQUFRLEVBQUUzMkMsRUFBRSxHQUFHeDFELEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksNEJBQTRCLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLE1BQU1KLEtBQUtxcEMsRUFBRSxNQUFNcGtDLEVBQUUyOEIsRUFBRTM4QixFQUFFLFVBQVVBLEVBQUUsQ0FBQ29SLEtBQUssS0FBS3NCLEtBQUssR0FBR2xWLEdBQUdvbEUsRUFBRTZ2QyxRQUFRLEdBQUczMkMsRUFBRSxHQUFHazNCLFFBQVFwd0IsRUFBRXRqRSxLQUFLZ0gsS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxnQkFBZ0IsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLE9BQU8sQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLDJCQUEyQmkwRyxTQUFRLEtBQU0sU0FBUzl2QyxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxHQUFHeW5FLEVBQUV4bUIsU0FBUzMvQyxFQUFFeVIsU0FBU3pSLEdBQUdnd0MsU0FBUyxDQUFDdTdELEVBQUUsU0FBU3BsQyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRTJsQyxFQUFFdytCLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJLE1BQU0sS0FBSyxPQUFPdkIsRUFBRTJsQyxFQUFFanBDLEVBQUUsUUFBUUosS0FBSyxNQUFNaUYsRUFBRUEsRUFBRTRpRSxFQUFFMnZDLGFBQWEsR0FBRyxNQUFNdnlHLEVBQUVva0MsRUFBRXBrQyxFQUFFLFlBQVlBLEVBQUUsQ0FBQ29SLEtBQUssT0FBT3NCLEtBQUssR0FBR2xWLEdBQUdvbEUsRUFBRTZ2QyxRQUFRLEVBQUUzMkMsRUFBRSxHQUFHazNCLFFBQVFwd0IsRUFBRXRqRSxLQUFLZ0gsS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxLQUFLd3BHLEVBQUUsU0FBU3JsQyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRTJsQyxFQUFFLE1BQU1wa0MsRUFBRUEsRUFBRTRpRSxFQUFFMnZDLGFBQWEsR0FBRzUxRSxFQUFFaW1DLEVBQUUwdkMsT0FBT3JxQyxFQUFFckYsRUFBRTJ3QixpQkFBaUI3MEYsRUFBRWtrRSxFQUFFNHZDLGdCQUFnQixTQUFTNXZDLEVBQUU1aUUsR0FBRyxHQUFHL0YsT0FBT1csVUFBVXdDLGVBQWVyQyxLQUFLNm5FLEVBQUU1aUUsR0FBRyxPQUFPNGlFLEVBQUU1aUUsSUFBSSxNQUFNLDhCQUE4QixPQUFPdkIsRUFBRUMsRUFBRXZELEVBQUUsTUFBTUosS0FBS3FwQyxFQUFFLE1BQU1wa0MsRUFBRXRCLEVBQUVzQixFQUFFLFVBQVVBLEVBQUUsQ0FBQ29SLEtBQUssS0FBS3NCLEtBQUssR0FBR2xWLEdBQUdvbEUsRUFBRTZ2QyxRQUFRLEVBQUUzMkMsRUFBRSxHQUFHazNCLFFBQVFwd0IsRUFBRXRqRSxLQUFLZ0gsS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxjQUFjd3BFLEVBQUV0ckMsRUFBRW0vQixHQUFHcDlELEVBQUVvOUQsRUFBRSxPQUFPOTdELElBQUksWUFBWSxPQUFPdkIsRUFBRUMsRUFBRXZELEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLE9BQU8sQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLElBQUl3cEUsRUFBRXRyQyxFQUFFLE1BQU0zOEIsRUFBRXRCLEVBQUVzQixFQUFFLFFBQVFBLEVBQUVBLElBQUksaUJBQWlCLE9BQU92QixFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsU0FBUyxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksSUFBSXdwRSxFQUFFdHJDLEVBQUUsTUFBTTM4QixFQUFFdEIsRUFBRXNCLEVBQUUsVUFBVUEsRUFBRUEsSUFBSSxpQkFBaUIsT0FBT3ZCLEVBQUVDLEVBQUV2RCxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxTQUFTLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxJQUFJd3BFLEVBQUV0ckMsRUFBRSxNQUFNMzhCLEVBQUV0QixFQUFFc0IsRUFBRSxVQUFVQSxFQUFFQSxJQUFJLGlCQUFpQixPQUFPdkIsRUFBRUMsRUFBRXZELEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLE9BQU8sQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLElBQUl3cEUsRUFBRXRyQyxFQUFFLE1BQU0zOEIsRUFBRXRCLEVBQUVzQixFQUFFLFdBQVdBLEVBQUVBLElBQUksaUJBQWlCLE9BQU92QixFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsT0FBTyxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksSUFBSXdwRSxFQUFFdHJDLEVBQUUsTUFBTTM4QixFQUFFdEIsRUFBRXNCLEVBQUUsUUFBUUEsRUFBRUEsSUFBSSxpQkFBaUIsT0FBT3ZCLEVBQUVDLEVBQUV2RCxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxPQUFPLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxJQUFJd3BFLEVBQUV0ckMsRUFBRSxNQUFNMzhCLEVBQUV0QixFQUFFc0IsRUFBRSxlQUFlQSxFQUFFQSxJQUFJLGlCQUFpQmtvRyxFQUFFLFNBQVN0bEMsRUFBRTVpRSxFQUFFN0UsRUFBRXNCLEVBQUVxL0QsR0FBRyxNQUFNLGVBQWVzc0MsRUFBRSxTQUFTeGxDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFLE1BQU0sZUFBZSxPQUFPQSxHQUFHbWtFLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxLQUFLN0UsRUFBRSxTQUFTSixLQUFLLE1BQU1pRixFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHLE9BQU8sQ0FBQ25oRyxLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLHVCQUF1QjJ6RyxTQUFTLENBQUMsRUFBRSxZQUFZQyxLQUFLLFNBQVN6dkMsRUFBRTVpRSxFQUFFN0UsRUFBRXNCLEVBQUVxL0QsR0FBRyxJQUFJcjlELEVBQUUybEMsRUFBRXcrQixFQUFFNHZDLGdCQUFnQixTQUFTNXZDLEVBQUU1aUUsR0FBRyxHQUFHL0YsT0FBT1csVUFBVXdDLGVBQWVyQyxLQUFLNm5FLEVBQUU1aUUsR0FBRyxPQUFPNGlFLEVBQUU1aUUsSUFBSSxPQUFPLE9BQU92QixFQUFFMmxDLEVBQUVqcEMsRUFBRSxNQUFNSixLQUFLLE1BQU1pRixFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHLE1BQU12eUcsRUFBRW9rQyxFQUFFcGtDLEVBQUUsWUFBWUEsRUFBRSxDQUFDb1IsS0FBSyxLQUFLc0IsS0FBSyxHQUFHbFYsR0FBR29sRSxFQUFFNnZDLFFBQVEsRUFBRTMyQyxFQUFFLEdBQUdrM0IsUUFBUXB3QixFQUFFNnZDLFFBQVEsRUFBRTMyQyxFQUFFLEdBQUd4MUQsS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSWkwRyxTQUFRLEtBQU0sU0FBUzl2QyxFQUFFNWlFLEVBQUU3RSxJQUFJNkUsRUFBRTdFLEVBQUUsRUFBRkEsRUFBSyxJQUFLc0ssS0FBSyxDQUFDbTlELEVBQUVubUUsRUFBRSx5c0JBQXlzQixLQUFLbW1FLEVBQUV4bUIsUUFBUXA4QyxHQUFHLFNBQVM0aUUsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXRCLEVBQUUsR0FBR3luRSxFQUFFeG1CLFNBQVMzL0MsRUFBRXlSLFNBQVN6UixHQUFHZ3dDLFNBQVMsQ0FBQzJsRSxTQUFTLENBQUMsRUFBRSxZQUFZQyxLQUFLLFNBQVN6dkMsRUFBRTVpRSxFQUFFN0UsRUFBRXNCLEVBQUVxL0QsR0FBRyxJQUFJcjlELEVBQUUybEMsRUFBRSxNQUFNcGtDLEVBQUVBLEVBQUU0aUUsRUFBRTJ2QyxhQUFhLEdBQUc1MUUsRUFBRWltQyxFQUFFNHZDLGdCQUFnQixTQUFTNXZDLEVBQUU1aUUsR0FBRyxHQUFHL0YsT0FBT1csVUFBVXdDLGVBQWVyQyxLQUFLNm5FLEVBQUU1aUUsR0FBRyxPQUFPNGlFLEVBQUU1aUUsSUFBSSxNQUFNLFNBQVMsT0FBT3ZCLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxxQkFBcUIsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFVBQVUsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFlBQVksQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFVBQVUsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFNBQVMsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLGdCQUFnQixPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsU0FBUyxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksZ0JBQWdCLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxVQUFVLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxnQkFBZ0IsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFVBQVUsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLHNCQUFzQixPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsT0FBTyxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksaUJBQWlCaTBHLFNBQVEsS0FBTSxTQUFTOXZDLEVBQUU1aUUsRUFBRTdFLElBQUk2RSxFQUFFN0UsRUFBRSxFQUFGQSxFQUFLLElBQUtzSyxLQUFLLENBQUNtOUQsRUFBRW5tRSxFQUFFLCtoS0FBK2hLLEtBQUttbUUsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxHQUFHeW5FLEVBQUV4bUIsU0FBUzMvQyxFQUFFeVIsU0FBU3pSLEdBQUdnd0MsU0FBUyxDQUFDdTdELEVBQUUsU0FBU3BsQyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRTJsQyxFQUFFLE1BQU1wa0MsRUFBRUEsRUFBRTRpRSxFQUFFMnZDLGFBQWEsR0FBRzUxRSxFQUFFaW1DLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJLE1BQU0sU0FBUyxPQUFPdkIsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFVBQVUsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLE1BQU0sT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsUUFBUUosS0FBS3FwQyxFQUFFLE1BQU1wa0MsRUFBRTI4QixFQUFFMzhCLEVBQUUsV0FBV0EsRUFBRSxDQUFDb1IsS0FBSyxPQUFPc0IsS0FBSyxHQUFHbFYsR0FBR29sRSxFQUFFNnZDLFFBQVEsRUFBRTMyQyxFQUFFLEdBQUdrM0IsUUFBUXB3QixFQUFFdGpFLEtBQUtnSCxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFdBQVd3cEcsRUFBRSxTQUFTcmxDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUUsTUFBTXBrQyxFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHNTFFLEVBQUVpbUMsRUFBRTB2QyxPQUFPcnFDLEVBQUVyRixFQUFFNHZDLGdCQUFnQixTQUFTNXZDLEVBQUU1aUUsR0FBRyxHQUFHL0YsT0FBT1csVUFBVXdDLGVBQWVyQyxLQUFLNm5FLEVBQUU1aUUsR0FBRyxPQUFPNGlFLEVBQUU1aUUsSUFBSSxNQUFNLGNBQWMsT0FBT3ZCLEVBQUV3cEUsRUFBRTlzRSxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxTQUFTLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxjQUFjbWtFLEVBQUUyd0IsaUJBQWlCNTJELEVBQUUsTUFBTTM4QixFQUFFaW9FLEVBQUVqb0UsRUFBRSxPQUFPQSxFQUFFQSxJQUFJLE1BQU0sT0FBT3ZCLEVBQUVrK0IsRUFBRSxNQUFNMzhCLEVBQUVpb0UsRUFBRWpvRSxFQUFFLFFBQVFBLEVBQUVBLElBQUl2QixFQUFFLElBQUksZ0JBQWdCLE9BQU9BLEVBQUV3cEUsRUFBRTlzRSxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxtQkFBbUIsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLGtCQUFrQjBwRyxFQUFFLFNBQVN2bEMsRUFBRTVpRSxFQUFFN0UsRUFBRXNCLEVBQUVxL0QsR0FBRyxJQUFJcjlELEVBQUUybEMsRUFBRSxNQUFNcGtDLEVBQUVBLEVBQUU0aUUsRUFBRTJ2QyxhQUFhLEdBQUc1MUUsRUFBRWltQyxFQUFFNHZDLGdCQUFnQixTQUFTNXZDLEVBQUU1aUUsR0FBRyxHQUFHL0YsT0FBT1csVUFBVXdDLGVBQWVyQyxLQUFLNm5FLEVBQUU1aUUsR0FBRyxPQUFPNGlFLEVBQUU1aUUsSUFBSSxNQUFNLFNBQVMsT0FBT3ZCLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxXQUFXLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxNQUFNLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFFBQVFKLEtBQUtxcEMsRUFBRSxNQUFNcGtDLEVBQUUyOEIsRUFBRTM4QixFQUFFLFlBQVlBLEVBQUUsQ0FBQ29SLEtBQUssT0FBT3NCLEtBQUssR0FBR2xWLEdBQUdvbEUsRUFBRTZ2QyxRQUFRLEVBQUUzMkMsRUFBRSxHQUFHazNCLFFBQVFwd0IsRUFBRXRqRSxLQUFLZ0gsS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxXQUFXMnBHLEVBQUUsU0FBU3hsQyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRTJsQyxFQUFFLE1BQU1wa0MsRUFBRUEsRUFBRTRpRSxFQUFFMnZDLGFBQWEsR0FBRzUxRSxFQUFFaW1DLEVBQUUwdkMsT0FBT3JxQyxFQUFFckYsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSw0QkFBNEIsT0FBT3ZCLEVBQUV3cEUsRUFBRTlzRSxFQUFFLE1BQU1KLEtBQUtxcEMsRUFBRSxNQUFNcGtDLEVBQUVpb0UsRUFBRWpvRSxFQUFFLFNBQVNBLEVBQUUsQ0FBQ29SLEtBQUssS0FBS3NCLEtBQUssR0FBR2xWLEdBQUdvbEUsRUFBRTZ2QyxRQUFRLEVBQUUzMkMsRUFBRSxHQUFHazNCLFFBQVFwd0IsRUFBRXRqRSxLQUFLZ0gsS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxLQUFLLE9BQU9BLEVBQUV3cEUsRUFBRTlzRSxFQUFFLE1BQU1KLEtBQUtxcEMsRUFBRSxNQUFNcGtDLEVBQUVpb0UsRUFBRWpvRSxFQUFFLFFBQVFBLEVBQUUsQ0FBQ29SLEtBQUssS0FBS3NCLEtBQUssR0FBR2xWLEdBQUdvbEUsRUFBRTZ2QyxRQUFRLEVBQUUzMkMsRUFBRSxHQUFHazNCLFFBQVFwd0IsRUFBRXRqRSxLQUFLZ0gsS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxlQUFlbWtFLEVBQUUyd0IsaUJBQWlCNTJELEVBQUUsTUFBTTM4QixFQUFFaW9FLEVBQUVqb0UsRUFBRSxPQUFPQSxFQUFFQSxJQUFJLE1BQU0sT0FBT3ZCLEVBQUVrK0IsRUFBRSxNQUFNMzhCLEVBQUVpb0UsRUFBRWpvRSxFQUFFLFFBQVFBLEVBQUVBLElBQUl2QixFQUFFLElBQUksVUFBVTRwRyxFQUFFLFNBQVN6bEMsRUFBRTVpRSxFQUFFN0UsRUFBRXNCLEVBQUVxL0QsR0FBRyxNQUFNLGVBQWV5c0MsRUFBRSxTQUFTM2xDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsTUFBTSx1QkFBdUJpK0MsR0FBRyxTQUFTbjNDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUV3K0IsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxLQUFLLE9BQU92QixFQUFFMmxDLEVBQUVqcEMsRUFBRSxRQUFRSixLQUFLLE1BQU1pRixFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHLE1BQU12eUcsRUFBRW9rQyxFQUFFcGtDLEVBQUUsY0FBY0EsRUFBRSxDQUFDb1IsS0FBSyxPQUFPc0IsS0FBSyxHQUFHbFYsR0FBR29sRSxFQUFFNnZDLFFBQVEsR0FBRzMyQyxFQUFFLEdBQUdrM0IsUUFBUXB3QixFQUFFdGpFLEtBQUtnSCxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLEtBQUt1N0csR0FBRyxTQUFTcDNDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUV3K0IsRUFBRTB2QyxPQUFPMzFFLEVBQUVpbUMsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSwrQ0FBK0M0aUUsRUFBRTJ3QixpQkFBaUJudkQsRUFBRSxNQUFNcGtDLEVBQUUyOEIsRUFBRTM4QixFQUFFLFFBQVFBLEVBQUVBLElBQUksd0NBQXdDLE9BQU92QixFQUFFMmxDLEVBQUUsTUFBTXBrQyxFQUFFMjhCLEVBQUUzOEIsRUFBRSxTQUFTQSxFQUFFQSxJQUFJdkIsRUFBRSxJQUFJLGVBQWV3N0csR0FBRyxTQUFTcjNDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsTUFBTSw2QkFBNkJvK0MsR0FBRyxTQUFTdDNDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUUsTUFBTXBrQyxFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHNTFFLEVBQUVpbUMsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxVQUFVLE9BQU92QixFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsaUJBQWlCLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSx5QkFBeUIsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLGdCQUFnQixDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksTUFBTSxPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxRQUFRSixLQUFLcXBDLEVBQUUsTUFBTXBrQyxFQUFFMjhCLEVBQUUzOEIsRUFBRSxVQUFVQSxFQUFFLENBQUNvUixLQUFLLE9BQU9zQixLQUFLLEdBQUdsVixHQUFHb2xFLEVBQUU2dkMsUUFBUSxHQUFHMzJDLEVBQUUsR0FBR2szQixRQUFRcHdCLEVBQUV0akUsS0FBS2dILEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksa0JBQWtCMDdHLEdBQUcsU0FBU3YzQyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRTJsQyxFQUFFLE1BQU1wa0MsRUFBRUEsRUFBRTRpRSxFQUFFMnZDLGFBQWEsR0FBRzUxRSxFQUFFaW1DLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJLE1BQU0sVUFBVSxPQUFPdkIsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLGNBQWMsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFNBQVNta0UsRUFBRTJ3QixpQkFBaUIzd0IsRUFBRTB2QyxPQUFPLE1BQU10eUcsRUFBRTI4QixFQUFFMzhCLEVBQUUsZ0JBQWdCQSxFQUFFQSxJQUFJLGFBQWEsT0FBT3ZCLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFFBQVFKLEtBQUtxcEMsRUFBRSxNQUFNcGtDLEVBQUUyOEIsRUFBRTM4QixFQUFFLFNBQVNBLEVBQUUsQ0FBQ29SLEtBQUssT0FBT3NCLEtBQUssR0FBR2xWLEdBQUdvbEUsRUFBRTZ2QyxRQUFRLEdBQUczMkMsRUFBRSxHQUFHazNCLFFBQVFwd0IsRUFBRXRqRSxLQUFLZ0gsS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSx3QkFBd0IyN0csR0FBRyxTQUFTeDNDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUV3K0IsRUFBRTB2QyxPQUFPMzFFLEVBQUVpbUMsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxVQUFVLE9BQU92QixFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLLE1BQU1pRixFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHLE9BQU8sQ0FBQ25oRyxLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFVBQVVta0UsRUFBRTJ3QixpQkFBaUJudkQsRUFBRTAzQixHQUFHbi9CLEVBQUVtL0IsRUFBRSxPQUFPOTdELElBQUksYUFBYSxPQUFPdkIsRUFBRTJsQyxFQUFFcGtDLEVBQUVBLElBQUl2QixFQUFFLElBQUksWUFBWTQ3RyxHQUFHLFNBQVN6M0MsRUFBRTVpRSxFQUFFN0UsRUFBRXNCLEVBQUVxL0QsR0FBRyxJQUFJcjlELEVBQUUybEMsRUFBRSxNQUFNcGtDLEVBQUVBLEVBQUU0aUUsRUFBRTJ2QyxhQUFhLEdBQUc1MUUsRUFBRWltQyxFQUFFMHZDLE9BQU9ycUMsRUFBRXJGLEVBQUUyd0IsaUJBQWlCNzBGLEVBQUVra0UsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxVQUFVLE9BQU92QixFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUseUJBQXlCLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSx3QkFBd0IsT0FBT0EsRUFBRUMsRUFBRXZELEVBQUUsTUFBTUosS0FBS3FwQyxFQUFFLE1BQU1wa0MsRUFBRXRCLEVBQUVzQixFQUFFLHNCQUFzQkEsRUFBRSxDQUFDb1IsS0FBSyxLQUFLc0IsS0FBSyxHQUFHbFYsR0FBR29sRSxFQUFFNnZDLFFBQVEsR0FBRzMyQyxFQUFFLEdBQUdrM0IsUUFBUXB3QixFQUFFNnZDLFFBQVEsR0FBRzMyQyxFQUFFLEdBQUd4MUQsS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxVQUFVLE9BQU9BLEVBQUVDLEVBQUV2RCxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSw0QkFBNEIsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFdBQVcsT0FBT0EsRUFBRUMsRUFBRXZELEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLGNBQWMsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLG1CQUFtQixPQUFPQSxFQUFFQyxFQUFFdkQsRUFBRSxNQUFNSixLQUFLcXBDLEVBQUUsTUFBTXBrQyxFQUFFdEIsRUFBRXNCLEVBQUUsOEJBQThCQSxFQUFFLENBQUNvUixLQUFLLEtBQUtzQixLQUFLLEdBQUdsVixHQUFHb2xFLEVBQUU2dkMsUUFBUSxHQUFHMzJDLEVBQUUsR0FBR2szQixRQUFRcHdCLEVBQUV0akUsS0FBS2dILEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksZUFBZSxPQUFPQSxFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsWUFBWSxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksTUFBTSxPQUFPQSxFQUFFQyxFQUFFdkQsRUFBRSxNQUFNSixLQUFLcXBDLEVBQUUsT0FBTzNsQyxFQUFFLE1BQU11QixFQUFFdEIsRUFBRXNCLEVBQUUsWUFBWUEsR0FBR3RCLEVBQUVELEVBQUUsWUFBWUEsRUFBRSxDQUFDMlMsS0FBSyxLQUFLc0IsS0FBSyxHQUFHbFYsR0FBR29sRSxFQUFFNnZDLFFBQVEsR0FBRzMyQyxFQUFFLEdBQUdrM0IsUUFBUXB3QixFQUFFdGpFLEtBQUtnSCxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFNBQVMsT0FBT0EsRUFBRUMsRUFBRXZELEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFNBQVMsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFVBQVUsT0FBT0EsRUFBRUMsRUFBRXZELEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFFBQVEsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLHNCQUFzQixPQUFPQSxFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsTUFBTSxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksSUFBSXdwRSxFQUFFdHJDLEVBQUUsT0FBT2wrQixFQUFFLE9BQU9BLEVBQUUsTUFBTXVCLEVBQUV0QixFQUFFc0IsRUFBRSxZQUFZQSxHQUFHdEIsRUFBRUQsRUFBRSxVQUFVQSxHQUFHQyxFQUFFRCxFQUFFLE9BQU9BLEVBQUV1QixJQUFJLG1CQUFtQixPQUFPdkIsRUFBRUMsRUFBRXZELEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLE9BQU8sQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLElBQUl3cEUsRUFBRXRyQyxFQUFFLE9BQU9sK0IsRUFBRSxPQUFPQSxFQUFFLE1BQU11QixFQUFFdEIsRUFBRXNCLEVBQUUsWUFBWUEsR0FBR3RCLEVBQUVELEVBQUUsVUFBVUEsR0FBR0MsRUFBRUQsRUFBRSxRQUFRQSxFQUFFdUIsSUFBSSxlQUFlLE9BQU92QixFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsU0FBUyxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksVUFBVSxPQUFPQSxFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsUUFBUSxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksc0JBQXNCLE9BQU9BLEVBQUVDLEVBQUV2RCxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxNQUFNLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxJQUFJd3BFLEVBQUV0ckMsRUFBRSxPQUFPbCtCLEVBQUUsT0FBT0EsRUFBRSxNQUFNdUIsRUFBRXRCLEVBQUVzQixFQUFFLFlBQVlBLEdBQUd0QixFQUFFRCxFQUFFLFVBQVVBLEdBQUdDLEVBQUVELEVBQUUsT0FBT0EsRUFBRXVCLElBQUksbUJBQW1CLE9BQU92QixFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsT0FBTyxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksSUFBSXdwRSxFQUFFdHJDLEVBQUUsT0FBT2wrQixFQUFFLE9BQU9BLEVBQUUsTUFBTXVCLEVBQUV0QixFQUFFc0IsRUFBRSxZQUFZQSxHQUFHdEIsRUFBRUQsRUFBRSxVQUFVQSxHQUFHQyxFQUFFRCxFQUFFLFFBQVFBLEVBQUV1QixJQUFJLGVBQWUsT0FBT3ZCLEVBQUVDLEVBQUV2RCxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxVQUFVLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxVQUFVLE9BQU9BLEVBQUVDLEVBQUV2RCxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxRQUFRLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSx1QkFBdUIsT0FBT0EsRUFBRUMsRUFBRXZELEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLE1BQU0sQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLElBQUl3cEUsRUFBRXRyQyxFQUFFLE9BQU9sK0IsRUFBRSxPQUFPQSxFQUFFLE1BQU11QixFQUFFdEIsRUFBRXNCLEVBQUUsWUFBWUEsR0FBR3RCLEVBQUVELEVBQUUsV0FBV0EsR0FBR0MsRUFBRUQsRUFBRSxPQUFPQSxFQUFFdUIsSUFBSSxtQkFBbUIsT0FBT3ZCLEVBQUVDLEVBQUV2RCxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxPQUFPLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxJQUFJd3BFLEVBQUV0ckMsRUFBRSxPQUFPbCtCLEVBQUUsT0FBT0EsRUFBRSxNQUFNdUIsRUFBRXRCLEVBQUVzQixFQUFFLFlBQVlBLEdBQUd0QixFQUFFRCxFQUFFLFdBQVdBLEdBQUdDLEVBQUVELEVBQUUsUUFBUUEsRUFBRXVCLElBQUksZUFBZSxPQUFPdkIsRUFBRUMsRUFBRXZELEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFVBQVUsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFVBQVV3cEUsRUFBRXRyQyxFQUFFLE9BQU9sK0IsRUFBRSxPQUFPQSxFQUFFLE1BQU11QixFQUFFdEIsRUFBRXNCLEVBQUUsWUFBWUEsR0FBR3RCLEVBQUVELEVBQUUsV0FBV0EsR0FBR0MsRUFBRUQsRUFBRSxTQUFTQSxFQUFFdUIsSUFBSSw2QkFBNkJpb0UsRUFBRXRyQyxFQUFFLE9BQU9sK0IsRUFBRSxPQUFPQSxFQUFFLE1BQU11QixFQUFFdEIsRUFBRXNCLEVBQUUsWUFBWUEsR0FBR3RCLEVBQUVELEVBQUUsV0FBV0EsR0FBR0MsRUFBRUQsRUFBRSxVQUFVQSxFQUFFdUIsSUFBSSxzQkFBc0IsT0FBT3ZCLEVBQUVDLEVBQUV2RCxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxRQUFRLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxJQUFJd3BFLEVBQUV0ckMsRUFBRSxPQUFPbCtCLEVBQUUsT0FBT0EsRUFBRSxNQUFNdUIsRUFBRXRCLEVBQUVzQixFQUFFLFlBQVlBLEdBQUd0QixFQUFFRCxFQUFFLFdBQVdBLEdBQUdDLEVBQUVELEVBQUUsU0FBU0EsRUFBRXVCLElBQUksbUJBQW1CLE9BQU92QixFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsU0FBUyxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksSUFBSXdwRSxFQUFFdHJDLEVBQUUsT0FBT2wrQixFQUFFLE9BQU9BLEVBQUUsTUFBTXVCLEVBQUV0QixFQUFFc0IsRUFBRSxZQUFZQSxHQUFHdEIsRUFBRUQsRUFBRSxXQUFXQSxHQUFHQyxFQUFFRCxFQUFFLFVBQVVBLEVBQUV1QixJQUFJLHFCQUFxQixPQUFPdkIsRUFBRUMsRUFBRXZELEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFFBQVEsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLElBQUl3cEUsRUFBRXRyQyxFQUFFLE9BQU9sK0IsRUFBRSxPQUFPQSxFQUFFLE1BQU11QixFQUFFdEIsRUFBRXNCLEVBQUUsWUFBWUEsR0FBR3RCLEVBQUVELEVBQUUsVUFBVUEsR0FBR0MsRUFBRUQsRUFBRSxTQUFTQSxFQUFFdUIsSUFBSSxtQkFBbUIsT0FBT3ZCLEVBQUVDLEVBQUV2RCxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxTQUFTLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxJQUFJd3BFLEVBQUV0ckMsRUFBRSxPQUFPbCtCLEVBQUUsT0FBT0EsRUFBRSxNQUFNdUIsRUFBRXRCLEVBQUVzQixFQUFFLFlBQVlBLEdBQUd0QixFQUFFRCxFQUFFLFVBQVVBLEdBQUdDLEVBQUVELEVBQUUsVUFBVUEsRUFBRXVCLElBQUkscUJBQXFCLE9BQU92QixFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsUUFBUSxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksSUFBSXdwRSxFQUFFdHJDLEVBQUUsT0FBT2wrQixFQUFFLE9BQU9BLEVBQUUsTUFBTXVCLEVBQUV0QixFQUFFc0IsRUFBRSxZQUFZQSxHQUFHdEIsRUFBRUQsRUFBRSxVQUFVQSxHQUFHQyxFQUFFRCxFQUFFLFNBQVNBLEVBQUV1QixJQUFJLG1CQUFtQixPQUFPdkIsRUFBRUMsRUFBRXZELEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFNBQVMsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLElBQUl3cEUsRUFBRXRyQyxFQUFFLE9BQU9sK0IsRUFBRSxPQUFPQSxFQUFFLE1BQU11QixFQUFFdEIsRUFBRXNCLEVBQUUsWUFBWUEsR0FBR3RCLEVBQUVELEVBQUUsVUFBVUEsR0FBR0MsRUFBRUQsRUFBRSxVQUFVQSxFQUFFdUIsSUFBSSxnQkFBZ0IsT0FBT3ZCLEVBQUVDLEVBQUV2RCxFQUFFLE1BQU1KLEtBQUtxcEMsRUFBRSxPQUFPM2xDLEVBQUUsTUFBTXVCLEVBQUV0QixFQUFFc0IsRUFBRSxZQUFZQSxHQUFHdEIsRUFBRUQsRUFBRSxZQUFZQSxFQUFFLENBQUMyUyxLQUFLLEtBQUtzQixLQUFLLEdBQUdsVixHQUFHb2xFLEVBQUU2dkMsUUFBUSxHQUFHMzJDLEVBQUUsR0FBR2szQixRQUFRcHdCLEVBQUV0akUsS0FBS2dILEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksZ0JBQWdCLE9BQU9BLEVBQUVDLEVBQUV2RCxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxnQkFBZ0IsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLG9CQUFvQixPQUFPQSxFQUFFQyxFQUFFdkQsRUFBRSxRQUFRSixLQUFLcXBDLEVBQUUsTUFBTXBrQyxFQUFFdEIsRUFBRXNCLEVBQUUsaUJBQWlCQSxFQUFFLENBQUNvUixLQUFLLE9BQU9zQixLQUFLLEdBQUdsVixHQUFHb2xFLEVBQUU2dkMsUUFBUSxHQUFHMzJDLEVBQUUsR0FBR2szQixRQUFRcHdCLEVBQUV0akUsS0FBS2dILEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksa0NBQWtDNjdHLEdBQUcsU0FBUzEzQyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRTJsQyxFQUFFLE1BQU1wa0MsRUFBRUEsRUFBRTRpRSxFQUFFMnZDLGFBQWEsR0FBRzUxRSxFQUFFaW1DLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJLE1BQU0sVUFBVSxPQUFPdkIsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLGdDQUFnQyxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksV0FBVyxPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsZ0JBQWdCLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxtQkFBbUI4N0csR0FBRyxTQUFTMzNDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUUsTUFBTXBrQyxFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHNTFFLEVBQUVpbUMsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxVQUFVLE9BQU92QixFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsZ0NBQWdDLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxXQUFXLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxjQUFjLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxtQkFBbUIrN0csR0FBRyxTQUFTNTNDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUV3K0IsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxVQUFVLE9BQU92QixFQUFFMmxDLEVBQUVqcEMsRUFBRSxTQUFTSixLQUFLLE1BQU1pRixFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHLHFCQUFxQixDQUFDbmhHLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksS0FBS21rRSxFQUFFMndCLGlCQUFpQjN3QixFQUFFMHZDLE9BQU8sTUFBTXR5RyxFQUFFb2tDLEVBQUVwa0MsRUFBRSw4QkFBOEJBLEVBQUVBLElBQUksWUFBWXk2RyxHQUFHLFNBQVM3M0MsRUFBRTVpRSxFQUFFN0UsRUFBRXNCLEVBQUVxL0QsR0FBRyxJQUFJcjlELEVBQUUybEMsRUFBRSxNQUFNcGtDLEVBQUVBLEVBQUU0aUUsRUFBRTJ2QyxhQUFhLEdBQUc1MUUsRUFBRWltQyxFQUFFMHZDLE9BQU9ycUMsRUFBRXJGLEVBQUUyd0IsaUJBQWlCNzBGLEVBQUVra0UsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxTQUFTLE9BQU92QixFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsV0FBVyxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksVUFBVSxPQUFPQSxFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsUUFBUSxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksd0JBQXdCLE9BQU9BLEVBQUVDLEVBQUV2RCxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxNQUFNLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxJQUFJd3BFLEVBQUV0ckMsRUFBRSxPQUFPbCtCLEVBQUUsT0FBT0EsRUFBRSxNQUFNdUIsRUFBRXRCLEVBQUVzQixFQUFFLFlBQVlBLEdBQUd0QixFQUFFRCxFQUFFLFlBQVlBLEdBQUdDLEVBQUVELEVBQUUsT0FBT0EsRUFBRXVCLElBQUksbUJBQW1CLE9BQU92QixFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsT0FBTyxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksSUFBSXdwRSxFQUFFdHJDLEVBQUUsT0FBT2wrQixFQUFFLE9BQU9BLEVBQUUsTUFBTXVCLEVBQUV0QixFQUFFc0IsRUFBRSxZQUFZQSxHQUFHdEIsRUFBRUQsRUFBRSxZQUFZQSxHQUFHQyxFQUFFRCxFQUFFLFFBQVFBLEVBQUV1QixJQUFJLFVBQVUwNkcsR0FBRyxTQUFTOTNDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUUsTUFBTXBrQyxFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHNTFFLEVBQUVpbUMsRUFBRTB2QyxPQUFPcnFDLEVBQUVyRixFQUFFMndCLGlCQUFpQjcwRixFQUFFa2tFLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJLE1BQU0sU0FBUyxPQUFPdkIsRUFBRUMsRUFBRXZELEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFFBQVEsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLElBQUl3cEUsRUFBRXRyQyxFQUFFLE9BQU9sK0IsRUFBRSxPQUFPQSxFQUFFLE1BQU11QixFQUFFdEIsRUFBRXNCLEVBQUUsWUFBWUEsR0FBR3RCLEVBQUVELEVBQUUsWUFBWUEsR0FBR0MsRUFBRUQsRUFBRSxTQUFTQSxFQUFFdUIsSUFBSSxtQkFBbUIsT0FBT3ZCLEVBQUVDLEVBQUV2RCxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxTQUFTLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxJQUFJd3BFLEVBQUV0ckMsRUFBRSxPQUFPbCtCLEVBQUUsT0FBT0EsRUFBRSxNQUFNdUIsRUFBRXRCLEVBQUVzQixFQUFFLFlBQVlBLEdBQUd0QixFQUFFRCxFQUFFLFlBQVlBLEdBQUdDLEVBQUVELEVBQUUsVUFBVUEsRUFBRXVCLElBQUksZ0JBQWdCMjZHLEdBQUcsU0FBUy8zQyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRTJsQyxFQUFFdytCLEVBQUUwdkMsT0FBTzMxRSxFQUFFaW1DLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJLE1BQU0sYUFBYSxPQUFPdkIsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBSyxNQUFNaUYsRUFBRUEsRUFBRTRpRSxFQUFFMnZDLGFBQWEsR0FBRyxNQUFNLENBQUNuaEcsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxJQUFJbWtFLEVBQUUyd0IsaUJBQWlCbnZELEVBQUUwM0IsR0FBR24vQixFQUFFbS9CLEVBQUUsT0FBTzk3RCxJQUFJLGFBQWEsT0FBT3ZCLEVBQUUybEMsRUFBRXBrQyxFQUFFQSxJQUFJdkIsRUFBRSxJQUFJLGVBQWVtOEcsR0FBRyxTQUFTaDRDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUUsTUFBTXBrQyxFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHNTFFLEVBQUVpbUMsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxVQUFVLE9BQU92QixFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsb0JBQW9CLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxrQ0FBa0MsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLG1CQUFtQixDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksTUFBTSxPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxRQUFRSixLQUFLcXBDLEVBQUUsTUFBTXBrQyxFQUFFMjhCLEVBQUUzOEIsRUFBRSxhQUFhQSxFQUFFLENBQUNvUixLQUFLLE9BQU9zQixLQUFLLEdBQUdsVixHQUFHb2xFLEVBQUU2dkMsUUFBUSxHQUFHMzJDLEVBQUUsR0FBR2szQixRQUFRcHdCLEVBQUV0akUsS0FBS2dILEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksa0JBQWtCbzhHLEdBQUcsU0FBU2o0QyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRTJsQyxFQUFFLE1BQU1wa0MsRUFBRUEsRUFBRTRpRSxFQUFFMnZDLGFBQWEsR0FBRzUxRSxFQUFFaW1DLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJLE1BQU0sVUFBVSxPQUFPdkIsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFdBQVcsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFVBQVUsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLGdCQUFnQixDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksSUFBSW1rRSxFQUFFMndCLGlCQUFpQjN3QixFQUFFMHZDLE9BQU94MkMsR0FBR24vQixFQUFFbS9CLEVBQUUsT0FBTzk3RCxJQUFJLGNBQWMsT0FBT3ZCLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxtQkFBbUIsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLE1BQU0sT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsUUFBUUosS0FBS3FwQyxFQUFFcGtDLEVBQUUsQ0FBQ29SLEtBQUssT0FBT3NCLEtBQUssR0FBR2xWLEdBQUdvbEUsRUFBRTZ2QyxRQUFRLEdBQUczMkMsRUFBRSxHQUFHazNCLFFBQVFwd0IsRUFBRXRqRSxLQUFLZ0gsS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxpQkFBaUJxOEcsR0FBRyxTQUFTbDRDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUV3K0IsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxTQUFTLE9BQU92QixFQUFFMmxDLEVBQUVqcEMsRUFBRSxNQUFNSixLQUFLLE1BQU1pRixFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHLE1BQU12eUcsRUFBRW9rQyxFQUFFcGtDLEVBQUUsY0FBY0EsRUFBRSxDQUFDb1IsS0FBSyxLQUFLc0IsS0FBSyxHQUFHbFYsR0FBR29sRSxFQUFFNnZDLFFBQVEsR0FBRzMyQyxFQUFFLEdBQUdrM0IsUUFBUXB3QixFQUFFdGpFLEtBQUtnSCxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLElBQUlta0UsRUFBRTJ3QixpQkFBaUIzd0IsRUFBRTB2QyxPQUFPLE1BQU10eUcsRUFBRW9rQyxFQUFFcGtDLEVBQUUsZUFBZUEsRUFBRUEsSUFBSSxVQUFVKzZHLEdBQUcsU0FBU240QyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRSxPQUFPLE9BQU9BLEdBQUdta0UsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLEtBQUs3RSxFQUFFLFNBQVNKLEtBQUssTUFBTWlGLEVBQUVBLEVBQUU0aUUsRUFBRTJ2QyxhQUFhLEdBQUcsVUFBVSxDQUFDbmhHLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUkyekcsU0FBUyxDQUFDLEVBQUUsWUFBWUMsS0FBSyxTQUFTenZDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUUsTUFBTXBrQyxFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHNTFFLEVBQUVpbUMsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksT0FBTyxPQUFPdkIsRUFBRWsrQixFQUFFeGhDLEVBQUUsTUFBTUosS0FBS3FwQyxFQUFFLE1BQU1wa0MsRUFBRTI4QixFQUFFMzhCLEVBQUUsV0FBV0EsRUFBRSxDQUFDb1IsS0FBSyxLQUFLc0IsS0FBSyxHQUFHbFYsR0FBR29sRSxFQUFFNnZDLFFBQVEsRUFBRTMyQyxFQUFFLEdBQUdrM0IsUUFBUXB3QixFQUFFdGpFLEtBQUtnSCxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFVBQVUsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLGFBQWEsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLE1BQU0sT0FBT0EsRUFBRW1rRSxFQUFFMHZDLE9BQU8sTUFBTXR5RyxFQUFFMjhCLEVBQUUzOEIsRUFBRSxRQUFRQSxFQUFFQSxJQUFJdkIsRUFBRSxJQUFJLFlBQVksT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsTUFBTUosS0FBS3FwQyxFQUFFLE1BQU1wa0MsRUFBRTI4QixFQUFFMzhCLEVBQUUsWUFBWUEsRUFBRSxDQUFDb1IsS0FBSyxLQUFLc0IsS0FBSyxHQUFHbFYsR0FBR29sRSxFQUFFNnZDLFFBQVEsRUFBRTMyQyxFQUFFLEdBQUdrM0IsUUFBUXB3QixFQUFFdGpFLEtBQUtnSCxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFVBQVUsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLHFCQUFxQixDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksNkJBQTZCLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxnQkFBZ0IsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLG9CQUFvQixPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxNQUFNSixLQUFLcXBDLEVBQUUsTUFBTXBrQyxFQUFFMjhCLEVBQUUzOEIsRUFBRSxjQUFjQSxFQUFFLENBQUNvUixLQUFLLEtBQUtzQixLQUFLLEdBQUdsVixHQUFHb2xFLEVBQUU2dkMsUUFBUSxHQUFHMzJDLEVBQUUsR0FBR2szQixRQUFRcHdCLEVBQUU2dkMsUUFBUSxHQUFHMzJDLEVBQUUsR0FBR3gxRCxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLGtDQUFrQyxPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxNQUFNSixLQUFLcXBDLEVBQUUsTUFBTXBrQyxFQUFFMjhCLEVBQUUzOEIsRUFBRSxVQUFVQSxFQUFFLENBQUNvUixLQUFLLEtBQUtzQixLQUFLLEdBQUdsVixHQUFHb2xFLEVBQUU2dkMsUUFBUSxHQUFHMzJDLEVBQUUsR0FBR2szQixRQUFRcHdCLEVBQUV0akUsS0FBS2dILEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksS0FBSyxPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxNQUFNSixLQUFLcXBDLEVBQUUsTUFBTXBrQyxFQUFFMjhCLEVBQUUzOEIsRUFBRSxpQkFBaUJBLEVBQUUsQ0FBQ29SLEtBQUssS0FBS3NCLEtBQUssR0FBR2xWLEdBQUdvbEUsRUFBRTZ2QyxRQUFRLEdBQUczMkMsRUFBRSxHQUFHazNCLFFBQVFwd0IsRUFBRXRqRSxLQUFLZ0gsS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxLQUFLLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLE1BQU1KLEtBQUtxcEMsRUFBRSxNQUFNcGtDLEVBQUUyOEIsRUFBRTM4QixFQUFFLGFBQWFBLEVBQUUsQ0FBQ29SLEtBQUssS0FBS3NCLEtBQUssR0FBR2xWLEdBQUdvbEUsRUFBRTZ2QyxRQUFRLEdBQUczMkMsRUFBRSxHQUFHazNCLFFBQVFwd0IsRUFBRXRqRSxLQUFLZ0gsS0FBS3cxRCxLQUFLcjlELEVBQUUsS0FBS2kwRyxTQUFRLEtBQU0sU0FBUzl2QyxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxHQUFHeW5FLEVBQUV4bUIsU0FBUzMvQyxFQUFFeVIsU0FBU3pSLEdBQUdnd0MsU0FBUyxDQUFDMmxFLFNBQVMsQ0FBQyxFQUFFLFlBQVlDLEtBQUssU0FBU3p2QyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRTJsQyxFQUFFLE1BQU1wa0MsRUFBRUEsRUFBRTRpRSxFQUFFMnZDLGFBQWEsR0FBRzUxRSxFQUFFaW1DLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJLE1BQU0sU0FBUyxPQUFPdkIsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLGFBQWEsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFVBQVUsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLGFBQWEsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFdBQVcsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLG1CQUFtQixDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksdUJBQXVCLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxjQUFjLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxXQUFXLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxvQkFBb0IsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLHVCQUF1QixPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsZ0JBQWdCLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxXQUFXLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxnQkFBZ0IsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLHVCQUF1QixPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsWUFBWSxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksV0FBVyxPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsa0JBQWtCLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSx3QkFBd0JpMEcsU0FBUSxLQUFNLFNBQVM5dkMsRUFBRTVpRSxFQUFFN0UsSUFBSTZFLEVBQUU3RSxFQUFFLEVBQUZBLEVBQUssSUFBS3NLLEtBQUssQ0FBQ205RCxFQUFFbm1FLEVBQUUsNklBQTZJLEtBQUttbUUsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxJQUFJNkUsRUFBRTdFLEVBQUUsRUFBRkEsRUFBSyxJQUFLc0ssS0FBSyxDQUFDbTlELEVBQUVubUUsRUFBRSxzZUFBc2UsS0FBS21tRSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLEdBQUd5bkUsRUFBRXhtQixTQUFTMy9DLEVBQUV5UixTQUFTelIsR0FBR2d3QyxTQUFTLENBQUN1N0QsRUFBRSxTQUFTcGxDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFbWtFLEVBQUUwdkMsT0FBT2x1RSxFQUFFdytCLEVBQUUyd0IsaUJBQWlCNTJELEVBQUVpbUMsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxtREFBbURva0MsRUFBRTNsQyxFQUFFcTlELEdBQUduL0IsRUFBRW0vQixFQUFFLFNBQVM5N0QsSUFBSSw0QkFBNEJva0MsRUFBRTNsQyxFQUFFLE1BQU11QixFQUFFMjhCLEVBQUUzOEIsRUFBRSxRQUFRQSxFQUFFQSxJQUFJLDJHQUEyR29rQyxFQUFFM2xDLEVBQUUsTUFBTXVCLEVBQUUyOEIsRUFBRTM4QixFQUFFLFFBQVFBLEVBQUVBLElBQUksa0JBQWtCb3lHLFNBQVMsQ0FBQyxFQUFFLFlBQVlDLEtBQUssU0FBU3p2QyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRTJsQyxFQUFFdytCLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJLE9BQU8sT0FBT3ZCLEVBQUUybEMsRUFBRWpwQyxFQUFFLFFBQVFKLEtBQUssTUFBTWlGLEVBQUVBLEVBQUU0aUUsRUFBRTJ2QyxhQUFhLEdBQUcsTUFBTXZ5RyxFQUFFb2tDLEVBQUVwa0MsRUFBRSxZQUFZQSxFQUFFLENBQUNvUixLQUFLLE9BQU9zQixLQUFLLEdBQUdsVixHQUFHb2xFLEVBQUU2dkMsUUFBUSxFQUFFMzJDLEVBQUUsR0FBR2szQixRQUFRcHdCLEVBQUV0akUsS0FBS2dILEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUlpMEcsU0FBUSxLQUFNLFNBQVM5dkMsRUFBRTVpRSxFQUFFN0UsSUFBSTZFLEVBQUU3RSxFQUFFLEVBQUZBLEVBQUssSUFBS3NLLEtBQUssQ0FBQ205RCxFQUFFbm1FLEVBQUUsMDhEQUEwOEQsS0FBS21tRSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLEdBQUd5bkUsRUFBRXhtQixTQUFTMy9DLEVBQUV5UixTQUFTelIsR0FBR2d3QyxTQUFTLENBQUN1N0QsRUFBRSxTQUFTcGxDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUV3K0IsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxTQUFTLE9BQU92QixFQUFFMmxDLEVBQUVqcEMsRUFBRSxTQUFTSixLQUFLLE1BQU1pRixFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHLHFCQUFxQixDQUFDbmhHLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksSUFBSW1rRSxFQUFFMndCLGlCQUFpQjN3QixFQUFFMHZDLE9BQU8sTUFBTXR5RyxFQUFFb2tDLEVBQUVwa0MsRUFBRSwyQkFBMkJBLEVBQUVBLElBQUksVUFBVWtvRyxFQUFFLFNBQVN0bEMsRUFBRTVpRSxFQUFFN0UsRUFBRXNCLEVBQUVxL0QsR0FBRyxJQUFJcjlELEVBQUUybEMsRUFBRXcrQixFQUFFNHZDLGdCQUFnQixTQUFTNXZDLEVBQUU1aUUsR0FBRyxHQUFHL0YsT0FBT1csVUFBVXdDLGVBQWVyQyxLQUFLNm5FLEVBQUU1aUUsR0FBRyxPQUFPNGlFLEVBQUU1aUUsSUFBSSxNQUFNLEtBQUssT0FBT3ZCLEVBQUUybEMsRUFBRWpwQyxFQUFFLFFBQVFKLEtBQUssTUFBTWlGLEVBQUVBLEVBQUU0aUUsRUFBRTJ2QyxhQUFhLEdBQUcsTUFBTXZ5RyxFQUFFb2tDLEVBQUVwa0MsRUFBRSxrQkFBa0JBLEVBQUUsQ0FBQ29SLEtBQUssT0FBT3NCLEtBQUssR0FBR2xWLEdBQUdvbEUsRUFBRTZ2QyxRQUFRLEVBQUUzMkMsRUFBRSxHQUFHazNCLFFBQVFwd0IsRUFBRXRqRSxLQUFLZ0gsS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxLQUFLMHBHLEVBQUUsU0FBU3ZsQyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRTJsQyxFQUFFLE1BQU1wa0MsRUFBRUEsRUFBRTRpRSxFQUFFMnZDLGFBQWEsR0FBRzUxRSxFQUFFaW1DLEVBQUUwdkMsT0FBT3JxQyxFQUFFckYsRUFBRTJ3QixpQkFBaUI3MEYsRUFBRWtrRSxFQUFFNHZDLGdCQUFnQixTQUFTNXZDLEVBQUU1aUUsR0FBRyxHQUFHL0YsT0FBT1csVUFBVXdDLGVBQWVyQyxLQUFLNm5FLEVBQUU1aUUsR0FBRyxPQUFPNGlFLEVBQUU1aUUsSUFBSSxNQUFNLGFBQWEsT0FBT3ZCLEVBQUVDLEVBQUV2RCxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxNQUFNLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxJQUFJd3BFLEVBQUV0ckMsRUFBRSxNQUFNMzhCLEVBQUV0QixFQUFFc0IsRUFBRSxPQUFPQSxFQUFFQSxJQUFJLGFBQWEsT0FBT3ZCLEVBQUVDLEVBQUV2RCxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxjQUFjLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxjQUFjd3BFLEVBQUV0ckMsRUFBRSxNQUFNMzhCLEVBQUV0QixFQUFFc0IsRUFBRSxPQUFPQSxFQUFFQSxJQUFJLHVCQUF1QmlvRSxFQUFFdHJDLEVBQUUsTUFBTTM4QixFQUFFdEIsRUFBRXNCLEVBQUUsT0FBT0EsRUFBRUEsSUFBSSxhQUFhLE9BQU92QixFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsVUFBVSxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksV0FBVyxPQUFPQSxFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsNkJBQTZCLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxjQUFjd3BFLEVBQUV0ckMsRUFBRSxNQUFNMzhCLEVBQUV0QixFQUFFc0IsRUFBRSxPQUFPQSxFQUFFQSxJQUFJLDBDQUEwQ3FvRyxFQUFFLFNBQVN6bEMsRUFBRTVpRSxFQUFFN0UsRUFBRXNCLEVBQUVxL0QsR0FBRyxNQUFNLDZCQUE2QnlzQyxFQUFFLFNBQVMzbEMsRUFBRTVpRSxFQUFFN0UsRUFBRXNCLEVBQUVxL0QsR0FBRyxJQUFJcjlELEVBQUUybEMsRUFBRXcrQixFQUFFNHZDLGdCQUFnQixTQUFTNXZDLEVBQUU1aUUsR0FBRyxHQUFHL0YsT0FBT1csVUFBVXdDLGVBQWVyQyxLQUFLNm5FLEVBQUU1aUUsR0FBRyxPQUFPNGlFLEVBQUU1aUUsSUFBSSxNQUFNLFNBQVMsT0FBT3ZCLEVBQUUybEMsRUFBRWpwQyxFQUFFLFNBQVNKLEtBQUssTUFBTWlGLEVBQUVBLEVBQUU0aUUsRUFBRTJ2QyxhQUFhLEdBQUcscUJBQXFCLENBQUNuaEcsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxJQUFJbWtFLEVBQUUyd0IsaUJBQWlCM3dCLEVBQUUwdkMsT0FBTyxNQUFNdHlHLEVBQUVva0MsRUFBRXBrQyxFQUFFLDZCQUE2QkEsRUFBRUEsSUFBSSxVQUFVKzVHLEdBQUcsU0FBU24zQyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRTJsQyxFQUFFdytCLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJLE1BQU0sS0FBSyxPQUFPdkIsRUFBRTJsQyxFQUFFanBDLEVBQUUsUUFBUUosS0FBSyxNQUFNaUYsRUFBRUEsRUFBRTRpRSxFQUFFMnZDLGFBQWEsR0FBRyxNQUFNdnlHLEVBQUVva0MsRUFBRXBrQyxFQUFFLG9CQUFvQkEsRUFBRSxDQUFDb1IsS0FBSyxPQUFPc0IsS0FBSyxHQUFHbFYsR0FBR29sRSxFQUFFNnZDLFFBQVEsR0FBRzMyQyxFQUFFLEdBQUdrM0IsUUFBUXB3QixFQUFFdGpFLEtBQUtnSCxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLEtBQUt1N0csR0FBRyxTQUFTcDNDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUUsTUFBTXBrQyxFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHNTFFLEVBQUVpbUMsRUFBRTB2QyxPQUFPcnFDLEVBQUVyRixFQUFFMndCLGlCQUFpQjcwRixFQUFFa2tFLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJLE1BQU0sYUFBYSxPQUFPdkIsRUFBRUMsRUFBRXZELEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLE1BQU0sQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLElBQUl3cEUsRUFBRXRyQyxFQUFFLE1BQU0zOEIsRUFBRXRCLEVBQUVzQixFQUFFLE9BQU9BLEVBQUVBLElBQUksYUFBYSxPQUFPdkIsRUFBRUMsRUFBRXZELEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLGNBQWMsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLGNBQWN3cEUsRUFBRXRyQyxFQUFFLE1BQU0zOEIsRUFBRXRCLEVBQUVzQixFQUFFLE9BQU9BLEVBQUVBLElBQUkseUJBQXlCaW9FLEVBQUV0ckMsRUFBRSxNQUFNMzhCLEVBQUV0QixFQUFFc0IsRUFBRSxPQUFPQSxFQUFFQSxJQUFJLGFBQWEsT0FBT3ZCLEVBQUVDLEVBQUV2RCxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxVQUFVLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxXQUFXLE9BQU9BLEVBQUVDLEVBQUV2RCxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSw2QkFBNkIsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLGNBQWN3cEUsRUFBRXRyQyxFQUFFLE1BQU0zOEIsRUFBRXRCLEVBQUVzQixFQUFFLE9BQU9BLEVBQUVBLElBQUksNENBQTRDaTZHLEdBQUcsU0FBU3IzQyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRTJsQyxFQUFFdytCLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJLE1BQU0sU0FBUyxPQUFPdkIsRUFBRTJsQyxFQUFFanBDLEVBQUUsU0FBU0osS0FBSyxNQUFNaUYsRUFBRUEsRUFBRTRpRSxFQUFFMnZDLGFBQWEsR0FBRyxxQkFBcUIsQ0FBQ25oRyxLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLElBQUlta0UsRUFBRTJ3QixpQkFBaUIzd0IsRUFBRTB2QyxPQUFPLE1BQU10eUcsRUFBRW9rQyxFQUFFcGtDLEVBQUUsdUJBQXVCQSxFQUFFQSxJQUFJLFVBQVVrNkcsR0FBRyxTQUFTdDNDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUV3K0IsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxLQUFLLE9BQU92QixFQUFFMmxDLEVBQUVqcEMsRUFBRSxRQUFRSixLQUFLLE1BQU1pRixFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHLE1BQU12eUcsRUFBRW9rQyxFQUFFcGtDLEVBQUUsY0FBY0EsRUFBRSxDQUFDb1IsS0FBSyxPQUFPc0IsS0FBSyxHQUFHbFYsR0FBR29sRSxFQUFFNnZDLFFBQVEsR0FBRzMyQyxFQUFFLEdBQUdrM0IsUUFBUXB3QixFQUFFdGpFLEtBQUtnSCxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLEtBQUswN0csR0FBRyxTQUFTdjNDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUUsTUFBTXBrQyxFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHNTFFLEVBQUVpbUMsRUFBRTB2QyxPQUFPcnFDLEVBQUVyRixFQUFFMndCLGlCQUFpQjcwRixFQUFFa2tFLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJLE1BQU0sYUFBYSxPQUFPdkIsRUFBRUMsRUFBRXZELEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLE1BQU0sQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLElBQUl3cEUsRUFBRXRyQyxFQUFFLE1BQU0zOEIsRUFBRXRCLEVBQUVzQixFQUFFLE9BQU9BLEVBQUVBLElBQUksWUFBWWlvRSxFQUFFdHJDLEVBQUUsTUFBTTM4QixFQUFFdEIsRUFBRXNCLEVBQUUsT0FBT0EsRUFBRUEsSUFBSSxhQUFhLE9BQU92QixFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsVUFBVSxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksV0FBVyxPQUFPQSxFQUFFQyxFQUFFdkQsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsNEJBQTRCLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxjQUFjd3BFLEVBQUV0ckMsRUFBRSxNQUFNMzhCLEVBQUV0QixFQUFFc0IsRUFBRSxPQUFPQSxFQUFFQSxJQUFJLHdCQUF3Qmc3RyxHQUFHLFNBQVNwNEMsRUFBRTVpRSxFQUFFN0UsRUFBRXNCLEVBQUVxL0QsR0FBRyxJQUFJcjlELEVBQUUybEMsRUFBRXcrQixFQUFFNHZDLGdCQUFnQixTQUFTNXZDLEVBQUU1aUUsR0FBRyxHQUFHL0YsT0FBT1csVUFBVXdDLGVBQWVyQyxLQUFLNm5FLEVBQUU1aUUsR0FBRyxPQUFPNGlFLEVBQUU1aUUsSUFBSSxNQUFNLEtBQUssT0FBT3ZCLEVBQUUybEMsRUFBRWpwQyxFQUFFLFFBQVFKLEtBQUssTUFBTWlGLEVBQUVBLEVBQUU0aUUsRUFBRTJ2QyxhQUFhLEdBQUcsTUFBTXZ5RyxFQUFFb2tDLEVBQUVwa0MsRUFBRSxjQUFjQSxFQUFFLENBQUNvUixLQUFLLE9BQU9zQixLQUFLLEdBQUdsVixHQUFHb2xFLEVBQUU2dkMsUUFBUSxHQUFHMzJDLEVBQUUsR0FBR2szQixRQUFRcHdCLEVBQUV0akUsS0FBS2dILEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksS0FBSzQ3RyxHQUFHLFNBQVN6M0MsRUFBRTVpRSxFQUFFN0UsRUFBRXNCLEVBQUVxL0QsR0FBRyxJQUFJcjlELEVBQUUybEMsRUFBRXcrQixFQUFFMHZDLE9BQU8zMUUsRUFBRWltQyxFQUFFMndCLGlCQUFpQnRyQixFQUFFckYsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxpQkFBaUIyOEIsRUFBRXlILEVBQUVwa0MsRUFBRUEsSUFBSSxzQkFBc0IsT0FBT3ZCLEVBQUV3cEUsRUFBRTlzRSxFQUFFLFNBQVNKLEtBQUssTUFBTWlGLEVBQUVBLEVBQUU0aUUsRUFBRTJ2QyxhQUFhLEdBQUcsVUFBVSxDQUFDbmhHLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksSUFBSWsrQixFQUFFeUgsRUFBRXBrQyxFQUFFQSxJQUFJLGNBQWNpN0csR0FBRyxTQUFTcjRDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsTUFBTSxvQkFBb0JvL0MsR0FBRyxTQUFTdDRDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUV3K0IsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxLQUFLLE9BQU92QixFQUFFMmxDLEVBQUVqcEMsRUFBRSxRQUFRSixLQUFLLE1BQU1pRixFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHLE1BQU12eUcsRUFBRW9rQyxFQUFFcGtDLEVBQUUsa0JBQWtCQSxFQUFFLENBQUNvUixLQUFLLE9BQU9zQixLQUFLLEdBQUdsVixHQUFHb2xFLEVBQUU2dkMsUUFBUSxHQUFHMzJDLEVBQUUsR0FBR2szQixRQUFRcHdCLEVBQUV0akUsS0FBS2dILEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksS0FBSys3RyxHQUFHLFNBQVM1M0MsRUFBRTVpRSxFQUFFN0UsRUFBRXNCLEVBQUVxL0QsR0FBRyxJQUFJcjlELEVBQUUybEMsRUFBRXcrQixFQUFFMHZDLE9BQU8zMUUsRUFBRWltQyxFQUFFMndCLGlCQUFpQnRyQixFQUFFckYsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxpQkFBaUIyOEIsRUFBRXlILEVBQUVwa0MsRUFBRUEsSUFBSSxzQkFBc0IsT0FBT3ZCLEVBQUV3cEUsRUFBRTlzRSxFQUFFLFNBQVNKLEtBQUssTUFBTWlGLEVBQUVBLEVBQUU0aUUsRUFBRTJ2QyxhQUFhLEdBQUcsV0FBVyxDQUFDbmhHLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksSUFBSWsrQixFQUFFeUgsRUFBRXBrQyxFQUFFQSxJQUFJLGNBQWN5NkcsR0FBRyxTQUFTNzNDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUV3K0IsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxLQUFLLE9BQU92QixFQUFFMmxDLEVBQUVqcEMsRUFBRSxRQUFRSixLQUFLLE1BQU1pRixFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHLE1BQU12eUcsRUFBRW9rQyxFQUFFcGtDLEVBQUUsY0FBY0EsRUFBRSxDQUFDb1IsS0FBSyxPQUFPc0IsS0FBSyxHQUFHbFYsR0FBR29sRSxFQUFFNnZDLFFBQVEsR0FBRzMyQyxFQUFFLEdBQUdrM0IsUUFBUXB3QixFQUFFdGpFLEtBQUtnSCxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLEtBQUswOEcsR0FBRyxTQUFTdjRDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUV3K0IsRUFBRTB2QyxPQUFPMzFFLEVBQUVpbUMsRUFBRTJ3QixpQkFBaUJ0ckIsRUFBRXJGLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJLE1BQU0saUJBQWlCMjhCLEVBQUV5SCxFQUFFcGtDLEVBQUVBLElBQUksc0JBQXNCLE9BQU92QixFQUFFd3BFLEVBQUU5c0UsRUFBRSxTQUFTSixLQUFLLE1BQU1pRixFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHLGNBQWMsQ0FBQ25oRyxLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLElBQUlrK0IsRUFBRXlILEVBQUVwa0MsRUFBRUEsSUFBSSxjQUFjbzdHLEdBQUcsU0FBU3g0QyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRTJsQyxFQUFFdytCLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJLE1BQU0sS0FBSyxPQUFPdkIsRUFBRTJsQyxFQUFFanBDLEVBQUUsUUFBUUosS0FBSyxNQUFNaUYsRUFBRUEsRUFBRTRpRSxFQUFFMnZDLGFBQWEsR0FBRyxNQUFNdnlHLEVBQUVva0MsRUFBRXBrQyxFQUFFLGFBQWFBLEVBQUUsQ0FBQ29SLEtBQUssT0FBT3NCLEtBQUssR0FBR2xWLEdBQUdvbEUsRUFBRTZ2QyxRQUFRLEdBQUczMkMsRUFBRSxHQUFHazNCLFFBQVFwd0IsRUFBRXRqRSxLQUFLZ0gsS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxLQUFLazhHLEdBQUcsU0FBUy8zQyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRTJsQyxFQUFFLE1BQU1wa0MsRUFBRUEsRUFBRTRpRSxFQUFFMnZDLGFBQWEsR0FBRzUxRSxFQUFFaW1DLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJLE1BQU0sU0FBUyxPQUFPdkIsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFFBQVEsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLGNBQWNta0UsRUFBRTJ3QixpQkFBaUIzd0IsRUFBRTB2QyxPQUFPdHlHLEVBQUVBLElBQUksMEJBQTBCLE9BQU92QixFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsV0FBVyxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksV0FBVzJ6RyxTQUFTLENBQUMsRUFBRSxZQUFZQyxLQUFLLFNBQVN6dkMsRUFBRTVpRSxFQUFFN0UsRUFBRXNCLEVBQUVxL0QsR0FBRyxJQUFJcjlELEVBQUUybEMsRUFBRSxNQUFNcGtDLEVBQUVBLEVBQUU0aUUsRUFBRTJ2QyxhQUFhLEdBQUc1MUUsRUFBRWltQyxFQUFFNHZDLGdCQUFnQixTQUFTNXZDLEVBQUU1aUUsR0FBRyxHQUFHL0YsT0FBT1csVUFBVXdDLGVBQWVyQyxLQUFLNm5FLEVBQUU1aUUsR0FBRyxPQUFPNGlFLEVBQUU1aUUsSUFBSSxNQUFNLFNBQVMsT0FBT3ZCLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSx3QkFBd0IsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFNBQVMsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFFBQVEsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLHVCQUF1QixPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsNEJBQTRCLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxXQUFXLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxlQUFlLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSx1QkFBdUIsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLG9CQUFvQixDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksNkJBQTZCLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxhQUFhLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSx1QkFBdUIsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLGFBQWEsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLDZCQUE2QixPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsY0FBYyxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksbUJBQW1CLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLE1BQU1KLEtBQUtxcEMsRUFBRSxNQUFNcGtDLEVBQUUyOEIsRUFBRTM4QixFQUFFLDJCQUEyQkEsRUFBRSxDQUFDb1IsS0FBSyxLQUFLc0IsS0FBSyxHQUFHbFYsR0FBR29sRSxFQUFFNnZDLFFBQVEsRUFBRTMyQyxFQUFFLEdBQUdrM0IsUUFBUXB3QixFQUFFdGpFLEtBQUtnSCxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLGVBQWUsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFVBQVUsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLG9CQUFvQixPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxNQUFNSixLQUFLcXBDLEVBQUUsTUFBTXBrQyxFQUFFMjhCLEVBQUUzOEIsRUFBRSxrQkFBa0JBLEVBQUUsQ0FBQ29SLEtBQUssS0FBS3NCLEtBQUssR0FBR2xWLEdBQUdvbEUsRUFBRTZ2QyxRQUFRLEVBQUUzMkMsRUFBRSxHQUFHazNCLFFBQVFwd0IsRUFBRTZ2QyxRQUFRLEVBQUUzMkMsRUFBRSxHQUFHeDFELEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksc0NBQXNDLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSwwQkFBMEIsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFNBQVMsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFFBQVEsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLHlCQUF5QixPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsOEJBQThCLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxXQUFXLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxlQUFlLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSx1QkFBdUIsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLG9CQUFvQixDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksK0JBQStCLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxhQUFhLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSx1QkFBdUIsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLGFBQWEsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLCtCQUErQixPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsY0FBYyxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksbUJBQW1CLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLE1BQU1KLEtBQUtxcEMsRUFBRSxNQUFNcGtDLEVBQUUyOEIsRUFBRTM4QixFQUFFLDZCQUE2QkEsRUFBRSxDQUFDb1IsS0FBSyxLQUFLc0IsS0FBSyxHQUFHbFYsR0FBR29sRSxFQUFFNnZDLFFBQVEsRUFBRTMyQyxFQUFFLEdBQUdrM0IsUUFBUXB3QixFQUFFdGpFLEtBQUtnSCxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLGVBQWUsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFVBQVUsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLG9CQUFvQixPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxNQUFNSixLQUFLcXBDLEVBQUUsTUFBTXBrQyxFQUFFMjhCLEVBQUUzOEIsRUFBRSxvQkFBb0JBLEVBQUUsQ0FBQ29SLEtBQUssS0FBS3NCLEtBQUssR0FBR2xWLEdBQUdvbEUsRUFBRTZ2QyxRQUFRLEdBQUczMkMsRUFBRSxHQUFHazNCLFFBQVFwd0IsRUFBRTZ2QyxRQUFRLEVBQUUzMkMsRUFBRSxHQUFHeDFELEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksc0NBQXNDLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRXpILEVBQUV4aEMsRUFBRSxVQUFVSixLQUFLcXBDLEVBQUUsa0JBQWtCLE1BQU1wa0MsRUFBRTI4QixFQUFFMzhCLEVBQUUsZUFBZUEsRUFBRSxDQUFDb1IsS0FBSyxTQUFTc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxJQUFJLENBQUMxcUQsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxTQUFTLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxRQUFRLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxnQkFBZ0IsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLHFCQUFxQixDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksV0FBVyxPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsZUFBZSxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksdUJBQXVCLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxtQkFBbUIsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFdBQVcsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLGFBQWEsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLHVCQUF1QixPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsYUFBYSxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksOEJBQThCLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxjQUFjLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxtQkFBbUIsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsTUFBTUosS0FBS3FwQyxFQUFFLE1BQU1wa0MsRUFBRTI4QixFQUFFMzhCLEVBQUUsdUJBQXVCQSxFQUFFLENBQUNvUixLQUFLLEtBQUtzQixLQUFLLEdBQUdsVixHQUFHb2xFLEVBQUU2dkMsUUFBUSxHQUFHMzJDLEVBQUUsR0FBR2szQixRQUFRcHdCLEVBQUV0akUsS0FBS2dILEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksZUFBZSxPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsVUFBVSxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksb0JBQW9CLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLE1BQU1KLEtBQUtxcEMsRUFBRSxNQUFNcGtDLEVBQUUyOEIsRUFBRTM4QixFQUFFLGNBQWNBLEVBQUUsQ0FBQ29SLEtBQUssS0FBS3NCLEtBQUssR0FBR2xWLEdBQUdvbEUsRUFBRTZ2QyxRQUFRLEdBQUczMkMsRUFBRSxHQUFHazNCLFFBQVFwd0IsRUFBRTZ2QyxRQUFRLEVBQUUzMkMsRUFBRSxHQUFHeDFELEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksc0NBQXNDLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRXpILEVBQUV4aEMsRUFBRSxVQUFVSixLQUFLcXBDLEVBQUUsa0JBQWtCLE1BQU1wa0MsRUFBRTI4QixFQUFFMzhCLEVBQUUsZUFBZUEsRUFBRSxDQUFDb1IsS0FBSyxTQUFTc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxJQUFJLENBQUMxcUQsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxTQUFTLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxRQUFRLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxnQkFBZ0IsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLHFCQUFxQixDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksV0FBVyxPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsZUFBZSxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksMkJBQTJCLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxZQUFZLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxNQUFNLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLE1BQU1KLEtBQUtxcEMsRUFBRSxNQUFNcGtDLEVBQUUyOEIsRUFBRTM4QixFQUFFLGNBQWNBLEVBQUUsQ0FBQ29SLEtBQUssS0FBS3NCLEtBQUssR0FBR2xWLEdBQUdvbEUsRUFBRTZ2QyxRQUFRLEdBQUczMkMsRUFBRSxHQUFHazNCLFFBQVFwd0IsRUFBRTZ2QyxRQUFRLEdBQUczMkMsRUFBRSxHQUFHeDFELEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUkscUJBQXFCLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRXpILEVBQUV4aEMsRUFBRSxVQUFVSixLQUFLcXBDLEVBQUUsc0JBQXNCLE1BQU1wa0MsRUFBRTI4QixFQUFFMzhCLEVBQUUsbUJBQW1CQSxFQUFFLENBQUNvUixLQUFLLFNBQVNzQixLQUFLLEdBQUdwTSxLQUFLdzFELElBQUksQ0FBQzFxRCxLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFNBQVMsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFFBQVEsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLG9CQUFvQixPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUseUJBQXlCLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxXQUFXLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxlQUFlLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSwyQkFBMkIsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFlBQVksQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLE1BQU0sT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsTUFBTUosS0FBS3FwQyxFQUFFLE1BQU1wa0MsRUFBRTI4QixFQUFFMzhCLEVBQUUsa0JBQWtCQSxFQUFFLENBQUNvUixLQUFLLEtBQUtzQixLQUFLLEdBQUdsVixHQUFHb2xFLEVBQUU2dkMsUUFBUSxHQUFHMzJDLEVBQUUsR0FBR2szQixRQUFRcHdCLEVBQUU2dkMsUUFBUSxHQUFHMzJDLEVBQUUsR0FBR3gxRCxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLHFCQUFxQixPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsaUJBQWlCLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxTQUFTLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxRQUFRLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxnQkFBZ0IsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLHFCQUFxQixDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksV0FBVyxPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsZUFBZSxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksMkJBQTJCLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxZQUFZLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxNQUFNLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLE1BQU1KLEtBQUtxcEMsRUFBRSxNQUFNcGtDLEVBQUUyOEIsRUFBRTM4QixFQUFFLGNBQWNBLEVBQUUsQ0FBQ29SLEtBQUssS0FBS3NCLEtBQUssR0FBR2xWLEdBQUdvbEUsRUFBRTZ2QyxRQUFRLEdBQUczMkMsRUFBRSxHQUFHazNCLFFBQVFwd0IsRUFBRTZ2QyxRQUFRLEdBQUczMkMsRUFBRSxHQUFHeDFELEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUkscUJBQXFCLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxnQkFBZ0IsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFNBQVMsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFekgsRUFBRXhoQyxFQUFFLFVBQVVKLEtBQUtxcEMsRUFBRSxTQUFTLE1BQU1wa0MsRUFBRTI4QixFQUFFMzhCLEVBQUUsY0FBY0EsRUFBRSxDQUFDb1IsS0FBSyxTQUFTc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxJQUFJLENBQUMxcUQsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxlQUFlLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxvQkFBb0IsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFdBQVcsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLGVBQWUsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLDJCQUEyQixPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsYUFBYSxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksTUFBTSxPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxNQUFNSixLQUFLcXBDLEVBQUUsTUFBTXBrQyxFQUFFMjhCLEVBQUUzOEIsRUFBRSxhQUFhQSxFQUFFLENBQUNvUixLQUFLLEtBQUtzQixLQUFLLEdBQUdsVixHQUFHb2xFLEVBQUU2dkMsUUFBUSxHQUFHMzJDLEVBQUUsR0FBR2szQixRQUFRcHdCLEVBQUU2dkMsUUFBUSxHQUFHMzJDLEVBQUUsR0FBR3gxRCxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLGdCQUFnQmkwRyxTQUFRLEtBQU0sU0FBUzl2QyxFQUFFNWlFLEVBQUU3RSxJQUFJNkUsRUFBRTdFLEVBQUUsRUFBRkEsRUFBSyxJQUFLc0ssS0FBSyxDQUFDbTlELEVBQUVubUUsRUFBRSw4b0JBQThvQixLQUFLbW1FLEVBQUV4bUIsUUFBUXA4QyxHQUFHLFNBQVM0aUUsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXRCLEVBQUUsR0FBR3luRSxFQUFFeG1CLFNBQVMzL0MsRUFBRXlSLFNBQVN6UixHQUFHZ3dDLFNBQVMsQ0FBQ3U3RCxFQUFFLFNBQVNwbEMsRUFBRTVpRSxFQUFFN0UsRUFBRXNCLEVBQUVxL0QsR0FBRyxJQUFJcjlELEVBQUUybEMsRUFBRSxNQUFNcGtDLEVBQUVBLEVBQUU0aUUsRUFBRTJ2QyxhQUFhLEdBQUc1MUUsRUFBRWltQyxFQUFFMHZDLE9BQU9ycUMsRUFBRXJGLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJLE1BQU0sYUFBYSxPQUFPdkIsRUFBRXdwRSxFQUFFOXNFLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFFBQVEsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLElBQUlta0UsRUFBRTJ3QixpQkFBaUI1MkQsRUFBRSxNQUFNMzhCLEVBQUVpb0UsRUFBRWpvRSxFQUFFLFFBQVFBLEVBQUVBLElBQUksY0FBYyxPQUFPdkIsRUFBRXdwRSxFQUFFOXNFLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLFVBQVUsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLEtBQUssT0FBT0EsRUFBRWsrQixFQUFFLE1BQU0zOEIsRUFBRWlvRSxFQUFFam9FLEVBQUUsT0FBT0EsRUFBRUEsSUFBSXZCLEVBQUUsSUFBSSxnQkFBZ0IyekcsU0FBUyxDQUFDLEVBQUUsWUFBWUMsS0FBSyxTQUFTenZDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUV3K0IsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxTQUFTLE9BQU92QixFQUFFMmxDLEVBQUVqcEMsRUFBRSxRQUFRSixLQUFLLE1BQU1pRixFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHLE1BQU12eUcsRUFBRW9rQyxFQUFFcGtDLEVBQUUsU0FBU0EsRUFBRSxDQUFDb1IsS0FBSyxPQUFPc0IsS0FBSyxHQUFHbFYsR0FBR29sRSxFQUFFNnZDLFFBQVEsRUFBRTMyQyxFQUFFLEdBQUdrM0IsUUFBUXB3QixFQUFFdGpFLEtBQUtnSCxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFVBQVVpMEcsU0FBUSxLQUFNLFNBQVM5dkMsRUFBRTVpRSxFQUFFN0UsSUFBSTZFLEVBQUU3RSxFQUFFLEVBQUZBLEVBQUssSUFBS3NLLEtBQUssQ0FBQ205RCxFQUFFbm1FLEVBQUUsc3JDQUFzckMsS0FBS21tRSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLEdBQUd5bkUsRUFBRXhtQixTQUFTMy9DLEVBQUV5UixTQUFTelIsR0FBR2d3QyxTQUFTLENBQUN1N0QsRUFBRSxTQUFTcGxDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUUsTUFBTXBrQyxFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHNTFFLEVBQUVpbUMsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxVQUFVLE9BQU92QixFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsZUFBZSxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksWUFBWSxPQUFPQSxFQUFFaytCLEVBQUV4aEMsRUFBRSxTQUFTSixLQUFLcXBDLEVBQUUsT0FBTyxDQUFDaHpCLEtBQUssUUFBUXNCLEtBQUssR0FBR3BNLEtBQUt3MUQsS0FBS3I5RCxFQUFFLElBQUksb0JBQW9CLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxTQUFTLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxNQUFNLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFFBQVFKLEtBQUtxcEMsRUFBRSxNQUFNcGtDLEVBQUUyOEIsRUFBRTM4QixFQUFFLFFBQVFBLEVBQUUsQ0FBQ29SLEtBQUssT0FBT3NCLEtBQUssR0FBR2xWLEdBQUdvbEUsRUFBRTZ2QyxRQUFRLEVBQUUzMkMsRUFBRSxHQUFHazNCLFFBQVFwd0IsRUFBRXRqRSxLQUFLZ0gsS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxjQUFjLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxVQUFVLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxNQUFNLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFFBQVFKLEtBQUtxcEMsRUFBRSxNQUFNcGtDLEVBQUUyOEIsRUFBRTM4QixFQUFFLFFBQVFBLEVBQUUsQ0FBQ29SLEtBQUssT0FBT3NCLEtBQUssR0FBR2xWLEdBQUdvbEUsRUFBRTZ2QyxRQUFRLEVBQUUzMkMsRUFBRSxHQUFHazNCLFFBQVFwd0IsRUFBRXRqRSxLQUFLZ0gsS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxzQ0FBc0N3cEcsRUFBRSxTQUFTcmxDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUV3K0IsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxVQUFVLE9BQU92QixFQUFFMmxDLEVBQUVqcEMsRUFBRSxTQUFTSixLQUFLLE1BQU1pRixFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHLFdBQVcsQ0FBQ25oRyxLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLElBQUlta0UsRUFBRTJ3QixpQkFBaUIzd0IsRUFBRTB2QyxPQUFPLE1BQU10eUcsRUFBRW9rQyxFQUFFcGtDLEVBQUUsT0FBT0EsRUFBRUEsSUFBSSxXQUFXbW9HLEVBQUUsU0FBU3ZsQyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRTJsQyxFQUFFdytCLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJLE1BQU0sVUFBVSxPQUFPdkIsRUFBRTJsQyxFQUFFanBDLEVBQUUsU0FBU0osS0FBSyxNQUFNaUYsRUFBRUEsRUFBRTRpRSxFQUFFMnZDLGFBQWEsR0FBRyxZQUFZLENBQUNuaEcsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxLQUFLLE9BQU9BLEVBQUVta0UsRUFBRTB2QyxPQUFPLE1BQU10eUcsRUFBRW9rQyxFQUFFcGtDLEVBQUUsT0FBT0EsRUFBRUEsSUFBSXZCLEVBQUUsSUFBSSxXQUFXNHBHLEVBQUUsU0FBU3psQyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRTJsQyxFQUFFLE1BQU1wa0MsRUFBRUEsRUFBRTRpRSxFQUFFMnZDLGFBQWEsR0FBRzUxRSxFQUFFaW1DLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxJQUFJLE1BQU0sVUFBVSxPQUFPdkIsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLGVBQWUsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFVBQVUsT0FBT0EsRUFBRWsrQixFQUFFeGhDLEVBQUUsU0FBU0osS0FBS3FwQyxFQUFFLE9BQU8sQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLEtBQUssT0FBT0EsRUFBRW1rRSxFQUFFMHZDLE9BQU8sTUFBTXR5RyxFQUFFMjhCLEVBQUUzOEIsRUFBRSxRQUFRQSxFQUFFQSxJQUFJdkIsRUFBRSxJQUFJLGlCQUFpQjJ6RyxTQUFTLENBQUMsRUFBRSxZQUFZQyxLQUFLLFNBQVN6dkMsRUFBRTVpRSxFQUFFN0UsRUFBRXNCLEVBQUVxL0QsR0FBRyxJQUFJcjlELEVBQUUybEMsRUFBRXcrQixFQUFFNHZDLGdCQUFnQixTQUFTNXZDLEVBQUU1aUUsR0FBRyxHQUFHL0YsT0FBT1csVUFBVXdDLGVBQWVyQyxLQUFLNm5FLEVBQUU1aUUsR0FBRyxPQUFPNGlFLEVBQUU1aUUsSUFBSSxPQUFPLE9BQU92QixFQUFFMmxDLEVBQUVqcEMsRUFBRSxNQUFNSixLQUFLLE1BQU1pRixFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHLE1BQU12eUcsRUFBRW9rQyxFQUFFcGtDLEVBQUUsZUFBZUEsRUFBRSxDQUFDb1IsS0FBSyxLQUFLc0IsS0FBSyxHQUFHbFYsR0FBR29sRSxFQUFFNnZDLFFBQVEsRUFBRTMyQyxFQUFFLEdBQUdrM0IsUUFBUXB3QixFQUFFNnZDLFFBQVEsRUFBRTMyQyxFQUFFLEdBQUd4MUQsS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSWkwRyxTQUFRLEtBQU0sU0FBUzl2QyxFQUFFNWlFLEVBQUU3RSxHQUFHLElBQUlzQixFQUFFdEIsRUFBRSxHQUFHeW5FLEVBQUV4bUIsU0FBUzMvQyxFQUFFeVIsU0FBU3pSLEdBQUdnd0MsU0FBUyxDQUFDMmxFLFNBQVMsQ0FBQyxFQUFFLFlBQVlDLEtBQUssU0FBU3p2QyxFQUFFNWlFLEVBQUU3RSxFQUFFc0IsRUFBRXEvRCxHQUFHLElBQUlyOUQsRUFBRTJsQyxFQUFFLE1BQU1wa0MsRUFBRUEsRUFBRTRpRSxFQUFFMnZDLGFBQWEsR0FBRzUxRSxFQUFFaW1DLEVBQUUwdkMsT0FBT3JxQyxFQUFFckYsRUFBRTJ3QixpQkFBaUI3MEYsRUFBRWtrRSxFQUFFNHZDLGdCQUFnQixTQUFTNXZDLEVBQUU1aUUsR0FBRyxHQUFHL0YsT0FBT1csVUFBVXdDLGVBQWVyQyxLQUFLNm5FLEVBQUU1aUUsR0FBRyxPQUFPNGlFLEVBQUU1aUUsSUFBSSxNQUFNLFNBQVMsT0FBT3ZCLEVBQUVDLEVBQUV2RCxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxRQUFRLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxVQUFVLE9BQU9BLEVBQUVDLEVBQUV2RCxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxhQUFhLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxJQUFJd3BFLEVBQUV0ckMsRUFBRSxNQUFNMzhCLEVBQUV0QixFQUFFc0IsRUFBRSxPQUFPQSxFQUFFQSxJQUFJLGVBQWUsT0FBT3ZCLEVBQUVDLEVBQUV2RCxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxnQkFBZ0IsQ0FBQ2h6QixLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLGtDQUFrQ3dwRSxFQUFFdHJDLEVBQUUsTUFBTTM4QixFQUFFdEIsRUFBRXNCLEVBQUUsT0FBT0EsRUFBRUEsSUFBSSxpQkFBaUIsT0FBT3ZCLEVBQUVDLEVBQUV2RCxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxXQUFXLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxJQUFJd3BFLEVBQUV0ckMsRUFBRSxNQUFNMzhCLEVBQUV0QixFQUFFc0IsRUFBRSxTQUFTQSxFQUFFQSxJQUFJLE1BQU1pb0UsRUFBRXRyQyxFQUFFLE1BQU0zOEIsRUFBRXRCLEVBQUVzQixFQUFFLFVBQVVBLEVBQUVBLElBQUksZ0JBQWdCMHlHLFNBQVEsS0FBTSxTQUFTOXZDLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLEdBQUd5bkUsRUFBRXhtQixTQUFTMy9DLEVBQUV5UixTQUFTelIsR0FBR2d3QyxTQUFTLENBQUMybEUsU0FBUyxDQUFDLEVBQUUsWUFBWUMsS0FBSyxTQUFTenZDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFLE1BQU0sUUFBUSxPQUFPQSxHQUFHbWtFLEVBQUU0dkMsZ0JBQWdCLFNBQVM1dkMsRUFBRTVpRSxHQUFHLEdBQUcvRixPQUFPVyxVQUFVd0MsZUFBZXJDLEtBQUs2bkUsRUFBRTVpRSxHQUFHLE9BQU80aUUsRUFBRTVpRSxLQUFLN0UsRUFBRSxTQUFTSixLQUFLLE1BQU1pRixFQUFFQSxFQUFFNGlFLEVBQUUydkMsYUFBYSxHQUFHLE9BQU8sQ0FBQ25oRyxLQUFLLFFBQVFzQixLQUFLLEdBQUdwTSxLQUFLdzFELEtBQUtyOUQsRUFBRSxJQUFJLFVBQVVpMEcsU0FBUSxLQUFNLFNBQVM5dkMsRUFBRTVpRSxFQUFFN0UsR0FBRyxJQUFJc0IsRUFBRXRCLEVBQUUsR0FBR3luRSxFQUFFeG1CLFNBQVMzL0MsRUFBRXlSLFNBQVN6UixHQUFHZ3dDLFNBQVMsQ0FBQzJsRSxTQUFTLENBQUMsRUFBRSxZQUFZQyxLQUFLLFNBQVN6dkMsRUFBRTVpRSxFQUFFN0UsRUFBRXNCLEVBQUVxL0QsR0FBRyxJQUFJcjlELEVBQUUybEMsRUFBRSxNQUFNcGtDLEVBQUVBLEVBQUU0aUUsRUFBRTJ2QyxhQUFhLEdBQUc1MUUsRUFBRWltQyxFQUFFNHZDLGdCQUFnQixTQUFTNXZDLEVBQUU1aUUsR0FBRyxHQUFHL0YsT0FBT1csVUFBVXdDLGVBQWVyQyxLQUFLNm5FLEVBQUU1aUUsR0FBRyxPQUFPNGlFLEVBQUU1aUUsSUFBSSxNQUFNLFNBQVMsT0FBT3ZCLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxjQUFjLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxVQUFVLE9BQU9BLEVBQUVrK0IsRUFBRXhoQyxFQUFFLFNBQVNKLEtBQUtxcEMsRUFBRSxNQUFNLENBQUNoekIsS0FBSyxRQUFRc0IsS0FBSyxHQUFHcE0sS0FBS3cxRCxLQUFLcjlELEVBQUUsSUFBSSxJQUFJbWtFLEVBQUUyd0IsaUJBQWlCM3dCLEVBQUUwdkMsT0FBTyxNQUFNdHlHLEVBQUUyOEIsRUFBRTM4QixFQUFFLE9BQU9BLEVBQUVBLElBQUksZ0JBQWdCMHlHLFNBQVEsS0FBTSxTQUFTOXZDLEVBQUU1aUUsRUFBRTdFLEdBQUcsSUFBSXNCLEVBQUV0QixFQUFFLEdBQUd5bkUsRUFBRXhtQixTQUFTMy9DLEVBQUV5UixTQUFTelIsR0FBR2d3QyxTQUFTLENBQUMybEUsU0FBUyxDQUFDLEVBQUUsWUFBWUMsS0FBSyxTQUFTenZDLEVBQUU1aUUsRUFBRTdFLEVBQUVzQixFQUFFcS9ELEdBQUcsSUFBSXI5RCxFQUFFMmxDLEVBQUV3K0IsRUFBRTR2QyxnQkFBZ0IsU0FBUzV2QyxFQUFFNWlFLEdBQUcsR0FBRy9GLE9BQU9XLFVBQVV3QyxlQUFlckMsS0FBSzZuRSxFQUFFNWlFLEdBQUcsT0FBTzRpRSxFQUFFNWlFLElBQUksTUFBTSxpQkFBaUIsT0FBT3ZCLEVBQUVta0UsRUFBRTB2QyxPQUFPLE1BQU10eUcsRUFBRW9rQyxFQUFFcGtDLEVBQUUsT0FBT0EsRUFBRUEsSUFBSXZCLEVBQUUsSUFBSSxlQUFlaTBHLFNBQVEsS0FBTSxTQUFTOXZDLEVBQUU1aUUsRUFBRTdFLElBQUk2RSxFQUFFN0UsRUFBRSxFQUFGQSxFQUFLLElBQUtzSyxLQUFLLENBQUNtOUQsRUFBRW5tRSxFQUFFLDRwQ0FBNHBDLEtBQUttbUUsRUFBRXhtQixRQUFRcDhDLEdBQUcsU0FBUzRpRSxFQUFFNWlFLEVBQUU3RSxJQUFJNkUsRUFBRTdFLEVBQUUsRUFBRkEsRUFBSyxJQUFLc0ssS0FBSyxDQUFDbTlELEVBQUVubUUsRUFBRSxtMENBQW0wQyxLQUFLbW1FLEVBQUV4bUIsUUFBUXA4QyxHQUFHLFNBQVM0aUUsRUFBRTVpRSxFQUFFN0UsSUFBSTZFLEVBQUU3RSxFQUFFLEVBQUZBLEVBQUssSUFBS3NLLEtBQUssQ0FBQ205RCxFQUFFbm1FLEVBQUUsNjVEQUE2NUQsS0FBS21tRSxFQUFFeG1CLFFBQVFwOEMsR0FBRyxTQUFTNGlFLEVBQUU1aUUsRUFBRTdFLEdBQUcsYUFBYUEsRUFBRTJnRSxFQUFFOTdELEdBQUcsSUFBSXZELEVBQUV0QixFQUFFLEdBQUcyZ0UsRUFBRTNnRSxFQUFFQSxFQUFFc0IsR0FBR2dDLEVBQUV0RCxFQUFFLEdBQUdpcEMsRUFBRWpwQyxFQUFFQSxFQUFFc0QsR0FBR2srQixFQUFFeGhDLEVBQUUsR0FBRzhzRSxFQUFFOXNFLEVBQUVBLEVBQUV3aEMsR0FBR2orQixFQUFFdkQsRUFBRSxHQUFHMkMsRUFBRTNDLEVBQUVBLEVBQUV1RCxHQUFHYixFQUFFMUMsRUFBRSxHQUFHc3FDLEVBQUV0cUMsRUFBRUEsRUFBRTBDLEdBQUdpUyxFQUFFM1UsRUFBRSxJQUFJMmUsRUFBRTNlLEVBQUVBLEVBQUUyVSxHQUFHNHlELEVBQUV2bkUsRUFBRSxHQUFHZixFQUFFLElBQUlzb0UsRUFBRTVrRSxFQUFFMUQsRUFBRWloSCxJQUFJLE1BQU1qaEgsRUFBRWtoSCxLQUFLLE9BQU9saEgsRUFBRW1oSCxNQUFNLFFBQVEsSUFBSXIvRCxFQUFFOWhELEVBQUVzNUIsRUFBRXY0QixFQUFFLEdBQUdvRSxFQUFFcEUsRUFBRUEsRUFBRXU0QixHQUFHaThCLEVBQUUxMUQsT0FBT3lvRSxFQUFFbmpFLEVBQVR0RixDQUFZLENBQUNvZ0IsS0FBSyxTQUFTdW9ELEdBQUduaUUsS0FBSys2RyxLQUFLNTRDLEdBQUdqa0MsS0FBSyxXQUFXLE9BQU9sK0IsS0FBSys2RyxLQUFLNzhFLE9BQU9sK0IsTUFBTTJyRixLQUFLLFdBQVcsT0FBTzNyRixLQUFLKzZHLEtBQUtwdkIsT0FBTzNyRixNQUFNaWMsUUFBUSxXQUFXamMsS0FBSys2RyxLQUFLMStHLFlBQVlrdEUsRUFBRSxDQUFDLGFBQWEsYUFBYSxtQkFBbUIsU0FBUyxZQUFZLFNBQVMsVUFBVSxXQUFXLFdBQVcsY0FBYyxlQUFlLGNBQWMsZ0JBQWdCLFlBQVksWUFBWSxlQUFlLGdCQUFnQixxQkFBcUIsZ0JBQWdCdGtCLEVBQUVza0IsRUFBRXR0RSxPQUFPLFNBQVNtdEUsRUFBRWpILEdBQUcsSUFBSSxJQUFJNWlFLEVBQUUsR0FBRzdFLEVBQUUsRUFBRUEsRUFBRXVxRCxFQUFFdnFELElBQUk2RSxFQUFFZ3FFLEVBQUU3dUUsSUFBSXluRSxFQUFFem5FLEdBQUcsT0FBTzZFLEVBQUUsU0FBUzB1RSxFQUFFOUwsR0FBRyxPQUFPM29FLE9BQU95b0UsRUFBRTBLLEVBQVRuekUsQ0FBWTJvRSxLQUFLQSxFQUFFaUgsRUFBRWpILElBQUlBLEVBQUU2NEMsbUJBQW1CNzRDLEVBQUU2NEMsaUJBQWlCNzRDLEVBQUU4NEMsVUFBVXpoSCxPQUFPeW9FLEVBQUVvTCxFQUFUN3pFLENBQVksQ0FBQzBoSCxzQkFBc0IsVUFBVUMsc0JBQXNCLFVBQVVDLGtCQUFrQixPQUFPQyx1QkFBdUIsVUFBVUMsdUJBQXVCLFVBQVVDLG1CQUFtQixVQUFVQyxNQUFNLE9BQU9DLEtBQUssUUFBUXQ1QyxHQUFHLFNBQVNnTCxFQUFFaEwsR0FBRyxPQUFPM29FLE9BQU95b0UsRUFBRTBLLEVBQVRuekUsQ0FBWTJvRSxLQUFLQSxFQUFFaUgsRUFBRWpILElBQUlBLEVBQUU2NEMsbUJBQW1CNzRDLEVBQUU2NEMsaUJBQWlCNzRDLEVBQUU4NEMsVUFBVXpoSCxPQUFPeW9FLEVBQUVvTCxFQUFUN3pFLENBQVksQ0FBQzBoSCxzQkFBc0IsVUFBVUMsc0JBQXNCLFVBQVVDLGtCQUFrQixVQUFVQyx1QkFBdUIsVUFBVUMsdUJBQXVCLE9BQU9DLG1CQUFtQixVQUFVQyxNQUFNLE9BQU9DLEtBQUssUUFBUXQ1QyxHQUFHLElBQUl5SyxFQUFFLENBQUM4dUMsTUFBTXZ1QyxFQUFFLENBQUM2dEMsaUJBQWlCLFVBQVU5N0MsV0FBVyxPQUFPQyxXQUFXLE9BQU93OEMsaUJBQWlCLE9BQU9DLE9BQU8sVUFBVS8wQixVQUFVLFVBQVVTLE9BQU8sT0FBT3UwQixRQUFRLE9BQU9aLFNBQVMsVUFBVWEsU0FBUyxVQUFVQyxZQUFZLFVBQVVDLGFBQWEsVUFBVUMsWUFBWSxVQUFVQyxjQUFjLFVBQVVDLFVBQVUsVUFBVUMsVUFBVSxVQUFVQyxhQUFhLFVBQVVDLGNBQWMsT0FBT0MsbUJBQW1CLFVBQVVDLGFBQWEsVUFBVUMsWUFBWSxZQUFZQyxLQUFLenVDLEVBQUUsQ0FBQytzQyxpQkFBaUIsT0FBTzk3QyxXQUFXLFVBQVVDLFdBQVcsVUFBVXc4QyxpQkFBaUIsVUFBVUMsT0FBTyxPQUFPLzBCLFVBQVUsT0FBT1MsT0FBTyxVQUFVdTBCLFFBQVEsT0FBT1osU0FBUyxVQUFVYSxTQUFTLFVBQVVDLFlBQVksVUFBVUMsYUFBYSxVQUFVQyxZQUFZLFVBQVVDLGNBQWMsVUFBVUMsVUFBVSxVQUFVQyxVQUFVLFVBQVVDLGFBQWEsVUFBVUMsY0FBYyxVQUFVQyxtQkFBbUIsVUFBVUMsYUFBYSxZQUFZLG1CQUFtQnZ1QyxFQUFFLENBQUMsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsWUFBWSxrQkFBa0JBLEVBQUUsQ0FBQyxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxZQUFZLG1CQUFtQmQsRUFBRSxDQUFDLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFlBQVkscUJBQXFCYyxFQUFFLENBQUMsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsWUFBWSxzQkFBc0JBLEVBQUUsQ0FBQyxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxZQUFZLGNBQWNBLEVBQUUsQ0FBQyxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxZQUFZMHVDLFFBQVExdUMsRUFBRSxDQUFDLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFlBQVksV0FBV0EsRUFBRSxDQUFDLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFlBQVksZ0JBQWdCQSxFQUFFLENBQUMsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsWUFBWSxpQkFBaUJkLEVBQUUsQ0FBQyxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxZQUFZLGlCQUFpQmMsRUFBRSxDQUFDLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFlBQVksa0JBQWtCZCxFQUFFLENBQUMsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsWUFBWXl2QyxPQUFPenZDLEVBQUUsQ0FBQyxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUs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QUFVdDNILEVBQUVzSSxTQUFRLFNBQVV0SSxHQUFHLElBQUl2RCxFQUFFbW1FLEVBQUUzb0UsT0FBT3lvRSxFQUFFaW1ELEdBQVQxdUgsQ0FBYStGLElBQUksSUFBSXZELEdBQUd0QixFQUFFNkosSUFBSSxJQUFJdkksR0FBRyxNQUFNbW1FLEdBQUczb0UsT0FBT3lvRSxFQUFFMjhDLEdBQVRwbEgsRUFBYSxXQUFZb3ZFLEVBQUUvNUQsTUFBTSwwQ0FBMEM3RCxPQUFPekwsRUFBRSxLQUFLNGlFLEVBQUV0UixnQkFBZ0JuMkQsRUFBRTRsSCxTQUFTL2dILEVBQUUsSUFBSSxjQUFjMjlFLEdBQUdqYixFQUFFQyxFQUFFMW9FLE9BQU84ckcsT0FBT3BvQixHQUFHLENBQUMwWCxTQUFTbm1CLEVBQUV6d0UsRUFBRXU1SCxRQUFROXBELEVBQUUrcEQsVUFBVXRsRCIsImZpbGUiOiJhd2FyZF9kaXN0L2pzL3ZlbmRvci42M2VhYzBlNWI1ZjIyYTZkNTg4OS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogVnVlLmpzIHYyLjYuMTFcbiAqIChjKSAyMDE0LTIwMTkgRXZhbiBZb3VcbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLyogICovXG5cbnZhciBlbXB0eU9iamVjdCA9IE9iamVjdC5mcmVlemUoe30pO1xuXG4vLyBUaGVzZSBoZWxwZXJzIHByb2R1Y2UgYmV0dGVyIFZNIGNvZGUgaW4gSlMgZW5naW5lcyBkdWUgdG8gdGhlaXJcbi8vIGV4cGxpY2l0bmVzcyBhbmQgZnVuY3Rpb24gaW5saW5pbmcuXG5mdW5jdGlvbiBpc1VuZGVmICh2KSB7XG4gIHJldHVybiB2ID09PSB1bmRlZmluZWQgfHwgdiA9PT0gbnVsbFxufVxuXG5mdW5jdGlvbiBpc0RlZiAodikge1xuICByZXR1cm4gdiAhPT0gdW5kZWZpbmVkICYmIHYgIT09IG51bGxcbn1cblxuZnVuY3Rpb24gaXNUcnVlICh2KSB7XG4gIHJldHVybiB2ID09PSB0cnVlXG59XG5cbmZ1bmN0aW9uIGlzRmFsc2UgKHYpIHtcbiAgcmV0dXJuIHYgPT09IGZhbHNlXG59XG5cbi8qKlxuICogQ2hlY2sgaWYgdmFsdWUgaXMgcHJpbWl0aXZlLlxuICovXG5mdW5jdGlvbiBpc1ByaW1pdGl2ZSAodmFsdWUpIHtcbiAgcmV0dXJuIChcbiAgICB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnIHx8XG4gICAgdHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyB8fFxuICAgIC8vICRmbG93LWRpc2FibGUtbGluZVxuICAgIHR5cGVvZiB2YWx1ZSA9PT0gJ3N5bWJvbCcgfHxcbiAgICB0eXBlb2YgdmFsdWUgPT09ICdib29sZWFuJ1xuICApXG59XG5cbi8qKlxuICogUXVpY2sgb2JqZWN0IGNoZWNrIC0gdGhpcyBpcyBwcmltYXJpbHkgdXNlZCB0byB0ZWxsXG4gKiBPYmplY3RzIGZyb20gcHJpbWl0aXZlIHZhbHVlcyB3aGVuIHdlIGtub3cgdGhlIHZhbHVlXG4gKiBpcyBhIEpTT04tY29tcGxpYW50IHR5cGUuXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0IChvYmopIHtcbiAgcmV0dXJuIG9iaiAhPT0gbnVsbCAmJiB0eXBlb2Ygb2JqID09PSAnb2JqZWN0J1xufVxuXG4vKipcbiAqIEdldCB0aGUgcmF3IHR5cGUgc3RyaW5nIG9mIGEgdmFsdWUsIGUuZy4sIFtvYmplY3QgT2JqZWN0XS5cbiAqL1xudmFyIF90b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG5cbmZ1bmN0aW9uIHRvUmF3VHlwZSAodmFsdWUpIHtcbiAgcmV0dXJuIF90b1N0cmluZy5jYWxsKHZhbHVlKS5zbGljZSg4LCAtMSlcbn1cblxuLyoqXG4gKiBTdHJpY3Qgb2JqZWN0IHR5cGUgY2hlY2suIE9ubHkgcmV0dXJucyB0cnVlXG4gKiBmb3IgcGxhaW4gSmF2YVNjcmlwdCBvYmplY3RzLlxuICovXG5mdW5jdGlvbiBpc1BsYWluT2JqZWN0IChvYmopIHtcbiAgcmV0dXJuIF90b1N0cmluZy5jYWxsKG9iaikgPT09ICdbb2JqZWN0IE9iamVjdF0nXG59XG5cbmZ1bmN0aW9uIGlzUmVnRXhwICh2KSB7XG4gIHJldHVybiBfdG9TdHJpbmcuY2FsbCh2KSA9PT0gJ1tvYmplY3QgUmVnRXhwXSdcbn1cblxuLyoqXG4gKiBDaGVjayBpZiB2YWwgaXMgYSB2YWxpZCBhcnJheSBpbmRleC5cbiAqL1xuZnVuY3Rpb24gaXNWYWxpZEFycmF5SW5kZXggKHZhbCkge1xuICB2YXIgbiA9IHBhcnNlRmxvYXQoU3RyaW5nKHZhbCkpO1xuICByZXR1cm4gbiA+PSAwICYmIE1hdGguZmxvb3IobikgPT09IG4gJiYgaXNGaW5pdGUodmFsKVxufVxuXG5mdW5jdGlvbiBpc1Byb21pc2UgKHZhbCkge1xuICByZXR1cm4gKFxuICAgIGlzRGVmKHZhbCkgJiZcbiAgICB0eXBlb2YgdmFsLnRoZW4gPT09ICdmdW5jdGlvbicgJiZcbiAgICB0eXBlb2YgdmFsLmNhdGNoID09PSAnZnVuY3Rpb24nXG4gIClcbn1cblxuLyoqXG4gKiBDb252ZXJ0IGEgdmFsdWUgdG8gYSBzdHJpbmcgdGhhdCBpcyBhY3R1YWxseSByZW5kZXJlZC5cbiAqL1xuZnVuY3Rpb24gdG9TdHJpbmcgKHZhbCkge1xuICByZXR1cm4gdmFsID09IG51bGxcbiAgICA/ICcnXG4gICAgOiBBcnJheS5pc0FycmF5KHZhbCkgfHwgKGlzUGxhaW5PYmplY3QodmFsKSAmJiB2YWwudG9TdHJpbmcgPT09IF90b1N0cmluZylcbiAgICAgID8gSlNPTi5zdHJpbmdpZnkodmFsLCBudWxsLCAyKVxuICAgICAgOiBTdHJpbmcodmFsKVxufVxuXG4vKipcbiAqIENvbnZlcnQgYW4gaW5wdXQgdmFsdWUgdG8gYSBudW1iZXIgZm9yIHBlcnNpc3RlbmNlLlxuICogSWYgdGhlIGNvbnZlcnNpb24gZmFpbHMsIHJldHVybiBvcmlnaW5hbCBzdHJpbmcuXG4gKi9cbmZ1bmN0aW9uIHRvTnVtYmVyICh2YWwpIHtcbiAgdmFyIG4gPSBwYXJzZUZsb2F0KHZhbCk7XG4gIHJldHVybiBpc05hTihuKSA/IHZhbCA6IG5cbn1cblxuLyoqXG4gKiBNYWtlIGEgbWFwIGFuZCByZXR1cm4gYSBmdW5jdGlvbiBmb3IgY2hlY2tpbmcgaWYgYSBrZXlcbiAqIGlzIGluIHRoYXQgbWFwLlxuICovXG5mdW5jdGlvbiBtYWtlTWFwIChcbiAgc3RyLFxuICBleHBlY3RzTG93ZXJDYXNlXG4pIHtcbiAgdmFyIG1hcCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIHZhciBsaXN0ID0gc3RyLnNwbGl0KCcsJyk7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIG1hcFtsaXN0W2ldXSA9IHRydWU7XG4gIH1cbiAgcmV0dXJuIGV4cGVjdHNMb3dlckNhc2VcbiAgICA/IGZ1bmN0aW9uICh2YWwpIHsgcmV0dXJuIG1hcFt2YWwudG9Mb3dlckNhc2UoKV07IH1cbiAgICA6IGZ1bmN0aW9uICh2YWwpIHsgcmV0dXJuIG1hcFt2YWxdOyB9XG59XG5cbi8qKlxuICogQ2hlY2sgaWYgYSB0YWcgaXMgYSBidWlsdC1pbiB0YWcuXG4gKi9cbnZhciBpc0J1aWx0SW5UYWcgPSBtYWtlTWFwKCdzbG90LGNvbXBvbmVudCcsIHRydWUpO1xuXG4vKipcbiAqIENoZWNrIGlmIGFuIGF0dHJpYnV0ZSBpcyBhIHJlc2VydmVkIGF0dHJpYnV0ZS5cbiAqL1xudmFyIGlzUmVzZXJ2ZWRBdHRyaWJ1dGUgPSBtYWtlTWFwKCdrZXkscmVmLHNsb3Qsc2xvdC1zY29wZSxpcycpO1xuXG4vKipcbiAqIFJlbW92ZSBhbiBpdGVtIGZyb20gYW4gYXJyYXkuXG4gKi9cbmZ1bmN0aW9uIHJlbW92ZSAoYXJyLCBpdGVtKSB7XG4gIGlmIChhcnIubGVuZ3RoKSB7XG4gICAgdmFyIGluZGV4ID0gYXJyLmluZGV4T2YoaXRlbSk7XG4gICAgaWYgKGluZGV4ID4gLTEpIHtcbiAgICAgIHJldHVybiBhcnIuc3BsaWNlKGluZGV4LCAxKVxuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIENoZWNrIHdoZXRoZXIgYW4gb2JqZWN0IGhhcyB0aGUgcHJvcGVydHkuXG4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5mdW5jdGlvbiBoYXNPd24gKG9iaiwga2V5KSB7XG4gIHJldHVybiBoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIGNhY2hlZCB2ZXJzaW9uIG9mIGEgcHVyZSBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gY2FjaGVkIChmbikge1xuICB2YXIgY2FjaGUgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICByZXR1cm4gKGZ1bmN0aW9uIGNhY2hlZEZuIChzdHIpIHtcbiAgICB2YXIgaGl0ID0gY2FjaGVbc3RyXTtcbiAgICByZXR1cm4gaGl0IHx8IChjYWNoZVtzdHJdID0gZm4oc3RyKSlcbiAgfSlcbn1cblxuLyoqXG4gKiBDYW1lbGl6ZSBhIGh5cGhlbi1kZWxpbWl0ZWQgc3RyaW5nLlxuICovXG52YXIgY2FtZWxpemVSRSA9IC8tKFxcdykvZztcbnZhciBjYW1lbGl6ZSA9IGNhY2hlZChmdW5jdGlvbiAoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZShjYW1lbGl6ZVJFLCBmdW5jdGlvbiAoXywgYykgeyByZXR1cm4gYyA/IGMudG9VcHBlckNhc2UoKSA6ICcnOyB9KVxufSk7XG5cbi8qKlxuICogQ2FwaXRhbGl6ZSBhIHN0cmluZy5cbiAqL1xudmFyIGNhcGl0YWxpemUgPSBjYWNoZWQoZnVuY3Rpb24gKHN0cikge1xuICByZXR1cm4gc3RyLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgc3RyLnNsaWNlKDEpXG59KTtcblxuLyoqXG4gKiBIeXBoZW5hdGUgYSBjYW1lbENhc2Ugc3RyaW5nLlxuICovXG52YXIgaHlwaGVuYXRlUkUgPSAvXFxCKFtBLVpdKS9nO1xudmFyIGh5cGhlbmF0ZSA9IGNhY2hlZChmdW5jdGlvbiAoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZShoeXBoZW5hdGVSRSwgJy0kMScpLnRvTG93ZXJDYXNlKClcbn0pO1xuXG4vKipcbiAqIFNpbXBsZSBiaW5kIHBvbHlmaWxsIGZvciBlbnZpcm9ubWVudHMgdGhhdCBkbyBub3Qgc3VwcG9ydCBpdCxcbiAqIGUuZy4sIFBoYW50b21KUyAxLnguIFRlY2huaWNhbGx5LCB3ZSBkb24ndCBuZWVkIHRoaXMgYW55bW9yZVxuICogc2luY2UgbmF0aXZlIGJpbmQgaXMgbm93IHBlcmZvcm1hbnQgZW5vdWdoIGluIG1vc3QgYnJvd3NlcnMuXG4gKiBCdXQgcmVtb3ZpbmcgaXQgd291bGQgbWVhbiBicmVha2luZyBjb2RlIHRoYXQgd2FzIGFibGUgdG8gcnVuIGluXG4gKiBQaGFudG9tSlMgMS54LCBzbyB0aGlzIG11c3QgYmUga2VwdCBmb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eS5cbiAqL1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuZnVuY3Rpb24gcG9seWZpbGxCaW5kIChmbiwgY3R4KSB7XG4gIGZ1bmN0aW9uIGJvdW5kRm4gKGEpIHtcbiAgICB2YXIgbCA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgcmV0dXJuIGxcbiAgICAgID8gbCA+IDFcbiAgICAgICAgPyBmbi5hcHBseShjdHgsIGFyZ3VtZW50cylcbiAgICAgICAgOiBmbi5jYWxsKGN0eCwgYSlcbiAgICAgIDogZm4uY2FsbChjdHgpXG4gIH1cblxuICBib3VuZEZuLl9sZW5ndGggPSBmbi5sZW5ndGg7XG4gIHJldHVybiBib3VuZEZuXG59XG5cbmZ1bmN0aW9uIG5hdGl2ZUJpbmQgKGZuLCBjdHgpIHtcbiAgcmV0dXJuIGZuLmJpbmQoY3R4KVxufVxuXG52YXIgYmluZCA9IEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kXG4gID8gbmF0aXZlQmluZFxuICA6IHBvbHlmaWxsQmluZDtcblxuLyoqXG4gKiBDb252ZXJ0IGFuIEFycmF5LWxpa2Ugb2JqZWN0IHRvIGEgcmVhbCBBcnJheS5cbiAqL1xuZnVuY3Rpb24gdG9BcnJheSAobGlzdCwgc3RhcnQpIHtcbiAgc3RhcnQgPSBzdGFydCB8fCAwO1xuICB2YXIgaSA9IGxpc3QubGVuZ3RoIC0gc3RhcnQ7XG4gIHZhciByZXQgPSBuZXcgQXJyYXkoaSk7XG4gIHdoaWxlIChpLS0pIHtcbiAgICByZXRbaV0gPSBsaXN0W2kgKyBzdGFydF07XG4gIH1cbiAgcmV0dXJuIHJldFxufVxuXG4vKipcbiAqIE1peCBwcm9wZXJ0aWVzIGludG8gdGFyZ2V0IG9iamVjdC5cbiAqL1xuZnVuY3Rpb24gZXh0ZW5kICh0bywgX2Zyb20pIHtcbiAgZm9yICh2YXIga2V5IGluIF9mcm9tKSB7XG4gICAgdG9ba2V5XSA9IF9mcm9tW2tleV07XG4gIH1cbiAgcmV0dXJuIHRvXG59XG5cbi8qKlxuICogTWVyZ2UgYW4gQXJyYXkgb2YgT2JqZWN0cyBpbnRvIGEgc2luZ2xlIE9iamVjdC5cbiAqL1xuZnVuY3Rpb24gdG9PYmplY3QgKGFycikge1xuICB2YXIgcmVzID0ge307XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGFycltpXSkge1xuICAgICAgZXh0ZW5kKHJlcywgYXJyW2ldKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc1xufVxuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xuXG4vKipcbiAqIFBlcmZvcm0gbm8gb3BlcmF0aW9uLlxuICogU3R1YmJpbmcgYXJncyB0byBtYWtlIEZsb3cgaGFwcHkgd2l0aG91dCBsZWF2aW5nIHVzZWxlc3MgdHJhbnNwaWxlZCBjb2RlXG4gKiB3aXRoIC4uLnJlc3QgKGh0dHBzOi8vZmxvdy5vcmcvYmxvZy8yMDE3LzA1LzA3L1N0cmljdC1GdW5jdGlvbi1DYWxsLUFyaXR5LykuXG4gKi9cbmZ1bmN0aW9uIG5vb3AgKGEsIGIsIGMpIHt9XG5cbi8qKlxuICogQWx3YXlzIHJldHVybiBmYWxzZS5cbiAqL1xudmFyIG5vID0gZnVuY3Rpb24gKGEsIGIsIGMpIHsgcmV0dXJuIGZhbHNlOyB9O1xuXG4vKiBlc2xpbnQtZW5hYmxlIG5vLXVudXNlZC12YXJzICovXG5cbi8qKlxuICogUmV0dXJuIHRoZSBzYW1lIHZhbHVlLlxuICovXG52YXIgaWRlbnRpdHkgPSBmdW5jdGlvbiAoXykgeyByZXR1cm4gXzsgfTtcblxuLyoqXG4gKiBHZW5lcmF0ZSBhIHN0cmluZyBjb250YWluaW5nIHN0YXRpYyBrZXlzIGZyb20gY29tcGlsZXIgbW9kdWxlcy5cbiAqL1xuZnVuY3Rpb24gZ2VuU3RhdGljS2V5cyAobW9kdWxlcykge1xuICByZXR1cm4gbW9kdWxlcy5yZWR1Y2UoZnVuY3Rpb24gKGtleXMsIG0pIHtcbiAgICByZXR1cm4ga2V5cy5jb25jYXQobS5zdGF0aWNLZXlzIHx8IFtdKVxuICB9LCBbXSkuam9pbignLCcpXG59XG5cbi8qKlxuICogQ2hlY2sgaWYgdHdvIHZhbHVlcyBhcmUgbG9vc2VseSBlcXVhbCAtIHRoYXQgaXMsXG4gKiBpZiB0aGV5IGFyZSBwbGFpbiBvYmplY3RzLCBkbyB0aGV5IGhhdmUgdGhlIHNhbWUgc2hhcGU/XG4gKi9cbmZ1bmN0aW9uIGxvb3NlRXF1YWwgKGEsIGIpIHtcbiAgaWYgKGEgPT09IGIpIHsgcmV0dXJuIHRydWUgfVxuICB2YXIgaXNPYmplY3RBID0gaXNPYmplY3QoYSk7XG4gIHZhciBpc09iamVjdEIgPSBpc09iamVjdChiKTtcbiAgaWYgKGlzT2JqZWN0QSAmJiBpc09iamVjdEIpIHtcbiAgICB0cnkge1xuICAgICAgdmFyIGlzQXJyYXlBID0gQXJyYXkuaXNBcnJheShhKTtcbiAgICAgIHZhciBpc0FycmF5QiA9IEFycmF5LmlzQXJyYXkoYik7XG4gICAgICBpZiAoaXNBcnJheUEgJiYgaXNBcnJheUIpIHtcbiAgICAgICAgcmV0dXJuIGEubGVuZ3RoID09PSBiLmxlbmd0aCAmJiBhLmV2ZXJ5KGZ1bmN0aW9uIChlLCBpKSB7XG4gICAgICAgICAgcmV0dXJuIGxvb3NlRXF1YWwoZSwgYltpXSlcbiAgICAgICAgfSlcbiAgICAgIH0gZWxzZSBpZiAoYSBpbnN0YW5jZW9mIERhdGUgJiYgYiBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICAgICAgcmV0dXJuIGEuZ2V0VGltZSgpID09PSBiLmdldFRpbWUoKVxuICAgICAgfSBlbHNlIGlmICghaXNBcnJheUEgJiYgIWlzQXJyYXlCKSB7XG4gICAgICAgIHZhciBrZXlzQSA9IE9iamVjdC5rZXlzKGEpO1xuICAgICAgICB2YXIga2V5c0IgPSBPYmplY3Qua2V5cyhiKTtcbiAgICAgICAgcmV0dXJuIGtleXNBLmxlbmd0aCA9PT0ga2V5c0IubGVuZ3RoICYmIGtleXNBLmV2ZXJ5KGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICByZXR1cm4gbG9vc2VFcXVhbChhW2tleV0sIGJba2V5XSlcbiAgICAgICAgfSlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG4gIH0gZWxzZSBpZiAoIWlzT2JqZWN0QSAmJiAhaXNPYmplY3RCKSB7XG4gICAgcmV0dXJuIFN0cmluZyhhKSA9PT0gU3RyaW5nKGIpXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cbn1cblxuLyoqXG4gKiBSZXR1cm4gdGhlIGZpcnN0IGluZGV4IGF0IHdoaWNoIGEgbG9vc2VseSBlcXVhbCB2YWx1ZSBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBhcnJheSAoaWYgdmFsdWUgaXMgYSBwbGFpbiBvYmplY3QsIHRoZSBhcnJheSBtdXN0XG4gKiBjb250YWluIGFuIG9iamVjdCBvZiB0aGUgc2FtZSBzaGFwZSksIG9yIC0xIGlmIGl0IGlzIG5vdCBwcmVzZW50LlxuICovXG5mdW5jdGlvbiBsb29zZUluZGV4T2YgKGFyciwgdmFsKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGxvb3NlRXF1YWwoYXJyW2ldLCB2YWwpKSB7IHJldHVybiBpIH1cbiAgfVxuICByZXR1cm4gLTFcbn1cblxuLyoqXG4gKiBFbnN1cmUgYSBmdW5jdGlvbiBpcyBjYWxsZWQgb25seSBvbmNlLlxuICovXG5mdW5jdGlvbiBvbmNlIChmbikge1xuICB2YXIgY2FsbGVkID0gZmFsc2U7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKCFjYWxsZWQpIHtcbiAgICAgIGNhbGxlZCA9IHRydWU7XG4gICAgICBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH1cbiAgfVxufVxuXG52YXIgU1NSX0FUVFIgPSAnZGF0YS1zZXJ2ZXItcmVuZGVyZWQnO1xuXG52YXIgQVNTRVRfVFlQRVMgPSBbXG4gICdjb21wb25lbnQnLFxuICAnZGlyZWN0aXZlJyxcbiAgJ2ZpbHRlcidcbl07XG5cbnZhciBMSUZFQ1lDTEVfSE9PS1MgPSBbXG4gICdiZWZvcmVDcmVhdGUnLFxuICAnY3JlYXRlZCcsXG4gICdiZWZvcmVNb3VudCcsXG4gICdtb3VudGVkJyxcbiAgJ2JlZm9yZVVwZGF0ZScsXG4gICd1cGRhdGVkJyxcbiAgJ2JlZm9yZURlc3Ryb3knLFxuICAnZGVzdHJveWVkJyxcbiAgJ2FjdGl2YXRlZCcsXG4gICdkZWFjdGl2YXRlZCcsXG4gICdlcnJvckNhcHR1cmVkJyxcbiAgJ3NlcnZlclByZWZldGNoJ1xuXTtcblxuLyogICovXG5cblxuXG52YXIgY29uZmlnID0gKHtcbiAgLyoqXG4gICAqIE9wdGlvbiBtZXJnZSBzdHJhdGVnaWVzICh1c2VkIGluIGNvcmUvdXRpbC9vcHRpb25zKVxuICAgKi9cbiAgLy8gJGZsb3ctZGlzYWJsZS1saW5lXG4gIG9wdGlvbk1lcmdlU3RyYXRlZ2llczogT2JqZWN0LmNyZWF0ZShudWxsKSxcblxuICAvKipcbiAgICogV2hldGhlciB0byBzdXBwcmVzcyB3YXJuaW5ncy5cbiAgICovXG4gIHNpbGVudDogZmFsc2UsXG5cbiAgLyoqXG4gICAqIFNob3cgcHJvZHVjdGlvbiBtb2RlIHRpcCBtZXNzYWdlIG9uIGJvb3Q/XG4gICAqL1xuICBwcm9kdWN0aW9uVGlwOiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nLFxuXG4gIC8qKlxuICAgKiBXaGV0aGVyIHRvIGVuYWJsZSBkZXZ0b29sc1xuICAgKi9cbiAgZGV2dG9vbHM6IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicsXG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgdG8gcmVjb3JkIHBlcmZcbiAgICovXG4gIHBlcmZvcm1hbmNlOiBmYWxzZSxcblxuICAvKipcbiAgICogRXJyb3IgaGFuZGxlciBmb3Igd2F0Y2hlciBlcnJvcnNcbiAgICovXG4gIGVycm9ySGFuZGxlcjogbnVsbCxcblxuICAvKipcbiAgICogV2FybiBoYW5kbGVyIGZvciB3YXRjaGVyIHdhcm5zXG4gICAqL1xuICB3YXJuSGFuZGxlcjogbnVsbCxcblxuICAvKipcbiAgICogSWdub3JlIGNlcnRhaW4gY3VzdG9tIGVsZW1lbnRzXG4gICAqL1xuICBpZ25vcmVkRWxlbWVudHM6IFtdLFxuXG4gIC8qKlxuICAgKiBDdXN0b20gdXNlciBrZXkgYWxpYXNlcyBmb3Igdi1vblxuICAgKi9cbiAgLy8gJGZsb3ctZGlzYWJsZS1saW5lXG4gIGtleUNvZGVzOiBPYmplY3QuY3JlYXRlKG51bGwpLFxuXG4gIC8qKlxuICAgKiBDaGVjayBpZiBhIHRhZyBpcyByZXNlcnZlZCBzbyB0aGF0IGl0IGNhbm5vdCBiZSByZWdpc3RlcmVkIGFzIGFcbiAgICogY29tcG9uZW50LiBUaGlzIGlzIHBsYXRmb3JtLWRlcGVuZGVudCBhbmQgbWF5IGJlIG92ZXJ3cml0dGVuLlxuICAgKi9cbiAgaXNSZXNlcnZlZFRhZzogbm8sXG5cbiAgLyoqXG4gICAqIENoZWNrIGlmIGFuIGF0dHJpYnV0ZSBpcyByZXNlcnZlZCBzbyB0aGF0IGl0IGNhbm5vdCBiZSB1c2VkIGFzIGEgY29tcG9uZW50XG4gICAqIHByb3AuIFRoaXMgaXMgcGxhdGZvcm0tZGVwZW5kZW50IGFuZCBtYXkgYmUgb3ZlcndyaXR0ZW4uXG4gICAqL1xuICBpc1Jlc2VydmVkQXR0cjogbm8sXG5cbiAgLyoqXG4gICAqIENoZWNrIGlmIGEgdGFnIGlzIGFuIHVua25vd24gZWxlbWVudC5cbiAgICogUGxhdGZvcm0tZGVwZW5kZW50LlxuICAgKi9cbiAgaXNVbmtub3duRWxlbWVudDogbm8sXG5cbiAgLyoqXG4gICAqIEdldCB0aGUgbmFtZXNwYWNlIG9mIGFuIGVsZW1lbnRcbiAgICovXG4gIGdldFRhZ05hbWVzcGFjZTogbm9vcCxcblxuICAvKipcbiAgICogUGFyc2UgdGhlIHJlYWwgdGFnIG5hbWUgZm9yIHRoZSBzcGVjaWZpYyBwbGF0Zm9ybS5cbiAgICovXG4gIHBhcnNlUGxhdGZvcm1UYWdOYW1lOiBpZGVudGl0eSxcblxuICAvKipcbiAgICogQ2hlY2sgaWYgYW4gYXR0cmlidXRlIG11c3QgYmUgYm91bmQgdXNpbmcgcHJvcGVydHksIGUuZy4gdmFsdWVcbiAgICogUGxhdGZvcm0tZGVwZW5kZW50LlxuICAgKi9cbiAgbXVzdFVzZVByb3A6IG5vLFxuXG4gIC8qKlxuICAgKiBQZXJmb3JtIHVwZGF0ZXMgYXN5bmNocm9ub3VzbHkuIEludGVuZGVkIHRvIGJlIHVzZWQgYnkgVnVlIFRlc3QgVXRpbHNcbiAgICogVGhpcyB3aWxsIHNpZ25pZmljYW50bHkgcmVkdWNlIHBlcmZvcm1hbmNlIGlmIHNldCB0byBmYWxzZS5cbiAgICovXG4gIGFzeW5jOiB0cnVlLFxuXG4gIC8qKlxuICAgKiBFeHBvc2VkIGZvciBsZWdhY3kgcmVhc29uc1xuICAgKi9cbiAgX2xpZmVjeWNsZUhvb2tzOiBMSUZFQ1lDTEVfSE9PS1Ncbn0pO1xuXG4vKiAgKi9cblxuLyoqXG4gKiB1bmljb2RlIGxldHRlcnMgdXNlZCBmb3IgcGFyc2luZyBodG1sIHRhZ3MsIGNvbXBvbmVudCBuYW1lcyBhbmQgcHJvcGVydHkgcGF0aHMuXG4gKiB1c2luZyBodHRwczovL3d3dy53My5vcmcvVFIvaHRtbDUzL3NlbWFudGljcy1zY3JpcHRpbmcuaHRtbCNwb3RlbnRpYWxjdXN0b21lbGVtZW50bmFtZVxuICogc2tpcHBpbmcgXFx1MTAwMDAtXFx1RUZGRkYgZHVlIHRvIGl0IGZyZWV6aW5nIHVwIFBoYW50b21KU1xuICovXG52YXIgdW5pY29kZVJlZ0V4cCA9IC9hLXpBLVpcXHUwMEI3XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjAzRi1cXHUyMDQwXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZELztcblxuLyoqXG4gKiBDaGVjayBpZiBhIHN0cmluZyBzdGFydHMgd2l0aCAkIG9yIF9cbiAqL1xuZnVuY3Rpb24gaXNSZXNlcnZlZCAoc3RyKSB7XG4gIHZhciBjID0gKHN0ciArICcnKS5jaGFyQ29kZUF0KDApO1xuICByZXR1cm4gYyA9PT0gMHgyNCB8fCBjID09PSAweDVGXG59XG5cbi8qKlxuICogRGVmaW5lIGEgcHJvcGVydHkuXG4gKi9cbmZ1bmN0aW9uIGRlZiAob2JqLCBrZXksIHZhbCwgZW51bWVyYWJsZSkge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICB2YWx1ZTogdmFsLFxuICAgIGVudW1lcmFibGU6ICEhZW51bWVyYWJsZSxcbiAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICBjb25maWd1cmFibGU6IHRydWVcbiAgfSk7XG59XG5cbi8qKlxuICogUGFyc2Ugc2ltcGxlIHBhdGguXG4gKi9cbnZhciBiYWlsUkUgPSBuZXcgUmVnRXhwKChcIlteXCIgKyAodW5pY29kZVJlZ0V4cC5zb3VyY2UpICsgXCIuJF9cXFxcZF1cIikpO1xuZnVuY3Rpb24gcGFyc2VQYXRoIChwYXRoKSB7XG4gIGlmIChiYWlsUkUudGVzdChwYXRoKSkge1xuICAgIHJldHVyblxuICB9XG4gIHZhciBzZWdtZW50cyA9IHBhdGguc3BsaXQoJy4nKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIChvYmopIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNlZ21lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoIW9iaikgeyByZXR1cm4gfVxuICAgICAgb2JqID0gb2JqW3NlZ21lbnRzW2ldXTtcbiAgICB9XG4gICAgcmV0dXJuIG9ialxuICB9XG59XG5cbi8qICAqL1xuXG4vLyBjYW4gd2UgdXNlIF9fcHJvdG9fXz9cbnZhciBoYXNQcm90byA9ICdfX3Byb3RvX18nIGluIHt9O1xuXG4vLyBCcm93c2VyIGVudmlyb25tZW50IHNuaWZmaW5nXG52YXIgaW5Ccm93c2VyID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCc7XG52YXIgaW5XZWV4ID0gdHlwZW9mIFdYRW52aXJvbm1lbnQgIT09ICd1bmRlZmluZWQnICYmICEhV1hFbnZpcm9ubWVudC5wbGF0Zm9ybTtcbnZhciB3ZWV4UGxhdGZvcm0gPSBpbldlZXggJiYgV1hFbnZpcm9ubWVudC5wbGF0Zm9ybS50b0xvd2VyQ2FzZSgpO1xudmFyIFVBID0gaW5Ccm93c2VyICYmIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCk7XG52YXIgaXNJRSA9IFVBICYmIC9tc2llfHRyaWRlbnQvLnRlc3QoVUEpO1xudmFyIGlzSUU5ID0gVUEgJiYgVUEuaW5kZXhPZignbXNpZSA5LjAnKSA+IDA7XG52YXIgaXNFZGdlID0gVUEgJiYgVUEuaW5kZXhPZignZWRnZS8nKSA+IDA7XG52YXIgaXNBbmRyb2lkID0gKFVBICYmIFVBLmluZGV4T2YoJ2FuZHJvaWQnKSA+IDApIHx8ICh3ZWV4UGxhdGZvcm0gPT09ICdhbmRyb2lkJyk7XG52YXIgaXNJT1MgPSAoVUEgJiYgL2lwaG9uZXxpcGFkfGlwb2R8aW9zLy50ZXN0KFVBKSkgfHwgKHdlZXhQbGF0Zm9ybSA9PT0gJ2lvcycpO1xudmFyIGlzQ2hyb21lID0gVUEgJiYgL2Nocm9tZVxcL1xcZCsvLnRlc3QoVUEpICYmICFpc0VkZ2U7XG52YXIgaXNQaGFudG9tSlMgPSBVQSAmJiAvcGhhbnRvbWpzLy50ZXN0KFVBKTtcbnZhciBpc0ZGID0gVUEgJiYgVUEubWF0Y2goL2ZpcmVmb3hcXC8oXFxkKykvKTtcblxuLy8gRmlyZWZveCBoYXMgYSBcIndhdGNoXCIgZnVuY3Rpb24gb24gT2JqZWN0LnByb3RvdHlwZS4uLlxudmFyIG5hdGl2ZVdhdGNoID0gKHt9KS53YXRjaDtcblxudmFyIHN1cHBvcnRzUGFzc2l2ZSA9IGZhbHNlO1xuaWYgKGluQnJvd3Nlcikge1xuICB0cnkge1xuICAgIHZhciBvcHRzID0ge307XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9wdHMsICdwYXNzaXZlJywgKHtcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0ICgpIHtcbiAgICAgICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICAgICAgc3VwcG9ydHNQYXNzaXZlID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9KSk7IC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9mbG93L2lzc3Vlcy8yODVcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigndGVzdC1wYXNzaXZlJywgbnVsbCwgb3B0cyk7XG4gIH0gY2F0Y2ggKGUpIHt9XG59XG5cbi8vIHRoaXMgbmVlZHMgdG8gYmUgbGF6eS1ldmFsZWQgYmVjYXVzZSB2dWUgbWF5IGJlIHJlcXVpcmVkIGJlZm9yZVxuLy8gdnVlLXNlcnZlci1yZW5kZXJlciBjYW4gc2V0IFZVRV9FTlZcbnZhciBfaXNTZXJ2ZXI7XG52YXIgaXNTZXJ2ZXJSZW5kZXJpbmcgPSBmdW5jdGlvbiAoKSB7XG4gIGlmIChfaXNTZXJ2ZXIgPT09IHVuZGVmaW5lZCkge1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgIGlmICghaW5Ccm93c2VyICYmICFpbldlZXggJiYgdHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIGRldGVjdCBwcmVzZW5jZSBvZiB2dWUtc2VydmVyLXJlbmRlcmVyIGFuZCBhdm9pZFxuICAgICAgLy8gV2VicGFjayBzaGltbWluZyB0aGUgcHJvY2Vzc1xuICAgICAgX2lzU2VydmVyID0gZ2xvYmFsWydwcm9jZXNzJ10gJiYgZ2xvYmFsWydwcm9jZXNzJ10uZW52LlZVRV9FTlYgPT09ICdzZXJ2ZXInO1xuICAgIH0gZWxzZSB7XG4gICAgICBfaXNTZXJ2ZXIgPSBmYWxzZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIF9pc1NlcnZlclxufTtcblxuLy8gZGV0ZWN0IGRldnRvb2xzXG52YXIgZGV2dG9vbHMgPSBpbkJyb3dzZXIgJiYgd2luZG93Ll9fVlVFX0RFVlRPT0xTX0dMT0JBTF9IT09LX187XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5mdW5jdGlvbiBpc05hdGl2ZSAoQ3Rvcikge1xuICByZXR1cm4gdHlwZW9mIEN0b3IgPT09ICdmdW5jdGlvbicgJiYgL25hdGl2ZSBjb2RlLy50ZXN0KEN0b3IudG9TdHJpbmcoKSlcbn1cblxudmFyIGhhc1N5bWJvbCA9XG4gIHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIGlzTmF0aXZlKFN5bWJvbCkgJiZcbiAgdHlwZW9mIFJlZmxlY3QgIT09ICd1bmRlZmluZWQnICYmIGlzTmF0aXZlKFJlZmxlY3Qub3duS2V5cyk7XG5cbnZhciBfU2V0O1xuLyogaXN0YW5idWwgaWdub3JlIGlmICovIC8vICRmbG93LWRpc2FibGUtbGluZVxuaWYgKHR5cGVvZiBTZXQgIT09ICd1bmRlZmluZWQnICYmIGlzTmF0aXZlKFNldCkpIHtcbiAgLy8gdXNlIG5hdGl2ZSBTZXQgd2hlbiBhdmFpbGFibGUuXG4gIF9TZXQgPSBTZXQ7XG59IGVsc2Uge1xuICAvLyBhIG5vbi1zdGFuZGFyZCBTZXQgcG9seWZpbGwgdGhhdCBvbmx5IHdvcmtzIHdpdGggcHJpbWl0aXZlIGtleXMuXG4gIF9TZXQgPSAvKkBfX1BVUkVfXyovKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBTZXQgKCkge1xuICAgICAgdGhpcy5zZXQgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgIH1cbiAgICBTZXQucHJvdG90eXBlLmhhcyA9IGZ1bmN0aW9uIGhhcyAoa2V5KSB7XG4gICAgICByZXR1cm4gdGhpcy5zZXRba2V5XSA9PT0gdHJ1ZVxuICAgIH07XG4gICAgU2V0LnByb3RvdHlwZS5hZGQgPSBmdW5jdGlvbiBhZGQgKGtleSkge1xuICAgICAgdGhpcy5zZXRba2V5XSA9IHRydWU7XG4gICAgfTtcbiAgICBTZXQucHJvdG90eXBlLmNsZWFyID0gZnVuY3Rpb24gY2xlYXIgKCkge1xuICAgICAgdGhpcy5zZXQgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgIH07XG5cbiAgICByZXR1cm4gU2V0O1xuICB9KCkpO1xufVxuXG4vKiAgKi9cblxudmFyIHdhcm4gPSBub29wO1xudmFyIHRpcCA9IG5vb3A7XG52YXIgZ2VuZXJhdGVDb21wb25lbnRUcmFjZSA9IChub29wKTsgLy8gd29yayBhcm91bmQgZmxvdyBjaGVja1xudmFyIGZvcm1hdENvbXBvbmVudE5hbWUgPSAobm9vcCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBoYXNDb25zb2xlID0gdHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnO1xuICB2YXIgY2xhc3NpZnlSRSA9IC8oPzpefFstX10pKFxcdykvZztcbiAgdmFyIGNsYXNzaWZ5ID0gZnVuY3Rpb24gKHN0cikgeyByZXR1cm4gc3RyXG4gICAgLnJlcGxhY2UoY2xhc3NpZnlSRSwgZnVuY3Rpb24gKGMpIHsgcmV0dXJuIGMudG9VcHBlckNhc2UoKTsgfSlcbiAgICAucmVwbGFjZSgvWy1fXS9nLCAnJyk7IH07XG5cbiAgd2FybiA9IGZ1bmN0aW9uIChtc2csIHZtKSB7XG4gICAgdmFyIHRyYWNlID0gdm0gPyBnZW5lcmF0ZUNvbXBvbmVudFRyYWNlKHZtKSA6ICcnO1xuXG4gICAgaWYgKGNvbmZpZy53YXJuSGFuZGxlcikge1xuICAgICAgY29uZmlnLndhcm5IYW5kbGVyLmNhbGwobnVsbCwgbXNnLCB2bSwgdHJhY2UpO1xuICAgIH0gZWxzZSBpZiAoaGFzQ29uc29sZSAmJiAoIWNvbmZpZy5zaWxlbnQpKSB7XG4gICAgICBjb25zb2xlLmVycm9yKChcIltWdWUgd2Fybl06IFwiICsgbXNnICsgdHJhY2UpKTtcbiAgICB9XG4gIH07XG5cbiAgdGlwID0gZnVuY3Rpb24gKG1zZywgdm0pIHtcbiAgICBpZiAoaGFzQ29uc29sZSAmJiAoIWNvbmZpZy5zaWxlbnQpKSB7XG4gICAgICBjb25zb2xlLndhcm4oXCJbVnVlIHRpcF06IFwiICsgbXNnICsgKFxuICAgICAgICB2bSA/IGdlbmVyYXRlQ29tcG9uZW50VHJhY2Uodm0pIDogJydcbiAgICAgICkpO1xuICAgIH1cbiAgfTtcblxuICBmb3JtYXRDb21wb25lbnROYW1lID0gZnVuY3Rpb24gKHZtLCBpbmNsdWRlRmlsZSkge1xuICAgIGlmICh2bS4kcm9vdCA9PT0gdm0pIHtcbiAgICAgIHJldHVybiAnPFJvb3Q+J1xuICAgIH1cbiAgICB2YXIgb3B0aW9ucyA9IHR5cGVvZiB2bSA9PT0gJ2Z1bmN0aW9uJyAmJiB2bS5jaWQgIT0gbnVsbFxuICAgICAgPyB2bS5vcHRpb25zXG4gICAgICA6IHZtLl9pc1Z1ZVxuICAgICAgICA/IHZtLiRvcHRpb25zIHx8IHZtLmNvbnN0cnVjdG9yLm9wdGlvbnNcbiAgICAgICAgOiB2bTtcbiAgICB2YXIgbmFtZSA9IG9wdGlvbnMubmFtZSB8fCBvcHRpb25zLl9jb21wb25lbnRUYWc7XG4gICAgdmFyIGZpbGUgPSBvcHRpb25zLl9fZmlsZTtcbiAgICBpZiAoIW5hbWUgJiYgZmlsZSkge1xuICAgICAgdmFyIG1hdGNoID0gZmlsZS5tYXRjaCgvKFteL1xcXFxdKylcXC52dWUkLyk7XG4gICAgICBuYW1lID0gbWF0Y2ggJiYgbWF0Y2hbMV07XG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgIChuYW1lID8gKFwiPFwiICsgKGNsYXNzaWZ5KG5hbWUpKSArIFwiPlwiKSA6IFwiPEFub255bW91cz5cIikgK1xuICAgICAgKGZpbGUgJiYgaW5jbHVkZUZpbGUgIT09IGZhbHNlID8gKFwiIGF0IFwiICsgZmlsZSkgOiAnJylcbiAgICApXG4gIH07XG5cbiAgdmFyIHJlcGVhdCA9IGZ1bmN0aW9uIChzdHIsIG4pIHtcbiAgICB2YXIgcmVzID0gJyc7XG4gICAgd2hpbGUgKG4pIHtcbiAgICAgIGlmIChuICUgMiA9PT0gMSkgeyByZXMgKz0gc3RyOyB9XG4gICAgICBpZiAobiA+IDEpIHsgc3RyICs9IHN0cjsgfVxuICAgICAgbiA+Pj0gMTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc1xuICB9O1xuXG4gIGdlbmVyYXRlQ29tcG9uZW50VHJhY2UgPSBmdW5jdGlvbiAodm0pIHtcbiAgICBpZiAodm0uX2lzVnVlICYmIHZtLiRwYXJlbnQpIHtcbiAgICAgIHZhciB0cmVlID0gW107XG4gICAgICB2YXIgY3VycmVudFJlY3Vyc2l2ZVNlcXVlbmNlID0gMDtcbiAgICAgIHdoaWxlICh2bSkge1xuICAgICAgICBpZiAodHJlZS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgdmFyIGxhc3QgPSB0cmVlW3RyZWUubGVuZ3RoIC0gMV07XG4gICAgICAgICAgaWYgKGxhc3QuY29uc3RydWN0b3IgPT09IHZtLmNvbnN0cnVjdG9yKSB7XG4gICAgICAgICAgICBjdXJyZW50UmVjdXJzaXZlU2VxdWVuY2UrKztcbiAgICAgICAgICAgIHZtID0gdm0uJHBhcmVudDtcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgICAgfSBlbHNlIGlmIChjdXJyZW50UmVjdXJzaXZlU2VxdWVuY2UgPiAwKSB7XG4gICAgICAgICAgICB0cmVlW3RyZWUubGVuZ3RoIC0gMV0gPSBbbGFzdCwgY3VycmVudFJlY3Vyc2l2ZVNlcXVlbmNlXTtcbiAgICAgICAgICAgIGN1cnJlbnRSZWN1cnNpdmVTZXF1ZW5jZSA9IDA7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRyZWUucHVzaCh2bSk7XG4gICAgICAgIHZtID0gdm0uJHBhcmVudDtcbiAgICAgIH1cbiAgICAgIHJldHVybiAnXFxuXFxuZm91bmQgaW5cXG5cXG4nICsgdHJlZVxuICAgICAgICAubWFwKGZ1bmN0aW9uICh2bSwgaSkgeyByZXR1cm4gKFwiXCIgKyAoaSA9PT0gMCA/ICctLS0+ICcgOiByZXBlYXQoJyAnLCA1ICsgaSAqIDIpKSArIChBcnJheS5pc0FycmF5KHZtKVxuICAgICAgICAgICAgPyAoKGZvcm1hdENvbXBvbmVudE5hbWUodm1bMF0pKSArIFwiLi4uIChcIiArICh2bVsxXSkgKyBcIiByZWN1cnNpdmUgY2FsbHMpXCIpXG4gICAgICAgICAgICA6IGZvcm1hdENvbXBvbmVudE5hbWUodm0pKSk7IH0pXG4gICAgICAgIC5qb2luKCdcXG4nKVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gKFwiXFxuXFxuKGZvdW5kIGluIFwiICsgKGZvcm1hdENvbXBvbmVudE5hbWUodm0pKSArIFwiKVwiKVxuICAgIH1cbiAgfTtcbn1cblxuLyogICovXG5cbnZhciB1aWQgPSAwO1xuXG4vKipcbiAqIEEgZGVwIGlzIGFuIG9ic2VydmFibGUgdGhhdCBjYW4gaGF2ZSBtdWx0aXBsZVxuICogZGlyZWN0aXZlcyBzdWJzY3JpYmluZyB0byBpdC5cbiAqL1xudmFyIERlcCA9IGZ1bmN0aW9uIERlcCAoKSB7XG4gIHRoaXMuaWQgPSB1aWQrKztcbiAgdGhpcy5zdWJzID0gW107XG59O1xuXG5EZXAucHJvdG90eXBlLmFkZFN1YiA9IGZ1bmN0aW9uIGFkZFN1YiAoc3ViKSB7XG4gIHRoaXMuc3Vicy5wdXNoKHN1Yik7XG59O1xuXG5EZXAucHJvdG90eXBlLnJlbW92ZVN1YiA9IGZ1bmN0aW9uIHJlbW92ZVN1YiAoc3ViKSB7XG4gIHJlbW92ZSh0aGlzLnN1YnMsIHN1Yik7XG59O1xuXG5EZXAucHJvdG90eXBlLmRlcGVuZCA9IGZ1bmN0aW9uIGRlcGVuZCAoKSB7XG4gIGlmIChEZXAudGFyZ2V0KSB7XG4gICAgRGVwLnRhcmdldC5hZGREZXAodGhpcyk7XG4gIH1cbn07XG5cbkRlcC5wcm90b3R5cGUubm90aWZ5ID0gZnVuY3Rpb24gbm90aWZ5ICgpIHtcbiAgLy8gc3RhYmlsaXplIHRoZSBzdWJzY3JpYmVyIGxpc3QgZmlyc3RcbiAgdmFyIHN1YnMgPSB0aGlzLnN1YnMuc2xpY2UoKTtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgIWNvbmZpZy5hc3luYykge1xuICAgIC8vIHN1YnMgYXJlbid0IHNvcnRlZCBpbiBzY2hlZHVsZXIgaWYgbm90IHJ1bm5pbmcgYXN5bmNcbiAgICAvLyB3ZSBuZWVkIHRvIHNvcnQgdGhlbSBub3cgdG8gbWFrZSBzdXJlIHRoZXkgZmlyZSBpbiBjb3JyZWN0XG4gICAgLy8gb3JkZXJcbiAgICBzdWJzLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsgcmV0dXJuIGEuaWQgLSBiLmlkOyB9KTtcbiAgfVxuICBmb3IgKHZhciBpID0gMCwgbCA9IHN1YnMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgc3Vic1tpXS51cGRhdGUoKTtcbiAgfVxufTtcblxuLy8gVGhlIGN1cnJlbnQgdGFyZ2V0IHdhdGNoZXIgYmVpbmcgZXZhbHVhdGVkLlxuLy8gVGhpcyBpcyBnbG9iYWxseSB1bmlxdWUgYmVjYXVzZSBvbmx5IG9uZSB3YXRjaGVyXG4vLyBjYW4gYmUgZXZhbHVhdGVkIGF0IGEgdGltZS5cbkRlcC50YXJnZXQgPSBudWxsO1xudmFyIHRhcmdldFN0YWNrID0gW107XG5cbmZ1bmN0aW9uIHB1c2hUYXJnZXQgKHRhcmdldCkge1xuICB0YXJnZXRTdGFjay5wdXNoKHRhcmdldCk7XG4gIERlcC50YXJnZXQgPSB0YXJnZXQ7XG59XG5cbmZ1bmN0aW9uIHBvcFRhcmdldCAoKSB7XG4gIHRhcmdldFN0YWNrLnBvcCgpO1xuICBEZXAudGFyZ2V0ID0gdGFyZ2V0U3RhY2tbdGFyZ2V0U3RhY2subGVuZ3RoIC0gMV07XG59XG5cbi8qICAqL1xuXG52YXIgVk5vZGUgPSBmdW5jdGlvbiBWTm9kZSAoXG4gIHRhZyxcbiAgZGF0YSxcbiAgY2hpbGRyZW4sXG4gIHRleHQsXG4gIGVsbSxcbiAgY29udGV4dCxcbiAgY29tcG9uZW50T3B0aW9ucyxcbiAgYXN5bmNGYWN0b3J5XG4pIHtcbiAgdGhpcy50YWcgPSB0YWc7XG4gIHRoaXMuZGF0YSA9IGRhdGE7XG4gIHRoaXMuY2hpbGRyZW4gPSBjaGlsZHJlbjtcbiAgdGhpcy50ZXh0ID0gdGV4dDtcbiAgdGhpcy5lbG0gPSBlbG07XG4gIHRoaXMubnMgPSB1bmRlZmluZWQ7XG4gIHRoaXMuY29udGV4dCA9IGNvbnRleHQ7XG4gIHRoaXMuZm5Db250ZXh0ID0gdW5kZWZpbmVkO1xuICB0aGlzLmZuT3B0aW9ucyA9IHVuZGVmaW5lZDtcbiAgdGhpcy5mblNjb3BlSWQgPSB1bmRlZmluZWQ7XG4gIHRoaXMua2V5ID0gZGF0YSAmJiBkYXRhLmtleTtcbiAgdGhpcy5jb21wb25lbnRPcHRpb25zID0gY29tcG9uZW50T3B0aW9ucztcbiAgdGhpcy5jb21wb25lbnRJbnN0YW5jZSA9IHVuZGVmaW5lZDtcbiAgdGhpcy5wYXJlbnQgPSB1bmRlZmluZWQ7XG4gIHRoaXMucmF3ID0gZmFsc2U7XG4gIHRoaXMuaXNTdGF0aWMgPSBmYWxzZTtcbiAgdGhpcy5pc1Jvb3RJbnNlcnQgPSB0cnVlO1xuICB0aGlzLmlzQ29tbWVudCA9IGZhbHNlO1xuICB0aGlzLmlzQ2xvbmVkID0gZmFsc2U7XG4gIHRoaXMuaXNPbmNlID0gZmFsc2U7XG4gIHRoaXMuYXN5bmNGYWN0b3J5ID0gYXN5bmNGYWN0b3J5O1xuICB0aGlzLmFzeW5jTWV0YSA9IHVuZGVmaW5lZDtcbiAgdGhpcy5pc0FzeW5jUGxhY2Vob2xkZXIgPSBmYWxzZTtcbn07XG5cbnZhciBwcm90b3R5cGVBY2Nlc3NvcnMgPSB7IGNoaWxkOiB7IGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH07XG5cbi8vIERFUFJFQ0FURUQ6IGFsaWFzIGZvciBjb21wb25lbnRJbnN0YW5jZSBmb3IgYmFja3dhcmRzIGNvbXBhdC5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5wcm90b3R5cGVBY2Nlc3NvcnMuY2hpbGQuZ2V0ID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdGhpcy5jb21wb25lbnRJbnN0YW5jZVxufTtcblxuT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoIFZOb2RlLnByb3RvdHlwZSwgcHJvdG90eXBlQWNjZXNzb3JzICk7XG5cbnZhciBjcmVhdGVFbXB0eVZOb2RlID0gZnVuY3Rpb24gKHRleHQpIHtcbiAgaWYgKCB0ZXh0ID09PSB2b2lkIDAgKSB0ZXh0ID0gJyc7XG5cbiAgdmFyIG5vZGUgPSBuZXcgVk5vZGUoKTtcbiAgbm9kZS50ZXh0ID0gdGV4dDtcbiAgbm9kZS5pc0NvbW1lbnQgPSB0cnVlO1xuICByZXR1cm4gbm9kZVxufTtcblxuZnVuY3Rpb24gY3JlYXRlVGV4dFZOb2RlICh2YWwpIHtcbiAgcmV0dXJuIG5ldyBWTm9kZSh1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBTdHJpbmcodmFsKSlcbn1cblxuLy8gb3B0aW1pemVkIHNoYWxsb3cgY2xvbmVcbi8vIHVzZWQgZm9yIHN0YXRpYyBub2RlcyBhbmQgc2xvdCBub2RlcyBiZWNhdXNlIHRoZXkgbWF5IGJlIHJldXNlZCBhY3Jvc3Ncbi8vIG11bHRpcGxlIHJlbmRlcnMsIGNsb25pbmcgdGhlbSBhdm9pZHMgZXJyb3JzIHdoZW4gRE9NIG1hbmlwdWxhdGlvbnMgcmVseVxuLy8gb24gdGhlaXIgZWxtIHJlZmVyZW5jZS5cbmZ1bmN0aW9uIGNsb25lVk5vZGUgKHZub2RlKSB7XG4gIHZhciBjbG9uZWQgPSBuZXcgVk5vZGUoXG4gICAgdm5vZGUudGFnLFxuICAgIHZub2RlLmRhdGEsXG4gICAgLy8gIzc5NzVcbiAgICAvLyBjbG9uZSBjaGlsZHJlbiBhcnJheSB0byBhdm9pZCBtdXRhdGluZyBvcmlnaW5hbCBpbiBjYXNlIG9mIGNsb25pbmdcbiAgICAvLyBhIGNoaWxkLlxuICAgIHZub2RlLmNoaWxkcmVuICYmIHZub2RlLmNoaWxkcmVuLnNsaWNlKCksXG4gICAgdm5vZGUudGV4dCxcbiAgICB2bm9kZS5lbG0sXG4gICAgdm5vZGUuY29udGV4dCxcbiAgICB2bm9kZS5jb21wb25lbnRPcHRpb25zLFxuICAgIHZub2RlLmFzeW5jRmFjdG9yeVxuICApO1xuICBjbG9uZWQubnMgPSB2bm9kZS5ucztcbiAgY2xvbmVkLmlzU3RhdGljID0gdm5vZGUuaXNTdGF0aWM7XG4gIGNsb25lZC5rZXkgPSB2bm9kZS5rZXk7XG4gIGNsb25lZC5pc0NvbW1lbnQgPSB2bm9kZS5pc0NvbW1lbnQ7XG4gIGNsb25lZC5mbkNvbnRleHQgPSB2bm9kZS5mbkNvbnRleHQ7XG4gIGNsb25lZC5mbk9wdGlvbnMgPSB2bm9kZS5mbk9wdGlvbnM7XG4gIGNsb25lZC5mblNjb3BlSWQgPSB2bm9kZS5mblNjb3BlSWQ7XG4gIGNsb25lZC5hc3luY01ldGEgPSB2bm9kZS5hc3luY01ldGE7XG4gIGNsb25lZC5pc0Nsb25lZCA9IHRydWU7XG4gIHJldHVybiBjbG9uZWRcbn1cblxuLypcbiAqIG5vdCB0eXBlIGNoZWNraW5nIHRoaXMgZmlsZSBiZWNhdXNlIGZsb3cgZG9lc24ndCBwbGF5IHdlbGwgd2l0aFxuICogZHluYW1pY2FsbHkgYWNjZXNzaW5nIG1ldGhvZHMgb24gQXJyYXkgcHJvdG90eXBlXG4gKi9cblxudmFyIGFycmF5UHJvdG8gPSBBcnJheS5wcm90b3R5cGU7XG52YXIgYXJyYXlNZXRob2RzID0gT2JqZWN0LmNyZWF0ZShhcnJheVByb3RvKTtcblxudmFyIG1ldGhvZHNUb1BhdGNoID0gW1xuICAncHVzaCcsXG4gICdwb3AnLFxuICAnc2hpZnQnLFxuICAndW5zaGlmdCcsXG4gICdzcGxpY2UnLFxuICAnc29ydCcsXG4gICdyZXZlcnNlJ1xuXTtcblxuLyoqXG4gKiBJbnRlcmNlcHQgbXV0YXRpbmcgbWV0aG9kcyBhbmQgZW1pdCBldmVudHNcbiAqL1xubWV0aG9kc1RvUGF0Y2guZm9yRWFjaChmdW5jdGlvbiAobWV0aG9kKSB7XG4gIC8vIGNhY2hlIG9yaWdpbmFsIG1ldGhvZFxuICB2YXIgb3JpZ2luYWwgPSBhcnJheVByb3RvW21ldGhvZF07XG4gIGRlZihhcnJheU1ldGhvZHMsIG1ldGhvZCwgZnVuY3Rpb24gbXV0YXRvciAoKSB7XG4gICAgdmFyIGFyZ3MgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB3aGlsZSAoIGxlbi0tICkgYXJnc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiBdO1xuXG4gICAgdmFyIHJlc3VsdCA9IG9yaWdpbmFsLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgIHZhciBvYiA9IHRoaXMuX19vYl9fO1xuICAgIHZhciBpbnNlcnRlZDtcbiAgICBzd2l0Y2ggKG1ldGhvZCkge1xuICAgICAgY2FzZSAncHVzaCc6XG4gICAgICBjYXNlICd1bnNoaWZ0JzpcbiAgICAgICAgaW5zZXJ0ZWQgPSBhcmdzO1xuICAgICAgICBicmVha1xuICAgICAgY2FzZSAnc3BsaWNlJzpcbiAgICAgICAgaW5zZXJ0ZWQgPSBhcmdzLnNsaWNlKDIpO1xuICAgICAgICBicmVha1xuICAgIH1cbiAgICBpZiAoaW5zZXJ0ZWQpIHsgb2Iub2JzZXJ2ZUFycmF5KGluc2VydGVkKTsgfVxuICAgIC8vIG5vdGlmeSBjaGFuZ2VcbiAgICBvYi5kZXAubm90aWZ5KCk7XG4gICAgcmV0dXJuIHJlc3VsdFxuICB9KTtcbn0pO1xuXG4vKiAgKi9cblxudmFyIGFycmF5S2V5cyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGFycmF5TWV0aG9kcyk7XG5cbi8qKlxuICogSW4gc29tZSBjYXNlcyB3ZSBtYXkgd2FudCB0byBkaXNhYmxlIG9ic2VydmF0aW9uIGluc2lkZSBhIGNvbXBvbmVudCdzXG4gKiB1cGRhdGUgY29tcHV0YXRpb24uXG4gKi9cbnZhciBzaG91bGRPYnNlcnZlID0gdHJ1ZTtcblxuZnVuY3Rpb24gdG9nZ2xlT2JzZXJ2aW5nICh2YWx1ZSkge1xuICBzaG91bGRPYnNlcnZlID0gdmFsdWU7XG59XG5cbi8qKlxuICogT2JzZXJ2ZXIgY2xhc3MgdGhhdCBpcyBhdHRhY2hlZCB0byBlYWNoIG9ic2VydmVkXG4gKiBvYmplY3QuIE9uY2UgYXR0YWNoZWQsIHRoZSBvYnNlcnZlciBjb252ZXJ0cyB0aGUgdGFyZ2V0XG4gKiBvYmplY3QncyBwcm9wZXJ0eSBrZXlzIGludG8gZ2V0dGVyL3NldHRlcnMgdGhhdFxuICogY29sbGVjdCBkZXBlbmRlbmNpZXMgYW5kIGRpc3BhdGNoIHVwZGF0ZXMuXG4gKi9cbnZhciBPYnNlcnZlciA9IGZ1bmN0aW9uIE9ic2VydmVyICh2YWx1ZSkge1xuICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gIHRoaXMuZGVwID0gbmV3IERlcCgpO1xuICB0aGlzLnZtQ291bnQgPSAwO1xuICBkZWYodmFsdWUsICdfX29iX18nLCB0aGlzKTtcbiAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgaWYgKGhhc1Byb3RvKSB7XG4gICAgICBwcm90b0F1Z21lbnQodmFsdWUsIGFycmF5TWV0aG9kcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvcHlBdWdtZW50KHZhbHVlLCBhcnJheU1ldGhvZHMsIGFycmF5S2V5cyk7XG4gICAgfVxuICAgIHRoaXMub2JzZXJ2ZUFycmF5KHZhbHVlKTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLndhbGsodmFsdWUpO1xuICB9XG59O1xuXG4vKipcbiAqIFdhbGsgdGhyb3VnaCBhbGwgcHJvcGVydGllcyBhbmQgY29udmVydCB0aGVtIGludG9cbiAqIGdldHRlci9zZXR0ZXJzLiBUaGlzIG1ldGhvZCBzaG91bGQgb25seSBiZSBjYWxsZWQgd2hlblxuICogdmFsdWUgdHlwZSBpcyBPYmplY3QuXG4gKi9cbk9ic2VydmVyLnByb3RvdHlwZS53YWxrID0gZnVuY3Rpb24gd2FsayAob2JqKSB7XG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgZGVmaW5lUmVhY3RpdmUkJDEob2JqLCBrZXlzW2ldKTtcbiAgfVxufTtcblxuLyoqXG4gKiBPYnNlcnZlIGEgbGlzdCBvZiBBcnJheSBpdGVtcy5cbiAqL1xuT2JzZXJ2ZXIucHJvdG90eXBlLm9ic2VydmVBcnJheSA9IGZ1bmN0aW9uIG9ic2VydmVBcnJheSAoaXRlbXMpIHtcbiAgZm9yICh2YXIgaSA9IDAsIGwgPSBpdGVtcy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICBvYnNlcnZlKGl0ZW1zW2ldKTtcbiAgfVxufTtcblxuLy8gaGVscGVyc1xuXG4vKipcbiAqIEF1Z21lbnQgYSB0YXJnZXQgT2JqZWN0IG9yIEFycmF5IGJ5IGludGVyY2VwdGluZ1xuICogdGhlIHByb3RvdHlwZSBjaGFpbiB1c2luZyBfX3Byb3RvX19cbiAqL1xuZnVuY3Rpb24gcHJvdG9BdWdtZW50ICh0YXJnZXQsIHNyYykge1xuICAvKiBlc2xpbnQtZGlzYWJsZSBuby1wcm90byAqL1xuICB0YXJnZXQuX19wcm90b19fID0gc3JjO1xuICAvKiBlc2xpbnQtZW5hYmxlIG5vLXByb3RvICovXG59XG5cbi8qKlxuICogQXVnbWVudCBhIHRhcmdldCBPYmplY3Qgb3IgQXJyYXkgYnkgZGVmaW5pbmdcbiAqIGhpZGRlbiBwcm9wZXJ0aWVzLlxuICovXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuZnVuY3Rpb24gY29weUF1Z21lbnQgKHRhcmdldCwgc3JjLCBrZXlzKSB7XG4gIGZvciAodmFyIGkgPSAwLCBsID0ga2V5cy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICB2YXIga2V5ID0ga2V5c1tpXTtcbiAgICBkZWYodGFyZ2V0LCBrZXksIHNyY1trZXldKTtcbiAgfVxufVxuXG4vKipcbiAqIEF0dGVtcHQgdG8gY3JlYXRlIGFuIG9ic2VydmVyIGluc3RhbmNlIGZvciBhIHZhbHVlLFxuICogcmV0dXJucyB0aGUgbmV3IG9ic2VydmVyIGlmIHN1Y2Nlc3NmdWxseSBvYnNlcnZlZCxcbiAqIG9yIHRoZSBleGlzdGluZyBvYnNlcnZlciBpZiB0aGUgdmFsdWUgYWxyZWFkeSBoYXMgb25lLlxuICovXG5mdW5jdGlvbiBvYnNlcnZlICh2YWx1ZSwgYXNSb290RGF0YSkge1xuICBpZiAoIWlzT2JqZWN0KHZhbHVlKSB8fCB2YWx1ZSBpbnN0YW5jZW9mIFZOb2RlKSB7XG4gICAgcmV0dXJuXG4gIH1cbiAgdmFyIG9iO1xuICBpZiAoaGFzT3duKHZhbHVlLCAnX19vYl9fJykgJiYgdmFsdWUuX19vYl9fIGluc3RhbmNlb2YgT2JzZXJ2ZXIpIHtcbiAgICBvYiA9IHZhbHVlLl9fb2JfXztcbiAgfSBlbHNlIGlmIChcbiAgICBzaG91bGRPYnNlcnZlICYmXG4gICAgIWlzU2VydmVyUmVuZGVyaW5nKCkgJiZcbiAgICAoQXJyYXkuaXNBcnJheSh2YWx1ZSkgfHwgaXNQbGFpbk9iamVjdCh2YWx1ZSkpICYmXG4gICAgT2JqZWN0LmlzRXh0ZW5zaWJsZSh2YWx1ZSkgJiZcbiAgICAhdmFsdWUuX2lzVnVlXG4gICkge1xuICAgIG9iID0gbmV3IE9ic2VydmVyKHZhbHVlKTtcbiAgfVxuICBpZiAoYXNSb290RGF0YSAmJiBvYikge1xuICAgIG9iLnZtQ291bnQrKztcbiAgfVxuICByZXR1cm4gb2Jcbn1cblxuLyoqXG4gKiBEZWZpbmUgYSByZWFjdGl2ZSBwcm9wZXJ0eSBvbiBhbiBPYmplY3QuXG4gKi9cbmZ1bmN0aW9uIGRlZmluZVJlYWN0aXZlJCQxIChcbiAgb2JqLFxuICBrZXksXG4gIHZhbCxcbiAgY3VzdG9tU2V0dGVyLFxuICBzaGFsbG93XG4pIHtcbiAgdmFyIGRlcCA9IG5ldyBEZXAoKTtcblxuICB2YXIgcHJvcGVydHkgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KTtcbiAgaWYgKHByb3BlcnR5ICYmIHByb3BlcnR5LmNvbmZpZ3VyYWJsZSA9PT0gZmFsc2UpIHtcbiAgICByZXR1cm5cbiAgfVxuXG4gIC8vIGNhdGVyIGZvciBwcmUtZGVmaW5lZCBnZXR0ZXIvc2V0dGVyc1xuICB2YXIgZ2V0dGVyID0gcHJvcGVydHkgJiYgcHJvcGVydHkuZ2V0O1xuICB2YXIgc2V0dGVyID0gcHJvcGVydHkgJiYgcHJvcGVydHkuc2V0O1xuICBpZiAoKCFnZXR0ZXIgfHwgc2V0dGVyKSAmJiBhcmd1bWVudHMubGVuZ3RoID09PSAyKSB7XG4gICAgdmFsID0gb2JqW2tleV07XG4gIH1cblxuICB2YXIgY2hpbGRPYiA9ICFzaGFsbG93ICYmIG9ic2VydmUodmFsKTtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiByZWFjdGl2ZUdldHRlciAoKSB7XG4gICAgICB2YXIgdmFsdWUgPSBnZXR0ZXIgPyBnZXR0ZXIuY2FsbChvYmopIDogdmFsO1xuICAgICAgaWYgKERlcC50YXJnZXQpIHtcbiAgICAgICAgZGVwLmRlcGVuZCgpO1xuICAgICAgICBpZiAoY2hpbGRPYikge1xuICAgICAgICAgIGNoaWxkT2IuZGVwLmRlcGVuZCgpO1xuICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICAgICAgZGVwZW5kQXJyYXkodmFsdWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHZhbHVlXG4gICAgfSxcbiAgICBzZXQ6IGZ1bmN0aW9uIHJlYWN0aXZlU2V0dGVyIChuZXdWYWwpIHtcbiAgICAgIHZhciB2YWx1ZSA9IGdldHRlciA/IGdldHRlci5jYWxsKG9iaikgOiB2YWw7XG4gICAgICAvKiBlc2xpbnQtZGlzYWJsZSBuby1zZWxmLWNvbXBhcmUgKi9cbiAgICAgIGlmIChuZXdWYWwgPT09IHZhbHVlIHx8IChuZXdWYWwgIT09IG5ld1ZhbCAmJiB2YWx1ZSAhPT0gdmFsdWUpKSB7XG4gICAgICAgIHJldHVyblxuICAgICAgfVxuICAgICAgLyogZXNsaW50LWVuYWJsZSBuby1zZWxmLWNvbXBhcmUgKi9cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGN1c3RvbVNldHRlcikge1xuICAgICAgICBjdXN0b21TZXR0ZXIoKTtcbiAgICAgIH1cbiAgICAgIC8vICM3OTgxOiBmb3IgYWNjZXNzb3IgcHJvcGVydGllcyB3aXRob3V0IHNldHRlclxuICAgICAgaWYgKGdldHRlciAmJiAhc2V0dGVyKSB7IHJldHVybiB9XG4gICAgICBpZiAoc2V0dGVyKSB7XG4gICAgICAgIHNldHRlci5jYWxsKG9iaiwgbmV3VmFsKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhbCA9IG5ld1ZhbDtcbiAgICAgIH1cbiAgICAgIGNoaWxkT2IgPSAhc2hhbGxvdyAmJiBvYnNlcnZlKG5ld1ZhbCk7XG4gICAgICBkZXAubm90aWZ5KCk7XG4gICAgfVxuICB9KTtcbn1cblxuLyoqXG4gKiBTZXQgYSBwcm9wZXJ0eSBvbiBhbiBvYmplY3QuIEFkZHMgdGhlIG5ldyBwcm9wZXJ0eSBhbmRcbiAqIHRyaWdnZXJzIGNoYW5nZSBub3RpZmljYXRpb24gaWYgdGhlIHByb3BlcnR5IGRvZXNuJ3RcbiAqIGFscmVhZHkgZXhpc3QuXG4gKi9cbmZ1bmN0aW9uIHNldCAodGFyZ2V0LCBrZXksIHZhbCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJlxuICAgIChpc1VuZGVmKHRhcmdldCkgfHwgaXNQcmltaXRpdmUodGFyZ2V0KSlcbiAgKSB7XG4gICAgd2FybigoXCJDYW5ub3Qgc2V0IHJlYWN0aXZlIHByb3BlcnR5IG9uIHVuZGVmaW5lZCwgbnVsbCwgb3IgcHJpbWl0aXZlIHZhbHVlOiBcIiArICgodGFyZ2V0KSkpKTtcbiAgfVxuICBpZiAoQXJyYXkuaXNBcnJheSh0YXJnZXQpICYmIGlzVmFsaWRBcnJheUluZGV4KGtleSkpIHtcbiAgICB0YXJnZXQubGVuZ3RoID0gTWF0aC5tYXgodGFyZ2V0Lmxlbmd0aCwga2V5KTtcbiAgICB0YXJnZXQuc3BsaWNlKGtleSwgMSwgdmFsKTtcbiAgICByZXR1cm4gdmFsXG4gIH1cbiAgaWYgKGtleSBpbiB0YXJnZXQgJiYgIShrZXkgaW4gT2JqZWN0LnByb3RvdHlwZSkpIHtcbiAgICB0YXJnZXRba2V5XSA9IHZhbDtcbiAgICByZXR1cm4gdmFsXG4gIH1cbiAgdmFyIG9iID0gKHRhcmdldCkuX19vYl9fO1xuICBpZiAodGFyZ2V0Ll9pc1Z1ZSB8fCAob2IgJiYgb2Iudm1Db3VudCkpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHdhcm4oXG4gICAgICAnQXZvaWQgYWRkaW5nIHJlYWN0aXZlIHByb3BlcnRpZXMgdG8gYSBWdWUgaW5zdGFuY2Ugb3IgaXRzIHJvb3QgJGRhdGEgJyArXG4gICAgICAnYXQgcnVudGltZSAtIGRlY2xhcmUgaXQgdXBmcm9udCBpbiB0aGUgZGF0YSBvcHRpb24uJ1xuICAgICk7XG4gICAgcmV0dXJuIHZhbFxuICB9XG4gIGlmICghb2IpIHtcbiAgICB0YXJnZXRba2V5XSA9IHZhbDtcbiAgICByZXR1cm4gdmFsXG4gIH1cbiAgZGVmaW5lUmVhY3RpdmUkJDEob2IudmFsdWUsIGtleSwgdmFsKTtcbiAgb2IuZGVwLm5vdGlmeSgpO1xuICByZXR1cm4gdmFsXG59XG5cbi8qKlxuICogRGVsZXRlIGEgcHJvcGVydHkgYW5kIHRyaWdnZXIgY2hhbmdlIGlmIG5lY2Vzc2FyeS5cbiAqL1xuZnVuY3Rpb24gZGVsICh0YXJnZXQsIGtleSkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJlxuICAgIChpc1VuZGVmKHRhcmdldCkgfHwgaXNQcmltaXRpdmUodGFyZ2V0KSlcbiAgKSB7XG4gICAgd2FybigoXCJDYW5ub3QgZGVsZXRlIHJlYWN0aXZlIHByb3BlcnR5IG9uIHVuZGVmaW5lZCwgbnVsbCwgb3IgcHJpbWl0aXZlIHZhbHVlOiBcIiArICgodGFyZ2V0KSkpKTtcbiAgfVxuICBpZiAoQXJyYXkuaXNBcnJheSh0YXJnZXQpICYmIGlzVmFsaWRBcnJheUluZGV4KGtleSkpIHtcbiAgICB0YXJnZXQuc3BsaWNlKGtleSwgMSk7XG4gICAgcmV0dXJuXG4gIH1cbiAgdmFyIG9iID0gKHRhcmdldCkuX19vYl9fO1xuICBpZiAodGFyZ2V0Ll9pc1Z1ZSB8fCAob2IgJiYgb2Iudm1Db3VudCkpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHdhcm4oXG4gICAgICAnQXZvaWQgZGVsZXRpbmcgcHJvcGVydGllcyBvbiBhIFZ1ZSBpbnN0YW5jZSBvciBpdHMgcm9vdCAkZGF0YSAnICtcbiAgICAgICctIGp1c3Qgc2V0IGl0IHRvIG51bGwuJ1xuICAgICk7XG4gICAgcmV0dXJuXG4gIH1cbiAgaWYgKCFoYXNPd24odGFyZ2V0LCBrZXkpKSB7XG4gICAgcmV0dXJuXG4gIH1cbiAgZGVsZXRlIHRhcmdldFtrZXldO1xuICBpZiAoIW9iKSB7XG4gICAgcmV0dXJuXG4gIH1cbiAgb2IuZGVwLm5vdGlmeSgpO1xufVxuXG4vKipcbiAqIENvbGxlY3QgZGVwZW5kZW5jaWVzIG9uIGFycmF5IGVsZW1lbnRzIHdoZW4gdGhlIGFycmF5IGlzIHRvdWNoZWQsIHNpbmNlXG4gKiB3ZSBjYW5ub3QgaW50ZXJjZXB0IGFycmF5IGVsZW1lbnQgYWNjZXNzIGxpa2UgcHJvcGVydHkgZ2V0dGVycy5cbiAqL1xuZnVuY3Rpb24gZGVwZW5kQXJyYXkgKHZhbHVlKSB7XG4gIGZvciAodmFyIGUgPSAodm9pZCAwKSwgaSA9IDAsIGwgPSB2YWx1ZS5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICBlID0gdmFsdWVbaV07XG4gICAgZSAmJiBlLl9fb2JfXyAmJiBlLl9fb2JfXy5kZXAuZGVwZW5kKCk7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZSkpIHtcbiAgICAgIGRlcGVuZEFycmF5KGUpO1xuICAgIH1cbiAgfVxufVxuXG4vKiAgKi9cblxuLyoqXG4gKiBPcHRpb24gb3ZlcndyaXRpbmcgc3RyYXRlZ2llcyBhcmUgZnVuY3Rpb25zIHRoYXQgaGFuZGxlXG4gKiBob3cgdG8gbWVyZ2UgYSBwYXJlbnQgb3B0aW9uIHZhbHVlIGFuZCBhIGNoaWxkIG9wdGlvblxuICogdmFsdWUgaW50byB0aGUgZmluYWwgdmFsdWUuXG4gKi9cbnZhciBzdHJhdHMgPSBjb25maWcub3B0aW9uTWVyZ2VTdHJhdGVnaWVzO1xuXG4vKipcbiAqIE9wdGlvbnMgd2l0aCByZXN0cmljdGlvbnNcbiAqL1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgc3RyYXRzLmVsID0gc3RyYXRzLnByb3BzRGF0YSA9IGZ1bmN0aW9uIChwYXJlbnQsIGNoaWxkLCB2bSwga2V5KSB7XG4gICAgaWYgKCF2bSkge1xuICAgICAgd2FybihcbiAgICAgICAgXCJvcHRpb24gXFxcIlwiICsga2V5ICsgXCJcXFwiIGNhbiBvbmx5IGJlIHVzZWQgZHVyaW5nIGluc3RhbmNlIFwiICtcbiAgICAgICAgJ2NyZWF0aW9uIHdpdGggdGhlIGBuZXdgIGtleXdvcmQuJ1xuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIGRlZmF1bHRTdHJhdChwYXJlbnQsIGNoaWxkKVxuICB9O1xufVxuXG4vKipcbiAqIEhlbHBlciB0aGF0IHJlY3Vyc2l2ZWx5IG1lcmdlcyB0d28gZGF0YSBvYmplY3RzIHRvZ2V0aGVyLlxuICovXG5mdW5jdGlvbiBtZXJnZURhdGEgKHRvLCBmcm9tKSB7XG4gIGlmICghZnJvbSkgeyByZXR1cm4gdG8gfVxuICB2YXIga2V5LCB0b1ZhbCwgZnJvbVZhbDtcblxuICB2YXIga2V5cyA9IGhhc1N5bWJvbFxuICAgID8gUmVmbGVjdC5vd25LZXlzKGZyb20pXG4gICAgOiBPYmplY3Qua2V5cyhmcm9tKTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBrZXkgPSBrZXlzW2ldO1xuICAgIC8vIGluIGNhc2UgdGhlIG9iamVjdCBpcyBhbHJlYWR5IG9ic2VydmVkLi4uXG4gICAgaWYgKGtleSA9PT0gJ19fb2JfXycpIHsgY29udGludWUgfVxuICAgIHRvVmFsID0gdG9ba2V5XTtcbiAgICBmcm9tVmFsID0gZnJvbVtrZXldO1xuICAgIGlmICghaGFzT3duKHRvLCBrZXkpKSB7XG4gICAgICBzZXQodG8sIGtleSwgZnJvbVZhbCk7XG4gICAgfSBlbHNlIGlmIChcbiAgICAgIHRvVmFsICE9PSBmcm9tVmFsICYmXG4gICAgICBpc1BsYWluT2JqZWN0KHRvVmFsKSAmJlxuICAgICAgaXNQbGFpbk9iamVjdChmcm9tVmFsKVxuICAgICkge1xuICAgICAgbWVyZ2VEYXRhKHRvVmFsLCBmcm9tVmFsKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRvXG59XG5cbi8qKlxuICogRGF0YVxuICovXG5mdW5jdGlvbiBtZXJnZURhdGFPckZuIChcbiAgcGFyZW50VmFsLFxuICBjaGlsZFZhbCxcbiAgdm1cbikge1xuICBpZiAoIXZtKSB7XG4gICAgLy8gaW4gYSBWdWUuZXh0ZW5kIG1lcmdlLCBib3RoIHNob3VsZCBiZSBmdW5jdGlvbnNcbiAgICBpZiAoIWNoaWxkVmFsKSB7XG4gICAgICByZXR1cm4gcGFyZW50VmFsXG4gICAgfVxuICAgIGlmICghcGFyZW50VmFsKSB7XG4gICAgICByZXR1cm4gY2hpbGRWYWxcbiAgICB9XG4gICAgLy8gd2hlbiBwYXJlbnRWYWwgJiBjaGlsZFZhbCBhcmUgYm90aCBwcmVzZW50LFxuICAgIC8vIHdlIG5lZWQgdG8gcmV0dXJuIGEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIHRoZVxuICAgIC8vIG1lcmdlZCByZXN1bHQgb2YgYm90aCBmdW5jdGlvbnMuLi4gbm8gbmVlZCB0b1xuICAgIC8vIGNoZWNrIGlmIHBhcmVudFZhbCBpcyBhIGZ1bmN0aW9uIGhlcmUgYmVjYXVzZVxuICAgIC8vIGl0IGhhcyB0byBiZSBhIGZ1bmN0aW9uIHRvIHBhc3MgcHJldmlvdXMgbWVyZ2VzLlxuICAgIHJldHVybiBmdW5jdGlvbiBtZXJnZWREYXRhRm4gKCkge1xuICAgICAgcmV0dXJuIG1lcmdlRGF0YShcbiAgICAgICAgdHlwZW9mIGNoaWxkVmFsID09PSAnZnVuY3Rpb24nID8gY2hpbGRWYWwuY2FsbCh0aGlzLCB0aGlzKSA6IGNoaWxkVmFsLFxuICAgICAgICB0eXBlb2YgcGFyZW50VmFsID09PSAnZnVuY3Rpb24nID8gcGFyZW50VmFsLmNhbGwodGhpcywgdGhpcykgOiBwYXJlbnRWYWxcbiAgICAgIClcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIG1lcmdlZEluc3RhbmNlRGF0YUZuICgpIHtcbiAgICAgIC8vIGluc3RhbmNlIG1lcmdlXG4gICAgICB2YXIgaW5zdGFuY2VEYXRhID0gdHlwZW9mIGNoaWxkVmFsID09PSAnZnVuY3Rpb24nXG4gICAgICAgID8gY2hpbGRWYWwuY2FsbCh2bSwgdm0pXG4gICAgICAgIDogY2hpbGRWYWw7XG4gICAgICB2YXIgZGVmYXVsdERhdGEgPSB0eXBlb2YgcGFyZW50VmFsID09PSAnZnVuY3Rpb24nXG4gICAgICAgID8gcGFyZW50VmFsLmNhbGwodm0sIHZtKVxuICAgICAgICA6IHBhcmVudFZhbDtcbiAgICAgIGlmIChpbnN0YW5jZURhdGEpIHtcbiAgICAgICAgcmV0dXJuIG1lcmdlRGF0YShpbnN0YW5jZURhdGEsIGRlZmF1bHREYXRhKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGRlZmF1bHREYXRhXG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbnN0cmF0cy5kYXRhID0gZnVuY3Rpb24gKFxuICBwYXJlbnRWYWwsXG4gIGNoaWxkVmFsLFxuICB2bVxuKSB7XG4gIGlmICghdm0pIHtcbiAgICBpZiAoY2hpbGRWYWwgJiYgdHlwZW9mIGNoaWxkVmFsICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHdhcm4oXG4gICAgICAgICdUaGUgXCJkYXRhXCIgb3B0aW9uIHNob3VsZCBiZSBhIGZ1bmN0aW9uICcgK1xuICAgICAgICAndGhhdCByZXR1cm5zIGEgcGVyLWluc3RhbmNlIHZhbHVlIGluIGNvbXBvbmVudCAnICtcbiAgICAgICAgJ2RlZmluaXRpb25zLicsXG4gICAgICAgIHZtXG4gICAgICApO1xuXG4gICAgICByZXR1cm4gcGFyZW50VmFsXG4gICAgfVxuICAgIHJldHVybiBtZXJnZURhdGFPckZuKHBhcmVudFZhbCwgY2hpbGRWYWwpXG4gIH1cblxuICByZXR1cm4gbWVyZ2VEYXRhT3JGbihwYXJlbnRWYWwsIGNoaWxkVmFsLCB2bSlcbn07XG5cbi8qKlxuICogSG9va3MgYW5kIHByb3BzIGFyZSBtZXJnZWQgYXMgYXJyYXlzLlxuICovXG5mdW5jdGlvbiBtZXJnZUhvb2sgKFxuICBwYXJlbnRWYWwsXG4gIGNoaWxkVmFsXG4pIHtcbiAgdmFyIHJlcyA9IGNoaWxkVmFsXG4gICAgPyBwYXJlbnRWYWxcbiAgICAgID8gcGFyZW50VmFsLmNvbmNhdChjaGlsZFZhbClcbiAgICAgIDogQXJyYXkuaXNBcnJheShjaGlsZFZhbClcbiAgICAgICAgPyBjaGlsZFZhbFxuICAgICAgICA6IFtjaGlsZFZhbF1cbiAgICA6IHBhcmVudFZhbDtcbiAgcmV0dXJuIHJlc1xuICAgID8gZGVkdXBlSG9va3MocmVzKVxuICAgIDogcmVzXG59XG5cbmZ1bmN0aW9uIGRlZHVwZUhvb2tzIChob29rcykge1xuICB2YXIgcmVzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgaG9va3MubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAocmVzLmluZGV4T2YoaG9va3NbaV0pID09PSAtMSkge1xuICAgICAgcmVzLnB1c2goaG9va3NbaV0pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzXG59XG5cbkxJRkVDWUNMRV9IT09LUy5mb3JFYWNoKGZ1bmN0aW9uIChob29rKSB7XG4gIHN0cmF0c1tob29rXSA9IG1lcmdlSG9vaztcbn0pO1xuXG4vKipcbiAqIEFzc2V0c1xuICpcbiAqIFdoZW4gYSB2bSBpcyBwcmVzZW50IChpbnN0YW5jZSBjcmVhdGlvbiksIHdlIG5lZWQgdG8gZG9cbiAqIGEgdGhyZWUtd2F5IG1lcmdlIGJldHdlZW4gY29uc3RydWN0b3Igb3B0aW9ucywgaW5zdGFuY2VcbiAqIG9wdGlvbnMgYW5kIHBhcmVudCBvcHRpb25zLlxuICovXG5mdW5jdGlvbiBtZXJnZUFzc2V0cyAoXG4gIHBhcmVudFZhbCxcbiAgY2hpbGRWYWwsXG4gIHZtLFxuICBrZXlcbikge1xuICB2YXIgcmVzID0gT2JqZWN0LmNyZWF0ZShwYXJlbnRWYWwgfHwgbnVsbCk7XG4gIGlmIChjaGlsZFZhbCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgYXNzZXJ0T2JqZWN0VHlwZShrZXksIGNoaWxkVmFsLCB2bSk7XG4gICAgcmV0dXJuIGV4dGVuZChyZXMsIGNoaWxkVmFsKVxuICB9IGVsc2Uge1xuICAgIHJldHVybiByZXNcbiAgfVxufVxuXG5BU1NFVF9UWVBFUy5mb3JFYWNoKGZ1bmN0aW9uICh0eXBlKSB7XG4gIHN0cmF0c1t0eXBlICsgJ3MnXSA9IG1lcmdlQXNzZXRzO1xufSk7XG5cbi8qKlxuICogV2F0Y2hlcnMuXG4gKlxuICogV2F0Y2hlcnMgaGFzaGVzIHNob3VsZCBub3Qgb3ZlcndyaXRlIG9uZVxuICogYW5vdGhlciwgc28gd2UgbWVyZ2UgdGhlbSBhcyBhcnJheXMuXG4gKi9cbnN0cmF0cy53YXRjaCA9IGZ1bmN0aW9uIChcbiAgcGFyZW50VmFsLFxuICBjaGlsZFZhbCxcbiAgdm0sXG4gIGtleVxuKSB7XG4gIC8vIHdvcmsgYXJvdW5kIEZpcmVmb3gncyBPYmplY3QucHJvdG90eXBlLndhdGNoLi4uXG4gIGlmIChwYXJlbnRWYWwgPT09IG5hdGl2ZVdhdGNoKSB7IHBhcmVudFZhbCA9IHVuZGVmaW5lZDsgfVxuICBpZiAoY2hpbGRWYWwgPT09IG5hdGl2ZVdhdGNoKSB7IGNoaWxkVmFsID0gdW5kZWZpbmVkOyB9XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICBpZiAoIWNoaWxkVmFsKSB7IHJldHVybiBPYmplY3QuY3JlYXRlKHBhcmVudFZhbCB8fCBudWxsKSB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgYXNzZXJ0T2JqZWN0VHlwZShrZXksIGNoaWxkVmFsLCB2bSk7XG4gIH1cbiAgaWYgKCFwYXJlbnRWYWwpIHsgcmV0dXJuIGNoaWxkVmFsIH1cbiAgdmFyIHJldCA9IHt9O1xuICBleHRlbmQocmV0LCBwYXJlbnRWYWwpO1xuICBmb3IgKHZhciBrZXkkMSBpbiBjaGlsZFZhbCkge1xuICAgIHZhciBwYXJlbnQgPSByZXRba2V5JDFdO1xuICAgIHZhciBjaGlsZCA9IGNoaWxkVmFsW2tleSQxXTtcbiAgICBpZiAocGFyZW50ICYmICFBcnJheS5pc0FycmF5KHBhcmVudCkpIHtcbiAgICAgIHBhcmVudCA9IFtwYXJlbnRdO1xuICAgIH1cbiAgICByZXRba2V5JDFdID0gcGFyZW50XG4gICAgICA/IHBhcmVudC5jb25jYXQoY2hpbGQpXG4gICAgICA6IEFycmF5LmlzQXJyYXkoY2hpbGQpID8gY2hpbGQgOiBbY2hpbGRdO1xuICB9XG4gIHJldHVybiByZXRcbn07XG5cbi8qKlxuICogT3RoZXIgb2JqZWN0IGhhc2hlcy5cbiAqL1xuc3RyYXRzLnByb3BzID1cbnN0cmF0cy5tZXRob2RzID1cbnN0cmF0cy5pbmplY3QgPVxuc3RyYXRzLmNvbXB1dGVkID0gZnVuY3Rpb24gKFxuICBwYXJlbnRWYWwsXG4gIGNoaWxkVmFsLFxuICB2bSxcbiAga2V5XG4pIHtcbiAgaWYgKGNoaWxkVmFsICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBhc3NlcnRPYmplY3RUeXBlKGtleSwgY2hpbGRWYWwsIHZtKTtcbiAgfVxuICBpZiAoIXBhcmVudFZhbCkgeyByZXR1cm4gY2hpbGRWYWwgfVxuICB2YXIgcmV0ID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgZXh0ZW5kKHJldCwgcGFyZW50VmFsKTtcbiAgaWYgKGNoaWxkVmFsKSB7IGV4dGVuZChyZXQsIGNoaWxkVmFsKTsgfVxuICByZXR1cm4gcmV0XG59O1xuc3RyYXRzLnByb3ZpZGUgPSBtZXJnZURhdGFPckZuO1xuXG4vKipcbiAqIERlZmF1bHQgc3RyYXRlZ3kuXG4gKi9cbnZhciBkZWZhdWx0U3RyYXQgPSBmdW5jdGlvbiAocGFyZW50VmFsLCBjaGlsZFZhbCkge1xuICByZXR1cm4gY2hpbGRWYWwgPT09IHVuZGVmaW5lZFxuICAgID8gcGFyZW50VmFsXG4gICAgOiBjaGlsZFZhbFxufTtcblxuLyoqXG4gKiBWYWxpZGF0ZSBjb21wb25lbnQgbmFtZXNcbiAqL1xuZnVuY3Rpb24gY2hlY2tDb21wb25lbnRzIChvcHRpb25zKSB7XG4gIGZvciAodmFyIGtleSBpbiBvcHRpb25zLmNvbXBvbmVudHMpIHtcbiAgICB2YWxpZGF0ZUNvbXBvbmVudE5hbWUoa2V5KTtcbiAgfVxufVxuXG5mdW5jdGlvbiB2YWxpZGF0ZUNvbXBvbmVudE5hbWUgKG5hbWUpIHtcbiAgaWYgKCFuZXcgUmVnRXhwKChcIl5bYS16QS1aXVtcXFxcLVxcXFwuMC05X1wiICsgKHVuaWNvZGVSZWdFeHAuc291cmNlKSArIFwiXSokXCIpKS50ZXN0KG5hbWUpKSB7XG4gICAgd2FybihcbiAgICAgICdJbnZhbGlkIGNvbXBvbmVudCBuYW1lOiBcIicgKyBuYW1lICsgJ1wiLiBDb21wb25lbnQgbmFtZXMgJyArXG4gICAgICAnc2hvdWxkIGNvbmZvcm0gdG8gdmFsaWQgY3VzdG9tIGVsZW1lbnQgbmFtZSBpbiBodG1sNSBzcGVjaWZpY2F0aW9uLidcbiAgICApO1xuICB9XG4gIGlmIChpc0J1aWx0SW5UYWcobmFtZSkgfHwgY29uZmlnLmlzUmVzZXJ2ZWRUYWcobmFtZSkpIHtcbiAgICB3YXJuKFxuICAgICAgJ0RvIG5vdCB1c2UgYnVpbHQtaW4gb3IgcmVzZXJ2ZWQgSFRNTCBlbGVtZW50cyBhcyBjb21wb25lbnQgJyArXG4gICAgICAnaWQ6ICcgKyBuYW1lXG4gICAgKTtcbiAgfVxufVxuXG4vKipcbiAqIEVuc3VyZSBhbGwgcHJvcHMgb3B0aW9uIHN5bnRheCBhcmUgbm9ybWFsaXplZCBpbnRvIHRoZVxuICogT2JqZWN0LWJhc2VkIGZvcm1hdC5cbiAqL1xuZnVuY3Rpb24gbm9ybWFsaXplUHJvcHMgKG9wdGlvbnMsIHZtKSB7XG4gIHZhciBwcm9wcyA9IG9wdGlvbnMucHJvcHM7XG4gIGlmICghcHJvcHMpIHsgcmV0dXJuIH1cbiAgdmFyIHJlcyA9IHt9O1xuICB2YXIgaSwgdmFsLCBuYW1lO1xuICBpZiAoQXJyYXkuaXNBcnJheShwcm9wcykpIHtcbiAgICBpID0gcHJvcHMubGVuZ3RoO1xuICAgIHdoaWxlIChpLS0pIHtcbiAgICAgIHZhbCA9IHByb3BzW2ldO1xuICAgICAgaWYgKHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIG5hbWUgPSBjYW1lbGl6ZSh2YWwpO1xuICAgICAgICByZXNbbmFtZV0gPSB7IHR5cGU6IG51bGwgfTtcbiAgICAgIH0gZWxzZSBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICB3YXJuKCdwcm9wcyBtdXN0IGJlIHN0cmluZ3Mgd2hlbiB1c2luZyBhcnJheSBzeW50YXguJyk7XG4gICAgICB9XG4gICAgfVxuICB9IGVsc2UgaWYgKGlzUGxhaW5PYmplY3QocHJvcHMpKSB7XG4gICAgZm9yICh2YXIga2V5IGluIHByb3BzKSB7XG4gICAgICB2YWwgPSBwcm9wc1trZXldO1xuICAgICAgbmFtZSA9IGNhbWVsaXplKGtleSk7XG4gICAgICByZXNbbmFtZV0gPSBpc1BsYWluT2JqZWN0KHZhbClcbiAgICAgICAgPyB2YWxcbiAgICAgICAgOiB7IHR5cGU6IHZhbCB9O1xuICAgIH1cbiAgfSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgd2FybihcbiAgICAgIFwiSW52YWxpZCB2YWx1ZSBmb3Igb3B0aW9uIFxcXCJwcm9wc1xcXCI6IGV4cGVjdGVkIGFuIEFycmF5IG9yIGFuIE9iamVjdCwgXCIgK1xuICAgICAgXCJidXQgZ290IFwiICsgKHRvUmF3VHlwZShwcm9wcykpICsgXCIuXCIsXG4gICAgICB2bVxuICAgICk7XG4gIH1cbiAgb3B0aW9ucy5wcm9wcyA9IHJlcztcbn1cblxuLyoqXG4gKiBOb3JtYWxpemUgYWxsIGluamVjdGlvbnMgaW50byBPYmplY3QtYmFzZWQgZm9ybWF0XG4gKi9cbmZ1bmN0aW9uIG5vcm1hbGl6ZUluamVjdCAob3B0aW9ucywgdm0pIHtcbiAgdmFyIGluamVjdCA9IG9wdGlvbnMuaW5qZWN0O1xuICBpZiAoIWluamVjdCkgeyByZXR1cm4gfVxuICB2YXIgbm9ybWFsaXplZCA9IG9wdGlvbnMuaW5qZWN0ID0ge307XG4gIGlmIChBcnJheS5pc0FycmF5KGluamVjdCkpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGluamVjdC5sZW5ndGg7IGkrKykge1xuICAgICAgbm9ybWFsaXplZFtpbmplY3RbaV1dID0geyBmcm9tOiBpbmplY3RbaV0gfTtcbiAgICB9XG4gIH0gZWxzZSBpZiAoaXNQbGFpbk9iamVjdChpbmplY3QpKSB7XG4gICAgZm9yICh2YXIga2V5IGluIGluamVjdCkge1xuICAgICAgdmFyIHZhbCA9IGluamVjdFtrZXldO1xuICAgICAgbm9ybWFsaXplZFtrZXldID0gaXNQbGFpbk9iamVjdCh2YWwpXG4gICAgICAgID8gZXh0ZW5kKHsgZnJvbToga2V5IH0sIHZhbClcbiAgICAgICAgOiB7IGZyb206IHZhbCB9O1xuICAgIH1cbiAgfSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgd2FybihcbiAgICAgIFwiSW52YWxpZCB2YWx1ZSBmb3Igb3B0aW9uIFxcXCJpbmplY3RcXFwiOiBleHBlY3RlZCBhbiBBcnJheSBvciBhbiBPYmplY3QsIFwiICtcbiAgICAgIFwiYnV0IGdvdCBcIiArICh0b1Jhd1R5cGUoaW5qZWN0KSkgKyBcIi5cIixcbiAgICAgIHZtXG4gICAgKTtcbiAgfVxufVxuXG4vKipcbiAqIE5vcm1hbGl6ZSByYXcgZnVuY3Rpb24gZGlyZWN0aXZlcyBpbnRvIG9iamVjdCBmb3JtYXQuXG4gKi9cbmZ1bmN0aW9uIG5vcm1hbGl6ZURpcmVjdGl2ZXMgKG9wdGlvbnMpIHtcbiAgdmFyIGRpcnMgPSBvcHRpb25zLmRpcmVjdGl2ZXM7XG4gIGlmIChkaXJzKSB7XG4gICAgZm9yICh2YXIga2V5IGluIGRpcnMpIHtcbiAgICAgIHZhciBkZWYkJDEgPSBkaXJzW2tleV07XG4gICAgICBpZiAodHlwZW9mIGRlZiQkMSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBkaXJzW2tleV0gPSB7IGJpbmQ6IGRlZiQkMSwgdXBkYXRlOiBkZWYkJDEgfTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gYXNzZXJ0T2JqZWN0VHlwZSAobmFtZSwgdmFsdWUsIHZtKSB7XG4gIGlmICghaXNQbGFpbk9iamVjdCh2YWx1ZSkpIHtcbiAgICB3YXJuKFxuICAgICAgXCJJbnZhbGlkIHZhbHVlIGZvciBvcHRpb24gXFxcIlwiICsgbmFtZSArIFwiXFxcIjogZXhwZWN0ZWQgYW4gT2JqZWN0LCBcIiArXG4gICAgICBcImJ1dCBnb3QgXCIgKyAodG9SYXdUeXBlKHZhbHVlKSkgKyBcIi5cIixcbiAgICAgIHZtXG4gICAgKTtcbiAgfVxufVxuXG4vKipcbiAqIE1lcmdlIHR3byBvcHRpb24gb2JqZWN0cyBpbnRvIGEgbmV3IG9uZS5cbiAqIENvcmUgdXRpbGl0eSB1c2VkIGluIGJvdGggaW5zdGFudGlhdGlvbiBhbmQgaW5oZXJpdGFuY2UuXG4gKi9cbmZ1bmN0aW9uIG1lcmdlT3B0aW9ucyAoXG4gIHBhcmVudCxcbiAgY2hpbGQsXG4gIHZtXG4pIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBjaGVja0NvbXBvbmVudHMoY2hpbGQpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBjaGlsZCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNoaWxkID0gY2hpbGQub3B0aW9ucztcbiAgfVxuXG4gIG5vcm1hbGl6ZVByb3BzKGNoaWxkLCB2bSk7XG4gIG5vcm1hbGl6ZUluamVjdChjaGlsZCwgdm0pO1xuICBub3JtYWxpemVEaXJlY3RpdmVzKGNoaWxkKTtcblxuICAvLyBBcHBseSBleHRlbmRzIGFuZCBtaXhpbnMgb24gdGhlIGNoaWxkIG9wdGlvbnMsXG4gIC8vIGJ1dCBvbmx5IGlmIGl0IGlzIGEgcmF3IG9wdGlvbnMgb2JqZWN0IHRoYXQgaXNuJ3RcbiAgLy8gdGhlIHJlc3VsdCBvZiBhbm90aGVyIG1lcmdlT3B0aW9ucyBjYWxsLlxuICAvLyBPbmx5IG1lcmdlZCBvcHRpb25zIGhhcyB0aGUgX2Jhc2UgcHJvcGVydHkuXG4gIGlmICghY2hpbGQuX2Jhc2UpIHtcbiAgICBpZiAoY2hpbGQuZXh0ZW5kcykge1xuICAgICAgcGFyZW50ID0gbWVyZ2VPcHRpb25zKHBhcmVudCwgY2hpbGQuZXh0ZW5kcywgdm0pO1xuICAgIH1cbiAgICBpZiAoY2hpbGQubWl4aW5zKSB7XG4gICAgICBmb3IgKHZhciBpID0gMCwgbCA9IGNoaWxkLm1peGlucy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgcGFyZW50ID0gbWVyZ2VPcHRpb25zKHBhcmVudCwgY2hpbGQubWl4aW5zW2ldLCB2bSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgdmFyIG9wdGlvbnMgPSB7fTtcbiAgdmFyIGtleTtcbiAgZm9yIChrZXkgaW4gcGFyZW50KSB7XG4gICAgbWVyZ2VGaWVsZChrZXkpO1xuICB9XG4gIGZvciAoa2V5IGluIGNoaWxkKSB7XG4gICAgaWYgKCFoYXNPd24ocGFyZW50LCBrZXkpKSB7XG4gICAgICBtZXJnZUZpZWxkKGtleSk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIG1lcmdlRmllbGQgKGtleSkge1xuICAgIHZhciBzdHJhdCA9IHN0cmF0c1trZXldIHx8IGRlZmF1bHRTdHJhdDtcbiAgICBvcHRpb25zW2tleV0gPSBzdHJhdChwYXJlbnRba2V5XSwgY2hpbGRba2V5XSwgdm0sIGtleSk7XG4gIH1cbiAgcmV0dXJuIG9wdGlvbnNcbn1cblxuLyoqXG4gKiBSZXNvbHZlIGFuIGFzc2V0LlxuICogVGhpcyBmdW5jdGlvbiBpcyB1c2VkIGJlY2F1c2UgY2hpbGQgaW5zdGFuY2VzIG5lZWQgYWNjZXNzXG4gKiB0byBhc3NldHMgZGVmaW5lZCBpbiBpdHMgYW5jZXN0b3IgY2hhaW4uXG4gKi9cbmZ1bmN0aW9uIHJlc29sdmVBc3NldCAoXG4gIG9wdGlvbnMsXG4gIHR5cGUsXG4gIGlkLFxuICB3YXJuTWlzc2luZ1xuKSB7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICBpZiAodHlwZW9mIGlkICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVyblxuICB9XG4gIHZhciBhc3NldHMgPSBvcHRpb25zW3R5cGVdO1xuICAvLyBjaGVjayBsb2NhbCByZWdpc3RyYXRpb24gdmFyaWF0aW9ucyBmaXJzdFxuICBpZiAoaGFzT3duKGFzc2V0cywgaWQpKSB7IHJldHVybiBhc3NldHNbaWRdIH1cbiAgdmFyIGNhbWVsaXplZElkID0gY2FtZWxpemUoaWQpO1xuICBpZiAoaGFzT3duKGFzc2V0cywgY2FtZWxpemVkSWQpKSB7IHJldHVybiBhc3NldHNbY2FtZWxpemVkSWRdIH1cbiAgdmFyIFBhc2NhbENhc2VJZCA9IGNhcGl0YWxpemUoY2FtZWxpemVkSWQpO1xuICBpZiAoaGFzT3duKGFzc2V0cywgUGFzY2FsQ2FzZUlkKSkgeyByZXR1cm4gYXNzZXRzW1Bhc2NhbENhc2VJZF0gfVxuICAvLyBmYWxsYmFjayB0byBwcm90b3R5cGUgY2hhaW5cbiAgdmFyIHJlcyA9IGFzc2V0c1tpZF0gfHwgYXNzZXRzW2NhbWVsaXplZElkXSB8fCBhc3NldHNbUGFzY2FsQ2FzZUlkXTtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgd2Fybk1pc3NpbmcgJiYgIXJlcykge1xuICAgIHdhcm4oXG4gICAgICAnRmFpbGVkIHRvIHJlc29sdmUgJyArIHR5cGUuc2xpY2UoMCwgLTEpICsgJzogJyArIGlkLFxuICAgICAgb3B0aW9uc1xuICAgICk7XG4gIH1cbiAgcmV0dXJuIHJlc1xufVxuXG4vKiAgKi9cblxuXG5cbmZ1bmN0aW9uIHZhbGlkYXRlUHJvcCAoXG4gIGtleSxcbiAgcHJvcE9wdGlvbnMsXG4gIHByb3BzRGF0YSxcbiAgdm1cbikge1xuICB2YXIgcHJvcCA9IHByb3BPcHRpb25zW2tleV07XG4gIHZhciBhYnNlbnQgPSAhaGFzT3duKHByb3BzRGF0YSwga2V5KTtcbiAgdmFyIHZhbHVlID0gcHJvcHNEYXRhW2tleV07XG4gIC8vIGJvb2xlYW4gY2FzdGluZ1xuICB2YXIgYm9vbGVhbkluZGV4ID0gZ2V0VHlwZUluZGV4KEJvb2xlYW4sIHByb3AudHlwZSk7XG4gIGlmIChib29sZWFuSW5kZXggPiAtMSkge1xuICAgIGlmIChhYnNlbnQgJiYgIWhhc093bihwcm9wLCAnZGVmYXVsdCcpKSB7XG4gICAgICB2YWx1ZSA9IGZhbHNlO1xuICAgIH0gZWxzZSBpZiAodmFsdWUgPT09ICcnIHx8IHZhbHVlID09PSBoeXBoZW5hdGUoa2V5KSkge1xuICAgICAgLy8gb25seSBjYXN0IGVtcHR5IHN0cmluZyAvIHNhbWUgbmFtZSB0byBib29sZWFuIGlmXG4gICAgICAvLyBib29sZWFuIGhhcyBoaWdoZXIgcHJpb3JpdHlcbiAgICAgIHZhciBzdHJpbmdJbmRleCA9IGdldFR5cGVJbmRleChTdHJpbmcsIHByb3AudHlwZSk7XG4gICAgICBpZiAoc3RyaW5nSW5kZXggPCAwIHx8IGJvb2xlYW5JbmRleCA8IHN0cmluZ0luZGV4KSB7XG4gICAgICAgIHZhbHVlID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgLy8gY2hlY2sgZGVmYXVsdCB2YWx1ZVxuICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgIHZhbHVlID0gZ2V0UHJvcERlZmF1bHRWYWx1ZSh2bSwgcHJvcCwga2V5KTtcbiAgICAvLyBzaW5jZSB0aGUgZGVmYXVsdCB2YWx1ZSBpcyBhIGZyZXNoIGNvcHksXG4gICAgLy8gbWFrZSBzdXJlIHRvIG9ic2VydmUgaXQuXG4gICAgdmFyIHByZXZTaG91bGRPYnNlcnZlID0gc2hvdWxkT2JzZXJ2ZTtcbiAgICB0b2dnbGVPYnNlcnZpbmcodHJ1ZSk7XG4gICAgb2JzZXJ2ZSh2YWx1ZSk7XG4gICAgdG9nZ2xlT2JzZXJ2aW5nKHByZXZTaG91bGRPYnNlcnZlKTtcbiAgfVxuICBpZiAoXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJlxuICAgIC8vIHNraXAgdmFsaWRhdGlvbiBmb3Igd2VleCByZWN5Y2xlLWxpc3QgY2hpbGQgY29tcG9uZW50IHByb3BzXG4gICAgIShmYWxzZSlcbiAgKSB7XG4gICAgYXNzZXJ0UHJvcChwcm9wLCBrZXksIHZhbHVlLCB2bSwgYWJzZW50KTtcbiAgfVxuICByZXR1cm4gdmFsdWVcbn1cblxuLyoqXG4gKiBHZXQgdGhlIGRlZmF1bHQgdmFsdWUgb2YgYSBwcm9wLlxuICovXG5mdW5jdGlvbiBnZXRQcm9wRGVmYXVsdFZhbHVlICh2bSwgcHJvcCwga2V5KSB7XG4gIC8vIG5vIGRlZmF1bHQsIHJldHVybiB1bmRlZmluZWRcbiAgaWYgKCFoYXNPd24ocHJvcCwgJ2RlZmF1bHQnKSkge1xuICAgIHJldHVybiB1bmRlZmluZWRcbiAgfVxuICB2YXIgZGVmID0gcHJvcC5kZWZhdWx0O1xuICAvLyB3YXJuIGFnYWluc3Qgbm9uLWZhY3RvcnkgZGVmYXVsdHMgZm9yIE9iamVjdCAmIEFycmF5XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGlzT2JqZWN0KGRlZikpIHtcbiAgICB3YXJuKFxuICAgICAgJ0ludmFsaWQgZGVmYXVsdCB2YWx1ZSBmb3IgcHJvcCBcIicgKyBrZXkgKyAnXCI6ICcgK1xuICAgICAgJ1Byb3BzIHdpdGggdHlwZSBPYmplY3QvQXJyYXkgbXVzdCB1c2UgYSBmYWN0b3J5IGZ1bmN0aW9uICcgK1xuICAgICAgJ3RvIHJldHVybiB0aGUgZGVmYXVsdCB2YWx1ZS4nLFxuICAgICAgdm1cbiAgICApO1xuICB9XG4gIC8vIHRoZSByYXcgcHJvcCB2YWx1ZSB3YXMgYWxzbyB1bmRlZmluZWQgZnJvbSBwcmV2aW91cyByZW5kZXIsXG4gIC8vIHJldHVybiBwcmV2aW91cyBkZWZhdWx0IHZhbHVlIHRvIGF2b2lkIHVubmVjZXNzYXJ5IHdhdGNoZXIgdHJpZ2dlclxuICBpZiAodm0gJiYgdm0uJG9wdGlvbnMucHJvcHNEYXRhICYmXG4gICAgdm0uJG9wdGlvbnMucHJvcHNEYXRhW2tleV0gPT09IHVuZGVmaW5lZCAmJlxuICAgIHZtLl9wcm9wc1trZXldICE9PSB1bmRlZmluZWRcbiAgKSB7XG4gICAgcmV0dXJuIHZtLl9wcm9wc1trZXldXG4gIH1cbiAgLy8gY2FsbCBmYWN0b3J5IGZ1bmN0aW9uIGZvciBub24tRnVuY3Rpb24gdHlwZXNcbiAgLy8gYSB2YWx1ZSBpcyBGdW5jdGlvbiBpZiBpdHMgcHJvdG90eXBlIGlzIGZ1bmN0aW9uIGV2ZW4gYWNyb3NzIGRpZmZlcmVudCBleGVjdXRpb24gY29udGV4dFxuICByZXR1cm4gdHlwZW9mIGRlZiA9PT0gJ2Z1bmN0aW9uJyAmJiBnZXRUeXBlKHByb3AudHlwZSkgIT09ICdGdW5jdGlvbidcbiAgICA/IGRlZi5jYWxsKHZtKVxuICAgIDogZGVmXG59XG5cbi8qKlxuICogQXNzZXJ0IHdoZXRoZXIgYSBwcm9wIGlzIHZhbGlkLlxuICovXG5mdW5jdGlvbiBhc3NlcnRQcm9wIChcbiAgcHJvcCxcbiAgbmFtZSxcbiAgdmFsdWUsXG4gIHZtLFxuICBhYnNlbnRcbikge1xuICBpZiAocHJvcC5yZXF1aXJlZCAmJiBhYnNlbnQpIHtcbiAgICB3YXJuKFxuICAgICAgJ01pc3NpbmcgcmVxdWlyZWQgcHJvcDogXCInICsgbmFtZSArICdcIicsXG4gICAgICB2bVxuICAgICk7XG4gICAgcmV0dXJuXG4gIH1cbiAgaWYgKHZhbHVlID09IG51bGwgJiYgIXByb3AucmVxdWlyZWQpIHtcbiAgICByZXR1cm5cbiAgfVxuICB2YXIgdHlwZSA9IHByb3AudHlwZTtcbiAgdmFyIHZhbGlkID0gIXR5cGUgfHwgdHlwZSA9PT0gdHJ1ZTtcbiAgdmFyIGV4cGVjdGVkVHlwZXMgPSBbXTtcbiAgaWYgKHR5cGUpIHtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkodHlwZSkpIHtcbiAgICAgIHR5cGUgPSBbdHlwZV07XG4gICAgfVxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdHlwZS5sZW5ndGggJiYgIXZhbGlkOyBpKyspIHtcbiAgICAgIHZhciBhc3NlcnRlZFR5cGUgPSBhc3NlcnRUeXBlKHZhbHVlLCB0eXBlW2ldKTtcbiAgICAgIGV4cGVjdGVkVHlwZXMucHVzaChhc3NlcnRlZFR5cGUuZXhwZWN0ZWRUeXBlIHx8ICcnKTtcbiAgICAgIHZhbGlkID0gYXNzZXJ0ZWRUeXBlLnZhbGlkO1xuICAgIH1cbiAgfVxuXG4gIGlmICghdmFsaWQpIHtcbiAgICB3YXJuKFxuICAgICAgZ2V0SW52YWxpZFR5cGVNZXNzYWdlKG5hbWUsIHZhbHVlLCBleHBlY3RlZFR5cGVzKSxcbiAgICAgIHZtXG4gICAgKTtcbiAgICByZXR1cm5cbiAgfVxuICB2YXIgdmFsaWRhdG9yID0gcHJvcC52YWxpZGF0b3I7XG4gIGlmICh2YWxpZGF0b3IpIHtcbiAgICBpZiAoIXZhbGlkYXRvcih2YWx1ZSkpIHtcbiAgICAgIHdhcm4oXG4gICAgICAgICdJbnZhbGlkIHByb3A6IGN1c3RvbSB2YWxpZGF0b3IgY2hlY2sgZmFpbGVkIGZvciBwcm9wIFwiJyArIG5hbWUgKyAnXCIuJyxcbiAgICAgICAgdm1cbiAgICAgICk7XG4gICAgfVxuICB9XG59XG5cbnZhciBzaW1wbGVDaGVja1JFID0gL14oU3RyaW5nfE51bWJlcnxCb29sZWFufEZ1bmN0aW9ufFN5bWJvbCkkLztcblxuZnVuY3Rpb24gYXNzZXJ0VHlwZSAodmFsdWUsIHR5cGUpIHtcbiAgdmFyIHZhbGlkO1xuICB2YXIgZXhwZWN0ZWRUeXBlID0gZ2V0VHlwZSh0eXBlKTtcbiAgaWYgKHNpbXBsZUNoZWNrUkUudGVzdChleHBlY3RlZFR5cGUpKSB7XG4gICAgdmFyIHQgPSB0eXBlb2YgdmFsdWU7XG4gICAgdmFsaWQgPSB0ID09PSBleHBlY3RlZFR5cGUudG9Mb3dlckNhc2UoKTtcbiAgICAvLyBmb3IgcHJpbWl0aXZlIHdyYXBwZXIgb2JqZWN0c1xuICAgIGlmICghdmFsaWQgJiYgdCA9PT0gJ29iamVjdCcpIHtcbiAgICAgIHZhbGlkID0gdmFsdWUgaW5zdGFuY2VvZiB0eXBlO1xuICAgIH1cbiAgfSBlbHNlIGlmIChleHBlY3RlZFR5cGUgPT09ICdPYmplY3QnKSB7XG4gICAgdmFsaWQgPSBpc1BsYWluT2JqZWN0KHZhbHVlKTtcbiAgfSBlbHNlIGlmIChleHBlY3RlZFR5cGUgPT09ICdBcnJheScpIHtcbiAgICB2YWxpZCA9IEFycmF5LmlzQXJyYXkodmFsdWUpO1xuICB9IGVsc2Uge1xuICAgIHZhbGlkID0gdmFsdWUgaW5zdGFuY2VvZiB0eXBlO1xuICB9XG4gIHJldHVybiB7XG4gICAgdmFsaWQ6IHZhbGlkLFxuICAgIGV4cGVjdGVkVHlwZTogZXhwZWN0ZWRUeXBlXG4gIH1cbn1cblxuLyoqXG4gKiBVc2UgZnVuY3Rpb24gc3RyaW5nIG5hbWUgdG8gY2hlY2sgYnVpbHQtaW4gdHlwZXMsXG4gKiBiZWNhdXNlIGEgc2ltcGxlIGVxdWFsaXR5IGNoZWNrIHdpbGwgZmFpbCB3aGVuIHJ1bm5pbmdcbiAqIGFjcm9zcyBkaWZmZXJlbnQgdm1zIC8gaWZyYW1lcy5cbiAqL1xuZnVuY3Rpb24gZ2V0VHlwZSAoZm4pIHtcbiAgdmFyIG1hdGNoID0gZm4gJiYgZm4udG9TdHJpbmcoKS5tYXRjaCgvXlxccypmdW5jdGlvbiAoXFx3KykvKTtcbiAgcmV0dXJuIG1hdGNoID8gbWF0Y2hbMV0gOiAnJ1xufVxuXG5mdW5jdGlvbiBpc1NhbWVUeXBlIChhLCBiKSB7XG4gIHJldHVybiBnZXRUeXBlKGEpID09PSBnZXRUeXBlKGIpXG59XG5cbmZ1bmN0aW9uIGdldFR5cGVJbmRleCAodHlwZSwgZXhwZWN0ZWRUeXBlcykge1xuICBpZiAoIUFycmF5LmlzQXJyYXkoZXhwZWN0ZWRUeXBlcykpIHtcbiAgICByZXR1cm4gaXNTYW1lVHlwZShleHBlY3RlZFR5cGVzLCB0eXBlKSA/IDAgOiAtMVxuICB9XG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSBleHBlY3RlZFR5cGVzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgaWYgKGlzU2FtZVR5cGUoZXhwZWN0ZWRUeXBlc1tpXSwgdHlwZSkpIHtcbiAgICAgIHJldHVybiBpXG4gICAgfVxuICB9XG4gIHJldHVybiAtMVxufVxuXG5mdW5jdGlvbiBnZXRJbnZhbGlkVHlwZU1lc3NhZ2UgKG5hbWUsIHZhbHVlLCBleHBlY3RlZFR5cGVzKSB7XG4gIHZhciBtZXNzYWdlID0gXCJJbnZhbGlkIHByb3A6IHR5cGUgY2hlY2sgZmFpbGVkIGZvciBwcm9wIFxcXCJcIiArIG5hbWUgKyBcIlxcXCIuXCIgK1xuICAgIFwiIEV4cGVjdGVkIFwiICsgKGV4cGVjdGVkVHlwZXMubWFwKGNhcGl0YWxpemUpLmpvaW4oJywgJykpO1xuICB2YXIgZXhwZWN0ZWRUeXBlID0gZXhwZWN0ZWRUeXBlc1swXTtcbiAgdmFyIHJlY2VpdmVkVHlwZSA9IHRvUmF3VHlwZSh2YWx1ZSk7XG4gIHZhciBleHBlY3RlZFZhbHVlID0gc3R5bGVWYWx1ZSh2YWx1ZSwgZXhwZWN0ZWRUeXBlKTtcbiAgdmFyIHJlY2VpdmVkVmFsdWUgPSBzdHlsZVZhbHVlKHZhbHVlLCByZWNlaXZlZFR5cGUpO1xuICAvLyBjaGVjayBpZiB3ZSBuZWVkIHRvIHNwZWNpZnkgZXhwZWN0ZWQgdmFsdWVcbiAgaWYgKGV4cGVjdGVkVHlwZXMubGVuZ3RoID09PSAxICYmXG4gICAgICBpc0V4cGxpY2FibGUoZXhwZWN0ZWRUeXBlKSAmJlxuICAgICAgIWlzQm9vbGVhbihleHBlY3RlZFR5cGUsIHJlY2VpdmVkVHlwZSkpIHtcbiAgICBtZXNzYWdlICs9IFwiIHdpdGggdmFsdWUgXCIgKyBleHBlY3RlZFZhbHVlO1xuICB9XG4gIG1lc3NhZ2UgKz0gXCIsIGdvdCBcIiArIHJlY2VpdmVkVHlwZSArIFwiIFwiO1xuICAvLyBjaGVjayBpZiB3ZSBuZWVkIHRvIHNwZWNpZnkgcmVjZWl2ZWQgdmFsdWVcbiAgaWYgKGlzRXhwbGljYWJsZShyZWNlaXZlZFR5cGUpKSB7XG4gICAgbWVzc2FnZSArPSBcIndpdGggdmFsdWUgXCIgKyByZWNlaXZlZFZhbHVlICsgXCIuXCI7XG4gIH1cbiAgcmV0dXJuIG1lc3NhZ2Vcbn1cblxuZnVuY3Rpb24gc3R5bGVWYWx1ZSAodmFsdWUsIHR5cGUpIHtcbiAgaWYgKHR5cGUgPT09ICdTdHJpbmcnKSB7XG4gICAgcmV0dXJuIChcIlxcXCJcIiArIHZhbHVlICsgXCJcXFwiXCIpXG4gIH0gZWxzZSBpZiAodHlwZSA9PT0gJ051bWJlcicpIHtcbiAgICByZXR1cm4gKFwiXCIgKyAoTnVtYmVyKHZhbHVlKSkpXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIChcIlwiICsgdmFsdWUpXG4gIH1cbn1cblxuZnVuY3Rpb24gaXNFeHBsaWNhYmxlICh2YWx1ZSkge1xuICB2YXIgZXhwbGljaXRUeXBlcyA9IFsnc3RyaW5nJywgJ251bWJlcicsICdib29sZWFuJ107XG4gIHJldHVybiBleHBsaWNpdFR5cGVzLnNvbWUoZnVuY3Rpb24gKGVsZW0pIHsgcmV0dXJuIHZhbHVlLnRvTG93ZXJDYXNlKCkgPT09IGVsZW07IH0pXG59XG5cbmZ1bmN0aW9uIGlzQm9vbGVhbiAoKSB7XG4gIHZhciBhcmdzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gIHdoaWxlICggbGVuLS0gKSBhcmdzWyBsZW4gXSA9IGFyZ3VtZW50c1sgbGVuIF07XG5cbiAgcmV0dXJuIGFyZ3Muc29tZShmdW5jdGlvbiAoZWxlbSkgeyByZXR1cm4gZWxlbS50b0xvd2VyQ2FzZSgpID09PSAnYm9vbGVhbic7IH0pXG59XG5cbi8qICAqL1xuXG5mdW5jdGlvbiBoYW5kbGVFcnJvciAoZXJyLCB2bSwgaW5mbykge1xuICAvLyBEZWFjdGl2YXRlIGRlcHMgdHJhY2tpbmcgd2hpbGUgcHJvY2Vzc2luZyBlcnJvciBoYW5kbGVyIHRvIGF2b2lkIHBvc3NpYmxlIGluZmluaXRlIHJlbmRlcmluZy5cbiAgLy8gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vdnVlanMvdnVleC9pc3N1ZXMvMTUwNVxuICBwdXNoVGFyZ2V0KCk7XG4gIHRyeSB7XG4gICAgaWYgKHZtKSB7XG4gICAgICB2YXIgY3VyID0gdm07XG4gICAgICB3aGlsZSAoKGN1ciA9IGN1ci4kcGFyZW50KSkge1xuICAgICAgICB2YXIgaG9va3MgPSBjdXIuJG9wdGlvbnMuZXJyb3JDYXB0dXJlZDtcbiAgICAgICAgaWYgKGhvb2tzKSB7XG4gICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBob29rcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgdmFyIGNhcHR1cmUgPSBob29rc1tpXS5jYWxsKGN1ciwgZXJyLCB2bSwgaW5mbykgPT09IGZhbHNlO1xuICAgICAgICAgICAgICBpZiAoY2FwdHVyZSkgeyByZXR1cm4gfVxuICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICBnbG9iYWxIYW5kbGVFcnJvcihlLCBjdXIsICdlcnJvckNhcHR1cmVkIGhvb2snKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZ2xvYmFsSGFuZGxlRXJyb3IoZXJyLCB2bSwgaW5mbyk7XG4gIH0gZmluYWxseSB7XG4gICAgcG9wVGFyZ2V0KCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaW52b2tlV2l0aEVycm9ySGFuZGxpbmcgKFxuICBoYW5kbGVyLFxuICBjb250ZXh0LFxuICBhcmdzLFxuICB2bSxcbiAgaW5mb1xuKSB7XG4gIHZhciByZXM7XG4gIHRyeSB7XG4gICAgcmVzID0gYXJncyA/IGhhbmRsZXIuYXBwbHkoY29udGV4dCwgYXJncykgOiBoYW5kbGVyLmNhbGwoY29udGV4dCk7XG4gICAgaWYgKHJlcyAmJiAhcmVzLl9pc1Z1ZSAmJiBpc1Byb21pc2UocmVzKSAmJiAhcmVzLl9oYW5kbGVkKSB7XG4gICAgICByZXMuY2F0Y2goZnVuY3Rpb24gKGUpIHsgcmV0dXJuIGhhbmRsZUVycm9yKGUsIHZtLCBpbmZvICsgXCIgKFByb21pc2UvYXN5bmMpXCIpOyB9KTtcbiAgICAgIC8vIGlzc3VlICM5NTExXG4gICAgICAvLyBhdm9pZCBjYXRjaCB0cmlnZ2VyaW5nIG11bHRpcGxlIHRpbWVzIHdoZW4gbmVzdGVkIGNhbGxzXG4gICAgICByZXMuX2hhbmRsZWQgPSB0cnVlO1xuICAgIH1cbiAgfSBjYXRjaCAoZSkge1xuICAgIGhhbmRsZUVycm9yKGUsIHZtLCBpbmZvKTtcbiAgfVxuICByZXR1cm4gcmVzXG59XG5cbmZ1bmN0aW9uIGdsb2JhbEhhbmRsZUVycm9yIChlcnIsIHZtLCBpbmZvKSB7XG4gIGlmIChjb25maWcuZXJyb3JIYW5kbGVyKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBjb25maWcuZXJyb3JIYW5kbGVyLmNhbGwobnVsbCwgZXJyLCB2bSwgaW5mbylcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAvLyBpZiB0aGUgdXNlciBpbnRlbnRpb25hbGx5IHRocm93cyB0aGUgb3JpZ2luYWwgZXJyb3IgaW4gdGhlIGhhbmRsZXIsXG4gICAgICAvLyBkbyBub3QgbG9nIGl0IHR3aWNlXG4gICAgICBpZiAoZSAhPT0gZXJyKSB7XG4gICAgICAgIGxvZ0Vycm9yKGUsIG51bGwsICdjb25maWcuZXJyb3JIYW5kbGVyJyk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGxvZ0Vycm9yKGVyciwgdm0sIGluZm8pO1xufVxuXG5mdW5jdGlvbiBsb2dFcnJvciAoZXJyLCB2bSwgaW5mbykge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIHdhcm4oKFwiRXJyb3IgaW4gXCIgKyBpbmZvICsgXCI6IFxcXCJcIiArIChlcnIudG9TdHJpbmcoKSkgKyBcIlxcXCJcIiksIHZtKTtcbiAgfVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICBpZiAoKGluQnJvd3NlciB8fCBpbldlZXgpICYmIHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBlcnJcbiAgfVxufVxuXG4vKiAgKi9cblxudmFyIGlzVXNpbmdNaWNyb1Rhc2sgPSBmYWxzZTtcblxudmFyIGNhbGxiYWNrcyA9IFtdO1xudmFyIHBlbmRpbmcgPSBmYWxzZTtcblxuZnVuY3Rpb24gZmx1c2hDYWxsYmFja3MgKCkge1xuICBwZW5kaW5nID0gZmFsc2U7XG4gIHZhciBjb3BpZXMgPSBjYWxsYmFja3Muc2xpY2UoMCk7XG4gIGNhbGxiYWNrcy5sZW5ndGggPSAwO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGNvcGllcy5sZW5ndGg7IGkrKykge1xuICAgIGNvcGllc1tpXSgpO1xuICB9XG59XG5cbi8vIEhlcmUgd2UgaGF2ZSBhc3luYyBkZWZlcnJpbmcgd3JhcHBlcnMgdXNpbmcgbWljcm90YXNrcy5cbi8vIEluIDIuNSB3ZSB1c2VkIChtYWNybykgdGFza3MgKGluIGNvbWJpbmF0aW9uIHdpdGggbWljcm90YXNrcykuXG4vLyBIb3dldmVyLCBpdCBoYXMgc3VidGxlIHByb2JsZW1zIHdoZW4gc3RhdGUgaXMgY2hhbmdlZCByaWdodCBiZWZvcmUgcmVwYWludFxuLy8gKGUuZy4gIzY4MTMsIG91dC1pbiB0cmFuc2l0aW9ucykuXG4vLyBBbHNvLCB1c2luZyAobWFjcm8pIHRhc2tzIGluIGV2ZW50IGhhbmRsZXIgd291bGQgY2F1c2Ugc29tZSB3ZWlyZCBiZWhhdmlvcnNcbi8vIHRoYXQgY2Fubm90IGJlIGNpcmN1bXZlbnRlZCAoZS5nLiAjNzEwOSwgIzcxNTMsICM3NTQ2LCAjNzgzNCwgIzgxMDkpLlxuLy8gU28gd2Ugbm93IHVzZSBtaWNyb3Rhc2tzIGV2ZXJ5d2hlcmUsIGFnYWluLlxuLy8gQSBtYWpvciBkcmF3YmFjayBvZiB0aGlzIHRyYWRlb2ZmIGlzIHRoYXQgdGhlcmUgYXJlIHNvbWUgc2NlbmFyaW9zXG4vLyB3aGVyZSBtaWNyb3Rhc2tzIGhhdmUgdG9vIGhpZ2ggYSBwcmlvcml0eSBhbmQgZmlyZSBpbiBiZXR3ZWVuIHN1cHBvc2VkbHlcbi8vIHNlcXVlbnRpYWwgZXZlbnRzIChlLmcuICM0NTIxLCAjNjY5MCwgd2hpY2ggaGF2ZSB3b3JrYXJvdW5kcylcbi8vIG9yIGV2ZW4gYmV0d2VlbiBidWJibGluZyBvZiB0aGUgc2FtZSBldmVudCAoIzY1NjYpLlxudmFyIHRpbWVyRnVuYztcblxuLy8gVGhlIG5leHRUaWNrIGJlaGF2aW9yIGxldmVyYWdlcyB0aGUgbWljcm90YXNrIHF1ZXVlLCB3aGljaCBjYW4gYmUgYWNjZXNzZWRcbi8vIHZpYSBlaXRoZXIgbmF0aXZlIFByb21pc2UudGhlbiBvciBNdXRhdGlvbk9ic2VydmVyLlxuLy8gTXV0YXRpb25PYnNlcnZlciBoYXMgd2lkZXIgc3VwcG9ydCwgaG93ZXZlciBpdCBpcyBzZXJpb3VzbHkgYnVnZ2VkIGluXG4vLyBVSVdlYlZpZXcgaW4gaU9TID49IDkuMy4zIHdoZW4gdHJpZ2dlcmVkIGluIHRvdWNoIGV2ZW50IGhhbmRsZXJzLiBJdFxuLy8gY29tcGxldGVseSBzdG9wcyB3b3JraW5nIGFmdGVyIHRyaWdnZXJpbmcgYSBmZXcgdGltZXMuLi4gc28sIGlmIG5hdGl2ZVxuLy8gUHJvbWlzZSBpcyBhdmFpbGFibGUsIHdlIHdpbGwgdXNlIGl0OlxuLyogaXN0YW5idWwgaWdub3JlIG5leHQsICRmbG93LWRpc2FibGUtbGluZSAqL1xuaWYgKHR5cGVvZiBQcm9taXNlICE9PSAndW5kZWZpbmVkJyAmJiBpc05hdGl2ZShQcm9taXNlKSkge1xuICB2YXIgcCA9IFByb21pc2UucmVzb2x2ZSgpO1xuICB0aW1lckZ1bmMgPSBmdW5jdGlvbiAoKSB7XG4gICAgcC50aGVuKGZsdXNoQ2FsbGJhY2tzKTtcbiAgICAvLyBJbiBwcm9ibGVtYXRpYyBVSVdlYlZpZXdzLCBQcm9taXNlLnRoZW4gZG9lc24ndCBjb21wbGV0ZWx5IGJyZWFrLCBidXRcbiAgICAvLyBpdCBjYW4gZ2V0IHN0dWNrIGluIGEgd2VpcmQgc3RhdGUgd2hlcmUgY2FsbGJhY2tzIGFyZSBwdXNoZWQgaW50byB0aGVcbiAgICAvLyBtaWNyb3Rhc2sgcXVldWUgYnV0IHRoZSBxdWV1ZSBpc24ndCBiZWluZyBmbHVzaGVkLCB1bnRpbCB0aGUgYnJvd3NlclxuICAgIC8vIG5lZWRzIHRvIGRvIHNvbWUgb3RoZXIgd29yaywgZS5nLiBoYW5kbGUgYSB0aW1lci4gVGhlcmVmb3JlIHdlIGNhblxuICAgIC8vIFwiZm9yY2VcIiB0aGUgbWljcm90YXNrIHF1ZXVlIHRvIGJlIGZsdXNoZWQgYnkgYWRkaW5nIGFuIGVtcHR5IHRpbWVyLlxuICAgIGlmIChpc0lPUykgeyBzZXRUaW1lb3V0KG5vb3ApOyB9XG4gIH07XG4gIGlzVXNpbmdNaWNyb1Rhc2sgPSB0cnVlO1xufSBlbHNlIGlmICghaXNJRSAmJiB0eXBlb2YgTXV0YXRpb25PYnNlcnZlciAhPT0gJ3VuZGVmaW5lZCcgJiYgKFxuICBpc05hdGl2ZShNdXRhdGlvbk9ic2VydmVyKSB8fFxuICAvLyBQaGFudG9tSlMgYW5kIGlPUyA3LnhcbiAgTXV0YXRpb25PYnNlcnZlci50b1N0cmluZygpID09PSAnW29iamVjdCBNdXRhdGlvbk9ic2VydmVyQ29uc3RydWN0b3JdJ1xuKSkge1xuICAvLyBVc2UgTXV0YXRpb25PYnNlcnZlciB3aGVyZSBuYXRpdmUgUHJvbWlzZSBpcyBub3QgYXZhaWxhYmxlLFxuICAvLyBlLmcuIFBoYW50b21KUywgaU9TNywgQW5kcm9pZCA0LjRcbiAgLy8gKCM2NDY2IE11dGF0aW9uT2JzZXJ2ZXIgaXMgdW5yZWxpYWJsZSBpbiBJRTExKVxuICB2YXIgY291bnRlciA9IDE7XG4gIHZhciBvYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKGZsdXNoQ2FsbGJhY2tzKTtcbiAgdmFyIHRleHROb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoU3RyaW5nKGNvdW50ZXIpKTtcbiAgb2JzZXJ2ZXIub2JzZXJ2ZSh0ZXh0Tm9kZSwge1xuICAgIGNoYXJhY3RlckRhdGE6IHRydWVcbiAgfSk7XG4gIHRpbWVyRnVuYyA9IGZ1bmN0aW9uICgpIHtcbiAgICBjb3VudGVyID0gKGNvdW50ZXIgKyAxKSAlIDI7XG4gICAgdGV4dE5vZGUuZGF0YSA9IFN0cmluZyhjb3VudGVyKTtcbiAgfTtcbiAgaXNVc2luZ01pY3JvVGFzayA9IHRydWU7XG59IGVsc2UgaWYgKHR5cGVvZiBzZXRJbW1lZGlhdGUgIT09ICd1bmRlZmluZWQnICYmIGlzTmF0aXZlKHNldEltbWVkaWF0ZSkpIHtcbiAgLy8gRmFsbGJhY2sgdG8gc2V0SW1tZWRpYXRlLlxuICAvLyBUZWNobmljYWxseSBpdCBsZXZlcmFnZXMgdGhlIChtYWNybykgdGFzayBxdWV1ZSxcbiAgLy8gYnV0IGl0IGlzIHN0aWxsIGEgYmV0dGVyIGNob2ljZSB0aGFuIHNldFRpbWVvdXQuXG4gIHRpbWVyRnVuYyA9IGZ1bmN0aW9uICgpIHtcbiAgICBzZXRJbW1lZGlhdGUoZmx1c2hDYWxsYmFja3MpO1xuICB9O1xufSBlbHNlIHtcbiAgLy8gRmFsbGJhY2sgdG8gc2V0VGltZW91dC5cbiAgdGltZXJGdW5jID0gZnVuY3Rpb24gKCkge1xuICAgIHNldFRpbWVvdXQoZmx1c2hDYWxsYmFja3MsIDApO1xuICB9O1xufVxuXG5mdW5jdGlvbiBuZXh0VGljayAoY2IsIGN0eCkge1xuICB2YXIgX3Jlc29sdmU7XG4gIGNhbGxiYWNrcy5wdXNoKGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoY2IpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNiLmNhbGwoY3R4KTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgaGFuZGxlRXJyb3IoZSwgY3R4LCAnbmV4dFRpY2snKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKF9yZXNvbHZlKSB7XG4gICAgICBfcmVzb2x2ZShjdHgpO1xuICAgIH1cbiAgfSk7XG4gIGlmICghcGVuZGluZykge1xuICAgIHBlbmRpbmcgPSB0cnVlO1xuICAgIHRpbWVyRnVuYygpO1xuICB9XG4gIC8vICRmbG93LWRpc2FibGUtbGluZVxuICBpZiAoIWNiICYmIHR5cGVvZiBQcm9taXNlICE9PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xuICAgICAgX3Jlc29sdmUgPSByZXNvbHZlO1xuICAgIH0pXG4gIH1cbn1cblxuLyogICovXG5cbnZhciBtYXJrO1xudmFyIG1lYXN1cmU7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBwZXJmID0gaW5Ccm93c2VyICYmIHdpbmRvdy5wZXJmb3JtYW5jZTtcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gIGlmIChcbiAgICBwZXJmICYmXG4gICAgcGVyZi5tYXJrICYmXG4gICAgcGVyZi5tZWFzdXJlICYmXG4gICAgcGVyZi5jbGVhck1hcmtzICYmXG4gICAgcGVyZi5jbGVhck1lYXN1cmVzXG4gICkge1xuICAgIG1hcmsgPSBmdW5jdGlvbiAodGFnKSB7IHJldHVybiBwZXJmLm1hcmsodGFnKTsgfTtcbiAgICBtZWFzdXJlID0gZnVuY3Rpb24gKG5hbWUsIHN0YXJ0VGFnLCBlbmRUYWcpIHtcbiAgICAgIHBlcmYubWVhc3VyZShuYW1lLCBzdGFydFRhZywgZW5kVGFnKTtcbiAgICAgIHBlcmYuY2xlYXJNYXJrcyhzdGFydFRhZyk7XG4gICAgICBwZXJmLmNsZWFyTWFya3MoZW5kVGFnKTtcbiAgICAgIC8vIHBlcmYuY2xlYXJNZWFzdXJlcyhuYW1lKVxuICAgIH07XG4gIH1cbn1cblxuLyogbm90IHR5cGUgY2hlY2tpbmcgdGhpcyBmaWxlIGJlY2F1c2UgZmxvdyBkb2Vzbid0IHBsYXkgd2VsbCB3aXRoIFByb3h5ICovXG5cbnZhciBpbml0UHJveHk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBhbGxvd2VkR2xvYmFscyA9IG1ha2VNYXAoXG4gICAgJ0luZmluaXR5LHVuZGVmaW5lZCxOYU4saXNGaW5pdGUsaXNOYU4sJyArXG4gICAgJ3BhcnNlRmxvYXQscGFyc2VJbnQsZGVjb2RlVVJJLGRlY29kZVVSSUNvbXBvbmVudCxlbmNvZGVVUkksZW5jb2RlVVJJQ29tcG9uZW50LCcgK1xuICAgICdNYXRoLE51bWJlcixEYXRlLEFycmF5LE9iamVjdCxCb29sZWFuLFN0cmluZyxSZWdFeHAsTWFwLFNldCxKU09OLEludGwsJyArXG4gICAgJ3JlcXVpcmUnIC8vIGZvciBXZWJwYWNrL0Jyb3dzZXJpZnlcbiAgKTtcblxuICB2YXIgd2Fybk5vblByZXNlbnQgPSBmdW5jdGlvbiAodGFyZ2V0LCBrZXkpIHtcbiAgICB3YXJuKFxuICAgICAgXCJQcm9wZXJ0eSBvciBtZXRob2QgXFxcIlwiICsga2V5ICsgXCJcXFwiIGlzIG5vdCBkZWZpbmVkIG9uIHRoZSBpbnN0YW5jZSBidXQgXCIgK1xuICAgICAgJ3JlZmVyZW5jZWQgZHVyaW5nIHJlbmRlci4gTWFrZSBzdXJlIHRoYXQgdGhpcyBwcm9wZXJ0eSBpcyByZWFjdGl2ZSwgJyArXG4gICAgICAnZWl0aGVyIGluIHRoZSBkYXRhIG9wdGlvbiwgb3IgZm9yIGNsYXNzLWJhc2VkIGNvbXBvbmVudHMsIGJ5ICcgK1xuICAgICAgJ2luaXRpYWxpemluZyB0aGUgcHJvcGVydHkuICcgK1xuICAgICAgJ1NlZTogaHR0cHM6Ly92dWVqcy5vcmcvdjIvZ3VpZGUvcmVhY3Rpdml0eS5odG1sI0RlY2xhcmluZy1SZWFjdGl2ZS1Qcm9wZXJ0aWVzLicsXG4gICAgICB0YXJnZXRcbiAgICApO1xuICB9O1xuXG4gIHZhciB3YXJuUmVzZXJ2ZWRQcmVmaXggPSBmdW5jdGlvbiAodGFyZ2V0LCBrZXkpIHtcbiAgICB3YXJuKFxuICAgICAgXCJQcm9wZXJ0eSBcXFwiXCIgKyBrZXkgKyBcIlxcXCIgbXVzdCBiZSBhY2Nlc3NlZCB3aXRoIFxcXCIkZGF0YS5cIiArIGtleSArIFwiXFxcIiBiZWNhdXNlIFwiICtcbiAgICAgICdwcm9wZXJ0aWVzIHN0YXJ0aW5nIHdpdGggXCIkXCIgb3IgXCJfXCIgYXJlIG5vdCBwcm94aWVkIGluIHRoZSBWdWUgaW5zdGFuY2UgdG8gJyArXG4gICAgICAncHJldmVudCBjb25mbGljdHMgd2l0aCBWdWUgaW50ZXJuYWxzLiAnICtcbiAgICAgICdTZWU6IGh0dHBzOi8vdnVlanMub3JnL3YyL2FwaS8jZGF0YScsXG4gICAgICB0YXJnZXRcbiAgICApO1xuICB9O1xuXG4gIHZhciBoYXNQcm94eSA9XG4gICAgdHlwZW9mIFByb3h5ICE9PSAndW5kZWZpbmVkJyAmJiBpc05hdGl2ZShQcm94eSk7XG5cbiAgaWYgKGhhc1Byb3h5KSB7XG4gICAgdmFyIGlzQnVpbHRJbk1vZGlmaWVyID0gbWFrZU1hcCgnc3RvcCxwcmV2ZW50LHNlbGYsY3RybCxzaGlmdCxhbHQsbWV0YSxleGFjdCcpO1xuICAgIGNvbmZpZy5rZXlDb2RlcyA9IG5ldyBQcm94eShjb25maWcua2V5Q29kZXMsIHtcbiAgICAgIHNldDogZnVuY3Rpb24gc2V0ICh0YXJnZXQsIGtleSwgdmFsdWUpIHtcbiAgICAgICAgaWYgKGlzQnVpbHRJbk1vZGlmaWVyKGtleSkpIHtcbiAgICAgICAgICB3YXJuKChcIkF2b2lkIG92ZXJ3cml0aW5nIGJ1aWx0LWluIG1vZGlmaWVyIGluIGNvbmZpZy5rZXlDb2RlczogLlwiICsga2V5KSk7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSB2YWx1ZTtcbiAgICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICB2YXIgaGFzSGFuZGxlciA9IHtcbiAgICBoYXM6IGZ1bmN0aW9uIGhhcyAodGFyZ2V0LCBrZXkpIHtcbiAgICAgIHZhciBoYXMgPSBrZXkgaW4gdGFyZ2V0O1xuICAgICAgdmFyIGlzQWxsb3dlZCA9IGFsbG93ZWRHbG9iYWxzKGtleSkgfHxcbiAgICAgICAgKHR5cGVvZiBrZXkgPT09ICdzdHJpbmcnICYmIGtleS5jaGFyQXQoMCkgPT09ICdfJyAmJiAhKGtleSBpbiB0YXJnZXQuJGRhdGEpKTtcbiAgICAgIGlmICghaGFzICYmICFpc0FsbG93ZWQpIHtcbiAgICAgICAgaWYgKGtleSBpbiB0YXJnZXQuJGRhdGEpIHsgd2FyblJlc2VydmVkUHJlZml4KHRhcmdldCwga2V5KTsgfVxuICAgICAgICBlbHNlIHsgd2Fybk5vblByZXNlbnQodGFyZ2V0LCBrZXkpOyB9XG4gICAgICB9XG4gICAgICByZXR1cm4gaGFzIHx8ICFpc0FsbG93ZWRcbiAgICB9XG4gIH07XG5cbiAgdmFyIGdldEhhbmRsZXIgPSB7XG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQgKHRhcmdldCwga2V5KSB7XG4gICAgICBpZiAodHlwZW9mIGtleSA9PT0gJ3N0cmluZycgJiYgIShrZXkgaW4gdGFyZ2V0KSkge1xuICAgICAgICBpZiAoa2V5IGluIHRhcmdldC4kZGF0YSkgeyB3YXJuUmVzZXJ2ZWRQcmVmaXgodGFyZ2V0LCBrZXkpOyB9XG4gICAgICAgIGVsc2UgeyB3YXJuTm9uUHJlc2VudCh0YXJnZXQsIGtleSk7IH1cbiAgICAgIH1cbiAgICAgIHJldHVybiB0YXJnZXRba2V5XVxuICAgIH1cbiAgfTtcblxuICBpbml0UHJveHkgPSBmdW5jdGlvbiBpbml0UHJveHkgKHZtKSB7XG4gICAgaWYgKGhhc1Byb3h5KSB7XG4gICAgICAvLyBkZXRlcm1pbmUgd2hpY2ggcHJveHkgaGFuZGxlciB0byB1c2VcbiAgICAgIHZhciBvcHRpb25zID0gdm0uJG9wdGlvbnM7XG4gICAgICB2YXIgaGFuZGxlcnMgPSBvcHRpb25zLnJlbmRlciAmJiBvcHRpb25zLnJlbmRlci5fd2l0aFN0cmlwcGVkXG4gICAgICAgID8gZ2V0SGFuZGxlclxuICAgICAgICA6IGhhc0hhbmRsZXI7XG4gICAgICB2bS5fcmVuZGVyUHJveHkgPSBuZXcgUHJveHkodm0sIGhhbmRsZXJzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdm0uX3JlbmRlclByb3h5ID0gdm07XG4gICAgfVxuICB9O1xufVxuXG4vKiAgKi9cblxudmFyIHNlZW5PYmplY3RzID0gbmV3IF9TZXQoKTtcblxuLyoqXG4gKiBSZWN1cnNpdmVseSB0cmF2ZXJzZSBhbiBvYmplY3QgdG8gZXZva2UgYWxsIGNvbnZlcnRlZFxuICogZ2V0dGVycywgc28gdGhhdCBldmVyeSBuZXN0ZWQgcHJvcGVydHkgaW5zaWRlIHRoZSBvYmplY3RcbiAqIGlzIGNvbGxlY3RlZCBhcyBhIFwiZGVlcFwiIGRlcGVuZGVuY3kuXG4gKi9cbmZ1bmN0aW9uIHRyYXZlcnNlICh2YWwpIHtcbiAgX3RyYXZlcnNlKHZhbCwgc2Vlbk9iamVjdHMpO1xuICBzZWVuT2JqZWN0cy5jbGVhcigpO1xufVxuXG5mdW5jdGlvbiBfdHJhdmVyc2UgKHZhbCwgc2Vlbikge1xuICB2YXIgaSwga2V5cztcbiAgdmFyIGlzQSA9IEFycmF5LmlzQXJyYXkodmFsKTtcbiAgaWYgKCghaXNBICYmICFpc09iamVjdCh2YWwpKSB8fCBPYmplY3QuaXNGcm96ZW4odmFsKSB8fCB2YWwgaW5zdGFuY2VvZiBWTm9kZSkge1xuICAgIHJldHVyblxuICB9XG4gIGlmICh2YWwuX19vYl9fKSB7XG4gICAgdmFyIGRlcElkID0gdmFsLl9fb2JfXy5kZXAuaWQ7XG4gICAgaWYgKHNlZW4uaGFzKGRlcElkKSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIHNlZW4uYWRkKGRlcElkKTtcbiAgfVxuICBpZiAoaXNBKSB7XG4gICAgaSA9IHZhbC5sZW5ndGg7XG4gICAgd2hpbGUgKGktLSkgeyBfdHJhdmVyc2UodmFsW2ldLCBzZWVuKTsgfVxuICB9IGVsc2Uge1xuICAgIGtleXMgPSBPYmplY3Qua2V5cyh2YWwpO1xuICAgIGkgPSBrZXlzLmxlbmd0aDtcbiAgICB3aGlsZSAoaS0tKSB7IF90cmF2ZXJzZSh2YWxba2V5c1tpXV0sIHNlZW4pOyB9XG4gIH1cbn1cblxuLyogICovXG5cbnZhciBub3JtYWxpemVFdmVudCA9IGNhY2hlZChmdW5jdGlvbiAobmFtZSkge1xuICB2YXIgcGFzc2l2ZSA9IG5hbWUuY2hhckF0KDApID09PSAnJic7XG4gIG5hbWUgPSBwYXNzaXZlID8gbmFtZS5zbGljZSgxKSA6IG5hbWU7XG4gIHZhciBvbmNlJCQxID0gbmFtZS5jaGFyQXQoMCkgPT09ICd+JzsgLy8gUHJlZml4ZWQgbGFzdCwgY2hlY2tlZCBmaXJzdFxuICBuYW1lID0gb25jZSQkMSA/IG5hbWUuc2xpY2UoMSkgOiBuYW1lO1xuICB2YXIgY2FwdHVyZSA9IG5hbWUuY2hhckF0KDApID09PSAnISc7XG4gIG5hbWUgPSBjYXB0dXJlID8gbmFtZS5zbGljZSgxKSA6IG5hbWU7XG4gIHJldHVybiB7XG4gICAgbmFtZTogbmFtZSxcbiAgICBvbmNlOiBvbmNlJCQxLFxuICAgIGNhcHR1cmU6IGNhcHR1cmUsXG4gICAgcGFzc2l2ZTogcGFzc2l2ZVxuICB9XG59KTtcblxuZnVuY3Rpb24gY3JlYXRlRm5JbnZva2VyIChmbnMsIHZtKSB7XG4gIGZ1bmN0aW9uIGludm9rZXIgKCkge1xuICAgIHZhciBhcmd1bWVudHMkMSA9IGFyZ3VtZW50cztcblxuICAgIHZhciBmbnMgPSBpbnZva2VyLmZucztcbiAgICBpZiAoQXJyYXkuaXNBcnJheShmbnMpKSB7XG4gICAgICB2YXIgY2xvbmVkID0gZm5zLnNsaWNlKCk7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNsb25lZC5sZW5ndGg7IGkrKykge1xuICAgICAgICBpbnZva2VXaXRoRXJyb3JIYW5kbGluZyhjbG9uZWRbaV0sIG51bGwsIGFyZ3VtZW50cyQxLCB2bSwgXCJ2LW9uIGhhbmRsZXJcIik7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIHJldHVybiBoYW5kbGVyIHJldHVybiB2YWx1ZSBmb3Igc2luZ2xlIGhhbmRsZXJzXG4gICAgICByZXR1cm4gaW52b2tlV2l0aEVycm9ySGFuZGxpbmcoZm5zLCBudWxsLCBhcmd1bWVudHMsIHZtLCBcInYtb24gaGFuZGxlclwiKVxuICAgIH1cbiAgfVxuICBpbnZva2VyLmZucyA9IGZucztcbiAgcmV0dXJuIGludm9rZXJcbn1cblxuZnVuY3Rpb24gdXBkYXRlTGlzdGVuZXJzIChcbiAgb24sXG4gIG9sZE9uLFxuICBhZGQsXG4gIHJlbW92ZSQkMSxcbiAgY3JlYXRlT25jZUhhbmRsZXIsXG4gIHZtXG4pIHtcbiAgdmFyIG5hbWUsIGRlZiQkMSwgY3VyLCBvbGQsIGV2ZW50O1xuICBmb3IgKG5hbWUgaW4gb24pIHtcbiAgICBkZWYkJDEgPSBjdXIgPSBvbltuYW1lXTtcbiAgICBvbGQgPSBvbGRPbltuYW1lXTtcbiAgICBldmVudCA9IG5vcm1hbGl6ZUV2ZW50KG5hbWUpO1xuICAgIGlmIChpc1VuZGVmKGN1cikpIHtcbiAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgd2FybihcbiAgICAgICAgXCJJbnZhbGlkIGhhbmRsZXIgZm9yIGV2ZW50IFxcXCJcIiArIChldmVudC5uYW1lKSArIFwiXFxcIjogZ290IFwiICsgU3RyaW5nKGN1ciksXG4gICAgICAgIHZtXG4gICAgICApO1xuICAgIH0gZWxzZSBpZiAoaXNVbmRlZihvbGQpKSB7XG4gICAgICBpZiAoaXNVbmRlZihjdXIuZm5zKSkge1xuICAgICAgICBjdXIgPSBvbltuYW1lXSA9IGNyZWF0ZUZuSW52b2tlcihjdXIsIHZtKTtcbiAgICAgIH1cbiAgICAgIGlmIChpc1RydWUoZXZlbnQub25jZSkpIHtcbiAgICAgICAgY3VyID0gb25bbmFtZV0gPSBjcmVhdGVPbmNlSGFuZGxlcihldmVudC5uYW1lLCBjdXIsIGV2ZW50LmNhcHR1cmUpO1xuICAgICAgfVxuICAgICAgYWRkKGV2ZW50Lm5hbWUsIGN1ciwgZXZlbnQuY2FwdHVyZSwgZXZlbnQucGFzc2l2ZSwgZXZlbnQucGFyYW1zKTtcbiAgICB9IGVsc2UgaWYgKGN1ciAhPT0gb2xkKSB7XG4gICAgICBvbGQuZm5zID0gY3VyO1xuICAgICAgb25bbmFtZV0gPSBvbGQ7XG4gICAgfVxuICB9XG4gIGZvciAobmFtZSBpbiBvbGRPbikge1xuICAgIGlmIChpc1VuZGVmKG9uW25hbWVdKSkge1xuICAgICAgZXZlbnQgPSBub3JtYWxpemVFdmVudChuYW1lKTtcbiAgICAgIHJlbW92ZSQkMShldmVudC5uYW1lLCBvbGRPbltuYW1lXSwgZXZlbnQuY2FwdHVyZSk7XG4gICAgfVxuICB9XG59XG5cbi8qICAqL1xuXG5mdW5jdGlvbiBtZXJnZVZOb2RlSG9vayAoZGVmLCBob29rS2V5LCBob29rKSB7XG4gIGlmIChkZWYgaW5zdGFuY2VvZiBWTm9kZSkge1xuICAgIGRlZiA9IGRlZi5kYXRhLmhvb2sgfHwgKGRlZi5kYXRhLmhvb2sgPSB7fSk7XG4gIH1cbiAgdmFyIGludm9rZXI7XG4gIHZhciBvbGRIb29rID0gZGVmW2hvb2tLZXldO1xuXG4gIGZ1bmN0aW9uIHdyYXBwZWRIb29rICgpIHtcbiAgICBob29rLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgLy8gaW1wb3J0YW50OiByZW1vdmUgbWVyZ2VkIGhvb2sgdG8gZW5zdXJlIGl0J3MgY2FsbGVkIG9ubHkgb25jZVxuICAgIC8vIGFuZCBwcmV2ZW50IG1lbW9yeSBsZWFrXG4gICAgcmVtb3ZlKGludm9rZXIuZm5zLCB3cmFwcGVkSG9vayk7XG4gIH1cblxuICBpZiAoaXNVbmRlZihvbGRIb29rKSkge1xuICAgIC8vIG5vIGV4aXN0aW5nIGhvb2tcbiAgICBpbnZva2VyID0gY3JlYXRlRm5JbnZva2VyKFt3cmFwcGVkSG9va10pO1xuICB9IGVsc2Uge1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgIGlmIChpc0RlZihvbGRIb29rLmZucykgJiYgaXNUcnVlKG9sZEhvb2subWVyZ2VkKSkge1xuICAgICAgLy8gYWxyZWFkeSBhIG1lcmdlZCBpbnZva2VyXG4gICAgICBpbnZva2VyID0gb2xkSG9vaztcbiAgICAgIGludm9rZXIuZm5zLnB1c2god3JhcHBlZEhvb2spO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBleGlzdGluZyBwbGFpbiBob29rXG4gICAgICBpbnZva2VyID0gY3JlYXRlRm5JbnZva2VyKFtvbGRIb29rLCB3cmFwcGVkSG9va10pO1xuICAgIH1cbiAgfVxuXG4gIGludm9rZXIubWVyZ2VkID0gdHJ1ZTtcbiAgZGVmW2hvb2tLZXldID0gaW52b2tlcjtcbn1cblxuLyogICovXG5cbmZ1bmN0aW9uIGV4dHJhY3RQcm9wc0Zyb21WTm9kZURhdGEgKFxuICBkYXRhLFxuICBDdG9yLFxuICB0YWdcbikge1xuICAvLyB3ZSBhcmUgb25seSBleHRyYWN0aW5nIHJhdyB2YWx1ZXMgaGVyZS5cbiAgLy8gdmFsaWRhdGlvbiBhbmQgZGVmYXVsdCB2YWx1ZXMgYXJlIGhhbmRsZWQgaW4gdGhlIGNoaWxkXG4gIC8vIGNvbXBvbmVudCBpdHNlbGYuXG4gIHZhciBwcm9wT3B0aW9ucyA9IEN0b3Iub3B0aW9ucy5wcm9wcztcbiAgaWYgKGlzVW5kZWYocHJvcE9wdGlvbnMpKSB7XG4gICAgcmV0dXJuXG4gIH1cbiAgdmFyIHJlcyA9IHt9O1xuICB2YXIgYXR0cnMgPSBkYXRhLmF0dHJzO1xuICB2YXIgcHJvcHMgPSBkYXRhLnByb3BzO1xuICBpZiAoaXNEZWYoYXR0cnMpIHx8IGlzRGVmKHByb3BzKSkge1xuICAgIGZvciAodmFyIGtleSBpbiBwcm9wT3B0aW9ucykge1xuICAgICAgdmFyIGFsdEtleSA9IGh5cGhlbmF0ZShrZXkpO1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgdmFyIGtleUluTG93ZXJDYXNlID0ga2V5LnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIGlmIChcbiAgICAgICAgICBrZXkgIT09IGtleUluTG93ZXJDYXNlICYmXG4gICAgICAgICAgYXR0cnMgJiYgaGFzT3duKGF0dHJzLCBrZXlJbkxvd2VyQ2FzZSlcbiAgICAgICAgKSB7XG4gICAgICAgICAgdGlwKFxuICAgICAgICAgICAgXCJQcm9wIFxcXCJcIiArIGtleUluTG93ZXJDYXNlICsgXCJcXFwiIGlzIHBhc3NlZCB0byBjb21wb25lbnQgXCIgK1xuICAgICAgICAgICAgKGZvcm1hdENvbXBvbmVudE5hbWUodGFnIHx8IEN0b3IpKSArIFwiLCBidXQgdGhlIGRlY2xhcmVkIHByb3AgbmFtZSBpc1wiICtcbiAgICAgICAgICAgIFwiIFxcXCJcIiArIGtleSArIFwiXFxcIi4gXCIgK1xuICAgICAgICAgICAgXCJOb3RlIHRoYXQgSFRNTCBhdHRyaWJ1dGVzIGFyZSBjYXNlLWluc2Vuc2l0aXZlIGFuZCBjYW1lbENhc2VkIFwiICtcbiAgICAgICAgICAgIFwicHJvcHMgbmVlZCB0byB1c2UgdGhlaXIga2ViYWItY2FzZSBlcXVpdmFsZW50cyB3aGVuIHVzaW5nIGluLURPTSBcIiArXG4gICAgICAgICAgICBcInRlbXBsYXRlcy4gWW91IHNob3VsZCBwcm9iYWJseSB1c2UgXFxcIlwiICsgYWx0S2V5ICsgXCJcXFwiIGluc3RlYWQgb2YgXFxcIlwiICsga2V5ICsgXCJcXFwiLlwiXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgY2hlY2tQcm9wKHJlcywgcHJvcHMsIGtleSwgYWx0S2V5LCB0cnVlKSB8fFxuICAgICAgY2hlY2tQcm9wKHJlcywgYXR0cnMsIGtleSwgYWx0S2V5LCBmYWxzZSk7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXNcbn1cblxuZnVuY3Rpb24gY2hlY2tQcm9wIChcbiAgcmVzLFxuICBoYXNoLFxuICBrZXksXG4gIGFsdEtleSxcbiAgcHJlc2VydmVcbikge1xuICBpZiAoaXNEZWYoaGFzaCkpIHtcbiAgICBpZiAoaGFzT3duKGhhc2gsIGtleSkpIHtcbiAgICAgIHJlc1trZXldID0gaGFzaFtrZXldO1xuICAgICAgaWYgKCFwcmVzZXJ2ZSkge1xuICAgICAgICBkZWxldGUgaGFzaFtrZXldO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRydWVcbiAgICB9IGVsc2UgaWYgKGhhc093bihoYXNoLCBhbHRLZXkpKSB7XG4gICAgICByZXNba2V5XSA9IGhhc2hbYWx0S2V5XTtcbiAgICAgIGlmICghcHJlc2VydmUpIHtcbiAgICAgICAgZGVsZXRlIGhhc2hbYWx0S2V5XTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuICB9XG4gIHJldHVybiBmYWxzZVxufVxuXG4vKiAgKi9cblxuLy8gVGhlIHRlbXBsYXRlIGNvbXBpbGVyIGF0dGVtcHRzIHRvIG1pbmltaXplIHRoZSBuZWVkIGZvciBub3JtYWxpemF0aW9uIGJ5XG4vLyBzdGF0aWNhbGx5IGFuYWx5emluZyB0aGUgdGVtcGxhdGUgYXQgY29tcGlsZSB0aW1lLlxuLy9cbi8vIEZvciBwbGFpbiBIVE1MIG1hcmt1cCwgbm9ybWFsaXphdGlvbiBjYW4gYmUgY29tcGxldGVseSBza2lwcGVkIGJlY2F1c2UgdGhlXG4vLyBnZW5lcmF0ZWQgcmVuZGVyIGZ1bmN0aW9uIGlzIGd1YXJhbnRlZWQgdG8gcmV0dXJuIEFycmF5PFZOb2RlPi4gVGhlcmUgYXJlXG4vLyB0d28gY2FzZXMgd2hlcmUgZXh0cmEgbm9ybWFsaXphdGlvbiBpcyBuZWVkZWQ6XG5cbi8vIDEuIFdoZW4gdGhlIGNoaWxkcmVuIGNvbnRhaW5zIGNvbXBvbmVudHMgLSBiZWNhdXNlIGEgZnVuY3Rpb25hbCBjb21wb25lbnRcbi8vIG1heSByZXR1cm4gYW4gQXJyYXkgaW5zdGVhZCBvZiBhIHNpbmdsZSByb290LiBJbiB0aGlzIGNhc2UsIGp1c3QgYSBzaW1wbGVcbi8vIG5vcm1hbGl6YXRpb24gaXMgbmVlZGVkIC0gaWYgYW55IGNoaWxkIGlzIGFuIEFycmF5LCB3ZSBmbGF0dGVuIHRoZSB3aG9sZVxuLy8gdGhpbmcgd2l0aCBBcnJheS5wcm90b3R5cGUuY29uY2F0LiBJdCBpcyBndWFyYW50ZWVkIHRvIGJlIG9ubHkgMS1sZXZlbCBkZWVwXG4vLyBiZWNhdXNlIGZ1bmN0aW9uYWwgY29tcG9uZW50cyBhbHJlYWR5IG5vcm1hbGl6ZSB0aGVpciBvd24gY2hpbGRyZW4uXG5mdW5jdGlvbiBzaW1wbGVOb3JtYWxpemVDaGlsZHJlbiAoY2hpbGRyZW4pIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGNoaWxkcmVuW2ldKSkge1xuICAgICAgcmV0dXJuIEFycmF5LnByb3RvdHlwZS5jb25jYXQuYXBwbHkoW10sIGNoaWxkcmVuKVxuICAgIH1cbiAgfVxuICByZXR1cm4gY2hpbGRyZW5cbn1cblxuLy8gMi4gV2hlbiB0aGUgY2hpbGRyZW4gY29udGFpbnMgY29uc3RydWN0cyB0aGF0IGFsd2F5cyBnZW5lcmF0ZWQgbmVzdGVkIEFycmF5cyxcbi8vIGUuZy4gPHRlbXBsYXRlPiwgPHNsb3Q+LCB2LWZvciwgb3Igd2hlbiB0aGUgY2hpbGRyZW4gaXMgcHJvdmlkZWQgYnkgdXNlclxuLy8gd2l0aCBoYW5kLXdyaXR0ZW4gcmVuZGVyIGZ1bmN0aW9ucyAvIEpTWC4gSW4gc3VjaCBjYXNlcyBhIGZ1bGwgbm9ybWFsaXphdGlvblxuLy8gaXMgbmVlZGVkIHRvIGNhdGVyIHRvIGFsbCBwb3NzaWJsZSB0eXBlcyBvZiBjaGlsZHJlbiB2YWx1ZXMuXG5mdW5jdGlvbiBub3JtYWxpemVDaGlsZHJlbiAoY2hpbGRyZW4pIHtcbiAgcmV0dXJuIGlzUHJpbWl0aXZlKGNoaWxkcmVuKVxuICAgID8gW2NyZWF0ZVRleHRWTm9kZShjaGlsZHJlbildXG4gICAgOiBBcnJheS5pc0FycmF5KGNoaWxkcmVuKVxuICAgICAgPyBub3JtYWxpemVBcnJheUNoaWxkcmVuKGNoaWxkcmVuKVxuICAgICAgOiB1bmRlZmluZWRcbn1cblxuZnVuY3Rpb24gaXNUZXh0Tm9kZSAobm9kZSkge1xuICByZXR1cm4gaXNEZWYobm9kZSkgJiYgaXNEZWYobm9kZS50ZXh0KSAmJiBpc0ZhbHNlKG5vZGUuaXNDb21tZW50KVxufVxuXG5mdW5jdGlvbiBub3JtYWxpemVBcnJheUNoaWxkcmVuIChjaGlsZHJlbiwgbmVzdGVkSW5kZXgpIHtcbiAgdmFyIHJlcyA9IFtdO1xuICB2YXIgaSwgYywgbGFzdEluZGV4LCBsYXN0O1xuICBmb3IgKGkgPSAwOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICBjID0gY2hpbGRyZW5baV07XG4gICAgaWYgKGlzVW5kZWYoYykgfHwgdHlwZW9mIGMgPT09ICdib29sZWFuJykgeyBjb250aW51ZSB9XG4gICAgbGFzdEluZGV4ID0gcmVzLmxlbmd0aCAtIDE7XG4gICAgbGFzdCA9IHJlc1tsYXN0SW5kZXhdO1xuICAgIC8vICBuZXN0ZWRcbiAgICBpZiAoQXJyYXkuaXNBcnJheShjKSkge1xuICAgICAgaWYgKGMubGVuZ3RoID4gMCkge1xuICAgICAgICBjID0gbm9ybWFsaXplQXJyYXlDaGlsZHJlbihjLCAoKG5lc3RlZEluZGV4IHx8ICcnKSArIFwiX1wiICsgaSkpO1xuICAgICAgICAvLyBtZXJnZSBhZGphY2VudCB0ZXh0IG5vZGVzXG4gICAgICAgIGlmIChpc1RleHROb2RlKGNbMF0pICYmIGlzVGV4dE5vZGUobGFzdCkpIHtcbiAgICAgICAgICByZXNbbGFzdEluZGV4XSA9IGNyZWF0ZVRleHRWTm9kZShsYXN0LnRleHQgKyAoY1swXSkudGV4dCk7XG4gICAgICAgICAgYy5zaGlmdCgpO1xuICAgICAgICB9XG4gICAgICAgIHJlcy5wdXNoLmFwcGx5KHJlcywgYyk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChpc1ByaW1pdGl2ZShjKSkge1xuICAgICAgaWYgKGlzVGV4dE5vZGUobGFzdCkpIHtcbiAgICAgICAgLy8gbWVyZ2UgYWRqYWNlbnQgdGV4dCBub2Rlc1xuICAgICAgICAvLyB0aGlzIGlzIG5lY2Vzc2FyeSBmb3IgU1NSIGh5ZHJhdGlvbiBiZWNhdXNlIHRleHQgbm9kZXMgYXJlXG4gICAgICAgIC8vIGVzc2VudGlhbGx5IG1lcmdlZCB3aGVuIHJlbmRlcmVkIHRvIEhUTUwgc3RyaW5nc1xuICAgICAgICByZXNbbGFzdEluZGV4XSA9IGNyZWF0ZVRleHRWTm9kZShsYXN0LnRleHQgKyBjKTtcbiAgICAgIH0gZWxzZSBpZiAoYyAhPT0gJycpIHtcbiAgICAgICAgLy8gY29udmVydCBwcmltaXRpdmUgdG8gdm5vZGVcbiAgICAgICAgcmVzLnB1c2goY3JlYXRlVGV4dFZOb2RlKGMpKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKGlzVGV4dE5vZGUoYykgJiYgaXNUZXh0Tm9kZShsYXN0KSkge1xuICAgICAgICAvLyBtZXJnZSBhZGphY2VudCB0ZXh0IG5vZGVzXG4gICAgICAgIHJlc1tsYXN0SW5kZXhdID0gY3JlYXRlVGV4dFZOb2RlKGxhc3QudGV4dCArIGMudGV4dCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBkZWZhdWx0IGtleSBmb3IgbmVzdGVkIGFycmF5IGNoaWxkcmVuIChsaWtlbHkgZ2VuZXJhdGVkIGJ5IHYtZm9yKVxuICAgICAgICBpZiAoaXNUcnVlKGNoaWxkcmVuLl9pc1ZMaXN0KSAmJlxuICAgICAgICAgIGlzRGVmKGMudGFnKSAmJlxuICAgICAgICAgIGlzVW5kZWYoYy5rZXkpICYmXG4gICAgICAgICAgaXNEZWYobmVzdGVkSW5kZXgpKSB7XG4gICAgICAgICAgYy5rZXkgPSBcIl9fdmxpc3RcIiArIG5lc3RlZEluZGV4ICsgXCJfXCIgKyBpICsgXCJfX1wiO1xuICAgICAgICB9XG4gICAgICAgIHJlcy5wdXNoKGMpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzXG59XG5cbi8qICAqL1xuXG5mdW5jdGlvbiBpbml0UHJvdmlkZSAodm0pIHtcbiAgdmFyIHByb3ZpZGUgPSB2bS4kb3B0aW9ucy5wcm92aWRlO1xuICBpZiAocHJvdmlkZSkge1xuICAgIHZtLl9wcm92aWRlZCA9IHR5cGVvZiBwcm92aWRlID09PSAnZnVuY3Rpb24nXG4gICAgICA/IHByb3ZpZGUuY2FsbCh2bSlcbiAgICAgIDogcHJvdmlkZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpbml0SW5qZWN0aW9ucyAodm0pIHtcbiAgdmFyIHJlc3VsdCA9IHJlc29sdmVJbmplY3Qodm0uJG9wdGlvbnMuaW5qZWN0LCB2bSk7XG4gIGlmIChyZXN1bHQpIHtcbiAgICB0b2dnbGVPYnNlcnZpbmcoZmFsc2UpO1xuICAgIE9iamVjdC5rZXlzKHJlc3VsdCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgZGVmaW5lUmVhY3RpdmUkJDEodm0sIGtleSwgcmVzdWx0W2tleV0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICB3YXJuKFxuICAgICAgICAgICAgXCJBdm9pZCBtdXRhdGluZyBhbiBpbmplY3RlZCB2YWx1ZSBkaXJlY3RseSBzaW5jZSB0aGUgY2hhbmdlcyB3aWxsIGJlIFwiICtcbiAgICAgICAgICAgIFwib3ZlcndyaXR0ZW4gd2hlbmV2ZXIgdGhlIHByb3ZpZGVkIGNvbXBvbmVudCByZS1yZW5kZXJzLiBcIiArXG4gICAgICAgICAgICBcImluamVjdGlvbiBiZWluZyBtdXRhdGVkOiBcXFwiXCIgKyBrZXkgKyBcIlxcXCJcIixcbiAgICAgICAgICAgIHZtXG4gICAgICAgICAgKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkZWZpbmVSZWFjdGl2ZSQkMSh2bSwga2V5LCByZXN1bHRba2V5XSk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgdG9nZ2xlT2JzZXJ2aW5nKHRydWUpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHJlc29sdmVJbmplY3QgKGluamVjdCwgdm0pIHtcbiAgaWYgKGluamVjdCkge1xuICAgIC8vIGluamVjdCBpcyA6YW55IGJlY2F1c2UgZmxvdyBpcyBub3Qgc21hcnQgZW5vdWdoIHRvIGZpZ3VyZSBvdXQgY2FjaGVkXG4gICAgdmFyIHJlc3VsdCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgdmFyIGtleXMgPSBoYXNTeW1ib2xcbiAgICAgID8gUmVmbGVjdC5vd25LZXlzKGluamVjdClcbiAgICAgIDogT2JqZWN0LmtleXMoaW5qZWN0KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG4gICAgICAvLyAjNjU3NCBpbiBjYXNlIHRoZSBpbmplY3Qgb2JqZWN0IGlzIG9ic2VydmVkLi4uXG4gICAgICBpZiAoa2V5ID09PSAnX19vYl9fJykgeyBjb250aW51ZSB9XG4gICAgICB2YXIgcHJvdmlkZUtleSA9IGluamVjdFtrZXldLmZyb207XG4gICAgICB2YXIgc291cmNlID0gdm07XG4gICAgICB3aGlsZSAoc291cmNlKSB7XG4gICAgICAgIGlmIChzb3VyY2UuX3Byb3ZpZGVkICYmIGhhc093bihzb3VyY2UuX3Byb3ZpZGVkLCBwcm92aWRlS2V5KSkge1xuICAgICAgICAgIHJlc3VsdFtrZXldID0gc291cmNlLl9wcm92aWRlZFtwcm92aWRlS2V5XTtcbiAgICAgICAgICBicmVha1xuICAgICAgICB9XG4gICAgICAgIHNvdXJjZSA9IHNvdXJjZS4kcGFyZW50O1xuICAgICAgfVxuICAgICAgaWYgKCFzb3VyY2UpIHtcbiAgICAgICAgaWYgKCdkZWZhdWx0JyBpbiBpbmplY3Rba2V5XSkge1xuICAgICAgICAgIHZhciBwcm92aWRlRGVmYXVsdCA9IGluamVjdFtrZXldLmRlZmF1bHQ7XG4gICAgICAgICAgcmVzdWx0W2tleV0gPSB0eXBlb2YgcHJvdmlkZURlZmF1bHQgPT09ICdmdW5jdGlvbidcbiAgICAgICAgICAgID8gcHJvdmlkZURlZmF1bHQuY2FsbCh2bSlcbiAgICAgICAgICAgIDogcHJvdmlkZURlZmF1bHQ7XG4gICAgICAgIH0gZWxzZSBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgIHdhcm4oKFwiSW5qZWN0aW9uIFxcXCJcIiArIGtleSArIFwiXFxcIiBub3QgZm91bmRcIiksIHZtKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0XG4gIH1cbn1cblxuLyogICovXG5cblxuXG4vKipcbiAqIFJ1bnRpbWUgaGVscGVyIGZvciByZXNvbHZpbmcgcmF3IGNoaWxkcmVuIFZOb2RlcyBpbnRvIGEgc2xvdCBvYmplY3QuXG4gKi9cbmZ1bmN0aW9uIHJlc29sdmVTbG90cyAoXG4gIGNoaWxkcmVuLFxuICBjb250ZXh0XG4pIHtcbiAgaWYgKCFjaGlsZHJlbiB8fCAhY2hpbGRyZW4ubGVuZ3RoKSB7XG4gICAgcmV0dXJuIHt9XG4gIH1cbiAgdmFyIHNsb3RzID0ge307XG4gIGZvciAodmFyIGkgPSAwLCBsID0gY2hpbGRyZW4ubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgdmFyIGNoaWxkID0gY2hpbGRyZW5baV07XG4gICAgdmFyIGRhdGEgPSBjaGlsZC5kYXRhO1xuICAgIC8vIHJlbW92ZSBzbG90IGF0dHJpYnV0ZSBpZiB0aGUgbm9kZSBpcyByZXNvbHZlZCBhcyBhIFZ1ZSBzbG90IG5vZGVcbiAgICBpZiAoZGF0YSAmJiBkYXRhLmF0dHJzICYmIGRhdGEuYXR0cnMuc2xvdCkge1xuICAgICAgZGVsZXRlIGRhdGEuYXR0cnMuc2xvdDtcbiAgICB9XG4gICAgLy8gbmFtZWQgc2xvdHMgc2hvdWxkIG9ubHkgYmUgcmVzcGVjdGVkIGlmIHRoZSB2bm9kZSB3YXMgcmVuZGVyZWQgaW4gdGhlXG4gICAgLy8gc2FtZSBjb250ZXh0LlxuICAgIGlmICgoY2hpbGQuY29udGV4dCA9PT0gY29udGV4dCB8fCBjaGlsZC5mbkNvbnRleHQgPT09IGNvbnRleHQpICYmXG4gICAgICBkYXRhICYmIGRhdGEuc2xvdCAhPSBudWxsXG4gICAgKSB7XG4gICAgICB2YXIgbmFtZSA9IGRhdGEuc2xvdDtcbiAgICAgIHZhciBzbG90ID0gKHNsb3RzW25hbWVdIHx8IChzbG90c1tuYW1lXSA9IFtdKSk7XG4gICAgICBpZiAoY2hpbGQudGFnID09PSAndGVtcGxhdGUnKSB7XG4gICAgICAgIHNsb3QucHVzaC5hcHBseShzbG90LCBjaGlsZC5jaGlsZHJlbiB8fCBbXSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzbG90LnB1c2goY2hpbGQpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAoc2xvdHMuZGVmYXVsdCB8fCAoc2xvdHMuZGVmYXVsdCA9IFtdKSkucHVzaChjaGlsZCk7XG4gICAgfVxuICB9XG4gIC8vIGlnbm9yZSBzbG90cyB0aGF0IGNvbnRhaW5zIG9ubHkgd2hpdGVzcGFjZVxuICBmb3IgKHZhciBuYW1lJDEgaW4gc2xvdHMpIHtcbiAgICBpZiAoc2xvdHNbbmFtZSQxXS5ldmVyeShpc1doaXRlc3BhY2UpKSB7XG4gICAgICBkZWxldGUgc2xvdHNbbmFtZSQxXTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHNsb3RzXG59XG5cbmZ1bmN0aW9uIGlzV2hpdGVzcGFjZSAobm9kZSkge1xuICByZXR1cm4gKG5vZGUuaXNDb21tZW50ICYmICFub2RlLmFzeW5jRmFjdG9yeSkgfHwgbm9kZS50ZXh0ID09PSAnICdcbn1cblxuLyogICovXG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZVNjb3BlZFNsb3RzIChcbiAgc2xvdHMsXG4gIG5vcm1hbFNsb3RzLFxuICBwcmV2U2xvdHNcbikge1xuICB2YXIgcmVzO1xuICB2YXIgaGFzTm9ybWFsU2xvdHMgPSBPYmplY3Qua2V5cyhub3JtYWxTbG90cykubGVuZ3RoID4gMDtcbiAgdmFyIGlzU3RhYmxlID0gc2xvdHMgPyAhIXNsb3RzLiRzdGFibGUgOiAhaGFzTm9ybWFsU2xvdHM7XG4gIHZhciBrZXkgPSBzbG90cyAmJiBzbG90cy4ka2V5O1xuICBpZiAoIXNsb3RzKSB7XG4gICAgcmVzID0ge307XG4gIH0gZWxzZSBpZiAoc2xvdHMuX25vcm1hbGl6ZWQpIHtcbiAgICAvLyBmYXN0IHBhdGggMTogY2hpbGQgY29tcG9uZW50IHJlLXJlbmRlciBvbmx5LCBwYXJlbnQgZGlkIG5vdCBjaGFuZ2VcbiAgICByZXR1cm4gc2xvdHMuX25vcm1hbGl6ZWRcbiAgfSBlbHNlIGlmIChcbiAgICBpc1N0YWJsZSAmJlxuICAgIHByZXZTbG90cyAmJlxuICAgIHByZXZTbG90cyAhPT0gZW1wdHlPYmplY3QgJiZcbiAgICBrZXkgPT09IHByZXZTbG90cy4ka2V5ICYmXG4gICAgIWhhc05vcm1hbFNsb3RzICYmXG4gICAgIXByZXZTbG90cy4kaGFzTm9ybWFsXG4gICkge1xuICAgIC8vIGZhc3QgcGF0aCAyOiBzdGFibGUgc2NvcGVkIHNsb3RzIHcvIG5vIG5vcm1hbCBzbG90cyB0byBwcm94eSxcbiAgICAvLyBvbmx5IG5lZWQgdG8gbm9ybWFsaXplIG9uY2VcbiAgICByZXR1cm4gcHJldlNsb3RzXG4gIH0gZWxzZSB7XG4gICAgcmVzID0ge307XG4gICAgZm9yICh2YXIga2V5JDEgaW4gc2xvdHMpIHtcbiAgICAgIGlmIChzbG90c1trZXkkMV0gJiYga2V5JDFbMF0gIT09ICckJykge1xuICAgICAgICByZXNba2V5JDFdID0gbm9ybWFsaXplU2NvcGVkU2xvdChub3JtYWxTbG90cywga2V5JDEsIHNsb3RzW2tleSQxXSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIC8vIGV4cG9zZSBub3JtYWwgc2xvdHMgb24gc2NvcGVkU2xvdHNcbiAgZm9yICh2YXIga2V5JDIgaW4gbm9ybWFsU2xvdHMpIHtcbiAgICBpZiAoIShrZXkkMiBpbiByZXMpKSB7XG4gICAgICByZXNba2V5JDJdID0gcHJveHlOb3JtYWxTbG90KG5vcm1hbFNsb3RzLCBrZXkkMik7XG4gICAgfVxuICB9XG4gIC8vIGF2b3JpYXogc2VlbXMgdG8gbW9jayBhIG5vbi1leHRlbnNpYmxlICRzY29wZWRTbG90cyBvYmplY3RcbiAgLy8gYW5kIHdoZW4gdGhhdCBpcyBwYXNzZWQgZG93biB0aGlzIHdvdWxkIGNhdXNlIGFuIGVycm9yXG4gIGlmIChzbG90cyAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKHNsb3RzKSkge1xuICAgIChzbG90cykuX25vcm1hbGl6ZWQgPSByZXM7XG4gIH1cbiAgZGVmKHJlcywgJyRzdGFibGUnLCBpc1N0YWJsZSk7XG4gIGRlZihyZXMsICcka2V5Jywga2V5KTtcbiAgZGVmKHJlcywgJyRoYXNOb3JtYWwnLCBoYXNOb3JtYWxTbG90cyk7XG4gIHJldHVybiByZXNcbn1cblxuZnVuY3Rpb24gbm9ybWFsaXplU2NvcGVkU2xvdChub3JtYWxTbG90cywga2V5LCBmbikge1xuICB2YXIgbm9ybWFsaXplZCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcmVzID0gYXJndW1lbnRzLmxlbmd0aCA/IGZuLmFwcGx5KG51bGwsIGFyZ3VtZW50cykgOiBmbih7fSk7XG4gICAgcmVzID0gcmVzICYmIHR5cGVvZiByZXMgPT09ICdvYmplY3QnICYmICFBcnJheS5pc0FycmF5KHJlcylcbiAgICAgID8gW3Jlc10gLy8gc2luZ2xlIHZub2RlXG4gICAgICA6IG5vcm1hbGl6ZUNoaWxkcmVuKHJlcyk7XG4gICAgcmV0dXJuIHJlcyAmJiAoXG4gICAgICByZXMubGVuZ3RoID09PSAwIHx8XG4gICAgICAocmVzLmxlbmd0aCA9PT0gMSAmJiByZXNbMF0uaXNDb21tZW50KSAvLyAjOTY1OFxuICAgICkgPyB1bmRlZmluZWRcbiAgICAgIDogcmVzXG4gIH07XG4gIC8vIHRoaXMgaXMgYSBzbG90IHVzaW5nIHRoZSBuZXcgdi1zbG90IHN5bnRheCB3aXRob3V0IHNjb3BlLiBhbHRob3VnaCBpdCBpc1xuICAvLyBjb21waWxlZCBhcyBhIHNjb3BlZCBzbG90LCByZW5kZXIgZm4gdXNlcnMgd291bGQgZXhwZWN0IGl0IHRvIGJlIHByZXNlbnRcbiAgLy8gb24gdGhpcy4kc2xvdHMgYmVjYXVzZSB0aGUgdXNhZ2UgaXMgc2VtYW50aWNhbGx5IGEgbm9ybWFsIHNsb3QuXG4gIGlmIChmbi5wcm94eSkge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShub3JtYWxTbG90cywga2V5LCB7XG4gICAgICBnZXQ6IG5vcm1hbGl6ZWQsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIG5vcm1hbGl6ZWRcbn1cblxuZnVuY3Rpb24gcHJveHlOb3JtYWxTbG90KHNsb3RzLCBrZXkpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNsb3RzW2tleV07IH1cbn1cblxuLyogICovXG5cbi8qKlxuICogUnVudGltZSBoZWxwZXIgZm9yIHJlbmRlcmluZyB2LWZvciBsaXN0cy5cbiAqL1xuZnVuY3Rpb24gcmVuZGVyTGlzdCAoXG4gIHZhbCxcbiAgcmVuZGVyXG4pIHtcbiAgdmFyIHJldCwgaSwgbCwga2V5cywga2V5O1xuICBpZiAoQXJyYXkuaXNBcnJheSh2YWwpIHx8IHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0ID0gbmV3IEFycmF5KHZhbC5sZW5ndGgpO1xuICAgIGZvciAoaSA9IDAsIGwgPSB2YWwubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICByZXRbaV0gPSByZW5kZXIodmFsW2ldLCBpKTtcbiAgICB9XG4gIH0gZWxzZSBpZiAodHlwZW9mIHZhbCA9PT0gJ251bWJlcicpIHtcbiAgICByZXQgPSBuZXcgQXJyYXkodmFsKTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgdmFsOyBpKyspIHtcbiAgICAgIHJldFtpXSA9IHJlbmRlcihpICsgMSwgaSk7XG4gICAgfVxuICB9IGVsc2UgaWYgKGlzT2JqZWN0KHZhbCkpIHtcbiAgICBpZiAoaGFzU3ltYm9sICYmIHZhbFtTeW1ib2wuaXRlcmF0b3JdKSB7XG4gICAgICByZXQgPSBbXTtcbiAgICAgIHZhciBpdGVyYXRvciA9IHZhbFtTeW1ib2wuaXRlcmF0b3JdKCk7XG4gICAgICB2YXIgcmVzdWx0ID0gaXRlcmF0b3IubmV4dCgpO1xuICAgICAgd2hpbGUgKCFyZXN1bHQuZG9uZSkge1xuICAgICAgICByZXQucHVzaChyZW5kZXIocmVzdWx0LnZhbHVlLCByZXQubGVuZ3RoKSk7XG4gICAgICAgIHJlc3VsdCA9IGl0ZXJhdG9yLm5leHQoKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAga2V5cyA9IE9iamVjdC5rZXlzKHZhbCk7XG4gICAgICByZXQgPSBuZXcgQXJyYXkoa2V5cy5sZW5ndGgpO1xuICAgICAgZm9yIChpID0gMCwgbCA9IGtleXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGtleSA9IGtleXNbaV07XG4gICAgICAgIHJldFtpXSA9IHJlbmRlcih2YWxba2V5XSwga2V5LCBpKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgaWYgKCFpc0RlZihyZXQpKSB7XG4gICAgcmV0ID0gW107XG4gIH1cbiAgKHJldCkuX2lzVkxpc3QgPSB0cnVlO1xuICByZXR1cm4gcmV0XG59XG5cbi8qICAqL1xuXG4vKipcbiAqIFJ1bnRpbWUgaGVscGVyIGZvciByZW5kZXJpbmcgPHNsb3Q+XG4gKi9cbmZ1bmN0aW9uIHJlbmRlclNsb3QgKFxuICBuYW1lLFxuICBmYWxsYmFjayxcbiAgcHJvcHMsXG4gIGJpbmRPYmplY3Rcbikge1xuICB2YXIgc2NvcGVkU2xvdEZuID0gdGhpcy4kc2NvcGVkU2xvdHNbbmFtZV07XG4gIHZhciBub2RlcztcbiAgaWYgKHNjb3BlZFNsb3RGbikgeyAvLyBzY29wZWQgc2xvdFxuICAgIHByb3BzID0gcHJvcHMgfHwge307XG4gICAgaWYgKGJpbmRPYmplY3QpIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICFpc09iamVjdChiaW5kT2JqZWN0KSkge1xuICAgICAgICB3YXJuKFxuICAgICAgICAgICdzbG90IHYtYmluZCB3aXRob3V0IGFyZ3VtZW50IGV4cGVjdHMgYW4gT2JqZWN0JyxcbiAgICAgICAgICB0aGlzXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICBwcm9wcyA9IGV4dGVuZChleHRlbmQoe30sIGJpbmRPYmplY3QpLCBwcm9wcyk7XG4gICAgfVxuICAgIG5vZGVzID0gc2NvcGVkU2xvdEZuKHByb3BzKSB8fCBmYWxsYmFjaztcbiAgfSBlbHNlIHtcbiAgICBub2RlcyA9IHRoaXMuJHNsb3RzW25hbWVdIHx8IGZhbGxiYWNrO1xuICB9XG5cbiAgdmFyIHRhcmdldCA9IHByb3BzICYmIHByb3BzLnNsb3Q7XG4gIGlmICh0YXJnZXQpIHtcbiAgICByZXR1cm4gdGhpcy4kY3JlYXRlRWxlbWVudCgndGVtcGxhdGUnLCB7IHNsb3Q6IHRhcmdldCB9LCBub2RlcylcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gbm9kZXNcbiAgfVxufVxuXG4vKiAgKi9cblxuLyoqXG4gKiBSdW50aW1lIGhlbHBlciBmb3IgcmVzb2x2aW5nIGZpbHRlcnNcbiAqL1xuZnVuY3Rpb24gcmVzb2x2ZUZpbHRlciAoaWQpIHtcbiAgcmV0dXJuIHJlc29sdmVBc3NldCh0aGlzLiRvcHRpb25zLCAnZmlsdGVycycsIGlkLCB0cnVlKSB8fCBpZGVudGl0eVxufVxuXG4vKiAgKi9cblxuZnVuY3Rpb24gaXNLZXlOb3RNYXRjaCAoZXhwZWN0LCBhY3R1YWwpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoZXhwZWN0KSkge1xuICAgIHJldHVybiBleHBlY3QuaW5kZXhPZihhY3R1YWwpID09PSAtMVxuICB9IGVsc2Uge1xuICAgIHJldHVybiBleHBlY3QgIT09IGFjdHVhbFxuICB9XG59XG5cbi8qKlxuICogUnVudGltZSBoZWxwZXIgZm9yIGNoZWNraW5nIGtleUNvZGVzIGZyb20gY29uZmlnLlxuICogZXhwb3NlZCBhcyBWdWUucHJvdG90eXBlLl9rXG4gKiBwYXNzaW5nIGluIGV2ZW50S2V5TmFtZSBhcyBsYXN0IGFyZ3VtZW50IHNlcGFyYXRlbHkgZm9yIGJhY2t3YXJkcyBjb21wYXRcbiAqL1xuZnVuY3Rpb24gY2hlY2tLZXlDb2RlcyAoXG4gIGV2ZW50S2V5Q29kZSxcbiAga2V5LFxuICBidWlsdEluS2V5Q29kZSxcbiAgZXZlbnRLZXlOYW1lLFxuICBidWlsdEluS2V5TmFtZVxuKSB7XG4gIHZhciBtYXBwZWRLZXlDb2RlID0gY29uZmlnLmtleUNvZGVzW2tleV0gfHwgYnVpbHRJbktleUNvZGU7XG4gIGlmIChidWlsdEluS2V5TmFtZSAmJiBldmVudEtleU5hbWUgJiYgIWNvbmZpZy5rZXlDb2Rlc1trZXldKSB7XG4gICAgcmV0dXJuIGlzS2V5Tm90TWF0Y2goYnVpbHRJbktleU5hbWUsIGV2ZW50S2V5TmFtZSlcbiAgfSBlbHNlIGlmIChtYXBwZWRLZXlDb2RlKSB7XG4gICAgcmV0dXJuIGlzS2V5Tm90TWF0Y2gobWFwcGVkS2V5Q29kZSwgZXZlbnRLZXlDb2RlKVxuICB9IGVsc2UgaWYgKGV2ZW50S2V5TmFtZSkge1xuICAgIHJldHVybiBoeXBoZW5hdGUoZXZlbnRLZXlOYW1lKSAhPT0ga2V5XG4gIH1cbn1cblxuLyogICovXG5cbi8qKlxuICogUnVudGltZSBoZWxwZXIgZm9yIG1lcmdpbmcgdi1iaW5kPVwib2JqZWN0XCIgaW50byBhIFZOb2RlJ3MgZGF0YS5cbiAqL1xuZnVuY3Rpb24gYmluZE9iamVjdFByb3BzIChcbiAgZGF0YSxcbiAgdGFnLFxuICB2YWx1ZSxcbiAgYXNQcm9wLFxuICBpc1N5bmNcbikge1xuICBpZiAodmFsdWUpIHtcbiAgICBpZiAoIWlzT2JqZWN0KHZhbHVlKSkge1xuICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB3YXJuKFxuICAgICAgICAndi1iaW5kIHdpdGhvdXQgYXJndW1lbnQgZXhwZWN0cyBhbiBPYmplY3Qgb3IgQXJyYXkgdmFsdWUnLFxuICAgICAgICB0aGlzXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgdmFsdWUgPSB0b09iamVjdCh2YWx1ZSk7XG4gICAgICB9XG4gICAgICB2YXIgaGFzaDtcbiAgICAgIHZhciBsb29wID0gZnVuY3Rpb24gKCBrZXkgKSB7XG4gICAgICAgIGlmIChcbiAgICAgICAgICBrZXkgPT09ICdjbGFzcycgfHxcbiAgICAgICAgICBrZXkgPT09ICdzdHlsZScgfHxcbiAgICAgICAgICBpc1Jlc2VydmVkQXR0cmlidXRlKGtleSlcbiAgICAgICAgKSB7XG4gICAgICAgICAgaGFzaCA9IGRhdGE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHR5cGUgPSBkYXRhLmF0dHJzICYmIGRhdGEuYXR0cnMudHlwZTtcbiAgICAgICAgICBoYXNoID0gYXNQcm9wIHx8IGNvbmZpZy5tdXN0VXNlUHJvcCh0YWcsIHR5cGUsIGtleSlcbiAgICAgICAgICAgID8gZGF0YS5kb21Qcm9wcyB8fCAoZGF0YS5kb21Qcm9wcyA9IHt9KVxuICAgICAgICAgICAgOiBkYXRhLmF0dHJzIHx8IChkYXRhLmF0dHJzID0ge30pO1xuICAgICAgICB9XG4gICAgICAgIHZhciBjYW1lbGl6ZWRLZXkgPSBjYW1lbGl6ZShrZXkpO1xuICAgICAgICB2YXIgaHlwaGVuYXRlZEtleSA9IGh5cGhlbmF0ZShrZXkpO1xuICAgICAgICBpZiAoIShjYW1lbGl6ZWRLZXkgaW4gaGFzaCkgJiYgIShoeXBoZW5hdGVkS2V5IGluIGhhc2gpKSB7XG4gICAgICAgICAgaGFzaFtrZXldID0gdmFsdWVba2V5XTtcblxuICAgICAgICAgIGlmIChpc1N5bmMpIHtcbiAgICAgICAgICAgIHZhciBvbiA9IGRhdGEub24gfHwgKGRhdGEub24gPSB7fSk7XG4gICAgICAgICAgICBvblsoXCJ1cGRhdGU6XCIgKyBrZXkpXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHtcbiAgICAgICAgICAgICAgdmFsdWVba2V5XSA9ICRldmVudDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gdmFsdWUpIGxvb3AoIGtleSApO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZGF0YVxufVxuXG4vKiAgKi9cblxuLyoqXG4gKiBSdW50aW1lIGhlbHBlciBmb3IgcmVuZGVyaW5nIHN0YXRpYyB0cmVlcy5cbiAqL1xuZnVuY3Rpb24gcmVuZGVyU3RhdGljIChcbiAgaW5kZXgsXG4gIGlzSW5Gb3Jcbikge1xuICB2YXIgY2FjaGVkID0gdGhpcy5fc3RhdGljVHJlZXMgfHwgKHRoaXMuX3N0YXRpY1RyZWVzID0gW10pO1xuICB2YXIgdHJlZSA9IGNhY2hlZFtpbmRleF07XG4gIC8vIGlmIGhhcyBhbHJlYWR5LXJlbmRlcmVkIHN0YXRpYyB0cmVlIGFuZCBub3QgaW5zaWRlIHYtZm9yLFxuICAvLyB3ZSBjYW4gcmV1c2UgdGhlIHNhbWUgdHJlZS5cbiAgaWYgKHRyZWUgJiYgIWlzSW5Gb3IpIHtcbiAgICByZXR1cm4gdHJlZVxuICB9XG4gIC8vIG90aGVyd2lzZSwgcmVuZGVyIGEgZnJlc2ggdHJlZS5cbiAgdHJlZSA9IGNhY2hlZFtpbmRleF0gPSB0aGlzLiRvcHRpb25zLnN0YXRpY1JlbmRlckZuc1tpbmRleF0uY2FsbChcbiAgICB0aGlzLl9yZW5kZXJQcm94eSxcbiAgICBudWxsLFxuICAgIHRoaXMgLy8gZm9yIHJlbmRlciBmbnMgZ2VuZXJhdGVkIGZvciBmdW5jdGlvbmFsIGNvbXBvbmVudCB0ZW1wbGF0ZXNcbiAgKTtcbiAgbWFya1N0YXRpYyh0cmVlLCAoXCJfX3N0YXRpY19fXCIgKyBpbmRleCksIGZhbHNlKTtcbiAgcmV0dXJuIHRyZWVcbn1cblxuLyoqXG4gKiBSdW50aW1lIGhlbHBlciBmb3Igdi1vbmNlLlxuICogRWZmZWN0aXZlbHkgaXQgbWVhbnMgbWFya2luZyB0aGUgbm9kZSBhcyBzdGF0aWMgd2l0aCBhIHVuaXF1ZSBrZXkuXG4gKi9cbmZ1bmN0aW9uIG1hcmtPbmNlIChcbiAgdHJlZSxcbiAgaW5kZXgsXG4gIGtleVxuKSB7XG4gIG1hcmtTdGF0aWModHJlZSwgKFwiX19vbmNlX19cIiArIGluZGV4ICsgKGtleSA/IChcIl9cIiArIGtleSkgOiBcIlwiKSksIHRydWUpO1xuICByZXR1cm4gdHJlZVxufVxuXG5mdW5jdGlvbiBtYXJrU3RhdGljIChcbiAgdHJlZSxcbiAga2V5LFxuICBpc09uY2Vcbikge1xuICBpZiAoQXJyYXkuaXNBcnJheSh0cmVlKSkge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdHJlZS5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKHRyZWVbaV0gJiYgdHlwZW9mIHRyZWVbaV0gIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIG1hcmtTdGF0aWNOb2RlKHRyZWVbaV0sIChrZXkgKyBcIl9cIiArIGkpLCBpc09uY2UpO1xuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBtYXJrU3RhdGljTm9kZSh0cmVlLCBrZXksIGlzT25jZSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gbWFya1N0YXRpY05vZGUgKG5vZGUsIGtleSwgaXNPbmNlKSB7XG4gIG5vZGUuaXNTdGF0aWMgPSB0cnVlO1xuICBub2RlLmtleSA9IGtleTtcbiAgbm9kZS5pc09uY2UgPSBpc09uY2U7XG59XG5cbi8qICAqL1xuXG5mdW5jdGlvbiBiaW5kT2JqZWN0TGlzdGVuZXJzIChkYXRhLCB2YWx1ZSkge1xuICBpZiAodmFsdWUpIHtcbiAgICBpZiAoIWlzUGxhaW5PYmplY3QodmFsdWUpKSB7XG4gICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHdhcm4oXG4gICAgICAgICd2LW9uIHdpdGhvdXQgYXJndW1lbnQgZXhwZWN0cyBhbiBPYmplY3QgdmFsdWUnLFxuICAgICAgICB0aGlzXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgb24gPSBkYXRhLm9uID0gZGF0YS5vbiA/IGV4dGVuZCh7fSwgZGF0YS5vbikgOiB7fTtcbiAgICAgIGZvciAodmFyIGtleSBpbiB2YWx1ZSkge1xuICAgICAgICB2YXIgZXhpc3RpbmcgPSBvbltrZXldO1xuICAgICAgICB2YXIgb3VycyA9IHZhbHVlW2tleV07XG4gICAgICAgIG9uW2tleV0gPSBleGlzdGluZyA/IFtdLmNvbmNhdChleGlzdGluZywgb3VycykgOiBvdXJzO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gZGF0YVxufVxuXG4vKiAgKi9cblxuZnVuY3Rpb24gcmVzb2x2ZVNjb3BlZFNsb3RzIChcbiAgZm5zLCAvLyBzZWUgZmxvdy92bm9kZVxuICByZXMsXG4gIC8vIHRoZSBmb2xsb3dpbmcgYXJlIGFkZGVkIGluIDIuNlxuICBoYXNEeW5hbWljS2V5cyxcbiAgY29udGVudEhhc2hLZXlcbikge1xuICByZXMgPSByZXMgfHwgeyAkc3RhYmxlOiAhaGFzRHluYW1pY0tleXMgfTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBmbnMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgc2xvdCA9IGZuc1tpXTtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShzbG90KSkge1xuICAgICAgcmVzb2x2ZVNjb3BlZFNsb3RzKHNsb3QsIHJlcywgaGFzRHluYW1pY0tleXMpO1xuICAgIH0gZWxzZSBpZiAoc2xvdCkge1xuICAgICAgLy8gbWFya2VyIGZvciByZXZlcnNlIHByb3h5aW5nIHYtc2xvdCB3aXRob3V0IHNjb3BlIG9uIHRoaXMuJHNsb3RzXG4gICAgICBpZiAoc2xvdC5wcm94eSkge1xuICAgICAgICBzbG90LmZuLnByb3h5ID0gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIHJlc1tzbG90LmtleV0gPSBzbG90LmZuO1xuICAgIH1cbiAgfVxuICBpZiAoY29udGVudEhhc2hLZXkpIHtcbiAgICAocmVzKS4ka2V5ID0gY29udGVudEhhc2hLZXk7XG4gIH1cbiAgcmV0dXJuIHJlc1xufVxuXG4vKiAgKi9cblxuZnVuY3Rpb24gYmluZER5bmFtaWNLZXlzIChiYXNlT2JqLCB2YWx1ZXMpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB2YWx1ZXMubGVuZ3RoOyBpICs9IDIpIHtcbiAgICB2YXIga2V5ID0gdmFsdWVzW2ldO1xuICAgIGlmICh0eXBlb2Yga2V5ID09PSAnc3RyaW5nJyAmJiBrZXkpIHtcbiAgICAgIGJhc2VPYmpbdmFsdWVzW2ldXSA9IHZhbHVlc1tpICsgMV07XG4gICAgfSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGtleSAhPT0gJycgJiYga2V5ICE9PSBudWxsKSB7XG4gICAgICAvLyBudWxsIGlzIGEgc3BlY2lhbCB2YWx1ZSBmb3IgZXhwbGljaXRseSByZW1vdmluZyBhIGJpbmRpbmdcbiAgICAgIHdhcm4oXG4gICAgICAgIChcIkludmFsaWQgdmFsdWUgZm9yIGR5bmFtaWMgZGlyZWN0aXZlIGFyZ3VtZW50IChleHBlY3RlZCBzdHJpbmcgb3IgbnVsbCk6IFwiICsga2V5KSxcbiAgICAgICAgdGhpc1xuICAgICAgKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGJhc2VPYmpcbn1cblxuLy8gaGVscGVyIHRvIGR5bmFtaWNhbGx5IGFwcGVuZCBtb2RpZmllciBydW50aW1lIG1hcmtlcnMgdG8gZXZlbnQgbmFtZXMuXG4vLyBlbnN1cmUgb25seSBhcHBlbmQgd2hlbiB2YWx1ZSBpcyBhbHJlYWR5IHN0cmluZywgb3RoZXJ3aXNlIGl0IHdpbGwgYmUgY2FzdFxuLy8gdG8gc3RyaW5nIGFuZCBjYXVzZSB0aGUgdHlwZSBjaGVjayB0byBtaXNzLlxuZnVuY3Rpb24gcHJlcGVuZE1vZGlmaWVyICh2YWx1ZSwgc3ltYm9sKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnID8gc3ltYm9sICsgdmFsdWUgOiB2YWx1ZVxufVxuXG4vKiAgKi9cblxuZnVuY3Rpb24gaW5zdGFsbFJlbmRlckhlbHBlcnMgKHRhcmdldCkge1xuICB0YXJnZXQuX28gPSBtYXJrT25jZTtcbiAgdGFyZ2V0Ll9uID0gdG9OdW1iZXI7XG4gIHRhcmdldC5fcyA9IHRvU3RyaW5nO1xuICB0YXJnZXQuX2wgPSByZW5kZXJMaXN0O1xuICB0YXJnZXQuX3QgPSByZW5kZXJTbG90O1xuICB0YXJnZXQuX3EgPSBsb29zZUVxdWFsO1xuICB0YXJnZXQuX2kgPSBsb29zZUluZGV4T2Y7XG4gIHRhcmdldC5fbSA9IHJlbmRlclN0YXRpYztcbiAgdGFyZ2V0Ll9mID0gcmVzb2x2ZUZpbHRlcjtcbiAgdGFyZ2V0Ll9rID0gY2hlY2tLZXlDb2RlcztcbiAgdGFyZ2V0Ll9iID0gYmluZE9iamVjdFByb3BzO1xuICB0YXJnZXQuX3YgPSBjcmVhdGVUZXh0Vk5vZGU7XG4gIHRhcmdldC5fZSA9IGNyZWF0ZUVtcHR5Vk5vZGU7XG4gIHRhcmdldC5fdSA9IHJlc29sdmVTY29wZWRTbG90cztcbiAgdGFyZ2V0Ll9nID0gYmluZE9iamVjdExpc3RlbmVycztcbiAgdGFyZ2V0Ll9kID0gYmluZER5bmFtaWNLZXlzO1xuICB0YXJnZXQuX3AgPSBwcmVwZW5kTW9kaWZpZXI7XG59XG5cbi8qICAqL1xuXG5mdW5jdGlvbiBGdW5jdGlvbmFsUmVuZGVyQ29udGV4dCAoXG4gIGRhdGEsXG4gIHByb3BzLFxuICBjaGlsZHJlbixcbiAgcGFyZW50LFxuICBDdG9yXG4pIHtcbiAgdmFyIHRoaXMkMSA9IHRoaXM7XG5cbiAgdmFyIG9wdGlvbnMgPSBDdG9yLm9wdGlvbnM7XG4gIC8vIGVuc3VyZSB0aGUgY3JlYXRlRWxlbWVudCBmdW5jdGlvbiBpbiBmdW5jdGlvbmFsIGNvbXBvbmVudHNcbiAgLy8gZ2V0cyBhIHVuaXF1ZSBjb250ZXh0IC0gdGhpcyBpcyBuZWNlc3NhcnkgZm9yIGNvcnJlY3QgbmFtZWQgc2xvdCBjaGVja1xuICB2YXIgY29udGV4dFZtO1xuICBpZiAoaGFzT3duKHBhcmVudCwgJ191aWQnKSkge1xuICAgIGNvbnRleHRWbSA9IE9iamVjdC5jcmVhdGUocGFyZW50KTtcbiAgICAvLyAkZmxvdy1kaXNhYmxlLWxpbmVcbiAgICBjb250ZXh0Vm0uX29yaWdpbmFsID0gcGFyZW50O1xuICB9IGVsc2Uge1xuICAgIC8vIHRoZSBjb250ZXh0IHZtIHBhc3NlZCBpbiBpcyBhIGZ1bmN0aW9uYWwgY29udGV4dCBhcyB3ZWxsLlxuICAgIC8vIGluIHRoaXMgY2FzZSB3ZSB3YW50IHRvIG1ha2Ugc3VyZSB3ZSBhcmUgYWJsZSB0byBnZXQgYSBob2xkIHRvIHRoZVxuICAgIC8vIHJlYWwgY29udGV4dCBpbnN0YW5jZS5cbiAgICBjb250ZXh0Vm0gPSBwYXJlbnQ7XG4gICAgLy8gJGZsb3ctZGlzYWJsZS1saW5lXG4gICAgcGFyZW50ID0gcGFyZW50Ll9vcmlnaW5hbDtcbiAgfVxuICB2YXIgaXNDb21waWxlZCA9IGlzVHJ1ZShvcHRpb25zLl9jb21waWxlZCk7XG4gIHZhciBuZWVkTm9ybWFsaXphdGlvbiA9ICFpc0NvbXBpbGVkO1xuXG4gIHRoaXMuZGF0YSA9IGRhdGE7XG4gIHRoaXMucHJvcHMgPSBwcm9wcztcbiAgdGhpcy5jaGlsZHJlbiA9IGNoaWxkcmVuO1xuICB0aGlzLnBhcmVudCA9IHBhcmVudDtcbiAgdGhpcy5saXN0ZW5lcnMgPSBkYXRhLm9uIHx8IGVtcHR5T2JqZWN0O1xuICB0aGlzLmluamVjdGlvbnMgPSByZXNvbHZlSW5qZWN0KG9wdGlvbnMuaW5qZWN0LCBwYXJlbnQpO1xuICB0aGlzLnNsb3RzID0gZnVuY3Rpb24gKCkge1xuICAgIGlmICghdGhpcyQxLiRzbG90cykge1xuICAgICAgbm9ybWFsaXplU2NvcGVkU2xvdHMoXG4gICAgICAgIGRhdGEuc2NvcGVkU2xvdHMsXG4gICAgICAgIHRoaXMkMS4kc2xvdHMgPSByZXNvbHZlU2xvdHMoY2hpbGRyZW4sIHBhcmVudClcbiAgICAgICk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzJDEuJHNsb3RzXG4gIH07XG5cbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsICdzY29wZWRTbG90cycsICh7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCAoKSB7XG4gICAgICByZXR1cm4gbm9ybWFsaXplU2NvcGVkU2xvdHMoZGF0YS5zY29wZWRTbG90cywgdGhpcy5zbG90cygpKVxuICAgIH1cbiAgfSkpO1xuXG4gIC8vIHN1cHBvcnQgZm9yIGNvbXBpbGVkIGZ1bmN0aW9uYWwgdGVtcGxhdGVcbiAgaWYgKGlzQ29tcGlsZWQpIHtcbiAgICAvLyBleHBvc2luZyAkb3B0aW9ucyBmb3IgcmVuZGVyU3RhdGljKClcbiAgICB0aGlzLiRvcHRpb25zID0gb3B0aW9ucztcbiAgICAvLyBwcmUtcmVzb2x2ZSBzbG90cyBmb3IgcmVuZGVyU2xvdCgpXG4gICAgdGhpcy4kc2xvdHMgPSB0aGlzLnNsb3RzKCk7XG4gICAgdGhpcy4kc2NvcGVkU2xvdHMgPSBub3JtYWxpemVTY29wZWRTbG90cyhkYXRhLnNjb3BlZFNsb3RzLCB0aGlzLiRzbG90cyk7XG4gIH1cblxuICBpZiAob3B0aW9ucy5fc2NvcGVJZCkge1xuICAgIHRoaXMuX2MgPSBmdW5jdGlvbiAoYSwgYiwgYywgZCkge1xuICAgICAgdmFyIHZub2RlID0gY3JlYXRlRWxlbWVudChjb250ZXh0Vm0sIGEsIGIsIGMsIGQsIG5lZWROb3JtYWxpemF0aW9uKTtcbiAgICAgIGlmICh2bm9kZSAmJiAhQXJyYXkuaXNBcnJheSh2bm9kZSkpIHtcbiAgICAgICAgdm5vZGUuZm5TY29wZUlkID0gb3B0aW9ucy5fc2NvcGVJZDtcbiAgICAgICAgdm5vZGUuZm5Db250ZXh0ID0gcGFyZW50O1xuICAgICAgfVxuICAgICAgcmV0dXJuIHZub2RlXG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLl9jID0gZnVuY3Rpb24gKGEsIGIsIGMsIGQpIHsgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoY29udGV4dFZtLCBhLCBiLCBjLCBkLCBuZWVkTm9ybWFsaXphdGlvbik7IH07XG4gIH1cbn1cblxuaW5zdGFsbFJlbmRlckhlbHBlcnMoRnVuY3Rpb25hbFJlbmRlckNvbnRleHQucHJvdG90eXBlKTtcblxuZnVuY3Rpb24gY3JlYXRlRnVuY3Rpb25hbENvbXBvbmVudCAoXG4gIEN0b3IsXG4gIHByb3BzRGF0YSxcbiAgZGF0YSxcbiAgY29udGV4dFZtLFxuICBjaGlsZHJlblxuKSB7XG4gIHZhciBvcHRpb25zID0gQ3Rvci5vcHRpb25zO1xuICB2YXIgcHJvcHMgPSB7fTtcbiAgdmFyIHByb3BPcHRpb25zID0gb3B0aW9ucy5wcm9wcztcbiAgaWYgKGlzRGVmKHByb3BPcHRpb25zKSkge1xuICAgIGZvciAodmFyIGtleSBpbiBwcm9wT3B0aW9ucykge1xuICAgICAgcHJvcHNba2V5XSA9IHZhbGlkYXRlUHJvcChrZXksIHByb3BPcHRpb25zLCBwcm9wc0RhdGEgfHwgZW1wdHlPYmplY3QpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBpZiAoaXNEZWYoZGF0YS5hdHRycykpIHsgbWVyZ2VQcm9wcyhwcm9wcywgZGF0YS5hdHRycyk7IH1cbiAgICBpZiAoaXNEZWYoZGF0YS5wcm9wcykpIHsgbWVyZ2VQcm9wcyhwcm9wcywgZGF0YS5wcm9wcyk7IH1cbiAgfVxuXG4gIHZhciByZW5kZXJDb250ZXh0ID0gbmV3IEZ1bmN0aW9uYWxSZW5kZXJDb250ZXh0KFxuICAgIGRhdGEsXG4gICAgcHJvcHMsXG4gICAgY2hpbGRyZW4sXG4gICAgY29udGV4dFZtLFxuICAgIEN0b3JcbiAgKTtcblxuICB2YXIgdm5vZGUgPSBvcHRpb25zLnJlbmRlci5jYWxsKG51bGwsIHJlbmRlckNvbnRleHQuX2MsIHJlbmRlckNvbnRleHQpO1xuXG4gIGlmICh2bm9kZSBpbnN0YW5jZW9mIFZOb2RlKSB7XG4gICAgcmV0dXJuIGNsb25lQW5kTWFya0Z1bmN0aW9uYWxSZXN1bHQodm5vZGUsIGRhdGEsIHJlbmRlckNvbnRleHQucGFyZW50LCBvcHRpb25zLCByZW5kZXJDb250ZXh0KVxuICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodm5vZGUpKSB7XG4gICAgdmFyIHZub2RlcyA9IG5vcm1hbGl6ZUNoaWxkcmVuKHZub2RlKSB8fCBbXTtcbiAgICB2YXIgcmVzID0gbmV3IEFycmF5KHZub2Rlcy5sZW5ndGgpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdm5vZGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICByZXNbaV0gPSBjbG9uZUFuZE1hcmtGdW5jdGlvbmFsUmVzdWx0KHZub2Rlc1tpXSwgZGF0YSwgcmVuZGVyQ29udGV4dC5wYXJlbnQsIG9wdGlvbnMsIHJlbmRlckNvbnRleHQpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzXG4gIH1cbn1cblxuZnVuY3Rpb24gY2xvbmVBbmRNYXJrRnVuY3Rpb25hbFJlc3VsdCAodm5vZGUsIGRhdGEsIGNvbnRleHRWbSwgb3B0aW9ucywgcmVuZGVyQ29udGV4dCkge1xuICAvLyAjNzgxNyBjbG9uZSBub2RlIGJlZm9yZSBzZXR0aW5nIGZuQ29udGV4dCwgb3RoZXJ3aXNlIGlmIHRoZSBub2RlIGlzIHJldXNlZFxuICAvLyAoZS5nLiBpdCB3YXMgZnJvbSBhIGNhY2hlZCBub3JtYWwgc2xvdCkgdGhlIGZuQ29udGV4dCBjYXVzZXMgbmFtZWQgc2xvdHNcbiAgLy8gdGhhdCBzaG91bGQgbm90IGJlIG1hdGNoZWQgdG8gbWF0Y2guXG4gIHZhciBjbG9uZSA9IGNsb25lVk5vZGUodm5vZGUpO1xuICBjbG9uZS5mbkNvbnRleHQgPSBjb250ZXh0Vm07XG4gIGNsb25lLmZuT3B0aW9ucyA9IG9wdGlvbnM7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgKGNsb25lLmRldnRvb2xzTWV0YSA9IGNsb25lLmRldnRvb2xzTWV0YSB8fCB7fSkucmVuZGVyQ29udGV4dCA9IHJlbmRlckNvbnRleHQ7XG4gIH1cbiAgaWYgKGRhdGEuc2xvdCkge1xuICAgIChjbG9uZS5kYXRhIHx8IChjbG9uZS5kYXRhID0ge30pKS5zbG90ID0gZGF0YS5zbG90O1xuICB9XG4gIHJldHVybiBjbG9uZVxufVxuXG5mdW5jdGlvbiBtZXJnZVByb3BzICh0bywgZnJvbSkge1xuICBmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuICAgIHRvW2NhbWVsaXplKGtleSldID0gZnJvbVtrZXldO1xuICB9XG59XG5cbi8qICAqL1xuXG4vKiAgKi9cblxuLyogICovXG5cbi8qICAqL1xuXG4vLyBpbmxpbmUgaG9va3MgdG8gYmUgaW52b2tlZCBvbiBjb21wb25lbnQgVk5vZGVzIGR1cmluZyBwYXRjaFxudmFyIGNvbXBvbmVudFZOb2RlSG9va3MgPSB7XG4gIGluaXQ6IGZ1bmN0aW9uIGluaXQgKHZub2RlLCBoeWRyYXRpbmcpIHtcbiAgICBpZiAoXG4gICAgICB2bm9kZS5jb21wb25lbnRJbnN0YW5jZSAmJlxuICAgICAgIXZub2RlLmNvbXBvbmVudEluc3RhbmNlLl9pc0Rlc3Ryb3llZCAmJlxuICAgICAgdm5vZGUuZGF0YS5rZWVwQWxpdmVcbiAgICApIHtcbiAgICAgIC8vIGtlcHQtYWxpdmUgY29tcG9uZW50cywgdHJlYXQgYXMgYSBwYXRjaFxuICAgICAgdmFyIG1vdW50ZWROb2RlID0gdm5vZGU7IC8vIHdvcmsgYXJvdW5kIGZsb3dcbiAgICAgIGNvbXBvbmVudFZOb2RlSG9va3MucHJlcGF0Y2gobW91bnRlZE5vZGUsIG1vdW50ZWROb2RlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGNoaWxkID0gdm5vZGUuY29tcG9uZW50SW5zdGFuY2UgPSBjcmVhdGVDb21wb25lbnRJbnN0YW5jZUZvclZub2RlKFxuICAgICAgICB2bm9kZSxcbiAgICAgICAgYWN0aXZlSW5zdGFuY2VcbiAgICAgICk7XG4gICAgICBjaGlsZC4kbW91bnQoaHlkcmF0aW5nID8gdm5vZGUuZWxtIDogdW5kZWZpbmVkLCBoeWRyYXRpbmcpO1xuICAgIH1cbiAgfSxcblxuICBwcmVwYXRjaDogZnVuY3Rpb24gcHJlcGF0Y2ggKG9sZFZub2RlLCB2bm9kZSkge1xuICAgIHZhciBvcHRpb25zID0gdm5vZGUuY29tcG9uZW50T3B0aW9ucztcbiAgICB2YXIgY2hpbGQgPSB2bm9kZS5jb21wb25lbnRJbnN0YW5jZSA9IG9sZFZub2RlLmNvbXBvbmVudEluc3RhbmNlO1xuICAgIHVwZGF0ZUNoaWxkQ29tcG9uZW50KFxuICAgICAgY2hpbGQsXG4gICAgICBvcHRpb25zLnByb3BzRGF0YSwgLy8gdXBkYXRlZCBwcm9wc1xuICAgICAgb3B0aW9ucy5saXN0ZW5lcnMsIC8vIHVwZGF0ZWQgbGlzdGVuZXJzXG4gICAgICB2bm9kZSwgLy8gbmV3IHBhcmVudCB2bm9kZVxuICAgICAgb3B0aW9ucy5jaGlsZHJlbiAvLyBuZXcgY2hpbGRyZW5cbiAgICApO1xuICB9LFxuXG4gIGluc2VydDogZnVuY3Rpb24gaW5zZXJ0ICh2bm9kZSkge1xuICAgIHZhciBjb250ZXh0ID0gdm5vZGUuY29udGV4dDtcbiAgICB2YXIgY29tcG9uZW50SW5zdGFuY2UgPSB2bm9kZS5jb21wb25lbnRJbnN0YW5jZTtcbiAgICBpZiAoIWNvbXBvbmVudEluc3RhbmNlLl9pc01vdW50ZWQpIHtcbiAgICAgIGNvbXBvbmVudEluc3RhbmNlLl9pc01vdW50ZWQgPSB0cnVlO1xuICAgICAgY2FsbEhvb2soY29tcG9uZW50SW5zdGFuY2UsICdtb3VudGVkJyk7XG4gICAgfVxuICAgIGlmICh2bm9kZS5kYXRhLmtlZXBBbGl2ZSkge1xuICAgICAgaWYgKGNvbnRleHQuX2lzTW91bnRlZCkge1xuICAgICAgICAvLyB2dWUtcm91dGVyIzEyMTJcbiAgICAgICAgLy8gRHVyaW5nIHVwZGF0ZXMsIGEga2VwdC1hbGl2ZSBjb21wb25lbnQncyBjaGlsZCBjb21wb25lbnRzIG1heVxuICAgICAgICAvLyBjaGFuZ2UsIHNvIGRpcmVjdGx5IHdhbGtpbmcgdGhlIHRyZWUgaGVyZSBtYXkgY2FsbCBhY3RpdmF0ZWQgaG9va3NcbiAgICAgICAgLy8gb24gaW5jb3JyZWN0IGNoaWxkcmVuLiBJbnN0ZWFkIHdlIHB1c2ggdGhlbSBpbnRvIGEgcXVldWUgd2hpY2ggd2lsbFxuICAgICAgICAvLyBiZSBwcm9jZXNzZWQgYWZ0ZXIgdGhlIHdob2xlIHBhdGNoIHByb2Nlc3MgZW5kZWQuXG4gICAgICAgIHF1ZXVlQWN0aXZhdGVkQ29tcG9uZW50KGNvbXBvbmVudEluc3RhbmNlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGFjdGl2YXRlQ2hpbGRDb21wb25lbnQoY29tcG9uZW50SW5zdGFuY2UsIHRydWUgLyogZGlyZWN0ICovKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG5cbiAgZGVzdHJveTogZnVuY3Rpb24gZGVzdHJveSAodm5vZGUpIHtcbiAgICB2YXIgY29tcG9uZW50SW5zdGFuY2UgPSB2bm9kZS5jb21wb25lbnRJbnN0YW5jZTtcbiAgICBpZiAoIWNvbXBvbmVudEluc3RhbmNlLl9pc0Rlc3Ryb3llZCkge1xuICAgICAgaWYgKCF2bm9kZS5kYXRhLmtlZXBBbGl2ZSkge1xuICAgICAgICBjb21wb25lbnRJbnN0YW5jZS4kZGVzdHJveSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZGVhY3RpdmF0ZUNoaWxkQ29tcG9uZW50KGNvbXBvbmVudEluc3RhbmNlLCB0cnVlIC8qIGRpcmVjdCAqLyk7XG4gICAgICB9XG4gICAgfVxuICB9XG59O1xuXG52YXIgaG9va3NUb01lcmdlID0gT2JqZWN0LmtleXMoY29tcG9uZW50Vk5vZGVIb29rcyk7XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbXBvbmVudCAoXG4gIEN0b3IsXG4gIGRhdGEsXG4gIGNvbnRleHQsXG4gIGNoaWxkcmVuLFxuICB0YWdcbikge1xuICBpZiAoaXNVbmRlZihDdG9yKSkge1xuICAgIHJldHVyblxuICB9XG5cbiAgdmFyIGJhc2VDdG9yID0gY29udGV4dC4kb3B0aW9ucy5fYmFzZTtcblxuICAvLyBwbGFpbiBvcHRpb25zIG9iamVjdDogdHVybiBpdCBpbnRvIGEgY29uc3RydWN0b3JcbiAgaWYgKGlzT2JqZWN0KEN0b3IpKSB7XG4gICAgQ3RvciA9IGJhc2VDdG9yLmV4dGVuZChDdG9yKTtcbiAgfVxuXG4gIC8vIGlmIGF0IHRoaXMgc3RhZ2UgaXQncyBub3QgYSBjb25zdHJ1Y3RvciBvciBhbiBhc3luYyBjb21wb25lbnQgZmFjdG9yeSxcbiAgLy8gcmVqZWN0LlxuICBpZiAodHlwZW9mIEN0b3IgIT09ICdmdW5jdGlvbicpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgd2FybigoXCJJbnZhbGlkIENvbXBvbmVudCBkZWZpbml0aW9uOiBcIiArIChTdHJpbmcoQ3RvcikpKSwgY29udGV4dCk7XG4gICAgfVxuICAgIHJldHVyblxuICB9XG5cbiAgLy8gYXN5bmMgY29tcG9uZW50XG4gIHZhciBhc3luY0ZhY3Rvcnk7XG4gIGlmIChpc1VuZGVmKEN0b3IuY2lkKSkge1xuICAgIGFzeW5jRmFjdG9yeSA9IEN0b3I7XG4gICAgQ3RvciA9IHJlc29sdmVBc3luY0NvbXBvbmVudChhc3luY0ZhY3RvcnksIGJhc2VDdG9yKTtcbiAgICBpZiAoQ3RvciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAvLyByZXR1cm4gYSBwbGFjZWhvbGRlciBub2RlIGZvciBhc3luYyBjb21wb25lbnQsIHdoaWNoIGlzIHJlbmRlcmVkXG4gICAgICAvLyBhcyBhIGNvbW1lbnQgbm9kZSBidXQgcHJlc2VydmVzIGFsbCB0aGUgcmF3IGluZm9ybWF0aW9uIGZvciB0aGUgbm9kZS5cbiAgICAgIC8vIHRoZSBpbmZvcm1hdGlvbiB3aWxsIGJlIHVzZWQgZm9yIGFzeW5jIHNlcnZlci1yZW5kZXJpbmcgYW5kIGh5ZHJhdGlvbi5cbiAgICAgIHJldHVybiBjcmVhdGVBc3luY1BsYWNlaG9sZGVyKFxuICAgICAgICBhc3luY0ZhY3RvcnksXG4gICAgICAgIGRhdGEsXG4gICAgICAgIGNvbnRleHQsXG4gICAgICAgIGNoaWxkcmVuLFxuICAgICAgICB0YWdcbiAgICAgIClcbiAgICB9XG4gIH1cblxuICBkYXRhID0gZGF0YSB8fCB7fTtcblxuICAvLyByZXNvbHZlIGNvbnN0cnVjdG9yIG9wdGlvbnMgaW4gY2FzZSBnbG9iYWwgbWl4aW5zIGFyZSBhcHBsaWVkIGFmdGVyXG4gIC8vIGNvbXBvbmVudCBjb25zdHJ1Y3RvciBjcmVhdGlvblxuICByZXNvbHZlQ29uc3RydWN0b3JPcHRpb25zKEN0b3IpO1xuXG4gIC8vIHRyYW5zZm9ybSBjb21wb25lbnQgdi1tb2RlbCBkYXRhIGludG8gcHJvcHMgJiBldmVudHNcbiAgaWYgKGlzRGVmKGRhdGEubW9kZWwpKSB7XG4gICAgdHJhbnNmb3JtTW9kZWwoQ3Rvci5vcHRpb25zLCBkYXRhKTtcbiAgfVxuXG4gIC8vIGV4dHJhY3QgcHJvcHNcbiAgdmFyIHByb3BzRGF0YSA9IGV4dHJhY3RQcm9wc0Zyb21WTm9kZURhdGEoZGF0YSwgQ3RvciwgdGFnKTtcblxuICAvLyBmdW5jdGlvbmFsIGNvbXBvbmVudFxuICBpZiAoaXNUcnVlKEN0b3Iub3B0aW9ucy5mdW5jdGlvbmFsKSkge1xuICAgIHJldHVybiBjcmVhdGVGdW5jdGlvbmFsQ29tcG9uZW50KEN0b3IsIHByb3BzRGF0YSwgZGF0YSwgY29udGV4dCwgY2hpbGRyZW4pXG4gIH1cblxuICAvLyBleHRyYWN0IGxpc3RlbmVycywgc2luY2UgdGhlc2UgbmVlZHMgdG8gYmUgdHJlYXRlZCBhc1xuICAvLyBjaGlsZCBjb21wb25lbnQgbGlzdGVuZXJzIGluc3RlYWQgb2YgRE9NIGxpc3RlbmVyc1xuICB2YXIgbGlzdGVuZXJzID0gZGF0YS5vbjtcbiAgLy8gcmVwbGFjZSB3aXRoIGxpc3RlbmVycyB3aXRoIC5uYXRpdmUgbW9kaWZpZXJcbiAgLy8gc28gaXQgZ2V0cyBwcm9jZXNzZWQgZHVyaW5nIHBhcmVudCBjb21wb25lbnQgcGF0Y2guXG4gIGRhdGEub24gPSBkYXRhLm5hdGl2ZU9uO1xuXG4gIGlmIChpc1RydWUoQ3Rvci5vcHRpb25zLmFic3RyYWN0KSkge1xuICAgIC8vIGFic3RyYWN0IGNvbXBvbmVudHMgZG8gbm90IGtlZXAgYW55dGhpbmdcbiAgICAvLyBvdGhlciB0aGFuIHByb3BzICYgbGlzdGVuZXJzICYgc2xvdFxuXG4gICAgLy8gd29yayBhcm91bmQgZmxvd1xuICAgIHZhciBzbG90ID0gZGF0YS5zbG90O1xuICAgIGRhdGEgPSB7fTtcbiAgICBpZiAoc2xvdCkge1xuICAgICAgZGF0YS5zbG90ID0gc2xvdDtcbiAgICB9XG4gIH1cblxuICAvLyBpbnN0YWxsIGNvbXBvbmVudCBtYW5hZ2VtZW50IGhvb2tzIG9udG8gdGhlIHBsYWNlaG9sZGVyIG5vZGVcbiAgaW5zdGFsbENvbXBvbmVudEhvb2tzKGRhdGEpO1xuXG4gIC8vIHJldHVybiBhIHBsYWNlaG9sZGVyIHZub2RlXG4gIHZhciBuYW1lID0gQ3Rvci5vcHRpb25zLm5hbWUgfHwgdGFnO1xuICB2YXIgdm5vZGUgPSBuZXcgVk5vZGUoXG4gICAgKFwidnVlLWNvbXBvbmVudC1cIiArIChDdG9yLmNpZCkgKyAobmFtZSA/IChcIi1cIiArIG5hbWUpIDogJycpKSxcbiAgICBkYXRhLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBjb250ZXh0LFxuICAgIHsgQ3RvcjogQ3RvciwgcHJvcHNEYXRhOiBwcm9wc0RhdGEsIGxpc3RlbmVyczogbGlzdGVuZXJzLCB0YWc6IHRhZywgY2hpbGRyZW46IGNoaWxkcmVuIH0sXG4gICAgYXN5bmNGYWN0b3J5XG4gICk7XG5cbiAgcmV0dXJuIHZub2RlXG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbXBvbmVudEluc3RhbmNlRm9yVm5vZGUgKFxuICB2bm9kZSwgLy8gd2Uga25vdyBpdCdzIE1vdW50ZWRDb21wb25lbnRWTm9kZSBidXQgZmxvdyBkb2Vzbid0XG4gIHBhcmVudCAvLyBhY3RpdmVJbnN0YW5jZSBpbiBsaWZlY3ljbGUgc3RhdGVcbikge1xuICB2YXIgb3B0aW9ucyA9IHtcbiAgICBfaXNDb21wb25lbnQ6IHRydWUsXG4gICAgX3BhcmVudFZub2RlOiB2bm9kZSxcbiAgICBwYXJlbnQ6IHBhcmVudFxuICB9O1xuICAvLyBjaGVjayBpbmxpbmUtdGVtcGxhdGUgcmVuZGVyIGZ1bmN0aW9uc1xuICB2YXIgaW5saW5lVGVtcGxhdGUgPSB2bm9kZS5kYXRhLmlubGluZVRlbXBsYXRlO1xuICBpZiAoaXNEZWYoaW5saW5lVGVtcGxhdGUpKSB7XG4gICAgb3B0aW9ucy5yZW5kZXIgPSBpbmxpbmVUZW1wbGF0ZS5yZW5kZXI7XG4gICAgb3B0aW9ucy5zdGF0aWNSZW5kZXJGbnMgPSBpbmxpbmVUZW1wbGF0ZS5zdGF0aWNSZW5kZXJGbnM7XG4gIH1cbiAgcmV0dXJuIG5ldyB2bm9kZS5jb21wb25lbnRPcHRpb25zLkN0b3Iob3B0aW9ucylcbn1cblxuZnVuY3Rpb24gaW5zdGFsbENvbXBvbmVudEhvb2tzIChkYXRhKSB7XG4gIHZhciBob29rcyA9IGRhdGEuaG9vayB8fCAoZGF0YS5ob29rID0ge30pO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGhvb2tzVG9NZXJnZS5sZW5ndGg7IGkrKykge1xuICAgIHZhciBrZXkgPSBob29rc1RvTWVyZ2VbaV07XG4gICAgdmFyIGV4aXN0aW5nID0gaG9va3Nba2V5XTtcbiAgICB2YXIgdG9NZXJnZSA9IGNvbXBvbmVudFZOb2RlSG9va3Nba2V5XTtcbiAgICBpZiAoZXhpc3RpbmcgIT09IHRvTWVyZ2UgJiYgIShleGlzdGluZyAmJiBleGlzdGluZy5fbWVyZ2VkKSkge1xuICAgICAgaG9va3Nba2V5XSA9IGV4aXN0aW5nID8gbWVyZ2VIb29rJDEodG9NZXJnZSwgZXhpc3RpbmcpIDogdG9NZXJnZTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gbWVyZ2VIb29rJDEgKGYxLCBmMikge1xuICB2YXIgbWVyZ2VkID0gZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAvLyBmbG93IGNvbXBsYWlucyBhYm91dCBleHRyYSBhcmdzIHdoaWNoIGlzIHdoeSB3ZSB1c2UgYW55XG4gICAgZjEoYSwgYik7XG4gICAgZjIoYSwgYik7XG4gIH07XG4gIG1lcmdlZC5fbWVyZ2VkID0gdHJ1ZTtcbiAgcmV0dXJuIG1lcmdlZFxufVxuXG4vLyB0cmFuc2Zvcm0gY29tcG9uZW50IHYtbW9kZWwgaW5mbyAodmFsdWUgYW5kIGNhbGxiYWNrKSBpbnRvXG4vLyBwcm9wIGFuZCBldmVudCBoYW5kbGVyIHJlc3BlY3RpdmVseS5cbmZ1bmN0aW9uIHRyYW5zZm9ybU1vZGVsIChvcHRpb25zLCBkYXRhKSB7XG4gIHZhciBwcm9wID0gKG9wdGlvbnMubW9kZWwgJiYgb3B0aW9ucy5tb2RlbC5wcm9wKSB8fCAndmFsdWUnO1xuICB2YXIgZXZlbnQgPSAob3B0aW9ucy5tb2RlbCAmJiBvcHRpb25zLm1vZGVsLmV2ZW50KSB8fCAnaW5wdXQnXG4gIDsoZGF0YS5hdHRycyB8fCAoZGF0YS5hdHRycyA9IHt9KSlbcHJvcF0gPSBkYXRhLm1vZGVsLnZhbHVlO1xuICB2YXIgb24gPSBkYXRhLm9uIHx8IChkYXRhLm9uID0ge30pO1xuICB2YXIgZXhpc3RpbmcgPSBvbltldmVudF07XG4gIHZhciBjYWxsYmFjayA9IGRhdGEubW9kZWwuY2FsbGJhY2s7XG4gIGlmIChpc0RlZihleGlzdGluZykpIHtcbiAgICBpZiAoXG4gICAgICBBcnJheS5pc0FycmF5KGV4aXN0aW5nKVxuICAgICAgICA/IGV4aXN0aW5nLmluZGV4T2YoY2FsbGJhY2spID09PSAtMVxuICAgICAgICA6IGV4aXN0aW5nICE9PSBjYWxsYmFja1xuICAgICkge1xuICAgICAgb25bZXZlbnRdID0gW2NhbGxiYWNrXS5jb25jYXQoZXhpc3RpbmcpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBvbltldmVudF0gPSBjYWxsYmFjaztcbiAgfVxufVxuXG4vKiAgKi9cblxudmFyIFNJTVBMRV9OT1JNQUxJWkUgPSAxO1xudmFyIEFMV0FZU19OT1JNQUxJWkUgPSAyO1xuXG4vLyB3cmFwcGVyIGZ1bmN0aW9uIGZvciBwcm92aWRpbmcgYSBtb3JlIGZsZXhpYmxlIGludGVyZmFjZVxuLy8gd2l0aG91dCBnZXR0aW5nIHllbGxlZCBhdCBieSBmbG93XG5mdW5jdGlvbiBjcmVhdGVFbGVtZW50IChcbiAgY29udGV4dCxcbiAgdGFnLFxuICBkYXRhLFxuICBjaGlsZHJlbixcbiAgbm9ybWFsaXphdGlvblR5cGUsXG4gIGFsd2F5c05vcm1hbGl6ZVxuKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGRhdGEpIHx8IGlzUHJpbWl0aXZlKGRhdGEpKSB7XG4gICAgbm9ybWFsaXphdGlvblR5cGUgPSBjaGlsZHJlbjtcbiAgICBjaGlsZHJlbiA9IGRhdGE7XG4gICAgZGF0YSA9IHVuZGVmaW5lZDtcbiAgfVxuICBpZiAoaXNUcnVlKGFsd2F5c05vcm1hbGl6ZSkpIHtcbiAgICBub3JtYWxpemF0aW9uVHlwZSA9IEFMV0FZU19OT1JNQUxJWkU7XG4gIH1cbiAgcmV0dXJuIF9jcmVhdGVFbGVtZW50KGNvbnRleHQsIHRhZywgZGF0YSwgY2hpbGRyZW4sIG5vcm1hbGl6YXRpb25UeXBlKVxufVxuXG5mdW5jdGlvbiBfY3JlYXRlRWxlbWVudCAoXG4gIGNvbnRleHQsXG4gIHRhZyxcbiAgZGF0YSxcbiAgY2hpbGRyZW4sXG4gIG5vcm1hbGl6YXRpb25UeXBlXG4pIHtcbiAgaWYgKGlzRGVmKGRhdGEpICYmIGlzRGVmKChkYXRhKS5fX29iX18pKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB3YXJuKFxuICAgICAgXCJBdm9pZCB1c2luZyBvYnNlcnZlZCBkYXRhIG9iamVjdCBhcyB2bm9kZSBkYXRhOiBcIiArIChKU09OLnN0cmluZ2lmeShkYXRhKSkgKyBcIlxcblwiICtcbiAgICAgICdBbHdheXMgY3JlYXRlIGZyZXNoIHZub2RlIGRhdGEgb2JqZWN0cyBpbiBlYWNoIHJlbmRlciEnLFxuICAgICAgY29udGV4dFxuICAgICk7XG4gICAgcmV0dXJuIGNyZWF0ZUVtcHR5Vk5vZGUoKVxuICB9XG4gIC8vIG9iamVjdCBzeW50YXggaW4gdi1iaW5kXG4gIGlmIChpc0RlZihkYXRhKSAmJiBpc0RlZihkYXRhLmlzKSkge1xuICAgIHRhZyA9IGRhdGEuaXM7XG4gIH1cbiAgaWYgKCF0YWcpIHtcbiAgICAvLyBpbiBjYXNlIG9mIGNvbXBvbmVudCA6aXMgc2V0IHRvIGZhbHN5IHZhbHVlXG4gICAgcmV0dXJuIGNyZWF0ZUVtcHR5Vk5vZGUoKVxuICB9XG4gIC8vIHdhcm4gYWdhaW5zdCBub24tcHJpbWl0aXZlIGtleVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJlxuICAgIGlzRGVmKGRhdGEpICYmIGlzRGVmKGRhdGEua2V5KSAmJiAhaXNQcmltaXRpdmUoZGF0YS5rZXkpXG4gICkge1xuICAgIHtcbiAgICAgIHdhcm4oXG4gICAgICAgICdBdm9pZCB1c2luZyBub24tcHJpbWl0aXZlIHZhbHVlIGFzIGtleSwgJyArXG4gICAgICAgICd1c2Ugc3RyaW5nL251bWJlciB2YWx1ZSBpbnN0ZWFkLicsXG4gICAgICAgIGNvbnRleHRcbiAgICAgICk7XG4gICAgfVxuICB9XG4gIC8vIHN1cHBvcnQgc2luZ2xlIGZ1bmN0aW9uIGNoaWxkcmVuIGFzIGRlZmF1bHQgc2NvcGVkIHNsb3RcbiAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pICYmXG4gICAgdHlwZW9mIGNoaWxkcmVuWzBdID09PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIGRhdGEgPSBkYXRhIHx8IHt9O1xuICAgIGRhdGEuc2NvcGVkU2xvdHMgPSB7IGRlZmF1bHQ6IGNoaWxkcmVuWzBdIH07XG4gICAgY2hpbGRyZW4ubGVuZ3RoID0gMDtcbiAgfVxuICBpZiAobm9ybWFsaXphdGlvblR5cGUgPT09IEFMV0FZU19OT1JNQUxJWkUpIHtcbiAgICBjaGlsZHJlbiA9IG5vcm1hbGl6ZUNoaWxkcmVuKGNoaWxkcmVuKTtcbiAgfSBlbHNlIGlmIChub3JtYWxpemF0aW9uVHlwZSA9PT0gU0lNUExFX05PUk1BTElaRSkge1xuICAgIGNoaWxkcmVuID0gc2ltcGxlTm9ybWFsaXplQ2hpbGRyZW4oY2hpbGRyZW4pO1xuICB9XG4gIHZhciB2bm9kZSwgbnM7XG4gIGlmICh0eXBlb2YgdGFnID09PSAnc3RyaW5nJykge1xuICAgIHZhciBDdG9yO1xuICAgIG5zID0gKGNvbnRleHQuJHZub2RlICYmIGNvbnRleHQuJHZub2RlLm5zKSB8fCBjb25maWcuZ2V0VGFnTmFtZXNwYWNlKHRhZyk7XG4gICAgaWYgKGNvbmZpZy5pc1Jlc2VydmVkVGFnKHRhZykpIHtcbiAgICAgIC8vIHBsYXRmb3JtIGJ1aWx0LWluIGVsZW1lbnRzXG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBpc0RlZihkYXRhKSAmJiBpc0RlZihkYXRhLm5hdGl2ZU9uKSkge1xuICAgICAgICB3YXJuKFxuICAgICAgICAgIChcIlRoZSAubmF0aXZlIG1vZGlmaWVyIGZvciB2LW9uIGlzIG9ubHkgdmFsaWQgb24gY29tcG9uZW50cyBidXQgaXQgd2FzIHVzZWQgb24gPFwiICsgdGFnICsgXCI+LlwiKSxcbiAgICAgICAgICBjb250ZXh0XG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICB2bm9kZSA9IG5ldyBWTm9kZShcbiAgICAgICAgY29uZmlnLnBhcnNlUGxhdGZvcm1UYWdOYW1lKHRhZyksIGRhdGEsIGNoaWxkcmVuLFxuICAgICAgICB1bmRlZmluZWQsIHVuZGVmaW5lZCwgY29udGV4dFxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKCghZGF0YSB8fCAhZGF0YS5wcmUpICYmIGlzRGVmKEN0b3IgPSByZXNvbHZlQXNzZXQoY29udGV4dC4kb3B0aW9ucywgJ2NvbXBvbmVudHMnLCB0YWcpKSkge1xuICAgICAgLy8gY29tcG9uZW50XG4gICAgICB2bm9kZSA9IGNyZWF0ZUNvbXBvbmVudChDdG9yLCBkYXRhLCBjb250ZXh0LCBjaGlsZHJlbiwgdGFnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gdW5rbm93biBvciB1bmxpc3RlZCBuYW1lc3BhY2VkIGVsZW1lbnRzXG4gICAgICAvLyBjaGVjayBhdCBydW50aW1lIGJlY2F1c2UgaXQgbWF5IGdldCBhc3NpZ25lZCBhIG5hbWVzcGFjZSB3aGVuIGl0c1xuICAgICAgLy8gcGFyZW50IG5vcm1hbGl6ZXMgY2hpbGRyZW5cbiAgICAgIHZub2RlID0gbmV3IFZOb2RlKFxuICAgICAgICB0YWcsIGRhdGEsIGNoaWxkcmVuLFxuICAgICAgICB1bmRlZmluZWQsIHVuZGVmaW5lZCwgY29udGV4dFxuICAgICAgKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gZGlyZWN0IGNvbXBvbmVudCBvcHRpb25zIC8gY29uc3RydWN0b3JcbiAgICB2bm9kZSA9IGNyZWF0ZUNvbXBvbmVudCh0YWcsIGRhdGEsIGNvbnRleHQsIGNoaWxkcmVuKTtcbiAgfVxuICBpZiAoQXJyYXkuaXNBcnJheSh2bm9kZSkpIHtcbiAgICByZXR1cm4gdm5vZGVcbiAgfSBlbHNlIGlmIChpc0RlZih2bm9kZSkpIHtcbiAgICBpZiAoaXNEZWYobnMpKSB7IGFwcGx5TlModm5vZGUsIG5zKTsgfVxuICAgIGlmIChpc0RlZihkYXRhKSkgeyByZWdpc3RlckRlZXBCaW5kaW5ncyhkYXRhKTsgfVxuICAgIHJldHVybiB2bm9kZVxuICB9IGVsc2Uge1xuICAgIHJldHVybiBjcmVhdGVFbXB0eVZOb2RlKClcbiAgfVxufVxuXG5mdW5jdGlvbiBhcHBseU5TICh2bm9kZSwgbnMsIGZvcmNlKSB7XG4gIHZub2RlLm5zID0gbnM7XG4gIGlmICh2bm9kZS50YWcgPT09ICdmb3JlaWduT2JqZWN0Jykge1xuICAgIC8vIHVzZSBkZWZhdWx0IG5hbWVzcGFjZSBpbnNpZGUgZm9yZWlnbk9iamVjdFxuICAgIG5zID0gdW5kZWZpbmVkO1xuICAgIGZvcmNlID0gdHJ1ZTtcbiAgfVxuICBpZiAoaXNEZWYodm5vZGUuY2hpbGRyZW4pKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIGwgPSB2bm9kZS5jaGlsZHJlbi5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgIHZhciBjaGlsZCA9IHZub2RlLmNoaWxkcmVuW2ldO1xuICAgICAgaWYgKGlzRGVmKGNoaWxkLnRhZykgJiYgKFxuICAgICAgICBpc1VuZGVmKGNoaWxkLm5zKSB8fCAoaXNUcnVlKGZvcmNlKSAmJiBjaGlsZC50YWcgIT09ICdzdmcnKSkpIHtcbiAgICAgICAgYXBwbHlOUyhjaGlsZCwgbnMsIGZvcmNlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLy8gcmVmICM1MzE4XG4vLyBuZWNlc3NhcnkgdG8gZW5zdXJlIHBhcmVudCByZS1yZW5kZXIgd2hlbiBkZWVwIGJpbmRpbmdzIGxpa2UgOnN0eWxlIGFuZFxuLy8gOmNsYXNzIGFyZSB1c2VkIG9uIHNsb3Qgbm9kZXNcbmZ1bmN0aW9uIHJlZ2lzdGVyRGVlcEJpbmRpbmdzIChkYXRhKSB7XG4gIGlmIChpc09iamVjdChkYXRhLnN0eWxlKSkge1xuICAgIHRyYXZlcnNlKGRhdGEuc3R5bGUpO1xuICB9XG4gIGlmIChpc09iamVjdChkYXRhLmNsYXNzKSkge1xuICAgIHRyYXZlcnNlKGRhdGEuY2xhc3MpO1xuICB9XG59XG5cbi8qICAqL1xuXG5mdW5jdGlvbiBpbml0UmVuZGVyICh2bSkge1xuICB2bS5fdm5vZGUgPSBudWxsOyAvLyB0aGUgcm9vdCBvZiB0aGUgY2hpbGQgdHJlZVxuICB2bS5fc3RhdGljVHJlZXMgPSBudWxsOyAvLyB2LW9uY2UgY2FjaGVkIHRyZWVzXG4gIHZhciBvcHRpb25zID0gdm0uJG9wdGlvbnM7XG4gIHZhciBwYXJlbnRWbm9kZSA9IHZtLiR2bm9kZSA9IG9wdGlvbnMuX3BhcmVudFZub2RlOyAvLyB0aGUgcGxhY2Vob2xkZXIgbm9kZSBpbiBwYXJlbnQgdHJlZVxuICB2YXIgcmVuZGVyQ29udGV4dCA9IHBhcmVudFZub2RlICYmIHBhcmVudFZub2RlLmNvbnRleHQ7XG4gIHZtLiRzbG90cyA9IHJlc29sdmVTbG90cyhvcHRpb25zLl9yZW5kZXJDaGlsZHJlbiwgcmVuZGVyQ29udGV4dCk7XG4gIHZtLiRzY29wZWRTbG90cyA9IGVtcHR5T2JqZWN0O1xuICAvLyBiaW5kIHRoZSBjcmVhdGVFbGVtZW50IGZuIHRvIHRoaXMgaW5zdGFuY2VcbiAgLy8gc28gdGhhdCB3ZSBnZXQgcHJvcGVyIHJlbmRlciBjb250ZXh0IGluc2lkZSBpdC5cbiAgLy8gYXJncyBvcmRlcjogdGFnLCBkYXRhLCBjaGlsZHJlbiwgbm9ybWFsaXphdGlvblR5cGUsIGFsd2F5c05vcm1hbGl6ZVxuICAvLyBpbnRlcm5hbCB2ZXJzaW9uIGlzIHVzZWQgYnkgcmVuZGVyIGZ1bmN0aW9ucyBjb21waWxlZCBmcm9tIHRlbXBsYXRlc1xuICB2bS5fYyA9IGZ1bmN0aW9uIChhLCBiLCBjLCBkKSB7IHJldHVybiBjcmVhdGVFbGVtZW50KHZtLCBhLCBiLCBjLCBkLCBmYWxzZSk7IH07XG4gIC8vIG5vcm1hbGl6YXRpb24gaXMgYWx3YXlzIGFwcGxpZWQgZm9yIHRoZSBwdWJsaWMgdmVyc2lvbiwgdXNlZCBpblxuICAvLyB1c2VyLXdyaXR0ZW4gcmVuZGVyIGZ1bmN0aW9ucy5cbiAgdm0uJGNyZWF0ZUVsZW1lbnQgPSBmdW5jdGlvbiAoYSwgYiwgYywgZCkgeyByZXR1cm4gY3JlYXRlRWxlbWVudCh2bSwgYSwgYiwgYywgZCwgdHJ1ZSk7IH07XG5cbiAgLy8gJGF0dHJzICYgJGxpc3RlbmVycyBhcmUgZXhwb3NlZCBmb3IgZWFzaWVyIEhPQyBjcmVhdGlvbi5cbiAgLy8gdGhleSBuZWVkIHRvIGJlIHJlYWN0aXZlIHNvIHRoYXQgSE9DcyB1c2luZyB0aGVtIGFyZSBhbHdheXMgdXBkYXRlZFxuICB2YXIgcGFyZW50RGF0YSA9IHBhcmVudFZub2RlICYmIHBhcmVudFZub2RlLmRhdGE7XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBkZWZpbmVSZWFjdGl2ZSQkMSh2bSwgJyRhdHRycycsIHBhcmVudERhdGEgJiYgcGFyZW50RGF0YS5hdHRycyB8fCBlbXB0eU9iamVjdCwgZnVuY3Rpb24gKCkge1xuICAgICAgIWlzVXBkYXRpbmdDaGlsZENvbXBvbmVudCAmJiB3YXJuKFwiJGF0dHJzIGlzIHJlYWRvbmx5LlwiLCB2bSk7XG4gICAgfSwgdHJ1ZSk7XG4gICAgZGVmaW5lUmVhY3RpdmUkJDEodm0sICckbGlzdGVuZXJzJywgb3B0aW9ucy5fcGFyZW50TGlzdGVuZXJzIHx8IGVtcHR5T2JqZWN0LCBmdW5jdGlvbiAoKSB7XG4gICAgICAhaXNVcGRhdGluZ0NoaWxkQ29tcG9uZW50ICYmIHdhcm4oXCIkbGlzdGVuZXJzIGlzIHJlYWRvbmx5LlwiLCB2bSk7XG4gICAgfSwgdHJ1ZSk7XG4gIH0gZWxzZSB7XG4gICAgZGVmaW5lUmVhY3RpdmUkJDEodm0sICckYXR0cnMnLCBwYXJlbnREYXRhICYmIHBhcmVudERhdGEuYXR0cnMgfHwgZW1wdHlPYmplY3QsIG51bGwsIHRydWUpO1xuICAgIGRlZmluZVJlYWN0aXZlJCQxKHZtLCAnJGxpc3RlbmVycycsIG9wdGlvbnMuX3BhcmVudExpc3RlbmVycyB8fCBlbXB0eU9iamVjdCwgbnVsbCwgdHJ1ZSk7XG4gIH1cbn1cblxudmFyIGN1cnJlbnRSZW5kZXJpbmdJbnN0YW5jZSA9IG51bGw7XG5cbmZ1bmN0aW9uIHJlbmRlck1peGluIChWdWUpIHtcbiAgLy8gaW5zdGFsbCBydW50aW1lIGNvbnZlbmllbmNlIGhlbHBlcnNcbiAgaW5zdGFsbFJlbmRlckhlbHBlcnMoVnVlLnByb3RvdHlwZSk7XG5cbiAgVnVlLnByb3RvdHlwZS4kbmV4dFRpY2sgPSBmdW5jdGlvbiAoZm4pIHtcbiAgICByZXR1cm4gbmV4dFRpY2soZm4sIHRoaXMpXG4gIH07XG5cbiAgVnVlLnByb3RvdHlwZS5fcmVuZGVyID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciB2bSA9IHRoaXM7XG4gICAgdmFyIHJlZiA9IHZtLiRvcHRpb25zO1xuICAgIHZhciByZW5kZXIgPSByZWYucmVuZGVyO1xuICAgIHZhciBfcGFyZW50Vm5vZGUgPSByZWYuX3BhcmVudFZub2RlO1xuXG4gICAgaWYgKF9wYXJlbnRWbm9kZSkge1xuICAgICAgdm0uJHNjb3BlZFNsb3RzID0gbm9ybWFsaXplU2NvcGVkU2xvdHMoXG4gICAgICAgIF9wYXJlbnRWbm9kZS5kYXRhLnNjb3BlZFNsb3RzLFxuICAgICAgICB2bS4kc2xvdHMsXG4gICAgICAgIHZtLiRzY29wZWRTbG90c1xuICAgICAgKTtcbiAgICB9XG5cbiAgICAvLyBzZXQgcGFyZW50IHZub2RlLiB0aGlzIGFsbG93cyByZW5kZXIgZnVuY3Rpb25zIHRvIGhhdmUgYWNjZXNzXG4gICAgLy8gdG8gdGhlIGRhdGEgb24gdGhlIHBsYWNlaG9sZGVyIG5vZGUuXG4gICAgdm0uJHZub2RlID0gX3BhcmVudFZub2RlO1xuICAgIC8vIHJlbmRlciBzZWxmXG4gICAgdmFyIHZub2RlO1xuICAgIHRyeSB7XG4gICAgICAvLyBUaGVyZSdzIG5vIG5lZWQgdG8gbWFpbnRhaW4gYSBzdGFjayBiZWNhdXNlIGFsbCByZW5kZXIgZm5zIGFyZSBjYWxsZWRcbiAgICAgIC8vIHNlcGFyYXRlbHkgZnJvbSBvbmUgYW5vdGhlci4gTmVzdGVkIGNvbXBvbmVudCdzIHJlbmRlciBmbnMgYXJlIGNhbGxlZFxuICAgICAgLy8gd2hlbiBwYXJlbnQgY29tcG9uZW50IGlzIHBhdGNoZWQuXG4gICAgICBjdXJyZW50UmVuZGVyaW5nSW5zdGFuY2UgPSB2bTtcbiAgICAgIHZub2RlID0gcmVuZGVyLmNhbGwodm0uX3JlbmRlclByb3h5LCB2bS4kY3JlYXRlRWxlbWVudCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgaGFuZGxlRXJyb3IoZSwgdm0sIFwicmVuZGVyXCIpO1xuICAgICAgLy8gcmV0dXJuIGVycm9yIHJlbmRlciByZXN1bHQsXG4gICAgICAvLyBvciBwcmV2aW91cyB2bm9kZSB0byBwcmV2ZW50IHJlbmRlciBlcnJvciBjYXVzaW5nIGJsYW5rIGNvbXBvbmVudFxuICAgICAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHZtLiRvcHRpb25zLnJlbmRlckVycm9yKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgdm5vZGUgPSB2bS4kb3B0aW9ucy5yZW5kZXJFcnJvci5jYWxsKHZtLl9yZW5kZXJQcm94eSwgdm0uJGNyZWF0ZUVsZW1lbnQsIGUpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgaGFuZGxlRXJyb3IoZSwgdm0sIFwicmVuZGVyRXJyb3JcIik7XG4gICAgICAgICAgdm5vZGUgPSB2bS5fdm5vZGU7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZub2RlID0gdm0uX3Zub2RlO1xuICAgICAgfVxuICAgIH0gZmluYWxseSB7XG4gICAgICBjdXJyZW50UmVuZGVyaW5nSW5zdGFuY2UgPSBudWxsO1xuICAgIH1cbiAgICAvLyBpZiB0aGUgcmV0dXJuZWQgYXJyYXkgY29udGFpbnMgb25seSBhIHNpbmdsZSBub2RlLCBhbGxvdyBpdFxuICAgIGlmIChBcnJheS5pc0FycmF5KHZub2RlKSAmJiB2bm9kZS5sZW5ndGggPT09IDEpIHtcbiAgICAgIHZub2RlID0gdm5vZGVbMF07XG4gICAgfVxuICAgIC8vIHJldHVybiBlbXB0eSB2bm9kZSBpbiBjYXNlIHRoZSByZW5kZXIgZnVuY3Rpb24gZXJyb3JlZCBvdXRcbiAgICBpZiAoISh2bm9kZSBpbnN0YW5jZW9mIFZOb2RlKSkge1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgQXJyYXkuaXNBcnJheSh2bm9kZSkpIHtcbiAgICAgICAgd2FybihcbiAgICAgICAgICAnTXVsdGlwbGUgcm9vdCBub2RlcyByZXR1cm5lZCBmcm9tIHJlbmRlciBmdW5jdGlvbi4gUmVuZGVyIGZ1bmN0aW9uICcgK1xuICAgICAgICAgICdzaG91bGQgcmV0dXJuIGEgc2luZ2xlIHJvb3Qgbm9kZS4nLFxuICAgICAgICAgIHZtXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICB2bm9kZSA9IGNyZWF0ZUVtcHR5Vk5vZGUoKTtcbiAgICB9XG4gICAgLy8gc2V0IHBhcmVudFxuICAgIHZub2RlLnBhcmVudCA9IF9wYXJlbnRWbm9kZTtcbiAgICByZXR1cm4gdm5vZGVcbiAgfTtcbn1cblxuLyogICovXG5cbmZ1bmN0aW9uIGVuc3VyZUN0b3IgKGNvbXAsIGJhc2UpIHtcbiAgaWYgKFxuICAgIGNvbXAuX19lc01vZHVsZSB8fFxuICAgIChoYXNTeW1ib2wgJiYgY29tcFtTeW1ib2wudG9TdHJpbmdUYWddID09PSAnTW9kdWxlJylcbiAgKSB7XG4gICAgY29tcCA9IGNvbXAuZGVmYXVsdDtcbiAgfVxuICByZXR1cm4gaXNPYmplY3QoY29tcClcbiAgICA/IGJhc2UuZXh0ZW5kKGNvbXApXG4gICAgOiBjb21wXG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUFzeW5jUGxhY2Vob2xkZXIgKFxuICBmYWN0b3J5LFxuICBkYXRhLFxuICBjb250ZXh0LFxuICBjaGlsZHJlbixcbiAgdGFnXG4pIHtcbiAgdmFyIG5vZGUgPSBjcmVhdGVFbXB0eVZOb2RlKCk7XG4gIG5vZGUuYXN5bmNGYWN0b3J5ID0gZmFjdG9yeTtcbiAgbm9kZS5hc3luY01ldGEgPSB7IGRhdGE6IGRhdGEsIGNvbnRleHQ6IGNvbnRleHQsIGNoaWxkcmVuOiBjaGlsZHJlbiwgdGFnOiB0YWcgfTtcbiAgcmV0dXJuIG5vZGVcbn1cblxuZnVuY3Rpb24gcmVzb2x2ZUFzeW5jQ29tcG9uZW50IChcbiAgZmFjdG9yeSxcbiAgYmFzZUN0b3Jcbikge1xuICBpZiAoaXNUcnVlKGZhY3RvcnkuZXJyb3IpICYmIGlzRGVmKGZhY3RvcnkuZXJyb3JDb21wKSkge1xuICAgIHJldHVybiBmYWN0b3J5LmVycm9yQ29tcFxuICB9XG5cbiAgaWYgKGlzRGVmKGZhY3RvcnkucmVzb2x2ZWQpKSB7XG4gICAgcmV0dXJuIGZhY3RvcnkucmVzb2x2ZWRcbiAgfVxuXG4gIHZhciBvd25lciA9IGN1cnJlbnRSZW5kZXJpbmdJbnN0YW5jZTtcbiAgaWYgKG93bmVyICYmIGlzRGVmKGZhY3Rvcnkub3duZXJzKSAmJiBmYWN0b3J5Lm93bmVycy5pbmRleE9mKG93bmVyKSA9PT0gLTEpIHtcbiAgICAvLyBhbHJlYWR5IHBlbmRpbmdcbiAgICBmYWN0b3J5Lm93bmVycy5wdXNoKG93bmVyKTtcbiAgfVxuXG4gIGlmIChpc1RydWUoZmFjdG9yeS5sb2FkaW5nKSAmJiBpc0RlZihmYWN0b3J5LmxvYWRpbmdDb21wKSkge1xuICAgIHJldHVybiBmYWN0b3J5LmxvYWRpbmdDb21wXG4gIH1cblxuICBpZiAob3duZXIgJiYgIWlzRGVmKGZhY3Rvcnkub3duZXJzKSkge1xuICAgIHZhciBvd25lcnMgPSBmYWN0b3J5Lm93bmVycyA9IFtvd25lcl07XG4gICAgdmFyIHN5bmMgPSB0cnVlO1xuICAgIHZhciB0aW1lckxvYWRpbmcgPSBudWxsO1xuICAgIHZhciB0aW1lclRpbWVvdXQgPSBudWxsXG5cbiAgICA7KG93bmVyKS4kb24oJ2hvb2s6ZGVzdHJveWVkJywgZnVuY3Rpb24gKCkgeyByZXR1cm4gcmVtb3ZlKG93bmVycywgb3duZXIpOyB9KTtcblxuICAgIHZhciBmb3JjZVJlbmRlciA9IGZ1bmN0aW9uIChyZW5kZXJDb21wbGV0ZWQpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gb3duZXJzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAob3duZXJzW2ldKS4kZm9yY2VVcGRhdGUoKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHJlbmRlckNvbXBsZXRlZCkge1xuICAgICAgICBvd25lcnMubGVuZ3RoID0gMDtcbiAgICAgICAgaWYgKHRpbWVyTG9hZGluZyAhPT0gbnVsbCkge1xuICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lckxvYWRpbmcpO1xuICAgICAgICAgIHRpbWVyTG9hZGluZyA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRpbWVyVGltZW91dCAhPT0gbnVsbCkge1xuICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lclRpbWVvdXQpO1xuICAgICAgICAgIHRpbWVyVGltZW91dCA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgdmFyIHJlc29sdmUgPSBvbmNlKGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgIC8vIGNhY2hlIHJlc29sdmVkXG4gICAgICBmYWN0b3J5LnJlc29sdmVkID0gZW5zdXJlQ3RvcihyZXMsIGJhc2VDdG9yKTtcbiAgICAgIC8vIGludm9rZSBjYWxsYmFja3Mgb25seSBpZiB0aGlzIGlzIG5vdCBhIHN5bmNocm9ub3VzIHJlc29sdmVcbiAgICAgIC8vIChhc3luYyByZXNvbHZlcyBhcmUgc2hpbW1lZCBhcyBzeW5jaHJvbm91cyBkdXJpbmcgU1NSKVxuICAgICAgaWYgKCFzeW5jKSB7XG4gICAgICAgIGZvcmNlUmVuZGVyKHRydWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb3duZXJzLmxlbmd0aCA9IDA7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICB2YXIgcmVqZWN0ID0gb25jZShmdW5jdGlvbiAocmVhc29uKSB7XG4gICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHdhcm4oXG4gICAgICAgIFwiRmFpbGVkIHRvIHJlc29sdmUgYXN5bmMgY29tcG9uZW50OiBcIiArIChTdHJpbmcoZmFjdG9yeSkpICtcbiAgICAgICAgKHJlYXNvbiA/IChcIlxcblJlYXNvbjogXCIgKyByZWFzb24pIDogJycpXG4gICAgICApO1xuICAgICAgaWYgKGlzRGVmKGZhY3RvcnkuZXJyb3JDb21wKSkge1xuICAgICAgICBmYWN0b3J5LmVycm9yID0gdHJ1ZTtcbiAgICAgICAgZm9yY2VSZW5kZXIodHJ1ZSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICB2YXIgcmVzID0gZmFjdG9yeShyZXNvbHZlLCByZWplY3QpO1xuXG4gICAgaWYgKGlzT2JqZWN0KHJlcykpIHtcbiAgICAgIGlmIChpc1Byb21pc2UocmVzKSkge1xuICAgICAgICAvLyAoKSA9PiBQcm9taXNlXG4gICAgICAgIGlmIChpc1VuZGVmKGZhY3RvcnkucmVzb2x2ZWQpKSB7XG4gICAgICAgICAgcmVzLnRoZW4ocmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChpc1Byb21pc2UocmVzLmNvbXBvbmVudCkpIHtcbiAgICAgICAgcmVzLmNvbXBvbmVudC50aGVuKHJlc29sdmUsIHJlamVjdCk7XG5cbiAgICAgICAgaWYgKGlzRGVmKHJlcy5lcnJvcikpIHtcbiAgICAgICAgICBmYWN0b3J5LmVycm9yQ29tcCA9IGVuc3VyZUN0b3IocmVzLmVycm9yLCBiYXNlQ3Rvcik7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaXNEZWYocmVzLmxvYWRpbmcpKSB7XG4gICAgICAgICAgZmFjdG9yeS5sb2FkaW5nQ29tcCA9IGVuc3VyZUN0b3IocmVzLmxvYWRpbmcsIGJhc2VDdG9yKTtcbiAgICAgICAgICBpZiAocmVzLmRlbGF5ID09PSAwKSB7XG4gICAgICAgICAgICBmYWN0b3J5LmxvYWRpbmcgPSB0cnVlO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aW1lckxvYWRpbmcgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgdGltZXJMb2FkaW5nID0gbnVsbDtcbiAgICAgICAgICAgICAgaWYgKGlzVW5kZWYoZmFjdG9yeS5yZXNvbHZlZCkgJiYgaXNVbmRlZihmYWN0b3J5LmVycm9yKSkge1xuICAgICAgICAgICAgICAgIGZhY3RvcnkubG9hZGluZyA9IHRydWU7XG4gICAgICAgICAgICAgICAgZm9yY2VSZW5kZXIoZmFsc2UpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCByZXMuZGVsYXkgfHwgMjAwKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaXNEZWYocmVzLnRpbWVvdXQpKSB7XG4gICAgICAgICAgdGltZXJUaW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0aW1lclRpbWVvdXQgPSBudWxsO1xuICAgICAgICAgICAgaWYgKGlzVW5kZWYoZmFjdG9yeS5yZXNvbHZlZCkpIHtcbiAgICAgICAgICAgICAgcmVqZWN0KFxuICAgICAgICAgICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbidcbiAgICAgICAgICAgICAgICAgID8gKFwidGltZW91dCAoXCIgKyAocmVzLnRpbWVvdXQpICsgXCJtcylcIilcbiAgICAgICAgICAgICAgICAgIDogbnVsbFxuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sIHJlcy50aW1lb3V0KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHN5bmMgPSBmYWxzZTtcbiAgICAvLyByZXR1cm4gaW4gY2FzZSByZXNvbHZlZCBzeW5jaHJvbm91c2x5XG4gICAgcmV0dXJuIGZhY3RvcnkubG9hZGluZ1xuICAgICAgPyBmYWN0b3J5LmxvYWRpbmdDb21wXG4gICAgICA6IGZhY3RvcnkucmVzb2x2ZWRcbiAgfVxufVxuXG4vKiAgKi9cblxuZnVuY3Rpb24gaXNBc3luY1BsYWNlaG9sZGVyIChub2RlKSB7XG4gIHJldHVybiBub2RlLmlzQ29tbWVudCAmJiBub2RlLmFzeW5jRmFjdG9yeVxufVxuXG4vKiAgKi9cblxuZnVuY3Rpb24gZ2V0Rmlyc3RDb21wb25lbnRDaGlsZCAoY2hpbGRyZW4pIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGMgPSBjaGlsZHJlbltpXTtcbiAgICAgIGlmIChpc0RlZihjKSAmJiAoaXNEZWYoYy5jb21wb25lbnRPcHRpb25zKSB8fCBpc0FzeW5jUGxhY2Vob2xkZXIoYykpKSB7XG4gICAgICAgIHJldHVybiBjXG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qICAqL1xuXG4vKiAgKi9cblxuZnVuY3Rpb24gaW5pdEV2ZW50cyAodm0pIHtcbiAgdm0uX2V2ZW50cyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIHZtLl9oYXNIb29rRXZlbnQgPSBmYWxzZTtcbiAgLy8gaW5pdCBwYXJlbnQgYXR0YWNoZWQgZXZlbnRzXG4gIHZhciBsaXN0ZW5lcnMgPSB2bS4kb3B0aW9ucy5fcGFyZW50TGlzdGVuZXJzO1xuICBpZiAobGlzdGVuZXJzKSB7XG4gICAgdXBkYXRlQ29tcG9uZW50TGlzdGVuZXJzKHZtLCBsaXN0ZW5lcnMpO1xuICB9XG59XG5cbnZhciB0YXJnZXQ7XG5cbmZ1bmN0aW9uIGFkZCAoZXZlbnQsIGZuKSB7XG4gIHRhcmdldC4kb24oZXZlbnQsIGZuKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlJDEgKGV2ZW50LCBmbikge1xuICB0YXJnZXQuJG9mZihldmVudCwgZm4pO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVPbmNlSGFuZGxlciAoZXZlbnQsIGZuKSB7XG4gIHZhciBfdGFyZ2V0ID0gdGFyZ2V0O1xuICByZXR1cm4gZnVuY3Rpb24gb25jZUhhbmRsZXIgKCkge1xuICAgIHZhciByZXMgPSBmbi5hcHBseShudWxsLCBhcmd1bWVudHMpO1xuICAgIGlmIChyZXMgIT09IG51bGwpIHtcbiAgICAgIF90YXJnZXQuJG9mZihldmVudCwgb25jZUhhbmRsZXIpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiB1cGRhdGVDb21wb25lbnRMaXN0ZW5lcnMgKFxuICB2bSxcbiAgbGlzdGVuZXJzLFxuICBvbGRMaXN0ZW5lcnNcbikge1xuICB0YXJnZXQgPSB2bTtcbiAgdXBkYXRlTGlzdGVuZXJzKGxpc3RlbmVycywgb2xkTGlzdGVuZXJzIHx8IHt9LCBhZGQsIHJlbW92ZSQxLCBjcmVhdGVPbmNlSGFuZGxlciwgdm0pO1xuICB0YXJnZXQgPSB1bmRlZmluZWQ7XG59XG5cbmZ1bmN0aW9uIGV2ZW50c01peGluIChWdWUpIHtcbiAgdmFyIGhvb2tSRSA9IC9eaG9vazovO1xuICBWdWUucHJvdG90eXBlLiRvbiA9IGZ1bmN0aW9uIChldmVudCwgZm4pIHtcbiAgICB2YXIgdm0gPSB0aGlzO1xuICAgIGlmIChBcnJheS5pc0FycmF5KGV2ZW50KSkge1xuICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBldmVudC5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgdm0uJG9uKGV2ZW50W2ldLCBmbik7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgICh2bS5fZXZlbnRzW2V2ZW50XSB8fCAodm0uX2V2ZW50c1tldmVudF0gPSBbXSkpLnB1c2goZm4pO1xuICAgICAgLy8gb3B0aW1pemUgaG9vazpldmVudCBjb3N0IGJ5IHVzaW5nIGEgYm9vbGVhbiBmbGFnIG1hcmtlZCBhdCByZWdpc3RyYXRpb25cbiAgICAgIC8vIGluc3RlYWQgb2YgYSBoYXNoIGxvb2t1cFxuICAgICAgaWYgKGhvb2tSRS50ZXN0KGV2ZW50KSkge1xuICAgICAgICB2bS5faGFzSG9va0V2ZW50ID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHZtXG4gIH07XG5cbiAgVnVlLnByb3RvdHlwZS4kb25jZSA9IGZ1bmN0aW9uIChldmVudCwgZm4pIHtcbiAgICB2YXIgdm0gPSB0aGlzO1xuICAgIGZ1bmN0aW9uIG9uICgpIHtcbiAgICAgIHZtLiRvZmYoZXZlbnQsIG9uKTtcbiAgICAgIGZuLmFwcGx5KHZtLCBhcmd1bWVudHMpO1xuICAgIH1cbiAgICBvbi5mbiA9IGZuO1xuICAgIHZtLiRvbihldmVudCwgb24pO1xuICAgIHJldHVybiB2bVxuICB9O1xuXG4gIFZ1ZS5wcm90b3R5cGUuJG9mZiA9IGZ1bmN0aW9uIChldmVudCwgZm4pIHtcbiAgICB2YXIgdm0gPSB0aGlzO1xuICAgIC8vIGFsbFxuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgdm0uX2V2ZW50cyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgICByZXR1cm4gdm1cbiAgICB9XG4gICAgLy8gYXJyYXkgb2YgZXZlbnRzXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZXZlbnQpKSB7XG4gICAgICBmb3IgKHZhciBpJDEgPSAwLCBsID0gZXZlbnQubGVuZ3RoOyBpJDEgPCBsOyBpJDErKykge1xuICAgICAgICB2bS4kb2ZmKGV2ZW50W2kkMV0sIGZuKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB2bVxuICAgIH1cbiAgICAvLyBzcGVjaWZpYyBldmVudFxuICAgIHZhciBjYnMgPSB2bS5fZXZlbnRzW2V2ZW50XTtcbiAgICBpZiAoIWNicykge1xuICAgICAgcmV0dXJuIHZtXG4gICAgfVxuICAgIGlmICghZm4pIHtcbiAgICAgIHZtLl9ldmVudHNbZXZlbnRdID0gbnVsbDtcbiAgICAgIHJldHVybiB2bVxuICAgIH1cbiAgICAvLyBzcGVjaWZpYyBoYW5kbGVyXG4gICAgdmFyIGNiO1xuICAgIHZhciBpID0gY2JzLmxlbmd0aDtcbiAgICB3aGlsZSAoaS0tKSB7XG4gICAgICBjYiA9IGNic1tpXTtcbiAgICAgIGlmIChjYiA9PT0gZm4gfHwgY2IuZm4gPT09IGZuKSB7XG4gICAgICAgIGNicy5zcGxpY2UoaSwgMSk7XG4gICAgICAgIGJyZWFrXG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB2bVxuICB9O1xuXG4gIFZ1ZS5wcm90b3R5cGUuJGVtaXQgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICB2YXIgdm0gPSB0aGlzO1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICB2YXIgbG93ZXJDYXNlRXZlbnQgPSBldmVudC50b0xvd2VyQ2FzZSgpO1xuICAgICAgaWYgKGxvd2VyQ2FzZUV2ZW50ICE9PSBldmVudCAmJiB2bS5fZXZlbnRzW2xvd2VyQ2FzZUV2ZW50XSkge1xuICAgICAgICB0aXAoXG4gICAgICAgICAgXCJFdmVudCBcXFwiXCIgKyBsb3dlckNhc2VFdmVudCArIFwiXFxcIiBpcyBlbWl0dGVkIGluIGNvbXBvbmVudCBcIiArXG4gICAgICAgICAgKGZvcm1hdENvbXBvbmVudE5hbWUodm0pKSArIFwiIGJ1dCB0aGUgaGFuZGxlciBpcyByZWdpc3RlcmVkIGZvciBcXFwiXCIgKyBldmVudCArIFwiXFxcIi4gXCIgK1xuICAgICAgICAgIFwiTm90ZSB0aGF0IEhUTUwgYXR0cmlidXRlcyBhcmUgY2FzZS1pbnNlbnNpdGl2ZSBhbmQgeW91IGNhbm5vdCB1c2UgXCIgK1xuICAgICAgICAgIFwidi1vbiB0byBsaXN0ZW4gdG8gY2FtZWxDYXNlIGV2ZW50cyB3aGVuIHVzaW5nIGluLURPTSB0ZW1wbGF0ZXMuIFwiICtcbiAgICAgICAgICBcIllvdSBzaG91bGQgcHJvYmFibHkgdXNlIFxcXCJcIiArIChoeXBoZW5hdGUoZXZlbnQpKSArIFwiXFxcIiBpbnN0ZWFkIG9mIFxcXCJcIiArIGV2ZW50ICsgXCJcXFwiLlwiXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfVxuICAgIHZhciBjYnMgPSB2bS5fZXZlbnRzW2V2ZW50XTtcbiAgICBpZiAoY2JzKSB7XG4gICAgICBjYnMgPSBjYnMubGVuZ3RoID4gMSA/IHRvQXJyYXkoY2JzKSA6IGNicztcbiAgICAgIHZhciBhcmdzID0gdG9BcnJheShhcmd1bWVudHMsIDEpO1xuICAgICAgdmFyIGluZm8gPSBcImV2ZW50IGhhbmRsZXIgZm9yIFxcXCJcIiArIGV2ZW50ICsgXCJcXFwiXCI7XG4gICAgICBmb3IgKHZhciBpID0gMCwgbCA9IGNicy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgaW52b2tlV2l0aEVycm9ySGFuZGxpbmcoY2JzW2ldLCB2bSwgYXJncywgdm0sIGluZm8pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdm1cbiAgfTtcbn1cblxuLyogICovXG5cbnZhciBhY3RpdmVJbnN0YW5jZSA9IG51bGw7XG52YXIgaXNVcGRhdGluZ0NoaWxkQ29tcG9uZW50ID0gZmFsc2U7XG5cbmZ1bmN0aW9uIHNldEFjdGl2ZUluc3RhbmNlKHZtKSB7XG4gIHZhciBwcmV2QWN0aXZlSW5zdGFuY2UgPSBhY3RpdmVJbnN0YW5jZTtcbiAgYWN0aXZlSW5zdGFuY2UgPSB2bTtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICBhY3RpdmVJbnN0YW5jZSA9IHByZXZBY3RpdmVJbnN0YW5jZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpbml0TGlmZWN5Y2xlICh2bSkge1xuICB2YXIgb3B0aW9ucyA9IHZtLiRvcHRpb25zO1xuXG4gIC8vIGxvY2F0ZSBmaXJzdCBub24tYWJzdHJhY3QgcGFyZW50XG4gIHZhciBwYXJlbnQgPSBvcHRpb25zLnBhcmVudDtcbiAgaWYgKHBhcmVudCAmJiAhb3B0aW9ucy5hYnN0cmFjdCkge1xuICAgIHdoaWxlIChwYXJlbnQuJG9wdGlvbnMuYWJzdHJhY3QgJiYgcGFyZW50LiRwYXJlbnQpIHtcbiAgICAgIHBhcmVudCA9IHBhcmVudC4kcGFyZW50O1xuICAgIH1cbiAgICBwYXJlbnQuJGNoaWxkcmVuLnB1c2godm0pO1xuICB9XG5cbiAgdm0uJHBhcmVudCA9IHBhcmVudDtcbiAgdm0uJHJvb3QgPSBwYXJlbnQgPyBwYXJlbnQuJHJvb3QgOiB2bTtcblxuICB2bS4kY2hpbGRyZW4gPSBbXTtcbiAgdm0uJHJlZnMgPSB7fTtcblxuICB2bS5fd2F0Y2hlciA9IG51bGw7XG4gIHZtLl9pbmFjdGl2ZSA9IG51bGw7XG4gIHZtLl9kaXJlY3RJbmFjdGl2ZSA9IGZhbHNlO1xuICB2bS5faXNNb3VudGVkID0gZmFsc2U7XG4gIHZtLl9pc0Rlc3Ryb3llZCA9IGZhbHNlO1xuICB2bS5faXNCZWluZ0Rlc3Ryb3llZCA9IGZhbHNlO1xufVxuXG5mdW5jdGlvbiBsaWZlY3ljbGVNaXhpbiAoVnVlKSB7XG4gIFZ1ZS5wcm90b3R5cGUuX3VwZGF0ZSA9IGZ1bmN0aW9uICh2bm9kZSwgaHlkcmF0aW5nKSB7XG4gICAgdmFyIHZtID0gdGhpcztcbiAgICB2YXIgcHJldkVsID0gdm0uJGVsO1xuICAgIHZhciBwcmV2Vm5vZGUgPSB2bS5fdm5vZGU7XG4gICAgdmFyIHJlc3RvcmVBY3RpdmVJbnN0YW5jZSA9IHNldEFjdGl2ZUluc3RhbmNlKHZtKTtcbiAgICB2bS5fdm5vZGUgPSB2bm9kZTtcbiAgICAvLyBWdWUucHJvdG90eXBlLl9fcGF0Y2hfXyBpcyBpbmplY3RlZCBpbiBlbnRyeSBwb2ludHNcbiAgICAvLyBiYXNlZCBvbiB0aGUgcmVuZGVyaW5nIGJhY2tlbmQgdXNlZC5cbiAgICBpZiAoIXByZXZWbm9kZSkge1xuICAgICAgLy8gaW5pdGlhbCByZW5kZXJcbiAgICAgIHZtLiRlbCA9IHZtLl9fcGF0Y2hfXyh2bS4kZWwsIHZub2RlLCBoeWRyYXRpbmcsIGZhbHNlIC8qIHJlbW92ZU9ubHkgKi8pO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyB1cGRhdGVzXG4gICAgICB2bS4kZWwgPSB2bS5fX3BhdGNoX18ocHJldlZub2RlLCB2bm9kZSk7XG4gICAgfVxuICAgIHJlc3RvcmVBY3RpdmVJbnN0YW5jZSgpO1xuICAgIC8vIHVwZGF0ZSBfX3Z1ZV9fIHJlZmVyZW5jZVxuICAgIGlmIChwcmV2RWwpIHtcbiAgICAgIHByZXZFbC5fX3Z1ZV9fID0gbnVsbDtcbiAgICB9XG4gICAgaWYgKHZtLiRlbCkge1xuICAgICAgdm0uJGVsLl9fdnVlX18gPSB2bTtcbiAgICB9XG4gICAgLy8gaWYgcGFyZW50IGlzIGFuIEhPQywgdXBkYXRlIGl0cyAkZWwgYXMgd2VsbFxuICAgIGlmICh2bS4kdm5vZGUgJiYgdm0uJHBhcmVudCAmJiB2bS4kdm5vZGUgPT09IHZtLiRwYXJlbnQuX3Zub2RlKSB7XG4gICAgICB2bS4kcGFyZW50LiRlbCA9IHZtLiRlbDtcbiAgICB9XG4gICAgLy8gdXBkYXRlZCBob29rIGlzIGNhbGxlZCBieSB0aGUgc2NoZWR1bGVyIHRvIGVuc3VyZSB0aGF0IGNoaWxkcmVuIGFyZVxuICAgIC8vIHVwZGF0ZWQgaW4gYSBwYXJlbnQncyB1cGRhdGVkIGhvb2suXG4gIH07XG5cbiAgVnVlLnByb3RvdHlwZS4kZm9yY2VVcGRhdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHZtID0gdGhpcztcbiAgICBpZiAodm0uX3dhdGNoZXIpIHtcbiAgICAgIHZtLl93YXRjaGVyLnVwZGF0ZSgpO1xuICAgIH1cbiAgfTtcblxuICBWdWUucHJvdG90eXBlLiRkZXN0cm95ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciB2bSA9IHRoaXM7XG4gICAgaWYgKHZtLl9pc0JlaW5nRGVzdHJveWVkKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgY2FsbEhvb2sodm0sICdiZWZvcmVEZXN0cm95Jyk7XG4gICAgdm0uX2lzQmVpbmdEZXN0cm95ZWQgPSB0cnVlO1xuICAgIC8vIHJlbW92ZSBzZWxmIGZyb20gcGFyZW50XG4gICAgdmFyIHBhcmVudCA9IHZtLiRwYXJlbnQ7XG4gICAgaWYgKHBhcmVudCAmJiAhcGFyZW50Ll9pc0JlaW5nRGVzdHJveWVkICYmICF2bS4kb3B0aW9ucy5hYnN0cmFjdCkge1xuICAgICAgcmVtb3ZlKHBhcmVudC4kY2hpbGRyZW4sIHZtKTtcbiAgICB9XG4gICAgLy8gdGVhcmRvd24gd2F0Y2hlcnNcbiAgICBpZiAodm0uX3dhdGNoZXIpIHtcbiAgICAgIHZtLl93YXRjaGVyLnRlYXJkb3duKCk7XG4gICAgfVxuICAgIHZhciBpID0gdm0uX3dhdGNoZXJzLmxlbmd0aDtcbiAgICB3aGlsZSAoaS0tKSB7XG4gICAgICB2bS5fd2F0Y2hlcnNbaV0udGVhcmRvd24oKTtcbiAgICB9XG4gICAgLy8gcmVtb3ZlIHJlZmVyZW5jZSBmcm9tIGRhdGEgb2JcbiAgICAvLyBmcm96ZW4gb2JqZWN0IG1heSBub3QgaGF2ZSBvYnNlcnZlci5cbiAgICBpZiAodm0uX2RhdGEuX19vYl9fKSB7XG4gICAgICB2bS5fZGF0YS5fX29iX18udm1Db3VudC0tO1xuICAgIH1cbiAgICAvLyBjYWxsIHRoZSBsYXN0IGhvb2suLi5cbiAgICB2bS5faXNEZXN0cm95ZWQgPSB0cnVlO1xuICAgIC8vIGludm9rZSBkZXN0cm95IGhvb2tzIG9uIGN1cnJlbnQgcmVuZGVyZWQgdHJlZVxuICAgIHZtLl9fcGF0Y2hfXyh2bS5fdm5vZGUsIG51bGwpO1xuICAgIC8vIGZpcmUgZGVzdHJveWVkIGhvb2tcbiAgICBjYWxsSG9vayh2bSwgJ2Rlc3Ryb3llZCcpO1xuICAgIC8vIHR1cm4gb2ZmIGFsbCBpbnN0YW5jZSBsaXN0ZW5lcnMuXG4gICAgdm0uJG9mZigpO1xuICAgIC8vIHJlbW92ZSBfX3Z1ZV9fIHJlZmVyZW5jZVxuICAgIGlmICh2bS4kZWwpIHtcbiAgICAgIHZtLiRlbC5fX3Z1ZV9fID0gbnVsbDtcbiAgICB9XG4gICAgLy8gcmVsZWFzZSBjaXJjdWxhciByZWZlcmVuY2UgKCM2NzU5KVxuICAgIGlmICh2bS4kdm5vZGUpIHtcbiAgICAgIHZtLiR2bm9kZS5wYXJlbnQgPSBudWxsO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gbW91bnRDb21wb25lbnQgKFxuICB2bSxcbiAgZWwsXG4gIGh5ZHJhdGluZ1xuKSB7XG4gIHZtLiRlbCA9IGVsO1xuICBpZiAoIXZtLiRvcHRpb25zLnJlbmRlcikge1xuICAgIHZtLiRvcHRpb25zLnJlbmRlciA9IGNyZWF0ZUVtcHR5Vk5vZGU7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgICAgaWYgKCh2bS4kb3B0aW9ucy50ZW1wbGF0ZSAmJiB2bS4kb3B0aW9ucy50ZW1wbGF0ZS5jaGFyQXQoMCkgIT09ICcjJykgfHxcbiAgICAgICAgdm0uJG9wdGlvbnMuZWwgfHwgZWwpIHtcbiAgICAgICAgd2FybihcbiAgICAgICAgICAnWW91IGFyZSB1c2luZyB0aGUgcnVudGltZS1vbmx5IGJ1aWxkIG9mIFZ1ZSB3aGVyZSB0aGUgdGVtcGxhdGUgJyArXG4gICAgICAgICAgJ2NvbXBpbGVyIGlzIG5vdCBhdmFpbGFibGUuIEVpdGhlciBwcmUtY29tcGlsZSB0aGUgdGVtcGxhdGVzIGludG8gJyArXG4gICAgICAgICAgJ3JlbmRlciBmdW5jdGlvbnMsIG9yIHVzZSB0aGUgY29tcGlsZXItaW5jbHVkZWQgYnVpbGQuJyxcbiAgICAgICAgICB2bVxuICAgICAgICApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2FybihcbiAgICAgICAgICAnRmFpbGVkIHRvIG1vdW50IGNvbXBvbmVudDogdGVtcGxhdGUgb3IgcmVuZGVyIGZ1bmN0aW9uIG5vdCBkZWZpbmVkLicsXG4gICAgICAgICAgdm1cbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgY2FsbEhvb2sodm0sICdiZWZvcmVNb3VudCcpO1xuXG4gIHZhciB1cGRhdGVDb21wb25lbnQ7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBjb25maWcucGVyZm9ybWFuY2UgJiYgbWFyaykge1xuICAgIHVwZGF0ZUNvbXBvbmVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBuYW1lID0gdm0uX25hbWU7XG4gICAgICB2YXIgaWQgPSB2bS5fdWlkO1xuICAgICAgdmFyIHN0YXJ0VGFnID0gXCJ2dWUtcGVyZi1zdGFydDpcIiArIGlkO1xuICAgICAgdmFyIGVuZFRhZyA9IFwidnVlLXBlcmYtZW5kOlwiICsgaWQ7XG5cbiAgICAgIG1hcmsoc3RhcnRUYWcpO1xuICAgICAgdmFyIHZub2RlID0gdm0uX3JlbmRlcigpO1xuICAgICAgbWFyayhlbmRUYWcpO1xuICAgICAgbWVhc3VyZSgoXCJ2dWUgXCIgKyBuYW1lICsgXCIgcmVuZGVyXCIpLCBzdGFydFRhZywgZW5kVGFnKTtcblxuICAgICAgbWFyayhzdGFydFRhZyk7XG4gICAgICB2bS5fdXBkYXRlKHZub2RlLCBoeWRyYXRpbmcpO1xuICAgICAgbWFyayhlbmRUYWcpO1xuICAgICAgbWVhc3VyZSgoXCJ2dWUgXCIgKyBuYW1lICsgXCIgcGF0Y2hcIiksIHN0YXJ0VGFnLCBlbmRUYWcpO1xuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgdXBkYXRlQ29tcG9uZW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgdm0uX3VwZGF0ZSh2bS5fcmVuZGVyKCksIGh5ZHJhdGluZyk7XG4gICAgfTtcbiAgfVxuXG4gIC8vIHdlIHNldCB0aGlzIHRvIHZtLl93YXRjaGVyIGluc2lkZSB0aGUgd2F0Y2hlcidzIGNvbnN0cnVjdG9yXG4gIC8vIHNpbmNlIHRoZSB3YXRjaGVyJ3MgaW5pdGlhbCBwYXRjaCBtYXkgY2FsbCAkZm9yY2VVcGRhdGUgKGUuZy4gaW5zaWRlIGNoaWxkXG4gIC8vIGNvbXBvbmVudCdzIG1vdW50ZWQgaG9vayksIHdoaWNoIHJlbGllcyBvbiB2bS5fd2F0Y2hlciBiZWluZyBhbHJlYWR5IGRlZmluZWRcbiAgbmV3IFdhdGNoZXIodm0sIHVwZGF0ZUNvbXBvbmVudCwgbm9vcCwge1xuICAgIGJlZm9yZTogZnVuY3Rpb24gYmVmb3JlICgpIHtcbiAgICAgIGlmICh2bS5faXNNb3VudGVkICYmICF2bS5faXNEZXN0cm95ZWQpIHtcbiAgICAgICAgY2FsbEhvb2sodm0sICdiZWZvcmVVcGRhdGUnKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHRydWUgLyogaXNSZW5kZXJXYXRjaGVyICovKTtcbiAgaHlkcmF0aW5nID0gZmFsc2U7XG5cbiAgLy8gbWFudWFsbHkgbW91bnRlZCBpbnN0YW5jZSwgY2FsbCBtb3VudGVkIG9uIHNlbGZcbiAgLy8gbW91bnRlZCBpcyBjYWxsZWQgZm9yIHJlbmRlci1jcmVhdGVkIGNoaWxkIGNvbXBvbmVudHMgaW4gaXRzIGluc2VydGVkIGhvb2tcbiAgaWYgKHZtLiR2bm9kZSA9PSBudWxsKSB7XG4gICAgdm0uX2lzTW91bnRlZCA9IHRydWU7XG4gICAgY2FsbEhvb2sodm0sICdtb3VudGVkJyk7XG4gIH1cbiAgcmV0dXJuIHZtXG59XG5cbmZ1bmN0aW9uIHVwZGF0ZUNoaWxkQ29tcG9uZW50IChcbiAgdm0sXG4gIHByb3BzRGF0YSxcbiAgbGlzdGVuZXJzLFxuICBwYXJlbnRWbm9kZSxcbiAgcmVuZGVyQ2hpbGRyZW5cbikge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlzVXBkYXRpbmdDaGlsZENvbXBvbmVudCA9IHRydWU7XG4gIH1cblxuICAvLyBkZXRlcm1pbmUgd2hldGhlciBjb21wb25lbnQgaGFzIHNsb3QgY2hpbGRyZW5cbiAgLy8gd2UgbmVlZCB0byBkbyB0aGlzIGJlZm9yZSBvdmVyd3JpdGluZyAkb3B0aW9ucy5fcmVuZGVyQ2hpbGRyZW4uXG5cbiAgLy8gY2hlY2sgaWYgdGhlcmUgYXJlIGR5bmFtaWMgc2NvcGVkU2xvdHMgKGhhbmQtd3JpdHRlbiBvciBjb21waWxlZCBidXQgd2l0aFxuICAvLyBkeW5hbWljIHNsb3QgbmFtZXMpLiBTdGF0aWMgc2NvcGVkIHNsb3RzIGNvbXBpbGVkIGZyb20gdGVtcGxhdGUgaGFzIHRoZVxuICAvLyBcIiRzdGFibGVcIiBtYXJrZXIuXG4gIHZhciBuZXdTY29wZWRTbG90cyA9IHBhcmVudFZub2RlLmRhdGEuc2NvcGVkU2xvdHM7XG4gIHZhciBvbGRTY29wZWRTbG90cyA9IHZtLiRzY29wZWRTbG90cztcbiAgdmFyIGhhc0R5bmFtaWNTY29wZWRTbG90ID0gISEoXG4gICAgKG5ld1Njb3BlZFNsb3RzICYmICFuZXdTY29wZWRTbG90cy4kc3RhYmxlKSB8fFxuICAgIChvbGRTY29wZWRTbG90cyAhPT0gZW1wdHlPYmplY3QgJiYgIW9sZFNjb3BlZFNsb3RzLiRzdGFibGUpIHx8XG4gICAgKG5ld1Njb3BlZFNsb3RzICYmIHZtLiRzY29wZWRTbG90cy4ka2V5ICE9PSBuZXdTY29wZWRTbG90cy4ka2V5KVxuICApO1xuXG4gIC8vIEFueSBzdGF0aWMgc2xvdCBjaGlsZHJlbiBmcm9tIHRoZSBwYXJlbnQgbWF5IGhhdmUgY2hhbmdlZCBkdXJpbmcgcGFyZW50J3NcbiAgLy8gdXBkYXRlLiBEeW5hbWljIHNjb3BlZCBzbG90cyBtYXkgYWxzbyBoYXZlIGNoYW5nZWQuIEluIHN1Y2ggY2FzZXMsIGEgZm9yY2VkXG4gIC8vIHVwZGF0ZSBpcyBuZWNlc3NhcnkgdG8gZW5zdXJlIGNvcnJlY3RuZXNzLlxuICB2YXIgbmVlZHNGb3JjZVVwZGF0ZSA9ICEhKFxuICAgIHJlbmRlckNoaWxkcmVuIHx8ICAgICAgICAgICAgICAgLy8gaGFzIG5ldyBzdGF0aWMgc2xvdHNcbiAgICB2bS4kb3B0aW9ucy5fcmVuZGVyQ2hpbGRyZW4gfHwgIC8vIGhhcyBvbGQgc3RhdGljIHNsb3RzXG4gICAgaGFzRHluYW1pY1Njb3BlZFNsb3RcbiAgKTtcblxuICB2bS4kb3B0aW9ucy5fcGFyZW50Vm5vZGUgPSBwYXJlbnRWbm9kZTtcbiAgdm0uJHZub2RlID0gcGFyZW50Vm5vZGU7IC8vIHVwZGF0ZSB2bSdzIHBsYWNlaG9sZGVyIG5vZGUgd2l0aG91dCByZS1yZW5kZXJcblxuICBpZiAodm0uX3Zub2RlKSB7IC8vIHVwZGF0ZSBjaGlsZCB0cmVlJ3MgcGFyZW50XG4gICAgdm0uX3Zub2RlLnBhcmVudCA9IHBhcmVudFZub2RlO1xuICB9XG4gIHZtLiRvcHRpb25zLl9yZW5kZXJDaGlsZHJlbiA9IHJlbmRlckNoaWxkcmVuO1xuXG4gIC8vIHVwZGF0ZSAkYXR0cnMgYW5kICRsaXN0ZW5lcnMgaGFzaFxuICAvLyB0aGVzZSBhcmUgYWxzbyByZWFjdGl2ZSBzbyB0aGV5IG1heSB0cmlnZ2VyIGNoaWxkIHVwZGF0ZSBpZiB0aGUgY2hpbGRcbiAgLy8gdXNlZCB0aGVtIGR1cmluZyByZW5kZXJcbiAgdm0uJGF0dHJzID0gcGFyZW50Vm5vZGUuZGF0YS5hdHRycyB8fCBlbXB0eU9iamVjdDtcbiAgdm0uJGxpc3RlbmVycyA9IGxpc3RlbmVycyB8fCBlbXB0eU9iamVjdDtcblxuICAvLyB1cGRhdGUgcHJvcHNcbiAgaWYgKHByb3BzRGF0YSAmJiB2bS4kb3B0aW9ucy5wcm9wcykge1xuICAgIHRvZ2dsZU9ic2VydmluZyhmYWxzZSk7XG4gICAgdmFyIHByb3BzID0gdm0uX3Byb3BzO1xuICAgIHZhciBwcm9wS2V5cyA9IHZtLiRvcHRpb25zLl9wcm9wS2V5cyB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIga2V5ID0gcHJvcEtleXNbaV07XG4gICAgICB2YXIgcHJvcE9wdGlvbnMgPSB2bS4kb3B0aW9ucy5wcm9wczsgLy8gd3RmIGZsb3c/XG4gICAgICBwcm9wc1trZXldID0gdmFsaWRhdGVQcm9wKGtleSwgcHJvcE9wdGlvbnMsIHByb3BzRGF0YSwgdm0pO1xuICAgIH1cbiAgICB0b2dnbGVPYnNlcnZpbmcodHJ1ZSk7XG4gICAgLy8ga2VlcCBhIGNvcHkgb2YgcmF3IHByb3BzRGF0YVxuICAgIHZtLiRvcHRpb25zLnByb3BzRGF0YSA9IHByb3BzRGF0YTtcbiAgfVxuXG4gIC8vIHVwZGF0ZSBsaXN0ZW5lcnNcbiAgbGlzdGVuZXJzID0gbGlzdGVuZXJzIHx8IGVtcHR5T2JqZWN0O1xuICB2YXIgb2xkTGlzdGVuZXJzID0gdm0uJG9wdGlvbnMuX3BhcmVudExpc3RlbmVycztcbiAgdm0uJG9wdGlvbnMuX3BhcmVudExpc3RlbmVycyA9IGxpc3RlbmVycztcbiAgdXBkYXRlQ29tcG9uZW50TGlzdGVuZXJzKHZtLCBsaXN0ZW5lcnMsIG9sZExpc3RlbmVycyk7XG5cbiAgLy8gcmVzb2x2ZSBzbG90cyArIGZvcmNlIHVwZGF0ZSBpZiBoYXMgY2hpbGRyZW5cbiAgaWYgKG5lZWRzRm9yY2VVcGRhdGUpIHtcbiAgICB2bS4kc2xvdHMgPSByZXNvbHZlU2xvdHMocmVuZGVyQ2hpbGRyZW4sIHBhcmVudFZub2RlLmNvbnRleHQpO1xuICAgIHZtLiRmb3JjZVVwZGF0ZSgpO1xuICB9XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBpc1VwZGF0aW5nQ2hpbGRDb21wb25lbnQgPSBmYWxzZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpc0luSW5hY3RpdmVUcmVlICh2bSkge1xuICB3aGlsZSAodm0gJiYgKHZtID0gdm0uJHBhcmVudCkpIHtcbiAgICBpZiAodm0uX2luYWN0aXZlKSB7IHJldHVybiB0cnVlIH1cbiAgfVxuICByZXR1cm4gZmFsc2Vcbn1cblxuZnVuY3Rpb24gYWN0aXZhdGVDaGlsZENvbXBvbmVudCAodm0sIGRpcmVjdCkge1xuICBpZiAoZGlyZWN0KSB7XG4gICAgdm0uX2RpcmVjdEluYWN0aXZlID0gZmFsc2U7XG4gICAgaWYgKGlzSW5JbmFjdGl2ZVRyZWUodm0pKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG4gIH0gZWxzZSBpZiAodm0uX2RpcmVjdEluYWN0aXZlKSB7XG4gICAgcmV0dXJuXG4gIH1cbiAgaWYgKHZtLl9pbmFjdGl2ZSB8fCB2bS5faW5hY3RpdmUgPT09IG51bGwpIHtcbiAgICB2bS5faW5hY3RpdmUgPSBmYWxzZTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHZtLiRjaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgYWN0aXZhdGVDaGlsZENvbXBvbmVudCh2bS4kY2hpbGRyZW5baV0pO1xuICAgIH1cbiAgICBjYWxsSG9vayh2bSwgJ2FjdGl2YXRlZCcpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGRlYWN0aXZhdGVDaGlsZENvbXBvbmVudCAodm0sIGRpcmVjdCkge1xuICBpZiAoZGlyZWN0KSB7XG4gICAgdm0uX2RpcmVjdEluYWN0aXZlID0gdHJ1ZTtcbiAgICBpZiAoaXNJbkluYWN0aXZlVHJlZSh2bSkpIHtcbiAgICAgIHJldHVyblxuICAgIH1cbiAgfVxuICBpZiAoIXZtLl9pbmFjdGl2ZSkge1xuICAgIHZtLl9pbmFjdGl2ZSA9IHRydWU7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB2bS4kY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICAgIGRlYWN0aXZhdGVDaGlsZENvbXBvbmVudCh2bS4kY2hpbGRyZW5baV0pO1xuICAgIH1cbiAgICBjYWxsSG9vayh2bSwgJ2RlYWN0aXZhdGVkJyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2FsbEhvb2sgKHZtLCBob29rKSB7XG4gIC8vICM3NTczIGRpc2FibGUgZGVwIGNvbGxlY3Rpb24gd2hlbiBpbnZva2luZyBsaWZlY3ljbGUgaG9va3NcbiAgcHVzaFRhcmdldCgpO1xuICB2YXIgaGFuZGxlcnMgPSB2bS4kb3B0aW9uc1tob29rXTtcbiAgdmFyIGluZm8gPSBob29rICsgXCIgaG9va1wiO1xuICBpZiAoaGFuZGxlcnMpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgaiA9IGhhbmRsZXJzLmxlbmd0aDsgaSA8IGo7IGkrKykge1xuICAgICAgaW52b2tlV2l0aEVycm9ySGFuZGxpbmcoaGFuZGxlcnNbaV0sIHZtLCBudWxsLCB2bSwgaW5mbyk7XG4gICAgfVxuICB9XG4gIGlmICh2bS5faGFzSG9va0V2ZW50KSB7XG4gICAgdm0uJGVtaXQoJ2hvb2s6JyArIGhvb2spO1xuICB9XG4gIHBvcFRhcmdldCgpO1xufVxuXG4vKiAgKi9cblxudmFyIE1BWF9VUERBVEVfQ09VTlQgPSAxMDA7XG5cbnZhciBxdWV1ZSA9IFtdO1xudmFyIGFjdGl2YXRlZENoaWxkcmVuID0gW107XG52YXIgaGFzID0ge307XG52YXIgY2lyY3VsYXIgPSB7fTtcbnZhciB3YWl0aW5nID0gZmFsc2U7XG52YXIgZmx1c2hpbmcgPSBmYWxzZTtcbnZhciBpbmRleCA9IDA7XG5cbi8qKlxuICogUmVzZXQgdGhlIHNjaGVkdWxlcidzIHN0YXRlLlxuICovXG5mdW5jdGlvbiByZXNldFNjaGVkdWxlclN0YXRlICgpIHtcbiAgaW5kZXggPSBxdWV1ZS5sZW5ndGggPSBhY3RpdmF0ZWRDaGlsZHJlbi5sZW5ndGggPSAwO1xuICBoYXMgPSB7fTtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBjaXJjdWxhciA9IHt9O1xuICB9XG4gIHdhaXRpbmcgPSBmbHVzaGluZyA9IGZhbHNlO1xufVxuXG4vLyBBc3luYyBlZGdlIGNhc2UgIzY1NjYgcmVxdWlyZXMgc2F2aW5nIHRoZSB0aW1lc3RhbXAgd2hlbiBldmVudCBsaXN0ZW5lcnMgYXJlXG4vLyBhdHRhY2hlZC4gSG93ZXZlciwgY2FsbGluZyBwZXJmb3JtYW5jZS5ub3coKSBoYXMgYSBwZXJmIG92ZXJoZWFkIGVzcGVjaWFsbHlcbi8vIGlmIHRoZSBwYWdlIGhhcyB0aG91c2FuZHMgb2YgZXZlbnQgbGlzdGVuZXJzLiBJbnN0ZWFkLCB3ZSB0YWtlIGEgdGltZXN0YW1wXG4vLyBldmVyeSB0aW1lIHRoZSBzY2hlZHVsZXIgZmx1c2hlcyBhbmQgdXNlIHRoYXQgZm9yIGFsbCBldmVudCBsaXN0ZW5lcnNcbi8vIGF0dGFjaGVkIGR1cmluZyB0aGF0IGZsdXNoLlxudmFyIGN1cnJlbnRGbHVzaFRpbWVzdGFtcCA9IDA7XG5cbi8vIEFzeW5jIGVkZ2UgY2FzZSBmaXggcmVxdWlyZXMgc3RvcmluZyBhbiBldmVudCBsaXN0ZW5lcidzIGF0dGFjaCB0aW1lc3RhbXAuXG52YXIgZ2V0Tm93ID0gRGF0ZS5ub3c7XG5cbi8vIERldGVybWluZSB3aGF0IGV2ZW50IHRpbWVzdGFtcCB0aGUgYnJvd3NlciBpcyB1c2luZy4gQW5ub3lpbmdseSwgdGhlXG4vLyB0aW1lc3RhbXAgY2FuIGVpdGhlciBiZSBoaS1yZXMgKHJlbGF0aXZlIHRvIHBhZ2UgbG9hZCkgb3IgbG93LXJlc1xuLy8gKHJlbGF0aXZlIHRvIFVOSVggZXBvY2gpLCBzbyBpbiBvcmRlciB0byBjb21wYXJlIHRpbWUgd2UgaGF2ZSB0byB1c2UgdGhlXG4vLyBzYW1lIHRpbWVzdGFtcCB0eXBlIHdoZW4gc2F2aW5nIHRoZSBmbHVzaCB0aW1lc3RhbXAuXG4vLyBBbGwgSUUgdmVyc2lvbnMgdXNlIGxvdy1yZXMgZXZlbnQgdGltZXN0YW1wcywgYW5kIGhhdmUgcHJvYmxlbWF0aWMgY2xvY2tcbi8vIGltcGxlbWVudGF0aW9ucyAoIzk2MzIpXG5pZiAoaW5Ccm93c2VyICYmICFpc0lFKSB7XG4gIHZhciBwZXJmb3JtYW5jZSA9IHdpbmRvdy5wZXJmb3JtYW5jZTtcbiAgaWYgKFxuICAgIHBlcmZvcm1hbmNlICYmXG4gICAgdHlwZW9mIHBlcmZvcm1hbmNlLm5vdyA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgIGdldE5vdygpID4gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0V2ZW50JykudGltZVN0YW1wXG4gICkge1xuICAgIC8vIGlmIHRoZSBldmVudCB0aW1lc3RhbXAsIGFsdGhvdWdoIGV2YWx1YXRlZCBBRlRFUiB0aGUgRGF0ZS5ub3coKSwgaXNcbiAgICAvLyBzbWFsbGVyIHRoYW4gaXQsIGl0IG1lYW5zIHRoZSBldmVudCBpcyB1c2luZyBhIGhpLXJlcyB0aW1lc3RhbXAsXG4gICAgLy8gYW5kIHdlIG5lZWQgdG8gdXNlIHRoZSBoaS1yZXMgdmVyc2lvbiBmb3IgZXZlbnQgbGlzdGVuZXIgdGltZXN0YW1wcyBhc1xuICAgIC8vIHdlbGwuXG4gICAgZ2V0Tm93ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gcGVyZm9ybWFuY2Uubm93KCk7IH07XG4gIH1cbn1cblxuLyoqXG4gKiBGbHVzaCBib3RoIHF1ZXVlcyBhbmQgcnVuIHRoZSB3YXRjaGVycy5cbiAqL1xuZnVuY3Rpb24gZmx1c2hTY2hlZHVsZXJRdWV1ZSAoKSB7XG4gIGN1cnJlbnRGbHVzaFRpbWVzdGFtcCA9IGdldE5vdygpO1xuICBmbHVzaGluZyA9IHRydWU7XG4gIHZhciB3YXRjaGVyLCBpZDtcblxuICAvLyBTb3J0IHF1ZXVlIGJlZm9yZSBmbHVzaC5cbiAgLy8gVGhpcyBlbnN1cmVzIHRoYXQ6XG4gIC8vIDEuIENvbXBvbmVudHMgYXJlIHVwZGF0ZWQgZnJvbSBwYXJlbnQgdG8gY2hpbGQuIChiZWNhdXNlIHBhcmVudCBpcyBhbHdheXNcbiAgLy8gICAgY3JlYXRlZCBiZWZvcmUgdGhlIGNoaWxkKVxuICAvLyAyLiBBIGNvbXBvbmVudCdzIHVzZXIgd2F0Y2hlcnMgYXJlIHJ1biBiZWZvcmUgaXRzIHJlbmRlciB3YXRjaGVyIChiZWNhdXNlXG4gIC8vICAgIHVzZXIgd2F0Y2hlcnMgYXJlIGNyZWF0ZWQgYmVmb3JlIHRoZSByZW5kZXIgd2F0Y2hlcilcbiAgLy8gMy4gSWYgYSBjb21wb25lbnQgaXMgZGVzdHJveWVkIGR1cmluZyBhIHBhcmVudCBjb21wb25lbnQncyB3YXRjaGVyIHJ1bixcbiAgLy8gICAgaXRzIHdhdGNoZXJzIGNhbiBiZSBza2lwcGVkLlxuICBxdWV1ZS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7IHJldHVybiBhLmlkIC0gYi5pZDsgfSk7XG5cbiAgLy8gZG8gbm90IGNhY2hlIGxlbmd0aCBiZWNhdXNlIG1vcmUgd2F0Y2hlcnMgbWlnaHQgYmUgcHVzaGVkXG4gIC8vIGFzIHdlIHJ1biBleGlzdGluZyB3YXRjaGVyc1xuICBmb3IgKGluZGV4ID0gMDsgaW5kZXggPCBxdWV1ZS5sZW5ndGg7IGluZGV4KyspIHtcbiAgICB3YXRjaGVyID0gcXVldWVbaW5kZXhdO1xuICAgIGlmICh3YXRjaGVyLmJlZm9yZSkge1xuICAgICAgd2F0Y2hlci5iZWZvcmUoKTtcbiAgICB9XG4gICAgaWQgPSB3YXRjaGVyLmlkO1xuICAgIGhhc1tpZF0gPSBudWxsO1xuICAgIHdhdGNoZXIucnVuKCk7XG4gICAgLy8gaW4gZGV2IGJ1aWxkLCBjaGVjayBhbmQgc3RvcCBjaXJjdWxhciB1cGRhdGVzLlxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGhhc1tpZF0gIT0gbnVsbCkge1xuICAgICAgY2lyY3VsYXJbaWRdID0gKGNpcmN1bGFyW2lkXSB8fCAwKSArIDE7XG4gICAgICBpZiAoY2lyY3VsYXJbaWRdID4gTUFYX1VQREFURV9DT1VOVCkge1xuICAgICAgICB3YXJuKFxuICAgICAgICAgICdZb3UgbWF5IGhhdmUgYW4gaW5maW5pdGUgdXBkYXRlIGxvb3AgJyArIChcbiAgICAgICAgICAgIHdhdGNoZXIudXNlclxuICAgICAgICAgICAgICA/IChcImluIHdhdGNoZXIgd2l0aCBleHByZXNzaW9uIFxcXCJcIiArICh3YXRjaGVyLmV4cHJlc3Npb24pICsgXCJcXFwiXCIpXG4gICAgICAgICAgICAgIDogXCJpbiBhIGNvbXBvbmVudCByZW5kZXIgZnVuY3Rpb24uXCJcbiAgICAgICAgICApLFxuICAgICAgICAgIHdhdGNoZXIudm1cbiAgICAgICAgKTtcbiAgICAgICAgYnJlYWtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBrZWVwIGNvcGllcyBvZiBwb3N0IHF1ZXVlcyBiZWZvcmUgcmVzZXR0aW5nIHN0YXRlXG4gIHZhciBhY3RpdmF0ZWRRdWV1ZSA9IGFjdGl2YXRlZENoaWxkcmVuLnNsaWNlKCk7XG4gIHZhciB1cGRhdGVkUXVldWUgPSBxdWV1ZS5zbGljZSgpO1xuXG4gIHJlc2V0U2NoZWR1bGVyU3RhdGUoKTtcblxuICAvLyBjYWxsIGNvbXBvbmVudCB1cGRhdGVkIGFuZCBhY3RpdmF0ZWQgaG9va3NcbiAgY2FsbEFjdGl2YXRlZEhvb2tzKGFjdGl2YXRlZFF1ZXVlKTtcbiAgY2FsbFVwZGF0ZWRIb29rcyh1cGRhdGVkUXVldWUpO1xuXG4gIC8vIGRldnRvb2wgaG9va1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgaWYgKGRldnRvb2xzICYmIGNvbmZpZy5kZXZ0b29scykge1xuICAgIGRldnRvb2xzLmVtaXQoJ2ZsdXNoJyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2FsbFVwZGF0ZWRIb29rcyAocXVldWUpIHtcbiAgdmFyIGkgPSBxdWV1ZS5sZW5ndGg7XG4gIHdoaWxlIChpLS0pIHtcbiAgICB2YXIgd2F0Y2hlciA9IHF1ZXVlW2ldO1xuICAgIHZhciB2bSA9IHdhdGNoZXIudm07XG4gICAgaWYgKHZtLl93YXRjaGVyID09PSB3YXRjaGVyICYmIHZtLl9pc01vdW50ZWQgJiYgIXZtLl9pc0Rlc3Ryb3llZCkge1xuICAgICAgY2FsbEhvb2sodm0sICd1cGRhdGVkJyk7XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogUXVldWUgYSBrZXB0LWFsaXZlIGNvbXBvbmVudCB0aGF0IHdhcyBhY3RpdmF0ZWQgZHVyaW5nIHBhdGNoLlxuICogVGhlIHF1ZXVlIHdpbGwgYmUgcHJvY2Vzc2VkIGFmdGVyIHRoZSBlbnRpcmUgdHJlZSBoYXMgYmVlbiBwYXRjaGVkLlxuICovXG5mdW5jdGlvbiBxdWV1ZUFjdGl2YXRlZENvbXBvbmVudCAodm0pIHtcbiAgLy8gc2V0dGluZyBfaW5hY3RpdmUgdG8gZmFsc2UgaGVyZSBzbyB0aGF0IGEgcmVuZGVyIGZ1bmN0aW9uIGNhblxuICAvLyByZWx5IG9uIGNoZWNraW5nIHdoZXRoZXIgaXQncyBpbiBhbiBpbmFjdGl2ZSB0cmVlIChlLmcuIHJvdXRlci12aWV3KVxuICB2bS5faW5hY3RpdmUgPSBmYWxzZTtcbiAgYWN0aXZhdGVkQ2hpbGRyZW4ucHVzaCh2bSk7XG59XG5cbmZ1bmN0aW9uIGNhbGxBY3RpdmF0ZWRIb29rcyAocXVldWUpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBxdWV1ZS5sZW5ndGg7IGkrKykge1xuICAgIHF1ZXVlW2ldLl9pbmFjdGl2ZSA9IHRydWU7XG4gICAgYWN0aXZhdGVDaGlsZENvbXBvbmVudChxdWV1ZVtpXSwgdHJ1ZSAvKiB0cnVlICovKTtcbiAgfVxufVxuXG4vKipcbiAqIFB1c2ggYSB3YXRjaGVyIGludG8gdGhlIHdhdGNoZXIgcXVldWUuXG4gKiBKb2JzIHdpdGggZHVwbGljYXRlIElEcyB3aWxsIGJlIHNraXBwZWQgdW5sZXNzIGl0J3NcbiAqIHB1c2hlZCB3aGVuIHRoZSBxdWV1ZSBpcyBiZWluZyBmbHVzaGVkLlxuICovXG5mdW5jdGlvbiBxdWV1ZVdhdGNoZXIgKHdhdGNoZXIpIHtcbiAgdmFyIGlkID0gd2F0Y2hlci5pZDtcbiAgaWYgKGhhc1tpZF0gPT0gbnVsbCkge1xuICAgIGhhc1tpZF0gPSB0cnVlO1xuICAgIGlmICghZmx1c2hpbmcpIHtcbiAgICAgIHF1ZXVlLnB1c2god2F0Y2hlcik7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGlmIGFscmVhZHkgZmx1c2hpbmcsIHNwbGljZSB0aGUgd2F0Y2hlciBiYXNlZCBvbiBpdHMgaWRcbiAgICAgIC8vIGlmIGFscmVhZHkgcGFzdCBpdHMgaWQsIGl0IHdpbGwgYmUgcnVuIG5leHQgaW1tZWRpYXRlbHkuXG4gICAgICB2YXIgaSA9IHF1ZXVlLmxlbmd0aCAtIDE7XG4gICAgICB3aGlsZSAoaSA+IGluZGV4ICYmIHF1ZXVlW2ldLmlkID4gd2F0Y2hlci5pZCkge1xuICAgICAgICBpLS07XG4gICAgICB9XG4gICAgICBxdWV1ZS5zcGxpY2UoaSArIDEsIDAsIHdhdGNoZXIpO1xuICAgIH1cbiAgICAvLyBxdWV1ZSB0aGUgZmx1c2hcbiAgICBpZiAoIXdhaXRpbmcpIHtcbiAgICAgIHdhaXRpbmcgPSB0cnVlO1xuXG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiAhY29uZmlnLmFzeW5jKSB7XG4gICAgICAgIGZsdXNoU2NoZWR1bGVyUXVldWUoKTtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICBuZXh0VGljayhmbHVzaFNjaGVkdWxlclF1ZXVlKTtcbiAgICB9XG4gIH1cbn1cblxuLyogICovXG5cblxuXG52YXIgdWlkJDIgPSAwO1xuXG4vKipcbiAqIEEgd2F0Y2hlciBwYXJzZXMgYW4gZXhwcmVzc2lvbiwgY29sbGVjdHMgZGVwZW5kZW5jaWVzLFxuICogYW5kIGZpcmVzIGNhbGxiYWNrIHdoZW4gdGhlIGV4cHJlc3Npb24gdmFsdWUgY2hhbmdlcy5cbiAqIFRoaXMgaXMgdXNlZCBmb3IgYm90aCB0aGUgJHdhdGNoKCkgYXBpIGFuZCBkaXJlY3RpdmVzLlxuICovXG52YXIgV2F0Y2hlciA9IGZ1bmN0aW9uIFdhdGNoZXIgKFxuICB2bSxcbiAgZXhwT3JGbixcbiAgY2IsXG4gIG9wdGlvbnMsXG4gIGlzUmVuZGVyV2F0Y2hlclxuKSB7XG4gIHRoaXMudm0gPSB2bTtcbiAgaWYgKGlzUmVuZGVyV2F0Y2hlcikge1xuICAgIHZtLl93YXRjaGVyID0gdGhpcztcbiAgfVxuICB2bS5fd2F0Y2hlcnMucHVzaCh0aGlzKTtcbiAgLy8gb3B0aW9uc1xuICBpZiAob3B0aW9ucykge1xuICAgIHRoaXMuZGVlcCA9ICEhb3B0aW9ucy5kZWVwO1xuICAgIHRoaXMudXNlciA9ICEhb3B0aW9ucy51c2VyO1xuICAgIHRoaXMubGF6eSA9ICEhb3B0aW9ucy5sYXp5O1xuICAgIHRoaXMuc3luYyA9ICEhb3B0aW9ucy5zeW5jO1xuICAgIHRoaXMuYmVmb3JlID0gb3B0aW9ucy5iZWZvcmU7XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5kZWVwID0gdGhpcy51c2VyID0gdGhpcy5sYXp5ID0gdGhpcy5zeW5jID0gZmFsc2U7XG4gIH1cbiAgdGhpcy5jYiA9IGNiO1xuICB0aGlzLmlkID0gKyt1aWQkMjsgLy8gdWlkIGZvciBiYXRjaGluZ1xuICB0aGlzLmFjdGl2ZSA9IHRydWU7XG4gIHRoaXMuZGlydHkgPSB0aGlzLmxhenk7IC8vIGZvciBsYXp5IHdhdGNoZXJzXG4gIHRoaXMuZGVwcyA9IFtdO1xuICB0aGlzLm5ld0RlcHMgPSBbXTtcbiAgdGhpcy5kZXBJZHMgPSBuZXcgX1NldCgpO1xuICB0aGlzLm5ld0RlcElkcyA9IG5ldyBfU2V0KCk7XG4gIHRoaXMuZXhwcmVzc2lvbiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbidcbiAgICA/IGV4cE9yRm4udG9TdHJpbmcoKVxuICAgIDogJyc7XG4gIC8vIHBhcnNlIGV4cHJlc3Npb24gZm9yIGdldHRlclxuICBpZiAodHlwZW9mIGV4cE9yRm4gPT09ICdmdW5jdGlvbicpIHtcbiAgICB0aGlzLmdldHRlciA9IGV4cE9yRm47XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5nZXR0ZXIgPSBwYXJzZVBhdGgoZXhwT3JGbik7XG4gICAgaWYgKCF0aGlzLmdldHRlcikge1xuICAgICAgdGhpcy5nZXR0ZXIgPSBub29wO1xuICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB3YXJuKFxuICAgICAgICBcIkZhaWxlZCB3YXRjaGluZyBwYXRoOiBcXFwiXCIgKyBleHBPckZuICsgXCJcXFwiIFwiICtcbiAgICAgICAgJ1dhdGNoZXIgb25seSBhY2NlcHRzIHNpbXBsZSBkb3QtZGVsaW1pdGVkIHBhdGhzLiAnICtcbiAgICAgICAgJ0ZvciBmdWxsIGNvbnRyb2wsIHVzZSBhIGZ1bmN0aW9uIGluc3RlYWQuJyxcbiAgICAgICAgdm1cbiAgICAgICk7XG4gICAgfVxuICB9XG4gIHRoaXMudmFsdWUgPSB0aGlzLmxhenlcbiAgICA/IHVuZGVmaW5lZFxuICAgIDogdGhpcy5nZXQoKTtcbn07XG5cbi8qKlxuICogRXZhbHVhdGUgdGhlIGdldHRlciwgYW5kIHJlLWNvbGxlY3QgZGVwZW5kZW5jaWVzLlxuICovXG5XYXRjaGVyLnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbiBnZXQgKCkge1xuICBwdXNoVGFyZ2V0KHRoaXMpO1xuICB2YXIgdmFsdWU7XG4gIHZhciB2bSA9IHRoaXMudm07XG4gIHRyeSB7XG4gICAgdmFsdWUgPSB0aGlzLmdldHRlci5jYWxsKHZtLCB2bSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAodGhpcy51c2VyKSB7XG4gICAgICBoYW5kbGVFcnJvcihlLCB2bSwgKFwiZ2V0dGVyIGZvciB3YXRjaGVyIFxcXCJcIiArICh0aGlzLmV4cHJlc3Npb24pICsgXCJcXFwiXCIpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgZVxuICAgIH1cbiAgfSBmaW5hbGx5IHtcbiAgICAvLyBcInRvdWNoXCIgZXZlcnkgcHJvcGVydHkgc28gdGhleSBhcmUgYWxsIHRyYWNrZWQgYXNcbiAgICAvLyBkZXBlbmRlbmNpZXMgZm9yIGRlZXAgd2F0Y2hpbmdcbiAgICBpZiAodGhpcy5kZWVwKSB7XG4gICAgICB0cmF2ZXJzZSh2YWx1ZSk7XG4gICAgfVxuICAgIHBvcFRhcmdldCgpO1xuICAgIHRoaXMuY2xlYW51cERlcHMoKTtcbiAgfVxuICByZXR1cm4gdmFsdWVcbn07XG5cbi8qKlxuICogQWRkIGEgZGVwZW5kZW5jeSB0byB0aGlzIGRpcmVjdGl2ZS5cbiAqL1xuV2F0Y2hlci5wcm90b3R5cGUuYWRkRGVwID0gZnVuY3Rpb24gYWRkRGVwIChkZXApIHtcbiAgdmFyIGlkID0gZGVwLmlkO1xuICBpZiAoIXRoaXMubmV3RGVwSWRzLmhhcyhpZCkpIHtcbiAgICB0aGlzLm5ld0RlcElkcy5hZGQoaWQpO1xuICAgIHRoaXMubmV3RGVwcy5wdXNoKGRlcCk7XG4gICAgaWYgKCF0aGlzLmRlcElkcy5oYXMoaWQpKSB7XG4gICAgICBkZXAuYWRkU3ViKHRoaXMpO1xuICAgIH1cbiAgfVxufTtcblxuLyoqXG4gKiBDbGVhbiB1cCBmb3IgZGVwZW5kZW5jeSBjb2xsZWN0aW9uLlxuICovXG5XYXRjaGVyLnByb3RvdHlwZS5jbGVhbnVwRGVwcyA9IGZ1bmN0aW9uIGNsZWFudXBEZXBzICgpIHtcbiAgdmFyIGkgPSB0aGlzLmRlcHMubGVuZ3RoO1xuICB3aGlsZSAoaS0tKSB7XG4gICAgdmFyIGRlcCA9IHRoaXMuZGVwc1tpXTtcbiAgICBpZiAoIXRoaXMubmV3RGVwSWRzLmhhcyhkZXAuaWQpKSB7XG4gICAgICBkZXAucmVtb3ZlU3ViKHRoaXMpO1xuICAgIH1cbiAgfVxuICB2YXIgdG1wID0gdGhpcy5kZXBJZHM7XG4gIHRoaXMuZGVwSWRzID0gdGhpcy5uZXdEZXBJZHM7XG4gIHRoaXMubmV3RGVwSWRzID0gdG1wO1xuICB0aGlzLm5ld0RlcElkcy5jbGVhcigpO1xuICB0bXAgPSB0aGlzLmRlcHM7XG4gIHRoaXMuZGVwcyA9IHRoaXMubmV3RGVwcztcbiAgdGhpcy5uZXdEZXBzID0gdG1wO1xuICB0aGlzLm5ld0RlcHMubGVuZ3RoID0gMDtcbn07XG5cbi8qKlxuICogU3Vic2NyaWJlciBpbnRlcmZhY2UuXG4gKiBXaWxsIGJlIGNhbGxlZCB3aGVuIGEgZGVwZW5kZW5jeSBjaGFuZ2VzLlxuICovXG5XYXRjaGVyLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiB1cGRhdGUgKCkge1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICBpZiAodGhpcy5sYXp5KSB7XG4gICAgdGhpcy5kaXJ0eSA9IHRydWU7XG4gIH0gZWxzZSBpZiAodGhpcy5zeW5jKSB7XG4gICAgdGhpcy5ydW4oKTtcbiAgfSBlbHNlIHtcbiAgICBxdWV1ZVdhdGNoZXIodGhpcyk7XG4gIH1cbn07XG5cbi8qKlxuICogU2NoZWR1bGVyIGpvYiBpbnRlcmZhY2UuXG4gKiBXaWxsIGJlIGNhbGxlZCBieSB0aGUgc2NoZWR1bGVyLlxuICovXG5XYXRjaGVyLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiBydW4gKCkge1xuICBpZiAodGhpcy5hY3RpdmUpIHtcbiAgICB2YXIgdmFsdWUgPSB0aGlzLmdldCgpO1xuICAgIGlmIChcbiAgICAgIHZhbHVlICE9PSB0aGlzLnZhbHVlIHx8XG4gICAgICAvLyBEZWVwIHdhdGNoZXJzIGFuZCB3YXRjaGVycyBvbiBPYmplY3QvQXJyYXlzIHNob3VsZCBmaXJlIGV2ZW5cbiAgICAgIC8vIHdoZW4gdGhlIHZhbHVlIGlzIHRoZSBzYW1lLCBiZWNhdXNlIHRoZSB2YWx1ZSBtYXlcbiAgICAgIC8vIGhhdmUgbXV0YXRlZC5cbiAgICAgIGlzT2JqZWN0KHZhbHVlKSB8fFxuICAgICAgdGhpcy5kZWVwXG4gICAgKSB7XG4gICAgICAvLyBzZXQgbmV3IHZhbHVlXG4gICAgICB2YXIgb2xkVmFsdWUgPSB0aGlzLnZhbHVlO1xuICAgICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICAgICAgaWYgKHRoaXMudXNlcikge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIHRoaXMuY2IuY2FsbCh0aGlzLnZtLCB2YWx1ZSwgb2xkVmFsdWUpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgaGFuZGxlRXJyb3IoZSwgdGhpcy52bSwgKFwiY2FsbGJhY2sgZm9yIHdhdGNoZXIgXFxcIlwiICsgKHRoaXMuZXhwcmVzc2lvbikgKyBcIlxcXCJcIikpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmNiLmNhbGwodGhpcy52bSwgdmFsdWUsIG9sZFZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn07XG5cbi8qKlxuICogRXZhbHVhdGUgdGhlIHZhbHVlIG9mIHRoZSB3YXRjaGVyLlxuICogVGhpcyBvbmx5IGdldHMgY2FsbGVkIGZvciBsYXp5IHdhdGNoZXJzLlxuICovXG5XYXRjaGVyLnByb3RvdHlwZS5ldmFsdWF0ZSA9IGZ1bmN0aW9uIGV2YWx1YXRlICgpIHtcbiAgdGhpcy52YWx1ZSA9IHRoaXMuZ2V0KCk7XG4gIHRoaXMuZGlydHkgPSBmYWxzZTtcbn07XG5cbi8qKlxuICogRGVwZW5kIG9uIGFsbCBkZXBzIGNvbGxlY3RlZCBieSB0aGlzIHdhdGNoZXIuXG4gKi9cbldhdGNoZXIucHJvdG90eXBlLmRlcGVuZCA9IGZ1bmN0aW9uIGRlcGVuZCAoKSB7XG4gIHZhciBpID0gdGhpcy5kZXBzLmxlbmd0aDtcbiAgd2hpbGUgKGktLSkge1xuICAgIHRoaXMuZGVwc1tpXS5kZXBlbmQoKTtcbiAgfVxufTtcblxuLyoqXG4gKiBSZW1vdmUgc2VsZiBmcm9tIGFsbCBkZXBlbmRlbmNpZXMnIHN1YnNjcmliZXIgbGlzdC5cbiAqL1xuV2F0Y2hlci5wcm90b3R5cGUudGVhcmRvd24gPSBmdW5jdGlvbiB0ZWFyZG93biAoKSB7XG4gIGlmICh0aGlzLmFjdGl2ZSkge1xuICAgIC8vIHJlbW92ZSBzZWxmIGZyb20gdm0ncyB3YXRjaGVyIGxpc3RcbiAgICAvLyB0aGlzIGlzIGEgc29tZXdoYXQgZXhwZW5zaXZlIG9wZXJhdGlvbiBzbyB3ZSBza2lwIGl0XG4gICAgLy8gaWYgdGhlIHZtIGlzIGJlaW5nIGRlc3Ryb3llZC5cbiAgICBpZiAoIXRoaXMudm0uX2lzQmVpbmdEZXN0cm95ZWQpIHtcbiAgICAgIHJlbW92ZSh0aGlzLnZtLl93YXRjaGVycywgdGhpcyk7XG4gICAgfVxuICAgIHZhciBpID0gdGhpcy5kZXBzLmxlbmd0aDtcbiAgICB3aGlsZSAoaS0tKSB7XG4gICAgICB0aGlzLmRlcHNbaV0ucmVtb3ZlU3ViKHRoaXMpO1xuICAgIH1cbiAgICB0aGlzLmFjdGl2ZSA9IGZhbHNlO1xuICB9XG59O1xuXG4vKiAgKi9cblxudmFyIHNoYXJlZFByb3BlcnR5RGVmaW5pdGlvbiA9IHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgY29uZmlndXJhYmxlOiB0cnVlLFxuICBnZXQ6IG5vb3AsXG4gIHNldDogbm9vcFxufTtcblxuZnVuY3Rpb24gcHJveHkgKHRhcmdldCwgc291cmNlS2V5LCBrZXkpIHtcbiAgc2hhcmVkUHJvcGVydHlEZWZpbml0aW9uLmdldCA9IGZ1bmN0aW9uIHByb3h5R2V0dGVyICgpIHtcbiAgICByZXR1cm4gdGhpc1tzb3VyY2VLZXldW2tleV1cbiAgfTtcbiAgc2hhcmVkUHJvcGVydHlEZWZpbml0aW9uLnNldCA9IGZ1bmN0aW9uIHByb3h5U2V0dGVyICh2YWwpIHtcbiAgICB0aGlzW3NvdXJjZUtleV1ba2V5XSA9IHZhbDtcbiAgfTtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzaGFyZWRQcm9wZXJ0eURlZmluaXRpb24pO1xufVxuXG5mdW5jdGlvbiBpbml0U3RhdGUgKHZtKSB7XG4gIHZtLl93YXRjaGVycyA9IFtdO1xuICB2YXIgb3B0cyA9IHZtLiRvcHRpb25zO1xuICBpZiAob3B0cy5wcm9wcykgeyBpbml0UHJvcHModm0sIG9wdHMucHJvcHMpOyB9XG4gIGlmIChvcHRzLm1ldGhvZHMpIHsgaW5pdE1ldGhvZHModm0sIG9wdHMubWV0aG9kcyk7IH1cbiAgaWYgKG9wdHMuZGF0YSkge1xuICAgIGluaXREYXRhKHZtKTtcbiAgfSBlbHNlIHtcbiAgICBvYnNlcnZlKHZtLl9kYXRhID0ge30sIHRydWUgLyogYXNSb290RGF0YSAqLyk7XG4gIH1cbiAgaWYgKG9wdHMuY29tcHV0ZWQpIHsgaW5pdENvbXB1dGVkKHZtLCBvcHRzLmNvbXB1dGVkKTsgfVxuICBpZiAob3B0cy53YXRjaCAmJiBvcHRzLndhdGNoICE9PSBuYXRpdmVXYXRjaCkge1xuICAgIGluaXRXYXRjaCh2bSwgb3B0cy53YXRjaCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaW5pdFByb3BzICh2bSwgcHJvcHNPcHRpb25zKSB7XG4gIHZhciBwcm9wc0RhdGEgPSB2bS4kb3B0aW9ucy5wcm9wc0RhdGEgfHwge307XG4gIHZhciBwcm9wcyA9IHZtLl9wcm9wcyA9IHt9O1xuICAvLyBjYWNoZSBwcm9wIGtleXMgc28gdGhhdCBmdXR1cmUgcHJvcHMgdXBkYXRlcyBjYW4gaXRlcmF0ZSB1c2luZyBBcnJheVxuICAvLyBpbnN0ZWFkIG9mIGR5bmFtaWMgb2JqZWN0IGtleSBlbnVtZXJhdGlvbi5cbiAgdmFyIGtleXMgPSB2bS4kb3B0aW9ucy5fcHJvcEtleXMgPSBbXTtcbiAgdmFyIGlzUm9vdCA9ICF2bS4kcGFyZW50O1xuICAvLyByb290IGluc3RhbmNlIHByb3BzIHNob3VsZCBiZSBjb252ZXJ0ZWRcbiAgaWYgKCFpc1Jvb3QpIHtcbiAgICB0b2dnbGVPYnNlcnZpbmcoZmFsc2UpO1xuICB9XG4gIHZhciBsb29wID0gZnVuY3Rpb24gKCBrZXkgKSB7XG4gICAga2V5cy5wdXNoKGtleSk7XG4gICAgdmFyIHZhbHVlID0gdmFsaWRhdGVQcm9wKGtleSwgcHJvcHNPcHRpb25zLCBwcm9wc0RhdGEsIHZtKTtcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICB2YXIgaHlwaGVuYXRlZEtleSA9IGh5cGhlbmF0ZShrZXkpO1xuICAgICAgaWYgKGlzUmVzZXJ2ZWRBdHRyaWJ1dGUoaHlwaGVuYXRlZEtleSkgfHxcbiAgICAgICAgICBjb25maWcuaXNSZXNlcnZlZEF0dHIoaHlwaGVuYXRlZEtleSkpIHtcbiAgICAgICAgd2FybihcbiAgICAgICAgICAoXCJcXFwiXCIgKyBoeXBoZW5hdGVkS2V5ICsgXCJcXFwiIGlzIGEgcmVzZXJ2ZWQgYXR0cmlidXRlIGFuZCBjYW5ub3QgYmUgdXNlZCBhcyBjb21wb25lbnQgcHJvcC5cIiksXG4gICAgICAgICAgdm1cbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIGRlZmluZVJlYWN0aXZlJCQxKHByb3BzLCBrZXksIHZhbHVlLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghaXNSb290ICYmICFpc1VwZGF0aW5nQ2hpbGRDb21wb25lbnQpIHtcbiAgICAgICAgICB3YXJuKFxuICAgICAgICAgICAgXCJBdm9pZCBtdXRhdGluZyBhIHByb3AgZGlyZWN0bHkgc2luY2UgdGhlIHZhbHVlIHdpbGwgYmUgXCIgK1xuICAgICAgICAgICAgXCJvdmVyd3JpdHRlbiB3aGVuZXZlciB0aGUgcGFyZW50IGNvbXBvbmVudCByZS1yZW5kZXJzLiBcIiArXG4gICAgICAgICAgICBcIkluc3RlYWQsIHVzZSBhIGRhdGEgb3IgY29tcHV0ZWQgcHJvcGVydHkgYmFzZWQgb24gdGhlIHByb3AncyBcIiArXG4gICAgICAgICAgICBcInZhbHVlLiBQcm9wIGJlaW5nIG11dGF0ZWQ6IFxcXCJcIiArIGtleSArIFwiXFxcIlwiLFxuICAgICAgICAgICAgdm1cbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgZGVmaW5lUmVhY3RpdmUkJDEocHJvcHMsIGtleSwgdmFsdWUpO1xuICAgIH1cbiAgICAvLyBzdGF0aWMgcHJvcHMgYXJlIGFscmVhZHkgcHJveGllZCBvbiB0aGUgY29tcG9uZW50J3MgcHJvdG90eXBlXG4gICAgLy8gZHVyaW5nIFZ1ZS5leHRlbmQoKS4gV2Ugb25seSBuZWVkIHRvIHByb3h5IHByb3BzIGRlZmluZWQgYXRcbiAgICAvLyBpbnN0YW50aWF0aW9uIGhlcmUuXG4gICAgaWYgKCEoa2V5IGluIHZtKSkge1xuICAgICAgcHJveHkodm0sIFwiX3Byb3BzXCIsIGtleSk7XG4gICAgfVxuICB9O1xuXG4gIGZvciAodmFyIGtleSBpbiBwcm9wc09wdGlvbnMpIGxvb3AoIGtleSApO1xuICB0b2dnbGVPYnNlcnZpbmcodHJ1ZSk7XG59XG5cbmZ1bmN0aW9uIGluaXREYXRhICh2bSkge1xuICB2YXIgZGF0YSA9IHZtLiRvcHRpb25zLmRhdGE7XG4gIGRhdGEgPSB2bS5fZGF0YSA9IHR5cGVvZiBkYXRhID09PSAnZnVuY3Rpb24nXG4gICAgPyBnZXREYXRhKGRhdGEsIHZtKVxuICAgIDogZGF0YSB8fCB7fTtcbiAgaWYgKCFpc1BsYWluT2JqZWN0KGRhdGEpKSB7XG4gICAgZGF0YSA9IHt9O1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgd2FybihcbiAgICAgICdkYXRhIGZ1bmN0aW9ucyBzaG91bGQgcmV0dXJuIGFuIG9iamVjdDpcXG4nICtcbiAgICAgICdodHRwczovL3Z1ZWpzLm9yZy92Mi9ndWlkZS9jb21wb25lbnRzLmh0bWwjZGF0YS1NdXN0LUJlLWEtRnVuY3Rpb24nLFxuICAgICAgdm1cbiAgICApO1xuICB9XG4gIC8vIHByb3h5IGRhdGEgb24gaW5zdGFuY2VcbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhkYXRhKTtcbiAgdmFyIHByb3BzID0gdm0uJG9wdGlvbnMucHJvcHM7XG4gIHZhciBtZXRob2RzID0gdm0uJG9wdGlvbnMubWV0aG9kcztcbiAgdmFyIGkgPSBrZXlzLmxlbmd0aDtcbiAgd2hpbGUgKGktLSkge1xuICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICBpZiAobWV0aG9kcyAmJiBoYXNPd24obWV0aG9kcywga2V5KSkge1xuICAgICAgICB3YXJuKFxuICAgICAgICAgIChcIk1ldGhvZCBcXFwiXCIgKyBrZXkgKyBcIlxcXCIgaGFzIGFscmVhZHkgYmVlbiBkZWZpbmVkIGFzIGEgZGF0YSBwcm9wZXJ0eS5cIiksXG4gICAgICAgICAgdm1cbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKHByb3BzICYmIGhhc093bihwcm9wcywga2V5KSkge1xuICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB3YXJuKFxuICAgICAgICBcIlRoZSBkYXRhIHByb3BlcnR5IFxcXCJcIiArIGtleSArIFwiXFxcIiBpcyBhbHJlYWR5IGRlY2xhcmVkIGFzIGEgcHJvcC4gXCIgK1xuICAgICAgICBcIlVzZSBwcm9wIGRlZmF1bHQgdmFsdWUgaW5zdGVhZC5cIixcbiAgICAgICAgdm1cbiAgICAgICk7XG4gICAgfSBlbHNlIGlmICghaXNSZXNlcnZlZChrZXkpKSB7XG4gICAgICBwcm94eSh2bSwgXCJfZGF0YVwiLCBrZXkpO1xuICAgIH1cbiAgfVxuICAvLyBvYnNlcnZlIGRhdGFcbiAgb2JzZXJ2ZShkYXRhLCB0cnVlIC8qIGFzUm9vdERhdGEgKi8pO1xufVxuXG5mdW5jdGlvbiBnZXREYXRhIChkYXRhLCB2bSkge1xuICAvLyAjNzU3MyBkaXNhYmxlIGRlcCBjb2xsZWN0aW9uIHdoZW4gaW52b2tpbmcgZGF0YSBnZXR0ZXJzXG4gIHB1c2hUYXJnZXQoKTtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZGF0YS5jYWxsKHZtLCB2bSlcbiAgfSBjYXRjaCAoZSkge1xuICAgIGhhbmRsZUVycm9yKGUsIHZtLCBcImRhdGEoKVwiKTtcbiAgICByZXR1cm4ge31cbiAgfSBmaW5hbGx5IHtcbiAgICBwb3BUYXJnZXQoKTtcbiAgfVxufVxuXG52YXIgY29tcHV0ZWRXYXRjaGVyT3B0aW9ucyA9IHsgbGF6eTogdHJ1ZSB9O1xuXG5mdW5jdGlvbiBpbml0Q29tcHV0ZWQgKHZtLCBjb21wdXRlZCkge1xuICAvLyAkZmxvdy1kaXNhYmxlLWxpbmVcbiAgdmFyIHdhdGNoZXJzID0gdm0uX2NvbXB1dGVkV2F0Y2hlcnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAvLyBjb21wdXRlZCBwcm9wZXJ0aWVzIGFyZSBqdXN0IGdldHRlcnMgZHVyaW5nIFNTUlxuICB2YXIgaXNTU1IgPSBpc1NlcnZlclJlbmRlcmluZygpO1xuXG4gIGZvciAodmFyIGtleSBpbiBjb21wdXRlZCkge1xuICAgIHZhciB1c2VyRGVmID0gY29tcHV0ZWRba2V5XTtcbiAgICB2YXIgZ2V0dGVyID0gdHlwZW9mIHVzZXJEZWYgPT09ICdmdW5jdGlvbicgPyB1c2VyRGVmIDogdXNlckRlZi5nZXQ7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgZ2V0dGVyID09IG51bGwpIHtcbiAgICAgIHdhcm4oXG4gICAgICAgIChcIkdldHRlciBpcyBtaXNzaW5nIGZvciBjb21wdXRlZCBwcm9wZXJ0eSBcXFwiXCIgKyBrZXkgKyBcIlxcXCIuXCIpLFxuICAgICAgICB2bVxuICAgICAgKTtcbiAgICB9XG5cbiAgICBpZiAoIWlzU1NSKSB7XG4gICAgICAvLyBjcmVhdGUgaW50ZXJuYWwgd2F0Y2hlciBmb3IgdGhlIGNvbXB1dGVkIHByb3BlcnR5LlxuICAgICAgd2F0Y2hlcnNba2V5XSA9IG5ldyBXYXRjaGVyKFxuICAgICAgICB2bSxcbiAgICAgICAgZ2V0dGVyIHx8IG5vb3AsXG4gICAgICAgIG5vb3AsXG4gICAgICAgIGNvbXB1dGVkV2F0Y2hlck9wdGlvbnNcbiAgICAgICk7XG4gICAgfVxuXG4gICAgLy8gY29tcG9uZW50LWRlZmluZWQgY29tcHV0ZWQgcHJvcGVydGllcyBhcmUgYWxyZWFkeSBkZWZpbmVkIG9uIHRoZVxuICAgIC8vIGNvbXBvbmVudCBwcm90b3R5cGUuIFdlIG9ubHkgbmVlZCB0byBkZWZpbmUgY29tcHV0ZWQgcHJvcGVydGllcyBkZWZpbmVkXG4gICAgLy8gYXQgaW5zdGFudGlhdGlvbiBoZXJlLlxuICAgIGlmICghKGtleSBpbiB2bSkpIHtcbiAgICAgIGRlZmluZUNvbXB1dGVkKHZtLCBrZXksIHVzZXJEZWYpO1xuICAgIH0gZWxzZSBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaWYgKGtleSBpbiB2bS4kZGF0YSkge1xuICAgICAgICB3YXJuKChcIlRoZSBjb21wdXRlZCBwcm9wZXJ0eSBcXFwiXCIgKyBrZXkgKyBcIlxcXCIgaXMgYWxyZWFkeSBkZWZpbmVkIGluIGRhdGEuXCIpLCB2bSk7XG4gICAgICB9IGVsc2UgaWYgKHZtLiRvcHRpb25zLnByb3BzICYmIGtleSBpbiB2bS4kb3B0aW9ucy5wcm9wcykge1xuICAgICAgICB3YXJuKChcIlRoZSBjb21wdXRlZCBwcm9wZXJ0eSBcXFwiXCIgKyBrZXkgKyBcIlxcXCIgaXMgYWxyZWFkeSBkZWZpbmVkIGFzIGEgcHJvcC5cIiksIHZtKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gZGVmaW5lQ29tcHV0ZWQgKFxuICB0YXJnZXQsXG4gIGtleSxcbiAgdXNlckRlZlxuKSB7XG4gIHZhciBzaG91bGRDYWNoZSA9ICFpc1NlcnZlclJlbmRlcmluZygpO1xuICBpZiAodHlwZW9mIHVzZXJEZWYgPT09ICdmdW5jdGlvbicpIHtcbiAgICBzaGFyZWRQcm9wZXJ0eURlZmluaXRpb24uZ2V0ID0gc2hvdWxkQ2FjaGVcbiAgICAgID8gY3JlYXRlQ29tcHV0ZWRHZXR0ZXIoa2V5KVxuICAgICAgOiBjcmVhdGVHZXR0ZXJJbnZva2VyKHVzZXJEZWYpO1xuICAgIHNoYXJlZFByb3BlcnR5RGVmaW5pdGlvbi5zZXQgPSBub29wO1xuICB9IGVsc2Uge1xuICAgIHNoYXJlZFByb3BlcnR5RGVmaW5pdGlvbi5nZXQgPSB1c2VyRGVmLmdldFxuICAgICAgPyBzaG91bGRDYWNoZSAmJiB1c2VyRGVmLmNhY2hlICE9PSBmYWxzZVxuICAgICAgICA/IGNyZWF0ZUNvbXB1dGVkR2V0dGVyKGtleSlcbiAgICAgICAgOiBjcmVhdGVHZXR0ZXJJbnZva2VyKHVzZXJEZWYuZ2V0KVxuICAgICAgOiBub29wO1xuICAgIHNoYXJlZFByb3BlcnR5RGVmaW5pdGlvbi5zZXQgPSB1c2VyRGVmLnNldCB8fCBub29wO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmXG4gICAgICBzaGFyZWRQcm9wZXJ0eURlZmluaXRpb24uc2V0ID09PSBub29wKSB7XG4gICAgc2hhcmVkUHJvcGVydHlEZWZpbml0aW9uLnNldCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHdhcm4oXG4gICAgICAgIChcIkNvbXB1dGVkIHByb3BlcnR5IFxcXCJcIiArIGtleSArIFwiXFxcIiB3YXMgYXNzaWduZWQgdG8gYnV0IGl0IGhhcyBubyBzZXR0ZXIuXCIpLFxuICAgICAgICB0aGlzXG4gICAgICApO1xuICAgIH07XG4gIH1cbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzaGFyZWRQcm9wZXJ0eURlZmluaXRpb24pO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVDb21wdXRlZEdldHRlciAoa2V5KSB7XG4gIHJldHVybiBmdW5jdGlvbiBjb21wdXRlZEdldHRlciAoKSB7XG4gICAgdmFyIHdhdGNoZXIgPSB0aGlzLl9jb21wdXRlZFdhdGNoZXJzICYmIHRoaXMuX2NvbXB1dGVkV2F0Y2hlcnNba2V5XTtcbiAgICBpZiAod2F0Y2hlcikge1xuICAgICAgaWYgKHdhdGNoZXIuZGlydHkpIHtcbiAgICAgICAgd2F0Y2hlci5ldmFsdWF0ZSgpO1xuICAgICAgfVxuICAgICAgaWYgKERlcC50YXJnZXQpIHtcbiAgICAgICAgd2F0Y2hlci5kZXBlbmQoKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB3YXRjaGVyLnZhbHVlXG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUdldHRlckludm9rZXIoZm4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGNvbXB1dGVkR2V0dGVyICgpIHtcbiAgICByZXR1cm4gZm4uY2FsbCh0aGlzLCB0aGlzKVxuICB9XG59XG5cbmZ1bmN0aW9uIGluaXRNZXRob2RzICh2bSwgbWV0aG9kcykge1xuICB2YXIgcHJvcHMgPSB2bS4kb3B0aW9ucy5wcm9wcztcbiAgZm9yICh2YXIga2V5IGluIG1ldGhvZHMpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaWYgKHR5cGVvZiBtZXRob2RzW2tleV0gIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgd2FybihcbiAgICAgICAgICBcIk1ldGhvZCBcXFwiXCIgKyBrZXkgKyBcIlxcXCIgaGFzIHR5cGUgXFxcIlwiICsgKHR5cGVvZiBtZXRob2RzW2tleV0pICsgXCJcXFwiIGluIHRoZSBjb21wb25lbnQgZGVmaW5pdGlvbi4gXCIgK1xuICAgICAgICAgIFwiRGlkIHlvdSByZWZlcmVuY2UgdGhlIGZ1bmN0aW9uIGNvcnJlY3RseT9cIixcbiAgICAgICAgICB2bVxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgaWYgKHByb3BzICYmIGhhc093bihwcm9wcywga2V5KSkge1xuICAgICAgICB3YXJuKFxuICAgICAgICAgIChcIk1ldGhvZCBcXFwiXCIgKyBrZXkgKyBcIlxcXCIgaGFzIGFscmVhZHkgYmVlbiBkZWZpbmVkIGFzIGEgcHJvcC5cIiksXG4gICAgICAgICAgdm1cbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIGlmICgoa2V5IGluIHZtKSAmJiBpc1Jlc2VydmVkKGtleSkpIHtcbiAgICAgICAgd2FybihcbiAgICAgICAgICBcIk1ldGhvZCBcXFwiXCIgKyBrZXkgKyBcIlxcXCIgY29uZmxpY3RzIHdpdGggYW4gZXhpc3RpbmcgVnVlIGluc3RhbmNlIG1ldGhvZC4gXCIgK1xuICAgICAgICAgIFwiQXZvaWQgZGVmaW5pbmcgY29tcG9uZW50IG1ldGhvZHMgdGhhdCBzdGFydCB3aXRoIF8gb3IgJC5cIlxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cbiAgICB2bVtrZXldID0gdHlwZW9mIG1ldGhvZHNba2V5XSAhPT0gJ2Z1bmN0aW9uJyA/IG5vb3AgOiBiaW5kKG1ldGhvZHNba2V5XSwgdm0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIGluaXRXYXRjaCAodm0sIHdhdGNoKSB7XG4gIGZvciAodmFyIGtleSBpbiB3YXRjaCkge1xuICAgIHZhciBoYW5kbGVyID0gd2F0Y2hba2V5XTtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShoYW5kbGVyKSkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBoYW5kbGVyLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNyZWF0ZVdhdGNoZXIodm0sIGtleSwgaGFuZGxlcltpXSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGNyZWF0ZVdhdGNoZXIodm0sIGtleSwgaGFuZGxlcik7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVdhdGNoZXIgKFxuICB2bSxcbiAgZXhwT3JGbixcbiAgaGFuZGxlcixcbiAgb3B0aW9uc1xuKSB7XG4gIGlmIChpc1BsYWluT2JqZWN0KGhhbmRsZXIpKSB7XG4gICAgb3B0aW9ucyA9IGhhbmRsZXI7XG4gICAgaGFuZGxlciA9IGhhbmRsZXIuaGFuZGxlcjtcbiAgfVxuICBpZiAodHlwZW9mIGhhbmRsZXIgPT09ICdzdHJpbmcnKSB7XG4gICAgaGFuZGxlciA9IHZtW2hhbmRsZXJdO1xuICB9XG4gIHJldHVybiB2bS4kd2F0Y2goZXhwT3JGbiwgaGFuZGxlciwgb3B0aW9ucylcbn1cblxuZnVuY3Rpb24gc3RhdGVNaXhpbiAoVnVlKSB7XG4gIC8vIGZsb3cgc29tZWhvdyBoYXMgcHJvYmxlbXMgd2l0aCBkaXJlY3RseSBkZWNsYXJlZCBkZWZpbml0aW9uIG9iamVjdFxuICAvLyB3aGVuIHVzaW5nIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSwgc28gd2UgaGF2ZSB0byBwcm9jZWR1cmFsbHkgYnVpbGQgdXBcbiAgLy8gdGhlIG9iamVjdCBoZXJlLlxuICB2YXIgZGF0YURlZiA9IHt9O1xuICBkYXRhRGVmLmdldCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMuX2RhdGEgfTtcbiAgdmFyIHByb3BzRGVmID0ge307XG4gIHByb3BzRGVmLmdldCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMuX3Byb3BzIH07XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgZGF0YURlZi5zZXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB3YXJuKFxuICAgICAgICAnQXZvaWQgcmVwbGFjaW5nIGluc3RhbmNlIHJvb3QgJGRhdGEuICcgK1xuICAgICAgICAnVXNlIG5lc3RlZCBkYXRhIHByb3BlcnRpZXMgaW5zdGVhZC4nLFxuICAgICAgICB0aGlzXG4gICAgICApO1xuICAgIH07XG4gICAgcHJvcHNEZWYuc2V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgd2FybihcIiRwcm9wcyBpcyByZWFkb25seS5cIiwgdGhpcyk7XG4gICAgfTtcbiAgfVxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoVnVlLnByb3RvdHlwZSwgJyRkYXRhJywgZGF0YURlZik7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShWdWUucHJvdG90eXBlLCAnJHByb3BzJywgcHJvcHNEZWYpO1xuXG4gIFZ1ZS5wcm90b3R5cGUuJHNldCA9IHNldDtcbiAgVnVlLnByb3RvdHlwZS4kZGVsZXRlID0gZGVsO1xuXG4gIFZ1ZS5wcm90b3R5cGUuJHdhdGNoID0gZnVuY3Rpb24gKFxuICAgIGV4cE9yRm4sXG4gICAgY2IsXG4gICAgb3B0aW9uc1xuICApIHtcbiAgICB2YXIgdm0gPSB0aGlzO1xuICAgIGlmIChpc1BsYWluT2JqZWN0KGNiKSkge1xuICAgICAgcmV0dXJuIGNyZWF0ZVdhdGNoZXIodm0sIGV4cE9yRm4sIGNiLCBvcHRpb25zKVxuICAgIH1cbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICBvcHRpb25zLnVzZXIgPSB0cnVlO1xuICAgIHZhciB3YXRjaGVyID0gbmV3IFdhdGNoZXIodm0sIGV4cE9yRm4sIGNiLCBvcHRpb25zKTtcbiAgICBpZiAob3B0aW9ucy5pbW1lZGlhdGUpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNiLmNhbGwodm0sIHdhdGNoZXIudmFsdWUpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgaGFuZGxlRXJyb3IoZXJyb3IsIHZtLCAoXCJjYWxsYmFjayBmb3IgaW1tZWRpYXRlIHdhdGNoZXIgXFxcIlwiICsgKHdhdGNoZXIuZXhwcmVzc2lvbikgKyBcIlxcXCJcIikpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZnVuY3Rpb24gdW53YXRjaEZuICgpIHtcbiAgICAgIHdhdGNoZXIudGVhcmRvd24oKTtcbiAgICB9XG4gIH07XG59XG5cbi8qICAqL1xuXG52YXIgdWlkJDMgPSAwO1xuXG5mdW5jdGlvbiBpbml0TWl4aW4gKFZ1ZSkge1xuICBWdWUucHJvdG90eXBlLl9pbml0ID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICB2YXIgdm0gPSB0aGlzO1xuICAgIC8vIGEgdWlkXG4gICAgdm0uX3VpZCA9IHVpZCQzKys7XG5cbiAgICB2YXIgc3RhcnRUYWcsIGVuZFRhZztcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBjb25maWcucGVyZm9ybWFuY2UgJiYgbWFyaykge1xuICAgICAgc3RhcnRUYWcgPSBcInZ1ZS1wZXJmLXN0YXJ0OlwiICsgKHZtLl91aWQpO1xuICAgICAgZW5kVGFnID0gXCJ2dWUtcGVyZi1lbmQ6XCIgKyAodm0uX3VpZCk7XG4gICAgICBtYXJrKHN0YXJ0VGFnKTtcbiAgICB9XG5cbiAgICAvLyBhIGZsYWcgdG8gYXZvaWQgdGhpcyBiZWluZyBvYnNlcnZlZFxuICAgIHZtLl9pc1Z1ZSA9IHRydWU7XG4gICAgLy8gbWVyZ2Ugb3B0aW9uc1xuICAgIGlmIChvcHRpb25zICYmIG9wdGlvbnMuX2lzQ29tcG9uZW50KSB7XG4gICAgICAvLyBvcHRpbWl6ZSBpbnRlcm5hbCBjb21wb25lbnQgaW5zdGFudGlhdGlvblxuICAgICAgLy8gc2luY2UgZHluYW1pYyBvcHRpb25zIG1lcmdpbmcgaXMgcHJldHR5IHNsb3csIGFuZCBub25lIG9mIHRoZVxuICAgICAgLy8gaW50ZXJuYWwgY29tcG9uZW50IG9wdGlvbnMgbmVlZHMgc3BlY2lhbCB0cmVhdG1lbnQuXG4gICAgICBpbml0SW50ZXJuYWxDb21wb25lbnQodm0sIG9wdGlvbnMpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2bS4kb3B0aW9ucyA9IG1lcmdlT3B0aW9ucyhcbiAgICAgICAgcmVzb2x2ZUNvbnN0cnVjdG9yT3B0aW9ucyh2bS5jb25zdHJ1Y3RvciksXG4gICAgICAgIG9wdGlvbnMgfHwge30sXG4gICAgICAgIHZtXG4gICAgICApO1xuICAgIH1cbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICBpbml0UHJveHkodm0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB2bS5fcmVuZGVyUHJveHkgPSB2bTtcbiAgICB9XG4gICAgLy8gZXhwb3NlIHJlYWwgc2VsZlxuICAgIHZtLl9zZWxmID0gdm07XG4gICAgaW5pdExpZmVjeWNsZSh2bSk7XG4gICAgaW5pdEV2ZW50cyh2bSk7XG4gICAgaW5pdFJlbmRlcih2bSk7XG4gICAgY2FsbEhvb2sodm0sICdiZWZvcmVDcmVhdGUnKTtcbiAgICBpbml0SW5qZWN0aW9ucyh2bSk7IC8vIHJlc29sdmUgaW5qZWN0aW9ucyBiZWZvcmUgZGF0YS9wcm9wc1xuICAgIGluaXRTdGF0ZSh2bSk7XG4gICAgaW5pdFByb3ZpZGUodm0pOyAvLyByZXNvbHZlIHByb3ZpZGUgYWZ0ZXIgZGF0YS9wcm9wc1xuICAgIGNhbGxIb29rKHZtLCAnY3JlYXRlZCcpO1xuXG4gICAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgY29uZmlnLnBlcmZvcm1hbmNlICYmIG1hcmspIHtcbiAgICAgIHZtLl9uYW1lID0gZm9ybWF0Q29tcG9uZW50TmFtZSh2bSwgZmFsc2UpO1xuICAgICAgbWFyayhlbmRUYWcpO1xuICAgICAgbWVhc3VyZSgoXCJ2dWUgXCIgKyAodm0uX25hbWUpICsgXCIgaW5pdFwiKSwgc3RhcnRUYWcsIGVuZFRhZyk7XG4gICAgfVxuXG4gICAgaWYgKHZtLiRvcHRpb25zLmVsKSB7XG4gICAgICB2bS4kbW91bnQodm0uJG9wdGlvbnMuZWwpO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gaW5pdEludGVybmFsQ29tcG9uZW50ICh2bSwgb3B0aW9ucykge1xuICB2YXIgb3B0cyA9IHZtLiRvcHRpb25zID0gT2JqZWN0LmNyZWF0ZSh2bS5jb25zdHJ1Y3Rvci5vcHRpb25zKTtcbiAgLy8gZG9pbmcgdGhpcyBiZWNhdXNlIGl0J3MgZmFzdGVyIHRoYW4gZHluYW1pYyBlbnVtZXJhdGlvbi5cbiAgdmFyIHBhcmVudFZub2RlID0gb3B0aW9ucy5fcGFyZW50Vm5vZGU7XG4gIG9wdHMucGFyZW50ID0gb3B0aW9ucy5wYXJlbnQ7XG4gIG9wdHMuX3BhcmVudFZub2RlID0gcGFyZW50Vm5vZGU7XG5cbiAgdmFyIHZub2RlQ29tcG9uZW50T3B0aW9ucyA9IHBhcmVudFZub2RlLmNvbXBvbmVudE9wdGlvbnM7XG4gIG9wdHMucHJvcHNEYXRhID0gdm5vZGVDb21wb25lbnRPcHRpb25zLnByb3BzRGF0YTtcbiAgb3B0cy5fcGFyZW50TGlzdGVuZXJzID0gdm5vZGVDb21wb25lbnRPcHRpb25zLmxpc3RlbmVycztcbiAgb3B0cy5fcmVuZGVyQ2hpbGRyZW4gPSB2bm9kZUNvbXBvbmVudE9wdGlvbnMuY2hpbGRyZW47XG4gIG9wdHMuX2NvbXBvbmVudFRhZyA9IHZub2RlQ29tcG9uZW50T3B0aW9ucy50YWc7XG5cbiAgaWYgKG9wdGlvbnMucmVuZGVyKSB7XG4gICAgb3B0cy5yZW5kZXIgPSBvcHRpb25zLnJlbmRlcjtcbiAgICBvcHRzLnN0YXRpY1JlbmRlckZucyA9IG9wdGlvbnMuc3RhdGljUmVuZGVyRm5zO1xuICB9XG59XG5cbmZ1bmN0aW9uIHJlc29sdmVDb25zdHJ1Y3Rvck9wdGlvbnMgKEN0b3IpIHtcbiAgdmFyIG9wdGlvbnMgPSBDdG9yLm9wdGlvbnM7XG4gIGlmIChDdG9yLnN1cGVyKSB7XG4gICAgdmFyIHN1cGVyT3B0aW9ucyA9IHJlc29sdmVDb25zdHJ1Y3Rvck9wdGlvbnMoQ3Rvci5zdXBlcik7XG4gICAgdmFyIGNhY2hlZFN1cGVyT3B0aW9ucyA9IEN0b3Iuc3VwZXJPcHRpb25zO1xuICAgIGlmIChzdXBlck9wdGlvbnMgIT09IGNhY2hlZFN1cGVyT3B0aW9ucykge1xuICAgICAgLy8gc3VwZXIgb3B0aW9uIGNoYW5nZWQsXG4gICAgICAvLyBuZWVkIHRvIHJlc29sdmUgbmV3IG9wdGlvbnMuXG4gICAgICBDdG9yLnN1cGVyT3B0aW9ucyA9IHN1cGVyT3B0aW9ucztcbiAgICAgIC8vIGNoZWNrIGlmIHRoZXJlIGFyZSBhbnkgbGF0ZS1tb2RpZmllZC9hdHRhY2hlZCBvcHRpb25zICgjNDk3NilcbiAgICAgIHZhciBtb2RpZmllZE9wdGlvbnMgPSByZXNvbHZlTW9kaWZpZWRPcHRpb25zKEN0b3IpO1xuICAgICAgLy8gdXBkYXRlIGJhc2UgZXh0ZW5kIG9wdGlvbnNcbiAgICAgIGlmIChtb2RpZmllZE9wdGlvbnMpIHtcbiAgICAgICAgZXh0ZW5kKEN0b3IuZXh0ZW5kT3B0aW9ucywgbW9kaWZpZWRPcHRpb25zKTtcbiAgICAgIH1cbiAgICAgIG9wdGlvbnMgPSBDdG9yLm9wdGlvbnMgPSBtZXJnZU9wdGlvbnMoc3VwZXJPcHRpb25zLCBDdG9yLmV4dGVuZE9wdGlvbnMpO1xuICAgICAgaWYgKG9wdGlvbnMubmFtZSkge1xuICAgICAgICBvcHRpb25zLmNvbXBvbmVudHNbb3B0aW9ucy5uYW1lXSA9IEN0b3I7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBvcHRpb25zXG59XG5cbmZ1bmN0aW9uIHJlc29sdmVNb2RpZmllZE9wdGlvbnMgKEN0b3IpIHtcbiAgdmFyIG1vZGlmaWVkO1xuICB2YXIgbGF0ZXN0ID0gQ3Rvci5vcHRpb25zO1xuICB2YXIgc2VhbGVkID0gQ3Rvci5zZWFsZWRPcHRpb25zO1xuICBmb3IgKHZhciBrZXkgaW4gbGF0ZXN0KSB7XG4gICAgaWYgKGxhdGVzdFtrZXldICE9PSBzZWFsZWRba2V5XSkge1xuICAgICAgaWYgKCFtb2RpZmllZCkgeyBtb2RpZmllZCA9IHt9OyB9XG4gICAgICBtb2RpZmllZFtrZXldID0gbGF0ZXN0W2tleV07XG4gICAgfVxuICB9XG4gIHJldHVybiBtb2RpZmllZFxufVxuXG5mdW5jdGlvbiBWdWUgKG9wdGlvbnMpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiZcbiAgICAhKHRoaXMgaW5zdGFuY2VvZiBWdWUpXG4gICkge1xuICAgIHdhcm4oJ1Z1ZSBpcyBhIGNvbnN0cnVjdG9yIGFuZCBzaG91bGQgYmUgY2FsbGVkIHdpdGggdGhlIGBuZXdgIGtleXdvcmQnKTtcbiAgfVxuICB0aGlzLl9pbml0KG9wdGlvbnMpO1xufVxuXG5pbml0TWl4aW4oVnVlKTtcbnN0YXRlTWl4aW4oVnVlKTtcbmV2ZW50c01peGluKFZ1ZSk7XG5saWZlY3ljbGVNaXhpbihWdWUpO1xucmVuZGVyTWl4aW4oVnVlKTtcblxuLyogICovXG5cbmZ1bmN0aW9uIGluaXRVc2UgKFZ1ZSkge1xuICBWdWUudXNlID0gZnVuY3Rpb24gKHBsdWdpbikge1xuICAgIHZhciBpbnN0YWxsZWRQbHVnaW5zID0gKHRoaXMuX2luc3RhbGxlZFBsdWdpbnMgfHwgKHRoaXMuX2luc3RhbGxlZFBsdWdpbnMgPSBbXSkpO1xuICAgIGlmIChpbnN0YWxsZWRQbHVnaW5zLmluZGV4T2YocGx1Z2luKSA+IC0xKSB7XG4gICAgICByZXR1cm4gdGhpc1xuICAgIH1cblxuICAgIC8vIGFkZGl0aW9uYWwgcGFyYW1ldGVyc1xuICAgIHZhciBhcmdzID0gdG9BcnJheShhcmd1bWVudHMsIDEpO1xuICAgIGFyZ3MudW5zaGlmdCh0aGlzKTtcbiAgICBpZiAodHlwZW9mIHBsdWdpbi5pbnN0YWxsID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBwbHVnaW4uaW5zdGFsbC5hcHBseShwbHVnaW4sIGFyZ3MpO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIHBsdWdpbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcGx1Z2luLmFwcGx5KG51bGwsIGFyZ3MpO1xuICAgIH1cbiAgICBpbnN0YWxsZWRQbHVnaW5zLnB1c2gocGx1Z2luKTtcbiAgICByZXR1cm4gdGhpc1xuICB9O1xufVxuXG4vKiAgKi9cblxuZnVuY3Rpb24gaW5pdE1peGluJDEgKFZ1ZSkge1xuICBWdWUubWl4aW4gPSBmdW5jdGlvbiAobWl4aW4pIHtcbiAgICB0aGlzLm9wdGlvbnMgPSBtZXJnZU9wdGlvbnModGhpcy5vcHRpb25zLCBtaXhpbik7XG4gICAgcmV0dXJuIHRoaXNcbiAgfTtcbn1cblxuLyogICovXG5cbmZ1bmN0aW9uIGluaXRFeHRlbmQgKFZ1ZSkge1xuICAvKipcbiAgICogRWFjaCBpbnN0YW5jZSBjb25zdHJ1Y3RvciwgaW5jbHVkaW5nIFZ1ZSwgaGFzIGEgdW5pcXVlXG4gICAqIGNpZC4gVGhpcyBlbmFibGVzIHVzIHRvIGNyZWF0ZSB3cmFwcGVkIFwiY2hpbGRcbiAgICogY29uc3RydWN0b3JzXCIgZm9yIHByb3RvdHlwYWwgaW5oZXJpdGFuY2UgYW5kIGNhY2hlIHRoZW0uXG4gICAqL1xuICBWdWUuY2lkID0gMDtcbiAgdmFyIGNpZCA9IDE7XG5cbiAgLyoqXG4gICAqIENsYXNzIGluaGVyaXRhbmNlXG4gICAqL1xuICBWdWUuZXh0ZW5kID0gZnVuY3Rpb24gKGV4dGVuZE9wdGlvbnMpIHtcbiAgICBleHRlbmRPcHRpb25zID0gZXh0ZW5kT3B0aW9ucyB8fCB7fTtcbiAgICB2YXIgU3VwZXIgPSB0aGlzO1xuICAgIHZhciBTdXBlcklkID0gU3VwZXIuY2lkO1xuICAgIHZhciBjYWNoZWRDdG9ycyA9IGV4dGVuZE9wdGlvbnMuX0N0b3IgfHwgKGV4dGVuZE9wdGlvbnMuX0N0b3IgPSB7fSk7XG4gICAgaWYgKGNhY2hlZEN0b3JzW1N1cGVySWRdKSB7XG4gICAgICByZXR1cm4gY2FjaGVkQ3RvcnNbU3VwZXJJZF1cbiAgICB9XG5cbiAgICB2YXIgbmFtZSA9IGV4dGVuZE9wdGlvbnMubmFtZSB8fCBTdXBlci5vcHRpb25zLm5hbWU7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgbmFtZSkge1xuICAgICAgdmFsaWRhdGVDb21wb25lbnROYW1lKG5hbWUpO1xuICAgIH1cblxuICAgIHZhciBTdWIgPSBmdW5jdGlvbiBWdWVDb21wb25lbnQgKG9wdGlvbnMpIHtcbiAgICAgIHRoaXMuX2luaXQob3B0aW9ucyk7XG4gICAgfTtcbiAgICBTdWIucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShTdXBlci5wcm90b3R5cGUpO1xuICAgIFN1Yi5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBTdWI7XG4gICAgU3ViLmNpZCA9IGNpZCsrO1xuICAgIFN1Yi5vcHRpb25zID0gbWVyZ2VPcHRpb25zKFxuICAgICAgU3VwZXIub3B0aW9ucyxcbiAgICAgIGV4dGVuZE9wdGlvbnNcbiAgICApO1xuICAgIFN1Ylsnc3VwZXInXSA9IFN1cGVyO1xuXG4gICAgLy8gRm9yIHByb3BzIGFuZCBjb21wdXRlZCBwcm9wZXJ0aWVzLCB3ZSBkZWZpbmUgdGhlIHByb3h5IGdldHRlcnMgb25cbiAgICAvLyB0aGUgVnVlIGluc3RhbmNlcyBhdCBleHRlbnNpb24gdGltZSwgb24gdGhlIGV4dGVuZGVkIHByb3RvdHlwZS4gVGhpc1xuICAgIC8vIGF2b2lkcyBPYmplY3QuZGVmaW5lUHJvcGVydHkgY2FsbHMgZm9yIGVhY2ggaW5zdGFuY2UgY3JlYXRlZC5cbiAgICBpZiAoU3ViLm9wdGlvbnMucHJvcHMpIHtcbiAgICAgIGluaXRQcm9wcyQxKFN1Yik7XG4gICAgfVxuICAgIGlmIChTdWIub3B0aW9ucy5jb21wdXRlZCkge1xuICAgICAgaW5pdENvbXB1dGVkJDEoU3ViKTtcbiAgICB9XG5cbiAgICAvLyBhbGxvdyBmdXJ0aGVyIGV4dGVuc2lvbi9taXhpbi9wbHVnaW4gdXNhZ2VcbiAgICBTdWIuZXh0ZW5kID0gU3VwZXIuZXh0ZW5kO1xuICAgIFN1Yi5taXhpbiA9IFN1cGVyLm1peGluO1xuICAgIFN1Yi51c2UgPSBTdXBlci51c2U7XG5cbiAgICAvLyBjcmVhdGUgYXNzZXQgcmVnaXN0ZXJzLCBzbyBleHRlbmRlZCBjbGFzc2VzXG4gICAgLy8gY2FuIGhhdmUgdGhlaXIgcHJpdmF0ZSBhc3NldHMgdG9vLlxuICAgIEFTU0VUX1RZUEVTLmZvckVhY2goZnVuY3Rpb24gKHR5cGUpIHtcbiAgICAgIFN1Ylt0eXBlXSA9IFN1cGVyW3R5cGVdO1xuICAgIH0pO1xuICAgIC8vIGVuYWJsZSByZWN1cnNpdmUgc2VsZi1sb29rdXBcbiAgICBpZiAobmFtZSkge1xuICAgICAgU3ViLm9wdGlvbnMuY29tcG9uZW50c1tuYW1lXSA9IFN1YjtcbiAgICB9XG5cbiAgICAvLyBrZWVwIGEgcmVmZXJlbmNlIHRvIHRoZSBzdXBlciBvcHRpb25zIGF0IGV4dGVuc2lvbiB0aW1lLlxuICAgIC8vIGxhdGVyIGF0IGluc3RhbnRpYXRpb24gd2UgY2FuIGNoZWNrIGlmIFN1cGVyJ3Mgb3B0aW9ucyBoYXZlXG4gICAgLy8gYmVlbiB1cGRhdGVkLlxuICAgIFN1Yi5zdXBlck9wdGlvbnMgPSBTdXBlci5vcHRpb25zO1xuICAgIFN1Yi5leHRlbmRPcHRpb25zID0gZXh0ZW5kT3B0aW9ucztcbiAgICBTdWIuc2VhbGVkT3B0aW9ucyA9IGV4dGVuZCh7fSwgU3ViLm9wdGlvbnMpO1xuXG4gICAgLy8gY2FjaGUgY29uc3RydWN0b3JcbiAgICBjYWNoZWRDdG9yc1tTdXBlcklkXSA9IFN1YjtcbiAgICByZXR1cm4gU3ViXG4gIH07XG59XG5cbmZ1bmN0aW9uIGluaXRQcm9wcyQxIChDb21wKSB7XG4gIHZhciBwcm9wcyA9IENvbXAub3B0aW9ucy5wcm9wcztcbiAgZm9yICh2YXIga2V5IGluIHByb3BzKSB7XG4gICAgcHJveHkoQ29tcC5wcm90b3R5cGUsIFwiX3Byb3BzXCIsIGtleSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaW5pdENvbXB1dGVkJDEgKENvbXApIHtcbiAgdmFyIGNvbXB1dGVkID0gQ29tcC5vcHRpb25zLmNvbXB1dGVkO1xuICBmb3IgKHZhciBrZXkgaW4gY29tcHV0ZWQpIHtcbiAgICBkZWZpbmVDb21wdXRlZChDb21wLnByb3RvdHlwZSwga2V5LCBjb21wdXRlZFtrZXldKTtcbiAgfVxufVxuXG4vKiAgKi9cblxuZnVuY3Rpb24gaW5pdEFzc2V0UmVnaXN0ZXJzIChWdWUpIHtcbiAgLyoqXG4gICAqIENyZWF0ZSBhc3NldCByZWdpc3RyYXRpb24gbWV0aG9kcy5cbiAgICovXG4gIEFTU0VUX1RZUEVTLmZvckVhY2goZnVuY3Rpb24gKHR5cGUpIHtcbiAgICBWdWVbdHlwZV0gPSBmdW5jdGlvbiAoXG4gICAgICBpZCxcbiAgICAgIGRlZmluaXRpb25cbiAgICApIHtcbiAgICAgIGlmICghZGVmaW5pdGlvbikge1xuICAgICAgICByZXR1cm4gdGhpcy5vcHRpb25zW3R5cGUgKyAncyddW2lkXVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHR5cGUgPT09ICdjb21wb25lbnQnKSB7XG4gICAgICAgICAgdmFsaWRhdGVDb21wb25lbnROYW1lKGlkKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZSA9PT0gJ2NvbXBvbmVudCcgJiYgaXNQbGFpbk9iamVjdChkZWZpbml0aW9uKSkge1xuICAgICAgICAgIGRlZmluaXRpb24ubmFtZSA9IGRlZmluaXRpb24ubmFtZSB8fCBpZDtcbiAgICAgICAgICBkZWZpbml0aW9uID0gdGhpcy5vcHRpb25zLl9iYXNlLmV4dGVuZChkZWZpbml0aW9uKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZSA9PT0gJ2RpcmVjdGl2ZScgJiYgdHlwZW9mIGRlZmluaXRpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICBkZWZpbml0aW9uID0geyBiaW5kOiBkZWZpbml0aW9uLCB1cGRhdGU6IGRlZmluaXRpb24gfTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm9wdGlvbnNbdHlwZSArICdzJ11baWRdID0gZGVmaW5pdGlvbjtcbiAgICAgICAgcmV0dXJuIGRlZmluaXRpb25cbiAgICAgIH1cbiAgICB9O1xuICB9KTtcbn1cblxuLyogICovXG5cblxuXG5mdW5jdGlvbiBnZXRDb21wb25lbnROYW1lIChvcHRzKSB7XG4gIHJldHVybiBvcHRzICYmIChvcHRzLkN0b3Iub3B0aW9ucy5uYW1lIHx8IG9wdHMudGFnKVxufVxuXG5mdW5jdGlvbiBtYXRjaGVzIChwYXR0ZXJuLCBuYW1lKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KHBhdHRlcm4pKSB7XG4gICAgcmV0dXJuIHBhdHRlcm4uaW5kZXhPZihuYW1lKSA+IC0xXG4gIH0gZWxzZSBpZiAodHlwZW9mIHBhdHRlcm4gPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIHBhdHRlcm4uc3BsaXQoJywnKS5pbmRleE9mKG5hbWUpID4gLTFcbiAgfSBlbHNlIGlmIChpc1JlZ0V4cChwYXR0ZXJuKSkge1xuICAgIHJldHVybiBwYXR0ZXJuLnRlc3QobmFtZSlcbiAgfVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICByZXR1cm4gZmFsc2Vcbn1cblxuZnVuY3Rpb24gcHJ1bmVDYWNoZSAoa2VlcEFsaXZlSW5zdGFuY2UsIGZpbHRlcikge1xuICB2YXIgY2FjaGUgPSBrZWVwQWxpdmVJbnN0YW5jZS5jYWNoZTtcbiAgdmFyIGtleXMgPSBrZWVwQWxpdmVJbnN0YW5jZS5rZXlzO1xuICB2YXIgX3Zub2RlID0ga2VlcEFsaXZlSW5zdGFuY2UuX3Zub2RlO1xuICBmb3IgKHZhciBrZXkgaW4gY2FjaGUpIHtcbiAgICB2YXIgY2FjaGVkTm9kZSA9IGNhY2hlW2tleV07XG4gICAgaWYgKGNhY2hlZE5vZGUpIHtcbiAgICAgIHZhciBuYW1lID0gZ2V0Q29tcG9uZW50TmFtZShjYWNoZWROb2RlLmNvbXBvbmVudE9wdGlvbnMpO1xuICAgICAgaWYgKG5hbWUgJiYgIWZpbHRlcihuYW1lKSkge1xuICAgICAgICBwcnVuZUNhY2hlRW50cnkoY2FjaGUsIGtleSwga2V5cywgX3Zub2RlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gcHJ1bmVDYWNoZUVudHJ5IChcbiAgY2FjaGUsXG4gIGtleSxcbiAga2V5cyxcbiAgY3VycmVudFxuKSB7XG4gIHZhciBjYWNoZWQkJDEgPSBjYWNoZVtrZXldO1xuICBpZiAoY2FjaGVkJCQxICYmICghY3VycmVudCB8fCBjYWNoZWQkJDEudGFnICE9PSBjdXJyZW50LnRhZykpIHtcbiAgICBjYWNoZWQkJDEuY29tcG9uZW50SW5zdGFuY2UuJGRlc3Ryb3koKTtcbiAgfVxuICBjYWNoZVtrZXldID0gbnVsbDtcbiAgcmVtb3ZlKGtleXMsIGtleSk7XG59XG5cbnZhciBwYXR0ZXJuVHlwZXMgPSBbU3RyaW5nLCBSZWdFeHAsIEFycmF5XTtcblxudmFyIEtlZXBBbGl2ZSA9IHtcbiAgbmFtZTogJ2tlZXAtYWxpdmUnLFxuICBhYnN0cmFjdDogdHJ1ZSxcblxuICBwcm9wczoge1xuICAgIGluY2x1ZGU6IHBhdHRlcm5UeXBlcyxcbiAgICBleGNsdWRlOiBwYXR0ZXJuVHlwZXMsXG4gICAgbWF4OiBbU3RyaW5nLCBOdW1iZXJdXG4gIH0sXG5cbiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCAoKSB7XG4gICAgdGhpcy5jYWNoZSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgdGhpcy5rZXlzID0gW107XG4gIH0sXG5cbiAgZGVzdHJveWVkOiBmdW5jdGlvbiBkZXN0cm95ZWQgKCkge1xuICAgIGZvciAodmFyIGtleSBpbiB0aGlzLmNhY2hlKSB7XG4gICAgICBwcnVuZUNhY2hlRW50cnkodGhpcy5jYWNoZSwga2V5LCB0aGlzLmtleXMpO1xuICAgIH1cbiAgfSxcblxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkICgpIHtcbiAgICB2YXIgdGhpcyQxID0gdGhpcztcblxuICAgIHRoaXMuJHdhdGNoKCdpbmNsdWRlJywgZnVuY3Rpb24gKHZhbCkge1xuICAgICAgcHJ1bmVDYWNoZSh0aGlzJDEsIGZ1bmN0aW9uIChuYW1lKSB7IHJldHVybiBtYXRjaGVzKHZhbCwgbmFtZSk7IH0pO1xuICAgIH0pO1xuICAgIHRoaXMuJHdhdGNoKCdleGNsdWRlJywgZnVuY3Rpb24gKHZhbCkge1xuICAgICAgcHJ1bmVDYWNoZSh0aGlzJDEsIGZ1bmN0aW9uIChuYW1lKSB7IHJldHVybiAhbWF0Y2hlcyh2YWwsIG5hbWUpOyB9KTtcbiAgICB9KTtcbiAgfSxcblxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlciAoKSB7XG4gICAgdmFyIHNsb3QgPSB0aGlzLiRzbG90cy5kZWZhdWx0O1xuICAgIHZhciB2bm9kZSA9IGdldEZpcnN0Q29tcG9uZW50Q2hpbGQoc2xvdCk7XG4gICAgdmFyIGNvbXBvbmVudE9wdGlvbnMgPSB2bm9kZSAmJiB2bm9kZS5jb21wb25lbnRPcHRpb25zO1xuICAgIGlmIChjb21wb25lbnRPcHRpb25zKSB7XG4gICAgICAvLyBjaGVjayBwYXR0ZXJuXG4gICAgICB2YXIgbmFtZSA9IGdldENvbXBvbmVudE5hbWUoY29tcG9uZW50T3B0aW9ucyk7XG4gICAgICB2YXIgcmVmID0gdGhpcztcbiAgICAgIHZhciBpbmNsdWRlID0gcmVmLmluY2x1ZGU7XG4gICAgICB2YXIgZXhjbHVkZSA9IHJlZi5leGNsdWRlO1xuICAgICAgaWYgKFxuICAgICAgICAvLyBub3QgaW5jbHVkZWRcbiAgICAgICAgKGluY2x1ZGUgJiYgKCFuYW1lIHx8ICFtYXRjaGVzKGluY2x1ZGUsIG5hbWUpKSkgfHxcbiAgICAgICAgLy8gZXhjbHVkZWRcbiAgICAgICAgKGV4Y2x1ZGUgJiYgbmFtZSAmJiBtYXRjaGVzKGV4Y2x1ZGUsIG5hbWUpKVxuICAgICAgKSB7XG4gICAgICAgIHJldHVybiB2bm9kZVxuICAgICAgfVxuXG4gICAgICB2YXIgcmVmJDEgPSB0aGlzO1xuICAgICAgdmFyIGNhY2hlID0gcmVmJDEuY2FjaGU7XG4gICAgICB2YXIga2V5cyA9IHJlZiQxLmtleXM7XG4gICAgICB2YXIga2V5ID0gdm5vZGUua2V5ID09IG51bGxcbiAgICAgICAgLy8gc2FtZSBjb25zdHJ1Y3RvciBtYXkgZ2V0IHJlZ2lzdGVyZWQgYXMgZGlmZmVyZW50IGxvY2FsIGNvbXBvbmVudHNcbiAgICAgICAgLy8gc28gY2lkIGFsb25lIGlzIG5vdCBlbm91Z2ggKCMzMjY5KVxuICAgICAgICA/IGNvbXBvbmVudE9wdGlvbnMuQ3Rvci5jaWQgKyAoY29tcG9uZW50T3B0aW9ucy50YWcgPyAoXCI6OlwiICsgKGNvbXBvbmVudE9wdGlvbnMudGFnKSkgOiAnJylcbiAgICAgICAgOiB2bm9kZS5rZXk7XG4gICAgICBpZiAoY2FjaGVba2V5XSkge1xuICAgICAgICB2bm9kZS5jb21wb25lbnRJbnN0YW5jZSA9IGNhY2hlW2tleV0uY29tcG9uZW50SW5zdGFuY2U7XG4gICAgICAgIC8vIG1ha2UgY3VycmVudCBrZXkgZnJlc2hlc3RcbiAgICAgICAgcmVtb3ZlKGtleXMsIGtleSk7XG4gICAgICAgIGtleXMucHVzaChrZXkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2FjaGVba2V5XSA9IHZub2RlO1xuICAgICAgICBrZXlzLnB1c2goa2V5KTtcbiAgICAgICAgLy8gcHJ1bmUgb2xkZXN0IGVudHJ5XG4gICAgICAgIGlmICh0aGlzLm1heCAmJiBrZXlzLmxlbmd0aCA+IHBhcnNlSW50KHRoaXMubWF4KSkge1xuICAgICAgICAgIHBydW5lQ2FjaGVFbnRyeShjYWNoZSwga2V5c1swXSwga2V5cywgdGhpcy5fdm5vZGUpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHZub2RlLmRhdGEua2VlcEFsaXZlID0gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIHZub2RlIHx8IChzbG90ICYmIHNsb3RbMF0pXG4gIH1cbn07XG5cbnZhciBidWlsdEluQ29tcG9uZW50cyA9IHtcbiAgS2VlcEFsaXZlOiBLZWVwQWxpdmVcbn07XG5cbi8qICAqL1xuXG5mdW5jdGlvbiBpbml0R2xvYmFsQVBJIChWdWUpIHtcbiAgLy8gY29uZmlnXG4gIHZhciBjb25maWdEZWYgPSB7fTtcbiAgY29uZmlnRGVmLmdldCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvbmZpZzsgfTtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBjb25maWdEZWYuc2V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgd2FybihcbiAgICAgICAgJ0RvIG5vdCByZXBsYWNlIHRoZSBWdWUuY29uZmlnIG9iamVjdCwgc2V0IGluZGl2aWR1YWwgZmllbGRzIGluc3RlYWQuJ1xuICAgICAgKTtcbiAgICB9O1xuICB9XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShWdWUsICdjb25maWcnLCBjb25maWdEZWYpO1xuXG4gIC8vIGV4cG9zZWQgdXRpbCBtZXRob2RzLlxuICAvLyBOT1RFOiB0aGVzZSBhcmUgbm90IGNvbnNpZGVyZWQgcGFydCBvZiB0aGUgcHVibGljIEFQSSAtIGF2b2lkIHJlbHlpbmcgb25cbiAgLy8gdGhlbSB1bmxlc3MgeW91IGFyZSBhd2FyZSBvZiB0aGUgcmlzay5cbiAgVnVlLnV0aWwgPSB7XG4gICAgd2Fybjogd2FybixcbiAgICBleHRlbmQ6IGV4dGVuZCxcbiAgICBtZXJnZU9wdGlvbnM6IG1lcmdlT3B0aW9ucyxcbiAgICBkZWZpbmVSZWFjdGl2ZTogZGVmaW5lUmVhY3RpdmUkJDFcbiAgfTtcblxuICBWdWUuc2V0ID0gc2V0O1xuICBWdWUuZGVsZXRlID0gZGVsO1xuICBWdWUubmV4dFRpY2sgPSBuZXh0VGljaztcblxuICAvLyAyLjYgZXhwbGljaXQgb2JzZXJ2YWJsZSBBUElcbiAgVnVlLm9ic2VydmFibGUgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgb2JzZXJ2ZShvYmopO1xuICAgIHJldHVybiBvYmpcbiAgfTtcblxuICBWdWUub3B0aW9ucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIEFTU0VUX1RZUEVTLmZvckVhY2goZnVuY3Rpb24gKHR5cGUpIHtcbiAgICBWdWUub3B0aW9uc1t0eXBlICsgJ3MnXSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIH0pO1xuXG4gIC8vIHRoaXMgaXMgdXNlZCB0byBpZGVudGlmeSB0aGUgXCJiYXNlXCIgY29uc3RydWN0b3IgdG8gZXh0ZW5kIGFsbCBwbGFpbi1vYmplY3RcbiAgLy8gY29tcG9uZW50cyB3aXRoIGluIFdlZXgncyBtdWx0aS1pbnN0YW5jZSBzY2VuYXJpb3MuXG4gIFZ1ZS5vcHRpb25zLl9iYXNlID0gVnVlO1xuXG4gIGV4dGVuZChWdWUub3B0aW9ucy5jb21wb25lbnRzLCBidWlsdEluQ29tcG9uZW50cyk7XG5cbiAgaW5pdFVzZShWdWUpO1xuICBpbml0TWl4aW4kMShWdWUpO1xuICBpbml0RXh0ZW5kKFZ1ZSk7XG4gIGluaXRBc3NldFJlZ2lzdGVycyhWdWUpO1xufVxuXG5pbml0R2xvYmFsQVBJKFZ1ZSk7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShWdWUucHJvdG90eXBlLCAnJGlzU2VydmVyJywge1xuICBnZXQ6IGlzU2VydmVyUmVuZGVyaW5nXG59KTtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KFZ1ZS5wcm90b3R5cGUsICckc3NyQ29udGV4dCcsIHtcbiAgZ2V0OiBmdW5jdGlvbiBnZXQgKCkge1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgcmV0dXJuIHRoaXMuJHZub2RlICYmIHRoaXMuJHZub2RlLnNzckNvbnRleHRcbiAgfVxufSk7XG5cbi8vIGV4cG9zZSBGdW5jdGlvbmFsUmVuZGVyQ29udGV4dCBmb3Igc3NyIHJ1bnRpbWUgaGVscGVyIGluc3RhbGxhdGlvblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KFZ1ZSwgJ0Z1bmN0aW9uYWxSZW5kZXJDb250ZXh0Jywge1xuICB2YWx1ZTogRnVuY3Rpb25hbFJlbmRlckNvbnRleHRcbn0pO1xuXG5WdWUudmVyc2lvbiA9ICcyLjYuMTEnO1xuXG4vKiAgKi9cblxuLy8gdGhlc2UgYXJlIHJlc2VydmVkIGZvciB3ZWIgYmVjYXVzZSB0aGV5IGFyZSBkaXJlY3RseSBjb21waWxlZCBhd2F5XG4vLyBkdXJpbmcgdGVtcGxhdGUgY29tcGlsYXRpb25cbnZhciBpc1Jlc2VydmVkQXR0ciA9IG1ha2VNYXAoJ3N0eWxlLGNsYXNzJyk7XG5cbi8vIGF0dHJpYnV0ZXMgdGhhdCBzaG91bGQgYmUgdXNpbmcgcHJvcHMgZm9yIGJpbmRpbmdcbnZhciBhY2NlcHRWYWx1ZSA9IG1ha2VNYXAoJ2lucHV0LHRleHRhcmVhLG9wdGlvbixzZWxlY3QscHJvZ3Jlc3MnKTtcbnZhciBtdXN0VXNlUHJvcCA9IGZ1bmN0aW9uICh0YWcsIHR5cGUsIGF0dHIpIHtcbiAgcmV0dXJuIChcbiAgICAoYXR0ciA9PT0gJ3ZhbHVlJyAmJiBhY2NlcHRWYWx1ZSh0YWcpKSAmJiB0eXBlICE9PSAnYnV0dG9uJyB8fFxuICAgIChhdHRyID09PSAnc2VsZWN0ZWQnICYmIHRhZyA9PT0gJ29wdGlvbicpIHx8XG4gICAgKGF0dHIgPT09ICdjaGVja2VkJyAmJiB0YWcgPT09ICdpbnB1dCcpIHx8XG4gICAgKGF0dHIgPT09ICdtdXRlZCcgJiYgdGFnID09PSAndmlkZW8nKVxuICApXG59O1xuXG52YXIgaXNFbnVtZXJhdGVkQXR0ciA9IG1ha2VNYXAoJ2NvbnRlbnRlZGl0YWJsZSxkcmFnZ2FibGUsc3BlbGxjaGVjaycpO1xuXG52YXIgaXNWYWxpZENvbnRlbnRFZGl0YWJsZVZhbHVlID0gbWFrZU1hcCgnZXZlbnRzLGNhcmV0LHR5cGluZyxwbGFpbnRleHQtb25seScpO1xuXG52YXIgY29udmVydEVudW1lcmF0ZWRWYWx1ZSA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gIHJldHVybiBpc0ZhbHN5QXR0clZhbHVlKHZhbHVlKSB8fCB2YWx1ZSA9PT0gJ2ZhbHNlJ1xuICAgID8gJ2ZhbHNlJ1xuICAgIC8vIGFsbG93IGFyYml0cmFyeSBzdHJpbmcgdmFsdWUgZm9yIGNvbnRlbnRlZGl0YWJsZVxuICAgIDoga2V5ID09PSAnY29udGVudGVkaXRhYmxlJyAmJiBpc1ZhbGlkQ29udGVudEVkaXRhYmxlVmFsdWUodmFsdWUpXG4gICAgICA/IHZhbHVlXG4gICAgICA6ICd0cnVlJ1xufTtcblxudmFyIGlzQm9vbGVhbkF0dHIgPSBtYWtlTWFwKFxuICAnYWxsb3dmdWxsc2NyZWVuLGFzeW5jLGF1dG9mb2N1cyxhdXRvcGxheSxjaGVja2VkLGNvbXBhY3QsY29udHJvbHMsZGVjbGFyZSwnICtcbiAgJ2RlZmF1bHQsZGVmYXVsdGNoZWNrZWQsZGVmYXVsdG11dGVkLGRlZmF1bHRzZWxlY3RlZCxkZWZlcixkaXNhYmxlZCwnICtcbiAgJ2VuYWJsZWQsZm9ybW5vdmFsaWRhdGUsaGlkZGVuLGluZGV0ZXJtaW5hdGUsaW5lcnQsaXNtYXAsaXRlbXNjb3BlLGxvb3AsbXVsdGlwbGUsJyArXG4gICdtdXRlZCxub2hyZWYsbm9yZXNpemUsbm9zaGFkZSxub3ZhbGlkYXRlLG5vd3JhcCxvcGVuLHBhdXNlb25leGl0LHJlYWRvbmx5LCcgK1xuICAncmVxdWlyZWQscmV2ZXJzZWQsc2NvcGVkLHNlYW1sZXNzLHNlbGVjdGVkLHNvcnRhYmxlLHRyYW5zbGF0ZSwnICtcbiAgJ3RydWVzcGVlZCx0eXBlbXVzdG1hdGNoLHZpc2libGUnXG4pO1xuXG52YXIgeGxpbmtOUyA9ICdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJztcblxudmFyIGlzWGxpbmsgPSBmdW5jdGlvbiAobmFtZSkge1xuICByZXR1cm4gbmFtZS5jaGFyQXQoNSkgPT09ICc6JyAmJiBuYW1lLnNsaWNlKDAsIDUpID09PSAneGxpbmsnXG59O1xuXG52YXIgZ2V0WGxpbmtQcm9wID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgcmV0dXJuIGlzWGxpbmsobmFtZSkgPyBuYW1lLnNsaWNlKDYsIG5hbWUubGVuZ3RoKSA6ICcnXG59O1xuXG52YXIgaXNGYWxzeUF0dHJWYWx1ZSA9IGZ1bmN0aW9uICh2YWwpIHtcbiAgcmV0dXJuIHZhbCA9PSBudWxsIHx8IHZhbCA9PT0gZmFsc2Vcbn07XG5cbi8qICAqL1xuXG5mdW5jdGlvbiBnZW5DbGFzc0ZvclZub2RlICh2bm9kZSkge1xuICB2YXIgZGF0YSA9IHZub2RlLmRhdGE7XG4gIHZhciBwYXJlbnROb2RlID0gdm5vZGU7XG4gIHZhciBjaGlsZE5vZGUgPSB2bm9kZTtcbiAgd2hpbGUgKGlzRGVmKGNoaWxkTm9kZS5jb21wb25lbnRJbnN0YW5jZSkpIHtcbiAgICBjaGlsZE5vZGUgPSBjaGlsZE5vZGUuY29tcG9uZW50SW5zdGFuY2UuX3Zub2RlO1xuICAgIGlmIChjaGlsZE5vZGUgJiYgY2hpbGROb2RlLmRhdGEpIHtcbiAgICAgIGRhdGEgPSBtZXJnZUNsYXNzRGF0YShjaGlsZE5vZGUuZGF0YSwgZGF0YSk7XG4gICAgfVxuICB9XG4gIHdoaWxlIChpc0RlZihwYXJlbnROb2RlID0gcGFyZW50Tm9kZS5wYXJlbnQpKSB7XG4gICAgaWYgKHBhcmVudE5vZGUgJiYgcGFyZW50Tm9kZS5kYXRhKSB7XG4gICAgICBkYXRhID0gbWVyZ2VDbGFzc0RhdGEoZGF0YSwgcGFyZW50Tm9kZS5kYXRhKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlbmRlckNsYXNzKGRhdGEuc3RhdGljQ2xhc3MsIGRhdGEuY2xhc3MpXG59XG5cbmZ1bmN0aW9uIG1lcmdlQ2xhc3NEYXRhIChjaGlsZCwgcGFyZW50KSB7XG4gIHJldHVybiB7XG4gICAgc3RhdGljQ2xhc3M6IGNvbmNhdChjaGlsZC5zdGF0aWNDbGFzcywgcGFyZW50LnN0YXRpY0NsYXNzKSxcbiAgICBjbGFzczogaXNEZWYoY2hpbGQuY2xhc3MpXG4gICAgICA/IFtjaGlsZC5jbGFzcywgcGFyZW50LmNsYXNzXVxuICAgICAgOiBwYXJlbnQuY2xhc3NcbiAgfVxufVxuXG5mdW5jdGlvbiByZW5kZXJDbGFzcyAoXG4gIHN0YXRpY0NsYXNzLFxuICBkeW5hbWljQ2xhc3Ncbikge1xuICBpZiAoaXNEZWYoc3RhdGljQ2xhc3MpIHx8IGlzRGVmKGR5bmFtaWNDbGFzcykpIHtcbiAgICByZXR1cm4gY29uY2F0KHN0YXRpY0NsYXNzLCBzdHJpbmdpZnlDbGFzcyhkeW5hbWljQ2xhc3MpKVxuICB9XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIHJldHVybiAnJ1xufVxuXG5mdW5jdGlvbiBjb25jYXQgKGEsIGIpIHtcbiAgcmV0dXJuIGEgPyBiID8gKGEgKyAnICcgKyBiKSA6IGEgOiAoYiB8fCAnJylcbn1cblxuZnVuY3Rpb24gc3RyaW5naWZ5Q2xhc3MgKHZhbHVlKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgIHJldHVybiBzdHJpbmdpZnlBcnJheSh2YWx1ZSlcbiAgfVxuICBpZiAoaXNPYmplY3QodmFsdWUpKSB7XG4gICAgcmV0dXJuIHN0cmluZ2lmeU9iamVjdCh2YWx1ZSlcbiAgfVxuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiB2YWx1ZVxuICB9XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIHJldHVybiAnJ1xufVxuXG5mdW5jdGlvbiBzdHJpbmdpZnlBcnJheSAodmFsdWUpIHtcbiAgdmFyIHJlcyA9ICcnO1xuICB2YXIgc3RyaW5naWZpZWQ7XG4gIGZvciAodmFyIGkgPSAwLCBsID0gdmFsdWUubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgaWYgKGlzRGVmKHN0cmluZ2lmaWVkID0gc3RyaW5naWZ5Q2xhc3ModmFsdWVbaV0pKSAmJiBzdHJpbmdpZmllZCAhPT0gJycpIHtcbiAgICAgIGlmIChyZXMpIHsgcmVzICs9ICcgJzsgfVxuICAgICAgcmVzICs9IHN0cmluZ2lmaWVkO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzXG59XG5cbmZ1bmN0aW9uIHN0cmluZ2lmeU9iamVjdCAodmFsdWUpIHtcbiAgdmFyIHJlcyA9ICcnO1xuICBmb3IgKHZhciBrZXkgaW4gdmFsdWUpIHtcbiAgICBpZiAodmFsdWVba2V5XSkge1xuICAgICAgaWYgKHJlcykgeyByZXMgKz0gJyAnOyB9XG4gICAgICByZXMgKz0ga2V5O1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzXG59XG5cbi8qICAqL1xuXG52YXIgbmFtZXNwYWNlTWFwID0ge1xuICBzdmc6ICdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsXG4gIG1hdGg6ICdodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MJ1xufTtcblxudmFyIGlzSFRNTFRhZyA9IG1ha2VNYXAoXG4gICdodG1sLGJvZHksYmFzZSxoZWFkLGxpbmssbWV0YSxzdHlsZSx0aXRsZSwnICtcbiAgJ2FkZHJlc3MsYXJ0aWNsZSxhc2lkZSxmb290ZXIsaGVhZGVyLGgxLGgyLGgzLGg0LGg1LGg2LGhncm91cCxuYXYsc2VjdGlvbiwnICtcbiAgJ2RpdixkZCxkbCxkdCxmaWdjYXB0aW9uLGZpZ3VyZSxwaWN0dXJlLGhyLGltZyxsaSxtYWluLG9sLHAscHJlLHVsLCcgK1xuICAnYSxiLGFiYnIsYmRpLGJkbyxicixjaXRlLGNvZGUsZGF0YSxkZm4sZW0saSxrYmQsbWFyayxxLHJwLHJ0LHJ0YyxydWJ5LCcgK1xuICAncyxzYW1wLHNtYWxsLHNwYW4sc3Ryb25nLHN1YixzdXAsdGltZSx1LHZhcix3YnIsYXJlYSxhdWRpbyxtYXAsdHJhY2ssdmlkZW8sJyArXG4gICdlbWJlZCxvYmplY3QscGFyYW0sc291cmNlLGNhbnZhcyxzY3JpcHQsbm9zY3JpcHQsZGVsLGlucywnICtcbiAgJ2NhcHRpb24sY29sLGNvbGdyb3VwLHRhYmxlLHRoZWFkLHRib2R5LHRkLHRoLHRyLCcgK1xuICAnYnV0dG9uLGRhdGFsaXN0LGZpZWxkc2V0LGZvcm0saW5wdXQsbGFiZWwsbGVnZW5kLG1ldGVyLG9wdGdyb3VwLG9wdGlvbiwnICtcbiAgJ291dHB1dCxwcm9ncmVzcyxzZWxlY3QsdGV4dGFyZWEsJyArXG4gICdkZXRhaWxzLGRpYWxvZyxtZW51LG1lbnVpdGVtLHN1bW1hcnksJyArXG4gICdjb250ZW50LGVsZW1lbnQsc2hhZG93LHRlbXBsYXRlLGJsb2NrcXVvdGUsaWZyYW1lLHRmb290J1xuKTtcblxuLy8gdGhpcyBtYXAgaXMgaW50ZW50aW9uYWxseSBzZWxlY3RpdmUsIG9ubHkgY292ZXJpbmcgU1ZHIGVsZW1lbnRzIHRoYXQgbWF5XG4vLyBjb250YWluIGNoaWxkIGVsZW1lbnRzLlxudmFyIGlzU1ZHID0gbWFrZU1hcChcbiAgJ3N2ZyxhbmltYXRlLGNpcmNsZSxjbGlwcGF0aCxjdXJzb3IsZGVmcyxkZXNjLGVsbGlwc2UsZmlsdGVyLGZvbnQtZmFjZSwnICtcbiAgJ2ZvcmVpZ25PYmplY3QsZyxnbHlwaCxpbWFnZSxsaW5lLG1hcmtlcixtYXNrLG1pc3NpbmctZ2x5cGgscGF0aCxwYXR0ZXJuLCcgK1xuICAncG9seWdvbixwb2x5bGluZSxyZWN0LHN3aXRjaCxzeW1ib2wsdGV4dCx0ZXh0cGF0aCx0c3Bhbix1c2UsdmlldycsXG4gIHRydWVcbik7XG5cbnZhciBpc1ByZVRhZyA9IGZ1bmN0aW9uICh0YWcpIHsgcmV0dXJuIHRhZyA9PT0gJ3ByZSc7IH07XG5cbnZhciBpc1Jlc2VydmVkVGFnID0gZnVuY3Rpb24gKHRhZykge1xuICByZXR1cm4gaXNIVE1MVGFnKHRhZykgfHwgaXNTVkcodGFnKVxufTtcblxuZnVuY3Rpb24gZ2V0VGFnTmFtZXNwYWNlICh0YWcpIHtcbiAgaWYgKGlzU1ZHKHRhZykpIHtcbiAgICByZXR1cm4gJ3N2ZydcbiAgfVxuICAvLyBiYXNpYyBzdXBwb3J0IGZvciBNYXRoTUxcbiAgLy8gbm90ZSBpdCBkb2Vzbid0IHN1cHBvcnQgb3RoZXIgTWF0aE1MIGVsZW1lbnRzIGJlaW5nIGNvbXBvbmVudCByb290c1xuICBpZiAodGFnID09PSAnbWF0aCcpIHtcbiAgICByZXR1cm4gJ21hdGgnXG4gIH1cbn1cblxudmFyIHVua25vd25FbGVtZW50Q2FjaGUgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuZnVuY3Rpb24gaXNVbmtub3duRWxlbWVudCAodGFnKSB7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICBpZiAoIWluQnJvd3Nlcikge1xuICAgIHJldHVybiB0cnVlXG4gIH1cbiAgaWYgKGlzUmVzZXJ2ZWRUYWcodGFnKSkge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG4gIHRhZyA9IHRhZy50b0xvd2VyQ2FzZSgpO1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgaWYgKHVua25vd25FbGVtZW50Q2FjaGVbdGFnXSAhPSBudWxsKSB7XG4gICAgcmV0dXJuIHVua25vd25FbGVtZW50Q2FjaGVbdGFnXVxuICB9XG4gIHZhciBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGFnKTtcbiAgaWYgKHRhZy5pbmRleE9mKCctJykgPiAtMSkge1xuICAgIC8vIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzI4MjEwMzY0LzEwNzAyNDRcbiAgICByZXR1cm4gKHVua25vd25FbGVtZW50Q2FjaGVbdGFnXSA9IChcbiAgICAgIGVsLmNvbnN0cnVjdG9yID09PSB3aW5kb3cuSFRNTFVua25vd25FbGVtZW50IHx8XG4gICAgICBlbC5jb25zdHJ1Y3RvciA9PT0gd2luZG93LkhUTUxFbGVtZW50XG4gICAgKSlcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gKHVua25vd25FbGVtZW50Q2FjaGVbdGFnXSA9IC9IVE1MVW5rbm93bkVsZW1lbnQvLnRlc3QoZWwudG9TdHJpbmcoKSkpXG4gIH1cbn1cblxudmFyIGlzVGV4dElucHV0VHlwZSA9IG1ha2VNYXAoJ3RleHQsbnVtYmVyLHBhc3N3b3JkLHNlYXJjaCxlbWFpbCx0ZWwsdXJsJyk7XG5cbi8qICAqL1xuXG4vKipcbiAqIFF1ZXJ5IGFuIGVsZW1lbnQgc2VsZWN0b3IgaWYgaXQncyBub3QgYW4gZWxlbWVudCBhbHJlYWR5LlxuICovXG5mdW5jdGlvbiBxdWVyeSAoZWwpIHtcbiAgaWYgKHR5cGVvZiBlbCA9PT0gJ3N0cmluZycpIHtcbiAgICB2YXIgc2VsZWN0ZWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGVsKTtcbiAgICBpZiAoIXNlbGVjdGVkKSB7XG4gICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHdhcm4oXG4gICAgICAgICdDYW5ub3QgZmluZCBlbGVtZW50OiAnICsgZWxcbiAgICAgICk7XG4gICAgICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICB9XG4gICAgcmV0dXJuIHNlbGVjdGVkXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGVsXG4gIH1cbn1cblxuLyogICovXG5cbmZ1bmN0aW9uIGNyZWF0ZUVsZW1lbnQkMSAodGFnTmFtZSwgdm5vZGUpIHtcbiAgdmFyIGVsbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGFnTmFtZSk7XG4gIGlmICh0YWdOYW1lICE9PSAnc2VsZWN0Jykge1xuICAgIHJldHVybiBlbG1cbiAgfVxuICAvLyBmYWxzZSBvciBudWxsIHdpbGwgcmVtb3ZlIHRoZSBhdHRyaWJ1dGUgYnV0IHVuZGVmaW5lZCB3aWxsIG5vdFxuICBpZiAodm5vZGUuZGF0YSAmJiB2bm9kZS5kYXRhLmF0dHJzICYmIHZub2RlLmRhdGEuYXR0cnMubXVsdGlwbGUgIT09IHVuZGVmaW5lZCkge1xuICAgIGVsbS5zZXRBdHRyaWJ1dGUoJ211bHRpcGxlJywgJ211bHRpcGxlJyk7XG4gIH1cbiAgcmV0dXJuIGVsbVxufVxuXG5mdW5jdGlvbiBjcmVhdGVFbGVtZW50TlMgKG5hbWVzcGFjZSwgdGFnTmFtZSkge1xuICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKG5hbWVzcGFjZU1hcFtuYW1lc3BhY2VdLCB0YWdOYW1lKVxufVxuXG5mdW5jdGlvbiBjcmVhdGVUZXh0Tm9kZSAodGV4dCkge1xuICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUodGV4dClcbn1cblxuZnVuY3Rpb24gY3JlYXRlQ29tbWVudCAodGV4dCkge1xuICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlQ29tbWVudCh0ZXh0KVxufVxuXG5mdW5jdGlvbiBpbnNlcnRCZWZvcmUgKHBhcmVudE5vZGUsIG5ld05vZGUsIHJlZmVyZW5jZU5vZGUpIHtcbiAgcGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobmV3Tm9kZSwgcmVmZXJlbmNlTm9kZSk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZUNoaWxkIChub2RlLCBjaGlsZCkge1xuICBub2RlLnJlbW92ZUNoaWxkKGNoaWxkKTtcbn1cblxuZnVuY3Rpb24gYXBwZW5kQ2hpbGQgKG5vZGUsIGNoaWxkKSB7XG4gIG5vZGUuYXBwZW5kQ2hpbGQoY2hpbGQpO1xufVxuXG5mdW5jdGlvbiBwYXJlbnROb2RlIChub2RlKSB7XG4gIHJldHVybiBub2RlLnBhcmVudE5vZGVcbn1cblxuZnVuY3Rpb24gbmV4dFNpYmxpbmcgKG5vZGUpIHtcbiAgcmV0dXJuIG5vZGUubmV4dFNpYmxpbmdcbn1cblxuZnVuY3Rpb24gdGFnTmFtZSAobm9kZSkge1xuICByZXR1cm4gbm9kZS50YWdOYW1lXG59XG5cbmZ1bmN0aW9uIHNldFRleHRDb250ZW50IChub2RlLCB0ZXh0KSB7XG4gIG5vZGUudGV4dENvbnRlbnQgPSB0ZXh0O1xufVxuXG5mdW5jdGlvbiBzZXRTdHlsZVNjb3BlIChub2RlLCBzY29wZUlkKSB7XG4gIG5vZGUuc2V0QXR0cmlidXRlKHNjb3BlSWQsICcnKTtcbn1cblxudmFyIG5vZGVPcHMgPSAvKiNfX1BVUkVfXyovT2JqZWN0LmZyZWV6ZSh7XG4gIGNyZWF0ZUVsZW1lbnQ6IGNyZWF0ZUVsZW1lbnQkMSxcbiAgY3JlYXRlRWxlbWVudE5TOiBjcmVhdGVFbGVtZW50TlMsXG4gIGNyZWF0ZVRleHROb2RlOiBjcmVhdGVUZXh0Tm9kZSxcbiAgY3JlYXRlQ29tbWVudDogY3JlYXRlQ29tbWVudCxcbiAgaW5zZXJ0QmVmb3JlOiBpbnNlcnRCZWZvcmUsXG4gIHJlbW92ZUNoaWxkOiByZW1vdmVDaGlsZCxcbiAgYXBwZW5kQ2hpbGQ6IGFwcGVuZENoaWxkLFxuICBwYXJlbnROb2RlOiBwYXJlbnROb2RlLFxuICBuZXh0U2libGluZzogbmV4dFNpYmxpbmcsXG4gIHRhZ05hbWU6IHRhZ05hbWUsXG4gIHNldFRleHRDb250ZW50OiBzZXRUZXh0Q29udGVudCxcbiAgc2V0U3R5bGVTY29wZTogc2V0U3R5bGVTY29wZVxufSk7XG5cbi8qICAqL1xuXG52YXIgcmVmID0ge1xuICBjcmVhdGU6IGZ1bmN0aW9uIGNyZWF0ZSAoXywgdm5vZGUpIHtcbiAgICByZWdpc3RlclJlZih2bm9kZSk7XG4gIH0sXG4gIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlIChvbGRWbm9kZSwgdm5vZGUpIHtcbiAgICBpZiAob2xkVm5vZGUuZGF0YS5yZWYgIT09IHZub2RlLmRhdGEucmVmKSB7XG4gICAgICByZWdpc3RlclJlZihvbGRWbm9kZSwgdHJ1ZSk7XG4gICAgICByZWdpc3RlclJlZih2bm9kZSk7XG4gICAgfVxuICB9LFxuICBkZXN0cm95OiBmdW5jdGlvbiBkZXN0cm95ICh2bm9kZSkge1xuICAgIHJlZ2lzdGVyUmVmKHZub2RlLCB0cnVlKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gcmVnaXN0ZXJSZWYgKHZub2RlLCBpc1JlbW92YWwpIHtcbiAgdmFyIGtleSA9IHZub2RlLmRhdGEucmVmO1xuICBpZiAoIWlzRGVmKGtleSkpIHsgcmV0dXJuIH1cblxuICB2YXIgdm0gPSB2bm9kZS5jb250ZXh0O1xuICB2YXIgcmVmID0gdm5vZGUuY29tcG9uZW50SW5zdGFuY2UgfHwgdm5vZGUuZWxtO1xuICB2YXIgcmVmcyA9IHZtLiRyZWZzO1xuICBpZiAoaXNSZW1vdmFsKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkocmVmc1trZXldKSkge1xuICAgICAgcmVtb3ZlKHJlZnNba2V5XSwgcmVmKTtcbiAgICB9IGVsc2UgaWYgKHJlZnNba2V5XSA9PT0gcmVmKSB7XG4gICAgICByZWZzW2tleV0gPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGlmICh2bm9kZS5kYXRhLnJlZkluRm9yKSB7XG4gICAgICBpZiAoIUFycmF5LmlzQXJyYXkocmVmc1trZXldKSkge1xuICAgICAgICByZWZzW2tleV0gPSBbcmVmXTtcbiAgICAgIH0gZWxzZSBpZiAocmVmc1trZXldLmluZGV4T2YocmVmKSA8IDApIHtcbiAgICAgICAgLy8gJGZsb3ctZGlzYWJsZS1saW5lXG4gICAgICAgIHJlZnNba2V5XS5wdXNoKHJlZik7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlZnNba2V5XSA9IHJlZjtcbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiBWaXJ0dWFsIERPTSBwYXRjaGluZyBhbGdvcml0aG0gYmFzZWQgb24gU25hYmJkb20gYnlcbiAqIFNpbW9uIEZyaWlzIFZpbmR1bSAoQHBhbGRlcGluZClcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZVxuICogaHR0cHM6Ly9naXRodWIuY29tL3BhbGRlcGluZC9zbmFiYmRvbS9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKlxuICogbW9kaWZpZWQgYnkgRXZhbiBZb3UgKEB5eXg5OTA4MDMpXG4gKlxuICogTm90IHR5cGUtY2hlY2tpbmcgdGhpcyBiZWNhdXNlIHRoaXMgZmlsZSBpcyBwZXJmLWNyaXRpY2FsIGFuZCB0aGUgY29zdFxuICogb2YgbWFraW5nIGZsb3cgdW5kZXJzdGFuZCBpdCBpcyBub3Qgd29ydGggaXQuXG4gKi9cblxudmFyIGVtcHR5Tm9kZSA9IG5ldyBWTm9kZSgnJywge30sIFtdKTtcblxudmFyIGhvb2tzID0gWydjcmVhdGUnLCAnYWN0aXZhdGUnLCAndXBkYXRlJywgJ3JlbW92ZScsICdkZXN0cm95J107XG5cbmZ1bmN0aW9uIHNhbWVWbm9kZSAoYSwgYikge1xuICByZXR1cm4gKFxuICAgIGEua2V5ID09PSBiLmtleSAmJiAoXG4gICAgICAoXG4gICAgICAgIGEudGFnID09PSBiLnRhZyAmJlxuICAgICAgICBhLmlzQ29tbWVudCA9PT0gYi5pc0NvbW1lbnQgJiZcbiAgICAgICAgaXNEZWYoYS5kYXRhKSA9PT0gaXNEZWYoYi5kYXRhKSAmJlxuICAgICAgICBzYW1lSW5wdXRUeXBlKGEsIGIpXG4gICAgICApIHx8IChcbiAgICAgICAgaXNUcnVlKGEuaXNBc3luY1BsYWNlaG9sZGVyKSAmJlxuICAgICAgICBhLmFzeW5jRmFjdG9yeSA9PT0gYi5hc3luY0ZhY3RvcnkgJiZcbiAgICAgICAgaXNVbmRlZihiLmFzeW5jRmFjdG9yeS5lcnJvcilcbiAgICAgIClcbiAgICApXG4gIClcbn1cblxuZnVuY3Rpb24gc2FtZUlucHV0VHlwZSAoYSwgYikge1xuICBpZiAoYS50YWcgIT09ICdpbnB1dCcpIHsgcmV0dXJuIHRydWUgfVxuICB2YXIgaTtcbiAgdmFyIHR5cGVBID0gaXNEZWYoaSA9IGEuZGF0YSkgJiYgaXNEZWYoaSA9IGkuYXR0cnMpICYmIGkudHlwZTtcbiAgdmFyIHR5cGVCID0gaXNEZWYoaSA9IGIuZGF0YSkgJiYgaXNEZWYoaSA9IGkuYXR0cnMpICYmIGkudHlwZTtcbiAgcmV0dXJuIHR5cGVBID09PSB0eXBlQiB8fCBpc1RleHRJbnB1dFR5cGUodHlwZUEpICYmIGlzVGV4dElucHV0VHlwZSh0eXBlQilcbn1cblxuZnVuY3Rpb24gY3JlYXRlS2V5VG9PbGRJZHggKGNoaWxkcmVuLCBiZWdpbklkeCwgZW5kSWR4KSB7XG4gIHZhciBpLCBrZXk7XG4gIHZhciBtYXAgPSB7fTtcbiAgZm9yIChpID0gYmVnaW5JZHg7IGkgPD0gZW5kSWR4OyArK2kpIHtcbiAgICBrZXkgPSBjaGlsZHJlbltpXS5rZXk7XG4gICAgaWYgKGlzRGVmKGtleSkpIHsgbWFwW2tleV0gPSBpOyB9XG4gIH1cbiAgcmV0dXJuIG1hcFxufVxuXG5mdW5jdGlvbiBjcmVhdGVQYXRjaEZ1bmN0aW9uIChiYWNrZW5kKSB7XG4gIHZhciBpLCBqO1xuICB2YXIgY2JzID0ge307XG5cbiAgdmFyIG1vZHVsZXMgPSBiYWNrZW5kLm1vZHVsZXM7XG4gIHZhciBub2RlT3BzID0gYmFja2VuZC5ub2RlT3BzO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBob29rcy5sZW5ndGg7ICsraSkge1xuICAgIGNic1tob29rc1tpXV0gPSBbXTtcbiAgICBmb3IgKGogPSAwOyBqIDwgbW9kdWxlcy5sZW5ndGg7ICsraikge1xuICAgICAgaWYgKGlzRGVmKG1vZHVsZXNbal1baG9va3NbaV1dKSkge1xuICAgICAgICBjYnNbaG9va3NbaV1dLnB1c2gobW9kdWxlc1tqXVtob29rc1tpXV0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGVtcHR5Tm9kZUF0IChlbG0pIHtcbiAgICByZXR1cm4gbmV3IFZOb2RlKG5vZGVPcHMudGFnTmFtZShlbG0pLnRvTG93ZXJDYXNlKCksIHt9LCBbXSwgdW5kZWZpbmVkLCBlbG0pXG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVSbUNiIChjaGlsZEVsbSwgbGlzdGVuZXJzKSB7XG4gICAgZnVuY3Rpb24gcmVtb3ZlJCQxICgpIHtcbiAgICAgIGlmICgtLXJlbW92ZSQkMS5saXN0ZW5lcnMgPT09IDApIHtcbiAgICAgICAgcmVtb3ZlTm9kZShjaGlsZEVsbSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJlbW92ZSQkMS5saXN0ZW5lcnMgPSBsaXN0ZW5lcnM7XG4gICAgcmV0dXJuIHJlbW92ZSQkMVxuICB9XG5cbiAgZnVuY3Rpb24gcmVtb3ZlTm9kZSAoZWwpIHtcbiAgICB2YXIgcGFyZW50ID0gbm9kZU9wcy5wYXJlbnROb2RlKGVsKTtcbiAgICAvLyBlbGVtZW50IG1heSBoYXZlIGFscmVhZHkgYmVlbiByZW1vdmVkIGR1ZSB0byB2LWh0bWwgLyB2LXRleHRcbiAgICBpZiAoaXNEZWYocGFyZW50KSkge1xuICAgICAgbm9kZU9wcy5yZW1vdmVDaGlsZChwYXJlbnQsIGVsKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBpc1Vua25vd25FbGVtZW50JCQxICh2bm9kZSwgaW5WUHJlKSB7XG4gICAgcmV0dXJuIChcbiAgICAgICFpblZQcmUgJiZcbiAgICAgICF2bm9kZS5ucyAmJlxuICAgICAgIShcbiAgICAgICAgY29uZmlnLmlnbm9yZWRFbGVtZW50cy5sZW5ndGggJiZcbiAgICAgICAgY29uZmlnLmlnbm9yZWRFbGVtZW50cy5zb21lKGZ1bmN0aW9uIChpZ25vcmUpIHtcbiAgICAgICAgICByZXR1cm4gaXNSZWdFeHAoaWdub3JlKVxuICAgICAgICAgICAgPyBpZ25vcmUudGVzdCh2bm9kZS50YWcpXG4gICAgICAgICAgICA6IGlnbm9yZSA9PT0gdm5vZGUudGFnXG4gICAgICAgIH0pXG4gICAgICApICYmXG4gICAgICBjb25maWcuaXNVbmtub3duRWxlbWVudCh2bm9kZS50YWcpXG4gICAgKVxuICB9XG5cbiAgdmFyIGNyZWF0aW5nRWxtSW5WUHJlID0gMDtcblxuICBmdW5jdGlvbiBjcmVhdGVFbG0gKFxuICAgIHZub2RlLFxuICAgIGluc2VydGVkVm5vZGVRdWV1ZSxcbiAgICBwYXJlbnRFbG0sXG4gICAgcmVmRWxtLFxuICAgIG5lc3RlZCxcbiAgICBvd25lckFycmF5LFxuICAgIGluZGV4XG4gICkge1xuICAgIGlmIChpc0RlZih2bm9kZS5lbG0pICYmIGlzRGVmKG93bmVyQXJyYXkpKSB7XG4gICAgICAvLyBUaGlzIHZub2RlIHdhcyB1c2VkIGluIGEgcHJldmlvdXMgcmVuZGVyIVxuICAgICAgLy8gbm93IGl0J3MgdXNlZCBhcyBhIG5ldyBub2RlLCBvdmVyd3JpdGluZyBpdHMgZWxtIHdvdWxkIGNhdXNlXG4gICAgICAvLyBwb3RlbnRpYWwgcGF0Y2ggZXJyb3JzIGRvd24gdGhlIHJvYWQgd2hlbiBpdCdzIHVzZWQgYXMgYW4gaW5zZXJ0aW9uXG4gICAgICAvLyByZWZlcmVuY2Ugbm9kZS4gSW5zdGVhZCwgd2UgY2xvbmUgdGhlIG5vZGUgb24tZGVtYW5kIGJlZm9yZSBjcmVhdGluZ1xuICAgICAgLy8gYXNzb2NpYXRlZCBET00gZWxlbWVudCBmb3IgaXQuXG4gICAgICB2bm9kZSA9IG93bmVyQXJyYXlbaW5kZXhdID0gY2xvbmVWTm9kZSh2bm9kZSk7XG4gICAgfVxuXG4gICAgdm5vZGUuaXNSb290SW5zZXJ0ID0gIW5lc3RlZDsgLy8gZm9yIHRyYW5zaXRpb24gZW50ZXIgY2hlY2tcbiAgICBpZiAoY3JlYXRlQ29tcG9uZW50KHZub2RlLCBpbnNlcnRlZFZub2RlUXVldWUsIHBhcmVudEVsbSwgcmVmRWxtKSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgdmFyIGRhdGEgPSB2bm9kZS5kYXRhO1xuICAgIHZhciBjaGlsZHJlbiA9IHZub2RlLmNoaWxkcmVuO1xuICAgIHZhciB0YWcgPSB2bm9kZS50YWc7XG4gICAgaWYgKGlzRGVmKHRhZykpIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIGlmIChkYXRhICYmIGRhdGEucHJlKSB7XG4gICAgICAgICAgY3JlYXRpbmdFbG1JblZQcmUrKztcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNVbmtub3duRWxlbWVudCQkMSh2bm9kZSwgY3JlYXRpbmdFbG1JblZQcmUpKSB7XG4gICAgICAgICAgd2FybihcbiAgICAgICAgICAgICdVbmtub3duIGN1c3RvbSBlbGVtZW50OiA8JyArIHRhZyArICc+IC0gZGlkIHlvdSAnICtcbiAgICAgICAgICAgICdyZWdpc3RlciB0aGUgY29tcG9uZW50IGNvcnJlY3RseT8gRm9yIHJlY3Vyc2l2ZSBjb21wb25lbnRzLCAnICtcbiAgICAgICAgICAgICdtYWtlIHN1cmUgdG8gcHJvdmlkZSB0aGUgXCJuYW1lXCIgb3B0aW9uLicsXG4gICAgICAgICAgICB2bm9kZS5jb250ZXh0XG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB2bm9kZS5lbG0gPSB2bm9kZS5uc1xuICAgICAgICA/IG5vZGVPcHMuY3JlYXRlRWxlbWVudE5TKHZub2RlLm5zLCB0YWcpXG4gICAgICAgIDogbm9kZU9wcy5jcmVhdGVFbGVtZW50KHRhZywgdm5vZGUpO1xuICAgICAgc2V0U2NvcGUodm5vZGUpO1xuXG4gICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICAgIHtcbiAgICAgICAgY3JlYXRlQ2hpbGRyZW4odm5vZGUsIGNoaWxkcmVuLCBpbnNlcnRlZFZub2RlUXVldWUpO1xuICAgICAgICBpZiAoaXNEZWYoZGF0YSkpIHtcbiAgICAgICAgICBpbnZva2VDcmVhdGVIb29rcyh2bm9kZSwgaW5zZXJ0ZWRWbm9kZVF1ZXVlKTtcbiAgICAgICAgfVxuICAgICAgICBpbnNlcnQocGFyZW50RWxtLCB2bm9kZS5lbG0sIHJlZkVsbSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGRhdGEgJiYgZGF0YS5wcmUpIHtcbiAgICAgICAgY3JlYXRpbmdFbG1JblZQcmUtLTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGlzVHJ1ZSh2bm9kZS5pc0NvbW1lbnQpKSB7XG4gICAgICB2bm9kZS5lbG0gPSBub2RlT3BzLmNyZWF0ZUNvbW1lbnQodm5vZGUudGV4dCk7XG4gICAgICBpbnNlcnQocGFyZW50RWxtLCB2bm9kZS5lbG0sIHJlZkVsbSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZub2RlLmVsbSA9IG5vZGVPcHMuY3JlYXRlVGV4dE5vZGUodm5vZGUudGV4dCk7XG4gICAgICBpbnNlcnQocGFyZW50RWxtLCB2bm9kZS5lbG0sIHJlZkVsbSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlQ29tcG9uZW50ICh2bm9kZSwgaW5zZXJ0ZWRWbm9kZVF1ZXVlLCBwYXJlbnRFbG0sIHJlZkVsbSkge1xuICAgIHZhciBpID0gdm5vZGUuZGF0YTtcbiAgICBpZiAoaXNEZWYoaSkpIHtcbiAgICAgIHZhciBpc1JlYWN0aXZhdGVkID0gaXNEZWYodm5vZGUuY29tcG9uZW50SW5zdGFuY2UpICYmIGkua2VlcEFsaXZlO1xuICAgICAgaWYgKGlzRGVmKGkgPSBpLmhvb2spICYmIGlzRGVmKGkgPSBpLmluaXQpKSB7XG4gICAgICAgIGkodm5vZGUsIGZhbHNlIC8qIGh5ZHJhdGluZyAqLyk7XG4gICAgICB9XG4gICAgICAvLyBhZnRlciBjYWxsaW5nIHRoZSBpbml0IGhvb2ssIGlmIHRoZSB2bm9kZSBpcyBhIGNoaWxkIGNvbXBvbmVudFxuICAgICAgLy8gaXQgc2hvdWxkJ3ZlIGNyZWF0ZWQgYSBjaGlsZCBpbnN0YW5jZSBhbmQgbW91bnRlZCBpdC4gdGhlIGNoaWxkXG4gICAgICAvLyBjb21wb25lbnQgYWxzbyBoYXMgc2V0IHRoZSBwbGFjZWhvbGRlciB2bm9kZSdzIGVsbS5cbiAgICAgIC8vIGluIHRoYXQgY2FzZSB3ZSBjYW4ganVzdCByZXR1cm4gdGhlIGVsZW1lbnQgYW5kIGJlIGRvbmUuXG4gICAgICBpZiAoaXNEZWYodm5vZGUuY29tcG9uZW50SW5zdGFuY2UpKSB7XG4gICAgICAgIGluaXRDb21wb25lbnQodm5vZGUsIGluc2VydGVkVm5vZGVRdWV1ZSk7XG4gICAgICAgIGluc2VydChwYXJlbnRFbG0sIHZub2RlLmVsbSwgcmVmRWxtKTtcbiAgICAgICAgaWYgKGlzVHJ1ZShpc1JlYWN0aXZhdGVkKSkge1xuICAgICAgICAgIHJlYWN0aXZhdGVDb21wb25lbnQodm5vZGUsIGluc2VydGVkVm5vZGVRdWV1ZSwgcGFyZW50RWxtLCByZWZFbG0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaW5pdENvbXBvbmVudCAodm5vZGUsIGluc2VydGVkVm5vZGVRdWV1ZSkge1xuICAgIGlmIChpc0RlZih2bm9kZS5kYXRhLnBlbmRpbmdJbnNlcnQpKSB7XG4gICAgICBpbnNlcnRlZFZub2RlUXVldWUucHVzaC5hcHBseShpbnNlcnRlZFZub2RlUXVldWUsIHZub2RlLmRhdGEucGVuZGluZ0luc2VydCk7XG4gICAgICB2bm9kZS5kYXRhLnBlbmRpbmdJbnNlcnQgPSBudWxsO1xuICAgIH1cbiAgICB2bm9kZS5lbG0gPSB2bm9kZS5jb21wb25lbnRJbnN0YW5jZS4kZWw7XG4gICAgaWYgKGlzUGF0Y2hhYmxlKHZub2RlKSkge1xuICAgICAgaW52b2tlQ3JlYXRlSG9va3Modm5vZGUsIGluc2VydGVkVm5vZGVRdWV1ZSk7XG4gICAgICBzZXRTY29wZSh2bm9kZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGVtcHR5IGNvbXBvbmVudCByb290LlxuICAgICAgLy8gc2tpcCBhbGwgZWxlbWVudC1yZWxhdGVkIG1vZHVsZXMgZXhjZXB0IGZvciByZWYgKCMzNDU1KVxuICAgICAgcmVnaXN0ZXJSZWYodm5vZGUpO1xuICAgICAgLy8gbWFrZSBzdXJlIHRvIGludm9rZSB0aGUgaW5zZXJ0IGhvb2tcbiAgICAgIGluc2VydGVkVm5vZGVRdWV1ZS5wdXNoKHZub2RlKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZWFjdGl2YXRlQ29tcG9uZW50ICh2bm9kZSwgaW5zZXJ0ZWRWbm9kZVF1ZXVlLCBwYXJlbnRFbG0sIHJlZkVsbSkge1xuICAgIHZhciBpO1xuICAgIC8vIGhhY2sgZm9yICM0MzM5OiBhIHJlYWN0aXZhdGVkIGNvbXBvbmVudCB3aXRoIGlubmVyIHRyYW5zaXRpb25cbiAgICAvLyBkb2VzIG5vdCB0cmlnZ2VyIGJlY2F1c2UgdGhlIGlubmVyIG5vZGUncyBjcmVhdGVkIGhvb2tzIGFyZSBub3QgY2FsbGVkXG4gICAgLy8gYWdhaW4uIEl0J3Mgbm90IGlkZWFsIHRvIGludm9sdmUgbW9kdWxlLXNwZWNpZmljIGxvZ2ljIGluIGhlcmUgYnV0XG4gICAgLy8gdGhlcmUgZG9lc24ndCBzZWVtIHRvIGJlIGEgYmV0dGVyIHdheSB0byBkbyBpdC5cbiAgICB2YXIgaW5uZXJOb2RlID0gdm5vZGU7XG4gICAgd2hpbGUgKGlubmVyTm9kZS5jb21wb25lbnRJbnN0YW5jZSkge1xuICAgICAgaW5uZXJOb2RlID0gaW5uZXJOb2RlLmNvbXBvbmVudEluc3RhbmNlLl92bm9kZTtcbiAgICAgIGlmIChpc0RlZihpID0gaW5uZXJOb2RlLmRhdGEpICYmIGlzRGVmKGkgPSBpLnRyYW5zaXRpb24pKSB7XG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBjYnMuYWN0aXZhdGUubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICBjYnMuYWN0aXZhdGVbaV0oZW1wdHlOb2RlLCBpbm5lck5vZGUpO1xuICAgICAgICB9XG4gICAgICAgIGluc2VydGVkVm5vZGVRdWV1ZS5wdXNoKGlubmVyTm9kZSk7XG4gICAgICAgIGJyZWFrXG4gICAgICB9XG4gICAgfVxuICAgIC8vIHVubGlrZSBhIG5ld2x5IGNyZWF0ZWQgY29tcG9uZW50LFxuICAgIC8vIGEgcmVhY3RpdmF0ZWQga2VlcC1hbGl2ZSBjb21wb25lbnQgZG9lc24ndCBpbnNlcnQgaXRzZWxmXG4gICAgaW5zZXJ0KHBhcmVudEVsbSwgdm5vZGUuZWxtLCByZWZFbG0pO1xuICB9XG5cbiAgZnVuY3Rpb24gaW5zZXJ0IChwYXJlbnQsIGVsbSwgcmVmJCQxKSB7XG4gICAgaWYgKGlzRGVmKHBhcmVudCkpIHtcbiAgICAgIGlmIChpc0RlZihyZWYkJDEpKSB7XG4gICAgICAgIGlmIChub2RlT3BzLnBhcmVudE5vZGUocmVmJCQxKSA9PT0gcGFyZW50KSB7XG4gICAgICAgICAgbm9kZU9wcy5pbnNlcnRCZWZvcmUocGFyZW50LCBlbG0sIHJlZiQkMSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5vZGVPcHMuYXBwZW5kQ2hpbGQocGFyZW50LCBlbG0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUNoaWxkcmVuICh2bm9kZSwgY2hpbGRyZW4sIGluc2VydGVkVm5vZGVRdWV1ZSkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGNoaWxkcmVuKSkge1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgY2hlY2tEdXBsaWNhdGVLZXlzKGNoaWxkcmVuKTtcbiAgICAgIH1cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgY3JlYXRlRWxtKGNoaWxkcmVuW2ldLCBpbnNlcnRlZFZub2RlUXVldWUsIHZub2RlLmVsbSwgbnVsbCwgdHJ1ZSwgY2hpbGRyZW4sIGkpO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoaXNQcmltaXRpdmUodm5vZGUudGV4dCkpIHtcbiAgICAgIG5vZGVPcHMuYXBwZW5kQ2hpbGQodm5vZGUuZWxtLCBub2RlT3BzLmNyZWF0ZVRleHROb2RlKFN0cmluZyh2bm9kZS50ZXh0KSkpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGlzUGF0Y2hhYmxlICh2bm9kZSkge1xuICAgIHdoaWxlICh2bm9kZS5jb21wb25lbnRJbnN0YW5jZSkge1xuICAgICAgdm5vZGUgPSB2bm9kZS5jb21wb25lbnRJbnN0YW5jZS5fdm5vZGU7XG4gICAgfVxuICAgIHJldHVybiBpc0RlZih2bm9kZS50YWcpXG4gIH1cblxuICBmdW5jdGlvbiBpbnZva2VDcmVhdGVIb29rcyAodm5vZGUsIGluc2VydGVkVm5vZGVRdWV1ZSkge1xuICAgIGZvciAodmFyIGkkMSA9IDA7IGkkMSA8IGNicy5jcmVhdGUubGVuZ3RoOyArK2kkMSkge1xuICAgICAgY2JzLmNyZWF0ZVtpJDFdKGVtcHR5Tm9kZSwgdm5vZGUpO1xuICAgIH1cbiAgICBpID0gdm5vZGUuZGF0YS5ob29rOyAvLyBSZXVzZSB2YXJpYWJsZVxuICAgIGlmIChpc0RlZihpKSkge1xuICAgICAgaWYgKGlzRGVmKGkuY3JlYXRlKSkgeyBpLmNyZWF0ZShlbXB0eU5vZGUsIHZub2RlKTsgfVxuICAgICAgaWYgKGlzRGVmKGkuaW5zZXJ0KSkgeyBpbnNlcnRlZFZub2RlUXVldWUucHVzaCh2bm9kZSk7IH1cbiAgICB9XG4gIH1cblxuICAvLyBzZXQgc2NvcGUgaWQgYXR0cmlidXRlIGZvciBzY29wZWQgQ1NTLlxuICAvLyB0aGlzIGlzIGltcGxlbWVudGVkIGFzIGEgc3BlY2lhbCBjYXNlIHRvIGF2b2lkIHRoZSBvdmVyaGVhZFxuICAvLyBvZiBnb2luZyB0aHJvdWdoIHRoZSBub3JtYWwgYXR0cmlidXRlIHBhdGNoaW5nIHByb2Nlc3MuXG4gIGZ1bmN0aW9uIHNldFNjb3BlICh2bm9kZSkge1xuICAgIHZhciBpO1xuICAgIGlmIChpc0RlZihpID0gdm5vZGUuZm5TY29wZUlkKSkge1xuICAgICAgbm9kZU9wcy5zZXRTdHlsZVNjb3BlKHZub2RlLmVsbSwgaSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhbmNlc3RvciA9IHZub2RlO1xuICAgICAgd2hpbGUgKGFuY2VzdG9yKSB7XG4gICAgICAgIGlmIChpc0RlZihpID0gYW5jZXN0b3IuY29udGV4dCkgJiYgaXNEZWYoaSA9IGkuJG9wdGlvbnMuX3Njb3BlSWQpKSB7XG4gICAgICAgICAgbm9kZU9wcy5zZXRTdHlsZVNjb3BlKHZub2RlLmVsbSwgaSk7XG4gICAgICAgIH1cbiAgICAgICAgYW5jZXN0b3IgPSBhbmNlc3Rvci5wYXJlbnQ7XG4gICAgICB9XG4gICAgfVxuICAgIC8vIGZvciBzbG90IGNvbnRlbnQgdGhleSBzaG91bGQgYWxzbyBnZXQgdGhlIHNjb3BlSWQgZnJvbSB0aGUgaG9zdCBpbnN0YW5jZS5cbiAgICBpZiAoaXNEZWYoaSA9IGFjdGl2ZUluc3RhbmNlKSAmJlxuICAgICAgaSAhPT0gdm5vZGUuY29udGV4dCAmJlxuICAgICAgaSAhPT0gdm5vZGUuZm5Db250ZXh0ICYmXG4gICAgICBpc0RlZihpID0gaS4kb3B0aW9ucy5fc2NvcGVJZClcbiAgICApIHtcbiAgICAgIG5vZGVPcHMuc2V0U3R5bGVTY29wZSh2bm9kZS5lbG0sIGkpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGFkZFZub2RlcyAocGFyZW50RWxtLCByZWZFbG0sIHZub2Rlcywgc3RhcnRJZHgsIGVuZElkeCwgaW5zZXJ0ZWRWbm9kZVF1ZXVlKSB7XG4gICAgZm9yICg7IHN0YXJ0SWR4IDw9IGVuZElkeDsgKytzdGFydElkeCkge1xuICAgICAgY3JlYXRlRWxtKHZub2Rlc1tzdGFydElkeF0sIGluc2VydGVkVm5vZGVRdWV1ZSwgcGFyZW50RWxtLCByZWZFbG0sIGZhbHNlLCB2bm9kZXMsIHN0YXJ0SWR4KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBpbnZva2VEZXN0cm95SG9vayAodm5vZGUpIHtcbiAgICB2YXIgaSwgajtcbiAgICB2YXIgZGF0YSA9IHZub2RlLmRhdGE7XG4gICAgaWYgKGlzRGVmKGRhdGEpKSB7XG4gICAgICBpZiAoaXNEZWYoaSA9IGRhdGEuaG9vaykgJiYgaXNEZWYoaSA9IGkuZGVzdHJveSkpIHsgaSh2bm9kZSk7IH1cbiAgICAgIGZvciAoaSA9IDA7IGkgPCBjYnMuZGVzdHJveS5sZW5ndGg7ICsraSkgeyBjYnMuZGVzdHJveVtpXSh2bm9kZSk7IH1cbiAgICB9XG4gICAgaWYgKGlzRGVmKGkgPSB2bm9kZS5jaGlsZHJlbikpIHtcbiAgICAgIGZvciAoaiA9IDA7IGogPCB2bm9kZS5jaGlsZHJlbi5sZW5ndGg7ICsraikge1xuICAgICAgICBpbnZva2VEZXN0cm95SG9vayh2bm9kZS5jaGlsZHJlbltqXSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmVtb3ZlVm5vZGVzICh2bm9kZXMsIHN0YXJ0SWR4LCBlbmRJZHgpIHtcbiAgICBmb3IgKDsgc3RhcnRJZHggPD0gZW5kSWR4OyArK3N0YXJ0SWR4KSB7XG4gICAgICB2YXIgY2ggPSB2bm9kZXNbc3RhcnRJZHhdO1xuICAgICAgaWYgKGlzRGVmKGNoKSkge1xuICAgICAgICBpZiAoaXNEZWYoY2gudGFnKSkge1xuICAgICAgICAgIHJlbW92ZUFuZEludm9rZVJlbW92ZUhvb2soY2gpO1xuICAgICAgICAgIGludm9rZURlc3Ryb3lIb29rKGNoKTtcbiAgICAgICAgfSBlbHNlIHsgLy8gVGV4dCBub2RlXG4gICAgICAgICAgcmVtb3ZlTm9kZShjaC5lbG0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmVtb3ZlQW5kSW52b2tlUmVtb3ZlSG9vayAodm5vZGUsIHJtKSB7XG4gICAgaWYgKGlzRGVmKHJtKSB8fCBpc0RlZih2bm9kZS5kYXRhKSkge1xuICAgICAgdmFyIGk7XG4gICAgICB2YXIgbGlzdGVuZXJzID0gY2JzLnJlbW92ZS5sZW5ndGggKyAxO1xuICAgICAgaWYgKGlzRGVmKHJtKSkge1xuICAgICAgICAvLyB3ZSBoYXZlIGEgcmVjdXJzaXZlbHkgcGFzc2VkIGRvd24gcm0gY2FsbGJhY2tcbiAgICAgICAgLy8gaW5jcmVhc2UgdGhlIGxpc3RlbmVycyBjb3VudFxuICAgICAgICBybS5saXN0ZW5lcnMgKz0gbGlzdGVuZXJzO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gZGlyZWN0bHkgcmVtb3ZpbmdcbiAgICAgICAgcm0gPSBjcmVhdGVSbUNiKHZub2RlLmVsbSwgbGlzdGVuZXJzKTtcbiAgICAgIH1cbiAgICAgIC8vIHJlY3Vyc2l2ZWx5IGludm9rZSBob29rcyBvbiBjaGlsZCBjb21wb25lbnQgcm9vdCBub2RlXG4gICAgICBpZiAoaXNEZWYoaSA9IHZub2RlLmNvbXBvbmVudEluc3RhbmNlKSAmJiBpc0RlZihpID0gaS5fdm5vZGUpICYmIGlzRGVmKGkuZGF0YSkpIHtcbiAgICAgICAgcmVtb3ZlQW5kSW52b2tlUmVtb3ZlSG9vayhpLCBybSk7XG4gICAgICB9XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgY2JzLnJlbW92ZS5sZW5ndGg7ICsraSkge1xuICAgICAgICBjYnMucmVtb3ZlW2ldKHZub2RlLCBybSk7XG4gICAgICB9XG4gICAgICBpZiAoaXNEZWYoaSA9IHZub2RlLmRhdGEuaG9vaykgJiYgaXNEZWYoaSA9IGkucmVtb3ZlKSkge1xuICAgICAgICBpKHZub2RlLCBybSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBybSgpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICByZW1vdmVOb2RlKHZub2RlLmVsbSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gdXBkYXRlQ2hpbGRyZW4gKHBhcmVudEVsbSwgb2xkQ2gsIG5ld0NoLCBpbnNlcnRlZFZub2RlUXVldWUsIHJlbW92ZU9ubHkpIHtcbiAgICB2YXIgb2xkU3RhcnRJZHggPSAwO1xuICAgIHZhciBuZXdTdGFydElkeCA9IDA7XG4gICAgdmFyIG9sZEVuZElkeCA9IG9sZENoLmxlbmd0aCAtIDE7XG4gICAgdmFyIG9sZFN0YXJ0Vm5vZGUgPSBvbGRDaFswXTtcbiAgICB2YXIgb2xkRW5kVm5vZGUgPSBvbGRDaFtvbGRFbmRJZHhdO1xuICAgIHZhciBuZXdFbmRJZHggPSBuZXdDaC5sZW5ndGggLSAxO1xuICAgIHZhciBuZXdTdGFydFZub2RlID0gbmV3Q2hbMF07XG4gICAgdmFyIG5ld0VuZFZub2RlID0gbmV3Q2hbbmV3RW5kSWR4XTtcbiAgICB2YXIgb2xkS2V5VG9JZHgsIGlkeEluT2xkLCB2bm9kZVRvTW92ZSwgcmVmRWxtO1xuXG4gICAgLy8gcmVtb3ZlT25seSBpcyBhIHNwZWNpYWwgZmxhZyB1c2VkIG9ubHkgYnkgPHRyYW5zaXRpb24tZ3JvdXA+XG4gICAgLy8gdG8gZW5zdXJlIHJlbW92ZWQgZWxlbWVudHMgc3RheSBpbiBjb3JyZWN0IHJlbGF0aXZlIHBvc2l0aW9uc1xuICAgIC8vIGR1cmluZyBsZWF2aW5nIHRyYW5zaXRpb25zXG4gICAgdmFyIGNhbk1vdmUgPSAhcmVtb3ZlT25seTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICBjaGVja0R1cGxpY2F0ZUtleXMobmV3Q2gpO1xuICAgIH1cblxuICAgIHdoaWxlIChvbGRTdGFydElkeCA8PSBvbGRFbmRJZHggJiYgbmV3U3RhcnRJZHggPD0gbmV3RW5kSWR4KSB7XG4gICAgICBpZiAoaXNVbmRlZihvbGRTdGFydFZub2RlKSkge1xuICAgICAgICBvbGRTdGFydFZub2RlID0gb2xkQ2hbKytvbGRTdGFydElkeF07IC8vIFZub2RlIGhhcyBiZWVuIG1vdmVkIGxlZnRcbiAgICAgIH0gZWxzZSBpZiAoaXNVbmRlZihvbGRFbmRWbm9kZSkpIHtcbiAgICAgICAgb2xkRW5kVm5vZGUgPSBvbGRDaFstLW9sZEVuZElkeF07XG4gICAgICB9IGVsc2UgaWYgKHNhbWVWbm9kZShvbGRTdGFydFZub2RlLCBuZXdTdGFydFZub2RlKSkge1xuICAgICAgICBwYXRjaFZub2RlKG9sZFN0YXJ0Vm5vZGUsIG5ld1N0YXJ0Vm5vZGUsIGluc2VydGVkVm5vZGVRdWV1ZSwgbmV3Q2gsIG5ld1N0YXJ0SWR4KTtcbiAgICAgICAgb2xkU3RhcnRWbm9kZSA9IG9sZENoWysrb2xkU3RhcnRJZHhdO1xuICAgICAgICBuZXdTdGFydFZub2RlID0gbmV3Q2hbKytuZXdTdGFydElkeF07XG4gICAgICB9IGVsc2UgaWYgKHNhbWVWbm9kZShvbGRFbmRWbm9kZSwgbmV3RW5kVm5vZGUpKSB7XG4gICAgICAgIHBhdGNoVm5vZGUob2xkRW5kVm5vZGUsIG5ld0VuZFZub2RlLCBpbnNlcnRlZFZub2RlUXVldWUsIG5ld0NoLCBuZXdFbmRJZHgpO1xuICAgICAgICBvbGRFbmRWbm9kZSA9IG9sZENoWy0tb2xkRW5kSWR4XTtcbiAgICAgICAgbmV3RW5kVm5vZGUgPSBuZXdDaFstLW5ld0VuZElkeF07XG4gICAgICB9IGVsc2UgaWYgKHNhbWVWbm9kZShvbGRTdGFydFZub2RlLCBuZXdFbmRWbm9kZSkpIHsgLy8gVm5vZGUgbW92ZWQgcmlnaHRcbiAgICAgICAgcGF0Y2hWbm9kZShvbGRTdGFydFZub2RlLCBuZXdFbmRWbm9kZSwgaW5zZXJ0ZWRWbm9kZVF1ZXVlLCBuZXdDaCwgbmV3RW5kSWR4KTtcbiAgICAgICAgY2FuTW92ZSAmJiBub2RlT3BzLmluc2VydEJlZm9yZShwYXJlbnRFbG0sIG9sZFN0YXJ0Vm5vZGUuZWxtLCBub2RlT3BzLm5leHRTaWJsaW5nKG9sZEVuZFZub2RlLmVsbSkpO1xuICAgICAgICBvbGRTdGFydFZub2RlID0gb2xkQ2hbKytvbGRTdGFydElkeF07XG4gICAgICAgIG5ld0VuZFZub2RlID0gbmV3Q2hbLS1uZXdFbmRJZHhdO1xuICAgICAgfSBlbHNlIGlmIChzYW1lVm5vZGUob2xkRW5kVm5vZGUsIG5ld1N0YXJ0Vm5vZGUpKSB7IC8vIFZub2RlIG1vdmVkIGxlZnRcbiAgICAgICAgcGF0Y2hWbm9kZShvbGRFbmRWbm9kZSwgbmV3U3RhcnRWbm9kZSwgaW5zZXJ0ZWRWbm9kZVF1ZXVlLCBuZXdDaCwgbmV3U3RhcnRJZHgpO1xuICAgICAgICBjYW5Nb3ZlICYmIG5vZGVPcHMuaW5zZXJ0QmVmb3JlKHBhcmVudEVsbSwgb2xkRW5kVm5vZGUuZWxtLCBvbGRTdGFydFZub2RlLmVsbSk7XG4gICAgICAgIG9sZEVuZFZub2RlID0gb2xkQ2hbLS1vbGRFbmRJZHhdO1xuICAgICAgICBuZXdTdGFydFZub2RlID0gbmV3Q2hbKytuZXdTdGFydElkeF07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoaXNVbmRlZihvbGRLZXlUb0lkeCkpIHsgb2xkS2V5VG9JZHggPSBjcmVhdGVLZXlUb09sZElkeChvbGRDaCwgb2xkU3RhcnRJZHgsIG9sZEVuZElkeCk7IH1cbiAgICAgICAgaWR4SW5PbGQgPSBpc0RlZihuZXdTdGFydFZub2RlLmtleSlcbiAgICAgICAgICA/IG9sZEtleVRvSWR4W25ld1N0YXJ0Vm5vZGUua2V5XVxuICAgICAgICAgIDogZmluZElkeEluT2xkKG5ld1N0YXJ0Vm5vZGUsIG9sZENoLCBvbGRTdGFydElkeCwgb2xkRW5kSWR4KTtcbiAgICAgICAgaWYgKGlzVW5kZWYoaWR4SW5PbGQpKSB7IC8vIE5ldyBlbGVtZW50XG4gICAgICAgICAgY3JlYXRlRWxtKG5ld1N0YXJ0Vm5vZGUsIGluc2VydGVkVm5vZGVRdWV1ZSwgcGFyZW50RWxtLCBvbGRTdGFydFZub2RlLmVsbSwgZmFsc2UsIG5ld0NoLCBuZXdTdGFydElkeCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdm5vZGVUb01vdmUgPSBvbGRDaFtpZHhJbk9sZF07XG4gICAgICAgICAgaWYgKHNhbWVWbm9kZSh2bm9kZVRvTW92ZSwgbmV3U3RhcnRWbm9kZSkpIHtcbiAgICAgICAgICAgIHBhdGNoVm5vZGUodm5vZGVUb01vdmUsIG5ld1N0YXJ0Vm5vZGUsIGluc2VydGVkVm5vZGVRdWV1ZSwgbmV3Q2gsIG5ld1N0YXJ0SWR4KTtcbiAgICAgICAgICAgIG9sZENoW2lkeEluT2xkXSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIGNhbk1vdmUgJiYgbm9kZU9wcy5pbnNlcnRCZWZvcmUocGFyZW50RWxtLCB2bm9kZVRvTW92ZS5lbG0sIG9sZFN0YXJ0Vm5vZGUuZWxtKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gc2FtZSBrZXkgYnV0IGRpZmZlcmVudCBlbGVtZW50LiB0cmVhdCBhcyBuZXcgZWxlbWVudFxuICAgICAgICAgICAgY3JlYXRlRWxtKG5ld1N0YXJ0Vm5vZGUsIGluc2VydGVkVm5vZGVRdWV1ZSwgcGFyZW50RWxtLCBvbGRTdGFydFZub2RlLmVsbSwgZmFsc2UsIG5ld0NoLCBuZXdTdGFydElkeCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIG5ld1N0YXJ0Vm5vZGUgPSBuZXdDaFsrK25ld1N0YXJ0SWR4XTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKG9sZFN0YXJ0SWR4ID4gb2xkRW5kSWR4KSB7XG4gICAgICByZWZFbG0gPSBpc1VuZGVmKG5ld0NoW25ld0VuZElkeCArIDFdKSA/IG51bGwgOiBuZXdDaFtuZXdFbmRJZHggKyAxXS5lbG07XG4gICAgICBhZGRWbm9kZXMocGFyZW50RWxtLCByZWZFbG0sIG5ld0NoLCBuZXdTdGFydElkeCwgbmV3RW5kSWR4LCBpbnNlcnRlZFZub2RlUXVldWUpO1xuICAgIH0gZWxzZSBpZiAobmV3U3RhcnRJZHggPiBuZXdFbmRJZHgpIHtcbiAgICAgIHJlbW92ZVZub2RlcyhvbGRDaCwgb2xkU3RhcnRJZHgsIG9sZEVuZElkeCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gY2hlY2tEdXBsaWNhdGVLZXlzIChjaGlsZHJlbikge1xuICAgIHZhciBzZWVuS2V5cyA9IHt9O1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciB2bm9kZSA9IGNoaWxkcmVuW2ldO1xuICAgICAgdmFyIGtleSA9IHZub2RlLmtleTtcbiAgICAgIGlmIChpc0RlZihrZXkpKSB7XG4gICAgICAgIGlmIChzZWVuS2V5c1trZXldKSB7XG4gICAgICAgICAgd2FybihcbiAgICAgICAgICAgIChcIkR1cGxpY2F0ZSBrZXlzIGRldGVjdGVkOiAnXCIgKyBrZXkgKyBcIicuIFRoaXMgbWF5IGNhdXNlIGFuIHVwZGF0ZSBlcnJvci5cIiksXG4gICAgICAgICAgICB2bm9kZS5jb250ZXh0XG4gICAgICAgICAgKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzZWVuS2V5c1trZXldID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGZpbmRJZHhJbk9sZCAobm9kZSwgb2xkQ2gsIHN0YXJ0LCBlbmQpIHtcbiAgICBmb3IgKHZhciBpID0gc3RhcnQ7IGkgPCBlbmQ7IGkrKykge1xuICAgICAgdmFyIGMgPSBvbGRDaFtpXTtcbiAgICAgIGlmIChpc0RlZihjKSAmJiBzYW1lVm5vZGUobm9kZSwgYykpIHsgcmV0dXJuIGkgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHBhdGNoVm5vZGUgKFxuICAgIG9sZFZub2RlLFxuICAgIHZub2RlLFxuICAgIGluc2VydGVkVm5vZGVRdWV1ZSxcbiAgICBvd25lckFycmF5LFxuICAgIGluZGV4LFxuICAgIHJlbW92ZU9ubHlcbiAgKSB7XG4gICAgaWYgKG9sZFZub2RlID09PSB2bm9kZSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKGlzRGVmKHZub2RlLmVsbSkgJiYgaXNEZWYob3duZXJBcnJheSkpIHtcbiAgICAgIC8vIGNsb25lIHJldXNlZCB2bm9kZVxuICAgICAgdm5vZGUgPSBvd25lckFycmF5W2luZGV4XSA9IGNsb25lVk5vZGUodm5vZGUpO1xuICAgIH1cblxuICAgIHZhciBlbG0gPSB2bm9kZS5lbG0gPSBvbGRWbm9kZS5lbG07XG5cbiAgICBpZiAoaXNUcnVlKG9sZFZub2RlLmlzQXN5bmNQbGFjZWhvbGRlcikpIHtcbiAgICAgIGlmIChpc0RlZih2bm9kZS5hc3luY0ZhY3RvcnkucmVzb2x2ZWQpKSB7XG4gICAgICAgIGh5ZHJhdGUob2xkVm5vZGUuZWxtLCB2bm9kZSwgaW5zZXJ0ZWRWbm9kZVF1ZXVlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZub2RlLmlzQXN5bmNQbGFjZWhvbGRlciA9IHRydWU7XG4gICAgICB9XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICAvLyByZXVzZSBlbGVtZW50IGZvciBzdGF0aWMgdHJlZXMuXG4gICAgLy8gbm90ZSB3ZSBvbmx5IGRvIHRoaXMgaWYgdGhlIHZub2RlIGlzIGNsb25lZCAtXG4gICAgLy8gaWYgdGhlIG5ldyBub2RlIGlzIG5vdCBjbG9uZWQgaXQgbWVhbnMgdGhlIHJlbmRlciBmdW5jdGlvbnMgaGF2ZSBiZWVuXG4gICAgLy8gcmVzZXQgYnkgdGhlIGhvdC1yZWxvYWQtYXBpIGFuZCB3ZSBuZWVkIHRvIGRvIGEgcHJvcGVyIHJlLXJlbmRlci5cbiAgICBpZiAoaXNUcnVlKHZub2RlLmlzU3RhdGljKSAmJlxuICAgICAgaXNUcnVlKG9sZFZub2RlLmlzU3RhdGljKSAmJlxuICAgICAgdm5vZGUua2V5ID09PSBvbGRWbm9kZS5rZXkgJiZcbiAgICAgIChpc1RydWUodm5vZGUuaXNDbG9uZWQpIHx8IGlzVHJ1ZSh2bm9kZS5pc09uY2UpKVxuICAgICkge1xuICAgICAgdm5vZGUuY29tcG9uZW50SW5zdGFuY2UgPSBvbGRWbm9kZS5jb21wb25lbnRJbnN0YW5jZTtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIHZhciBpO1xuICAgIHZhciBkYXRhID0gdm5vZGUuZGF0YTtcbiAgICBpZiAoaXNEZWYoZGF0YSkgJiYgaXNEZWYoaSA9IGRhdGEuaG9vaykgJiYgaXNEZWYoaSA9IGkucHJlcGF0Y2gpKSB7XG4gICAgICBpKG9sZFZub2RlLCB2bm9kZSk7XG4gICAgfVxuXG4gICAgdmFyIG9sZENoID0gb2xkVm5vZGUuY2hpbGRyZW47XG4gICAgdmFyIGNoID0gdm5vZGUuY2hpbGRyZW47XG4gICAgaWYgKGlzRGVmKGRhdGEpICYmIGlzUGF0Y2hhYmxlKHZub2RlKSkge1xuICAgICAgZm9yIChpID0gMDsgaSA8IGNicy51cGRhdGUubGVuZ3RoOyArK2kpIHsgY2JzLnVwZGF0ZVtpXShvbGRWbm9kZSwgdm5vZGUpOyB9XG4gICAgICBpZiAoaXNEZWYoaSA9IGRhdGEuaG9vaykgJiYgaXNEZWYoaSA9IGkudXBkYXRlKSkgeyBpKG9sZFZub2RlLCB2bm9kZSk7IH1cbiAgICB9XG4gICAgaWYgKGlzVW5kZWYodm5vZGUudGV4dCkpIHtcbiAgICAgIGlmIChpc0RlZihvbGRDaCkgJiYgaXNEZWYoY2gpKSB7XG4gICAgICAgIGlmIChvbGRDaCAhPT0gY2gpIHsgdXBkYXRlQ2hpbGRyZW4oZWxtLCBvbGRDaCwgY2gsIGluc2VydGVkVm5vZGVRdWV1ZSwgcmVtb3ZlT25seSk7IH1cbiAgICAgIH0gZWxzZSBpZiAoaXNEZWYoY2gpKSB7XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgY2hlY2tEdXBsaWNhdGVLZXlzKGNoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNEZWYob2xkVm5vZGUudGV4dCkpIHsgbm9kZU9wcy5zZXRUZXh0Q29udGVudChlbG0sICcnKTsgfVxuICAgICAgICBhZGRWbm9kZXMoZWxtLCBudWxsLCBjaCwgMCwgY2gubGVuZ3RoIC0gMSwgaW5zZXJ0ZWRWbm9kZVF1ZXVlKTtcbiAgICAgIH0gZWxzZSBpZiAoaXNEZWYob2xkQ2gpKSB7XG4gICAgICAgIHJlbW92ZVZub2RlcyhvbGRDaCwgMCwgb2xkQ2gubGVuZ3RoIC0gMSk7XG4gICAgICB9IGVsc2UgaWYgKGlzRGVmKG9sZFZub2RlLnRleHQpKSB7XG4gICAgICAgIG5vZGVPcHMuc2V0VGV4dENvbnRlbnQoZWxtLCAnJyk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChvbGRWbm9kZS50ZXh0ICE9PSB2bm9kZS50ZXh0KSB7XG4gICAgICBub2RlT3BzLnNldFRleHRDb250ZW50KGVsbSwgdm5vZGUudGV4dCk7XG4gICAgfVxuICAgIGlmIChpc0RlZihkYXRhKSkge1xuICAgICAgaWYgKGlzRGVmKGkgPSBkYXRhLmhvb2spICYmIGlzRGVmKGkgPSBpLnBvc3RwYXRjaCkpIHsgaShvbGRWbm9kZSwgdm5vZGUpOyB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaW52b2tlSW5zZXJ0SG9vayAodm5vZGUsIHF1ZXVlLCBpbml0aWFsKSB7XG4gICAgLy8gZGVsYXkgaW5zZXJ0IGhvb2tzIGZvciBjb21wb25lbnQgcm9vdCBub2RlcywgaW52b2tlIHRoZW0gYWZ0ZXIgdGhlXG4gICAgLy8gZWxlbWVudCBpcyByZWFsbHkgaW5zZXJ0ZWRcbiAgICBpZiAoaXNUcnVlKGluaXRpYWwpICYmIGlzRGVmKHZub2RlLnBhcmVudCkpIHtcbiAgICAgIHZub2RlLnBhcmVudC5kYXRhLnBlbmRpbmdJbnNlcnQgPSBxdWV1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBxdWV1ZS5sZW5ndGg7ICsraSkge1xuICAgICAgICBxdWV1ZVtpXS5kYXRhLmhvb2suaW5zZXJ0KHF1ZXVlW2ldKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB2YXIgaHlkcmF0aW9uQmFpbGVkID0gZmFsc2U7XG4gIC8vIGxpc3Qgb2YgbW9kdWxlcyB0aGF0IGNhbiBza2lwIGNyZWF0ZSBob29rIGR1cmluZyBoeWRyYXRpb24gYmVjYXVzZSB0aGV5XG4gIC8vIGFyZSBhbHJlYWR5IHJlbmRlcmVkIG9uIHRoZSBjbGllbnQgb3IgaGFzIG5vIG5lZWQgZm9yIGluaXRpYWxpemF0aW9uXG4gIC8vIE5vdGU6IHN0eWxlIGlzIGV4Y2x1ZGVkIGJlY2F1c2UgaXQgcmVsaWVzIG9uIGluaXRpYWwgY2xvbmUgZm9yIGZ1dHVyZVxuICAvLyBkZWVwIHVwZGF0ZXMgKCM3MDYzKS5cbiAgdmFyIGlzUmVuZGVyZWRNb2R1bGUgPSBtYWtlTWFwKCdhdHRycyxjbGFzcyxzdGF0aWNDbGFzcyxzdGF0aWNTdHlsZSxrZXknKTtcblxuICAvLyBOb3RlOiB0aGlzIGlzIGEgYnJvd3Nlci1vbmx5IGZ1bmN0aW9uIHNvIHdlIGNhbiBhc3N1bWUgZWxtcyBhcmUgRE9NIG5vZGVzLlxuICBmdW5jdGlvbiBoeWRyYXRlIChlbG0sIHZub2RlLCBpbnNlcnRlZFZub2RlUXVldWUsIGluVlByZSkge1xuICAgIHZhciBpO1xuICAgIHZhciB0YWcgPSB2bm9kZS50YWc7XG4gICAgdmFyIGRhdGEgPSB2bm9kZS5kYXRhO1xuICAgIHZhciBjaGlsZHJlbiA9IHZub2RlLmNoaWxkcmVuO1xuICAgIGluVlByZSA9IGluVlByZSB8fCAoZGF0YSAmJiBkYXRhLnByZSk7XG4gICAgdm5vZGUuZWxtID0gZWxtO1xuXG4gICAgaWYgKGlzVHJ1ZSh2bm9kZS5pc0NvbW1lbnQpICYmIGlzRGVmKHZub2RlLmFzeW5jRmFjdG9yeSkpIHtcbiAgICAgIHZub2RlLmlzQXN5bmNQbGFjZWhvbGRlciA9IHRydWU7XG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cbiAgICAvLyBhc3NlcnQgbm9kZSBtYXRjaFxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICBpZiAoIWFzc2VydE5vZGVNYXRjaChlbG0sIHZub2RlLCBpblZQcmUpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgfVxuICAgIH1cbiAgICBpZiAoaXNEZWYoZGF0YSkpIHtcbiAgICAgIGlmIChpc0RlZihpID0gZGF0YS5ob29rKSAmJiBpc0RlZihpID0gaS5pbml0KSkgeyBpKHZub2RlLCB0cnVlIC8qIGh5ZHJhdGluZyAqLyk7IH1cbiAgICAgIGlmIChpc0RlZihpID0gdm5vZGUuY29tcG9uZW50SW5zdGFuY2UpKSB7XG4gICAgICAgIC8vIGNoaWxkIGNvbXBvbmVudC4gaXQgc2hvdWxkIGhhdmUgaHlkcmF0ZWQgaXRzIG93biB0cmVlLlxuICAgICAgICBpbml0Q29tcG9uZW50KHZub2RlLCBpbnNlcnRlZFZub2RlUXVldWUpO1xuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgfVxuICAgIH1cbiAgICBpZiAoaXNEZWYodGFnKSkge1xuICAgICAgaWYgKGlzRGVmKGNoaWxkcmVuKSkge1xuICAgICAgICAvLyBlbXB0eSBlbGVtZW50LCBhbGxvdyBjbGllbnQgdG8gcGljayB1cCBhbmQgcG9wdWxhdGUgY2hpbGRyZW5cbiAgICAgICAgaWYgKCFlbG0uaGFzQ2hpbGROb2RlcygpKSB7XG4gICAgICAgICAgY3JlYXRlQ2hpbGRyZW4odm5vZGUsIGNoaWxkcmVuLCBpbnNlcnRlZFZub2RlUXVldWUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIHYtaHRtbCBhbmQgZG9tUHJvcHM6IGlubmVySFRNTFxuICAgICAgICAgIGlmIChpc0RlZihpID0gZGF0YSkgJiYgaXNEZWYoaSA9IGkuZG9tUHJvcHMpICYmIGlzRGVmKGkgPSBpLmlubmVySFRNTCkpIHtcbiAgICAgICAgICAgIGlmIChpICE9PSBlbG0uaW5uZXJIVE1MKSB7XG4gICAgICAgICAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJlxuICAgICAgICAgICAgICAgIHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJyAmJlxuICAgICAgICAgICAgICAgICFoeWRyYXRpb25CYWlsZWRcbiAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgaHlkcmF0aW9uQmFpbGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oJ1BhcmVudDogJywgZWxtKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oJ3NlcnZlciBpbm5lckhUTUw6ICcsIGkpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybignY2xpZW50IGlubmVySFRNTDogJywgZWxtLmlubmVySFRNTCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIGl0ZXJhdGUgYW5kIGNvbXBhcmUgY2hpbGRyZW4gbGlzdHNcbiAgICAgICAgICAgIHZhciBjaGlsZHJlbk1hdGNoID0gdHJ1ZTtcbiAgICAgICAgICAgIHZhciBjaGlsZE5vZGUgPSBlbG0uZmlyc3RDaGlsZDtcbiAgICAgICAgICAgIGZvciAodmFyIGkkMSA9IDA7IGkkMSA8IGNoaWxkcmVuLmxlbmd0aDsgaSQxKyspIHtcbiAgICAgICAgICAgICAgaWYgKCFjaGlsZE5vZGUgfHwgIWh5ZHJhdGUoY2hpbGROb2RlLCBjaGlsZHJlbltpJDFdLCBpbnNlcnRlZFZub2RlUXVldWUsIGluVlByZSkpIHtcbiAgICAgICAgICAgICAgICBjaGlsZHJlbk1hdGNoID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBjaGlsZE5vZGUgPSBjaGlsZE5vZGUubmV4dFNpYmxpbmc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBpZiBjaGlsZE5vZGUgaXMgbm90IG51bGwsIGl0IG1lYW5zIHRoZSBhY3R1YWwgY2hpbGROb2RlcyBsaXN0IGlzXG4gICAgICAgICAgICAvLyBsb25nZXIgdGhhbiB0aGUgdmlydHVhbCBjaGlsZHJlbiBsaXN0LlxuICAgICAgICAgICAgaWYgKCFjaGlsZHJlbk1hdGNoIHx8IGNoaWxkTm9kZSkge1xuICAgICAgICAgICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiZcbiAgICAgICAgICAgICAgICB0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICAgICAgICAgICAgICAhaHlkcmF0aW9uQmFpbGVkXG4gICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgIGh5ZHJhdGlvbkJhaWxlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCdQYXJlbnQ6ICcsIGVsbSk7XG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCdNaXNtYXRjaGluZyBjaGlsZE5vZGVzIHZzLiBWTm9kZXM6ICcsIGVsbS5jaGlsZE5vZGVzLCBjaGlsZHJlbik7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoaXNEZWYoZGF0YSkpIHtcbiAgICAgICAgdmFyIGZ1bGxJbnZva2UgPSBmYWxzZTtcbiAgICAgICAgZm9yICh2YXIga2V5IGluIGRhdGEpIHtcbiAgICAgICAgICBpZiAoIWlzUmVuZGVyZWRNb2R1bGUoa2V5KSkge1xuICAgICAgICAgICAgZnVsbEludm9rZSA9IHRydWU7XG4gICAgICAgICAgICBpbnZva2VDcmVhdGVIb29rcyh2bm9kZSwgaW5zZXJ0ZWRWbm9kZVF1ZXVlKTtcbiAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICghZnVsbEludm9rZSAmJiBkYXRhWydjbGFzcyddKSB7XG4gICAgICAgICAgLy8gZW5zdXJlIGNvbGxlY3RpbmcgZGVwcyBmb3IgZGVlcCBjbGFzcyBiaW5kaW5ncyBmb3IgZnV0dXJlIHVwZGF0ZXNcbiAgICAgICAgICB0cmF2ZXJzZShkYXRhWydjbGFzcyddKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoZWxtLmRhdGEgIT09IHZub2RlLnRleHQpIHtcbiAgICAgIGVsbS5kYXRhID0gdm5vZGUudGV4dDtcbiAgICB9XG4gICAgcmV0dXJuIHRydWVcbiAgfVxuXG4gIGZ1bmN0aW9uIGFzc2VydE5vZGVNYXRjaCAobm9kZSwgdm5vZGUsIGluVlByZSkge1xuICAgIGlmIChpc0RlZih2bm9kZS50YWcpKSB7XG4gICAgICByZXR1cm4gdm5vZGUudGFnLmluZGV4T2YoJ3Z1ZS1jb21wb25lbnQnKSA9PT0gMCB8fCAoXG4gICAgICAgICFpc1Vua25vd25FbGVtZW50JCQxKHZub2RlLCBpblZQcmUpICYmXG4gICAgICAgIHZub2RlLnRhZy50b0xvd2VyQ2FzZSgpID09PSAobm9kZS50YWdOYW1lICYmIG5vZGUudGFnTmFtZS50b0xvd2VyQ2FzZSgpKVxuICAgICAgKVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gbm9kZS5ub2RlVHlwZSA9PT0gKHZub2RlLmlzQ29tbWVudCA/IDggOiAzKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiBwYXRjaCAob2xkVm5vZGUsIHZub2RlLCBoeWRyYXRpbmcsIHJlbW92ZU9ubHkpIHtcbiAgICBpZiAoaXNVbmRlZih2bm9kZSkpIHtcbiAgICAgIGlmIChpc0RlZihvbGRWbm9kZSkpIHsgaW52b2tlRGVzdHJveUhvb2sob2xkVm5vZGUpOyB9XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICB2YXIgaXNJbml0aWFsUGF0Y2ggPSBmYWxzZTtcbiAgICB2YXIgaW5zZXJ0ZWRWbm9kZVF1ZXVlID0gW107XG5cbiAgICBpZiAoaXNVbmRlZihvbGRWbm9kZSkpIHtcbiAgICAgIC8vIGVtcHR5IG1vdW50IChsaWtlbHkgYXMgY29tcG9uZW50KSwgY3JlYXRlIG5ldyByb290IGVsZW1lbnRcbiAgICAgIGlzSW5pdGlhbFBhdGNoID0gdHJ1ZTtcbiAgICAgIGNyZWF0ZUVsbSh2bm9kZSwgaW5zZXJ0ZWRWbm9kZVF1ZXVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGlzUmVhbEVsZW1lbnQgPSBpc0RlZihvbGRWbm9kZS5ub2RlVHlwZSk7XG4gICAgICBpZiAoIWlzUmVhbEVsZW1lbnQgJiYgc2FtZVZub2RlKG9sZFZub2RlLCB2bm9kZSkpIHtcbiAgICAgICAgLy8gcGF0Y2ggZXhpc3Rpbmcgcm9vdCBub2RlXG4gICAgICAgIHBhdGNoVm5vZGUob2xkVm5vZGUsIHZub2RlLCBpbnNlcnRlZFZub2RlUXVldWUsIG51bGwsIG51bGwsIHJlbW92ZU9ubHkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKGlzUmVhbEVsZW1lbnQpIHtcbiAgICAgICAgICAvLyBtb3VudGluZyB0byBhIHJlYWwgZWxlbWVudFxuICAgICAgICAgIC8vIGNoZWNrIGlmIHRoaXMgaXMgc2VydmVyLXJlbmRlcmVkIGNvbnRlbnQgYW5kIGlmIHdlIGNhbiBwZXJmb3JtXG4gICAgICAgICAgLy8gYSBzdWNjZXNzZnVsIGh5ZHJhdGlvbi5cbiAgICAgICAgICBpZiAob2xkVm5vZGUubm9kZVR5cGUgPT09IDEgJiYgb2xkVm5vZGUuaGFzQXR0cmlidXRlKFNTUl9BVFRSKSkge1xuICAgICAgICAgICAgb2xkVm5vZGUucmVtb3ZlQXR0cmlidXRlKFNTUl9BVFRSKTtcbiAgICAgICAgICAgIGh5ZHJhdGluZyA9IHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChpc1RydWUoaHlkcmF0aW5nKSkge1xuICAgICAgICAgICAgaWYgKGh5ZHJhdGUob2xkVm5vZGUsIHZub2RlLCBpbnNlcnRlZFZub2RlUXVldWUpKSB7XG4gICAgICAgICAgICAgIGludm9rZUluc2VydEhvb2sodm5vZGUsIGluc2VydGVkVm5vZGVRdWV1ZSwgdHJ1ZSk7XG4gICAgICAgICAgICAgIHJldHVybiBvbGRWbm9kZVxuICAgICAgICAgICAgfSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICAgIHdhcm4oXG4gICAgICAgICAgICAgICAgJ1RoZSBjbGllbnQtc2lkZSByZW5kZXJlZCB2aXJ0dWFsIERPTSB0cmVlIGlzIG5vdCBtYXRjaGluZyAnICtcbiAgICAgICAgICAgICAgICAnc2VydmVyLXJlbmRlcmVkIGNvbnRlbnQuIFRoaXMgaXMgbGlrZWx5IGNhdXNlZCBieSBpbmNvcnJlY3QgJyArXG4gICAgICAgICAgICAgICAgJ0hUTUwgbWFya3VwLCBmb3IgZXhhbXBsZSBuZXN0aW5nIGJsb2NrLWxldmVsIGVsZW1lbnRzIGluc2lkZSAnICtcbiAgICAgICAgICAgICAgICAnPHA+LCBvciBtaXNzaW5nIDx0Ym9keT4uIEJhaWxpbmcgaHlkcmF0aW9uIGFuZCBwZXJmb3JtaW5nICcgK1xuICAgICAgICAgICAgICAgICdmdWxsIGNsaWVudC1zaWRlIHJlbmRlci4nXG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIGVpdGhlciBub3Qgc2VydmVyLXJlbmRlcmVkLCBvciBoeWRyYXRpb24gZmFpbGVkLlxuICAgICAgICAgIC8vIGNyZWF0ZSBhbiBlbXB0eSBub2RlIGFuZCByZXBsYWNlIGl0XG4gICAgICAgICAgb2xkVm5vZGUgPSBlbXB0eU5vZGVBdChvbGRWbm9kZSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyByZXBsYWNpbmcgZXhpc3RpbmcgZWxlbWVudFxuICAgICAgICB2YXIgb2xkRWxtID0gb2xkVm5vZGUuZWxtO1xuICAgICAgICB2YXIgcGFyZW50RWxtID0gbm9kZU9wcy5wYXJlbnROb2RlKG9sZEVsbSk7XG5cbiAgICAgICAgLy8gY3JlYXRlIG5ldyBub2RlXG4gICAgICAgIGNyZWF0ZUVsbShcbiAgICAgICAgICB2bm9kZSxcbiAgICAgICAgICBpbnNlcnRlZFZub2RlUXVldWUsXG4gICAgICAgICAgLy8gZXh0cmVtZWx5IHJhcmUgZWRnZSBjYXNlOiBkbyBub3QgaW5zZXJ0IGlmIG9sZCBlbGVtZW50IGlzIGluIGFcbiAgICAgICAgICAvLyBsZWF2aW5nIHRyYW5zaXRpb24uIE9ubHkgaGFwcGVucyB3aGVuIGNvbWJpbmluZyB0cmFuc2l0aW9uICtcbiAgICAgICAgICAvLyBrZWVwLWFsaXZlICsgSE9Dcy4gKCM0NTkwKVxuICAgICAgICAgIG9sZEVsbS5fbGVhdmVDYiA/IG51bGwgOiBwYXJlbnRFbG0sXG4gICAgICAgICAgbm9kZU9wcy5uZXh0U2libGluZyhvbGRFbG0pXG4gICAgICAgICk7XG5cbiAgICAgICAgLy8gdXBkYXRlIHBhcmVudCBwbGFjZWhvbGRlciBub2RlIGVsZW1lbnQsIHJlY3Vyc2l2ZWx5XG4gICAgICAgIGlmIChpc0RlZih2bm9kZS5wYXJlbnQpKSB7XG4gICAgICAgICAgdmFyIGFuY2VzdG9yID0gdm5vZGUucGFyZW50O1xuICAgICAgICAgIHZhciBwYXRjaGFibGUgPSBpc1BhdGNoYWJsZSh2bm9kZSk7XG4gICAgICAgICAgd2hpbGUgKGFuY2VzdG9yKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNicy5kZXN0cm95Lmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgIGNicy5kZXN0cm95W2ldKGFuY2VzdG9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGFuY2VzdG9yLmVsbSA9IHZub2RlLmVsbTtcbiAgICAgICAgICAgIGlmIChwYXRjaGFibGUpIHtcbiAgICAgICAgICAgICAgZm9yICh2YXIgaSQxID0gMDsgaSQxIDwgY2JzLmNyZWF0ZS5sZW5ndGg7ICsraSQxKSB7XG4gICAgICAgICAgICAgICAgY2JzLmNyZWF0ZVtpJDFdKGVtcHR5Tm9kZSwgYW5jZXN0b3IpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8vICM2NTEzXG4gICAgICAgICAgICAgIC8vIGludm9rZSBpbnNlcnQgaG9va3MgdGhhdCBtYXkgaGF2ZSBiZWVuIG1lcmdlZCBieSBjcmVhdGUgaG9va3MuXG4gICAgICAgICAgICAgIC8vIGUuZy4gZm9yIGRpcmVjdGl2ZXMgdGhhdCB1c2VzIHRoZSBcImluc2VydGVkXCIgaG9vay5cbiAgICAgICAgICAgICAgdmFyIGluc2VydCA9IGFuY2VzdG9yLmRhdGEuaG9vay5pbnNlcnQ7XG4gICAgICAgICAgICAgIGlmIChpbnNlcnQubWVyZ2VkKSB7XG4gICAgICAgICAgICAgICAgLy8gc3RhcnQgYXQgaW5kZXggMSB0byBhdm9pZCByZS1pbnZva2luZyBjb21wb25lbnQgbW91bnRlZCBob29rXG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSQyID0gMTsgaSQyIDwgaW5zZXJ0LmZucy5sZW5ndGg7IGkkMisrKSB7XG4gICAgICAgICAgICAgICAgICBpbnNlcnQuZm5zW2kkMl0oKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHJlZ2lzdGVyUmVmKGFuY2VzdG9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGFuY2VzdG9yID0gYW5jZXN0b3IucGFyZW50O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGRlc3Ryb3kgb2xkIG5vZGVcbiAgICAgICAgaWYgKGlzRGVmKHBhcmVudEVsbSkpIHtcbiAgICAgICAgICByZW1vdmVWbm9kZXMoW29sZFZub2RlXSwgMCwgMCk7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNEZWYob2xkVm5vZGUudGFnKSkge1xuICAgICAgICAgIGludm9rZURlc3Ryb3lIb29rKG9sZFZub2RlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGludm9rZUluc2VydEhvb2sodm5vZGUsIGluc2VydGVkVm5vZGVRdWV1ZSwgaXNJbml0aWFsUGF0Y2gpO1xuICAgIHJldHVybiB2bm9kZS5lbG1cbiAgfVxufVxuXG4vKiAgKi9cblxudmFyIGRpcmVjdGl2ZXMgPSB7XG4gIGNyZWF0ZTogdXBkYXRlRGlyZWN0aXZlcyxcbiAgdXBkYXRlOiB1cGRhdGVEaXJlY3RpdmVzLFxuICBkZXN0cm95OiBmdW5jdGlvbiB1bmJpbmREaXJlY3RpdmVzICh2bm9kZSkge1xuICAgIHVwZGF0ZURpcmVjdGl2ZXModm5vZGUsIGVtcHR5Tm9kZSk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIHVwZGF0ZURpcmVjdGl2ZXMgKG9sZFZub2RlLCB2bm9kZSkge1xuICBpZiAob2xkVm5vZGUuZGF0YS5kaXJlY3RpdmVzIHx8IHZub2RlLmRhdGEuZGlyZWN0aXZlcykge1xuICAgIF91cGRhdGUob2xkVm5vZGUsIHZub2RlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBfdXBkYXRlIChvbGRWbm9kZSwgdm5vZGUpIHtcbiAgdmFyIGlzQ3JlYXRlID0gb2xkVm5vZGUgPT09IGVtcHR5Tm9kZTtcbiAgdmFyIGlzRGVzdHJveSA9IHZub2RlID09PSBlbXB0eU5vZGU7XG4gIHZhciBvbGREaXJzID0gbm9ybWFsaXplRGlyZWN0aXZlcyQxKG9sZFZub2RlLmRhdGEuZGlyZWN0aXZlcywgb2xkVm5vZGUuY29udGV4dCk7XG4gIHZhciBuZXdEaXJzID0gbm9ybWFsaXplRGlyZWN0aXZlcyQxKHZub2RlLmRhdGEuZGlyZWN0aXZlcywgdm5vZGUuY29udGV4dCk7XG5cbiAgdmFyIGRpcnNXaXRoSW5zZXJ0ID0gW107XG4gIHZhciBkaXJzV2l0aFBvc3RwYXRjaCA9IFtdO1xuXG4gIHZhciBrZXksIG9sZERpciwgZGlyO1xuICBmb3IgKGtleSBpbiBuZXdEaXJzKSB7XG4gICAgb2xkRGlyID0gb2xkRGlyc1trZXldO1xuICAgIGRpciA9IG5ld0RpcnNba2V5XTtcbiAgICBpZiAoIW9sZERpcikge1xuICAgICAgLy8gbmV3IGRpcmVjdGl2ZSwgYmluZFxuICAgICAgY2FsbEhvb2skMShkaXIsICdiaW5kJywgdm5vZGUsIG9sZFZub2RlKTtcbiAgICAgIGlmIChkaXIuZGVmICYmIGRpci5kZWYuaW5zZXJ0ZWQpIHtcbiAgICAgICAgZGlyc1dpdGhJbnNlcnQucHVzaChkaXIpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBleGlzdGluZyBkaXJlY3RpdmUsIHVwZGF0ZVxuICAgICAgZGlyLm9sZFZhbHVlID0gb2xkRGlyLnZhbHVlO1xuICAgICAgZGlyLm9sZEFyZyA9IG9sZERpci5hcmc7XG4gICAgICBjYWxsSG9vayQxKGRpciwgJ3VwZGF0ZScsIHZub2RlLCBvbGRWbm9kZSk7XG4gICAgICBpZiAoZGlyLmRlZiAmJiBkaXIuZGVmLmNvbXBvbmVudFVwZGF0ZWQpIHtcbiAgICAgICAgZGlyc1dpdGhQb3N0cGF0Y2gucHVzaChkaXIpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGlmIChkaXJzV2l0aEluc2VydC5sZW5ndGgpIHtcbiAgICB2YXIgY2FsbEluc2VydCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGlyc1dpdGhJbnNlcnQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY2FsbEhvb2skMShkaXJzV2l0aEluc2VydFtpXSwgJ2luc2VydGVkJywgdm5vZGUsIG9sZFZub2RlKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIGlmIChpc0NyZWF0ZSkge1xuICAgICAgbWVyZ2VWTm9kZUhvb2sodm5vZGUsICdpbnNlcnQnLCBjYWxsSW5zZXJ0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgY2FsbEluc2VydCgpO1xuICAgIH1cbiAgfVxuXG4gIGlmIChkaXJzV2l0aFBvc3RwYXRjaC5sZW5ndGgpIHtcbiAgICBtZXJnZVZOb2RlSG9vayh2bm9kZSwgJ3Bvc3RwYXRjaCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGlyc1dpdGhQb3N0cGF0Y2gubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY2FsbEhvb2skMShkaXJzV2l0aFBvc3RwYXRjaFtpXSwgJ2NvbXBvbmVudFVwZGF0ZWQnLCB2bm9kZSwgb2xkVm5vZGUpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgaWYgKCFpc0NyZWF0ZSkge1xuICAgIGZvciAoa2V5IGluIG9sZERpcnMpIHtcbiAgICAgIGlmICghbmV3RGlyc1trZXldKSB7XG4gICAgICAgIC8vIG5vIGxvbmdlciBwcmVzZW50LCB1bmJpbmRcbiAgICAgICAgY2FsbEhvb2skMShvbGREaXJzW2tleV0sICd1bmJpbmQnLCBvbGRWbm9kZSwgb2xkVm5vZGUsIGlzRGVzdHJveSk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbnZhciBlbXB0eU1vZGlmaWVycyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZURpcmVjdGl2ZXMkMSAoXG4gIGRpcnMsXG4gIHZtXG4pIHtcbiAgdmFyIHJlcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIGlmICghZGlycykge1xuICAgIC8vICRmbG93LWRpc2FibGUtbGluZVxuICAgIHJldHVybiByZXNcbiAgfVxuICB2YXIgaSwgZGlyO1xuICBmb3IgKGkgPSAwOyBpIDwgZGlycy5sZW5ndGg7IGkrKykge1xuICAgIGRpciA9IGRpcnNbaV07XG4gICAgaWYgKCFkaXIubW9kaWZpZXJzKSB7XG4gICAgICAvLyAkZmxvdy1kaXNhYmxlLWxpbmVcbiAgICAgIGRpci5tb2RpZmllcnMgPSBlbXB0eU1vZGlmaWVycztcbiAgICB9XG4gICAgcmVzW2dldFJhd0Rpck5hbWUoZGlyKV0gPSBkaXI7XG4gICAgZGlyLmRlZiA9IHJlc29sdmVBc3NldCh2bS4kb3B0aW9ucywgJ2RpcmVjdGl2ZXMnLCBkaXIubmFtZSwgdHJ1ZSk7XG4gIH1cbiAgLy8gJGZsb3ctZGlzYWJsZS1saW5lXG4gIHJldHVybiByZXNcbn1cblxuZnVuY3Rpb24gZ2V0UmF3RGlyTmFtZSAoZGlyKSB7XG4gIHJldHVybiBkaXIucmF3TmFtZSB8fCAoKGRpci5uYW1lKSArIFwiLlwiICsgKE9iamVjdC5rZXlzKGRpci5tb2RpZmllcnMgfHwge30pLmpvaW4oJy4nKSkpXG59XG5cbmZ1bmN0aW9uIGNhbGxIb29rJDEgKGRpciwgaG9vaywgdm5vZGUsIG9sZFZub2RlLCBpc0Rlc3Ryb3kpIHtcbiAgdmFyIGZuID0gZGlyLmRlZiAmJiBkaXIuZGVmW2hvb2tdO1xuICBpZiAoZm4pIHtcbiAgICB0cnkge1xuICAgICAgZm4odm5vZGUuZWxtLCBkaXIsIHZub2RlLCBvbGRWbm9kZSwgaXNEZXN0cm95KTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBoYW5kbGVFcnJvcihlLCB2bm9kZS5jb250ZXh0LCAoXCJkaXJlY3RpdmUgXCIgKyAoZGlyLm5hbWUpICsgXCIgXCIgKyBob29rICsgXCIgaG9va1wiKSk7XG4gICAgfVxuICB9XG59XG5cbnZhciBiYXNlTW9kdWxlcyA9IFtcbiAgcmVmLFxuICBkaXJlY3RpdmVzXG5dO1xuXG4vKiAgKi9cblxuZnVuY3Rpb24gdXBkYXRlQXR0cnMgKG9sZFZub2RlLCB2bm9kZSkge1xuICB2YXIgb3B0cyA9IHZub2RlLmNvbXBvbmVudE9wdGlvbnM7XG4gIGlmIChpc0RlZihvcHRzKSAmJiBvcHRzLkN0b3Iub3B0aW9ucy5pbmhlcml0QXR0cnMgPT09IGZhbHNlKSB7XG4gICAgcmV0dXJuXG4gIH1cbiAgaWYgKGlzVW5kZWYob2xkVm5vZGUuZGF0YS5hdHRycykgJiYgaXNVbmRlZih2bm9kZS5kYXRhLmF0dHJzKSkge1xuICAgIHJldHVyblxuICB9XG4gIHZhciBrZXksIGN1ciwgb2xkO1xuICB2YXIgZWxtID0gdm5vZGUuZWxtO1xuICB2YXIgb2xkQXR0cnMgPSBvbGRWbm9kZS5kYXRhLmF0dHJzIHx8IHt9O1xuICB2YXIgYXR0cnMgPSB2bm9kZS5kYXRhLmF0dHJzIHx8IHt9O1xuICAvLyBjbG9uZSBvYnNlcnZlZCBvYmplY3RzLCBhcyB0aGUgdXNlciBwcm9iYWJseSB3YW50cyB0byBtdXRhdGUgaXRcbiAgaWYgKGlzRGVmKGF0dHJzLl9fb2JfXykpIHtcbiAgICBhdHRycyA9IHZub2RlLmRhdGEuYXR0cnMgPSBleHRlbmQoe30sIGF0dHJzKTtcbiAgfVxuXG4gIGZvciAoa2V5IGluIGF0dHJzKSB7XG4gICAgY3VyID0gYXR0cnNba2V5XTtcbiAgICBvbGQgPSBvbGRBdHRyc1trZXldO1xuICAgIGlmIChvbGQgIT09IGN1cikge1xuICAgICAgc2V0QXR0cihlbG0sIGtleSwgY3VyKTtcbiAgICB9XG4gIH1cbiAgLy8gIzQzOTE6IGluIElFOSwgc2V0dGluZyB0eXBlIGNhbiByZXNldCB2YWx1ZSBmb3IgaW5wdXRbdHlwZT1yYWRpb11cbiAgLy8gIzY2NjY6IElFL0VkZ2UgZm9yY2VzIHByb2dyZXNzIHZhbHVlIGRvd24gdG8gMSBiZWZvcmUgc2V0dGluZyBhIG1heFxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgaWYgKChpc0lFIHx8IGlzRWRnZSkgJiYgYXR0cnMudmFsdWUgIT09IG9sZEF0dHJzLnZhbHVlKSB7XG4gICAgc2V0QXR0cihlbG0sICd2YWx1ZScsIGF0dHJzLnZhbHVlKTtcbiAgfVxuICBmb3IgKGtleSBpbiBvbGRBdHRycykge1xuICAgIGlmIChpc1VuZGVmKGF0dHJzW2tleV0pKSB7XG4gICAgICBpZiAoaXNYbGluayhrZXkpKSB7XG4gICAgICAgIGVsbS5yZW1vdmVBdHRyaWJ1dGVOUyh4bGlua05TLCBnZXRYbGlua1Byb3Aoa2V5KSk7XG4gICAgICB9IGVsc2UgaWYgKCFpc0VudW1lcmF0ZWRBdHRyKGtleSkpIHtcbiAgICAgICAgZWxtLnJlbW92ZUF0dHJpYnV0ZShrZXkpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBzZXRBdHRyIChlbCwga2V5LCB2YWx1ZSkge1xuICBpZiAoZWwudGFnTmFtZS5pbmRleE9mKCctJykgPiAtMSkge1xuICAgIGJhc2VTZXRBdHRyKGVsLCBrZXksIHZhbHVlKTtcbiAgfSBlbHNlIGlmIChpc0Jvb2xlYW5BdHRyKGtleSkpIHtcbiAgICAvLyBzZXQgYXR0cmlidXRlIGZvciBibGFuayB2YWx1ZVxuICAgIC8vIGUuZy4gPG9wdGlvbiBkaXNhYmxlZD5TZWxlY3Qgb25lPC9vcHRpb24+XG4gICAgaWYgKGlzRmFsc3lBdHRyVmFsdWUodmFsdWUpKSB7XG4gICAgICBlbC5yZW1vdmVBdHRyaWJ1dGUoa2V5KTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gdGVjaG5pY2FsbHkgYWxsb3dmdWxsc2NyZWVuIGlzIGEgYm9vbGVhbiBhdHRyaWJ1dGUgZm9yIDxpZnJhbWU+LFxuICAgICAgLy8gYnV0IEZsYXNoIGV4cGVjdHMgYSB2YWx1ZSBvZiBcInRydWVcIiB3aGVuIHVzZWQgb24gPGVtYmVkPiB0YWdcbiAgICAgIHZhbHVlID0ga2V5ID09PSAnYWxsb3dmdWxsc2NyZWVuJyAmJiBlbC50YWdOYW1lID09PSAnRU1CRUQnXG4gICAgICAgID8gJ3RydWUnXG4gICAgICAgIDoga2V5O1xuICAgICAgZWwuc2V0QXR0cmlidXRlKGtleSwgdmFsdWUpO1xuICAgIH1cbiAgfSBlbHNlIGlmIChpc0VudW1lcmF0ZWRBdHRyKGtleSkpIHtcbiAgICBlbC5zZXRBdHRyaWJ1dGUoa2V5LCBjb252ZXJ0RW51bWVyYXRlZFZhbHVlKGtleSwgdmFsdWUpKTtcbiAgfSBlbHNlIGlmIChpc1hsaW5rKGtleSkpIHtcbiAgICBpZiAoaXNGYWxzeUF0dHJWYWx1ZSh2YWx1ZSkpIHtcbiAgICAgIGVsLnJlbW92ZUF0dHJpYnV0ZU5TKHhsaW5rTlMsIGdldFhsaW5rUHJvcChrZXkpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZWwuc2V0QXR0cmlidXRlTlMoeGxpbmtOUywga2V5LCB2YWx1ZSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGJhc2VTZXRBdHRyKGVsLCBrZXksIHZhbHVlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBiYXNlU2V0QXR0ciAoZWwsIGtleSwgdmFsdWUpIHtcbiAgaWYgKGlzRmFsc3lBdHRyVmFsdWUodmFsdWUpKSB7XG4gICAgZWwucmVtb3ZlQXR0cmlidXRlKGtleSk7XG4gIH0gZWxzZSB7XG4gICAgLy8gIzcxMzg6IElFMTAgJiAxMSBmaXJlcyBpbnB1dCBldmVudCB3aGVuIHNldHRpbmcgcGxhY2Vob2xkZXIgb25cbiAgICAvLyA8dGV4dGFyZWE+Li4uIGJsb2NrIHRoZSBmaXJzdCBpbnB1dCBldmVudCBhbmQgcmVtb3ZlIHRoZSBibG9ja2VyXG4gICAgLy8gaW1tZWRpYXRlbHkuXG4gICAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgaWYgKFxuICAgICAgaXNJRSAmJiAhaXNJRTkgJiZcbiAgICAgIGVsLnRhZ05hbWUgPT09ICdURVhUQVJFQScgJiZcbiAgICAgIGtleSA9PT0gJ3BsYWNlaG9sZGVyJyAmJiB2YWx1ZSAhPT0gJycgJiYgIWVsLl9faWVwaFxuICAgICkge1xuICAgICAgdmFyIGJsb2NrZXIgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICAgICAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKCdpbnB1dCcsIGJsb2NrZXIpO1xuICAgICAgfTtcbiAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgYmxvY2tlcik7XG4gICAgICAvLyAkZmxvdy1kaXNhYmxlLWxpbmVcbiAgICAgIGVsLl9faWVwaCA9IHRydWU7IC8qIElFIHBsYWNlaG9sZGVyIHBhdGNoZWQgKi9cbiAgICB9XG4gICAgZWwuc2V0QXR0cmlidXRlKGtleSwgdmFsdWUpO1xuICB9XG59XG5cbnZhciBhdHRycyA9IHtcbiAgY3JlYXRlOiB1cGRhdGVBdHRycyxcbiAgdXBkYXRlOiB1cGRhdGVBdHRyc1xufTtcblxuLyogICovXG5cbmZ1bmN0aW9uIHVwZGF0ZUNsYXNzIChvbGRWbm9kZSwgdm5vZGUpIHtcbiAgdmFyIGVsID0gdm5vZGUuZWxtO1xuICB2YXIgZGF0YSA9IHZub2RlLmRhdGE7XG4gIHZhciBvbGREYXRhID0gb2xkVm5vZGUuZGF0YTtcbiAgaWYgKFxuICAgIGlzVW5kZWYoZGF0YS5zdGF0aWNDbGFzcykgJiZcbiAgICBpc1VuZGVmKGRhdGEuY2xhc3MpICYmIChcbiAgICAgIGlzVW5kZWYob2xkRGF0YSkgfHwgKFxuICAgICAgICBpc1VuZGVmKG9sZERhdGEuc3RhdGljQ2xhc3MpICYmXG4gICAgICAgIGlzVW5kZWYob2xkRGF0YS5jbGFzcylcbiAgICAgIClcbiAgICApXG4gICkge1xuICAgIHJldHVyblxuICB9XG5cbiAgdmFyIGNscyA9IGdlbkNsYXNzRm9yVm5vZGUodm5vZGUpO1xuXG4gIC8vIGhhbmRsZSB0cmFuc2l0aW9uIGNsYXNzZXNcbiAgdmFyIHRyYW5zaXRpb25DbGFzcyA9IGVsLl90cmFuc2l0aW9uQ2xhc3NlcztcbiAgaWYgKGlzRGVmKHRyYW5zaXRpb25DbGFzcykpIHtcbiAgICBjbHMgPSBjb25jYXQoY2xzLCBzdHJpbmdpZnlDbGFzcyh0cmFuc2l0aW9uQ2xhc3MpKTtcbiAgfVxuXG4gIC8vIHNldCB0aGUgY2xhc3NcbiAgaWYgKGNscyAhPT0gZWwuX3ByZXZDbGFzcykge1xuICAgIGVsLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCBjbHMpO1xuICAgIGVsLl9wcmV2Q2xhc3MgPSBjbHM7XG4gIH1cbn1cblxudmFyIGtsYXNzID0ge1xuICBjcmVhdGU6IHVwZGF0ZUNsYXNzLFxuICB1cGRhdGU6IHVwZGF0ZUNsYXNzXG59O1xuXG4vKiAgKi9cblxudmFyIHZhbGlkRGl2aXNpb25DaGFyUkUgPSAvW1xcdykuK1xcLV8kXFxdXS87XG5cbmZ1bmN0aW9uIHBhcnNlRmlsdGVycyAoZXhwKSB7XG4gIHZhciBpblNpbmdsZSA9IGZhbHNlO1xuICB2YXIgaW5Eb3VibGUgPSBmYWxzZTtcbiAgdmFyIGluVGVtcGxhdGVTdHJpbmcgPSBmYWxzZTtcbiAgdmFyIGluUmVnZXggPSBmYWxzZTtcbiAgdmFyIGN1cmx5ID0gMDtcbiAgdmFyIHNxdWFyZSA9IDA7XG4gIHZhciBwYXJlbiA9IDA7XG4gIHZhciBsYXN0RmlsdGVySW5kZXggPSAwO1xuICB2YXIgYywgcHJldiwgaSwgZXhwcmVzc2lvbiwgZmlsdGVycztcblxuICBmb3IgKGkgPSAwOyBpIDwgZXhwLmxlbmd0aDsgaSsrKSB7XG4gICAgcHJldiA9IGM7XG4gICAgYyA9IGV4cC5jaGFyQ29kZUF0KGkpO1xuICAgIGlmIChpblNpbmdsZSkge1xuICAgICAgaWYgKGMgPT09IDB4MjcgJiYgcHJldiAhPT0gMHg1QykgeyBpblNpbmdsZSA9IGZhbHNlOyB9XG4gICAgfSBlbHNlIGlmIChpbkRvdWJsZSkge1xuICAgICAgaWYgKGMgPT09IDB4MjIgJiYgcHJldiAhPT0gMHg1QykgeyBpbkRvdWJsZSA9IGZhbHNlOyB9XG4gICAgfSBlbHNlIGlmIChpblRlbXBsYXRlU3RyaW5nKSB7XG4gICAgICBpZiAoYyA9PT0gMHg2MCAmJiBwcmV2ICE9PSAweDVDKSB7IGluVGVtcGxhdGVTdHJpbmcgPSBmYWxzZTsgfVxuICAgIH0gZWxzZSBpZiAoaW5SZWdleCkge1xuICAgICAgaWYgKGMgPT09IDB4MmYgJiYgcHJldiAhPT0gMHg1QykgeyBpblJlZ2V4ID0gZmFsc2U7IH1cbiAgICB9IGVsc2UgaWYgKFxuICAgICAgYyA9PT0gMHg3QyAmJiAvLyBwaXBlXG4gICAgICBleHAuY2hhckNvZGVBdChpICsgMSkgIT09IDB4N0MgJiZcbiAgICAgIGV4cC5jaGFyQ29kZUF0KGkgLSAxKSAhPT0gMHg3QyAmJlxuICAgICAgIWN1cmx5ICYmICFzcXVhcmUgJiYgIXBhcmVuXG4gICAgKSB7XG4gICAgICBpZiAoZXhwcmVzc2lvbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIC8vIGZpcnN0IGZpbHRlciwgZW5kIG9mIGV4cHJlc3Npb25cbiAgICAgICAgbGFzdEZpbHRlckluZGV4ID0gaSArIDE7XG4gICAgICAgIGV4cHJlc3Npb24gPSBleHAuc2xpY2UoMCwgaSkudHJpbSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHVzaEZpbHRlcigpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBzd2l0Y2ggKGMpIHtcbiAgICAgICAgY2FzZSAweDIyOiBpbkRvdWJsZSA9IHRydWU7IGJyZWFrICAgICAgICAgLy8gXCJcbiAgICAgICAgY2FzZSAweDI3OiBpblNpbmdsZSA9IHRydWU7IGJyZWFrICAgICAgICAgLy8gJ1xuICAgICAgICBjYXNlIDB4NjA6IGluVGVtcGxhdGVTdHJpbmcgPSB0cnVlOyBicmVhayAvLyBgXG4gICAgICAgIGNhc2UgMHgyODogcGFyZW4rKzsgYnJlYWsgICAgICAgICAgICAgICAgIC8vIChcbiAgICAgICAgY2FzZSAweDI5OiBwYXJlbi0tOyBicmVhayAgICAgICAgICAgICAgICAgLy8gKVxuICAgICAgICBjYXNlIDB4NUI6IHNxdWFyZSsrOyBicmVhayAgICAgICAgICAgICAgICAvLyBbXG4gICAgICAgIGNhc2UgMHg1RDogc3F1YXJlLS07IGJyZWFrICAgICAgICAgICAgICAgIC8vIF1cbiAgICAgICAgY2FzZSAweDdCOiBjdXJseSsrOyBicmVhayAgICAgICAgICAgICAgICAgLy8ge1xuICAgICAgICBjYXNlIDB4N0Q6IGN1cmx5LS07IGJyZWFrICAgICAgICAgICAgICAgICAvLyB9XG4gICAgICB9XG4gICAgICBpZiAoYyA9PT0gMHgyZikgeyAvLyAvXG4gICAgICAgIHZhciBqID0gaSAtIDE7XG4gICAgICAgIHZhciBwID0gKHZvaWQgMCk7XG4gICAgICAgIC8vIGZpbmQgZmlyc3Qgbm9uLXdoaXRlc3BhY2UgcHJldiBjaGFyXG4gICAgICAgIGZvciAoOyBqID49IDA7IGotLSkge1xuICAgICAgICAgIHAgPSBleHAuY2hhckF0KGopO1xuICAgICAgICAgIGlmIChwICE9PSAnICcpIHsgYnJlYWsgfVxuICAgICAgICB9XG4gICAgICAgIGlmICghcCB8fCAhdmFsaWREaXZpc2lvbkNoYXJSRS50ZXN0KHApKSB7XG4gICAgICAgICAgaW5SZWdleCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBpZiAoZXhwcmVzc2lvbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgZXhwcmVzc2lvbiA9IGV4cC5zbGljZSgwLCBpKS50cmltKCk7XG4gIH0gZWxzZSBpZiAobGFzdEZpbHRlckluZGV4ICE9PSAwKSB7XG4gICAgcHVzaEZpbHRlcigpO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaEZpbHRlciAoKSB7XG4gICAgKGZpbHRlcnMgfHwgKGZpbHRlcnMgPSBbXSkpLnB1c2goZXhwLnNsaWNlKGxhc3RGaWx0ZXJJbmRleCwgaSkudHJpbSgpKTtcbiAgICBsYXN0RmlsdGVySW5kZXggPSBpICsgMTtcbiAgfVxuXG4gIGlmIChmaWx0ZXJzKSB7XG4gICAgZm9yIChpID0gMDsgaSA8IGZpbHRlcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGV4cHJlc3Npb24gPSB3cmFwRmlsdGVyKGV4cHJlc3Npb24sIGZpbHRlcnNbaV0pO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBleHByZXNzaW9uXG59XG5cbmZ1bmN0aW9uIHdyYXBGaWx0ZXIgKGV4cCwgZmlsdGVyKSB7XG4gIHZhciBpID0gZmlsdGVyLmluZGV4T2YoJygnKTtcbiAgaWYgKGkgPCAwKSB7XG4gICAgLy8gX2Y6IHJlc29sdmVGaWx0ZXJcbiAgICByZXR1cm4gKFwiX2YoXFxcIlwiICsgZmlsdGVyICsgXCJcXFwiKShcIiArIGV4cCArIFwiKVwiKVxuICB9IGVsc2Uge1xuICAgIHZhciBuYW1lID0gZmlsdGVyLnNsaWNlKDAsIGkpO1xuICAgIHZhciBhcmdzID0gZmlsdGVyLnNsaWNlKGkgKyAxKTtcbiAgICByZXR1cm4gKFwiX2YoXFxcIlwiICsgbmFtZSArIFwiXFxcIikoXCIgKyBleHAgKyAoYXJncyAhPT0gJyknID8gJywnICsgYXJncyA6IGFyZ3MpKVxuICB9XG59XG5cbi8qICAqL1xuXG5cblxuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbmZ1bmN0aW9uIGJhc2VXYXJuIChtc2csIHJhbmdlKSB7XG4gIGNvbnNvbGUuZXJyb3IoKFwiW1Z1ZSBjb21waWxlcl06IFwiICsgbXNnKSk7XG59XG4vKiBlc2xpbnQtZW5hYmxlIG5vLXVudXNlZC12YXJzICovXG5cbmZ1bmN0aW9uIHBsdWNrTW9kdWxlRnVuY3Rpb24gKFxuICBtb2R1bGVzLFxuICBrZXlcbikge1xuICByZXR1cm4gbW9kdWxlc1xuICAgID8gbW9kdWxlcy5tYXAoZnVuY3Rpb24gKG0pIHsgcmV0dXJuIG1ba2V5XTsgfSkuZmlsdGVyKGZ1bmN0aW9uIChfKSB7IHJldHVybiBfOyB9KVxuICAgIDogW11cbn1cblxuZnVuY3Rpb24gYWRkUHJvcCAoZWwsIG5hbWUsIHZhbHVlLCByYW5nZSwgZHluYW1pYykge1xuICAoZWwucHJvcHMgfHwgKGVsLnByb3BzID0gW10pKS5wdXNoKHJhbmdlU2V0SXRlbSh7IG5hbWU6IG5hbWUsIHZhbHVlOiB2YWx1ZSwgZHluYW1pYzogZHluYW1pYyB9LCByYW5nZSkpO1xuICBlbC5wbGFpbiA9IGZhbHNlO1xufVxuXG5mdW5jdGlvbiBhZGRBdHRyIChlbCwgbmFtZSwgdmFsdWUsIHJhbmdlLCBkeW5hbWljKSB7XG4gIHZhciBhdHRycyA9IGR5bmFtaWNcbiAgICA/IChlbC5keW5hbWljQXR0cnMgfHwgKGVsLmR5bmFtaWNBdHRycyA9IFtdKSlcbiAgICA6IChlbC5hdHRycyB8fCAoZWwuYXR0cnMgPSBbXSkpO1xuICBhdHRycy5wdXNoKHJhbmdlU2V0SXRlbSh7IG5hbWU6IG5hbWUsIHZhbHVlOiB2YWx1ZSwgZHluYW1pYzogZHluYW1pYyB9LCByYW5nZSkpO1xuICBlbC5wbGFpbiA9IGZhbHNlO1xufVxuXG4vLyBhZGQgYSByYXcgYXR0ciAodXNlIHRoaXMgaW4gcHJlVHJhbnNmb3JtcylcbmZ1bmN0aW9uIGFkZFJhd0F0dHIgKGVsLCBuYW1lLCB2YWx1ZSwgcmFuZ2UpIHtcbiAgZWwuYXR0cnNNYXBbbmFtZV0gPSB2YWx1ZTtcbiAgZWwuYXR0cnNMaXN0LnB1c2gocmFuZ2VTZXRJdGVtKHsgbmFtZTogbmFtZSwgdmFsdWU6IHZhbHVlIH0sIHJhbmdlKSk7XG59XG5cbmZ1bmN0aW9uIGFkZERpcmVjdGl2ZSAoXG4gIGVsLFxuICBuYW1lLFxuICByYXdOYW1lLFxuICB2YWx1ZSxcbiAgYXJnLFxuICBpc0R5bmFtaWNBcmcsXG4gIG1vZGlmaWVycyxcbiAgcmFuZ2Vcbikge1xuICAoZWwuZGlyZWN0aXZlcyB8fCAoZWwuZGlyZWN0aXZlcyA9IFtdKSkucHVzaChyYW5nZVNldEl0ZW0oe1xuICAgIG5hbWU6IG5hbWUsXG4gICAgcmF3TmFtZTogcmF3TmFtZSxcbiAgICB2YWx1ZTogdmFsdWUsXG4gICAgYXJnOiBhcmcsXG4gICAgaXNEeW5hbWljQXJnOiBpc0R5bmFtaWNBcmcsXG4gICAgbW9kaWZpZXJzOiBtb2RpZmllcnNcbiAgfSwgcmFuZ2UpKTtcbiAgZWwucGxhaW4gPSBmYWxzZTtcbn1cblxuZnVuY3Rpb24gcHJlcGVuZE1vZGlmaWVyTWFya2VyIChzeW1ib2wsIG5hbWUsIGR5bmFtaWMpIHtcbiAgcmV0dXJuIGR5bmFtaWNcbiAgICA/IChcIl9wKFwiICsgbmFtZSArIFwiLFxcXCJcIiArIHN5bWJvbCArIFwiXFxcIilcIilcbiAgICA6IHN5bWJvbCArIG5hbWUgLy8gbWFyayB0aGUgZXZlbnQgYXMgY2FwdHVyZWRcbn1cblxuZnVuY3Rpb24gYWRkSGFuZGxlciAoXG4gIGVsLFxuICBuYW1lLFxuICB2YWx1ZSxcbiAgbW9kaWZpZXJzLFxuICBpbXBvcnRhbnQsXG4gIHdhcm4sXG4gIHJhbmdlLFxuICBkeW5hbWljXG4pIHtcbiAgbW9kaWZpZXJzID0gbW9kaWZpZXJzIHx8IGVtcHR5T2JqZWN0O1xuICAvLyB3YXJuIHByZXZlbnQgYW5kIHBhc3NpdmUgbW9kaWZpZXJcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gIGlmIChcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHdhcm4gJiZcbiAgICBtb2RpZmllcnMucHJldmVudCAmJiBtb2RpZmllcnMucGFzc2l2ZVxuICApIHtcbiAgICB3YXJuKFxuICAgICAgJ3Bhc3NpdmUgYW5kIHByZXZlbnQgY2FuXFwndCBiZSB1c2VkIHRvZ2V0aGVyLiAnICtcbiAgICAgICdQYXNzaXZlIGhhbmRsZXIgY2FuXFwndCBwcmV2ZW50IGRlZmF1bHQgZXZlbnQuJyxcbiAgICAgIHJhbmdlXG4gICAgKTtcbiAgfVxuXG4gIC8vIG5vcm1hbGl6ZSBjbGljay5yaWdodCBhbmQgY2xpY2subWlkZGxlIHNpbmNlIHRoZXkgZG9uJ3QgYWN0dWFsbHkgZmlyZVxuICAvLyB0aGlzIGlzIHRlY2huaWNhbGx5IGJyb3dzZXItc3BlY2lmaWMsIGJ1dCBhdCBsZWFzdCBmb3Igbm93IGJyb3dzZXJzIGFyZVxuICAvLyB0aGUgb25seSB0YXJnZXQgZW52cyB0aGF0IGhhdmUgcmlnaHQvbWlkZGxlIGNsaWNrcy5cbiAgaWYgKG1vZGlmaWVycy5yaWdodCkge1xuICAgIGlmIChkeW5hbWljKSB7XG4gICAgICBuYW1lID0gXCIoXCIgKyBuYW1lICsgXCIpPT09J2NsaWNrJz8nY29udGV4dG1lbnUnOihcIiArIG5hbWUgKyBcIilcIjtcbiAgICB9IGVsc2UgaWYgKG5hbWUgPT09ICdjbGljaycpIHtcbiAgICAgIG5hbWUgPSAnY29udGV4dG1lbnUnO1xuICAgICAgZGVsZXRlIG1vZGlmaWVycy5yaWdodDtcbiAgICB9XG4gIH0gZWxzZSBpZiAobW9kaWZpZXJzLm1pZGRsZSkge1xuICAgIGlmIChkeW5hbWljKSB7XG4gICAgICBuYW1lID0gXCIoXCIgKyBuYW1lICsgXCIpPT09J2NsaWNrJz8nbW91c2V1cCc6KFwiICsgbmFtZSArIFwiKVwiO1xuICAgIH0gZWxzZSBpZiAobmFtZSA9PT0gJ2NsaWNrJykge1xuICAgICAgbmFtZSA9ICdtb3VzZXVwJztcbiAgICB9XG4gIH1cblxuICAvLyBjaGVjayBjYXB0dXJlIG1vZGlmaWVyXG4gIGlmIChtb2RpZmllcnMuY2FwdHVyZSkge1xuICAgIGRlbGV0ZSBtb2RpZmllcnMuY2FwdHVyZTtcbiAgICBuYW1lID0gcHJlcGVuZE1vZGlmaWVyTWFya2VyKCchJywgbmFtZSwgZHluYW1pYyk7XG4gIH1cbiAgaWYgKG1vZGlmaWVycy5vbmNlKSB7XG4gICAgZGVsZXRlIG1vZGlmaWVycy5vbmNlO1xuICAgIG5hbWUgPSBwcmVwZW5kTW9kaWZpZXJNYXJrZXIoJ34nLCBuYW1lLCBkeW5hbWljKTtcbiAgfVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgaWYgKG1vZGlmaWVycy5wYXNzaXZlKSB7XG4gICAgZGVsZXRlIG1vZGlmaWVycy5wYXNzaXZlO1xuICAgIG5hbWUgPSBwcmVwZW5kTW9kaWZpZXJNYXJrZXIoJyYnLCBuYW1lLCBkeW5hbWljKTtcbiAgfVxuXG4gIHZhciBldmVudHM7XG4gIGlmIChtb2RpZmllcnMubmF0aXZlKSB7XG4gICAgZGVsZXRlIG1vZGlmaWVycy5uYXRpdmU7XG4gICAgZXZlbnRzID0gZWwubmF0aXZlRXZlbnRzIHx8IChlbC5uYXRpdmVFdmVudHMgPSB7fSk7XG4gIH0gZWxzZSB7XG4gICAgZXZlbnRzID0gZWwuZXZlbnRzIHx8IChlbC5ldmVudHMgPSB7fSk7XG4gIH1cblxuICB2YXIgbmV3SGFuZGxlciA9IHJhbmdlU2V0SXRlbSh7IHZhbHVlOiB2YWx1ZS50cmltKCksIGR5bmFtaWM6IGR5bmFtaWMgfSwgcmFuZ2UpO1xuICBpZiAobW9kaWZpZXJzICE9PSBlbXB0eU9iamVjdCkge1xuICAgIG5ld0hhbmRsZXIubW9kaWZpZXJzID0gbW9kaWZpZXJzO1xuICB9XG5cbiAgdmFyIGhhbmRsZXJzID0gZXZlbnRzW25hbWVdO1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgaWYgKEFycmF5LmlzQXJyYXkoaGFuZGxlcnMpKSB7XG4gICAgaW1wb3J0YW50ID8gaGFuZGxlcnMudW5zaGlmdChuZXdIYW5kbGVyKSA6IGhhbmRsZXJzLnB1c2gobmV3SGFuZGxlcik7XG4gIH0gZWxzZSBpZiAoaGFuZGxlcnMpIHtcbiAgICBldmVudHNbbmFtZV0gPSBpbXBvcnRhbnQgPyBbbmV3SGFuZGxlciwgaGFuZGxlcnNdIDogW2hhbmRsZXJzLCBuZXdIYW5kbGVyXTtcbiAgfSBlbHNlIHtcbiAgICBldmVudHNbbmFtZV0gPSBuZXdIYW5kbGVyO1xuICB9XG5cbiAgZWwucGxhaW4gPSBmYWxzZTtcbn1cblxuZnVuY3Rpb24gZ2V0UmF3QmluZGluZ0F0dHIgKFxuICBlbCxcbiAgbmFtZVxuKSB7XG4gIHJldHVybiBlbC5yYXdBdHRyc01hcFsnOicgKyBuYW1lXSB8fFxuICAgIGVsLnJhd0F0dHJzTWFwWyd2LWJpbmQ6JyArIG5hbWVdIHx8XG4gICAgZWwucmF3QXR0cnNNYXBbbmFtZV1cbn1cblxuZnVuY3Rpb24gZ2V0QmluZGluZ0F0dHIgKFxuICBlbCxcbiAgbmFtZSxcbiAgZ2V0U3RhdGljXG4pIHtcbiAgdmFyIGR5bmFtaWNWYWx1ZSA9XG4gICAgZ2V0QW5kUmVtb3ZlQXR0cihlbCwgJzonICsgbmFtZSkgfHxcbiAgICBnZXRBbmRSZW1vdmVBdHRyKGVsLCAndi1iaW5kOicgKyBuYW1lKTtcbiAgaWYgKGR5bmFtaWNWYWx1ZSAhPSBudWxsKSB7XG4gICAgcmV0dXJuIHBhcnNlRmlsdGVycyhkeW5hbWljVmFsdWUpXG4gIH0gZWxzZSBpZiAoZ2V0U3RhdGljICE9PSBmYWxzZSkge1xuICAgIHZhciBzdGF0aWNWYWx1ZSA9IGdldEFuZFJlbW92ZUF0dHIoZWwsIG5hbWUpO1xuICAgIGlmIChzdGF0aWNWYWx1ZSAhPSBudWxsKSB7XG4gICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoc3RhdGljVmFsdWUpXG4gICAgfVxuICB9XG59XG5cbi8vIG5vdGU6IHRoaXMgb25seSByZW1vdmVzIHRoZSBhdHRyIGZyb20gdGhlIEFycmF5IChhdHRyc0xpc3QpIHNvIHRoYXQgaXRcbi8vIGRvZXNuJ3QgZ2V0IHByb2Nlc3NlZCBieSBwcm9jZXNzQXR0cnMuXG4vLyBCeSBkZWZhdWx0IGl0IGRvZXMgTk9UIHJlbW92ZSBpdCBmcm9tIHRoZSBtYXAgKGF0dHJzTWFwKSBiZWNhdXNlIHRoZSBtYXAgaXNcbi8vIG5lZWRlZCBkdXJpbmcgY29kZWdlbi5cbmZ1bmN0aW9uIGdldEFuZFJlbW92ZUF0dHIgKFxuICBlbCxcbiAgbmFtZSxcbiAgcmVtb3ZlRnJvbU1hcFxuKSB7XG4gIHZhciB2YWw7XG4gIGlmICgodmFsID0gZWwuYXR0cnNNYXBbbmFtZV0pICE9IG51bGwpIHtcbiAgICB2YXIgbGlzdCA9IGVsLmF0dHJzTGlzdDtcbiAgICBmb3IgKHZhciBpID0gMCwgbCA9IGxpc3QubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICBpZiAobGlzdFtpXS5uYW1lID09PSBuYW1lKSB7XG4gICAgICAgIGxpc3Quc3BsaWNlKGksIDEpO1xuICAgICAgICBicmVha1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBpZiAocmVtb3ZlRnJvbU1hcCkge1xuICAgIGRlbGV0ZSBlbC5hdHRyc01hcFtuYW1lXTtcbiAgfVxuICByZXR1cm4gdmFsXG59XG5cbmZ1bmN0aW9uIGdldEFuZFJlbW92ZUF0dHJCeVJlZ2V4IChcbiAgZWwsXG4gIG5hbWVcbikge1xuICB2YXIgbGlzdCA9IGVsLmF0dHJzTGlzdDtcbiAgZm9yICh2YXIgaSA9IDAsIGwgPSBsaXN0Lmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIHZhciBhdHRyID0gbGlzdFtpXTtcbiAgICBpZiAobmFtZS50ZXN0KGF0dHIubmFtZSkpIHtcbiAgICAgIGxpc3Quc3BsaWNlKGksIDEpO1xuICAgICAgcmV0dXJuIGF0dHJcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gcmFuZ2VTZXRJdGVtIChcbiAgaXRlbSxcbiAgcmFuZ2Vcbikge1xuICBpZiAocmFuZ2UpIHtcbiAgICBpZiAocmFuZ2Uuc3RhcnQgIT0gbnVsbCkge1xuICAgICAgaXRlbS5zdGFydCA9IHJhbmdlLnN0YXJ0O1xuICAgIH1cbiAgICBpZiAocmFuZ2UuZW5kICE9IG51bGwpIHtcbiAgICAgIGl0ZW0uZW5kID0gcmFuZ2UuZW5kO1xuICAgIH1cbiAgfVxuICByZXR1cm4gaXRlbVxufVxuXG4vKiAgKi9cblxuLyoqXG4gKiBDcm9zcy1wbGF0Zm9ybSBjb2RlIGdlbmVyYXRpb24gZm9yIGNvbXBvbmVudCB2LW1vZGVsXG4gKi9cbmZ1bmN0aW9uIGdlbkNvbXBvbmVudE1vZGVsIChcbiAgZWwsXG4gIHZhbHVlLFxuICBtb2RpZmllcnNcbikge1xuICB2YXIgcmVmID0gbW9kaWZpZXJzIHx8IHt9O1xuICB2YXIgbnVtYmVyID0gcmVmLm51bWJlcjtcbiAgdmFyIHRyaW0gPSByZWYudHJpbTtcblxuICB2YXIgYmFzZVZhbHVlRXhwcmVzc2lvbiA9ICckJHYnO1xuICB2YXIgdmFsdWVFeHByZXNzaW9uID0gYmFzZVZhbHVlRXhwcmVzc2lvbjtcbiAgaWYgKHRyaW0pIHtcbiAgICB2YWx1ZUV4cHJlc3Npb24gPVxuICAgICAgXCIodHlwZW9mIFwiICsgYmFzZVZhbHVlRXhwcmVzc2lvbiArIFwiID09PSAnc3RyaW5nJ1wiICtcbiAgICAgIFwiPyBcIiArIGJhc2VWYWx1ZUV4cHJlc3Npb24gKyBcIi50cmltKClcIiArXG4gICAgICBcIjogXCIgKyBiYXNlVmFsdWVFeHByZXNzaW9uICsgXCIpXCI7XG4gIH1cbiAgaWYgKG51bWJlcikge1xuICAgIHZhbHVlRXhwcmVzc2lvbiA9IFwiX24oXCIgKyB2YWx1ZUV4cHJlc3Npb24gKyBcIilcIjtcbiAgfVxuICB2YXIgYXNzaWdubWVudCA9IGdlbkFzc2lnbm1lbnRDb2RlKHZhbHVlLCB2YWx1ZUV4cHJlc3Npb24pO1xuXG4gIGVsLm1vZGVsID0ge1xuICAgIHZhbHVlOiAoXCIoXCIgKyB2YWx1ZSArIFwiKVwiKSxcbiAgICBleHByZXNzaW9uOiBKU09OLnN0cmluZ2lmeSh2YWx1ZSksXG4gICAgY2FsbGJhY2s6IChcImZ1bmN0aW9uIChcIiArIGJhc2VWYWx1ZUV4cHJlc3Npb24gKyBcIikge1wiICsgYXNzaWdubWVudCArIFwifVwiKVxuICB9O1xufVxuXG4vKipcbiAqIENyb3NzLXBsYXRmb3JtIGNvZGVnZW4gaGVscGVyIGZvciBnZW5lcmF0aW5nIHYtbW9kZWwgdmFsdWUgYXNzaWdubWVudCBjb2RlLlxuICovXG5mdW5jdGlvbiBnZW5Bc3NpZ25tZW50Q29kZSAoXG4gIHZhbHVlLFxuICBhc3NpZ25tZW50XG4pIHtcbiAgdmFyIHJlcyA9IHBhcnNlTW9kZWwodmFsdWUpO1xuICBpZiAocmVzLmtleSA9PT0gbnVsbCkge1xuICAgIHJldHVybiAodmFsdWUgKyBcIj1cIiArIGFzc2lnbm1lbnQpXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIChcIiRzZXQoXCIgKyAocmVzLmV4cCkgKyBcIiwgXCIgKyAocmVzLmtleSkgKyBcIiwgXCIgKyBhc3NpZ25tZW50ICsgXCIpXCIpXG4gIH1cbn1cblxuLyoqXG4gKiBQYXJzZSBhIHYtbW9kZWwgZXhwcmVzc2lvbiBpbnRvIGEgYmFzZSBwYXRoIGFuZCBhIGZpbmFsIGtleSBzZWdtZW50LlxuICogSGFuZGxlcyBib3RoIGRvdC1wYXRoIGFuZCBwb3NzaWJsZSBzcXVhcmUgYnJhY2tldHMuXG4gKlxuICogUG9zc2libGUgY2FzZXM6XG4gKlxuICogLSB0ZXN0XG4gKiAtIHRlc3Rba2V5XVxuICogLSB0ZXN0W3Rlc3QxW2tleV1dXG4gKiAtIHRlc3RbXCJhXCJdW2tleV1cbiAqIC0geHh4LnRlc3RbYVthXS50ZXN0MVtrZXldXVxuICogLSB0ZXN0Lnh4eC5hW1wiYXNhXCJdW3Rlc3QxW2tleV1dXG4gKlxuICovXG5cbnZhciBsZW4sIHN0ciwgY2hyLCBpbmRleCQxLCBleHByZXNzaW9uUG9zLCBleHByZXNzaW9uRW5kUG9zO1xuXG5cblxuZnVuY3Rpb24gcGFyc2VNb2RlbCAodmFsKSB7XG4gIC8vIEZpeCBodHRwczovL2dpdGh1Yi5jb20vdnVlanMvdnVlL3B1bGwvNzczMFxuICAvLyBhbGxvdyB2LW1vZGVsPVwib2JqLnZhbCBcIiAodHJhaWxpbmcgd2hpdGVzcGFjZSlcbiAgdmFsID0gdmFsLnRyaW0oKTtcbiAgbGVuID0gdmFsLmxlbmd0aDtcblxuICBpZiAodmFsLmluZGV4T2YoJ1snKSA8IDAgfHwgdmFsLmxhc3RJbmRleE9mKCddJykgPCBsZW4gLSAxKSB7XG4gICAgaW5kZXgkMSA9IHZhbC5sYXN0SW5kZXhPZignLicpO1xuICAgIGlmIChpbmRleCQxID4gLTEpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGV4cDogdmFsLnNsaWNlKDAsIGluZGV4JDEpLFxuICAgICAgICBrZXk6ICdcIicgKyB2YWwuc2xpY2UoaW5kZXgkMSArIDEpICsgJ1wiJ1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBleHA6IHZhbCxcbiAgICAgICAga2V5OiBudWxsXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgc3RyID0gdmFsO1xuICBpbmRleCQxID0gZXhwcmVzc2lvblBvcyA9IGV4cHJlc3Npb25FbmRQb3MgPSAwO1xuXG4gIHdoaWxlICghZW9mKCkpIHtcbiAgICBjaHIgPSBuZXh0KCk7XG4gICAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgaWYgKGlzU3RyaW5nU3RhcnQoY2hyKSkge1xuICAgICAgcGFyc2VTdHJpbmcoY2hyKTtcbiAgICB9IGVsc2UgaWYgKGNociA9PT0gMHg1Qikge1xuICAgICAgcGFyc2VCcmFja2V0KGNocik7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBleHA6IHZhbC5zbGljZSgwLCBleHByZXNzaW9uUG9zKSxcbiAgICBrZXk6IHZhbC5zbGljZShleHByZXNzaW9uUG9zICsgMSwgZXhwcmVzc2lvbkVuZFBvcylcbiAgfVxufVxuXG5mdW5jdGlvbiBuZXh0ICgpIHtcbiAgcmV0dXJuIHN0ci5jaGFyQ29kZUF0KCsraW5kZXgkMSlcbn1cblxuZnVuY3Rpb24gZW9mICgpIHtcbiAgcmV0dXJuIGluZGV4JDEgPj0gbGVuXG59XG5cbmZ1bmN0aW9uIGlzU3RyaW5nU3RhcnQgKGNocikge1xuICByZXR1cm4gY2hyID09PSAweDIyIHx8IGNociA9PT0gMHgyN1xufVxuXG5mdW5jdGlvbiBwYXJzZUJyYWNrZXQgKGNocikge1xuICB2YXIgaW5CcmFja2V0ID0gMTtcbiAgZXhwcmVzc2lvblBvcyA9IGluZGV4JDE7XG4gIHdoaWxlICghZW9mKCkpIHtcbiAgICBjaHIgPSBuZXh0KCk7XG4gICAgaWYgKGlzU3RyaW5nU3RhcnQoY2hyKSkge1xuICAgICAgcGFyc2VTdHJpbmcoY2hyKTtcbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuICAgIGlmIChjaHIgPT09IDB4NUIpIHsgaW5CcmFja2V0Kys7IH1cbiAgICBpZiAoY2hyID09PSAweDVEKSB7IGluQnJhY2tldC0tOyB9XG4gICAgaWYgKGluQnJhY2tldCA9PT0gMCkge1xuICAgICAgZXhwcmVzc2lvbkVuZFBvcyA9IGluZGV4JDE7XG4gICAgICBicmVha1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBwYXJzZVN0cmluZyAoY2hyKSB7XG4gIHZhciBzdHJpbmdRdW90ZSA9IGNocjtcbiAgd2hpbGUgKCFlb2YoKSkge1xuICAgIGNociA9IG5leHQoKTtcbiAgICBpZiAoY2hyID09PSBzdHJpbmdRdW90ZSkge1xuICAgICAgYnJlYWtcbiAgICB9XG4gIH1cbn1cblxuLyogICovXG5cbnZhciB3YXJuJDE7XG5cbi8vIGluIHNvbWUgY2FzZXMsIHRoZSBldmVudCB1c2VkIGhhcyB0byBiZSBkZXRlcm1pbmVkIGF0IHJ1bnRpbWVcbi8vIHNvIHdlIHVzZWQgc29tZSByZXNlcnZlZCB0b2tlbnMgZHVyaW5nIGNvbXBpbGUuXG52YXIgUkFOR0VfVE9LRU4gPSAnX19yJztcbnZhciBDSEVDS0JPWF9SQURJT19UT0tFTiA9ICdfX2MnO1xuXG5mdW5jdGlvbiBtb2RlbCAoXG4gIGVsLFxuICBkaXIsXG4gIF93YXJuXG4pIHtcbiAgd2FybiQxID0gX3dhcm47XG4gIHZhciB2YWx1ZSA9IGRpci52YWx1ZTtcbiAgdmFyIG1vZGlmaWVycyA9IGRpci5tb2RpZmllcnM7XG4gIHZhciB0YWcgPSBlbC50YWc7XG4gIHZhciB0eXBlID0gZWwuYXR0cnNNYXAudHlwZTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIGlucHV0cyB3aXRoIHR5cGU9XCJmaWxlXCIgYXJlIHJlYWQgb25seSBhbmQgc2V0dGluZyB0aGUgaW5wdXQnc1xuICAgIC8vIHZhbHVlIHdpbGwgdGhyb3cgYW4gZXJyb3IuXG4gICAgaWYgKHRhZyA9PT0gJ2lucHV0JyAmJiB0eXBlID09PSAnZmlsZScpIHtcbiAgICAgIHdhcm4kMShcbiAgICAgICAgXCI8XCIgKyAoZWwudGFnKSArIFwiIHYtbW9kZWw9XFxcIlwiICsgdmFsdWUgKyBcIlxcXCIgdHlwZT1cXFwiZmlsZVxcXCI+OlxcblwiICtcbiAgICAgICAgXCJGaWxlIGlucHV0cyBhcmUgcmVhZCBvbmx5LiBVc2UgYSB2LW9uOmNoYW5nZSBsaXN0ZW5lciBpbnN0ZWFkLlwiLFxuICAgICAgICBlbC5yYXdBdHRyc01hcFsndi1tb2RlbCddXG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIGlmIChlbC5jb21wb25lbnQpIHtcbiAgICBnZW5Db21wb25lbnRNb2RlbChlbCwgdmFsdWUsIG1vZGlmaWVycyk7XG4gICAgLy8gY29tcG9uZW50IHYtbW9kZWwgZG9lc24ndCBuZWVkIGV4dHJhIHJ1bnRpbWVcbiAgICByZXR1cm4gZmFsc2VcbiAgfSBlbHNlIGlmICh0YWcgPT09ICdzZWxlY3QnKSB7XG4gICAgZ2VuU2VsZWN0KGVsLCB2YWx1ZSwgbW9kaWZpZXJzKTtcbiAgfSBlbHNlIGlmICh0YWcgPT09ICdpbnB1dCcgJiYgdHlwZSA9PT0gJ2NoZWNrYm94Jykge1xuICAgIGdlbkNoZWNrYm94TW9kZWwoZWwsIHZhbHVlLCBtb2RpZmllcnMpO1xuICB9IGVsc2UgaWYgKHRhZyA9PT0gJ2lucHV0JyAmJiB0eXBlID09PSAncmFkaW8nKSB7XG4gICAgZ2VuUmFkaW9Nb2RlbChlbCwgdmFsdWUsIG1vZGlmaWVycyk7XG4gIH0gZWxzZSBpZiAodGFnID09PSAnaW5wdXQnIHx8IHRhZyA9PT0gJ3RleHRhcmVhJykge1xuICAgIGdlbkRlZmF1bHRNb2RlbChlbCwgdmFsdWUsIG1vZGlmaWVycyk7XG4gIH0gZWxzZSBpZiAoIWNvbmZpZy5pc1Jlc2VydmVkVGFnKHRhZykpIHtcbiAgICBnZW5Db21wb25lbnRNb2RlbChlbCwgdmFsdWUsIG1vZGlmaWVycyk7XG4gICAgLy8gY29tcG9uZW50IHYtbW9kZWwgZG9lc24ndCBuZWVkIGV4dHJhIHJ1bnRpbWVcbiAgICByZXR1cm4gZmFsc2VcbiAgfSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgd2FybiQxKFxuICAgICAgXCI8XCIgKyAoZWwudGFnKSArIFwiIHYtbW9kZWw9XFxcIlwiICsgdmFsdWUgKyBcIlxcXCI+OiBcIiArXG4gICAgICBcInYtbW9kZWwgaXMgbm90IHN1cHBvcnRlZCBvbiB0aGlzIGVsZW1lbnQgdHlwZS4gXCIgK1xuICAgICAgJ0lmIHlvdSBhcmUgd29ya2luZyB3aXRoIGNvbnRlbnRlZGl0YWJsZSwgaXRcXCdzIHJlY29tbWVuZGVkIHRvICcgK1xuICAgICAgJ3dyYXAgYSBsaWJyYXJ5IGRlZGljYXRlZCBmb3IgdGhhdCBwdXJwb3NlIGluc2lkZSBhIGN1c3RvbSBjb21wb25lbnQuJyxcbiAgICAgIGVsLnJhd0F0dHJzTWFwWyd2LW1vZGVsJ11cbiAgICApO1xuICB9XG5cbiAgLy8gZW5zdXJlIHJ1bnRpbWUgZGlyZWN0aXZlIG1ldGFkYXRhXG4gIHJldHVybiB0cnVlXG59XG5cbmZ1bmN0aW9uIGdlbkNoZWNrYm94TW9kZWwgKFxuICBlbCxcbiAgdmFsdWUsXG4gIG1vZGlmaWVyc1xuKSB7XG4gIHZhciBudW1iZXIgPSBtb2RpZmllcnMgJiYgbW9kaWZpZXJzLm51bWJlcjtcbiAgdmFyIHZhbHVlQmluZGluZyA9IGdldEJpbmRpbmdBdHRyKGVsLCAndmFsdWUnKSB8fCAnbnVsbCc7XG4gIHZhciB0cnVlVmFsdWVCaW5kaW5nID0gZ2V0QmluZGluZ0F0dHIoZWwsICd0cnVlLXZhbHVlJykgfHwgJ3RydWUnO1xuICB2YXIgZmFsc2VWYWx1ZUJpbmRpbmcgPSBnZXRCaW5kaW5nQXR0cihlbCwgJ2ZhbHNlLXZhbHVlJykgfHwgJ2ZhbHNlJztcbiAgYWRkUHJvcChlbCwgJ2NoZWNrZWQnLFxuICAgIFwiQXJyYXkuaXNBcnJheShcIiArIHZhbHVlICsgXCIpXCIgK1xuICAgIFwiP19pKFwiICsgdmFsdWUgKyBcIixcIiArIHZhbHVlQmluZGluZyArIFwiKT4tMVwiICsgKFxuICAgICAgdHJ1ZVZhbHVlQmluZGluZyA9PT0gJ3RydWUnXG4gICAgICAgID8gKFwiOihcIiArIHZhbHVlICsgXCIpXCIpXG4gICAgICAgIDogKFwiOl9xKFwiICsgdmFsdWUgKyBcIixcIiArIHRydWVWYWx1ZUJpbmRpbmcgKyBcIilcIilcbiAgICApXG4gICk7XG4gIGFkZEhhbmRsZXIoZWwsICdjaGFuZ2UnLFxuICAgIFwidmFyICQkYT1cIiArIHZhbHVlICsgXCIsXCIgK1xuICAgICAgICAnJCRlbD0kZXZlbnQudGFyZ2V0LCcgK1xuICAgICAgICBcIiQkYz0kJGVsLmNoZWNrZWQ/KFwiICsgdHJ1ZVZhbHVlQmluZGluZyArIFwiKTooXCIgKyBmYWxzZVZhbHVlQmluZGluZyArIFwiKTtcIiArXG4gICAgJ2lmKEFycmF5LmlzQXJyYXkoJCRhKSl7JyArXG4gICAgICBcInZhciAkJHY9XCIgKyAobnVtYmVyID8gJ19uKCcgKyB2YWx1ZUJpbmRpbmcgKyAnKScgOiB2YWx1ZUJpbmRpbmcpICsgXCIsXCIgK1xuICAgICAgICAgICckJGk9X2koJCRhLCQkdik7JyArXG4gICAgICBcImlmKCQkZWwuY2hlY2tlZCl7JCRpPDAmJihcIiArIChnZW5Bc3NpZ25tZW50Q29kZSh2YWx1ZSwgJyQkYS5jb25jYXQoWyQkdl0pJykpICsgXCIpfVwiICtcbiAgICAgIFwiZWxzZXskJGk+LTEmJihcIiArIChnZW5Bc3NpZ25tZW50Q29kZSh2YWx1ZSwgJyQkYS5zbGljZSgwLCQkaSkuY29uY2F0KCQkYS5zbGljZSgkJGkrMSkpJykpICsgXCIpfVwiICtcbiAgICBcIn1lbHNle1wiICsgKGdlbkFzc2lnbm1lbnRDb2RlKHZhbHVlLCAnJCRjJykpICsgXCJ9XCIsXG4gICAgbnVsbCwgdHJ1ZVxuICApO1xufVxuXG5mdW5jdGlvbiBnZW5SYWRpb01vZGVsIChcbiAgZWwsXG4gIHZhbHVlLFxuICBtb2RpZmllcnNcbikge1xuICB2YXIgbnVtYmVyID0gbW9kaWZpZXJzICYmIG1vZGlmaWVycy5udW1iZXI7XG4gIHZhciB2YWx1ZUJpbmRpbmcgPSBnZXRCaW5kaW5nQXR0cihlbCwgJ3ZhbHVlJykgfHwgJ251bGwnO1xuICB2YWx1ZUJpbmRpbmcgPSBudW1iZXIgPyAoXCJfbihcIiArIHZhbHVlQmluZGluZyArIFwiKVwiKSA6IHZhbHVlQmluZGluZztcbiAgYWRkUHJvcChlbCwgJ2NoZWNrZWQnLCAoXCJfcShcIiArIHZhbHVlICsgXCIsXCIgKyB2YWx1ZUJpbmRpbmcgKyBcIilcIikpO1xuICBhZGRIYW5kbGVyKGVsLCAnY2hhbmdlJywgZ2VuQXNzaWdubWVudENvZGUodmFsdWUsIHZhbHVlQmluZGluZyksIG51bGwsIHRydWUpO1xufVxuXG5mdW5jdGlvbiBnZW5TZWxlY3QgKFxuICBlbCxcbiAgdmFsdWUsXG4gIG1vZGlmaWVyc1xuKSB7XG4gIHZhciBudW1iZXIgPSBtb2RpZmllcnMgJiYgbW9kaWZpZXJzLm51bWJlcjtcbiAgdmFyIHNlbGVjdGVkVmFsID0gXCJBcnJheS5wcm90b3R5cGUuZmlsdGVyXCIgK1xuICAgIFwiLmNhbGwoJGV2ZW50LnRhcmdldC5vcHRpb25zLGZ1bmN0aW9uKG8pe3JldHVybiBvLnNlbGVjdGVkfSlcIiArXG4gICAgXCIubWFwKGZ1bmN0aW9uKG8pe3ZhciB2YWwgPSBcXFwiX3ZhbHVlXFxcIiBpbiBvID8gby5fdmFsdWUgOiBvLnZhbHVlO1wiICtcbiAgICBcInJldHVybiBcIiArIChudW1iZXIgPyAnX24odmFsKScgOiAndmFsJykgKyBcIn0pXCI7XG5cbiAgdmFyIGFzc2lnbm1lbnQgPSAnJGV2ZW50LnRhcmdldC5tdWx0aXBsZSA/ICQkc2VsZWN0ZWRWYWwgOiAkJHNlbGVjdGVkVmFsWzBdJztcbiAgdmFyIGNvZGUgPSBcInZhciAkJHNlbGVjdGVkVmFsID0gXCIgKyBzZWxlY3RlZFZhbCArIFwiO1wiO1xuICBjb2RlID0gY29kZSArIFwiIFwiICsgKGdlbkFzc2lnbm1lbnRDb2RlKHZhbHVlLCBhc3NpZ25tZW50KSk7XG4gIGFkZEhhbmRsZXIoZWwsICdjaGFuZ2UnLCBjb2RlLCBudWxsLCB0cnVlKTtcbn1cblxuZnVuY3Rpb24gZ2VuRGVmYXVsdE1vZGVsIChcbiAgZWwsXG4gIHZhbHVlLFxuICBtb2RpZmllcnNcbikge1xuICB2YXIgdHlwZSA9IGVsLmF0dHJzTWFwLnR5cGU7XG5cbiAgLy8gd2FybiBpZiB2LWJpbmQ6dmFsdWUgY29uZmxpY3RzIHdpdGggdi1tb2RlbFxuICAvLyBleGNlcHQgZm9yIGlucHV0cyB3aXRoIHYtYmluZDp0eXBlXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgdmFyIHZhbHVlJDEgPSBlbC5hdHRyc01hcFsndi1iaW5kOnZhbHVlJ10gfHwgZWwuYXR0cnNNYXBbJzp2YWx1ZSddO1xuICAgIHZhciB0eXBlQmluZGluZyA9IGVsLmF0dHJzTWFwWyd2LWJpbmQ6dHlwZSddIHx8IGVsLmF0dHJzTWFwWyc6dHlwZSddO1xuICAgIGlmICh2YWx1ZSQxICYmICF0eXBlQmluZGluZykge1xuICAgICAgdmFyIGJpbmRpbmcgPSBlbC5hdHRyc01hcFsndi1iaW5kOnZhbHVlJ10gPyAndi1iaW5kOnZhbHVlJyA6ICc6dmFsdWUnO1xuICAgICAgd2FybiQxKFxuICAgICAgICBiaW5kaW5nICsgXCI9XFxcIlwiICsgdmFsdWUkMSArIFwiXFxcIiBjb25mbGljdHMgd2l0aCB2LW1vZGVsIG9uIHRoZSBzYW1lIGVsZW1lbnQgXCIgK1xuICAgICAgICAnYmVjYXVzZSB0aGUgbGF0dGVyIGFscmVhZHkgZXhwYW5kcyB0byBhIHZhbHVlIGJpbmRpbmcgaW50ZXJuYWxseScsXG4gICAgICAgIGVsLnJhd0F0dHJzTWFwW2JpbmRpbmddXG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIHZhciByZWYgPSBtb2RpZmllcnMgfHwge307XG4gIHZhciBsYXp5ID0gcmVmLmxhenk7XG4gIHZhciBudW1iZXIgPSByZWYubnVtYmVyO1xuICB2YXIgdHJpbSA9IHJlZi50cmltO1xuICB2YXIgbmVlZENvbXBvc2l0aW9uR3VhcmQgPSAhbGF6eSAmJiB0eXBlICE9PSAncmFuZ2UnO1xuICB2YXIgZXZlbnQgPSBsYXp5XG4gICAgPyAnY2hhbmdlJ1xuICAgIDogdHlwZSA9PT0gJ3JhbmdlJ1xuICAgICAgPyBSQU5HRV9UT0tFTlxuICAgICAgOiAnaW5wdXQnO1xuXG4gIHZhciB2YWx1ZUV4cHJlc3Npb24gPSAnJGV2ZW50LnRhcmdldC52YWx1ZSc7XG4gIGlmICh0cmltKSB7XG4gICAgdmFsdWVFeHByZXNzaW9uID0gXCIkZXZlbnQudGFyZ2V0LnZhbHVlLnRyaW0oKVwiO1xuICB9XG4gIGlmIChudW1iZXIpIHtcbiAgICB2YWx1ZUV4cHJlc3Npb24gPSBcIl9uKFwiICsgdmFsdWVFeHByZXNzaW9uICsgXCIpXCI7XG4gIH1cblxuICB2YXIgY29kZSA9IGdlbkFzc2lnbm1lbnRDb2RlKHZhbHVlLCB2YWx1ZUV4cHJlc3Npb24pO1xuICBpZiAobmVlZENvbXBvc2l0aW9uR3VhcmQpIHtcbiAgICBjb2RlID0gXCJpZigkZXZlbnQudGFyZ2V0LmNvbXBvc2luZylyZXR1cm47XCIgKyBjb2RlO1xuICB9XG5cbiAgYWRkUHJvcChlbCwgJ3ZhbHVlJywgKFwiKFwiICsgdmFsdWUgKyBcIilcIikpO1xuICBhZGRIYW5kbGVyKGVsLCBldmVudCwgY29kZSwgbnVsbCwgdHJ1ZSk7XG4gIGlmICh0cmltIHx8IG51bWJlcikge1xuICAgIGFkZEhhbmRsZXIoZWwsICdibHVyJywgJyRmb3JjZVVwZGF0ZSgpJyk7XG4gIH1cbn1cblxuLyogICovXG5cbi8vIG5vcm1hbGl6ZSB2LW1vZGVsIGV2ZW50IHRva2VucyB0aGF0IGNhbiBvbmx5IGJlIGRldGVybWluZWQgYXQgcnVudGltZS5cbi8vIGl0J3MgaW1wb3J0YW50IHRvIHBsYWNlIHRoZSBldmVudCBhcyB0aGUgZmlyc3QgaW4gdGhlIGFycmF5IGJlY2F1c2Vcbi8vIHRoZSB3aG9sZSBwb2ludCBpcyBlbnN1cmluZyB0aGUgdi1tb2RlbCBjYWxsYmFjayBnZXRzIGNhbGxlZCBiZWZvcmVcbi8vIHVzZXItYXR0YWNoZWQgaGFuZGxlcnMuXG5mdW5jdGlvbiBub3JtYWxpemVFdmVudHMgKG9uKSB7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICBpZiAoaXNEZWYob25bUkFOR0VfVE9LRU5dKSkge1xuICAgIC8vIElFIGlucHV0W3R5cGU9cmFuZ2VdIG9ubHkgc3VwcG9ydHMgYGNoYW5nZWAgZXZlbnRcbiAgICB2YXIgZXZlbnQgPSBpc0lFID8gJ2NoYW5nZScgOiAnaW5wdXQnO1xuICAgIG9uW2V2ZW50XSA9IFtdLmNvbmNhdChvbltSQU5HRV9UT0tFTl0sIG9uW2V2ZW50XSB8fCBbXSk7XG4gICAgZGVsZXRlIG9uW1JBTkdFX1RPS0VOXTtcbiAgfVxuICAvLyBUaGlzIHdhcyBvcmlnaW5hbGx5IGludGVuZGVkIHRvIGZpeCAjNDUyMSBidXQgbm8gbG9uZ2VyIG5lY2Vzc2FyeVxuICAvLyBhZnRlciAyLjUuIEtlZXBpbmcgaXQgZm9yIGJhY2t3YXJkcyBjb21wYXQgd2l0aCBnZW5lcmF0ZWQgY29kZSBmcm9tIDwgMi40XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICBpZiAoaXNEZWYob25bQ0hFQ0tCT1hfUkFESU9fVE9LRU5dKSkge1xuICAgIG9uLmNoYW5nZSA9IFtdLmNvbmNhdChvbltDSEVDS0JPWF9SQURJT19UT0tFTl0sIG9uLmNoYW5nZSB8fCBbXSk7XG4gICAgZGVsZXRlIG9uW0NIRUNLQk9YX1JBRElPX1RPS0VOXTtcbiAgfVxufVxuXG52YXIgdGFyZ2V0JDE7XG5cbmZ1bmN0aW9uIGNyZWF0ZU9uY2VIYW5kbGVyJDEgKGV2ZW50LCBoYW5kbGVyLCBjYXB0dXJlKSB7XG4gIHZhciBfdGFyZ2V0ID0gdGFyZ2V0JDE7IC8vIHNhdmUgY3VycmVudCB0YXJnZXQgZWxlbWVudCBpbiBjbG9zdXJlXG4gIHJldHVybiBmdW5jdGlvbiBvbmNlSGFuZGxlciAoKSB7XG4gICAgdmFyIHJlcyA9IGhhbmRsZXIuYXBwbHkobnVsbCwgYXJndW1lbnRzKTtcbiAgICBpZiAocmVzICE9PSBudWxsKSB7XG4gICAgICByZW1vdmUkMihldmVudCwgb25jZUhhbmRsZXIsIGNhcHR1cmUsIF90YXJnZXQpO1xuICAgIH1cbiAgfVxufVxuXG4vLyAjOTQ0NjogRmlyZWZveCA8PSA1MyAoaW4gcGFydGljdWxhciwgRVNSIDUyKSBoYXMgaW5jb3JyZWN0IEV2ZW50LnRpbWVTdGFtcFxuLy8gaW1wbGVtZW50YXRpb24gYW5kIGRvZXMgbm90IGZpcmUgbWljcm90YXNrcyBpbiBiZXR3ZWVuIGV2ZW50IHByb3BhZ2F0aW9uLCBzb1xuLy8gc2FmZSB0byBleGNsdWRlLlxudmFyIHVzZU1pY3JvdGFza0ZpeCA9IGlzVXNpbmdNaWNyb1Rhc2sgJiYgIShpc0ZGICYmIE51bWJlcihpc0ZGWzFdKSA8PSA1Myk7XG5cbmZ1bmN0aW9uIGFkZCQxIChcbiAgbmFtZSxcbiAgaGFuZGxlcixcbiAgY2FwdHVyZSxcbiAgcGFzc2l2ZVxuKSB7XG4gIC8vIGFzeW5jIGVkZ2UgY2FzZSAjNjU2NjogaW5uZXIgY2xpY2sgZXZlbnQgdHJpZ2dlcnMgcGF0Y2gsIGV2ZW50IGhhbmRsZXJcbiAgLy8gYXR0YWNoZWQgdG8gb3V0ZXIgZWxlbWVudCBkdXJpbmcgcGF0Y2gsIGFuZCB0cmlnZ2VyZWQgYWdhaW4uIFRoaXNcbiAgLy8gaGFwcGVucyBiZWNhdXNlIGJyb3dzZXJzIGZpcmUgbWljcm90YXNrIHRpY2tzIGJldHdlZW4gZXZlbnQgcHJvcGFnYXRpb24uXG4gIC8vIHRoZSBzb2x1dGlvbiBpcyBzaW1wbGU6IHdlIHNhdmUgdGhlIHRpbWVzdGFtcCB3aGVuIGEgaGFuZGxlciBpcyBhdHRhY2hlZCxcbiAgLy8gYW5kIHRoZSBoYW5kbGVyIHdvdWxkIG9ubHkgZmlyZSBpZiB0aGUgZXZlbnQgcGFzc2VkIHRvIGl0IHdhcyBmaXJlZFxuICAvLyBBRlRFUiBpdCB3YXMgYXR0YWNoZWQuXG4gIGlmICh1c2VNaWNyb3Rhc2tGaXgpIHtcbiAgICB2YXIgYXR0YWNoZWRUaW1lc3RhbXAgPSBjdXJyZW50Rmx1c2hUaW1lc3RhbXA7XG4gICAgdmFyIG9yaWdpbmFsID0gaGFuZGxlcjtcbiAgICBoYW5kbGVyID0gb3JpZ2luYWwuX3dyYXBwZXIgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgaWYgKFxuICAgICAgICAvLyBubyBidWJibGluZywgc2hvdWxkIGFsd2F5cyBmaXJlLlxuICAgICAgICAvLyB0aGlzIGlzIGp1c3QgYSBzYWZldHkgbmV0IGluIGNhc2UgZXZlbnQudGltZVN0YW1wIGlzIHVucmVsaWFibGUgaW5cbiAgICAgICAgLy8gY2VydGFpbiB3ZWlyZCBlbnZpcm9ubWVudHMuLi5cbiAgICAgICAgZS50YXJnZXQgPT09IGUuY3VycmVudFRhcmdldCB8fFxuICAgICAgICAvLyBldmVudCBpcyBmaXJlZCBhZnRlciBoYW5kbGVyIGF0dGFjaG1lbnRcbiAgICAgICAgZS50aW1lU3RhbXAgPj0gYXR0YWNoZWRUaW1lc3RhbXAgfHxcbiAgICAgICAgLy8gYmFpbCBmb3IgZW52aXJvbm1lbnRzIHRoYXQgaGF2ZSBidWdneSBldmVudC50aW1lU3RhbXAgaW1wbGVtZW50YXRpb25zXG4gICAgICAgIC8vICM5NDYyIGlPUyA5IGJ1ZzogZXZlbnQudGltZVN0YW1wIGlzIDAgYWZ0ZXIgaGlzdG9yeS5wdXNoU3RhdGVcbiAgICAgICAgLy8gIzk2ODEgUXRXZWJFbmdpbmUgZXZlbnQudGltZVN0YW1wIGlzIG5lZ2F0aXZlIHZhbHVlXG4gICAgICAgIGUudGltZVN0YW1wIDw9IDAgfHxcbiAgICAgICAgLy8gIzk0NDggYmFpbCBpZiBldmVudCBpcyBmaXJlZCBpbiBhbm90aGVyIGRvY3VtZW50IGluIGEgbXVsdGktcGFnZVxuICAgICAgICAvLyBlbGVjdHJvbi9udy5qcyBhcHAsIHNpbmNlIGV2ZW50LnRpbWVTdGFtcCB3aWxsIGJlIHVzaW5nIGEgZGlmZmVyZW50XG4gICAgICAgIC8vIHN0YXJ0aW5nIHJlZmVyZW5jZVxuICAgICAgICBlLnRhcmdldC5vd25lckRvY3VtZW50ICE9PSBkb2N1bWVudFxuICAgICAgKSB7XG4gICAgICAgIHJldHVybiBvcmlnaW5hbC5hcHBseSh0aGlzLCBhcmd1bWVudHMpXG4gICAgICB9XG4gICAgfTtcbiAgfVxuICB0YXJnZXQkMS5hZGRFdmVudExpc3RlbmVyKFxuICAgIG5hbWUsXG4gICAgaGFuZGxlcixcbiAgICBzdXBwb3J0c1Bhc3NpdmVcbiAgICAgID8geyBjYXB0dXJlOiBjYXB0dXJlLCBwYXNzaXZlOiBwYXNzaXZlIH1cbiAgICAgIDogY2FwdHVyZVxuICApO1xufVxuXG5mdW5jdGlvbiByZW1vdmUkMiAoXG4gIG5hbWUsXG4gIGhhbmRsZXIsXG4gIGNhcHR1cmUsXG4gIF90YXJnZXRcbikge1xuICAoX3RhcmdldCB8fCB0YXJnZXQkMSkucmVtb3ZlRXZlbnRMaXN0ZW5lcihcbiAgICBuYW1lLFxuICAgIGhhbmRsZXIuX3dyYXBwZXIgfHwgaGFuZGxlcixcbiAgICBjYXB0dXJlXG4gICk7XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZURPTUxpc3RlbmVycyAob2xkVm5vZGUsIHZub2RlKSB7XG4gIGlmIChpc1VuZGVmKG9sZFZub2RlLmRhdGEub24pICYmIGlzVW5kZWYodm5vZGUuZGF0YS5vbikpIHtcbiAgICByZXR1cm5cbiAgfVxuICB2YXIgb24gPSB2bm9kZS5kYXRhLm9uIHx8IHt9O1xuICB2YXIgb2xkT24gPSBvbGRWbm9kZS5kYXRhLm9uIHx8IHt9O1xuICB0YXJnZXQkMSA9IHZub2RlLmVsbTtcbiAgbm9ybWFsaXplRXZlbnRzKG9uKTtcbiAgdXBkYXRlTGlzdGVuZXJzKG9uLCBvbGRPbiwgYWRkJDEsIHJlbW92ZSQyLCBjcmVhdGVPbmNlSGFuZGxlciQxLCB2bm9kZS5jb250ZXh0KTtcbiAgdGFyZ2V0JDEgPSB1bmRlZmluZWQ7XG59XG5cbnZhciBldmVudHMgPSB7XG4gIGNyZWF0ZTogdXBkYXRlRE9NTGlzdGVuZXJzLFxuICB1cGRhdGU6IHVwZGF0ZURPTUxpc3RlbmVyc1xufTtcblxuLyogICovXG5cbnZhciBzdmdDb250YWluZXI7XG5cbmZ1bmN0aW9uIHVwZGF0ZURPTVByb3BzIChvbGRWbm9kZSwgdm5vZGUpIHtcbiAgaWYgKGlzVW5kZWYob2xkVm5vZGUuZGF0YS5kb21Qcm9wcykgJiYgaXNVbmRlZih2bm9kZS5kYXRhLmRvbVByb3BzKSkge1xuICAgIHJldHVyblxuICB9XG4gIHZhciBrZXksIGN1cjtcbiAgdmFyIGVsbSA9IHZub2RlLmVsbTtcbiAgdmFyIG9sZFByb3BzID0gb2xkVm5vZGUuZGF0YS5kb21Qcm9wcyB8fCB7fTtcbiAgdmFyIHByb3BzID0gdm5vZGUuZGF0YS5kb21Qcm9wcyB8fCB7fTtcbiAgLy8gY2xvbmUgb2JzZXJ2ZWQgb2JqZWN0cywgYXMgdGhlIHVzZXIgcHJvYmFibHkgd2FudHMgdG8gbXV0YXRlIGl0XG4gIGlmIChpc0RlZihwcm9wcy5fX29iX18pKSB7XG4gICAgcHJvcHMgPSB2bm9kZS5kYXRhLmRvbVByb3BzID0gZXh0ZW5kKHt9LCBwcm9wcyk7XG4gIH1cblxuICBmb3IgKGtleSBpbiBvbGRQcm9wcykge1xuICAgIGlmICghKGtleSBpbiBwcm9wcykpIHtcbiAgICAgIGVsbVtrZXldID0gJyc7XG4gICAgfVxuICB9XG5cbiAgZm9yIChrZXkgaW4gcHJvcHMpIHtcbiAgICBjdXIgPSBwcm9wc1trZXldO1xuICAgIC8vIGlnbm9yZSBjaGlsZHJlbiBpZiB0aGUgbm9kZSBoYXMgdGV4dENvbnRlbnQgb3IgaW5uZXJIVE1MLFxuICAgIC8vIGFzIHRoZXNlIHdpbGwgdGhyb3cgYXdheSBleGlzdGluZyBET00gbm9kZXMgYW5kIGNhdXNlIHJlbW92YWwgZXJyb3JzXG4gICAgLy8gb24gc3Vic2VxdWVudCBwYXRjaGVzICgjMzM2MClcbiAgICBpZiAoa2V5ID09PSAndGV4dENvbnRlbnQnIHx8IGtleSA9PT0gJ2lubmVySFRNTCcpIHtcbiAgICAgIGlmICh2bm9kZS5jaGlsZHJlbikgeyB2bm9kZS5jaGlsZHJlbi5sZW5ndGggPSAwOyB9XG4gICAgICBpZiAoY3VyID09PSBvbGRQcm9wc1trZXldKSB7IGNvbnRpbnVlIH1cbiAgICAgIC8vICM2NjAxIHdvcmsgYXJvdW5kIENocm9tZSB2ZXJzaW9uIDw9IDU1IGJ1ZyB3aGVyZSBzaW5nbGUgdGV4dE5vZGVcbiAgICAgIC8vIHJlcGxhY2VkIGJ5IGlubmVySFRNTC90ZXh0Q29udGVudCByZXRhaW5zIGl0cyBwYXJlbnROb2RlIHByb3BlcnR5XG4gICAgICBpZiAoZWxtLmNoaWxkTm9kZXMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgIGVsbS5yZW1vdmVDaGlsZChlbG0uY2hpbGROb2Rlc1swXSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGtleSA9PT0gJ3ZhbHVlJyAmJiBlbG0udGFnTmFtZSAhPT0gJ1BST0dSRVNTJykge1xuICAgICAgLy8gc3RvcmUgdmFsdWUgYXMgX3ZhbHVlIGFzIHdlbGwgc2luY2VcbiAgICAgIC8vIG5vbi1zdHJpbmcgdmFsdWVzIHdpbGwgYmUgc3RyaW5naWZpZWRcbiAgICAgIGVsbS5fdmFsdWUgPSBjdXI7XG4gICAgICAvLyBhdm9pZCByZXNldHRpbmcgY3Vyc29yIHBvc2l0aW9uIHdoZW4gdmFsdWUgaXMgdGhlIHNhbWVcbiAgICAgIHZhciBzdHJDdXIgPSBpc1VuZGVmKGN1cikgPyAnJyA6IFN0cmluZyhjdXIpO1xuICAgICAgaWYgKHNob3VsZFVwZGF0ZVZhbHVlKGVsbSwgc3RyQ3VyKSkge1xuICAgICAgICBlbG0udmFsdWUgPSBzdHJDdXI7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChrZXkgPT09ICdpbm5lckhUTUwnICYmIGlzU1ZHKGVsbS50YWdOYW1lKSAmJiBpc1VuZGVmKGVsbS5pbm5lckhUTUwpKSB7XG4gICAgICAvLyBJRSBkb2Vzbid0IHN1cHBvcnQgaW5uZXJIVE1MIGZvciBTVkcgZWxlbWVudHNcbiAgICAgIHN2Z0NvbnRhaW5lciA9IHN2Z0NvbnRhaW5lciB8fCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIHN2Z0NvbnRhaW5lci5pbm5lckhUTUwgPSBcIjxzdmc+XCIgKyBjdXIgKyBcIjwvc3ZnPlwiO1xuICAgICAgdmFyIHN2ZyA9IHN2Z0NvbnRhaW5lci5maXJzdENoaWxkO1xuICAgICAgd2hpbGUgKGVsbS5maXJzdENoaWxkKSB7XG4gICAgICAgIGVsbS5yZW1vdmVDaGlsZChlbG0uZmlyc3RDaGlsZCk7XG4gICAgICB9XG4gICAgICB3aGlsZSAoc3ZnLmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgZWxtLmFwcGVuZENoaWxkKHN2Zy5maXJzdENoaWxkKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKFxuICAgICAgLy8gc2tpcCB0aGUgdXBkYXRlIGlmIG9sZCBhbmQgbmV3IFZET00gc3RhdGUgaXMgdGhlIHNhbWUuXG4gICAgICAvLyBgdmFsdWVgIGlzIGhhbmRsZWQgc2VwYXJhdGVseSBiZWNhdXNlIHRoZSBET00gdmFsdWUgbWF5IGJlIHRlbXBvcmFyaWx5XG4gICAgICAvLyBvdXQgb2Ygc3luYyB3aXRoIFZET00gc3RhdGUgZHVlIHRvIGZvY3VzLCBjb21wb3NpdGlvbiBhbmQgbW9kaWZpZXJzLlxuICAgICAgLy8gVGhpcyAgIzQ1MjEgYnkgc2tpcHBpbmcgdGhlIHVubmVjZXNhcnJ5IGBjaGVja2VkYCB1cGRhdGUuXG4gICAgICBjdXIgIT09IG9sZFByb3BzW2tleV1cbiAgICApIHtcbiAgICAgIC8vIHNvbWUgcHJvcGVydHkgdXBkYXRlcyBjYW4gdGhyb3dcbiAgICAgIC8vIGUuZy4gYHZhbHVlYCBvbiA8cHJvZ3Jlc3M+IHcvIG5vbi1maW5pdGUgdmFsdWVcbiAgICAgIHRyeSB7XG4gICAgICAgIGVsbVtrZXldID0gY3VyO1xuICAgICAgfSBjYXRjaCAoZSkge31cbiAgICB9XG4gIH1cbn1cblxuLy8gY2hlY2sgcGxhdGZvcm1zL3dlYi91dGlsL2F0dHJzLmpzIGFjY2VwdFZhbHVlXG5cblxuZnVuY3Rpb24gc2hvdWxkVXBkYXRlVmFsdWUgKGVsbSwgY2hlY2tWYWwpIHtcbiAgcmV0dXJuICghZWxtLmNvbXBvc2luZyAmJiAoXG4gICAgZWxtLnRhZ05hbWUgPT09ICdPUFRJT04nIHx8XG4gICAgaXNOb3RJbkZvY3VzQW5kRGlydHkoZWxtLCBjaGVja1ZhbCkgfHxcbiAgICBpc0RpcnR5V2l0aE1vZGlmaWVycyhlbG0sIGNoZWNrVmFsKVxuICApKVxufVxuXG5mdW5jdGlvbiBpc05vdEluRm9jdXNBbmREaXJ0eSAoZWxtLCBjaGVja1ZhbCkge1xuICAvLyByZXR1cm4gdHJ1ZSB3aGVuIHRleHRib3ggKC5udW1iZXIgYW5kIC50cmltKSBsb3NlcyBmb2N1cyBhbmQgaXRzIHZhbHVlIGlzXG4gIC8vIG5vdCBlcXVhbCB0byB0aGUgdXBkYXRlZCB2YWx1ZVxuICB2YXIgbm90SW5Gb2N1cyA9IHRydWU7XG4gIC8vICM2MTU3XG4gIC8vIHdvcmsgYXJvdW5kIElFIGJ1ZyB3aGVuIGFjY2Vzc2luZyBkb2N1bWVudC5hY3RpdmVFbGVtZW50IGluIGFuIGlmcmFtZVxuICB0cnkgeyBub3RJbkZvY3VzID0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCAhPT0gZWxtOyB9IGNhdGNoIChlKSB7fVxuICByZXR1cm4gbm90SW5Gb2N1cyAmJiBlbG0udmFsdWUgIT09IGNoZWNrVmFsXG59XG5cbmZ1bmN0aW9uIGlzRGlydHlXaXRoTW9kaWZpZXJzIChlbG0sIG5ld1ZhbCkge1xuICB2YXIgdmFsdWUgPSBlbG0udmFsdWU7XG4gIHZhciBtb2RpZmllcnMgPSBlbG0uX3ZNb2RpZmllcnM7IC8vIGluamVjdGVkIGJ5IHYtbW9kZWwgcnVudGltZVxuICBpZiAoaXNEZWYobW9kaWZpZXJzKSkge1xuICAgIGlmIChtb2RpZmllcnMubnVtYmVyKSB7XG4gICAgICByZXR1cm4gdG9OdW1iZXIodmFsdWUpICE9PSB0b051bWJlcihuZXdWYWwpXG4gICAgfVxuICAgIGlmIChtb2RpZmllcnMudHJpbSkge1xuICAgICAgcmV0dXJuIHZhbHVlLnRyaW0oKSAhPT0gbmV3VmFsLnRyaW0oKVxuICAgIH1cbiAgfVxuICByZXR1cm4gdmFsdWUgIT09IG5ld1ZhbFxufVxuXG52YXIgZG9tUHJvcHMgPSB7XG4gIGNyZWF0ZTogdXBkYXRlRE9NUHJvcHMsXG4gIHVwZGF0ZTogdXBkYXRlRE9NUHJvcHNcbn07XG5cbi8qICAqL1xuXG52YXIgcGFyc2VTdHlsZVRleHQgPSBjYWNoZWQoZnVuY3Rpb24gKGNzc1RleHQpIHtcbiAgdmFyIHJlcyA9IHt9O1xuICB2YXIgbGlzdERlbGltaXRlciA9IC87KD8hW14oXSpcXCkpL2c7XG4gIHZhciBwcm9wZXJ0eURlbGltaXRlciA9IC86KC4rKS87XG4gIGNzc1RleHQuc3BsaXQobGlzdERlbGltaXRlcikuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkge1xuICAgIGlmIChpdGVtKSB7XG4gICAgICB2YXIgdG1wID0gaXRlbS5zcGxpdChwcm9wZXJ0eURlbGltaXRlcik7XG4gICAgICB0bXAubGVuZ3RoID4gMSAmJiAocmVzW3RtcFswXS50cmltKCldID0gdG1wWzFdLnRyaW0oKSk7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHJlc1xufSk7XG5cbi8vIG1lcmdlIHN0YXRpYyBhbmQgZHluYW1pYyBzdHlsZSBkYXRhIG9uIHRoZSBzYW1lIHZub2RlXG5mdW5jdGlvbiBub3JtYWxpemVTdHlsZURhdGEgKGRhdGEpIHtcbiAgdmFyIHN0eWxlID0gbm9ybWFsaXplU3R5bGVCaW5kaW5nKGRhdGEuc3R5bGUpO1xuICAvLyBzdGF0aWMgc3R5bGUgaXMgcHJlLXByb2Nlc3NlZCBpbnRvIGFuIG9iamVjdCBkdXJpbmcgY29tcGlsYXRpb25cbiAgLy8gYW5kIGlzIGFsd2F5cyBhIGZyZXNoIG9iamVjdCwgc28gaXQncyBzYWZlIHRvIG1lcmdlIGludG8gaXRcbiAgcmV0dXJuIGRhdGEuc3RhdGljU3R5bGVcbiAgICA/IGV4dGVuZChkYXRhLnN0YXRpY1N0eWxlLCBzdHlsZSlcbiAgICA6IHN0eWxlXG59XG5cbi8vIG5vcm1hbGl6ZSBwb3NzaWJsZSBhcnJheSAvIHN0cmluZyB2YWx1ZXMgaW50byBPYmplY3RcbmZ1bmN0aW9uIG5vcm1hbGl6ZVN0eWxlQmluZGluZyAoYmluZGluZ1N0eWxlKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGJpbmRpbmdTdHlsZSkpIHtcbiAgICByZXR1cm4gdG9PYmplY3QoYmluZGluZ1N0eWxlKVxuICB9XG4gIGlmICh0eXBlb2YgYmluZGluZ1N0eWxlID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBwYXJzZVN0eWxlVGV4dChiaW5kaW5nU3R5bGUpXG4gIH1cbiAgcmV0dXJuIGJpbmRpbmdTdHlsZVxufVxuXG4vKipcbiAqIHBhcmVudCBjb21wb25lbnQgc3R5bGUgc2hvdWxkIGJlIGFmdGVyIGNoaWxkJ3NcbiAqIHNvIHRoYXQgcGFyZW50IGNvbXBvbmVudCdzIHN0eWxlIGNvdWxkIG92ZXJyaWRlIGl0XG4gKi9cbmZ1bmN0aW9uIGdldFN0eWxlICh2bm9kZSwgY2hlY2tDaGlsZCkge1xuICB2YXIgcmVzID0ge307XG4gIHZhciBzdHlsZURhdGE7XG5cbiAgaWYgKGNoZWNrQ2hpbGQpIHtcbiAgICB2YXIgY2hpbGROb2RlID0gdm5vZGU7XG4gICAgd2hpbGUgKGNoaWxkTm9kZS5jb21wb25lbnRJbnN0YW5jZSkge1xuICAgICAgY2hpbGROb2RlID0gY2hpbGROb2RlLmNvbXBvbmVudEluc3RhbmNlLl92bm9kZTtcbiAgICAgIGlmIChcbiAgICAgICAgY2hpbGROb2RlICYmIGNoaWxkTm9kZS5kYXRhICYmXG4gICAgICAgIChzdHlsZURhdGEgPSBub3JtYWxpemVTdHlsZURhdGEoY2hpbGROb2RlLmRhdGEpKVxuICAgICAgKSB7XG4gICAgICAgIGV4dGVuZChyZXMsIHN0eWxlRGF0YSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgaWYgKChzdHlsZURhdGEgPSBub3JtYWxpemVTdHlsZURhdGEodm5vZGUuZGF0YSkpKSB7XG4gICAgZXh0ZW5kKHJlcywgc3R5bGVEYXRhKTtcbiAgfVxuXG4gIHZhciBwYXJlbnROb2RlID0gdm5vZGU7XG4gIHdoaWxlICgocGFyZW50Tm9kZSA9IHBhcmVudE5vZGUucGFyZW50KSkge1xuICAgIGlmIChwYXJlbnROb2RlLmRhdGEgJiYgKHN0eWxlRGF0YSA9IG5vcm1hbGl6ZVN0eWxlRGF0YShwYXJlbnROb2RlLmRhdGEpKSkge1xuICAgICAgZXh0ZW5kKHJlcywgc3R5bGVEYXRhKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc1xufVxuXG4vKiAgKi9cblxudmFyIGNzc1ZhclJFID0gL14tLS87XG52YXIgaW1wb3J0YW50UkUgPSAvXFxzKiFpbXBvcnRhbnQkLztcbnZhciBzZXRQcm9wID0gZnVuY3Rpb24gKGVsLCBuYW1lLCB2YWwpIHtcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gIGlmIChjc3NWYXJSRS50ZXN0KG5hbWUpKSB7XG4gICAgZWwuc3R5bGUuc2V0UHJvcGVydHkobmFtZSwgdmFsKTtcbiAgfSBlbHNlIGlmIChpbXBvcnRhbnRSRS50ZXN0KHZhbCkpIHtcbiAgICBlbC5zdHlsZS5zZXRQcm9wZXJ0eShoeXBoZW5hdGUobmFtZSksIHZhbC5yZXBsYWNlKGltcG9ydGFudFJFLCAnJyksICdpbXBvcnRhbnQnKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgbm9ybWFsaXplZE5hbWUgPSBub3JtYWxpemUobmFtZSk7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkodmFsKSkge1xuICAgICAgLy8gU3VwcG9ydCB2YWx1ZXMgYXJyYXkgY3JlYXRlZCBieSBhdXRvcHJlZml4ZXIsIGUuZy5cbiAgICAgIC8vIHtkaXNwbGF5OiBbXCItd2Via2l0LWJveFwiLCBcIi1tcy1mbGV4Ym94XCIsIFwiZmxleFwiXX1cbiAgICAgIC8vIFNldCB0aGVtIG9uZSBieSBvbmUsIGFuZCB0aGUgYnJvd3NlciB3aWxsIG9ubHkgc2V0IHRob3NlIGl0IGNhbiByZWNvZ25pemVcbiAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSB2YWwubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgZWwuc3R5bGVbbm9ybWFsaXplZE5hbWVdID0gdmFsW2ldO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBlbC5zdHlsZVtub3JtYWxpemVkTmFtZV0gPSB2YWw7XG4gICAgfVxuICB9XG59O1xuXG52YXIgdmVuZG9yTmFtZXMgPSBbJ1dlYmtpdCcsICdNb3onLCAnbXMnXTtcblxudmFyIGVtcHR5U3R5bGU7XG52YXIgbm9ybWFsaXplID0gY2FjaGVkKGZ1bmN0aW9uIChwcm9wKSB7XG4gIGVtcHR5U3R5bGUgPSBlbXB0eVN0eWxlIHx8IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpLnN0eWxlO1xuICBwcm9wID0gY2FtZWxpemUocHJvcCk7XG4gIGlmIChwcm9wICE9PSAnZmlsdGVyJyAmJiAocHJvcCBpbiBlbXB0eVN0eWxlKSkge1xuICAgIHJldHVybiBwcm9wXG4gIH1cbiAgdmFyIGNhcE5hbWUgPSBwcm9wLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgcHJvcC5zbGljZSgxKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB2ZW5kb3JOYW1lcy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBuYW1lID0gdmVuZG9yTmFtZXNbaV0gKyBjYXBOYW1lO1xuICAgIGlmIChuYW1lIGluIGVtcHR5U3R5bGUpIHtcbiAgICAgIHJldHVybiBuYW1lXG4gICAgfVxuICB9XG59KTtcblxuZnVuY3Rpb24gdXBkYXRlU3R5bGUgKG9sZFZub2RlLCB2bm9kZSkge1xuICB2YXIgZGF0YSA9IHZub2RlLmRhdGE7XG4gIHZhciBvbGREYXRhID0gb2xkVm5vZGUuZGF0YTtcblxuICBpZiAoaXNVbmRlZihkYXRhLnN0YXRpY1N0eWxlKSAmJiBpc1VuZGVmKGRhdGEuc3R5bGUpICYmXG4gICAgaXNVbmRlZihvbGREYXRhLnN0YXRpY1N0eWxlKSAmJiBpc1VuZGVmKG9sZERhdGEuc3R5bGUpXG4gICkge1xuICAgIHJldHVyblxuICB9XG5cbiAgdmFyIGN1ciwgbmFtZTtcbiAgdmFyIGVsID0gdm5vZGUuZWxtO1xuICB2YXIgb2xkU3RhdGljU3R5bGUgPSBvbGREYXRhLnN0YXRpY1N0eWxlO1xuICB2YXIgb2xkU3R5bGVCaW5kaW5nID0gb2xkRGF0YS5ub3JtYWxpemVkU3R5bGUgfHwgb2xkRGF0YS5zdHlsZSB8fCB7fTtcblxuICAvLyBpZiBzdGF0aWMgc3R5bGUgZXhpc3RzLCBzdHlsZWJpbmRpbmcgYWxyZWFkeSBtZXJnZWQgaW50byBpdCB3aGVuIGRvaW5nIG5vcm1hbGl6ZVN0eWxlRGF0YVxuICB2YXIgb2xkU3R5bGUgPSBvbGRTdGF0aWNTdHlsZSB8fCBvbGRTdHlsZUJpbmRpbmc7XG5cbiAgdmFyIHN0eWxlID0gbm9ybWFsaXplU3R5bGVCaW5kaW5nKHZub2RlLmRhdGEuc3R5bGUpIHx8IHt9O1xuXG4gIC8vIHN0b3JlIG5vcm1hbGl6ZWQgc3R5bGUgdW5kZXIgYSBkaWZmZXJlbnQga2V5IGZvciBuZXh0IGRpZmZcbiAgLy8gbWFrZSBzdXJlIHRvIGNsb25lIGl0IGlmIGl0J3MgcmVhY3RpdmUsIHNpbmNlIHRoZSB1c2VyIGxpa2VseSB3YW50c1xuICAvLyB0byBtdXRhdGUgaXQuXG4gIHZub2RlLmRhdGEubm9ybWFsaXplZFN0eWxlID0gaXNEZWYoc3R5bGUuX19vYl9fKVxuICAgID8gZXh0ZW5kKHt9LCBzdHlsZSlcbiAgICA6IHN0eWxlO1xuXG4gIHZhciBuZXdTdHlsZSA9IGdldFN0eWxlKHZub2RlLCB0cnVlKTtcblxuICBmb3IgKG5hbWUgaW4gb2xkU3R5bGUpIHtcbiAgICBpZiAoaXNVbmRlZihuZXdTdHlsZVtuYW1lXSkpIHtcbiAgICAgIHNldFByb3AoZWwsIG5hbWUsICcnKTtcbiAgICB9XG4gIH1cbiAgZm9yIChuYW1lIGluIG5ld1N0eWxlKSB7XG4gICAgY3VyID0gbmV3U3R5bGVbbmFtZV07XG4gICAgaWYgKGN1ciAhPT0gb2xkU3R5bGVbbmFtZV0pIHtcbiAgICAgIC8vIGllOSBzZXR0aW5nIHRvIG51bGwgaGFzIG5vIGVmZmVjdCwgbXVzdCB1c2UgZW1wdHkgc3RyaW5nXG4gICAgICBzZXRQcm9wKGVsLCBuYW1lLCBjdXIgPT0gbnVsbCA/ICcnIDogY3VyKTtcbiAgICB9XG4gIH1cbn1cblxudmFyIHN0eWxlID0ge1xuICBjcmVhdGU6IHVwZGF0ZVN0eWxlLFxuICB1cGRhdGU6IHVwZGF0ZVN0eWxlXG59O1xuXG4vKiAgKi9cblxudmFyIHdoaXRlc3BhY2VSRSA9IC9cXHMrLztcblxuLyoqXG4gKiBBZGQgY2xhc3Mgd2l0aCBjb21wYXRpYmlsaXR5IGZvciBTVkcgc2luY2UgY2xhc3NMaXN0IGlzIG5vdCBzdXBwb3J0ZWQgb25cbiAqIFNWRyBlbGVtZW50cyBpbiBJRVxuICovXG5mdW5jdGlvbiBhZGRDbGFzcyAoZWwsIGNscykge1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgaWYgKCFjbHMgfHwgIShjbHMgPSBjbHMudHJpbSgpKSkge1xuICAgIHJldHVyblxuICB9XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgaWYgKGVsLmNsYXNzTGlzdCkge1xuICAgIGlmIChjbHMuaW5kZXhPZignICcpID4gLTEpIHtcbiAgICAgIGNscy5zcGxpdCh3aGl0ZXNwYWNlUkUpLmZvckVhY2goZnVuY3Rpb24gKGMpIHsgcmV0dXJuIGVsLmNsYXNzTGlzdC5hZGQoYyk7IH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBlbC5jbGFzc0xpc3QuYWRkKGNscyk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHZhciBjdXIgPSBcIiBcIiArIChlbC5nZXRBdHRyaWJ1dGUoJ2NsYXNzJykgfHwgJycpICsgXCIgXCI7XG4gICAgaWYgKGN1ci5pbmRleE9mKCcgJyArIGNscyArICcgJykgPCAwKSB7XG4gICAgICBlbC5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgKGN1ciArIGNscykudHJpbSgpKTtcbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiBSZW1vdmUgY2xhc3Mgd2l0aCBjb21wYXRpYmlsaXR5IGZvciBTVkcgc2luY2UgY2xhc3NMaXN0IGlzIG5vdCBzdXBwb3J0ZWQgb25cbiAqIFNWRyBlbGVtZW50cyBpbiBJRVxuICovXG5mdW5jdGlvbiByZW1vdmVDbGFzcyAoZWwsIGNscykge1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgaWYgKCFjbHMgfHwgIShjbHMgPSBjbHMudHJpbSgpKSkge1xuICAgIHJldHVyblxuICB9XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgaWYgKGVsLmNsYXNzTGlzdCkge1xuICAgIGlmIChjbHMuaW5kZXhPZignICcpID4gLTEpIHtcbiAgICAgIGNscy5zcGxpdCh3aGl0ZXNwYWNlUkUpLmZvckVhY2goZnVuY3Rpb24gKGMpIHsgcmV0dXJuIGVsLmNsYXNzTGlzdC5yZW1vdmUoYyk7IH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBlbC5jbGFzc0xpc3QucmVtb3ZlKGNscyk7XG4gICAgfVxuICAgIGlmICghZWwuY2xhc3NMaXN0Lmxlbmd0aCkge1xuICAgICAgZWwucmVtb3ZlQXR0cmlidXRlKCdjbGFzcycpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICB2YXIgY3VyID0gXCIgXCIgKyAoZWwuZ2V0QXR0cmlidXRlKCdjbGFzcycpIHx8ICcnKSArIFwiIFwiO1xuICAgIHZhciB0YXIgPSAnICcgKyBjbHMgKyAnICc7XG4gICAgd2hpbGUgKGN1ci5pbmRleE9mKHRhcikgPj0gMCkge1xuICAgICAgY3VyID0gY3VyLnJlcGxhY2UodGFyLCAnICcpO1xuICAgIH1cbiAgICBjdXIgPSBjdXIudHJpbSgpO1xuICAgIGlmIChjdXIpIHtcbiAgICAgIGVsLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCBjdXIpO1xuICAgIH0gZWxzZSB7XG4gICAgICBlbC5yZW1vdmVBdHRyaWJ1dGUoJ2NsYXNzJyk7XG4gICAgfVxuICB9XG59XG5cbi8qICAqL1xuXG5mdW5jdGlvbiByZXNvbHZlVHJhbnNpdGlvbiAoZGVmJCQxKSB7XG4gIGlmICghZGVmJCQxKSB7XG4gICAgcmV0dXJuXG4gIH1cbiAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgaWYgKHR5cGVvZiBkZWYkJDEgPT09ICdvYmplY3QnKSB7XG4gICAgdmFyIHJlcyA9IHt9O1xuICAgIGlmIChkZWYkJDEuY3NzICE9PSBmYWxzZSkge1xuICAgICAgZXh0ZW5kKHJlcywgYXV0b0Nzc1RyYW5zaXRpb24oZGVmJCQxLm5hbWUgfHwgJ3YnKSk7XG4gICAgfVxuICAgIGV4dGVuZChyZXMsIGRlZiQkMSk7XG4gICAgcmV0dXJuIHJlc1xuICB9IGVsc2UgaWYgKHR5cGVvZiBkZWYkJDEgPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIGF1dG9Dc3NUcmFuc2l0aW9uKGRlZiQkMSlcbiAgfVxufVxuXG52YXIgYXV0b0Nzc1RyYW5zaXRpb24gPSBjYWNoZWQoZnVuY3Rpb24gKG5hbWUpIHtcbiAgcmV0dXJuIHtcbiAgICBlbnRlckNsYXNzOiAobmFtZSArIFwiLWVudGVyXCIpLFxuICAgIGVudGVyVG9DbGFzczogKG5hbWUgKyBcIi1lbnRlci10b1wiKSxcbiAgICBlbnRlckFjdGl2ZUNsYXNzOiAobmFtZSArIFwiLWVudGVyLWFjdGl2ZVwiKSxcbiAgICBsZWF2ZUNsYXNzOiAobmFtZSArIFwiLWxlYXZlXCIpLFxuICAgIGxlYXZlVG9DbGFzczogKG5hbWUgKyBcIi1sZWF2ZS10b1wiKSxcbiAgICBsZWF2ZUFjdGl2ZUNsYXNzOiAobmFtZSArIFwiLWxlYXZlLWFjdGl2ZVwiKVxuICB9XG59KTtcblxudmFyIGhhc1RyYW5zaXRpb24gPSBpbkJyb3dzZXIgJiYgIWlzSUU5O1xudmFyIFRSQU5TSVRJT04gPSAndHJhbnNpdGlvbic7XG52YXIgQU5JTUFUSU9OID0gJ2FuaW1hdGlvbic7XG5cbi8vIFRyYW5zaXRpb24gcHJvcGVydHkvZXZlbnQgc25pZmZpbmdcbnZhciB0cmFuc2l0aW9uUHJvcCA9ICd0cmFuc2l0aW9uJztcbnZhciB0cmFuc2l0aW9uRW5kRXZlbnQgPSAndHJhbnNpdGlvbmVuZCc7XG52YXIgYW5pbWF0aW9uUHJvcCA9ICdhbmltYXRpb24nO1xudmFyIGFuaW1hdGlvbkVuZEV2ZW50ID0gJ2FuaW1hdGlvbmVuZCc7XG5pZiAoaGFzVHJhbnNpdGlvbikge1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgaWYgKHdpbmRvdy5vbnRyYW5zaXRpb25lbmQgPT09IHVuZGVmaW5lZCAmJlxuICAgIHdpbmRvdy5vbndlYmtpdHRyYW5zaXRpb25lbmQgIT09IHVuZGVmaW5lZFxuICApIHtcbiAgICB0cmFuc2l0aW9uUHJvcCA9ICdXZWJraXRUcmFuc2l0aW9uJztcbiAgICB0cmFuc2l0aW9uRW5kRXZlbnQgPSAnd2Via2l0VHJhbnNpdGlvbkVuZCc7XG4gIH1cbiAgaWYgKHdpbmRvdy5vbmFuaW1hdGlvbmVuZCA9PT0gdW5kZWZpbmVkICYmXG4gICAgd2luZG93Lm9ud2Via2l0YW5pbWF0aW9uZW5kICE9PSB1bmRlZmluZWRcbiAgKSB7XG4gICAgYW5pbWF0aW9uUHJvcCA9ICdXZWJraXRBbmltYXRpb24nO1xuICAgIGFuaW1hdGlvbkVuZEV2ZW50ID0gJ3dlYmtpdEFuaW1hdGlvbkVuZCc7XG4gIH1cbn1cblxuLy8gYmluZGluZyB0byB3aW5kb3cgaXMgbmVjZXNzYXJ5IHRvIG1ha2UgaG90IHJlbG9hZCB3b3JrIGluIElFIGluIHN0cmljdCBtb2RlXG52YXIgcmFmID0gaW5Ccm93c2VyXG4gID8gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZVxuICAgID8gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZS5iaW5kKHdpbmRvdylcbiAgICA6IHNldFRpbWVvdXRcbiAgOiAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqLyBmdW5jdGlvbiAoZm4pIHsgcmV0dXJuIGZuKCk7IH07XG5cbmZ1bmN0aW9uIG5leHRGcmFtZSAoZm4pIHtcbiAgcmFmKGZ1bmN0aW9uICgpIHtcbiAgICByYWYoZm4pO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gYWRkVHJhbnNpdGlvbkNsYXNzIChlbCwgY2xzKSB7XG4gIHZhciB0cmFuc2l0aW9uQ2xhc3NlcyA9IGVsLl90cmFuc2l0aW9uQ2xhc3NlcyB8fCAoZWwuX3RyYW5zaXRpb25DbGFzc2VzID0gW10pO1xuICBpZiAodHJhbnNpdGlvbkNsYXNzZXMuaW5kZXhPZihjbHMpIDwgMCkge1xuICAgIHRyYW5zaXRpb25DbGFzc2VzLnB1c2goY2xzKTtcbiAgICBhZGRDbGFzcyhlbCwgY2xzKTtcbiAgfVxufVxuXG5mdW5jdGlvbiByZW1vdmVUcmFuc2l0aW9uQ2xhc3MgKGVsLCBjbHMpIHtcbiAgaWYgKGVsLl90cmFuc2l0aW9uQ2xhc3Nlcykge1xuICAgIHJlbW92ZShlbC5fdHJhbnNpdGlvbkNsYXNzZXMsIGNscyk7XG4gIH1cbiAgcmVtb3ZlQ2xhc3MoZWwsIGNscyk7XG59XG5cbmZ1bmN0aW9uIHdoZW5UcmFuc2l0aW9uRW5kcyAoXG4gIGVsLFxuICBleHBlY3RlZFR5cGUsXG4gIGNiXG4pIHtcbiAgdmFyIHJlZiA9IGdldFRyYW5zaXRpb25JbmZvKGVsLCBleHBlY3RlZFR5cGUpO1xuICB2YXIgdHlwZSA9IHJlZi50eXBlO1xuICB2YXIgdGltZW91dCA9IHJlZi50aW1lb3V0O1xuICB2YXIgcHJvcENvdW50ID0gcmVmLnByb3BDb3VudDtcbiAgaWYgKCF0eXBlKSB7IHJldHVybiBjYigpIH1cbiAgdmFyIGV2ZW50ID0gdHlwZSA9PT0gVFJBTlNJVElPTiA/IHRyYW5zaXRpb25FbmRFdmVudCA6IGFuaW1hdGlvbkVuZEV2ZW50O1xuICB2YXIgZW5kZWQgPSAwO1xuICB2YXIgZW5kID0gZnVuY3Rpb24gKCkge1xuICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIG9uRW5kKTtcbiAgICBjYigpO1xuICB9O1xuICB2YXIgb25FbmQgPSBmdW5jdGlvbiAoZSkge1xuICAgIGlmIChlLnRhcmdldCA9PT0gZWwpIHtcbiAgICAgIGlmICgrK2VuZGVkID49IHByb3BDb3VudCkge1xuICAgICAgICBlbmQoKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG4gIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgIGlmIChlbmRlZCA8IHByb3BDb3VudCkge1xuICAgICAgZW5kKCk7XG4gICAgfVxuICB9LCB0aW1lb3V0ICsgMSk7XG4gIGVsLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIG9uRW5kKTtcbn1cblxudmFyIHRyYW5zZm9ybVJFID0gL1xcYih0cmFuc2Zvcm18YWxsKSgsfCQpLztcblxuZnVuY3Rpb24gZ2V0VHJhbnNpdGlvbkluZm8gKGVsLCBleHBlY3RlZFR5cGUpIHtcbiAgdmFyIHN0eWxlcyA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsKTtcbiAgLy8gSlNET00gbWF5IHJldHVybiB1bmRlZmluZWQgZm9yIHRyYW5zaXRpb24gcHJvcGVydGllc1xuICB2YXIgdHJhbnNpdGlvbkRlbGF5cyA9IChzdHlsZXNbdHJhbnNpdGlvblByb3AgKyAnRGVsYXknXSB8fCAnJykuc3BsaXQoJywgJyk7XG4gIHZhciB0cmFuc2l0aW9uRHVyYXRpb25zID0gKHN0eWxlc1t0cmFuc2l0aW9uUHJvcCArICdEdXJhdGlvbiddIHx8ICcnKS5zcGxpdCgnLCAnKTtcbiAgdmFyIHRyYW5zaXRpb25UaW1lb3V0ID0gZ2V0VGltZW91dCh0cmFuc2l0aW9uRGVsYXlzLCB0cmFuc2l0aW9uRHVyYXRpb25zKTtcbiAgdmFyIGFuaW1hdGlvbkRlbGF5cyA9IChzdHlsZXNbYW5pbWF0aW9uUHJvcCArICdEZWxheSddIHx8ICcnKS5zcGxpdCgnLCAnKTtcbiAgdmFyIGFuaW1hdGlvbkR1cmF0aW9ucyA9IChzdHlsZXNbYW5pbWF0aW9uUHJvcCArICdEdXJhdGlvbiddIHx8ICcnKS5zcGxpdCgnLCAnKTtcbiAgdmFyIGFuaW1hdGlvblRpbWVvdXQgPSBnZXRUaW1lb3V0KGFuaW1hdGlvbkRlbGF5cywgYW5pbWF0aW9uRHVyYXRpb25zKTtcblxuICB2YXIgdHlwZTtcbiAgdmFyIHRpbWVvdXQgPSAwO1xuICB2YXIgcHJvcENvdW50ID0gMDtcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gIGlmIChleHBlY3RlZFR5cGUgPT09IFRSQU5TSVRJT04pIHtcbiAgICBpZiAodHJhbnNpdGlvblRpbWVvdXQgPiAwKSB7XG4gICAgICB0eXBlID0gVFJBTlNJVElPTjtcbiAgICAgIHRpbWVvdXQgPSB0cmFuc2l0aW9uVGltZW91dDtcbiAgICAgIHByb3BDb3VudCA9IHRyYW5zaXRpb25EdXJhdGlvbnMubGVuZ3RoO1xuICAgIH1cbiAgfSBlbHNlIGlmIChleHBlY3RlZFR5cGUgPT09IEFOSU1BVElPTikge1xuICAgIGlmIChhbmltYXRpb25UaW1lb3V0ID4gMCkge1xuICAgICAgdHlwZSA9IEFOSU1BVElPTjtcbiAgICAgIHRpbWVvdXQgPSBhbmltYXRpb25UaW1lb3V0O1xuICAgICAgcHJvcENvdW50ID0gYW5pbWF0aW9uRHVyYXRpb25zLmxlbmd0aDtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgdGltZW91dCA9IE1hdGgubWF4KHRyYW5zaXRpb25UaW1lb3V0LCBhbmltYXRpb25UaW1lb3V0KTtcbiAgICB0eXBlID0gdGltZW91dCA+IDBcbiAgICAgID8gdHJhbnNpdGlvblRpbWVvdXQgPiBhbmltYXRpb25UaW1lb3V0XG4gICAgICAgID8gVFJBTlNJVElPTlxuICAgICAgICA6IEFOSU1BVElPTlxuICAgICAgOiBudWxsO1xuICAgIHByb3BDb3VudCA9IHR5cGVcbiAgICAgID8gdHlwZSA9PT0gVFJBTlNJVElPTlxuICAgICAgICA/IHRyYW5zaXRpb25EdXJhdGlvbnMubGVuZ3RoXG4gICAgICAgIDogYW5pbWF0aW9uRHVyYXRpb25zLmxlbmd0aFxuICAgICAgOiAwO1xuICB9XG4gIHZhciBoYXNUcmFuc2Zvcm0gPVxuICAgIHR5cGUgPT09IFRSQU5TSVRJT04gJiZcbiAgICB0cmFuc2Zvcm1SRS50ZXN0KHN0eWxlc1t0cmFuc2l0aW9uUHJvcCArICdQcm9wZXJ0eSddKTtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiB0eXBlLFxuICAgIHRpbWVvdXQ6IHRpbWVvdXQsXG4gICAgcHJvcENvdW50OiBwcm9wQ291bnQsXG4gICAgaGFzVHJhbnNmb3JtOiBoYXNUcmFuc2Zvcm1cbiAgfVxufVxuXG5mdW5jdGlvbiBnZXRUaW1lb3V0IChkZWxheXMsIGR1cmF0aW9ucykge1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICB3aGlsZSAoZGVsYXlzLmxlbmd0aCA8IGR1cmF0aW9ucy5sZW5ndGgpIHtcbiAgICBkZWxheXMgPSBkZWxheXMuY29uY2F0KGRlbGF5cyk7XG4gIH1cblxuICByZXR1cm4gTWF0aC5tYXguYXBwbHkobnVsbCwgZHVyYXRpb25zLm1hcChmdW5jdGlvbiAoZCwgaSkge1xuICAgIHJldHVybiB0b01zKGQpICsgdG9NcyhkZWxheXNbaV0pXG4gIH0pKVxufVxuXG4vLyBPbGQgdmVyc2lvbnMgb2YgQ2hyb21pdW0gKGJlbG93IDYxLjAuMzE2My4xMDApIGZvcm1hdHMgZmxvYXRpbmcgcG9pbnRlciBudW1iZXJzXG4vLyBpbiBhIGxvY2FsZS1kZXBlbmRlbnQgd2F5LCB1c2luZyBhIGNvbW1hIGluc3RlYWQgb2YgYSBkb3QuXG4vLyBJZiBjb21tYSBpcyBub3QgcmVwbGFjZWQgd2l0aCBhIGRvdCwgdGhlIGlucHV0IHdpbGwgYmUgcm91bmRlZCBkb3duIChpLmUuIGFjdGluZ1xuLy8gYXMgYSBmbG9vciBmdW5jdGlvbikgY2F1c2luZyB1bmV4cGVjdGVkIGJlaGF2aW9yc1xuZnVuY3Rpb24gdG9NcyAocykge1xuICByZXR1cm4gTnVtYmVyKHMuc2xpY2UoMCwgLTEpLnJlcGxhY2UoJywnLCAnLicpKSAqIDEwMDBcbn1cblxuLyogICovXG5cbmZ1bmN0aW9uIGVudGVyICh2bm9kZSwgdG9nZ2xlRGlzcGxheSkge1xuICB2YXIgZWwgPSB2bm9kZS5lbG07XG5cbiAgLy8gY2FsbCBsZWF2ZSBjYWxsYmFjayBub3dcbiAgaWYgKGlzRGVmKGVsLl9sZWF2ZUNiKSkge1xuICAgIGVsLl9sZWF2ZUNiLmNhbmNlbGxlZCA9IHRydWU7XG4gICAgZWwuX2xlYXZlQ2IoKTtcbiAgfVxuXG4gIHZhciBkYXRhID0gcmVzb2x2ZVRyYW5zaXRpb24odm5vZGUuZGF0YS50cmFuc2l0aW9uKTtcbiAgaWYgKGlzVW5kZWYoZGF0YSkpIHtcbiAgICByZXR1cm5cbiAgfVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICBpZiAoaXNEZWYoZWwuX2VudGVyQ2IpIHx8IGVsLm5vZGVUeXBlICE9PSAxKSB7XG4gICAgcmV0dXJuXG4gIH1cblxuICB2YXIgY3NzID0gZGF0YS5jc3M7XG4gIHZhciB0eXBlID0gZGF0YS50eXBlO1xuICB2YXIgZW50ZXJDbGFzcyA9IGRhdGEuZW50ZXJDbGFzcztcbiAgdmFyIGVudGVyVG9DbGFzcyA9IGRhdGEuZW50ZXJUb0NsYXNzO1xuICB2YXIgZW50ZXJBY3RpdmVDbGFzcyA9IGRhdGEuZW50ZXJBY3RpdmVDbGFzcztcbiAgdmFyIGFwcGVhckNsYXNzID0gZGF0YS5hcHBlYXJDbGFzcztcbiAgdmFyIGFwcGVhclRvQ2xhc3MgPSBkYXRhLmFwcGVhclRvQ2xhc3M7XG4gIHZhciBhcHBlYXJBY3RpdmVDbGFzcyA9IGRhdGEuYXBwZWFyQWN0aXZlQ2xhc3M7XG4gIHZhciBiZWZvcmVFbnRlciA9IGRhdGEuYmVmb3JlRW50ZXI7XG4gIHZhciBlbnRlciA9IGRhdGEuZW50ZXI7XG4gIHZhciBhZnRlckVudGVyID0gZGF0YS5hZnRlckVudGVyO1xuICB2YXIgZW50ZXJDYW5jZWxsZWQgPSBkYXRhLmVudGVyQ2FuY2VsbGVkO1xuICB2YXIgYmVmb3JlQXBwZWFyID0gZGF0YS5iZWZvcmVBcHBlYXI7XG4gIHZhciBhcHBlYXIgPSBkYXRhLmFwcGVhcjtcbiAgdmFyIGFmdGVyQXBwZWFyID0gZGF0YS5hZnRlckFwcGVhcjtcbiAgdmFyIGFwcGVhckNhbmNlbGxlZCA9IGRhdGEuYXBwZWFyQ2FuY2VsbGVkO1xuICB2YXIgZHVyYXRpb24gPSBkYXRhLmR1cmF0aW9uO1xuXG4gIC8vIGFjdGl2ZUluc3RhbmNlIHdpbGwgYWx3YXlzIGJlIHRoZSA8dHJhbnNpdGlvbj4gY29tcG9uZW50IG1hbmFnaW5nIHRoaXNcbiAgLy8gdHJhbnNpdGlvbi4gT25lIGVkZ2UgY2FzZSB0byBjaGVjayBpcyB3aGVuIHRoZSA8dHJhbnNpdGlvbj4gaXMgcGxhY2VkXG4gIC8vIGFzIHRoZSByb290IG5vZGUgb2YgYSBjaGlsZCBjb21wb25lbnQuIEluIHRoYXQgY2FzZSB3ZSBuZWVkIHRvIGNoZWNrXG4gIC8vIDx0cmFuc2l0aW9uPidzIHBhcmVudCBmb3IgYXBwZWFyIGNoZWNrLlxuICB2YXIgY29udGV4dCA9IGFjdGl2ZUluc3RhbmNlO1xuICB2YXIgdHJhbnNpdGlvbk5vZGUgPSBhY3RpdmVJbnN0YW5jZS4kdm5vZGU7XG4gIHdoaWxlICh0cmFuc2l0aW9uTm9kZSAmJiB0cmFuc2l0aW9uTm9kZS5wYXJlbnQpIHtcbiAgICBjb250ZXh0ID0gdHJhbnNpdGlvbk5vZGUuY29udGV4dDtcbiAgICB0cmFuc2l0aW9uTm9kZSA9IHRyYW5zaXRpb25Ob2RlLnBhcmVudDtcbiAgfVxuXG4gIHZhciBpc0FwcGVhciA9ICFjb250ZXh0Ll9pc01vdW50ZWQgfHwgIXZub2RlLmlzUm9vdEluc2VydDtcblxuICBpZiAoaXNBcHBlYXIgJiYgIWFwcGVhciAmJiBhcHBlYXIgIT09ICcnKSB7XG4gICAgcmV0dXJuXG4gIH1cblxuICB2YXIgc3RhcnRDbGFzcyA9IGlzQXBwZWFyICYmIGFwcGVhckNsYXNzXG4gICAgPyBhcHBlYXJDbGFzc1xuICAgIDogZW50ZXJDbGFzcztcbiAgdmFyIGFjdGl2ZUNsYXNzID0gaXNBcHBlYXIgJiYgYXBwZWFyQWN0aXZlQ2xhc3NcbiAgICA/IGFwcGVhckFjdGl2ZUNsYXNzXG4gICAgOiBlbnRlckFjdGl2ZUNsYXNzO1xuICB2YXIgdG9DbGFzcyA9IGlzQXBwZWFyICYmIGFwcGVhclRvQ2xhc3NcbiAgICA/IGFwcGVhclRvQ2xhc3NcbiAgICA6IGVudGVyVG9DbGFzcztcblxuICB2YXIgYmVmb3JlRW50ZXJIb29rID0gaXNBcHBlYXJcbiAgICA/IChiZWZvcmVBcHBlYXIgfHwgYmVmb3JlRW50ZXIpXG4gICAgOiBiZWZvcmVFbnRlcjtcbiAgdmFyIGVudGVySG9vayA9IGlzQXBwZWFyXG4gICAgPyAodHlwZW9mIGFwcGVhciA9PT0gJ2Z1bmN0aW9uJyA/IGFwcGVhciA6IGVudGVyKVxuICAgIDogZW50ZXI7XG4gIHZhciBhZnRlckVudGVySG9vayA9IGlzQXBwZWFyXG4gICAgPyAoYWZ0ZXJBcHBlYXIgfHwgYWZ0ZXJFbnRlcilcbiAgICA6IGFmdGVyRW50ZXI7XG4gIHZhciBlbnRlckNhbmNlbGxlZEhvb2sgPSBpc0FwcGVhclxuICAgID8gKGFwcGVhckNhbmNlbGxlZCB8fCBlbnRlckNhbmNlbGxlZClcbiAgICA6IGVudGVyQ2FuY2VsbGVkO1xuXG4gIHZhciBleHBsaWNpdEVudGVyRHVyYXRpb24gPSB0b051bWJlcihcbiAgICBpc09iamVjdChkdXJhdGlvbilcbiAgICAgID8gZHVyYXRpb24uZW50ZXJcbiAgICAgIDogZHVyYXRpb25cbiAgKTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBleHBsaWNpdEVudGVyRHVyYXRpb24gIT0gbnVsbCkge1xuICAgIGNoZWNrRHVyYXRpb24oZXhwbGljaXRFbnRlckR1cmF0aW9uLCAnZW50ZXInLCB2bm9kZSk7XG4gIH1cblxuICB2YXIgZXhwZWN0c0NTUyA9IGNzcyAhPT0gZmFsc2UgJiYgIWlzSUU5O1xuICB2YXIgdXNlcldhbnRzQ29udHJvbCA9IGdldEhvb2tBcmd1bWVudHNMZW5ndGgoZW50ZXJIb29rKTtcblxuICB2YXIgY2IgPSBlbC5fZW50ZXJDYiA9IG9uY2UoZnVuY3Rpb24gKCkge1xuICAgIGlmIChleHBlY3RzQ1NTKSB7XG4gICAgICByZW1vdmVUcmFuc2l0aW9uQ2xhc3MoZWwsIHRvQ2xhc3MpO1xuICAgICAgcmVtb3ZlVHJhbnNpdGlvbkNsYXNzKGVsLCBhY3RpdmVDbGFzcyk7XG4gICAgfVxuICAgIGlmIChjYi5jYW5jZWxsZWQpIHtcbiAgICAgIGlmIChleHBlY3RzQ1NTKSB7XG4gICAgICAgIHJlbW92ZVRyYW5zaXRpb25DbGFzcyhlbCwgc3RhcnRDbGFzcyk7XG4gICAgICB9XG4gICAgICBlbnRlckNhbmNlbGxlZEhvb2sgJiYgZW50ZXJDYW5jZWxsZWRIb29rKGVsKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYWZ0ZXJFbnRlckhvb2sgJiYgYWZ0ZXJFbnRlckhvb2soZWwpO1xuICAgIH1cbiAgICBlbC5fZW50ZXJDYiA9IG51bGw7XG4gIH0pO1xuXG4gIGlmICghdm5vZGUuZGF0YS5zaG93KSB7XG4gICAgLy8gcmVtb3ZlIHBlbmRpbmcgbGVhdmUgZWxlbWVudCBvbiBlbnRlciBieSBpbmplY3RpbmcgYW4gaW5zZXJ0IGhvb2tcbiAgICBtZXJnZVZOb2RlSG9vayh2bm9kZSwgJ2luc2VydCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBwYXJlbnQgPSBlbC5wYXJlbnROb2RlO1xuICAgICAgdmFyIHBlbmRpbmdOb2RlID0gcGFyZW50ICYmIHBhcmVudC5fcGVuZGluZyAmJiBwYXJlbnQuX3BlbmRpbmdbdm5vZGUua2V5XTtcbiAgICAgIGlmIChwZW5kaW5nTm9kZSAmJlxuICAgICAgICBwZW5kaW5nTm9kZS50YWcgPT09IHZub2RlLnRhZyAmJlxuICAgICAgICBwZW5kaW5nTm9kZS5lbG0uX2xlYXZlQ2JcbiAgICAgICkge1xuICAgICAgICBwZW5kaW5nTm9kZS5lbG0uX2xlYXZlQ2IoKTtcbiAgICAgIH1cbiAgICAgIGVudGVySG9vayAmJiBlbnRlckhvb2soZWwsIGNiKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8vIHN0YXJ0IGVudGVyIHRyYW5zaXRpb25cbiAgYmVmb3JlRW50ZXJIb29rICYmIGJlZm9yZUVudGVySG9vayhlbCk7XG4gIGlmIChleHBlY3RzQ1NTKSB7XG4gICAgYWRkVHJhbnNpdGlvbkNsYXNzKGVsLCBzdGFydENsYXNzKTtcbiAgICBhZGRUcmFuc2l0aW9uQ2xhc3MoZWwsIGFjdGl2ZUNsYXNzKTtcbiAgICBuZXh0RnJhbWUoZnVuY3Rpb24gKCkge1xuICAgICAgcmVtb3ZlVHJhbnNpdGlvbkNsYXNzKGVsLCBzdGFydENsYXNzKTtcbiAgICAgIGlmICghY2IuY2FuY2VsbGVkKSB7XG4gICAgICAgIGFkZFRyYW5zaXRpb25DbGFzcyhlbCwgdG9DbGFzcyk7XG4gICAgICAgIGlmICghdXNlcldhbnRzQ29udHJvbCkge1xuICAgICAgICAgIGlmIChpc1ZhbGlkRHVyYXRpb24oZXhwbGljaXRFbnRlckR1cmF0aW9uKSkge1xuICAgICAgICAgICAgc2V0VGltZW91dChjYiwgZXhwbGljaXRFbnRlckR1cmF0aW9uKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgd2hlblRyYW5zaXRpb25FbmRzKGVsLCB0eXBlLCBjYik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBpZiAodm5vZGUuZGF0YS5zaG93KSB7XG4gICAgdG9nZ2xlRGlzcGxheSAmJiB0b2dnbGVEaXNwbGF5KCk7XG4gICAgZW50ZXJIb29rICYmIGVudGVySG9vayhlbCwgY2IpO1xuICB9XG5cbiAgaWYgKCFleHBlY3RzQ1NTICYmICF1c2VyV2FudHNDb250cm9sKSB7XG4gICAgY2IoKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBsZWF2ZSAodm5vZGUsIHJtKSB7XG4gIHZhciBlbCA9IHZub2RlLmVsbTtcblxuICAvLyBjYWxsIGVudGVyIGNhbGxiYWNrIG5vd1xuICBpZiAoaXNEZWYoZWwuX2VudGVyQ2IpKSB7XG4gICAgZWwuX2VudGVyQ2IuY2FuY2VsbGVkID0gdHJ1ZTtcbiAgICBlbC5fZW50ZXJDYigpO1xuICB9XG5cbiAgdmFyIGRhdGEgPSByZXNvbHZlVHJhbnNpdGlvbih2bm9kZS5kYXRhLnRyYW5zaXRpb24pO1xuICBpZiAoaXNVbmRlZihkYXRhKSB8fCBlbC5ub2RlVHlwZSAhPT0gMSkge1xuICAgIHJldHVybiBybSgpXG4gIH1cblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgaWYgKGlzRGVmKGVsLl9sZWF2ZUNiKSkge1xuICAgIHJldHVyblxuICB9XG5cbiAgdmFyIGNzcyA9IGRhdGEuY3NzO1xuICB2YXIgdHlwZSA9IGRhdGEudHlwZTtcbiAgdmFyIGxlYXZlQ2xhc3MgPSBkYXRhLmxlYXZlQ2xhc3M7XG4gIHZhciBsZWF2ZVRvQ2xhc3MgPSBkYXRhLmxlYXZlVG9DbGFzcztcbiAgdmFyIGxlYXZlQWN0aXZlQ2xhc3MgPSBkYXRhLmxlYXZlQWN0aXZlQ2xhc3M7XG4gIHZhciBiZWZvcmVMZWF2ZSA9IGRhdGEuYmVmb3JlTGVhdmU7XG4gIHZhciBsZWF2ZSA9IGRhdGEubGVhdmU7XG4gIHZhciBhZnRlckxlYXZlID0gZGF0YS5hZnRlckxlYXZlO1xuICB2YXIgbGVhdmVDYW5jZWxsZWQgPSBkYXRhLmxlYXZlQ2FuY2VsbGVkO1xuICB2YXIgZGVsYXlMZWF2ZSA9IGRhdGEuZGVsYXlMZWF2ZTtcbiAgdmFyIGR1cmF0aW9uID0gZGF0YS5kdXJhdGlvbjtcblxuICB2YXIgZXhwZWN0c0NTUyA9IGNzcyAhPT0gZmFsc2UgJiYgIWlzSUU5O1xuICB2YXIgdXNlcldhbnRzQ29udHJvbCA9IGdldEhvb2tBcmd1bWVudHNMZW5ndGgobGVhdmUpO1xuXG4gIHZhciBleHBsaWNpdExlYXZlRHVyYXRpb24gPSB0b051bWJlcihcbiAgICBpc09iamVjdChkdXJhdGlvbilcbiAgICAgID8gZHVyYXRpb24ubGVhdmVcbiAgICAgIDogZHVyYXRpb25cbiAgKTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBpc0RlZihleHBsaWNpdExlYXZlRHVyYXRpb24pKSB7XG4gICAgY2hlY2tEdXJhdGlvbihleHBsaWNpdExlYXZlRHVyYXRpb24sICdsZWF2ZScsIHZub2RlKTtcbiAgfVxuXG4gIHZhciBjYiA9IGVsLl9sZWF2ZUNiID0gb25jZShmdW5jdGlvbiAoKSB7XG4gICAgaWYgKGVsLnBhcmVudE5vZGUgJiYgZWwucGFyZW50Tm9kZS5fcGVuZGluZykge1xuICAgICAgZWwucGFyZW50Tm9kZS5fcGVuZGluZ1t2bm9kZS5rZXldID0gbnVsbDtcbiAgICB9XG4gICAgaWYgKGV4cGVjdHNDU1MpIHtcbiAgICAgIHJlbW92ZVRyYW5zaXRpb25DbGFzcyhlbCwgbGVhdmVUb0NsYXNzKTtcbiAgICAgIHJlbW92ZVRyYW5zaXRpb25DbGFzcyhlbCwgbGVhdmVBY3RpdmVDbGFzcyk7XG4gICAgfVxuICAgIGlmIChjYi5jYW5jZWxsZWQpIHtcbiAgICAgIGlmIChleHBlY3RzQ1NTKSB7XG4gICAgICAgIHJlbW92ZVRyYW5zaXRpb25DbGFzcyhlbCwgbGVhdmVDbGFzcyk7XG4gICAgICB9XG4gICAgICBsZWF2ZUNhbmNlbGxlZCAmJiBsZWF2ZUNhbmNlbGxlZChlbCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJtKCk7XG4gICAgICBhZnRlckxlYXZlICYmIGFmdGVyTGVhdmUoZWwpO1xuICAgIH1cbiAgICBlbC5fbGVhdmVDYiA9IG51bGw7XG4gIH0pO1xuXG4gIGlmIChkZWxheUxlYXZlKSB7XG4gICAgZGVsYXlMZWF2ZShwZXJmb3JtTGVhdmUpO1xuICB9IGVsc2Uge1xuICAgIHBlcmZvcm1MZWF2ZSgpO1xuICB9XG5cbiAgZnVuY3Rpb24gcGVyZm9ybUxlYXZlICgpIHtcbiAgICAvLyB0aGUgZGVsYXllZCBsZWF2ZSBtYXkgaGF2ZSBhbHJlYWR5IGJlZW4gY2FuY2VsbGVkXG4gICAgaWYgKGNiLmNhbmNlbGxlZCkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIC8vIHJlY29yZCBsZWF2aW5nIGVsZW1lbnRcbiAgICBpZiAoIXZub2RlLmRhdGEuc2hvdyAmJiBlbC5wYXJlbnROb2RlKSB7XG4gICAgICAoZWwucGFyZW50Tm9kZS5fcGVuZGluZyB8fCAoZWwucGFyZW50Tm9kZS5fcGVuZGluZyA9IHt9KSlbKHZub2RlLmtleSldID0gdm5vZGU7XG4gICAgfVxuICAgIGJlZm9yZUxlYXZlICYmIGJlZm9yZUxlYXZlKGVsKTtcbiAgICBpZiAoZXhwZWN0c0NTUykge1xuICAgICAgYWRkVHJhbnNpdGlvbkNsYXNzKGVsLCBsZWF2ZUNsYXNzKTtcbiAgICAgIGFkZFRyYW5zaXRpb25DbGFzcyhlbCwgbGVhdmVBY3RpdmVDbGFzcyk7XG4gICAgICBuZXh0RnJhbWUoZnVuY3Rpb24gKCkge1xuICAgICAgICByZW1vdmVUcmFuc2l0aW9uQ2xhc3MoZWwsIGxlYXZlQ2xhc3MpO1xuICAgICAgICBpZiAoIWNiLmNhbmNlbGxlZCkge1xuICAgICAgICAgIGFkZFRyYW5zaXRpb25DbGFzcyhlbCwgbGVhdmVUb0NsYXNzKTtcbiAgICAgICAgICBpZiAoIXVzZXJXYW50c0NvbnRyb2wpIHtcbiAgICAgICAgICAgIGlmIChpc1ZhbGlkRHVyYXRpb24oZXhwbGljaXRMZWF2ZUR1cmF0aW9uKSkge1xuICAgICAgICAgICAgICBzZXRUaW1lb3V0KGNiLCBleHBsaWNpdExlYXZlRHVyYXRpb24pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgd2hlblRyYW5zaXRpb25FbmRzKGVsLCB0eXBlLCBjYik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gICAgbGVhdmUgJiYgbGVhdmUoZWwsIGNiKTtcbiAgICBpZiAoIWV4cGVjdHNDU1MgJiYgIXVzZXJXYW50c0NvbnRyb2wpIHtcbiAgICAgIGNiKCk7XG4gICAgfVxuICB9XG59XG5cbi8vIG9ubHkgdXNlZCBpbiBkZXYgbW9kZVxuZnVuY3Rpb24gY2hlY2tEdXJhdGlvbiAodmFsLCBuYW1lLCB2bm9kZSkge1xuICBpZiAodHlwZW9mIHZhbCAhPT0gJ251bWJlcicpIHtcbiAgICB3YXJuKFxuICAgICAgXCI8dHJhbnNpdGlvbj4gZXhwbGljaXQgXCIgKyBuYW1lICsgXCIgZHVyYXRpb24gaXMgbm90IGEgdmFsaWQgbnVtYmVyIC0gXCIgK1xuICAgICAgXCJnb3QgXCIgKyAoSlNPTi5zdHJpbmdpZnkodmFsKSkgKyBcIi5cIixcbiAgICAgIHZub2RlLmNvbnRleHRcbiAgICApO1xuICB9IGVsc2UgaWYgKGlzTmFOKHZhbCkpIHtcbiAgICB3YXJuKFxuICAgICAgXCI8dHJhbnNpdGlvbj4gZXhwbGljaXQgXCIgKyBuYW1lICsgXCIgZHVyYXRpb24gaXMgTmFOIC0gXCIgK1xuICAgICAgJ3RoZSBkdXJhdGlvbiBleHByZXNzaW9uIG1pZ2h0IGJlIGluY29ycmVjdC4nLFxuICAgICAgdm5vZGUuY29udGV4dFxuICAgICk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaXNWYWxpZER1cmF0aW9uICh2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICdudW1iZXInICYmICFpc05hTih2YWwpXG59XG5cbi8qKlxuICogTm9ybWFsaXplIGEgdHJhbnNpdGlvbiBob29rJ3MgYXJndW1lbnQgbGVuZ3RoLiBUaGUgaG9vayBtYXkgYmU6XG4gKiAtIGEgbWVyZ2VkIGhvb2sgKGludm9rZXIpIHdpdGggdGhlIG9yaWdpbmFsIGluIC5mbnNcbiAqIC0gYSB3cmFwcGVkIGNvbXBvbmVudCBtZXRob2QgKGNoZWNrIC5fbGVuZ3RoKVxuICogLSBhIHBsYWluIGZ1bmN0aW9uICgubGVuZ3RoKVxuICovXG5mdW5jdGlvbiBnZXRIb29rQXJndW1lbnRzTGVuZ3RoIChmbikge1xuICBpZiAoaXNVbmRlZihmbikpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuICB2YXIgaW52b2tlckZucyA9IGZuLmZucztcbiAgaWYgKGlzRGVmKGludm9rZXJGbnMpKSB7XG4gICAgLy8gaW52b2tlclxuICAgIHJldHVybiBnZXRIb29rQXJndW1lbnRzTGVuZ3RoKFxuICAgICAgQXJyYXkuaXNBcnJheShpbnZva2VyRm5zKVxuICAgICAgICA/IGludm9rZXJGbnNbMF1cbiAgICAgICAgOiBpbnZva2VyRm5zXG4gICAgKVxuICB9IGVsc2Uge1xuICAgIHJldHVybiAoZm4uX2xlbmd0aCB8fCBmbi5sZW5ndGgpID4gMVxuICB9XG59XG5cbmZ1bmN0aW9uIF9lbnRlciAoXywgdm5vZGUpIHtcbiAgaWYgKHZub2RlLmRhdGEuc2hvdyAhPT0gdHJ1ZSkge1xuICAgIGVudGVyKHZub2RlKTtcbiAgfVxufVxuXG52YXIgdHJhbnNpdGlvbiA9IGluQnJvd3NlciA/IHtcbiAgY3JlYXRlOiBfZW50ZXIsXG4gIGFjdGl2YXRlOiBfZW50ZXIsXG4gIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlJCQxICh2bm9kZSwgcm0pIHtcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgIGlmICh2bm9kZS5kYXRhLnNob3cgIT09IHRydWUpIHtcbiAgICAgIGxlYXZlKHZub2RlLCBybSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJtKCk7XG4gICAgfVxuICB9XG59IDoge307XG5cbnZhciBwbGF0Zm9ybU1vZHVsZXMgPSBbXG4gIGF0dHJzLFxuICBrbGFzcyxcbiAgZXZlbnRzLFxuICBkb21Qcm9wcyxcbiAgc3R5bGUsXG4gIHRyYW5zaXRpb25cbl07XG5cbi8qICAqL1xuXG4vLyB0aGUgZGlyZWN0aXZlIG1vZHVsZSBzaG91bGQgYmUgYXBwbGllZCBsYXN0LCBhZnRlciBhbGxcbi8vIGJ1aWx0LWluIG1vZHVsZXMgaGF2ZSBiZWVuIGFwcGxpZWQuXG52YXIgbW9kdWxlcyA9IHBsYXRmb3JtTW9kdWxlcy5jb25jYXQoYmFzZU1vZHVsZXMpO1xuXG52YXIgcGF0Y2ggPSBjcmVhdGVQYXRjaEZ1bmN0aW9uKHsgbm9kZU9wczogbm9kZU9wcywgbW9kdWxlczogbW9kdWxlcyB9KTtcblxuLyoqXG4gKiBOb3QgdHlwZSBjaGVja2luZyB0aGlzIGZpbGUgYmVjYXVzZSBmbG93IGRvZXNuJ3QgbGlrZSBhdHRhY2hpbmdcbiAqIHByb3BlcnRpZXMgdG8gRWxlbWVudHMuXG4gKi9cblxuLyogaXN0YW5idWwgaWdub3JlIGlmICovXG5pZiAoaXNJRTkpIHtcbiAgLy8gaHR0cDovL3d3dy5tYXR0czQxMS5jb20vcG9zdC9pbnRlcm5ldC1leHBsb3Jlci05LW9uaW5wdXQvXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3NlbGVjdGlvbmNoYW5nZScsIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZWwgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuICAgIGlmIChlbCAmJiBlbC52bW9kZWwpIHtcbiAgICAgIHRyaWdnZXIoZWwsICdpbnB1dCcpO1xuICAgIH1cbiAgfSk7XG59XG5cbnZhciBkaXJlY3RpdmUgPSB7XG4gIGluc2VydGVkOiBmdW5jdGlvbiBpbnNlcnRlZCAoZWwsIGJpbmRpbmcsIHZub2RlLCBvbGRWbm9kZSkge1xuICAgIGlmICh2bm9kZS50YWcgPT09ICdzZWxlY3QnKSB7XG4gICAgICAvLyAjNjkwM1xuICAgICAgaWYgKG9sZFZub2RlLmVsbSAmJiAhb2xkVm5vZGUuZWxtLl92T3B0aW9ucykge1xuICAgICAgICBtZXJnZVZOb2RlSG9vayh2bm9kZSwgJ3Bvc3RwYXRjaCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBkaXJlY3RpdmUuY29tcG9uZW50VXBkYXRlZChlbCwgYmluZGluZywgdm5vZGUpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNldFNlbGVjdGVkKGVsLCBiaW5kaW5nLCB2bm9kZS5jb250ZXh0KTtcbiAgICAgIH1cbiAgICAgIGVsLl92T3B0aW9ucyA9IFtdLm1hcC5jYWxsKGVsLm9wdGlvbnMsIGdldFZhbHVlKTtcbiAgICB9IGVsc2UgaWYgKHZub2RlLnRhZyA9PT0gJ3RleHRhcmVhJyB8fCBpc1RleHRJbnB1dFR5cGUoZWwudHlwZSkpIHtcbiAgICAgIGVsLl92TW9kaWZpZXJzID0gYmluZGluZy5tb2RpZmllcnM7XG4gICAgICBpZiAoIWJpbmRpbmcubW9kaWZpZXJzLmxhenkpIHtcbiAgICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcignY29tcG9zaXRpb25zdGFydCcsIG9uQ29tcG9zaXRpb25TdGFydCk7XG4gICAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoJ2NvbXBvc2l0aW9uZW5kJywgb25Db21wb3NpdGlvbkVuZCk7XG4gICAgICAgIC8vIFNhZmFyaSA8IDEwLjIgJiBVSVdlYlZpZXcgZG9lc24ndCBmaXJlIGNvbXBvc2l0aW9uZW5kIHdoZW5cbiAgICAgICAgLy8gc3dpdGNoaW5nIGZvY3VzIGJlZm9yZSBjb25maXJtaW5nIGNvbXBvc2l0aW9uIGNob2ljZVxuICAgICAgICAvLyB0aGlzIGFsc28gZml4ZXMgdGhlIGlzc3VlIHdoZXJlIHNvbWUgYnJvd3NlcnMgZS5nLiBpT1MgQ2hyb21lXG4gICAgICAgIC8vIGZpcmVzIFwiY2hhbmdlXCIgaW5zdGVhZCBvZiBcImlucHV0XCIgb24gYXV0b2NvbXBsZXRlLlxuICAgICAgICBlbC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBvbkNvbXBvc2l0aW9uRW5kKTtcbiAgICAgICAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgICAgIGlmIChpc0lFOSkge1xuICAgICAgICAgIGVsLnZtb2RlbCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0sXG5cbiAgY29tcG9uZW50VXBkYXRlZDogZnVuY3Rpb24gY29tcG9uZW50VXBkYXRlZCAoZWwsIGJpbmRpbmcsIHZub2RlKSB7XG4gICAgaWYgKHZub2RlLnRhZyA9PT0gJ3NlbGVjdCcpIHtcbiAgICAgIHNldFNlbGVjdGVkKGVsLCBiaW5kaW5nLCB2bm9kZS5jb250ZXh0KTtcbiAgICAgIC8vIGluIGNhc2UgdGhlIG9wdGlvbnMgcmVuZGVyZWQgYnkgdi1mb3IgaGF2ZSBjaGFuZ2VkLFxuICAgICAgLy8gaXQncyBwb3NzaWJsZSB0aGF0IHRoZSB2YWx1ZSBpcyBvdXQtb2Ytc3luYyB3aXRoIHRoZSByZW5kZXJlZCBvcHRpb25zLlxuICAgICAgLy8gZGV0ZWN0IHN1Y2ggY2FzZXMgYW5kIGZpbHRlciBvdXQgdmFsdWVzIHRoYXQgbm8gbG9uZ2VyIGhhcyBhIG1hdGNoaW5nXG4gICAgICAvLyBvcHRpb24gaW4gdGhlIERPTS5cbiAgICAgIHZhciBwcmV2T3B0aW9ucyA9IGVsLl92T3B0aW9ucztcbiAgICAgIHZhciBjdXJPcHRpb25zID0gZWwuX3ZPcHRpb25zID0gW10ubWFwLmNhbGwoZWwub3B0aW9ucywgZ2V0VmFsdWUpO1xuICAgICAgaWYgKGN1ck9wdGlvbnMuc29tZShmdW5jdGlvbiAobywgaSkgeyByZXR1cm4gIWxvb3NlRXF1YWwobywgcHJldk9wdGlvbnNbaV0pOyB9KSkge1xuICAgICAgICAvLyB0cmlnZ2VyIGNoYW5nZSBldmVudCBpZlxuICAgICAgICAvLyBubyBtYXRjaGluZyBvcHRpb24gZm91bmQgZm9yIGF0IGxlYXN0IG9uZSB2YWx1ZVxuICAgICAgICB2YXIgbmVlZFJlc2V0ID0gZWwubXVsdGlwbGVcbiAgICAgICAgICA/IGJpbmRpbmcudmFsdWUuc29tZShmdW5jdGlvbiAodikgeyByZXR1cm4gaGFzTm9NYXRjaGluZ09wdGlvbih2LCBjdXJPcHRpb25zKTsgfSlcbiAgICAgICAgICA6IGJpbmRpbmcudmFsdWUgIT09IGJpbmRpbmcub2xkVmFsdWUgJiYgaGFzTm9NYXRjaGluZ09wdGlvbihiaW5kaW5nLnZhbHVlLCBjdXJPcHRpb25zKTtcbiAgICAgICAgaWYgKG5lZWRSZXNldCkge1xuICAgICAgICAgIHRyaWdnZXIoZWwsICdjaGFuZ2UnKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufTtcblxuZnVuY3Rpb24gc2V0U2VsZWN0ZWQgKGVsLCBiaW5kaW5nLCB2bSkge1xuICBhY3R1YWxseVNldFNlbGVjdGVkKGVsLCBiaW5kaW5nLCB2bSk7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICBpZiAoaXNJRSB8fCBpc0VkZ2UpIHtcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgIGFjdHVhbGx5U2V0U2VsZWN0ZWQoZWwsIGJpbmRpbmcsIHZtKTtcbiAgICB9LCAwKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBhY3R1YWxseVNldFNlbGVjdGVkIChlbCwgYmluZGluZywgdm0pIHtcbiAgdmFyIHZhbHVlID0gYmluZGluZy52YWx1ZTtcbiAgdmFyIGlzTXVsdGlwbGUgPSBlbC5tdWx0aXBsZTtcbiAgaWYgKGlzTXVsdGlwbGUgJiYgIUFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB3YXJuKFxuICAgICAgXCI8c2VsZWN0IG11bHRpcGxlIHYtbW9kZWw9XFxcIlwiICsgKGJpbmRpbmcuZXhwcmVzc2lvbikgKyBcIlxcXCI+IFwiICtcbiAgICAgIFwiZXhwZWN0cyBhbiBBcnJheSB2YWx1ZSBmb3IgaXRzIGJpbmRpbmcsIGJ1dCBnb3QgXCIgKyAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKS5zbGljZSg4LCAtMSkpLFxuICAgICAgdm1cbiAgICApO1xuICAgIHJldHVyblxuICB9XG4gIHZhciBzZWxlY3RlZCwgb3B0aW9uO1xuICBmb3IgKHZhciBpID0gMCwgbCA9IGVsLm9wdGlvbnMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgb3B0aW9uID0gZWwub3B0aW9uc1tpXTtcbiAgICBpZiAoaXNNdWx0aXBsZSkge1xuICAgICAgc2VsZWN0ZWQgPSBsb29zZUluZGV4T2YodmFsdWUsIGdldFZhbHVlKG9wdGlvbikpID4gLTE7XG4gICAgICBpZiAob3B0aW9uLnNlbGVjdGVkICE9PSBzZWxlY3RlZCkge1xuICAgICAgICBvcHRpb24uc2VsZWN0ZWQgPSBzZWxlY3RlZDtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKGxvb3NlRXF1YWwoZ2V0VmFsdWUob3B0aW9uKSwgdmFsdWUpKSB7XG4gICAgICAgIGlmIChlbC5zZWxlY3RlZEluZGV4ICE9PSBpKSB7XG4gICAgICAgICAgZWwuc2VsZWN0ZWRJbmRleCA9IGk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgfVxuICB9XG4gIGlmICghaXNNdWx0aXBsZSkge1xuICAgIGVsLnNlbGVjdGVkSW5kZXggPSAtMTtcbiAgfVxufVxuXG5mdW5jdGlvbiBoYXNOb01hdGNoaW5nT3B0aW9uICh2YWx1ZSwgb3B0aW9ucykge1xuICByZXR1cm4gb3B0aW9ucy5ldmVyeShmdW5jdGlvbiAobykgeyByZXR1cm4gIWxvb3NlRXF1YWwobywgdmFsdWUpOyB9KVxufVxuXG5mdW5jdGlvbiBnZXRWYWx1ZSAob3B0aW9uKSB7XG4gIHJldHVybiAnX3ZhbHVlJyBpbiBvcHRpb25cbiAgICA/IG9wdGlvbi5fdmFsdWVcbiAgICA6IG9wdGlvbi52YWx1ZVxufVxuXG5mdW5jdGlvbiBvbkNvbXBvc2l0aW9uU3RhcnQgKGUpIHtcbiAgZS50YXJnZXQuY29tcG9zaW5nID0gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gb25Db21wb3NpdGlvbkVuZCAoZSkge1xuICAvLyBwcmV2ZW50IHRyaWdnZXJpbmcgYW4gaW5wdXQgZXZlbnQgZm9yIG5vIHJlYXNvblxuICBpZiAoIWUudGFyZ2V0LmNvbXBvc2luZykgeyByZXR1cm4gfVxuICBlLnRhcmdldC5jb21wb3NpbmcgPSBmYWxzZTtcbiAgdHJpZ2dlcihlLnRhcmdldCwgJ2lucHV0Jyk7XG59XG5cbmZ1bmN0aW9uIHRyaWdnZXIgKGVsLCB0eXBlKSB7XG4gIHZhciBlID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0hUTUxFdmVudHMnKTtcbiAgZS5pbml0RXZlbnQodHlwZSwgdHJ1ZSwgdHJ1ZSk7XG4gIGVsLmRpc3BhdGNoRXZlbnQoZSk7XG59XG5cbi8qICAqL1xuXG4vLyByZWN1cnNpdmVseSBzZWFyY2ggZm9yIHBvc3NpYmxlIHRyYW5zaXRpb24gZGVmaW5lZCBpbnNpZGUgdGhlIGNvbXBvbmVudCByb290XG5mdW5jdGlvbiBsb2NhdGVOb2RlICh2bm9kZSkge1xuICByZXR1cm4gdm5vZGUuY29tcG9uZW50SW5zdGFuY2UgJiYgKCF2bm9kZS5kYXRhIHx8ICF2bm9kZS5kYXRhLnRyYW5zaXRpb24pXG4gICAgPyBsb2NhdGVOb2RlKHZub2RlLmNvbXBvbmVudEluc3RhbmNlLl92bm9kZSlcbiAgICA6IHZub2RlXG59XG5cbnZhciBzaG93ID0ge1xuICBiaW5kOiBmdW5jdGlvbiBiaW5kIChlbCwgcmVmLCB2bm9kZSkge1xuICAgIHZhciB2YWx1ZSA9IHJlZi52YWx1ZTtcblxuICAgIHZub2RlID0gbG9jYXRlTm9kZSh2bm9kZSk7XG4gICAgdmFyIHRyYW5zaXRpb24kJDEgPSB2bm9kZS5kYXRhICYmIHZub2RlLmRhdGEudHJhbnNpdGlvbjtcbiAgICB2YXIgb3JpZ2luYWxEaXNwbGF5ID0gZWwuX192T3JpZ2luYWxEaXNwbGF5ID1cbiAgICAgIGVsLnN0eWxlLmRpc3BsYXkgPT09ICdub25lJyA/ICcnIDogZWwuc3R5bGUuZGlzcGxheTtcbiAgICBpZiAodmFsdWUgJiYgdHJhbnNpdGlvbiQkMSkge1xuICAgICAgdm5vZGUuZGF0YS5zaG93ID0gdHJ1ZTtcbiAgICAgIGVudGVyKHZub2RlLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGVsLnN0eWxlLmRpc3BsYXkgPSBvcmlnaW5hbERpc3BsYXk7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgZWwuc3R5bGUuZGlzcGxheSA9IHZhbHVlID8gb3JpZ2luYWxEaXNwbGF5IDogJ25vbmUnO1xuICAgIH1cbiAgfSxcblxuICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSAoZWwsIHJlZiwgdm5vZGUpIHtcbiAgICB2YXIgdmFsdWUgPSByZWYudmFsdWU7XG4gICAgdmFyIG9sZFZhbHVlID0gcmVmLm9sZFZhbHVlO1xuXG4gICAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgaWYgKCF2YWx1ZSA9PT0gIW9sZFZhbHVlKSB7IHJldHVybiB9XG4gICAgdm5vZGUgPSBsb2NhdGVOb2RlKHZub2RlKTtcbiAgICB2YXIgdHJhbnNpdGlvbiQkMSA9IHZub2RlLmRhdGEgJiYgdm5vZGUuZGF0YS50cmFuc2l0aW9uO1xuICAgIGlmICh0cmFuc2l0aW9uJCQxKSB7XG4gICAgICB2bm9kZS5kYXRhLnNob3cgPSB0cnVlO1xuICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgIGVudGVyKHZub2RlLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgZWwuc3R5bGUuZGlzcGxheSA9IGVsLl9fdk9yaWdpbmFsRGlzcGxheTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZWF2ZSh2bm9kZSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIGVsLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBlbC5zdHlsZS5kaXNwbGF5ID0gdmFsdWUgPyBlbC5fX3ZPcmlnaW5hbERpc3BsYXkgOiAnbm9uZSc7XG4gICAgfVxuICB9LFxuXG4gIHVuYmluZDogZnVuY3Rpb24gdW5iaW5kIChcbiAgICBlbCxcbiAgICBiaW5kaW5nLFxuICAgIHZub2RlLFxuICAgIG9sZFZub2RlLFxuICAgIGlzRGVzdHJveVxuICApIHtcbiAgICBpZiAoIWlzRGVzdHJveSkge1xuICAgICAgZWwuc3R5bGUuZGlzcGxheSA9IGVsLl9fdk9yaWdpbmFsRGlzcGxheTtcbiAgICB9XG4gIH1cbn07XG5cbnZhciBwbGF0Zm9ybURpcmVjdGl2ZXMgPSB7XG4gIG1vZGVsOiBkaXJlY3RpdmUsXG4gIHNob3c6IHNob3dcbn07XG5cbi8qICAqL1xuXG52YXIgdHJhbnNpdGlvblByb3BzID0ge1xuICBuYW1lOiBTdHJpbmcsXG4gIGFwcGVhcjogQm9vbGVhbixcbiAgY3NzOiBCb29sZWFuLFxuICBtb2RlOiBTdHJpbmcsXG4gIHR5cGU6IFN0cmluZyxcbiAgZW50ZXJDbGFzczogU3RyaW5nLFxuICBsZWF2ZUNsYXNzOiBTdHJpbmcsXG4gIGVudGVyVG9DbGFzczogU3RyaW5nLFxuICBsZWF2ZVRvQ2xhc3M6IFN0cmluZyxcbiAgZW50ZXJBY3RpdmVDbGFzczogU3RyaW5nLFxuICBsZWF2ZUFjdGl2ZUNsYXNzOiBTdHJpbmcsXG4gIGFwcGVhckNsYXNzOiBTdHJpbmcsXG4gIGFwcGVhckFjdGl2ZUNsYXNzOiBTdHJpbmcsXG4gIGFwcGVhclRvQ2xhc3M6IFN0cmluZyxcbiAgZHVyYXRpb246IFtOdW1iZXIsIFN0cmluZywgT2JqZWN0XVxufTtcblxuLy8gaW4gY2FzZSB0aGUgY2hpbGQgaXMgYWxzbyBhbiBhYnN0cmFjdCBjb21wb25lbnQsIGUuZy4gPGtlZXAtYWxpdmU+XG4vLyB3ZSB3YW50IHRvIHJlY3Vyc2l2ZWx5IHJldHJpZXZlIHRoZSByZWFsIGNvbXBvbmVudCB0byBiZSByZW5kZXJlZFxuZnVuY3Rpb24gZ2V0UmVhbENoaWxkICh2bm9kZSkge1xuICB2YXIgY29tcE9wdGlvbnMgPSB2bm9kZSAmJiB2bm9kZS5jb21wb25lbnRPcHRpb25zO1xuICBpZiAoY29tcE9wdGlvbnMgJiYgY29tcE9wdGlvbnMuQ3Rvci5vcHRpb25zLmFic3RyYWN0KSB7XG4gICAgcmV0dXJuIGdldFJlYWxDaGlsZChnZXRGaXJzdENvbXBvbmVudENoaWxkKGNvbXBPcHRpb25zLmNoaWxkcmVuKSlcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gdm5vZGVcbiAgfVxufVxuXG5mdW5jdGlvbiBleHRyYWN0VHJhbnNpdGlvbkRhdGEgKGNvbXApIHtcbiAgdmFyIGRhdGEgPSB7fTtcbiAgdmFyIG9wdGlvbnMgPSBjb21wLiRvcHRpb25zO1xuICAvLyBwcm9wc1xuICBmb3IgKHZhciBrZXkgaW4gb3B0aW9ucy5wcm9wc0RhdGEpIHtcbiAgICBkYXRhW2tleV0gPSBjb21wW2tleV07XG4gIH1cbiAgLy8gZXZlbnRzLlxuICAvLyBleHRyYWN0IGxpc3RlbmVycyBhbmQgcGFzcyB0aGVtIGRpcmVjdGx5IHRvIHRoZSB0cmFuc2l0aW9uIG1ldGhvZHNcbiAgdmFyIGxpc3RlbmVycyA9IG9wdGlvbnMuX3BhcmVudExpc3RlbmVycztcbiAgZm9yICh2YXIga2V5JDEgaW4gbGlzdGVuZXJzKSB7XG4gICAgZGF0YVtjYW1lbGl6ZShrZXkkMSldID0gbGlzdGVuZXJzW2tleSQxXTtcbiAgfVxuICByZXR1cm4gZGF0YVxufVxuXG5mdW5jdGlvbiBwbGFjZWhvbGRlciAoaCwgcmF3Q2hpbGQpIHtcbiAgaWYgKC9cXGQta2VlcC1hbGl2ZSQvLnRlc3QocmF3Q2hpbGQudGFnKSkge1xuICAgIHJldHVybiBoKCdrZWVwLWFsaXZlJywge1xuICAgICAgcHJvcHM6IHJhd0NoaWxkLmNvbXBvbmVudE9wdGlvbnMucHJvcHNEYXRhXG4gICAgfSlcbiAgfVxufVxuXG5mdW5jdGlvbiBoYXNQYXJlbnRUcmFuc2l0aW9uICh2bm9kZSkge1xuICB3aGlsZSAoKHZub2RlID0gdm5vZGUucGFyZW50KSkge1xuICAgIGlmICh2bm9kZS5kYXRhLnRyYW5zaXRpb24pIHtcbiAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGlzU2FtZUNoaWxkIChjaGlsZCwgb2xkQ2hpbGQpIHtcbiAgcmV0dXJuIG9sZENoaWxkLmtleSA9PT0gY2hpbGQua2V5ICYmIG9sZENoaWxkLnRhZyA9PT0gY2hpbGQudGFnXG59XG5cbnZhciBpc05vdFRleHROb2RlID0gZnVuY3Rpb24gKGMpIHsgcmV0dXJuIGMudGFnIHx8IGlzQXN5bmNQbGFjZWhvbGRlcihjKTsgfTtcblxudmFyIGlzVlNob3dEaXJlY3RpdmUgPSBmdW5jdGlvbiAoZCkgeyByZXR1cm4gZC5uYW1lID09PSAnc2hvdyc7IH07XG5cbnZhciBUcmFuc2l0aW9uID0ge1xuICBuYW1lOiAndHJhbnNpdGlvbicsXG4gIHByb3BzOiB0cmFuc2l0aW9uUHJvcHMsXG4gIGFic3RyYWN0OiB0cnVlLFxuXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyIChoKSB7XG4gICAgdmFyIHRoaXMkMSA9IHRoaXM7XG5cbiAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLiRzbG90cy5kZWZhdWx0O1xuICAgIGlmICghY2hpbGRyZW4pIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIC8vIGZpbHRlciBvdXQgdGV4dCBub2RlcyAocG9zc2libGUgd2hpdGVzcGFjZXMpXG4gICAgY2hpbGRyZW4gPSBjaGlsZHJlbi5maWx0ZXIoaXNOb3RUZXh0Tm9kZSk7XG4gICAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgaWYgKCFjaGlsZHJlbi5sZW5ndGgpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIC8vIHdhcm4gbXVsdGlwbGUgZWxlbWVudHNcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBjaGlsZHJlbi5sZW5ndGggPiAxKSB7XG4gICAgICB3YXJuKFxuICAgICAgICAnPHRyYW5zaXRpb24+IGNhbiBvbmx5IGJlIHVzZWQgb24gYSBzaW5nbGUgZWxlbWVudC4gVXNlICcgK1xuICAgICAgICAnPHRyYW5zaXRpb24tZ3JvdXA+IGZvciBsaXN0cy4nLFxuICAgICAgICB0aGlzLiRwYXJlbnRcbiAgICAgICk7XG4gICAgfVxuXG4gICAgdmFyIG1vZGUgPSB0aGlzLm1vZGU7XG5cbiAgICAvLyB3YXJuIGludmFsaWQgbW9kZVxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmXG4gICAgICBtb2RlICYmIG1vZGUgIT09ICdpbi1vdXQnICYmIG1vZGUgIT09ICdvdXQtaW4nXG4gICAgKSB7XG4gICAgICB3YXJuKFxuICAgICAgICAnaW52YWxpZCA8dHJhbnNpdGlvbj4gbW9kZTogJyArIG1vZGUsXG4gICAgICAgIHRoaXMuJHBhcmVudFxuICAgICAgKTtcbiAgICB9XG5cbiAgICB2YXIgcmF3Q2hpbGQgPSBjaGlsZHJlblswXTtcblxuICAgIC8vIGlmIHRoaXMgaXMgYSBjb21wb25lbnQgcm9vdCBub2RlIGFuZCB0aGUgY29tcG9uZW50J3NcbiAgICAvLyBwYXJlbnQgY29udGFpbmVyIG5vZGUgYWxzbyBoYXMgdHJhbnNpdGlvbiwgc2tpcC5cbiAgICBpZiAoaGFzUGFyZW50VHJhbnNpdGlvbih0aGlzLiR2bm9kZSkpIHtcbiAgICAgIHJldHVybiByYXdDaGlsZFxuICAgIH1cblxuICAgIC8vIGFwcGx5IHRyYW5zaXRpb24gZGF0YSB0byBjaGlsZFxuICAgIC8vIHVzZSBnZXRSZWFsQ2hpbGQoKSB0byBpZ25vcmUgYWJzdHJhY3QgY29tcG9uZW50cyBlLmcuIGtlZXAtYWxpdmVcbiAgICB2YXIgY2hpbGQgPSBnZXRSZWFsQ2hpbGQocmF3Q2hpbGQpO1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgIGlmICghY2hpbGQpIHtcbiAgICAgIHJldHVybiByYXdDaGlsZFxuICAgIH1cblxuICAgIGlmICh0aGlzLl9sZWF2aW5nKSB7XG4gICAgICByZXR1cm4gcGxhY2Vob2xkZXIoaCwgcmF3Q2hpbGQpXG4gICAgfVxuXG4gICAgLy8gZW5zdXJlIGEga2V5IHRoYXQgaXMgdW5pcXVlIHRvIHRoZSB2bm9kZSB0eXBlIGFuZCB0byB0aGlzIHRyYW5zaXRpb25cbiAgICAvLyBjb21wb25lbnQgaW5zdGFuY2UuIFRoaXMga2V5IHdpbGwgYmUgdXNlZCB0byByZW1vdmUgcGVuZGluZyBsZWF2aW5nIG5vZGVzXG4gICAgLy8gZHVyaW5nIGVudGVyaW5nLlxuICAgIHZhciBpZCA9IFwiX190cmFuc2l0aW9uLVwiICsgKHRoaXMuX3VpZCkgKyBcIi1cIjtcbiAgICBjaGlsZC5rZXkgPSBjaGlsZC5rZXkgPT0gbnVsbFxuICAgICAgPyBjaGlsZC5pc0NvbW1lbnRcbiAgICAgICAgPyBpZCArICdjb21tZW50J1xuICAgICAgICA6IGlkICsgY2hpbGQudGFnXG4gICAgICA6IGlzUHJpbWl0aXZlKGNoaWxkLmtleSlcbiAgICAgICAgPyAoU3RyaW5nKGNoaWxkLmtleSkuaW5kZXhPZihpZCkgPT09IDAgPyBjaGlsZC5rZXkgOiBpZCArIGNoaWxkLmtleSlcbiAgICAgICAgOiBjaGlsZC5rZXk7XG5cbiAgICB2YXIgZGF0YSA9IChjaGlsZC5kYXRhIHx8IChjaGlsZC5kYXRhID0ge30pKS50cmFuc2l0aW9uID0gZXh0cmFjdFRyYW5zaXRpb25EYXRhKHRoaXMpO1xuICAgIHZhciBvbGRSYXdDaGlsZCA9IHRoaXMuX3Zub2RlO1xuICAgIHZhciBvbGRDaGlsZCA9IGdldFJlYWxDaGlsZChvbGRSYXdDaGlsZCk7XG5cbiAgICAvLyBtYXJrIHYtc2hvd1xuICAgIC8vIHNvIHRoYXQgdGhlIHRyYW5zaXRpb24gbW9kdWxlIGNhbiBoYW5kIG92ZXIgdGhlIGNvbnRyb2wgdG8gdGhlIGRpcmVjdGl2ZVxuICAgIGlmIChjaGlsZC5kYXRhLmRpcmVjdGl2ZXMgJiYgY2hpbGQuZGF0YS5kaXJlY3RpdmVzLnNvbWUoaXNWU2hvd0RpcmVjdGl2ZSkpIHtcbiAgICAgIGNoaWxkLmRhdGEuc2hvdyA9IHRydWU7XG4gICAgfVxuXG4gICAgaWYgKFxuICAgICAgb2xkQ2hpbGQgJiZcbiAgICAgIG9sZENoaWxkLmRhdGEgJiZcbiAgICAgICFpc1NhbWVDaGlsZChjaGlsZCwgb2xkQ2hpbGQpICYmXG4gICAgICAhaXNBc3luY1BsYWNlaG9sZGVyKG9sZENoaWxkKSAmJlxuICAgICAgLy8gIzY2ODcgY29tcG9uZW50IHJvb3QgaXMgYSBjb21tZW50IG5vZGVcbiAgICAgICEob2xkQ2hpbGQuY29tcG9uZW50SW5zdGFuY2UgJiYgb2xkQ2hpbGQuY29tcG9uZW50SW5zdGFuY2UuX3Zub2RlLmlzQ29tbWVudClcbiAgICApIHtcbiAgICAgIC8vIHJlcGxhY2Ugb2xkIGNoaWxkIHRyYW5zaXRpb24gZGF0YSB3aXRoIGZyZXNoIG9uZVxuICAgICAgLy8gaW1wb3J0YW50IGZvciBkeW5hbWljIHRyYW5zaXRpb25zIVxuICAgICAgdmFyIG9sZERhdGEgPSBvbGRDaGlsZC5kYXRhLnRyYW5zaXRpb24gPSBleHRlbmQoe30sIGRhdGEpO1xuICAgICAgLy8gaGFuZGxlIHRyYW5zaXRpb24gbW9kZVxuICAgICAgaWYgKG1vZGUgPT09ICdvdXQtaW4nKSB7XG4gICAgICAgIC8vIHJldHVybiBwbGFjZWhvbGRlciBub2RlIGFuZCBxdWV1ZSB1cGRhdGUgd2hlbiBsZWF2ZSBmaW5pc2hlc1xuICAgICAgICB0aGlzLl9sZWF2aW5nID0gdHJ1ZTtcbiAgICAgICAgbWVyZ2VWTm9kZUhvb2sob2xkRGF0YSwgJ2FmdGVyTGVhdmUnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgdGhpcyQxLl9sZWF2aW5nID0gZmFsc2U7XG4gICAgICAgICAgdGhpcyQxLiRmb3JjZVVwZGF0ZSgpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHBsYWNlaG9sZGVyKGgsIHJhd0NoaWxkKVxuICAgICAgfSBlbHNlIGlmIChtb2RlID09PSAnaW4tb3V0Jykge1xuICAgICAgICBpZiAoaXNBc3luY1BsYWNlaG9sZGVyKGNoaWxkKSkge1xuICAgICAgICAgIHJldHVybiBvbGRSYXdDaGlsZFxuICAgICAgICB9XG4gICAgICAgIHZhciBkZWxheWVkTGVhdmU7XG4gICAgICAgIHZhciBwZXJmb3JtTGVhdmUgPSBmdW5jdGlvbiAoKSB7IGRlbGF5ZWRMZWF2ZSgpOyB9O1xuICAgICAgICBtZXJnZVZOb2RlSG9vayhkYXRhLCAnYWZ0ZXJFbnRlcicsIHBlcmZvcm1MZWF2ZSk7XG4gICAgICAgIG1lcmdlVk5vZGVIb29rKGRhdGEsICdlbnRlckNhbmNlbGxlZCcsIHBlcmZvcm1MZWF2ZSk7XG4gICAgICAgIG1lcmdlVk5vZGVIb29rKG9sZERhdGEsICdkZWxheUxlYXZlJywgZnVuY3Rpb24gKGxlYXZlKSB7IGRlbGF5ZWRMZWF2ZSA9IGxlYXZlOyB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gcmF3Q2hpbGRcbiAgfVxufTtcblxuLyogICovXG5cbnZhciBwcm9wcyA9IGV4dGVuZCh7XG4gIHRhZzogU3RyaW5nLFxuICBtb3ZlQ2xhc3M6IFN0cmluZ1xufSwgdHJhbnNpdGlvblByb3BzKTtcblxuZGVsZXRlIHByb3BzLm1vZGU7XG5cbnZhciBUcmFuc2l0aW9uR3JvdXAgPSB7XG4gIHByb3BzOiBwcm9wcyxcblxuICBiZWZvcmVNb3VudDogZnVuY3Rpb24gYmVmb3JlTW91bnQgKCkge1xuICAgIHZhciB0aGlzJDEgPSB0aGlzO1xuXG4gICAgdmFyIHVwZGF0ZSA9IHRoaXMuX3VwZGF0ZTtcbiAgICB0aGlzLl91cGRhdGUgPSBmdW5jdGlvbiAodm5vZGUsIGh5ZHJhdGluZykge1xuICAgICAgdmFyIHJlc3RvcmVBY3RpdmVJbnN0YW5jZSA9IHNldEFjdGl2ZUluc3RhbmNlKHRoaXMkMSk7XG4gICAgICAvLyBmb3JjZSByZW1vdmluZyBwYXNzXG4gICAgICB0aGlzJDEuX19wYXRjaF9fKFxuICAgICAgICB0aGlzJDEuX3Zub2RlLFxuICAgICAgICB0aGlzJDEua2VwdCxcbiAgICAgICAgZmFsc2UsIC8vIGh5ZHJhdGluZ1xuICAgICAgICB0cnVlIC8vIHJlbW92ZU9ubHkgKCFpbXBvcnRhbnQsIGF2b2lkcyB1bm5lY2Vzc2FyeSBtb3ZlcylcbiAgICAgICk7XG4gICAgICB0aGlzJDEuX3Zub2RlID0gdGhpcyQxLmtlcHQ7XG4gICAgICByZXN0b3JlQWN0aXZlSW5zdGFuY2UoKTtcbiAgICAgIHVwZGF0ZS5jYWxsKHRoaXMkMSwgdm5vZGUsIGh5ZHJhdGluZyk7XG4gICAgfTtcbiAgfSxcblxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlciAoaCkge1xuICAgIHZhciB0YWcgPSB0aGlzLnRhZyB8fCB0aGlzLiR2bm9kZS5kYXRhLnRhZyB8fCAnc3Bhbic7XG4gICAgdmFyIG1hcCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgdmFyIHByZXZDaGlsZHJlbiA9IHRoaXMucHJldkNoaWxkcmVuID0gdGhpcy5jaGlsZHJlbjtcbiAgICB2YXIgcmF3Q2hpbGRyZW4gPSB0aGlzLiRzbG90cy5kZWZhdWx0IHx8IFtdO1xuICAgIHZhciBjaGlsZHJlbiA9IHRoaXMuY2hpbGRyZW4gPSBbXTtcbiAgICB2YXIgdHJhbnNpdGlvbkRhdGEgPSBleHRyYWN0VHJhbnNpdGlvbkRhdGEodGhpcyk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJhd0NoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgYyA9IHJhd0NoaWxkcmVuW2ldO1xuICAgICAgaWYgKGMudGFnKSB7XG4gICAgICAgIGlmIChjLmtleSAhPSBudWxsICYmIFN0cmluZyhjLmtleSkuaW5kZXhPZignX192bGlzdCcpICE9PSAwKSB7XG4gICAgICAgICAgY2hpbGRyZW4ucHVzaChjKTtcbiAgICAgICAgICBtYXBbYy5rZXldID0gY1xuICAgICAgICAgIDsoYy5kYXRhIHx8IChjLmRhdGEgPSB7fSkpLnRyYW5zaXRpb24gPSB0cmFuc2l0aW9uRGF0YTtcbiAgICAgICAgfSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgdmFyIG9wdHMgPSBjLmNvbXBvbmVudE9wdGlvbnM7XG4gICAgICAgICAgdmFyIG5hbWUgPSBvcHRzID8gKG9wdHMuQ3Rvci5vcHRpb25zLm5hbWUgfHwgb3B0cy50YWcgfHwgJycpIDogYy50YWc7XG4gICAgICAgICAgd2FybigoXCI8dHJhbnNpdGlvbi1ncm91cD4gY2hpbGRyZW4gbXVzdCBiZSBrZXllZDogPFwiICsgbmFtZSArIFwiPlwiKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAocHJldkNoaWxkcmVuKSB7XG4gICAgICB2YXIga2VwdCA9IFtdO1xuICAgICAgdmFyIHJlbW92ZWQgPSBbXTtcbiAgICAgIGZvciAodmFyIGkkMSA9IDA7IGkkMSA8IHByZXZDaGlsZHJlbi5sZW5ndGg7IGkkMSsrKSB7XG4gICAgICAgIHZhciBjJDEgPSBwcmV2Q2hpbGRyZW5baSQxXTtcbiAgICAgICAgYyQxLmRhdGEudHJhbnNpdGlvbiA9IHRyYW5zaXRpb25EYXRhO1xuICAgICAgICBjJDEuZGF0YS5wb3MgPSBjJDEuZWxtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICBpZiAobWFwW2MkMS5rZXldKSB7XG4gICAgICAgICAga2VwdC5wdXNoKGMkMSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVtb3ZlZC5wdXNoKGMkMSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHRoaXMua2VwdCA9IGgodGFnLCBudWxsLCBrZXB0KTtcbiAgICAgIHRoaXMucmVtb3ZlZCA9IHJlbW92ZWQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIGgodGFnLCBudWxsLCBjaGlsZHJlbilcbiAgfSxcblxuICB1cGRhdGVkOiBmdW5jdGlvbiB1cGRhdGVkICgpIHtcbiAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLnByZXZDaGlsZHJlbjtcbiAgICB2YXIgbW92ZUNsYXNzID0gdGhpcy5tb3ZlQ2xhc3MgfHwgKCh0aGlzLm5hbWUgfHwgJ3YnKSArICctbW92ZScpO1xuICAgIGlmICghY2hpbGRyZW4ubGVuZ3RoIHx8ICF0aGlzLmhhc01vdmUoY2hpbGRyZW5bMF0uZWxtLCBtb3ZlQ2xhc3MpKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICAvLyB3ZSBkaXZpZGUgdGhlIHdvcmsgaW50byB0aHJlZSBsb29wcyB0byBhdm9pZCBtaXhpbmcgRE9NIHJlYWRzIGFuZCB3cml0ZXNcbiAgICAvLyBpbiBlYWNoIGl0ZXJhdGlvbiAtIHdoaWNoIGhlbHBzIHByZXZlbnQgbGF5b3V0IHRocmFzaGluZy5cbiAgICBjaGlsZHJlbi5mb3JFYWNoKGNhbGxQZW5kaW5nQ2JzKTtcbiAgICBjaGlsZHJlbi5mb3JFYWNoKHJlY29yZFBvc2l0aW9uKTtcbiAgICBjaGlsZHJlbi5mb3JFYWNoKGFwcGx5VHJhbnNsYXRpb24pO1xuXG4gICAgLy8gZm9yY2UgcmVmbG93IHRvIHB1dCBldmVyeXRoaW5nIGluIHBvc2l0aW9uXG4gICAgLy8gYXNzaWduIHRvIHRoaXMgdG8gYXZvaWQgYmVpbmcgcmVtb3ZlZCBpbiB0cmVlLXNoYWtpbmdcbiAgICAvLyAkZmxvdy1kaXNhYmxlLWxpbmVcbiAgICB0aGlzLl9yZWZsb3cgPSBkb2N1bWVudC5ib2R5Lm9mZnNldEhlaWdodDtcblxuICAgIGNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24gKGMpIHtcbiAgICAgIGlmIChjLmRhdGEubW92ZWQpIHtcbiAgICAgICAgdmFyIGVsID0gYy5lbG07XG4gICAgICAgIHZhciBzID0gZWwuc3R5bGU7XG4gICAgICAgIGFkZFRyYW5zaXRpb25DbGFzcyhlbCwgbW92ZUNsYXNzKTtcbiAgICAgICAgcy50cmFuc2Zvcm0gPSBzLldlYmtpdFRyYW5zZm9ybSA9IHMudHJhbnNpdGlvbkR1cmF0aW9uID0gJyc7XG4gICAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIodHJhbnNpdGlvbkVuZEV2ZW50LCBlbC5fbW92ZUNiID0gZnVuY3Rpb24gY2IgKGUpIHtcbiAgICAgICAgICBpZiAoZSAmJiBlLnRhcmdldCAhPT0gZWwpIHtcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoIWUgfHwgL3RyYW5zZm9ybSQvLnRlc3QoZS5wcm9wZXJ0eU5hbWUpKSB7XG4gICAgICAgICAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKHRyYW5zaXRpb25FbmRFdmVudCwgY2IpO1xuICAgICAgICAgICAgZWwuX21vdmVDYiA9IG51bGw7XG4gICAgICAgICAgICByZW1vdmVUcmFuc2l0aW9uQ2xhc3MoZWwsIG1vdmVDbGFzcyk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSxcblxuICBtZXRob2RzOiB7XG4gICAgaGFzTW92ZTogZnVuY3Rpb24gaGFzTW92ZSAoZWwsIG1vdmVDbGFzcykge1xuICAgICAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgICBpZiAoIWhhc1RyYW5zaXRpb24pIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICB9XG4gICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICAgIGlmICh0aGlzLl9oYXNNb3ZlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9oYXNNb3ZlXG4gICAgICB9XG4gICAgICAvLyBEZXRlY3Qgd2hldGhlciBhbiBlbGVtZW50IHdpdGggdGhlIG1vdmUgY2xhc3MgYXBwbGllZCBoYXNcbiAgICAgIC8vIENTUyB0cmFuc2l0aW9ucy4gU2luY2UgdGhlIGVsZW1lbnQgbWF5IGJlIGluc2lkZSBhbiBlbnRlcmluZ1xuICAgICAgLy8gdHJhbnNpdGlvbiBhdCB0aGlzIHZlcnkgbW9tZW50LCB3ZSBtYWtlIGEgY2xvbmUgb2YgaXQgYW5kIHJlbW92ZVxuICAgICAgLy8gYWxsIG90aGVyIHRyYW5zaXRpb24gY2xhc3NlcyBhcHBsaWVkIHRvIGVuc3VyZSBvbmx5IHRoZSBtb3ZlIGNsYXNzXG4gICAgICAvLyBpcyBhcHBsaWVkLlxuICAgICAgdmFyIGNsb25lID0gZWwuY2xvbmVOb2RlKCk7XG4gICAgICBpZiAoZWwuX3RyYW5zaXRpb25DbGFzc2VzKSB7XG4gICAgICAgIGVsLl90cmFuc2l0aW9uQ2xhc3Nlcy5mb3JFYWNoKGZ1bmN0aW9uIChjbHMpIHsgcmVtb3ZlQ2xhc3MoY2xvbmUsIGNscyk7IH0pO1xuICAgICAgfVxuICAgICAgYWRkQ2xhc3MoY2xvbmUsIG1vdmVDbGFzcyk7XG4gICAgICBjbG9uZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgdGhpcy4kZWwuYXBwZW5kQ2hpbGQoY2xvbmUpO1xuICAgICAgdmFyIGluZm8gPSBnZXRUcmFuc2l0aW9uSW5mbyhjbG9uZSk7XG4gICAgICB0aGlzLiRlbC5yZW1vdmVDaGlsZChjbG9uZSk7XG4gICAgICByZXR1cm4gKHRoaXMuX2hhc01vdmUgPSBpbmZvLmhhc1RyYW5zZm9ybSlcbiAgICB9XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGNhbGxQZW5kaW5nQ2JzIChjKSB7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICBpZiAoYy5lbG0uX21vdmVDYikge1xuICAgIGMuZWxtLl9tb3ZlQ2IoKTtcbiAgfVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgaWYgKGMuZWxtLl9lbnRlckNiKSB7XG4gICAgYy5lbG0uX2VudGVyQ2IoKTtcbiAgfVxufVxuXG5mdW5jdGlvbiByZWNvcmRQb3NpdGlvbiAoYykge1xuICBjLmRhdGEubmV3UG9zID0gYy5lbG0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG59XG5cbmZ1bmN0aW9uIGFwcGx5VHJhbnNsYXRpb24gKGMpIHtcbiAgdmFyIG9sZFBvcyA9IGMuZGF0YS5wb3M7XG4gIHZhciBuZXdQb3MgPSBjLmRhdGEubmV3UG9zO1xuICB2YXIgZHggPSBvbGRQb3MubGVmdCAtIG5ld1Bvcy5sZWZ0O1xuICB2YXIgZHkgPSBvbGRQb3MudG9wIC0gbmV3UG9zLnRvcDtcbiAgaWYgKGR4IHx8IGR5KSB7XG4gICAgYy5kYXRhLm1vdmVkID0gdHJ1ZTtcbiAgICB2YXIgcyA9IGMuZWxtLnN0eWxlO1xuICAgIHMudHJhbnNmb3JtID0gcy5XZWJraXRUcmFuc2Zvcm0gPSBcInRyYW5zbGF0ZShcIiArIGR4ICsgXCJweCxcIiArIGR5ICsgXCJweClcIjtcbiAgICBzLnRyYW5zaXRpb25EdXJhdGlvbiA9ICcwcyc7XG4gIH1cbn1cblxudmFyIHBsYXRmb3JtQ29tcG9uZW50cyA9IHtcbiAgVHJhbnNpdGlvbjogVHJhbnNpdGlvbixcbiAgVHJhbnNpdGlvbkdyb3VwOiBUcmFuc2l0aW9uR3JvdXBcbn07XG5cbi8qICAqL1xuXG4vLyBpbnN0YWxsIHBsYXRmb3JtIHNwZWNpZmljIHV0aWxzXG5WdWUuY29uZmlnLm11c3RVc2VQcm9wID0gbXVzdFVzZVByb3A7XG5WdWUuY29uZmlnLmlzUmVzZXJ2ZWRUYWcgPSBpc1Jlc2VydmVkVGFnO1xuVnVlLmNvbmZpZy5pc1Jlc2VydmVkQXR0ciA9IGlzUmVzZXJ2ZWRBdHRyO1xuVnVlLmNvbmZpZy5nZXRUYWdOYW1lc3BhY2UgPSBnZXRUYWdOYW1lc3BhY2U7XG5WdWUuY29uZmlnLmlzVW5rbm93bkVsZW1lbnQgPSBpc1Vua25vd25FbGVtZW50O1xuXG4vLyBpbnN0YWxsIHBsYXRmb3JtIHJ1bnRpbWUgZGlyZWN0aXZlcyAmIGNvbXBvbmVudHNcbmV4dGVuZChWdWUub3B0aW9ucy5kaXJlY3RpdmVzLCBwbGF0Zm9ybURpcmVjdGl2ZXMpO1xuZXh0ZW5kKFZ1ZS5vcHRpb25zLmNvbXBvbmVudHMsIHBsYXRmb3JtQ29tcG9uZW50cyk7XG5cbi8vIGluc3RhbGwgcGxhdGZvcm0gcGF0Y2ggZnVuY3Rpb25cblZ1ZS5wcm90b3R5cGUuX19wYXRjaF9fID0gaW5Ccm93c2VyID8gcGF0Y2ggOiBub29wO1xuXG4vLyBwdWJsaWMgbW91bnQgbWV0aG9kXG5WdWUucHJvdG90eXBlLiRtb3VudCA9IGZ1bmN0aW9uIChcbiAgZWwsXG4gIGh5ZHJhdGluZ1xuKSB7XG4gIGVsID0gZWwgJiYgaW5Ccm93c2VyID8gcXVlcnkoZWwpIDogdW5kZWZpbmVkO1xuICByZXR1cm4gbW91bnRDb21wb25lbnQodGhpcywgZWwsIGh5ZHJhdGluZylcbn07XG5cbi8vIGRldnRvb2xzIGdsb2JhbCBob29rXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuaWYgKGluQnJvd3Nlcikge1xuICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoY29uZmlnLmRldnRvb2xzKSB7XG4gICAgICBpZiAoZGV2dG9vbHMpIHtcbiAgICAgICAgZGV2dG9vbHMuZW1pdCgnaW5pdCcsIFZ1ZSk7XG4gICAgICB9IGVsc2UgaWYgKFxuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmXG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAndGVzdCdcbiAgICAgICkge1xuICAgICAgICBjb25zb2xlW2NvbnNvbGUuaW5mbyA/ICdpbmZvJyA6ICdsb2cnXShcbiAgICAgICAgICAnRG93bmxvYWQgdGhlIFZ1ZSBEZXZ0b29scyBleHRlbnNpb24gZm9yIGEgYmV0dGVyIGRldmVsb3BtZW50IGV4cGVyaWVuY2U6XFxuJyArXG4gICAgICAgICAgJ2h0dHBzOi8vZ2l0aHViLmNvbS92dWVqcy92dWUtZGV2dG9vbHMnXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmXG4gICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Rlc3QnICYmXG4gICAgICBjb25maWcucHJvZHVjdGlvblRpcCAhPT0gZmFsc2UgJiZcbiAgICAgIHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJ1xuICAgICkge1xuICAgICAgY29uc29sZVtjb25zb2xlLmluZm8gPyAnaW5mbycgOiAnbG9nJ10oXG4gICAgICAgIFwiWW91IGFyZSBydW5uaW5nIFZ1ZSBpbiBkZXZlbG9wbWVudCBtb2RlLlxcblwiICtcbiAgICAgICAgXCJNYWtlIHN1cmUgdG8gdHVybiBvbiBwcm9kdWN0aW9uIG1vZGUgd2hlbiBkZXBsb3lpbmcgZm9yIHByb2R1Y3Rpb24uXFxuXCIgK1xuICAgICAgICBcIlNlZSBtb3JlIHRpcHMgYXQgaHR0cHM6Ly92dWVqcy5vcmcvZ3VpZGUvZGVwbG95bWVudC5odG1sXCJcbiAgICAgICk7XG4gICAgfVxuICB9LCAwKTtcbn1cblxuLyogICovXG5cbnZhciBkZWZhdWx0VGFnUkUgPSAvXFx7XFx7KCg/Oi58XFxyP1xcbikrPylcXH1cXH0vZztcbnZhciByZWdleEVzY2FwZVJFID0gL1stLiorP14ke30oKXxbXFxdXFwvXFxcXF0vZztcblxudmFyIGJ1aWxkUmVnZXggPSBjYWNoZWQoZnVuY3Rpb24gKGRlbGltaXRlcnMpIHtcbiAgdmFyIG9wZW4gPSBkZWxpbWl0ZXJzWzBdLnJlcGxhY2UocmVnZXhFc2NhcGVSRSwgJ1xcXFwkJicpO1xuICB2YXIgY2xvc2UgPSBkZWxpbWl0ZXJzWzFdLnJlcGxhY2UocmVnZXhFc2NhcGVSRSwgJ1xcXFwkJicpO1xuICByZXR1cm4gbmV3IFJlZ0V4cChvcGVuICsgJygoPzoufFxcXFxuKSs/KScgKyBjbG9zZSwgJ2cnKVxufSk7XG5cblxuXG5mdW5jdGlvbiBwYXJzZVRleHQgKFxuICB0ZXh0LFxuICBkZWxpbWl0ZXJzXG4pIHtcbiAgdmFyIHRhZ1JFID0gZGVsaW1pdGVycyA/IGJ1aWxkUmVnZXgoZGVsaW1pdGVycykgOiBkZWZhdWx0VGFnUkU7XG4gIGlmICghdGFnUkUudGVzdCh0ZXh0KSkge1xuICAgIHJldHVyblxuICB9XG4gIHZhciB0b2tlbnMgPSBbXTtcbiAgdmFyIHJhd1Rva2VucyA9IFtdO1xuICB2YXIgbGFzdEluZGV4ID0gdGFnUkUubGFzdEluZGV4ID0gMDtcbiAgdmFyIG1hdGNoLCBpbmRleCwgdG9rZW5WYWx1ZTtcbiAgd2hpbGUgKChtYXRjaCA9IHRhZ1JFLmV4ZWModGV4dCkpKSB7XG4gICAgaW5kZXggPSBtYXRjaC5pbmRleDtcbiAgICAvLyBwdXNoIHRleHQgdG9rZW5cbiAgICBpZiAoaW5kZXggPiBsYXN0SW5kZXgpIHtcbiAgICAgIHJhd1Rva2Vucy5wdXNoKHRva2VuVmFsdWUgPSB0ZXh0LnNsaWNlKGxhc3RJbmRleCwgaW5kZXgpKTtcbiAgICAgIHRva2Vucy5wdXNoKEpTT04uc3RyaW5naWZ5KHRva2VuVmFsdWUpKTtcbiAgICB9XG4gICAgLy8gdGFnIHRva2VuXG4gICAgdmFyIGV4cCA9IHBhcnNlRmlsdGVycyhtYXRjaFsxXS50cmltKCkpO1xuICAgIHRva2Vucy5wdXNoKChcIl9zKFwiICsgZXhwICsgXCIpXCIpKTtcbiAgICByYXdUb2tlbnMucHVzaCh7ICdAYmluZGluZyc6IGV4cCB9KTtcbiAgICBsYXN0SW5kZXggPSBpbmRleCArIG1hdGNoWzBdLmxlbmd0aDtcbiAgfVxuICBpZiAobGFzdEluZGV4IDwgdGV4dC5sZW5ndGgpIHtcbiAgICByYXdUb2tlbnMucHVzaCh0b2tlblZhbHVlID0gdGV4dC5zbGljZShsYXN0SW5kZXgpKTtcbiAgICB0b2tlbnMucHVzaChKU09OLnN0cmluZ2lmeSh0b2tlblZhbHVlKSk7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBleHByZXNzaW9uOiB0b2tlbnMuam9pbignKycpLFxuICAgIHRva2VuczogcmF3VG9rZW5zXG4gIH1cbn1cblxuLyogICovXG5cbmZ1bmN0aW9uIHRyYW5zZm9ybU5vZGUgKGVsLCBvcHRpb25zKSB7XG4gIHZhciB3YXJuID0gb3B0aW9ucy53YXJuIHx8IGJhc2VXYXJuO1xuICB2YXIgc3RhdGljQ2xhc3MgPSBnZXRBbmRSZW1vdmVBdHRyKGVsLCAnY2xhc3MnKTtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgc3RhdGljQ2xhc3MpIHtcbiAgICB2YXIgcmVzID0gcGFyc2VUZXh0KHN0YXRpY0NsYXNzLCBvcHRpb25zLmRlbGltaXRlcnMpO1xuICAgIGlmIChyZXMpIHtcbiAgICAgIHdhcm4oXG4gICAgICAgIFwiY2xhc3M9XFxcIlwiICsgc3RhdGljQ2xhc3MgKyBcIlxcXCI6IFwiICtcbiAgICAgICAgJ0ludGVycG9sYXRpb24gaW5zaWRlIGF0dHJpYnV0ZXMgaGFzIGJlZW4gcmVtb3ZlZC4gJyArXG4gICAgICAgICdVc2Ugdi1iaW5kIG9yIHRoZSBjb2xvbiBzaG9ydGhhbmQgaW5zdGVhZC4gRm9yIGV4YW1wbGUsICcgK1xuICAgICAgICAnaW5zdGVhZCBvZiA8ZGl2IGNsYXNzPVwie3sgdmFsIH19XCI+LCB1c2UgPGRpdiA6Y2xhc3M9XCJ2YWxcIj4uJyxcbiAgICAgICAgZWwucmF3QXR0cnNNYXBbJ2NsYXNzJ11cbiAgICAgICk7XG4gICAgfVxuICB9XG4gIGlmIChzdGF0aWNDbGFzcykge1xuICAgIGVsLnN0YXRpY0NsYXNzID0gSlNPTi5zdHJpbmdpZnkoc3RhdGljQ2xhc3MpO1xuICB9XG4gIHZhciBjbGFzc0JpbmRpbmcgPSBnZXRCaW5kaW5nQXR0cihlbCwgJ2NsYXNzJywgZmFsc2UgLyogZ2V0U3RhdGljICovKTtcbiAgaWYgKGNsYXNzQmluZGluZykge1xuICAgIGVsLmNsYXNzQmluZGluZyA9IGNsYXNzQmluZGluZztcbiAgfVxufVxuXG5mdW5jdGlvbiBnZW5EYXRhIChlbCkge1xuICB2YXIgZGF0YSA9ICcnO1xuICBpZiAoZWwuc3RhdGljQ2xhc3MpIHtcbiAgICBkYXRhICs9IFwic3RhdGljQ2xhc3M6XCIgKyAoZWwuc3RhdGljQ2xhc3MpICsgXCIsXCI7XG4gIH1cbiAgaWYgKGVsLmNsYXNzQmluZGluZykge1xuICAgIGRhdGEgKz0gXCJjbGFzczpcIiArIChlbC5jbGFzc0JpbmRpbmcpICsgXCIsXCI7XG4gIH1cbiAgcmV0dXJuIGRhdGFcbn1cblxudmFyIGtsYXNzJDEgPSB7XG4gIHN0YXRpY0tleXM6IFsnc3RhdGljQ2xhc3MnXSxcbiAgdHJhbnNmb3JtTm9kZTogdHJhbnNmb3JtTm9kZSxcbiAgZ2VuRGF0YTogZ2VuRGF0YVxufTtcblxuLyogICovXG5cbmZ1bmN0aW9uIHRyYW5zZm9ybU5vZGUkMSAoZWwsIG9wdGlvbnMpIHtcbiAgdmFyIHdhcm4gPSBvcHRpb25zLndhcm4gfHwgYmFzZVdhcm47XG4gIHZhciBzdGF0aWNTdHlsZSA9IGdldEFuZFJlbW92ZUF0dHIoZWwsICdzdHlsZScpO1xuICBpZiAoc3RhdGljU3R5bGUpIHtcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgdmFyIHJlcyA9IHBhcnNlVGV4dChzdGF0aWNTdHlsZSwgb3B0aW9ucy5kZWxpbWl0ZXJzKTtcbiAgICAgIGlmIChyZXMpIHtcbiAgICAgICAgd2FybihcbiAgICAgICAgICBcInN0eWxlPVxcXCJcIiArIHN0YXRpY1N0eWxlICsgXCJcXFwiOiBcIiArXG4gICAgICAgICAgJ0ludGVycG9sYXRpb24gaW5zaWRlIGF0dHJpYnV0ZXMgaGFzIGJlZW4gcmVtb3ZlZC4gJyArXG4gICAgICAgICAgJ1VzZSB2LWJpbmQgb3IgdGhlIGNvbG9uIHNob3J0aGFuZCBpbnN0ZWFkLiBGb3IgZXhhbXBsZSwgJyArXG4gICAgICAgICAgJ2luc3RlYWQgb2YgPGRpdiBzdHlsZT1cInt7IHZhbCB9fVwiPiwgdXNlIDxkaXYgOnN0eWxlPVwidmFsXCI+LicsXG4gICAgICAgICAgZWwucmF3QXR0cnNNYXBbJ3N0eWxlJ11cbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG4gICAgZWwuc3RhdGljU3R5bGUgPSBKU09OLnN0cmluZ2lmeShwYXJzZVN0eWxlVGV4dChzdGF0aWNTdHlsZSkpO1xuICB9XG5cbiAgdmFyIHN0eWxlQmluZGluZyA9IGdldEJpbmRpbmdBdHRyKGVsLCAnc3R5bGUnLCBmYWxzZSAvKiBnZXRTdGF0aWMgKi8pO1xuICBpZiAoc3R5bGVCaW5kaW5nKSB7XG4gICAgZWwuc3R5bGVCaW5kaW5nID0gc3R5bGVCaW5kaW5nO1xuICB9XG59XG5cbmZ1bmN0aW9uIGdlbkRhdGEkMSAoZWwpIHtcbiAgdmFyIGRhdGEgPSAnJztcbiAgaWYgKGVsLnN0YXRpY1N0eWxlKSB7XG4gICAgZGF0YSArPSBcInN0YXRpY1N0eWxlOlwiICsgKGVsLnN0YXRpY1N0eWxlKSArIFwiLFwiO1xuICB9XG4gIGlmIChlbC5zdHlsZUJpbmRpbmcpIHtcbiAgICBkYXRhICs9IFwic3R5bGU6KFwiICsgKGVsLnN0eWxlQmluZGluZykgKyBcIiksXCI7XG4gIH1cbiAgcmV0dXJuIGRhdGFcbn1cblxudmFyIHN0eWxlJDEgPSB7XG4gIHN0YXRpY0tleXM6IFsnc3RhdGljU3R5bGUnXSxcbiAgdHJhbnNmb3JtTm9kZTogdHJhbnNmb3JtTm9kZSQxLFxuICBnZW5EYXRhOiBnZW5EYXRhJDFcbn07XG5cbi8qICAqL1xuXG52YXIgZGVjb2RlcjtcblxudmFyIGhlID0ge1xuICBkZWNvZGU6IGZ1bmN0aW9uIGRlY29kZSAoaHRtbCkge1xuICAgIGRlY29kZXIgPSBkZWNvZGVyIHx8IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGRlY29kZXIuaW5uZXJIVE1MID0gaHRtbDtcbiAgICByZXR1cm4gZGVjb2Rlci50ZXh0Q29udGVudFxuICB9XG59O1xuXG4vKiAgKi9cblxudmFyIGlzVW5hcnlUYWcgPSBtYWtlTWFwKFxuICAnYXJlYSxiYXNlLGJyLGNvbCxlbWJlZCxmcmFtZSxocixpbWcsaW5wdXQsaXNpbmRleCxrZXlnZW4sJyArXG4gICdsaW5rLG1ldGEscGFyYW0sc291cmNlLHRyYWNrLHdicidcbik7XG5cbi8vIEVsZW1lbnRzIHRoYXQgeW91IGNhbiwgaW50ZW50aW9uYWxseSwgbGVhdmUgb3BlblxuLy8gKGFuZCB3aGljaCBjbG9zZSB0aGVtc2VsdmVzKVxudmFyIGNhbkJlTGVmdE9wZW5UYWcgPSBtYWtlTWFwKFxuICAnY29sZ3JvdXAsZGQsZHQsbGksb3B0aW9ucyxwLHRkLHRmb290LHRoLHRoZWFkLHRyLHNvdXJjZSdcbik7XG5cbi8vIEhUTUw1IHRhZ3MgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvaW5kaWNlcy5odG1sI2VsZW1lbnRzLTNcbi8vIFBocmFzaW5nIENvbnRlbnQgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvZG9tLmh0bWwjcGhyYXNpbmctY29udGVudFxudmFyIGlzTm9uUGhyYXNpbmdUYWcgPSBtYWtlTWFwKFxuICAnYWRkcmVzcyxhcnRpY2xlLGFzaWRlLGJhc2UsYmxvY2txdW90ZSxib2R5LGNhcHRpb24sY29sLGNvbGdyb3VwLGRkLCcgK1xuICAnZGV0YWlscyxkaWFsb2csZGl2LGRsLGR0LGZpZWxkc2V0LGZpZ2NhcHRpb24sZmlndXJlLGZvb3Rlcixmb3JtLCcgK1xuICAnaDEsaDIsaDMsaDQsaDUsaDYsaGVhZCxoZWFkZXIsaGdyb3VwLGhyLGh0bWwsbGVnZW5kLGxpLG1lbnVpdGVtLG1ldGEsJyArXG4gICdvcHRncm91cCxvcHRpb24scGFyYW0scnAscnQsc291cmNlLHN0eWxlLHN1bW1hcnksdGJvZHksdGQsdGZvb3QsdGgsdGhlYWQsJyArXG4gICd0aXRsZSx0cix0cmFjaydcbik7XG5cbi8qKlxuICogTm90IHR5cGUtY2hlY2tpbmcgdGhpcyBmaWxlIGJlY2F1c2UgaXQncyBtb3N0bHkgdmVuZG9yIGNvZGUuXG4gKi9cblxuLy8gUmVndWxhciBFeHByZXNzaW9ucyBmb3IgcGFyc2luZyB0YWdzIGFuZCBhdHRyaWJ1dGVzXG52YXIgYXR0cmlidXRlID0gL15cXHMqKFteXFxzXCInPD5cXC89XSspKD86XFxzKig9KVxccyooPzpcIihbXlwiXSopXCIrfCcoW14nXSopJyt8KFteXFxzXCInPTw+YF0rKSkpPy87XG52YXIgZHluYW1pY0FyZ0F0dHJpYnV0ZSA9IC9eXFxzKigoPzp2LVtcXHctXSs6fEB8OnwjKVxcW1tePV0rXFxdW15cXHNcIic8PlxcLz1dKikoPzpcXHMqKD0pXFxzKig/OlwiKFteXCJdKilcIit8JyhbXiddKiknK3woW15cXHNcIic9PD5gXSspKSk/LztcbnZhciBuY25hbWUgPSBcIlthLXpBLVpfXVtcXFxcLVxcXFwuMC05X2EtekEtWlwiICsgKHVuaWNvZGVSZWdFeHAuc291cmNlKSArIFwiXSpcIjtcbnZhciBxbmFtZUNhcHR1cmUgPSBcIigoPzpcIiArIG5jbmFtZSArIFwiXFxcXDopP1wiICsgbmNuYW1lICsgXCIpXCI7XG52YXIgc3RhcnRUYWdPcGVuID0gbmV3IFJlZ0V4cCgoXCJePFwiICsgcW5hbWVDYXB0dXJlKSk7XG52YXIgc3RhcnRUYWdDbG9zZSA9IC9eXFxzKihcXC8/KT4vO1xudmFyIGVuZFRhZyA9IG5ldyBSZWdFeHAoKFwiXjxcXFxcL1wiICsgcW5hbWVDYXB0dXJlICsgXCJbXj5dKj5cIikpO1xudmFyIGRvY3R5cGUgPSAvXjwhRE9DVFlQRSBbXj5dKz4vaTtcbi8vICM3Mjk4OiBlc2NhcGUgLSB0byBhdm9pZCBiZWluZyBwYXNzZWQgYXMgSFRNTCBjb21tZW50IHdoZW4gaW5saW5lZCBpbiBwYWdlXG52YXIgY29tbWVudCA9IC9ePCFcXC0tLztcbnZhciBjb25kaXRpb25hbENvbW1lbnQgPSAvXjwhXFxbLztcblxuLy8gU3BlY2lhbCBFbGVtZW50cyAoY2FuIGNvbnRhaW4gYW55dGhpbmcpXG52YXIgaXNQbGFpblRleHRFbGVtZW50ID0gbWFrZU1hcCgnc2NyaXB0LHN0eWxlLHRleHRhcmVhJywgdHJ1ZSk7XG52YXIgcmVDYWNoZSA9IHt9O1xuXG52YXIgZGVjb2RpbmdNYXAgPSB7XG4gICcmbHQ7JzogJzwnLFxuICAnJmd0Oyc6ICc+JyxcbiAgJyZxdW90Oyc6ICdcIicsXG4gICcmYW1wOyc6ICcmJyxcbiAgJyYjMTA7JzogJ1xcbicsXG4gICcmIzk7JzogJ1xcdCcsXG4gICcmIzM5Oyc6IFwiJ1wiXG59O1xudmFyIGVuY29kZWRBdHRyID0gLyYoPzpsdHxndHxxdW90fGFtcHwjMzkpOy9nO1xudmFyIGVuY29kZWRBdHRyV2l0aE5ld0xpbmVzID0gLyYoPzpsdHxndHxxdW90fGFtcHwjMzl8IzEwfCM5KTsvZztcblxuLy8gIzU5OTJcbnZhciBpc0lnbm9yZU5ld2xpbmVUYWcgPSBtYWtlTWFwKCdwcmUsdGV4dGFyZWEnLCB0cnVlKTtcbnZhciBzaG91bGRJZ25vcmVGaXJzdE5ld2xpbmUgPSBmdW5jdGlvbiAodGFnLCBodG1sKSB7IHJldHVybiB0YWcgJiYgaXNJZ25vcmVOZXdsaW5lVGFnKHRhZykgJiYgaHRtbFswXSA9PT0gJ1xcbic7IH07XG5cbmZ1bmN0aW9uIGRlY29kZUF0dHIgKHZhbHVlLCBzaG91bGREZWNvZGVOZXdsaW5lcykge1xuICB2YXIgcmUgPSBzaG91bGREZWNvZGVOZXdsaW5lcyA/IGVuY29kZWRBdHRyV2l0aE5ld0xpbmVzIDogZW5jb2RlZEF0dHI7XG4gIHJldHVybiB2YWx1ZS5yZXBsYWNlKHJlLCBmdW5jdGlvbiAobWF0Y2gpIHsgcmV0dXJuIGRlY29kaW5nTWFwW21hdGNoXTsgfSlcbn1cblxuZnVuY3Rpb24gcGFyc2VIVE1MIChodG1sLCBvcHRpb25zKSB7XG4gIHZhciBzdGFjayA9IFtdO1xuICB2YXIgZXhwZWN0SFRNTCA9IG9wdGlvbnMuZXhwZWN0SFRNTDtcbiAgdmFyIGlzVW5hcnlUYWckJDEgPSBvcHRpb25zLmlzVW5hcnlUYWcgfHwgbm87XG4gIHZhciBjYW5CZUxlZnRPcGVuVGFnJCQxID0gb3B0aW9ucy5jYW5CZUxlZnRPcGVuVGFnIHx8IG5vO1xuICB2YXIgaW5kZXggPSAwO1xuICB2YXIgbGFzdCwgbGFzdFRhZztcbiAgd2hpbGUgKGh0bWwpIHtcbiAgICBsYXN0ID0gaHRtbDtcbiAgICAvLyBNYWtlIHN1cmUgd2UncmUgbm90IGluIGEgcGxhaW50ZXh0IGNvbnRlbnQgZWxlbWVudCBsaWtlIHNjcmlwdC9zdHlsZVxuICAgIGlmICghbGFzdFRhZyB8fCAhaXNQbGFpblRleHRFbGVtZW50KGxhc3RUYWcpKSB7XG4gICAgICB2YXIgdGV4dEVuZCA9IGh0bWwuaW5kZXhPZignPCcpO1xuICAgICAgaWYgKHRleHRFbmQgPT09IDApIHtcbiAgICAgICAgLy8gQ29tbWVudDpcbiAgICAgICAgaWYgKGNvbW1lbnQudGVzdChodG1sKSkge1xuICAgICAgICAgIHZhciBjb21tZW50RW5kID0gaHRtbC5pbmRleE9mKCctLT4nKTtcblxuICAgICAgICAgIGlmIChjb21tZW50RW5kID49IDApIHtcbiAgICAgICAgICAgIGlmIChvcHRpb25zLnNob3VsZEtlZXBDb21tZW50KSB7XG4gICAgICAgICAgICAgIG9wdGlvbnMuY29tbWVudChodG1sLnN1YnN0cmluZyg0LCBjb21tZW50RW5kKSwgaW5kZXgsIGluZGV4ICsgY29tbWVudEVuZCArIDMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYWR2YW5jZShjb21tZW50RW5kICsgMyk7XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGh0dHA6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQ29uZGl0aW9uYWxfY29tbWVudCNEb3dubGV2ZWwtcmV2ZWFsZWRfY29uZGl0aW9uYWxfY29tbWVudFxuICAgICAgICBpZiAoY29uZGl0aW9uYWxDb21tZW50LnRlc3QoaHRtbCkpIHtcbiAgICAgICAgICB2YXIgY29uZGl0aW9uYWxFbmQgPSBodG1sLmluZGV4T2YoJ10+Jyk7XG5cbiAgICAgICAgICBpZiAoY29uZGl0aW9uYWxFbmQgPj0gMCkge1xuICAgICAgICAgICAgYWR2YW5jZShjb25kaXRpb25hbEVuZCArIDIpO1xuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBEb2N0eXBlOlxuICAgICAgICB2YXIgZG9jdHlwZU1hdGNoID0gaHRtbC5tYXRjaChkb2N0eXBlKTtcbiAgICAgICAgaWYgKGRvY3R5cGVNYXRjaCkge1xuICAgICAgICAgIGFkdmFuY2UoZG9jdHlwZU1hdGNoWzBdLmxlbmd0aCk7XG4gICAgICAgICAgY29udGludWVcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEVuZCB0YWc6XG4gICAgICAgIHZhciBlbmRUYWdNYXRjaCA9IGh0bWwubWF0Y2goZW5kVGFnKTtcbiAgICAgICAgaWYgKGVuZFRhZ01hdGNoKSB7XG4gICAgICAgICAgdmFyIGN1ckluZGV4ID0gaW5kZXg7XG4gICAgICAgICAgYWR2YW5jZShlbmRUYWdNYXRjaFswXS5sZW5ndGgpO1xuICAgICAgICAgIHBhcnNlRW5kVGFnKGVuZFRhZ01hdGNoWzFdLCBjdXJJbmRleCwgaW5kZXgpO1xuICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH1cblxuICAgICAgICAvLyBTdGFydCB0YWc6XG4gICAgICAgIHZhciBzdGFydFRhZ01hdGNoID0gcGFyc2VTdGFydFRhZygpO1xuICAgICAgICBpZiAoc3RhcnRUYWdNYXRjaCkge1xuICAgICAgICAgIGhhbmRsZVN0YXJ0VGFnKHN0YXJ0VGFnTWF0Y2gpO1xuICAgICAgICAgIGlmIChzaG91bGRJZ25vcmVGaXJzdE5ld2xpbmUoc3RhcnRUYWdNYXRjaC50YWdOYW1lLCBodG1sKSkge1xuICAgICAgICAgICAgYWR2YW5jZSgxKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgY29udGludWVcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB2YXIgdGV4dCA9ICh2b2lkIDApLCByZXN0ID0gKHZvaWQgMCksIG5leHQgPSAodm9pZCAwKTtcbiAgICAgIGlmICh0ZXh0RW5kID49IDApIHtcbiAgICAgICAgcmVzdCA9IGh0bWwuc2xpY2UodGV4dEVuZCk7XG4gICAgICAgIHdoaWxlIChcbiAgICAgICAgICAhZW5kVGFnLnRlc3QocmVzdCkgJiZcbiAgICAgICAgICAhc3RhcnRUYWdPcGVuLnRlc3QocmVzdCkgJiZcbiAgICAgICAgICAhY29tbWVudC50ZXN0KHJlc3QpICYmXG4gICAgICAgICAgIWNvbmRpdGlvbmFsQ29tbWVudC50ZXN0KHJlc3QpXG4gICAgICAgICkge1xuICAgICAgICAgIC8vIDwgaW4gcGxhaW4gdGV4dCwgYmUgZm9yZ2l2aW5nIGFuZCB0cmVhdCBpdCBhcyB0ZXh0XG4gICAgICAgICAgbmV4dCA9IHJlc3QuaW5kZXhPZignPCcsIDEpO1xuICAgICAgICAgIGlmIChuZXh0IDwgMCkgeyBicmVhayB9XG4gICAgICAgICAgdGV4dEVuZCArPSBuZXh0O1xuICAgICAgICAgIHJlc3QgPSBodG1sLnNsaWNlKHRleHRFbmQpO1xuICAgICAgICB9XG4gICAgICAgIHRleHQgPSBodG1sLnN1YnN0cmluZygwLCB0ZXh0RW5kKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRleHRFbmQgPCAwKSB7XG4gICAgICAgIHRleHQgPSBodG1sO1xuICAgICAgfVxuXG4gICAgICBpZiAodGV4dCkge1xuICAgICAgICBhZHZhbmNlKHRleHQubGVuZ3RoKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG9wdGlvbnMuY2hhcnMgJiYgdGV4dCkge1xuICAgICAgICBvcHRpb25zLmNoYXJzKHRleHQsIGluZGV4IC0gdGV4dC5sZW5ndGgsIGluZGV4KTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGVuZFRhZ0xlbmd0aCA9IDA7XG4gICAgICB2YXIgc3RhY2tlZFRhZyA9IGxhc3RUYWcudG9Mb3dlckNhc2UoKTtcbiAgICAgIHZhciByZVN0YWNrZWRUYWcgPSByZUNhY2hlW3N0YWNrZWRUYWddIHx8IChyZUNhY2hlW3N0YWNrZWRUYWddID0gbmV3IFJlZ0V4cCgnKFtcXFxcc1xcXFxTXSo/KSg8LycgKyBzdGFja2VkVGFnICsgJ1tePl0qPiknLCAnaScpKTtcbiAgICAgIHZhciByZXN0JDEgPSBodG1sLnJlcGxhY2UocmVTdGFja2VkVGFnLCBmdW5jdGlvbiAoYWxsLCB0ZXh0LCBlbmRUYWcpIHtcbiAgICAgICAgZW5kVGFnTGVuZ3RoID0gZW5kVGFnLmxlbmd0aDtcbiAgICAgICAgaWYgKCFpc1BsYWluVGV4dEVsZW1lbnQoc3RhY2tlZFRhZykgJiYgc3RhY2tlZFRhZyAhPT0gJ25vc2NyaXB0Jykge1xuICAgICAgICAgIHRleHQgPSB0ZXh0XG4gICAgICAgICAgICAucmVwbGFjZSgvPCFcXC0tKFtcXHNcXFNdKj8pLS0+L2csICckMScpIC8vICM3Mjk4XG4gICAgICAgICAgICAucmVwbGFjZSgvPCFcXFtDREFUQVxcWyhbXFxzXFxTXSo/KV1dPi9nLCAnJDEnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2hvdWxkSWdub3JlRmlyc3ROZXdsaW5lKHN0YWNrZWRUYWcsIHRleHQpKSB7XG4gICAgICAgICAgdGV4dCA9IHRleHQuc2xpY2UoMSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdGlvbnMuY2hhcnMpIHtcbiAgICAgICAgICBvcHRpb25zLmNoYXJzKHRleHQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAnJ1xuICAgICAgfSk7XG4gICAgICBpbmRleCArPSBodG1sLmxlbmd0aCAtIHJlc3QkMS5sZW5ndGg7XG4gICAgICBodG1sID0gcmVzdCQxO1xuICAgICAgcGFyc2VFbmRUYWcoc3RhY2tlZFRhZywgaW5kZXggLSBlbmRUYWdMZW5ndGgsIGluZGV4KTtcbiAgICB9XG5cbiAgICBpZiAoaHRtbCA9PT0gbGFzdCkge1xuICAgICAgb3B0aW9ucy5jaGFycyAmJiBvcHRpb25zLmNoYXJzKGh0bWwpO1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgIXN0YWNrLmxlbmd0aCAmJiBvcHRpb25zLndhcm4pIHtcbiAgICAgICAgb3B0aW9ucy53YXJuKChcIk1hbC1mb3JtYXR0ZWQgdGFnIGF0IGVuZCBvZiB0ZW1wbGF0ZTogXFxcIlwiICsgaHRtbCArIFwiXFxcIlwiKSwgeyBzdGFydDogaW5kZXggKyBodG1sLmxlbmd0aCB9KTtcbiAgICAgIH1cbiAgICAgIGJyZWFrXG4gICAgfVxuICB9XG5cbiAgLy8gQ2xlYW4gdXAgYW55IHJlbWFpbmluZyB0YWdzXG4gIHBhcnNlRW5kVGFnKCk7XG5cbiAgZnVuY3Rpb24gYWR2YW5jZSAobikge1xuICAgIGluZGV4ICs9IG47XG4gICAgaHRtbCA9IGh0bWwuc3Vic3RyaW5nKG4pO1xuICB9XG5cbiAgZnVuY3Rpb24gcGFyc2VTdGFydFRhZyAoKSB7XG4gICAgdmFyIHN0YXJ0ID0gaHRtbC5tYXRjaChzdGFydFRhZ09wZW4pO1xuICAgIGlmIChzdGFydCkge1xuICAgICAgdmFyIG1hdGNoID0ge1xuICAgICAgICB0YWdOYW1lOiBzdGFydFsxXSxcbiAgICAgICAgYXR0cnM6IFtdLFxuICAgICAgICBzdGFydDogaW5kZXhcbiAgICAgIH07XG4gICAgICBhZHZhbmNlKHN0YXJ0WzBdLmxlbmd0aCk7XG4gICAgICB2YXIgZW5kLCBhdHRyO1xuICAgICAgd2hpbGUgKCEoZW5kID0gaHRtbC5tYXRjaChzdGFydFRhZ0Nsb3NlKSkgJiYgKGF0dHIgPSBodG1sLm1hdGNoKGR5bmFtaWNBcmdBdHRyaWJ1dGUpIHx8IGh0bWwubWF0Y2goYXR0cmlidXRlKSkpIHtcbiAgICAgICAgYXR0ci5zdGFydCA9IGluZGV4O1xuICAgICAgICBhZHZhbmNlKGF0dHJbMF0ubGVuZ3RoKTtcbiAgICAgICAgYXR0ci5lbmQgPSBpbmRleDtcbiAgICAgICAgbWF0Y2guYXR0cnMucHVzaChhdHRyKTtcbiAgICAgIH1cbiAgICAgIGlmIChlbmQpIHtcbiAgICAgICAgbWF0Y2gudW5hcnlTbGFzaCA9IGVuZFsxXTtcbiAgICAgICAgYWR2YW5jZShlbmRbMF0ubGVuZ3RoKTtcbiAgICAgICAgbWF0Y2guZW5kID0gaW5kZXg7XG4gICAgICAgIHJldHVybiBtYXRjaFxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVN0YXJ0VGFnIChtYXRjaCkge1xuICAgIHZhciB0YWdOYW1lID0gbWF0Y2gudGFnTmFtZTtcbiAgICB2YXIgdW5hcnlTbGFzaCA9IG1hdGNoLnVuYXJ5U2xhc2g7XG5cbiAgICBpZiAoZXhwZWN0SFRNTCkge1xuICAgICAgaWYgKGxhc3RUYWcgPT09ICdwJyAmJiBpc05vblBocmFzaW5nVGFnKHRhZ05hbWUpKSB7XG4gICAgICAgIHBhcnNlRW5kVGFnKGxhc3RUYWcpO1xuICAgICAgfVxuICAgICAgaWYgKGNhbkJlTGVmdE9wZW5UYWckJDEodGFnTmFtZSkgJiYgbGFzdFRhZyA9PT0gdGFnTmFtZSkge1xuICAgICAgICBwYXJzZUVuZFRhZyh0YWdOYW1lKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgdW5hcnkgPSBpc1VuYXJ5VGFnJCQxKHRhZ05hbWUpIHx8ICEhdW5hcnlTbGFzaDtcblxuICAgIHZhciBsID0gbWF0Y2guYXR0cnMubGVuZ3RoO1xuICAgIHZhciBhdHRycyA9IG5ldyBBcnJheShsKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGw7IGkrKykge1xuICAgICAgdmFyIGFyZ3MgPSBtYXRjaC5hdHRyc1tpXTtcbiAgICAgIHZhciB2YWx1ZSA9IGFyZ3NbM10gfHwgYXJnc1s0XSB8fCBhcmdzWzVdIHx8ICcnO1xuICAgICAgdmFyIHNob3VsZERlY29kZU5ld2xpbmVzID0gdGFnTmFtZSA9PT0gJ2EnICYmIGFyZ3NbMV0gPT09ICdocmVmJ1xuICAgICAgICA/IG9wdGlvbnMuc2hvdWxkRGVjb2RlTmV3bGluZXNGb3JIcmVmXG4gICAgICAgIDogb3B0aW9ucy5zaG91bGREZWNvZGVOZXdsaW5lcztcbiAgICAgIGF0dHJzW2ldID0ge1xuICAgICAgICBuYW1lOiBhcmdzWzFdLFxuICAgICAgICB2YWx1ZTogZGVjb2RlQXR0cih2YWx1ZSwgc2hvdWxkRGVjb2RlTmV3bGluZXMpXG4gICAgICB9O1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgb3B0aW9ucy5vdXRwdXRTb3VyY2VSYW5nZSkge1xuICAgICAgICBhdHRyc1tpXS5zdGFydCA9IGFyZ3Muc3RhcnQgKyBhcmdzWzBdLm1hdGNoKC9eXFxzKi8pLmxlbmd0aDtcbiAgICAgICAgYXR0cnNbaV0uZW5kID0gYXJncy5lbmQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKCF1bmFyeSkge1xuICAgICAgc3RhY2sucHVzaCh7IHRhZzogdGFnTmFtZSwgbG93ZXJDYXNlZFRhZzogdGFnTmFtZS50b0xvd2VyQ2FzZSgpLCBhdHRyczogYXR0cnMsIHN0YXJ0OiBtYXRjaC5zdGFydCwgZW5kOiBtYXRjaC5lbmQgfSk7XG4gICAgICBsYXN0VGFnID0gdGFnTmFtZTtcbiAgICB9XG5cbiAgICBpZiAob3B0aW9ucy5zdGFydCkge1xuICAgICAgb3B0aW9ucy5zdGFydCh0YWdOYW1lLCBhdHRycywgdW5hcnksIG1hdGNoLnN0YXJ0LCBtYXRjaC5lbmQpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHBhcnNlRW5kVGFnICh0YWdOYW1lLCBzdGFydCwgZW5kKSB7XG4gICAgdmFyIHBvcywgbG93ZXJDYXNlZFRhZ05hbWU7XG4gICAgaWYgKHN0YXJ0ID09IG51bGwpIHsgc3RhcnQgPSBpbmRleDsgfVxuICAgIGlmIChlbmQgPT0gbnVsbCkgeyBlbmQgPSBpbmRleDsgfVxuXG4gICAgLy8gRmluZCB0aGUgY2xvc2VzdCBvcGVuZWQgdGFnIG9mIHRoZSBzYW1lIHR5cGVcbiAgICBpZiAodGFnTmFtZSkge1xuICAgICAgbG93ZXJDYXNlZFRhZ05hbWUgPSB0YWdOYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgICBmb3IgKHBvcyA9IHN0YWNrLmxlbmd0aCAtIDE7IHBvcyA+PSAwOyBwb3MtLSkge1xuICAgICAgICBpZiAoc3RhY2tbcG9zXS5sb3dlckNhc2VkVGFnID09PSBsb3dlckNhc2VkVGFnTmFtZSkge1xuICAgICAgICAgIGJyZWFrXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gSWYgbm8gdGFnIG5hbWUgaXMgcHJvdmlkZWQsIGNsZWFuIHNob3BcbiAgICAgIHBvcyA9IDA7XG4gICAgfVxuXG4gICAgaWYgKHBvcyA+PSAwKSB7XG4gICAgICAvLyBDbG9zZSBhbGwgdGhlIG9wZW4gZWxlbWVudHMsIHVwIHRoZSBzdGFja1xuICAgICAgZm9yICh2YXIgaSA9IHN0YWNrLmxlbmd0aCAtIDE7IGkgPj0gcG9zOyBpLS0pIHtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiZcbiAgICAgICAgICAoaSA+IHBvcyB8fCAhdGFnTmFtZSkgJiZcbiAgICAgICAgICBvcHRpb25zLndhcm5cbiAgICAgICAgKSB7XG4gICAgICAgICAgb3B0aW9ucy53YXJuKFxuICAgICAgICAgICAgKFwidGFnIDxcIiArIChzdGFja1tpXS50YWcpICsgXCI+IGhhcyBubyBtYXRjaGluZyBlbmQgdGFnLlwiKSxcbiAgICAgICAgICAgIHsgc3RhcnQ6IHN0YWNrW2ldLnN0YXJ0LCBlbmQ6IHN0YWNrW2ldLmVuZCB9XG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAob3B0aW9ucy5lbmQpIHtcbiAgICAgICAgICBvcHRpb25zLmVuZChzdGFja1tpXS50YWcsIHN0YXJ0LCBlbmQpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIFJlbW92ZSB0aGUgb3BlbiBlbGVtZW50cyBmcm9tIHRoZSBzdGFja1xuICAgICAgc3RhY2subGVuZ3RoID0gcG9zO1xuICAgICAgbGFzdFRhZyA9IHBvcyAmJiBzdGFja1twb3MgLSAxXS50YWc7XG4gICAgfSBlbHNlIGlmIChsb3dlckNhc2VkVGFnTmFtZSA9PT0gJ2JyJykge1xuICAgICAgaWYgKG9wdGlvbnMuc3RhcnQpIHtcbiAgICAgICAgb3B0aW9ucy5zdGFydCh0YWdOYW1lLCBbXSwgdHJ1ZSwgc3RhcnQsIGVuZCk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChsb3dlckNhc2VkVGFnTmFtZSA9PT0gJ3AnKSB7XG4gICAgICBpZiAob3B0aW9ucy5zdGFydCkge1xuICAgICAgICBvcHRpb25zLnN0YXJ0KHRhZ05hbWUsIFtdLCBmYWxzZSwgc3RhcnQsIGVuZCk7XG4gICAgICB9XG4gICAgICBpZiAob3B0aW9ucy5lbmQpIHtcbiAgICAgICAgb3B0aW9ucy5lbmQodGFnTmFtZSwgc3RhcnQsIGVuZCk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qICAqL1xuXG52YXIgb25SRSA9IC9eQHxedi1vbjovO1xudmFyIGRpclJFID0gL152LXxeQHxeOnxeIy87XG52YXIgZm9yQWxpYXNSRSA9IC8oW1xcc1xcU10qPylcXHMrKD86aW58b2YpXFxzKyhbXFxzXFxTXSopLztcbnZhciBmb3JJdGVyYXRvclJFID0gLywoW14sXFx9XFxdXSopKD86LChbXixcXH1cXF1dKikpPyQvO1xudmFyIHN0cmlwUGFyZW5zUkUgPSAvXlxcKHxcXCkkL2c7XG52YXIgZHluYW1pY0FyZ1JFID0gL15cXFsuKlxcXSQvO1xuXG52YXIgYXJnUkUgPSAvOiguKikkLztcbnZhciBiaW5kUkUgPSAvXjp8XlxcLnxedi1iaW5kOi87XG52YXIgbW9kaWZpZXJSRSA9IC9cXC5bXi5cXF1dKyg/PVteXFxdXSokKS9nO1xuXG52YXIgc2xvdFJFID0gL152LXNsb3QoOnwkKXxeIy87XG5cbnZhciBsaW5lQnJlYWtSRSA9IC9bXFxyXFxuXS87XG52YXIgd2hpdGVzcGFjZVJFJDEgPSAvXFxzKy9nO1xuXG52YXIgaW52YWxpZEF0dHJpYnV0ZVJFID0gL1tcXHNcIic8PlxcLz1dLztcblxudmFyIGRlY29kZUhUTUxDYWNoZWQgPSBjYWNoZWQoaGUuZGVjb2RlKTtcblxudmFyIGVtcHR5U2xvdFNjb3BlVG9rZW4gPSBcIl9lbXB0eV9cIjtcblxuLy8gY29uZmlndXJhYmxlIHN0YXRlXG52YXIgd2FybiQyO1xudmFyIGRlbGltaXRlcnM7XG52YXIgdHJhbnNmb3JtcztcbnZhciBwcmVUcmFuc2Zvcm1zO1xudmFyIHBvc3RUcmFuc2Zvcm1zO1xudmFyIHBsYXRmb3JtSXNQcmVUYWc7XG52YXIgcGxhdGZvcm1NdXN0VXNlUHJvcDtcbnZhciBwbGF0Zm9ybUdldFRhZ05hbWVzcGFjZTtcbnZhciBtYXliZUNvbXBvbmVudDtcblxuZnVuY3Rpb24gY3JlYXRlQVNURWxlbWVudCAoXG4gIHRhZyxcbiAgYXR0cnMsXG4gIHBhcmVudFxuKSB7XG4gIHJldHVybiB7XG4gICAgdHlwZTogMSxcbiAgICB0YWc6IHRhZyxcbiAgICBhdHRyc0xpc3Q6IGF0dHJzLFxuICAgIGF0dHJzTWFwOiBtYWtlQXR0cnNNYXAoYXR0cnMpLFxuICAgIHJhd0F0dHJzTWFwOiB7fSxcbiAgICBwYXJlbnQ6IHBhcmVudCxcbiAgICBjaGlsZHJlbjogW11cbiAgfVxufVxuXG4vKipcbiAqIENvbnZlcnQgSFRNTCBzdHJpbmcgdG8gQVNULlxuICovXG5mdW5jdGlvbiBwYXJzZSAoXG4gIHRlbXBsYXRlLFxuICBvcHRpb25zXG4pIHtcbiAgd2FybiQyID0gb3B0aW9ucy53YXJuIHx8IGJhc2VXYXJuO1xuXG4gIHBsYXRmb3JtSXNQcmVUYWcgPSBvcHRpb25zLmlzUHJlVGFnIHx8IG5vO1xuICBwbGF0Zm9ybU11c3RVc2VQcm9wID0gb3B0aW9ucy5tdXN0VXNlUHJvcCB8fCBubztcbiAgcGxhdGZvcm1HZXRUYWdOYW1lc3BhY2UgPSBvcHRpb25zLmdldFRhZ05hbWVzcGFjZSB8fCBubztcbiAgdmFyIGlzUmVzZXJ2ZWRUYWcgPSBvcHRpb25zLmlzUmVzZXJ2ZWRUYWcgfHwgbm87XG4gIG1heWJlQ29tcG9uZW50ID0gZnVuY3Rpb24gKGVsKSB7IHJldHVybiAhIWVsLmNvbXBvbmVudCB8fCAhaXNSZXNlcnZlZFRhZyhlbC50YWcpOyB9O1xuXG4gIHRyYW5zZm9ybXMgPSBwbHVja01vZHVsZUZ1bmN0aW9uKG9wdGlvbnMubW9kdWxlcywgJ3RyYW5zZm9ybU5vZGUnKTtcbiAgcHJlVHJhbnNmb3JtcyA9IHBsdWNrTW9kdWxlRnVuY3Rpb24ob3B0aW9ucy5tb2R1bGVzLCAncHJlVHJhbnNmb3JtTm9kZScpO1xuICBwb3N0VHJhbnNmb3JtcyA9IHBsdWNrTW9kdWxlRnVuY3Rpb24ob3B0aW9ucy5tb2R1bGVzLCAncG9zdFRyYW5zZm9ybU5vZGUnKTtcblxuICBkZWxpbWl0ZXJzID0gb3B0aW9ucy5kZWxpbWl0ZXJzO1xuXG4gIHZhciBzdGFjayA9IFtdO1xuICB2YXIgcHJlc2VydmVXaGl0ZXNwYWNlID0gb3B0aW9ucy5wcmVzZXJ2ZVdoaXRlc3BhY2UgIT09IGZhbHNlO1xuICB2YXIgd2hpdGVzcGFjZU9wdGlvbiA9IG9wdGlvbnMud2hpdGVzcGFjZTtcbiAgdmFyIHJvb3Q7XG4gIHZhciBjdXJyZW50UGFyZW50O1xuICB2YXIgaW5WUHJlID0gZmFsc2U7XG4gIHZhciBpblByZSA9IGZhbHNlO1xuICB2YXIgd2FybmVkID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gd2Fybk9uY2UgKG1zZywgcmFuZ2UpIHtcbiAgICBpZiAoIXdhcm5lZCkge1xuICAgICAgd2FybmVkID0gdHJ1ZTtcbiAgICAgIHdhcm4kMihtc2csIHJhbmdlKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBjbG9zZUVsZW1lbnQgKGVsZW1lbnQpIHtcbiAgICB0cmltRW5kaW5nV2hpdGVzcGFjZShlbGVtZW50KTtcbiAgICBpZiAoIWluVlByZSAmJiAhZWxlbWVudC5wcm9jZXNzZWQpIHtcbiAgICAgIGVsZW1lbnQgPSBwcm9jZXNzRWxlbWVudChlbGVtZW50LCBvcHRpb25zKTtcbiAgICB9XG4gICAgLy8gdHJlZSBtYW5hZ2VtZW50XG4gICAgaWYgKCFzdGFjay5sZW5ndGggJiYgZWxlbWVudCAhPT0gcm9vdCkge1xuICAgICAgLy8gYWxsb3cgcm9vdCBlbGVtZW50cyB3aXRoIHYtaWYsIHYtZWxzZS1pZiBhbmQgdi1lbHNlXG4gICAgICBpZiAocm9vdC5pZiAmJiAoZWxlbWVudC5lbHNlaWYgfHwgZWxlbWVudC5lbHNlKSkge1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgIGNoZWNrUm9vdENvbnN0cmFpbnRzKGVsZW1lbnQpO1xuICAgICAgICB9XG4gICAgICAgIGFkZElmQ29uZGl0aW9uKHJvb3QsIHtcbiAgICAgICAgICBleHA6IGVsZW1lbnQuZWxzZWlmLFxuICAgICAgICAgIGJsb2NrOiBlbGVtZW50XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIHdhcm5PbmNlKFxuICAgICAgICAgIFwiQ29tcG9uZW50IHRlbXBsYXRlIHNob3VsZCBjb250YWluIGV4YWN0bHkgb25lIHJvb3QgZWxlbWVudC4gXCIgK1xuICAgICAgICAgIFwiSWYgeW91IGFyZSB1c2luZyB2LWlmIG9uIG11bHRpcGxlIGVsZW1lbnRzLCBcIiArXG4gICAgICAgICAgXCJ1c2Ugdi1lbHNlLWlmIHRvIGNoYWluIHRoZW0gaW5zdGVhZC5cIixcbiAgICAgICAgICB7IHN0YXJ0OiBlbGVtZW50LnN0YXJ0IH1cbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKGN1cnJlbnRQYXJlbnQgJiYgIWVsZW1lbnQuZm9yYmlkZGVuKSB7XG4gICAgICBpZiAoZWxlbWVudC5lbHNlaWYgfHwgZWxlbWVudC5lbHNlKSB7XG4gICAgICAgIHByb2Nlc3NJZkNvbmRpdGlvbnMoZWxlbWVudCwgY3VycmVudFBhcmVudCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoZWxlbWVudC5zbG90U2NvcGUpIHtcbiAgICAgICAgICAvLyBzY29wZWQgc2xvdFxuICAgICAgICAgIC8vIGtlZXAgaXQgaW4gdGhlIGNoaWxkcmVuIGxpc3Qgc28gdGhhdCB2LWVsc2UoLWlmKSBjb25kaXRpb25zIGNhblxuICAgICAgICAgIC8vIGZpbmQgaXQgYXMgdGhlIHByZXYgbm9kZS5cbiAgICAgICAgICB2YXIgbmFtZSA9IGVsZW1lbnQuc2xvdFRhcmdldCB8fCAnXCJkZWZhdWx0XCInXG4gICAgICAgICAgOyhjdXJyZW50UGFyZW50LnNjb3BlZFNsb3RzIHx8IChjdXJyZW50UGFyZW50LnNjb3BlZFNsb3RzID0ge30pKVtuYW1lXSA9IGVsZW1lbnQ7XG4gICAgICAgIH1cbiAgICAgICAgY3VycmVudFBhcmVudC5jaGlsZHJlbi5wdXNoKGVsZW1lbnQpO1xuICAgICAgICBlbGVtZW50LnBhcmVudCA9IGN1cnJlbnRQYXJlbnQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gZmluYWwgY2hpbGRyZW4gY2xlYW51cFxuICAgIC8vIGZpbHRlciBvdXQgc2NvcGVkIHNsb3RzXG4gICAgZWxlbWVudC5jaGlsZHJlbiA9IGVsZW1lbnQuY2hpbGRyZW4uZmlsdGVyKGZ1bmN0aW9uIChjKSB7IHJldHVybiAhKGMpLnNsb3RTY29wZTsgfSk7XG4gICAgLy8gcmVtb3ZlIHRyYWlsaW5nIHdoaXRlc3BhY2Ugbm9kZSBhZ2FpblxuICAgIHRyaW1FbmRpbmdXaGl0ZXNwYWNlKGVsZW1lbnQpO1xuXG4gICAgLy8gY2hlY2sgcHJlIHN0YXRlXG4gICAgaWYgKGVsZW1lbnQucHJlKSB7XG4gICAgICBpblZQcmUgPSBmYWxzZTtcbiAgICB9XG4gICAgaWYgKHBsYXRmb3JtSXNQcmVUYWcoZWxlbWVudC50YWcpKSB7XG4gICAgICBpblByZSA9IGZhbHNlO1xuICAgIH1cbiAgICAvLyBhcHBseSBwb3N0LXRyYW5zZm9ybXNcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBvc3RUcmFuc2Zvcm1zLmxlbmd0aDsgaSsrKSB7XG4gICAgICBwb3N0VHJhbnNmb3Jtc1tpXShlbGVtZW50LCBvcHRpb25zKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiB0cmltRW5kaW5nV2hpdGVzcGFjZSAoZWwpIHtcbiAgICAvLyByZW1vdmUgdHJhaWxpbmcgd2hpdGVzcGFjZSBub2RlXG4gICAgaWYgKCFpblByZSkge1xuICAgICAgdmFyIGxhc3ROb2RlO1xuICAgICAgd2hpbGUgKFxuICAgICAgICAobGFzdE5vZGUgPSBlbC5jaGlsZHJlbltlbC5jaGlsZHJlbi5sZW5ndGggLSAxXSkgJiZcbiAgICAgICAgbGFzdE5vZGUudHlwZSA9PT0gMyAmJlxuICAgICAgICBsYXN0Tm9kZS50ZXh0ID09PSAnICdcbiAgICAgICkge1xuICAgICAgICBlbC5jaGlsZHJlbi5wb3AoKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBjaGVja1Jvb3RDb25zdHJhaW50cyAoZWwpIHtcbiAgICBpZiAoZWwudGFnID09PSAnc2xvdCcgfHwgZWwudGFnID09PSAndGVtcGxhdGUnKSB7XG4gICAgICB3YXJuT25jZShcbiAgICAgICAgXCJDYW5ub3QgdXNlIDxcIiArIChlbC50YWcpICsgXCI+IGFzIGNvbXBvbmVudCByb290IGVsZW1lbnQgYmVjYXVzZSBpdCBtYXkgXCIgK1xuICAgICAgICAnY29udGFpbiBtdWx0aXBsZSBub2Rlcy4nLFxuICAgICAgICB7IHN0YXJ0OiBlbC5zdGFydCB9XG4gICAgICApO1xuICAgIH1cbiAgICBpZiAoZWwuYXR0cnNNYXAuaGFzT3duUHJvcGVydHkoJ3YtZm9yJykpIHtcbiAgICAgIHdhcm5PbmNlKFxuICAgICAgICAnQ2Fubm90IHVzZSB2LWZvciBvbiBzdGF0ZWZ1bCBjb21wb25lbnQgcm9vdCBlbGVtZW50IGJlY2F1c2UgJyArXG4gICAgICAgICdpdCByZW5kZXJzIG11bHRpcGxlIGVsZW1lbnRzLicsXG4gICAgICAgIGVsLnJhd0F0dHJzTWFwWyd2LWZvciddXG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIHBhcnNlSFRNTCh0ZW1wbGF0ZSwge1xuICAgIHdhcm46IHdhcm4kMixcbiAgICBleHBlY3RIVE1MOiBvcHRpb25zLmV4cGVjdEhUTUwsXG4gICAgaXNVbmFyeVRhZzogb3B0aW9ucy5pc1VuYXJ5VGFnLFxuICAgIGNhbkJlTGVmdE9wZW5UYWc6IG9wdGlvbnMuY2FuQmVMZWZ0T3BlblRhZyxcbiAgICBzaG91bGREZWNvZGVOZXdsaW5lczogb3B0aW9ucy5zaG91bGREZWNvZGVOZXdsaW5lcyxcbiAgICBzaG91bGREZWNvZGVOZXdsaW5lc0ZvckhyZWY6IG9wdGlvbnMuc2hvdWxkRGVjb2RlTmV3bGluZXNGb3JIcmVmLFxuICAgIHNob3VsZEtlZXBDb21tZW50OiBvcHRpb25zLmNvbW1lbnRzLFxuICAgIG91dHB1dFNvdXJjZVJhbmdlOiBvcHRpb25zLm91dHB1dFNvdXJjZVJhbmdlLFxuICAgIHN0YXJ0OiBmdW5jdGlvbiBzdGFydCAodGFnLCBhdHRycywgdW5hcnksIHN0YXJ0JDEsIGVuZCkge1xuICAgICAgLy8gY2hlY2sgbmFtZXNwYWNlLlxuICAgICAgLy8gaW5oZXJpdCBwYXJlbnQgbnMgaWYgdGhlcmUgaXMgb25lXG4gICAgICB2YXIgbnMgPSAoY3VycmVudFBhcmVudCAmJiBjdXJyZW50UGFyZW50Lm5zKSB8fCBwbGF0Zm9ybUdldFRhZ05hbWVzcGFjZSh0YWcpO1xuXG4gICAgICAvLyBoYW5kbGUgSUUgc3ZnIGJ1Z1xuICAgICAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgICBpZiAoaXNJRSAmJiBucyA9PT0gJ3N2ZycpIHtcbiAgICAgICAgYXR0cnMgPSBndWFyZElFU1ZHQnVnKGF0dHJzKTtcbiAgICAgIH1cblxuICAgICAgdmFyIGVsZW1lbnQgPSBjcmVhdGVBU1RFbGVtZW50KHRhZywgYXR0cnMsIGN1cnJlbnRQYXJlbnQpO1xuICAgICAgaWYgKG5zKSB7XG4gICAgICAgIGVsZW1lbnQubnMgPSBucztcbiAgICAgIH1cblxuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgaWYgKG9wdGlvbnMub3V0cHV0U291cmNlUmFuZ2UpIHtcbiAgICAgICAgICBlbGVtZW50LnN0YXJ0ID0gc3RhcnQkMTtcbiAgICAgICAgICBlbGVtZW50LmVuZCA9IGVuZDtcbiAgICAgICAgICBlbGVtZW50LnJhd0F0dHJzTWFwID0gZWxlbWVudC5hdHRyc0xpc3QucmVkdWNlKGZ1bmN0aW9uIChjdW11bGF0ZWQsIGF0dHIpIHtcbiAgICAgICAgICAgIGN1bXVsYXRlZFthdHRyLm5hbWVdID0gYXR0cjtcbiAgICAgICAgICAgIHJldHVybiBjdW11bGF0ZWRcbiAgICAgICAgICB9LCB7fSk7XG4gICAgICAgIH1cbiAgICAgICAgYXR0cnMuZm9yRWFjaChmdW5jdGlvbiAoYXR0cikge1xuICAgICAgICAgIGlmIChpbnZhbGlkQXR0cmlidXRlUkUudGVzdChhdHRyLm5hbWUpKSB7XG4gICAgICAgICAgICB3YXJuJDIoXG4gICAgICAgICAgICAgIFwiSW52YWxpZCBkeW5hbWljIGFyZ3VtZW50IGV4cHJlc3Npb246IGF0dHJpYnV0ZSBuYW1lcyBjYW5ub3QgY29udGFpbiBcIiArXG4gICAgICAgICAgICAgIFwic3BhY2VzLCBxdW90ZXMsIDwsID4sIC8gb3IgPS5cIixcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHN0YXJ0OiBhdHRyLnN0YXJ0ICsgYXR0ci5uYW1lLmluZGV4T2YoXCJbXCIpLFxuICAgICAgICAgICAgICAgIGVuZDogYXR0ci5zdGFydCArIGF0dHIubmFtZS5sZW5ndGhcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXNGb3JiaWRkZW5UYWcoZWxlbWVudCkgJiYgIWlzU2VydmVyUmVuZGVyaW5nKCkpIHtcbiAgICAgICAgZWxlbWVudC5mb3JiaWRkZW4gPSB0cnVlO1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHdhcm4kMihcbiAgICAgICAgICAnVGVtcGxhdGVzIHNob3VsZCBvbmx5IGJlIHJlc3BvbnNpYmxlIGZvciBtYXBwaW5nIHRoZSBzdGF0ZSB0byB0aGUgJyArXG4gICAgICAgICAgJ1VJLiBBdm9pZCBwbGFjaW5nIHRhZ3Mgd2l0aCBzaWRlLWVmZmVjdHMgaW4geW91ciB0ZW1wbGF0ZXMsIHN1Y2ggYXMgJyArXG4gICAgICAgICAgXCI8XCIgKyB0YWcgKyBcIj5cIiArICcsIGFzIHRoZXkgd2lsbCBub3QgYmUgcGFyc2VkLicsXG4gICAgICAgICAgeyBzdGFydDogZWxlbWVudC5zdGFydCB9XG4gICAgICAgICk7XG4gICAgICB9XG5cbiAgICAgIC8vIGFwcGx5IHByZS10cmFuc2Zvcm1zXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHByZVRyYW5zZm9ybXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgZWxlbWVudCA9IHByZVRyYW5zZm9ybXNbaV0oZWxlbWVudCwgb3B0aW9ucykgfHwgZWxlbWVudDtcbiAgICAgIH1cblxuICAgICAgaWYgKCFpblZQcmUpIHtcbiAgICAgICAgcHJvY2Vzc1ByZShlbGVtZW50KTtcbiAgICAgICAgaWYgKGVsZW1lbnQucHJlKSB7XG4gICAgICAgICAgaW5WUHJlID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHBsYXRmb3JtSXNQcmVUYWcoZWxlbWVudC50YWcpKSB7XG4gICAgICAgIGluUHJlID0gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIGlmIChpblZQcmUpIHtcbiAgICAgICAgcHJvY2Vzc1Jhd0F0dHJzKGVsZW1lbnQpO1xuICAgICAgfSBlbHNlIGlmICghZWxlbWVudC5wcm9jZXNzZWQpIHtcbiAgICAgICAgLy8gc3RydWN0dXJhbCBkaXJlY3RpdmVzXG4gICAgICAgIHByb2Nlc3NGb3IoZWxlbWVudCk7XG4gICAgICAgIHByb2Nlc3NJZihlbGVtZW50KTtcbiAgICAgICAgcHJvY2Vzc09uY2UoZWxlbWVudCk7XG4gICAgICB9XG5cbiAgICAgIGlmICghcm9vdCkge1xuICAgICAgICByb290ID0gZWxlbWVudDtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICBjaGVja1Jvb3RDb25zdHJhaW50cyhyb290KTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoIXVuYXJ5KSB7XG4gICAgICAgIGN1cnJlbnRQYXJlbnQgPSBlbGVtZW50O1xuICAgICAgICBzdGFjay5wdXNoKGVsZW1lbnQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2xvc2VFbGVtZW50KGVsZW1lbnQpO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBlbmQ6IGZ1bmN0aW9uIGVuZCAodGFnLCBzdGFydCwgZW5kJDEpIHtcbiAgICAgIHZhciBlbGVtZW50ID0gc3RhY2tbc3RhY2subGVuZ3RoIC0gMV07XG4gICAgICAvLyBwb3Agc3RhY2tcbiAgICAgIHN0YWNrLmxlbmd0aCAtPSAxO1xuICAgICAgY3VycmVudFBhcmVudCA9IHN0YWNrW3N0YWNrLmxlbmd0aCAtIDFdO1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgb3B0aW9ucy5vdXRwdXRTb3VyY2VSYW5nZSkge1xuICAgICAgICBlbGVtZW50LmVuZCA9IGVuZCQxO1xuICAgICAgfVxuICAgICAgY2xvc2VFbGVtZW50KGVsZW1lbnQpO1xuICAgIH0sXG5cbiAgICBjaGFyczogZnVuY3Rpb24gY2hhcnMgKHRleHQsIHN0YXJ0LCBlbmQpIHtcbiAgICAgIGlmICghY3VycmVudFBhcmVudCkge1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgIGlmICh0ZXh0ID09PSB0ZW1wbGF0ZSkge1xuICAgICAgICAgICAgd2Fybk9uY2UoXG4gICAgICAgICAgICAgICdDb21wb25lbnQgdGVtcGxhdGUgcmVxdWlyZXMgYSByb290IGVsZW1lbnQsIHJhdGhlciB0aGFuIGp1c3QgdGV4dC4nLFxuICAgICAgICAgICAgICB7IHN0YXJ0OiBzdGFydCB9XG4gICAgICAgICAgICApO1xuICAgICAgICAgIH0gZWxzZSBpZiAoKHRleHQgPSB0ZXh0LnRyaW0oKSkpIHtcbiAgICAgICAgICAgIHdhcm5PbmNlKFxuICAgICAgICAgICAgICAoXCJ0ZXh0IFxcXCJcIiArIHRleHQgKyBcIlxcXCIgb3V0c2lkZSByb290IGVsZW1lbnQgd2lsbCBiZSBpZ25vcmVkLlwiKSxcbiAgICAgICAgICAgICAgeyBzdGFydDogc3RhcnQgfVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICAvLyBJRSB0ZXh0YXJlYSBwbGFjZWhvbGRlciBidWdcbiAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgICAgaWYgKGlzSUUgJiZcbiAgICAgICAgY3VycmVudFBhcmVudC50YWcgPT09ICd0ZXh0YXJlYScgJiZcbiAgICAgICAgY3VycmVudFBhcmVudC5hdHRyc01hcC5wbGFjZWhvbGRlciA9PT0gdGV4dFxuICAgICAgKSB7XG4gICAgICAgIHJldHVyblxuICAgICAgfVxuICAgICAgdmFyIGNoaWxkcmVuID0gY3VycmVudFBhcmVudC5jaGlsZHJlbjtcbiAgICAgIGlmIChpblByZSB8fCB0ZXh0LnRyaW0oKSkge1xuICAgICAgICB0ZXh0ID0gaXNUZXh0VGFnKGN1cnJlbnRQYXJlbnQpID8gdGV4dCA6IGRlY29kZUhUTUxDYWNoZWQodGV4dCk7XG4gICAgICB9IGVsc2UgaWYgKCFjaGlsZHJlbi5sZW5ndGgpIHtcbiAgICAgICAgLy8gcmVtb3ZlIHRoZSB3aGl0ZXNwYWNlLW9ubHkgbm9kZSByaWdodCBhZnRlciBhbiBvcGVuaW5nIHRhZ1xuICAgICAgICB0ZXh0ID0gJyc7XG4gICAgICB9IGVsc2UgaWYgKHdoaXRlc3BhY2VPcHRpb24pIHtcbiAgICAgICAgaWYgKHdoaXRlc3BhY2VPcHRpb24gPT09ICdjb25kZW5zZScpIHtcbiAgICAgICAgICAvLyBpbiBjb25kZW5zZSBtb2RlLCByZW1vdmUgdGhlIHdoaXRlc3BhY2Ugbm9kZSBpZiBpdCBjb250YWluc1xuICAgICAgICAgIC8vIGxpbmUgYnJlYWssIG90aGVyd2lzZSBjb25kZW5zZSB0byBhIHNpbmdsZSBzcGFjZVxuICAgICAgICAgIHRleHQgPSBsaW5lQnJlYWtSRS50ZXN0KHRleHQpID8gJycgOiAnICc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGV4dCA9ICcgJztcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGV4dCA9IHByZXNlcnZlV2hpdGVzcGFjZSA/ICcgJyA6ICcnO1xuICAgICAgfVxuICAgICAgaWYgKHRleHQpIHtcbiAgICAgICAgaWYgKCFpblByZSAmJiB3aGl0ZXNwYWNlT3B0aW9uID09PSAnY29uZGVuc2UnKSB7XG4gICAgICAgICAgLy8gY29uZGVuc2UgY29uc2VjdXRpdmUgd2hpdGVzcGFjZXMgaW50byBzaW5nbGUgc3BhY2VcbiAgICAgICAgICB0ZXh0ID0gdGV4dC5yZXBsYWNlKHdoaXRlc3BhY2VSRSQxLCAnICcpO1xuICAgICAgICB9XG4gICAgICAgIHZhciByZXM7XG4gICAgICAgIHZhciBjaGlsZDtcbiAgICAgICAgaWYgKCFpblZQcmUgJiYgdGV4dCAhPT0gJyAnICYmIChyZXMgPSBwYXJzZVRleHQodGV4dCwgZGVsaW1pdGVycykpKSB7XG4gICAgICAgICAgY2hpbGQgPSB7XG4gICAgICAgICAgICB0eXBlOiAyLFxuICAgICAgICAgICAgZXhwcmVzc2lvbjogcmVzLmV4cHJlc3Npb24sXG4gICAgICAgICAgICB0b2tlbnM6IHJlcy50b2tlbnMsXG4gICAgICAgICAgICB0ZXh0OiB0ZXh0XG4gICAgICAgICAgfTtcbiAgICAgICAgfSBlbHNlIGlmICh0ZXh0ICE9PSAnICcgfHwgIWNoaWxkcmVuLmxlbmd0aCB8fCBjaGlsZHJlbltjaGlsZHJlbi5sZW5ndGggLSAxXS50ZXh0ICE9PSAnICcpIHtcbiAgICAgICAgICBjaGlsZCA9IHtcbiAgICAgICAgICAgIHR5cGU6IDMsXG4gICAgICAgICAgICB0ZXh0OiB0ZXh0XG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY2hpbGQpIHtcbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBvcHRpb25zLm91dHB1dFNvdXJjZVJhbmdlKSB7XG4gICAgICAgICAgICBjaGlsZC5zdGFydCA9IHN0YXJ0O1xuICAgICAgICAgICAgY2hpbGQuZW5kID0gZW5kO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjaGlsZHJlbi5wdXNoKGNoaWxkKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgY29tbWVudDogZnVuY3Rpb24gY29tbWVudCAodGV4dCwgc3RhcnQsIGVuZCkge1xuICAgICAgLy8gYWRkaW5nIGFueXRpbmcgYXMgYSBzaWJsaW5nIHRvIHRoZSByb290IG5vZGUgaXMgZm9yYmlkZGVuXG4gICAgICAvLyBjb21tZW50cyBzaG91bGQgc3RpbGwgYmUgYWxsb3dlZCwgYnV0IGlnbm9yZWRcbiAgICAgIGlmIChjdXJyZW50UGFyZW50KSB7XG4gICAgICAgIHZhciBjaGlsZCA9IHtcbiAgICAgICAgICB0eXBlOiAzLFxuICAgICAgICAgIHRleHQ6IHRleHQsXG4gICAgICAgICAgaXNDb21tZW50OiB0cnVlXG4gICAgICAgIH07XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIG9wdGlvbnMub3V0cHV0U291cmNlUmFuZ2UpIHtcbiAgICAgICAgICBjaGlsZC5zdGFydCA9IHN0YXJ0O1xuICAgICAgICAgIGNoaWxkLmVuZCA9IGVuZDtcbiAgICAgICAgfVxuICAgICAgICBjdXJyZW50UGFyZW50LmNoaWxkcmVuLnB1c2goY2hpbGQpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG4gIHJldHVybiByb290XG59XG5cbmZ1bmN0aW9uIHByb2Nlc3NQcmUgKGVsKSB7XG4gIGlmIChnZXRBbmRSZW1vdmVBdHRyKGVsLCAndi1wcmUnKSAhPSBudWxsKSB7XG4gICAgZWwucHJlID0gdHJ1ZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBwcm9jZXNzUmF3QXR0cnMgKGVsKSB7XG4gIHZhciBsaXN0ID0gZWwuYXR0cnNMaXN0O1xuICB2YXIgbGVuID0gbGlzdC5sZW5ndGg7XG4gIGlmIChsZW4pIHtcbiAgICB2YXIgYXR0cnMgPSBlbC5hdHRycyA9IG5ldyBBcnJheShsZW4pO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgIGF0dHJzW2ldID0ge1xuICAgICAgICBuYW1lOiBsaXN0W2ldLm5hbWUsXG4gICAgICAgIHZhbHVlOiBKU09OLnN0cmluZ2lmeShsaXN0W2ldLnZhbHVlKVxuICAgICAgfTtcbiAgICAgIGlmIChsaXN0W2ldLnN0YXJ0ICE9IG51bGwpIHtcbiAgICAgICAgYXR0cnNbaV0uc3RhcnQgPSBsaXN0W2ldLnN0YXJ0O1xuICAgICAgICBhdHRyc1tpXS5lbmQgPSBsaXN0W2ldLmVuZDtcbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSBpZiAoIWVsLnByZSkge1xuICAgIC8vIG5vbiByb290IG5vZGUgaW4gcHJlIGJsb2NrcyB3aXRoIG5vIGF0dHJpYnV0ZXNcbiAgICBlbC5wbGFpbiA9IHRydWU7XG4gIH1cbn1cblxuZnVuY3Rpb24gcHJvY2Vzc0VsZW1lbnQgKFxuICBlbGVtZW50LFxuICBvcHRpb25zXG4pIHtcbiAgcHJvY2Vzc0tleShlbGVtZW50KTtcblxuICAvLyBkZXRlcm1pbmUgd2hldGhlciB0aGlzIGlzIGEgcGxhaW4gZWxlbWVudCBhZnRlclxuICAvLyByZW1vdmluZyBzdHJ1Y3R1cmFsIGF0dHJpYnV0ZXNcbiAgZWxlbWVudC5wbGFpbiA9IChcbiAgICAhZWxlbWVudC5rZXkgJiZcbiAgICAhZWxlbWVudC5zY29wZWRTbG90cyAmJlxuICAgICFlbGVtZW50LmF0dHJzTGlzdC5sZW5ndGhcbiAgKTtcblxuICBwcm9jZXNzUmVmKGVsZW1lbnQpO1xuICBwcm9jZXNzU2xvdENvbnRlbnQoZWxlbWVudCk7XG4gIHByb2Nlc3NTbG90T3V0bGV0KGVsZW1lbnQpO1xuICBwcm9jZXNzQ29tcG9uZW50KGVsZW1lbnQpO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHRyYW5zZm9ybXMubGVuZ3RoOyBpKyspIHtcbiAgICBlbGVtZW50ID0gdHJhbnNmb3Jtc1tpXShlbGVtZW50LCBvcHRpb25zKSB8fCBlbGVtZW50O1xuICB9XG4gIHByb2Nlc3NBdHRycyhlbGVtZW50KTtcbiAgcmV0dXJuIGVsZW1lbnRcbn1cblxuZnVuY3Rpb24gcHJvY2Vzc0tleSAoZWwpIHtcbiAgdmFyIGV4cCA9IGdldEJpbmRpbmdBdHRyKGVsLCAna2V5Jyk7XG4gIGlmIChleHApIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaWYgKGVsLnRhZyA9PT0gJ3RlbXBsYXRlJykge1xuICAgICAgICB3YXJuJDIoXG4gICAgICAgICAgXCI8dGVtcGxhdGU+IGNhbm5vdCBiZSBrZXllZC4gUGxhY2UgdGhlIGtleSBvbiByZWFsIGVsZW1lbnRzIGluc3RlYWQuXCIsXG4gICAgICAgICAgZ2V0UmF3QmluZGluZ0F0dHIoZWwsICdrZXknKVxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgaWYgKGVsLmZvcikge1xuICAgICAgICB2YXIgaXRlcmF0b3IgPSBlbC5pdGVyYXRvcjIgfHwgZWwuaXRlcmF0b3IxO1xuICAgICAgICB2YXIgcGFyZW50ID0gZWwucGFyZW50O1xuICAgICAgICBpZiAoaXRlcmF0b3IgJiYgaXRlcmF0b3IgPT09IGV4cCAmJiBwYXJlbnQgJiYgcGFyZW50LnRhZyA9PT0gJ3RyYW5zaXRpb24tZ3JvdXAnKSB7XG4gICAgICAgICAgd2FybiQyKFxuICAgICAgICAgICAgXCJEbyBub3QgdXNlIHYtZm9yIGluZGV4IGFzIGtleSBvbiA8dHJhbnNpdGlvbi1ncm91cD4gY2hpbGRyZW4sIFwiICtcbiAgICAgICAgICAgIFwidGhpcyBpcyB0aGUgc2FtZSBhcyBub3QgdXNpbmcga2V5cy5cIixcbiAgICAgICAgICAgIGdldFJhd0JpbmRpbmdBdHRyKGVsLCAna2V5JyksXG4gICAgICAgICAgICB0cnVlIC8qIHRpcCAqL1xuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZWwua2V5ID0gZXhwO1xuICB9XG59XG5cbmZ1bmN0aW9uIHByb2Nlc3NSZWYgKGVsKSB7XG4gIHZhciByZWYgPSBnZXRCaW5kaW5nQXR0cihlbCwgJ3JlZicpO1xuICBpZiAocmVmKSB7XG4gICAgZWwucmVmID0gcmVmO1xuICAgIGVsLnJlZkluRm9yID0gY2hlY2tJbkZvcihlbCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gcHJvY2Vzc0ZvciAoZWwpIHtcbiAgdmFyIGV4cDtcbiAgaWYgKChleHAgPSBnZXRBbmRSZW1vdmVBdHRyKGVsLCAndi1mb3InKSkpIHtcbiAgICB2YXIgcmVzID0gcGFyc2VGb3IoZXhwKTtcbiAgICBpZiAocmVzKSB7XG4gICAgICBleHRlbmQoZWwsIHJlcyk7XG4gICAgfSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICB3YXJuJDIoXG4gICAgICAgIChcIkludmFsaWQgdi1mb3IgZXhwcmVzc2lvbjogXCIgKyBleHApLFxuICAgICAgICBlbC5yYXdBdHRyc01hcFsndi1mb3InXVxuICAgICAgKTtcbiAgICB9XG4gIH1cbn1cblxuXG5cbmZ1bmN0aW9uIHBhcnNlRm9yIChleHApIHtcbiAgdmFyIGluTWF0Y2ggPSBleHAubWF0Y2goZm9yQWxpYXNSRSk7XG4gIGlmICghaW5NYXRjaCkgeyByZXR1cm4gfVxuICB2YXIgcmVzID0ge307XG4gIHJlcy5mb3IgPSBpbk1hdGNoWzJdLnRyaW0oKTtcbiAgdmFyIGFsaWFzID0gaW5NYXRjaFsxXS50cmltKCkucmVwbGFjZShzdHJpcFBhcmVuc1JFLCAnJyk7XG4gIHZhciBpdGVyYXRvck1hdGNoID0gYWxpYXMubWF0Y2goZm9ySXRlcmF0b3JSRSk7XG4gIGlmIChpdGVyYXRvck1hdGNoKSB7XG4gICAgcmVzLmFsaWFzID0gYWxpYXMucmVwbGFjZShmb3JJdGVyYXRvclJFLCAnJykudHJpbSgpO1xuICAgIHJlcy5pdGVyYXRvcjEgPSBpdGVyYXRvck1hdGNoWzFdLnRyaW0oKTtcbiAgICBpZiAoaXRlcmF0b3JNYXRjaFsyXSkge1xuICAgICAgcmVzLml0ZXJhdG9yMiA9IGl0ZXJhdG9yTWF0Y2hbMl0udHJpbSgpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZXMuYWxpYXMgPSBhbGlhcztcbiAgfVxuICByZXR1cm4gcmVzXG59XG5cbmZ1bmN0aW9uIHByb2Nlc3NJZiAoZWwpIHtcbiAgdmFyIGV4cCA9IGdldEFuZFJlbW92ZUF0dHIoZWwsICd2LWlmJyk7XG4gIGlmIChleHApIHtcbiAgICBlbC5pZiA9IGV4cDtcbiAgICBhZGRJZkNvbmRpdGlvbihlbCwge1xuICAgICAgZXhwOiBleHAsXG4gICAgICBibG9jazogZWxcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBpZiAoZ2V0QW5kUmVtb3ZlQXR0cihlbCwgJ3YtZWxzZScpICE9IG51bGwpIHtcbiAgICAgIGVsLmVsc2UgPSB0cnVlO1xuICAgIH1cbiAgICB2YXIgZWxzZWlmID0gZ2V0QW5kUmVtb3ZlQXR0cihlbCwgJ3YtZWxzZS1pZicpO1xuICAgIGlmIChlbHNlaWYpIHtcbiAgICAgIGVsLmVsc2VpZiA9IGVsc2VpZjtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gcHJvY2Vzc0lmQ29uZGl0aW9ucyAoZWwsIHBhcmVudCkge1xuICB2YXIgcHJldiA9IGZpbmRQcmV2RWxlbWVudChwYXJlbnQuY2hpbGRyZW4pO1xuICBpZiAocHJldiAmJiBwcmV2LmlmKSB7XG4gICAgYWRkSWZDb25kaXRpb24ocHJldiwge1xuICAgICAgZXhwOiBlbC5lbHNlaWYsXG4gICAgICBibG9jazogZWxcbiAgICB9KTtcbiAgfSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgd2FybiQyKFxuICAgICAgXCJ2LVwiICsgKGVsLmVsc2VpZiA/ICgnZWxzZS1pZj1cIicgKyBlbC5lbHNlaWYgKyAnXCInKSA6ICdlbHNlJykgKyBcIiBcIiArXG4gICAgICBcInVzZWQgb24gZWxlbWVudCA8XCIgKyAoZWwudGFnKSArIFwiPiB3aXRob3V0IGNvcnJlc3BvbmRpbmcgdi1pZi5cIixcbiAgICAgIGVsLnJhd0F0dHJzTWFwW2VsLmVsc2VpZiA/ICd2LWVsc2UtaWYnIDogJ3YtZWxzZSddXG4gICAgKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBmaW5kUHJldkVsZW1lbnQgKGNoaWxkcmVuKSB7XG4gIHZhciBpID0gY2hpbGRyZW4ubGVuZ3RoO1xuICB3aGlsZSAoaS0tKSB7XG4gICAgaWYgKGNoaWxkcmVuW2ldLnR5cGUgPT09IDEpIHtcbiAgICAgIHJldHVybiBjaGlsZHJlbltpXVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBjaGlsZHJlbltpXS50ZXh0ICE9PSAnICcpIHtcbiAgICAgICAgd2FybiQyKFxuICAgICAgICAgIFwidGV4dCBcXFwiXCIgKyAoY2hpbGRyZW5baV0udGV4dC50cmltKCkpICsgXCJcXFwiIGJldHdlZW4gdi1pZiBhbmQgdi1lbHNlKC1pZikgXCIgK1xuICAgICAgICAgIFwid2lsbCBiZSBpZ25vcmVkLlwiLFxuICAgICAgICAgIGNoaWxkcmVuW2ldXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICBjaGlsZHJlbi5wb3AoKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gYWRkSWZDb25kaXRpb24gKGVsLCBjb25kaXRpb24pIHtcbiAgaWYgKCFlbC5pZkNvbmRpdGlvbnMpIHtcbiAgICBlbC5pZkNvbmRpdGlvbnMgPSBbXTtcbiAgfVxuICBlbC5pZkNvbmRpdGlvbnMucHVzaChjb25kaXRpb24pO1xufVxuXG5mdW5jdGlvbiBwcm9jZXNzT25jZSAoZWwpIHtcbiAgdmFyIG9uY2UkJDEgPSBnZXRBbmRSZW1vdmVBdHRyKGVsLCAndi1vbmNlJyk7XG4gIGlmIChvbmNlJCQxICE9IG51bGwpIHtcbiAgICBlbC5vbmNlID0gdHJ1ZTtcbiAgfVxufVxuXG4vLyBoYW5kbGUgY29udGVudCBiZWluZyBwYXNzZWQgdG8gYSBjb21wb25lbnQgYXMgc2xvdCxcbi8vIGUuZy4gPHRlbXBsYXRlIHNsb3Q9XCJ4eHhcIj4sIDxkaXYgc2xvdC1zY29wZT1cInh4eFwiPlxuZnVuY3Rpb24gcHJvY2Vzc1Nsb3RDb250ZW50IChlbCkge1xuICB2YXIgc2xvdFNjb3BlO1xuICBpZiAoZWwudGFnID09PSAndGVtcGxhdGUnKSB7XG4gICAgc2xvdFNjb3BlID0gZ2V0QW5kUmVtb3ZlQXR0cihlbCwgJ3Njb3BlJyk7XG4gICAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgc2xvdFNjb3BlKSB7XG4gICAgICB3YXJuJDIoXG4gICAgICAgIFwidGhlIFxcXCJzY29wZVxcXCIgYXR0cmlidXRlIGZvciBzY29wZWQgc2xvdHMgaGF2ZSBiZWVuIGRlcHJlY2F0ZWQgYW5kIFwiICtcbiAgICAgICAgXCJyZXBsYWNlZCBieSBcXFwic2xvdC1zY29wZVxcXCIgc2luY2UgMi41LiBUaGUgbmV3IFxcXCJzbG90LXNjb3BlXFxcIiBhdHRyaWJ1dGUgXCIgK1xuICAgICAgICBcImNhbiBhbHNvIGJlIHVzZWQgb24gcGxhaW4gZWxlbWVudHMgaW4gYWRkaXRpb24gdG8gPHRlbXBsYXRlPiB0byBcIiArXG4gICAgICAgIFwiZGVub3RlIHNjb3BlZCBzbG90cy5cIixcbiAgICAgICAgZWwucmF3QXR0cnNNYXBbJ3Njb3BlJ10sXG4gICAgICAgIHRydWVcbiAgICAgICk7XG4gICAgfVxuICAgIGVsLnNsb3RTY29wZSA9IHNsb3RTY29wZSB8fCBnZXRBbmRSZW1vdmVBdHRyKGVsLCAnc2xvdC1zY29wZScpO1xuICB9IGVsc2UgaWYgKChzbG90U2NvcGUgPSBnZXRBbmRSZW1vdmVBdHRyKGVsLCAnc2xvdC1zY29wZScpKSkge1xuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGVsLmF0dHJzTWFwWyd2LWZvciddKSB7XG4gICAgICB3YXJuJDIoXG4gICAgICAgIFwiQW1iaWd1b3VzIGNvbWJpbmVkIHVzYWdlIG9mIHNsb3Qtc2NvcGUgYW5kIHYtZm9yIG9uIDxcIiArIChlbC50YWcpICsgXCI+IFwiICtcbiAgICAgICAgXCIodi1mb3IgdGFrZXMgaGlnaGVyIHByaW9yaXR5KS4gVXNlIGEgd3JhcHBlciA8dGVtcGxhdGU+IGZvciB0aGUgXCIgK1xuICAgICAgICBcInNjb3BlZCBzbG90IHRvIG1ha2UgaXQgY2xlYXJlci5cIixcbiAgICAgICAgZWwucmF3QXR0cnNNYXBbJ3Nsb3Qtc2NvcGUnXSxcbiAgICAgICAgdHJ1ZVxuICAgICAgKTtcbiAgICB9XG4gICAgZWwuc2xvdFNjb3BlID0gc2xvdFNjb3BlO1xuICB9XG5cbiAgLy8gc2xvdD1cInh4eFwiXG4gIHZhciBzbG90VGFyZ2V0ID0gZ2V0QmluZGluZ0F0dHIoZWwsICdzbG90Jyk7XG4gIGlmIChzbG90VGFyZ2V0KSB7XG4gICAgZWwuc2xvdFRhcmdldCA9IHNsb3RUYXJnZXQgPT09ICdcIlwiJyA/ICdcImRlZmF1bHRcIicgOiBzbG90VGFyZ2V0O1xuICAgIGVsLnNsb3RUYXJnZXREeW5hbWljID0gISEoZWwuYXR0cnNNYXBbJzpzbG90J10gfHwgZWwuYXR0cnNNYXBbJ3YtYmluZDpzbG90J10pO1xuICAgIC8vIHByZXNlcnZlIHNsb3QgYXMgYW4gYXR0cmlidXRlIGZvciBuYXRpdmUgc2hhZG93IERPTSBjb21wYXRcbiAgICAvLyBvbmx5IGZvciBub24tc2NvcGVkIHNsb3RzLlxuICAgIGlmIChlbC50YWcgIT09ICd0ZW1wbGF0ZScgJiYgIWVsLnNsb3RTY29wZSkge1xuICAgICAgYWRkQXR0cihlbCwgJ3Nsb3QnLCBzbG90VGFyZ2V0LCBnZXRSYXdCaW5kaW5nQXR0cihlbCwgJ3Nsb3QnKSk7XG4gICAgfVxuICB9XG5cbiAgLy8gMi42IHYtc2xvdCBzeW50YXhcbiAge1xuICAgIGlmIChlbC50YWcgPT09ICd0ZW1wbGF0ZScpIHtcbiAgICAgIC8vIHYtc2xvdCBvbiA8dGVtcGxhdGU+XG4gICAgICB2YXIgc2xvdEJpbmRpbmcgPSBnZXRBbmRSZW1vdmVBdHRyQnlSZWdleChlbCwgc2xvdFJFKTtcbiAgICAgIGlmIChzbG90QmluZGluZykge1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgIGlmIChlbC5zbG90VGFyZ2V0IHx8IGVsLnNsb3RTY29wZSkge1xuICAgICAgICAgICAgd2FybiQyKFxuICAgICAgICAgICAgICBcIlVuZXhwZWN0ZWQgbWl4ZWQgdXNhZ2Ugb2YgZGlmZmVyZW50IHNsb3Qgc3ludGF4ZXMuXCIsXG4gICAgICAgICAgICAgIGVsXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoZWwucGFyZW50ICYmICFtYXliZUNvbXBvbmVudChlbC5wYXJlbnQpKSB7XG4gICAgICAgICAgICB3YXJuJDIoXG4gICAgICAgICAgICAgIFwiPHRlbXBsYXRlIHYtc2xvdD4gY2FuIG9ubHkgYXBwZWFyIGF0IHRoZSByb290IGxldmVsIGluc2lkZSBcIiArXG4gICAgICAgICAgICAgIFwidGhlIHJlY2VpdmluZyBjb21wb25lbnRcIixcbiAgICAgICAgICAgICAgZWxcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHZhciByZWYgPSBnZXRTbG90TmFtZShzbG90QmluZGluZyk7XG4gICAgICAgIHZhciBuYW1lID0gcmVmLm5hbWU7XG4gICAgICAgIHZhciBkeW5hbWljID0gcmVmLmR5bmFtaWM7XG4gICAgICAgIGVsLnNsb3RUYXJnZXQgPSBuYW1lO1xuICAgICAgICBlbC5zbG90VGFyZ2V0RHluYW1pYyA9IGR5bmFtaWM7XG4gICAgICAgIGVsLnNsb3RTY29wZSA9IHNsb3RCaW5kaW5nLnZhbHVlIHx8IGVtcHR5U2xvdFNjb3BlVG9rZW47IC8vIGZvcmNlIGl0IGludG8gYSBzY29wZWQgc2xvdCBmb3IgcGVyZlxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyB2LXNsb3Qgb24gY29tcG9uZW50LCBkZW5vdGVzIGRlZmF1bHQgc2xvdFxuICAgICAgdmFyIHNsb3RCaW5kaW5nJDEgPSBnZXRBbmRSZW1vdmVBdHRyQnlSZWdleChlbCwgc2xvdFJFKTtcbiAgICAgIGlmIChzbG90QmluZGluZyQxKSB7XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgaWYgKCFtYXliZUNvbXBvbmVudChlbCkpIHtcbiAgICAgICAgICAgIHdhcm4kMihcbiAgICAgICAgICAgICAgXCJ2LXNsb3QgY2FuIG9ubHkgYmUgdXNlZCBvbiBjb21wb25lbnRzIG9yIDx0ZW1wbGF0ZT4uXCIsXG4gICAgICAgICAgICAgIHNsb3RCaW5kaW5nJDFcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChlbC5zbG90U2NvcGUgfHwgZWwuc2xvdFRhcmdldCkge1xuICAgICAgICAgICAgd2FybiQyKFxuICAgICAgICAgICAgICBcIlVuZXhwZWN0ZWQgbWl4ZWQgdXNhZ2Ugb2YgZGlmZmVyZW50IHNsb3Qgc3ludGF4ZXMuXCIsXG4gICAgICAgICAgICAgIGVsXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoZWwuc2NvcGVkU2xvdHMpIHtcbiAgICAgICAgICAgIHdhcm4kMihcbiAgICAgICAgICAgICAgXCJUbyBhdm9pZCBzY29wZSBhbWJpZ3VpdHksIHRoZSBkZWZhdWx0IHNsb3Qgc2hvdWxkIGFsc28gdXNlIFwiICtcbiAgICAgICAgICAgICAgXCI8dGVtcGxhdGU+IHN5bnRheCB3aGVuIHRoZXJlIGFyZSBvdGhlciBuYW1lZCBzbG90cy5cIixcbiAgICAgICAgICAgICAgc2xvdEJpbmRpbmckMVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gYWRkIHRoZSBjb21wb25lbnQncyBjaGlsZHJlbiB0byBpdHMgZGVmYXVsdCBzbG90XG4gICAgICAgIHZhciBzbG90cyA9IGVsLnNjb3BlZFNsb3RzIHx8IChlbC5zY29wZWRTbG90cyA9IHt9KTtcbiAgICAgICAgdmFyIHJlZiQxID0gZ2V0U2xvdE5hbWUoc2xvdEJpbmRpbmckMSk7XG4gICAgICAgIHZhciBuYW1lJDEgPSByZWYkMS5uYW1lO1xuICAgICAgICB2YXIgZHluYW1pYyQxID0gcmVmJDEuZHluYW1pYztcbiAgICAgICAgdmFyIHNsb3RDb250YWluZXIgPSBzbG90c1tuYW1lJDFdID0gY3JlYXRlQVNURWxlbWVudCgndGVtcGxhdGUnLCBbXSwgZWwpO1xuICAgICAgICBzbG90Q29udGFpbmVyLnNsb3RUYXJnZXQgPSBuYW1lJDE7XG4gICAgICAgIHNsb3RDb250YWluZXIuc2xvdFRhcmdldER5bmFtaWMgPSBkeW5hbWljJDE7XG4gICAgICAgIHNsb3RDb250YWluZXIuY2hpbGRyZW4gPSBlbC5jaGlsZHJlbi5maWx0ZXIoZnVuY3Rpb24gKGMpIHtcbiAgICAgICAgICBpZiAoIWMuc2xvdFNjb3BlKSB7XG4gICAgICAgICAgICBjLnBhcmVudCA9IHNsb3RDb250YWluZXI7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHNsb3RDb250YWluZXIuc2xvdFNjb3BlID0gc2xvdEJpbmRpbmckMS52YWx1ZSB8fCBlbXB0eVNsb3RTY29wZVRva2VuO1xuICAgICAgICAvLyByZW1vdmUgY2hpbGRyZW4gYXMgdGhleSBhcmUgcmV0dXJuZWQgZnJvbSBzY29wZWRTbG90cyBub3dcbiAgICAgICAgZWwuY2hpbGRyZW4gPSBbXTtcbiAgICAgICAgLy8gbWFyayBlbCBub24tcGxhaW4gc28gZGF0YSBnZXRzIGdlbmVyYXRlZFxuICAgICAgICBlbC5wbGFpbiA9IGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBnZXRTbG90TmFtZSAoYmluZGluZykge1xuICB2YXIgbmFtZSA9IGJpbmRpbmcubmFtZS5yZXBsYWNlKHNsb3RSRSwgJycpO1xuICBpZiAoIW5hbWUpIHtcbiAgICBpZiAoYmluZGluZy5uYW1lWzBdICE9PSAnIycpIHtcbiAgICAgIG5hbWUgPSAnZGVmYXVsdCc7XG4gICAgfSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICB3YXJuJDIoXG4gICAgICAgIFwidi1zbG90IHNob3J0aGFuZCBzeW50YXggcmVxdWlyZXMgYSBzbG90IG5hbWUuXCIsXG4gICAgICAgIGJpbmRpbmdcbiAgICAgICk7XG4gICAgfVxuICB9XG4gIHJldHVybiBkeW5hbWljQXJnUkUudGVzdChuYW1lKVxuICAgIC8vIGR5bmFtaWMgW25hbWVdXG4gICAgPyB7IG5hbWU6IG5hbWUuc2xpY2UoMSwgLTEpLCBkeW5hbWljOiB0cnVlIH1cbiAgICAvLyBzdGF0aWMgbmFtZVxuICAgIDogeyBuYW1lOiAoXCJcXFwiXCIgKyBuYW1lICsgXCJcXFwiXCIpLCBkeW5hbWljOiBmYWxzZSB9XG59XG5cbi8vIGhhbmRsZSA8c2xvdC8+IG91dGxldHNcbmZ1bmN0aW9uIHByb2Nlc3NTbG90T3V0bGV0IChlbCkge1xuICBpZiAoZWwudGFnID09PSAnc2xvdCcpIHtcbiAgICBlbC5zbG90TmFtZSA9IGdldEJpbmRpbmdBdHRyKGVsLCAnbmFtZScpO1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGVsLmtleSkge1xuICAgICAgd2FybiQyKFxuICAgICAgICBcImBrZXlgIGRvZXMgbm90IHdvcmsgb24gPHNsb3Q+IGJlY2F1c2Ugc2xvdHMgYXJlIGFic3RyYWN0IG91dGxldHMgXCIgK1xuICAgICAgICBcImFuZCBjYW4gcG9zc2libHkgZXhwYW5kIGludG8gbXVsdGlwbGUgZWxlbWVudHMuIFwiICtcbiAgICAgICAgXCJVc2UgdGhlIGtleSBvbiBhIHdyYXBwaW5nIGVsZW1lbnQgaW5zdGVhZC5cIixcbiAgICAgICAgZ2V0UmF3QmluZGluZ0F0dHIoZWwsICdrZXknKVxuICAgICAgKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gcHJvY2Vzc0NvbXBvbmVudCAoZWwpIHtcbiAgdmFyIGJpbmRpbmc7XG4gIGlmICgoYmluZGluZyA9IGdldEJpbmRpbmdBdHRyKGVsLCAnaXMnKSkpIHtcbiAgICBlbC5jb21wb25lbnQgPSBiaW5kaW5nO1xuICB9XG4gIGlmIChnZXRBbmRSZW1vdmVBdHRyKGVsLCAnaW5saW5lLXRlbXBsYXRlJykgIT0gbnVsbCkge1xuICAgIGVsLmlubGluZVRlbXBsYXRlID0gdHJ1ZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBwcm9jZXNzQXR0cnMgKGVsKSB7XG4gIHZhciBsaXN0ID0gZWwuYXR0cnNMaXN0O1xuICB2YXIgaSwgbCwgbmFtZSwgcmF3TmFtZSwgdmFsdWUsIG1vZGlmaWVycywgc3luY0dlbiwgaXNEeW5hbWljO1xuICBmb3IgKGkgPSAwLCBsID0gbGlzdC5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICBuYW1lID0gcmF3TmFtZSA9IGxpc3RbaV0ubmFtZTtcbiAgICB2YWx1ZSA9IGxpc3RbaV0udmFsdWU7XG4gICAgaWYgKGRpclJFLnRlc3QobmFtZSkpIHtcbiAgICAgIC8vIG1hcmsgZWxlbWVudCBhcyBkeW5hbWljXG4gICAgICBlbC5oYXNCaW5kaW5ncyA9IHRydWU7XG4gICAgICAvLyBtb2RpZmllcnNcbiAgICAgIG1vZGlmaWVycyA9IHBhcnNlTW9kaWZpZXJzKG5hbWUucmVwbGFjZShkaXJSRSwgJycpKTtcbiAgICAgIC8vIHN1cHBvcnQgLmZvbyBzaG9ydGhhbmQgc3ludGF4IGZvciB0aGUgLnByb3AgbW9kaWZpZXJcbiAgICAgIGlmIChtb2RpZmllcnMpIHtcbiAgICAgICAgbmFtZSA9IG5hbWUucmVwbGFjZShtb2RpZmllclJFLCAnJyk7XG4gICAgICB9XG4gICAgICBpZiAoYmluZFJFLnRlc3QobmFtZSkpIHsgLy8gdi1iaW5kXG4gICAgICAgIG5hbWUgPSBuYW1lLnJlcGxhY2UoYmluZFJFLCAnJyk7XG4gICAgICAgIHZhbHVlID0gcGFyc2VGaWx0ZXJzKHZhbHVlKTtcbiAgICAgICAgaXNEeW5hbWljID0gZHluYW1pY0FyZ1JFLnRlc3QobmFtZSk7XG4gICAgICAgIGlmIChpc0R5bmFtaWMpIHtcbiAgICAgICAgICBuYW1lID0gbmFtZS5zbGljZSgxLCAtMSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKFxuICAgICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiZcbiAgICAgICAgICB2YWx1ZS50cmltKCkubGVuZ3RoID09PSAwXG4gICAgICAgICkge1xuICAgICAgICAgIHdhcm4kMihcbiAgICAgICAgICAgIChcIlRoZSB2YWx1ZSBmb3IgYSB2LWJpbmQgZXhwcmVzc2lvbiBjYW5ub3QgYmUgZW1wdHkuIEZvdW5kIGluIFxcXCJ2LWJpbmQ6XCIgKyBuYW1lICsgXCJcXFwiXCIpXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobW9kaWZpZXJzKSB7XG4gICAgICAgICAgaWYgKG1vZGlmaWVycy5wcm9wICYmICFpc0R5bmFtaWMpIHtcbiAgICAgICAgICAgIG5hbWUgPSBjYW1lbGl6ZShuYW1lKTtcbiAgICAgICAgICAgIGlmIChuYW1lID09PSAnaW5uZXJIdG1sJykgeyBuYW1lID0gJ2lubmVySFRNTCc7IH1cbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKG1vZGlmaWVycy5jYW1lbCAmJiAhaXNEeW5hbWljKSB7XG4gICAgICAgICAgICBuYW1lID0gY2FtZWxpemUobmFtZSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChtb2RpZmllcnMuc3luYykge1xuICAgICAgICAgICAgc3luY0dlbiA9IGdlbkFzc2lnbm1lbnRDb2RlKHZhbHVlLCBcIiRldmVudFwiKTtcbiAgICAgICAgICAgIGlmICghaXNEeW5hbWljKSB7XG4gICAgICAgICAgICAgIGFkZEhhbmRsZXIoXG4gICAgICAgICAgICAgICAgZWwsXG4gICAgICAgICAgICAgICAgKFwidXBkYXRlOlwiICsgKGNhbWVsaXplKG5hbWUpKSksXG4gICAgICAgICAgICAgICAgc3luY0dlbixcbiAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgIGZhbHNlLFxuICAgICAgICAgICAgICAgIHdhcm4kMixcbiAgICAgICAgICAgICAgICBsaXN0W2ldXG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgIGlmIChoeXBoZW5hdGUobmFtZSkgIT09IGNhbWVsaXplKG5hbWUpKSB7XG4gICAgICAgICAgICAgICAgYWRkSGFuZGxlcihcbiAgICAgICAgICAgICAgICAgIGVsLFxuICAgICAgICAgICAgICAgICAgKFwidXBkYXRlOlwiICsgKGh5cGhlbmF0ZShuYW1lKSkpLFxuICAgICAgICAgICAgICAgICAgc3luY0dlbixcbiAgICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAgICBmYWxzZSxcbiAgICAgICAgICAgICAgICAgIHdhcm4kMixcbiAgICAgICAgICAgICAgICAgIGxpc3RbaV1cbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAvLyBoYW5kbGVyIHcvIGR5bmFtaWMgZXZlbnQgbmFtZVxuICAgICAgICAgICAgICBhZGRIYW5kbGVyKFxuICAgICAgICAgICAgICAgIGVsLFxuICAgICAgICAgICAgICAgIChcIlxcXCJ1cGRhdGU6XFxcIisoXCIgKyBuYW1lICsgXCIpXCIpLFxuICAgICAgICAgICAgICAgIHN5bmNHZW4sXG4gICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICBmYWxzZSxcbiAgICAgICAgICAgICAgICB3YXJuJDIsXG4gICAgICAgICAgICAgICAgbGlzdFtpXSxcbiAgICAgICAgICAgICAgICB0cnVlIC8vIGR5bmFtaWNcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKChtb2RpZmllcnMgJiYgbW9kaWZpZXJzLnByb3ApIHx8IChcbiAgICAgICAgICAhZWwuY29tcG9uZW50ICYmIHBsYXRmb3JtTXVzdFVzZVByb3AoZWwudGFnLCBlbC5hdHRyc01hcC50eXBlLCBuYW1lKVxuICAgICAgICApKSB7XG4gICAgICAgICAgYWRkUHJvcChlbCwgbmFtZSwgdmFsdWUsIGxpc3RbaV0sIGlzRHluYW1pYyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYWRkQXR0cihlbCwgbmFtZSwgdmFsdWUsIGxpc3RbaV0sIGlzRHluYW1pYyk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAob25SRS50ZXN0KG5hbWUpKSB7IC8vIHYtb25cbiAgICAgICAgbmFtZSA9IG5hbWUucmVwbGFjZShvblJFLCAnJyk7XG4gICAgICAgIGlzRHluYW1pYyA9IGR5bmFtaWNBcmdSRS50ZXN0KG5hbWUpO1xuICAgICAgICBpZiAoaXNEeW5hbWljKSB7XG4gICAgICAgICAgbmFtZSA9IG5hbWUuc2xpY2UoMSwgLTEpO1xuICAgICAgICB9XG4gICAgICAgIGFkZEhhbmRsZXIoZWwsIG5hbWUsIHZhbHVlLCBtb2RpZmllcnMsIGZhbHNlLCB3YXJuJDIsIGxpc3RbaV0sIGlzRHluYW1pYyk7XG4gICAgICB9IGVsc2UgeyAvLyBub3JtYWwgZGlyZWN0aXZlc1xuICAgICAgICBuYW1lID0gbmFtZS5yZXBsYWNlKGRpclJFLCAnJyk7XG4gICAgICAgIC8vIHBhcnNlIGFyZ1xuICAgICAgICB2YXIgYXJnTWF0Y2ggPSBuYW1lLm1hdGNoKGFyZ1JFKTtcbiAgICAgICAgdmFyIGFyZyA9IGFyZ01hdGNoICYmIGFyZ01hdGNoWzFdO1xuICAgICAgICBpc0R5bmFtaWMgPSBmYWxzZTtcbiAgICAgICAgaWYgKGFyZykge1xuICAgICAgICAgIG5hbWUgPSBuYW1lLnNsaWNlKDAsIC0oYXJnLmxlbmd0aCArIDEpKTtcbiAgICAgICAgICBpZiAoZHluYW1pY0FyZ1JFLnRlc3QoYXJnKSkge1xuICAgICAgICAgICAgYXJnID0gYXJnLnNsaWNlKDEsIC0xKTtcbiAgICAgICAgICAgIGlzRHluYW1pYyA9IHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGFkZERpcmVjdGl2ZShlbCwgbmFtZSwgcmF3TmFtZSwgdmFsdWUsIGFyZywgaXNEeW5hbWljLCBtb2RpZmllcnMsIGxpc3RbaV0pO1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBuYW1lID09PSAnbW9kZWwnKSB7XG4gICAgICAgICAgY2hlY2tGb3JBbGlhc01vZGVsKGVsLCB2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gbGl0ZXJhbCBhdHRyaWJ1dGVcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIHZhciByZXMgPSBwYXJzZVRleHQodmFsdWUsIGRlbGltaXRlcnMpO1xuICAgICAgICBpZiAocmVzKSB7XG4gICAgICAgICAgd2FybiQyKFxuICAgICAgICAgICAgbmFtZSArIFwiPVxcXCJcIiArIHZhbHVlICsgXCJcXFwiOiBcIiArXG4gICAgICAgICAgICAnSW50ZXJwb2xhdGlvbiBpbnNpZGUgYXR0cmlidXRlcyBoYXMgYmVlbiByZW1vdmVkLiAnICtcbiAgICAgICAgICAgICdVc2Ugdi1iaW5kIG9yIHRoZSBjb2xvbiBzaG9ydGhhbmQgaW5zdGVhZC4gRm9yIGV4YW1wbGUsICcgK1xuICAgICAgICAgICAgJ2luc3RlYWQgb2YgPGRpdiBpZD1cInt7IHZhbCB9fVwiPiwgdXNlIDxkaXYgOmlkPVwidmFsXCI+LicsXG4gICAgICAgICAgICBsaXN0W2ldXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgYWRkQXR0cihlbCwgbmFtZSwgSlNPTi5zdHJpbmdpZnkodmFsdWUpLCBsaXN0W2ldKTtcbiAgICAgIC8vICM2ODg3IGZpcmVmb3ggZG9lc24ndCB1cGRhdGUgbXV0ZWQgc3RhdGUgaWYgc2V0IHZpYSBhdHRyaWJ1dGVcbiAgICAgIC8vIGV2ZW4gaW1tZWRpYXRlbHkgYWZ0ZXIgZWxlbWVudCBjcmVhdGlvblxuICAgICAgaWYgKCFlbC5jb21wb25lbnQgJiZcbiAgICAgICAgICBuYW1lID09PSAnbXV0ZWQnICYmXG4gICAgICAgICAgcGxhdGZvcm1NdXN0VXNlUHJvcChlbC50YWcsIGVsLmF0dHJzTWFwLnR5cGUsIG5hbWUpKSB7XG4gICAgICAgIGFkZFByb3AoZWwsIG5hbWUsICd0cnVlJywgbGlzdFtpXSk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGNoZWNrSW5Gb3IgKGVsKSB7XG4gIHZhciBwYXJlbnQgPSBlbDtcbiAgd2hpbGUgKHBhcmVudCkge1xuICAgIGlmIChwYXJlbnQuZm9yICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuICAgIHBhcmVudCA9IHBhcmVudC5wYXJlbnQ7XG4gIH1cbiAgcmV0dXJuIGZhbHNlXG59XG5cbmZ1bmN0aW9uIHBhcnNlTW9kaWZpZXJzIChuYW1lKSB7XG4gIHZhciBtYXRjaCA9IG5hbWUubWF0Y2gobW9kaWZpZXJSRSk7XG4gIGlmIChtYXRjaCkge1xuICAgIHZhciByZXQgPSB7fTtcbiAgICBtYXRjaC5mb3JFYWNoKGZ1bmN0aW9uIChtKSB7IHJldFttLnNsaWNlKDEpXSA9IHRydWU7IH0pO1xuICAgIHJldHVybiByZXRcbiAgfVxufVxuXG5mdW5jdGlvbiBtYWtlQXR0cnNNYXAgKGF0dHJzKSB7XG4gIHZhciBtYXAgPSB7fTtcbiAgZm9yICh2YXIgaSA9IDAsIGwgPSBhdHRycy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICBpZiAoXG4gICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmXG4gICAgICBtYXBbYXR0cnNbaV0ubmFtZV0gJiYgIWlzSUUgJiYgIWlzRWRnZVxuICAgICkge1xuICAgICAgd2FybiQyKCdkdXBsaWNhdGUgYXR0cmlidXRlOiAnICsgYXR0cnNbaV0ubmFtZSwgYXR0cnNbaV0pO1xuICAgIH1cbiAgICBtYXBbYXR0cnNbaV0ubmFtZV0gPSBhdHRyc1tpXS52YWx1ZTtcbiAgfVxuICByZXR1cm4gbWFwXG59XG5cbi8vIGZvciBzY3JpcHQgKGUuZy4gdHlwZT1cIngvdGVtcGxhdGVcIikgb3Igc3R5bGUsIGRvIG5vdCBkZWNvZGUgY29udGVudFxuZnVuY3Rpb24gaXNUZXh0VGFnIChlbCkge1xuICByZXR1cm4gZWwudGFnID09PSAnc2NyaXB0JyB8fCBlbC50YWcgPT09ICdzdHlsZSdcbn1cblxuZnVuY3Rpb24gaXNGb3JiaWRkZW5UYWcgKGVsKSB7XG4gIHJldHVybiAoXG4gICAgZWwudGFnID09PSAnc3R5bGUnIHx8XG4gICAgKGVsLnRhZyA9PT0gJ3NjcmlwdCcgJiYgKFxuICAgICAgIWVsLmF0dHJzTWFwLnR5cGUgfHxcbiAgICAgIGVsLmF0dHJzTWFwLnR5cGUgPT09ICd0ZXh0L2phdmFzY3JpcHQnXG4gICAgKSlcbiAgKVxufVxuXG52YXIgaWVOU0J1ZyA9IC9eeG1sbnM6TlNcXGQrLztcbnZhciBpZU5TUHJlZml4ID0gL15OU1xcZCs6LztcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbmZ1bmN0aW9uIGd1YXJkSUVTVkdCdWcgKGF0dHJzKSB7XG4gIHZhciByZXMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBhdHRycy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBhdHRyID0gYXR0cnNbaV07XG4gICAgaWYgKCFpZU5TQnVnLnRlc3QoYXR0ci5uYW1lKSkge1xuICAgICAgYXR0ci5uYW1lID0gYXR0ci5uYW1lLnJlcGxhY2UoaWVOU1ByZWZpeCwgJycpO1xuICAgICAgcmVzLnB1c2goYXR0cik7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXNcbn1cblxuZnVuY3Rpb24gY2hlY2tGb3JBbGlhc01vZGVsIChlbCwgdmFsdWUpIHtcbiAgdmFyIF9lbCA9IGVsO1xuICB3aGlsZSAoX2VsKSB7XG4gICAgaWYgKF9lbC5mb3IgJiYgX2VsLmFsaWFzID09PSB2YWx1ZSkge1xuICAgICAgd2FybiQyKFxuICAgICAgICBcIjxcIiArIChlbC50YWcpICsgXCIgdi1tb2RlbD1cXFwiXCIgKyB2YWx1ZSArIFwiXFxcIj46IFwiICtcbiAgICAgICAgXCJZb3UgYXJlIGJpbmRpbmcgdi1tb2RlbCBkaXJlY3RseSB0byBhIHYtZm9yIGl0ZXJhdGlvbiBhbGlhcy4gXCIgK1xuICAgICAgICBcIlRoaXMgd2lsbCBub3QgYmUgYWJsZSB0byBtb2RpZnkgdGhlIHYtZm9yIHNvdXJjZSBhcnJheSBiZWNhdXNlIFwiICtcbiAgICAgICAgXCJ3cml0aW5nIHRvIHRoZSBhbGlhcyBpcyBsaWtlIG1vZGlmeWluZyBhIGZ1bmN0aW9uIGxvY2FsIHZhcmlhYmxlLiBcIiArXG4gICAgICAgIFwiQ29uc2lkZXIgdXNpbmcgYW4gYXJyYXkgb2Ygb2JqZWN0cyBhbmQgdXNlIHYtbW9kZWwgb24gYW4gb2JqZWN0IHByb3BlcnR5IGluc3RlYWQuXCIsXG4gICAgICAgIGVsLnJhd0F0dHJzTWFwWyd2LW1vZGVsJ11cbiAgICAgICk7XG4gICAgfVxuICAgIF9lbCA9IF9lbC5wYXJlbnQ7XG4gIH1cbn1cblxuLyogICovXG5cbmZ1bmN0aW9uIHByZVRyYW5zZm9ybU5vZGUgKGVsLCBvcHRpb25zKSB7XG4gIGlmIChlbC50YWcgPT09ICdpbnB1dCcpIHtcbiAgICB2YXIgbWFwID0gZWwuYXR0cnNNYXA7XG4gICAgaWYgKCFtYXBbJ3YtbW9kZWwnXSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgdmFyIHR5cGVCaW5kaW5nO1xuICAgIGlmIChtYXBbJzp0eXBlJ10gfHwgbWFwWyd2LWJpbmQ6dHlwZSddKSB7XG4gICAgICB0eXBlQmluZGluZyA9IGdldEJpbmRpbmdBdHRyKGVsLCAndHlwZScpO1xuICAgIH1cbiAgICBpZiAoIW1hcC50eXBlICYmICF0eXBlQmluZGluZyAmJiBtYXBbJ3YtYmluZCddKSB7XG4gICAgICB0eXBlQmluZGluZyA9IFwiKFwiICsgKG1hcFsndi1iaW5kJ10pICsgXCIpLnR5cGVcIjtcbiAgICB9XG5cbiAgICBpZiAodHlwZUJpbmRpbmcpIHtcbiAgICAgIHZhciBpZkNvbmRpdGlvbiA9IGdldEFuZFJlbW92ZUF0dHIoZWwsICd2LWlmJywgdHJ1ZSk7XG4gICAgICB2YXIgaWZDb25kaXRpb25FeHRyYSA9IGlmQ29uZGl0aW9uID8gKFwiJiYoXCIgKyBpZkNvbmRpdGlvbiArIFwiKVwiKSA6IFwiXCI7XG4gICAgICB2YXIgaGFzRWxzZSA9IGdldEFuZFJlbW92ZUF0dHIoZWwsICd2LWVsc2UnLCB0cnVlKSAhPSBudWxsO1xuICAgICAgdmFyIGVsc2VJZkNvbmRpdGlvbiA9IGdldEFuZFJlbW92ZUF0dHIoZWwsICd2LWVsc2UtaWYnLCB0cnVlKTtcbiAgICAgIC8vIDEuIGNoZWNrYm94XG4gICAgICB2YXIgYnJhbmNoMCA9IGNsb25lQVNURWxlbWVudChlbCk7XG4gICAgICAvLyBwcm9jZXNzIGZvciBvbiB0aGUgbWFpbiBub2RlXG4gICAgICBwcm9jZXNzRm9yKGJyYW5jaDApO1xuICAgICAgYWRkUmF3QXR0cihicmFuY2gwLCAndHlwZScsICdjaGVja2JveCcpO1xuICAgICAgcHJvY2Vzc0VsZW1lbnQoYnJhbmNoMCwgb3B0aW9ucyk7XG4gICAgICBicmFuY2gwLnByb2Nlc3NlZCA9IHRydWU7IC8vIHByZXZlbnQgaXQgZnJvbSBkb3VibGUtcHJvY2Vzc2VkXG4gICAgICBicmFuY2gwLmlmID0gXCIoXCIgKyB0eXBlQmluZGluZyArIFwiKT09PSdjaGVja2JveCdcIiArIGlmQ29uZGl0aW9uRXh0cmE7XG4gICAgICBhZGRJZkNvbmRpdGlvbihicmFuY2gwLCB7XG4gICAgICAgIGV4cDogYnJhbmNoMC5pZixcbiAgICAgICAgYmxvY2s6IGJyYW5jaDBcbiAgICAgIH0pO1xuICAgICAgLy8gMi4gYWRkIHJhZGlvIGVsc2UtaWYgY29uZGl0aW9uXG4gICAgICB2YXIgYnJhbmNoMSA9IGNsb25lQVNURWxlbWVudChlbCk7XG4gICAgICBnZXRBbmRSZW1vdmVBdHRyKGJyYW5jaDEsICd2LWZvcicsIHRydWUpO1xuICAgICAgYWRkUmF3QXR0cihicmFuY2gxLCAndHlwZScsICdyYWRpbycpO1xuICAgICAgcHJvY2Vzc0VsZW1lbnQoYnJhbmNoMSwgb3B0aW9ucyk7XG4gICAgICBhZGRJZkNvbmRpdGlvbihicmFuY2gwLCB7XG4gICAgICAgIGV4cDogXCIoXCIgKyB0eXBlQmluZGluZyArIFwiKT09PSdyYWRpbydcIiArIGlmQ29uZGl0aW9uRXh0cmEsXG4gICAgICAgIGJsb2NrOiBicmFuY2gxXG4gICAgICB9KTtcbiAgICAgIC8vIDMuIG90aGVyXG4gICAgICB2YXIgYnJhbmNoMiA9IGNsb25lQVNURWxlbWVudChlbCk7XG4gICAgICBnZXRBbmRSZW1vdmVBdHRyKGJyYW5jaDIsICd2LWZvcicsIHRydWUpO1xuICAgICAgYWRkUmF3QXR0cihicmFuY2gyLCAnOnR5cGUnLCB0eXBlQmluZGluZyk7XG4gICAgICBwcm9jZXNzRWxlbWVudChicmFuY2gyLCBvcHRpb25zKTtcbiAgICAgIGFkZElmQ29uZGl0aW9uKGJyYW5jaDAsIHtcbiAgICAgICAgZXhwOiBpZkNvbmRpdGlvbixcbiAgICAgICAgYmxvY2s6IGJyYW5jaDJcbiAgICAgIH0pO1xuXG4gICAgICBpZiAoaGFzRWxzZSkge1xuICAgICAgICBicmFuY2gwLmVsc2UgPSB0cnVlO1xuICAgICAgfSBlbHNlIGlmIChlbHNlSWZDb25kaXRpb24pIHtcbiAgICAgICAgYnJhbmNoMC5lbHNlaWYgPSBlbHNlSWZDb25kaXRpb247XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBicmFuY2gwXG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGNsb25lQVNURWxlbWVudCAoZWwpIHtcbiAgcmV0dXJuIGNyZWF0ZUFTVEVsZW1lbnQoZWwudGFnLCBlbC5hdHRyc0xpc3Quc2xpY2UoKSwgZWwucGFyZW50KVxufVxuXG52YXIgbW9kZWwkMSA9IHtcbiAgcHJlVHJhbnNmb3JtTm9kZTogcHJlVHJhbnNmb3JtTm9kZVxufTtcblxudmFyIG1vZHVsZXMkMSA9IFtcbiAga2xhc3MkMSxcbiAgc3R5bGUkMSxcbiAgbW9kZWwkMVxuXTtcblxuLyogICovXG5cbmZ1bmN0aW9uIHRleHQgKGVsLCBkaXIpIHtcbiAgaWYgKGRpci52YWx1ZSkge1xuICAgIGFkZFByb3AoZWwsICd0ZXh0Q29udGVudCcsIChcIl9zKFwiICsgKGRpci52YWx1ZSkgKyBcIilcIiksIGRpcik7XG4gIH1cbn1cblxuLyogICovXG5cbmZ1bmN0aW9uIGh0bWwgKGVsLCBkaXIpIHtcbiAgaWYgKGRpci52YWx1ZSkge1xuICAgIGFkZFByb3AoZWwsICdpbm5lckhUTUwnLCAoXCJfcyhcIiArIChkaXIudmFsdWUpICsgXCIpXCIpLCBkaXIpO1xuICB9XG59XG5cbnZhciBkaXJlY3RpdmVzJDEgPSB7XG4gIG1vZGVsOiBtb2RlbCxcbiAgdGV4dDogdGV4dCxcbiAgaHRtbDogaHRtbFxufTtcblxuLyogICovXG5cbnZhciBiYXNlT3B0aW9ucyA9IHtcbiAgZXhwZWN0SFRNTDogdHJ1ZSxcbiAgbW9kdWxlczogbW9kdWxlcyQxLFxuICBkaXJlY3RpdmVzOiBkaXJlY3RpdmVzJDEsXG4gIGlzUHJlVGFnOiBpc1ByZVRhZyxcbiAgaXNVbmFyeVRhZzogaXNVbmFyeVRhZyxcbiAgbXVzdFVzZVByb3A6IG11c3RVc2VQcm9wLFxuICBjYW5CZUxlZnRPcGVuVGFnOiBjYW5CZUxlZnRPcGVuVGFnLFxuICBpc1Jlc2VydmVkVGFnOiBpc1Jlc2VydmVkVGFnLFxuICBnZXRUYWdOYW1lc3BhY2U6IGdldFRhZ05hbWVzcGFjZSxcbiAgc3RhdGljS2V5czogZ2VuU3RhdGljS2V5cyhtb2R1bGVzJDEpXG59O1xuXG4vKiAgKi9cblxudmFyIGlzU3RhdGljS2V5O1xudmFyIGlzUGxhdGZvcm1SZXNlcnZlZFRhZztcblxudmFyIGdlblN0YXRpY0tleXNDYWNoZWQgPSBjYWNoZWQoZ2VuU3RhdGljS2V5cyQxKTtcblxuLyoqXG4gKiBHb2FsIG9mIHRoZSBvcHRpbWl6ZXI6IHdhbGsgdGhlIGdlbmVyYXRlZCB0ZW1wbGF0ZSBBU1QgdHJlZVxuICogYW5kIGRldGVjdCBzdWItdHJlZXMgdGhhdCBhcmUgcHVyZWx5IHN0YXRpYywgaS5lLiBwYXJ0cyBvZlxuICogdGhlIERPTSB0aGF0IG5ldmVyIG5lZWRzIHRvIGNoYW5nZS5cbiAqXG4gKiBPbmNlIHdlIGRldGVjdCB0aGVzZSBzdWItdHJlZXMsIHdlIGNhbjpcbiAqXG4gKiAxLiBIb2lzdCB0aGVtIGludG8gY29uc3RhbnRzLCBzbyB0aGF0IHdlIG5vIGxvbmdlciBuZWVkIHRvXG4gKiAgICBjcmVhdGUgZnJlc2ggbm9kZXMgZm9yIHRoZW0gb24gZWFjaCByZS1yZW5kZXI7XG4gKiAyLiBDb21wbGV0ZWx5IHNraXAgdGhlbSBpbiB0aGUgcGF0Y2hpbmcgcHJvY2Vzcy5cbiAqL1xuZnVuY3Rpb24gb3B0aW1pemUgKHJvb3QsIG9wdGlvbnMpIHtcbiAgaWYgKCFyb290KSB7IHJldHVybiB9XG4gIGlzU3RhdGljS2V5ID0gZ2VuU3RhdGljS2V5c0NhY2hlZChvcHRpb25zLnN0YXRpY0tleXMgfHwgJycpO1xuICBpc1BsYXRmb3JtUmVzZXJ2ZWRUYWcgPSBvcHRpb25zLmlzUmVzZXJ2ZWRUYWcgfHwgbm87XG4gIC8vIGZpcnN0IHBhc3M6IG1hcmsgYWxsIG5vbi1zdGF0aWMgbm9kZXMuXG4gIG1hcmtTdGF0aWMkMShyb290KTtcbiAgLy8gc2Vjb25kIHBhc3M6IG1hcmsgc3RhdGljIHJvb3RzLlxuICBtYXJrU3RhdGljUm9vdHMocm9vdCwgZmFsc2UpO1xufVxuXG5mdW5jdGlvbiBnZW5TdGF0aWNLZXlzJDEgKGtleXMpIHtcbiAgcmV0dXJuIG1ha2VNYXAoXG4gICAgJ3R5cGUsdGFnLGF0dHJzTGlzdCxhdHRyc01hcCxwbGFpbixwYXJlbnQsY2hpbGRyZW4sYXR0cnMsc3RhcnQsZW5kLHJhd0F0dHJzTWFwJyArXG4gICAgKGtleXMgPyAnLCcgKyBrZXlzIDogJycpXG4gIClcbn1cblxuZnVuY3Rpb24gbWFya1N0YXRpYyQxIChub2RlKSB7XG4gIG5vZGUuc3RhdGljID0gaXNTdGF0aWMobm9kZSk7XG4gIGlmIChub2RlLnR5cGUgPT09IDEpIHtcbiAgICAvLyBkbyBub3QgbWFrZSBjb21wb25lbnQgc2xvdCBjb250ZW50IHN0YXRpYy4gdGhpcyBhdm9pZHNcbiAgICAvLyAxLiBjb21wb25lbnRzIG5vdCBhYmxlIHRvIG11dGF0ZSBzbG90IG5vZGVzXG4gICAgLy8gMi4gc3RhdGljIHNsb3QgY29udGVudCBmYWlscyBmb3IgaG90LXJlbG9hZGluZ1xuICAgIGlmIChcbiAgICAgICFpc1BsYXRmb3JtUmVzZXJ2ZWRUYWcobm9kZS50YWcpICYmXG4gICAgICBub2RlLnRhZyAhPT0gJ3Nsb3QnICYmXG4gICAgICBub2RlLmF0dHJzTWFwWydpbmxpbmUtdGVtcGxhdGUnXSA9PSBudWxsXG4gICAgKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgZm9yICh2YXIgaSA9IDAsIGwgPSBub2RlLmNoaWxkcmVuLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgdmFyIGNoaWxkID0gbm9kZS5jaGlsZHJlbltpXTtcbiAgICAgIG1hcmtTdGF0aWMkMShjaGlsZCk7XG4gICAgICBpZiAoIWNoaWxkLnN0YXRpYykge1xuICAgICAgICBub2RlLnN0YXRpYyA9IGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAobm9kZS5pZkNvbmRpdGlvbnMpIHtcbiAgICAgIGZvciAodmFyIGkkMSA9IDEsIGwkMSA9IG5vZGUuaWZDb25kaXRpb25zLmxlbmd0aDsgaSQxIDwgbCQxOyBpJDErKykge1xuICAgICAgICB2YXIgYmxvY2sgPSBub2RlLmlmQ29uZGl0aW9uc1tpJDFdLmJsb2NrO1xuICAgICAgICBtYXJrU3RhdGljJDEoYmxvY2spO1xuICAgICAgICBpZiAoIWJsb2NrLnN0YXRpYykge1xuICAgICAgICAgIG5vZGUuc3RhdGljID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gbWFya1N0YXRpY1Jvb3RzIChub2RlLCBpc0luRm9yKSB7XG4gIGlmIChub2RlLnR5cGUgPT09IDEpIHtcbiAgICBpZiAobm9kZS5zdGF0aWMgfHwgbm9kZS5vbmNlKSB7XG4gICAgICBub2RlLnN0YXRpY0luRm9yID0gaXNJbkZvcjtcbiAgICB9XG4gICAgLy8gRm9yIGEgbm9kZSB0byBxdWFsaWZ5IGFzIGEgc3RhdGljIHJvb3QsIGl0IHNob3VsZCBoYXZlIGNoaWxkcmVuIHRoYXRcbiAgICAvLyBhcmUgbm90IGp1c3Qgc3RhdGljIHRleHQuIE90aGVyd2lzZSB0aGUgY29zdCBvZiBob2lzdGluZyBvdXQgd2lsbFxuICAgIC8vIG91dHdlaWdoIHRoZSBiZW5lZml0cyBhbmQgaXQncyBiZXR0ZXIgb2ZmIHRvIGp1c3QgYWx3YXlzIHJlbmRlciBpdCBmcmVzaC5cbiAgICBpZiAobm9kZS5zdGF0aWMgJiYgbm9kZS5jaGlsZHJlbi5sZW5ndGggJiYgIShcbiAgICAgIG5vZGUuY2hpbGRyZW4ubGVuZ3RoID09PSAxICYmXG4gICAgICBub2RlLmNoaWxkcmVuWzBdLnR5cGUgPT09IDNcbiAgICApKSB7XG4gICAgICBub2RlLnN0YXRpY1Jvb3QgPSB0cnVlO1xuICAgICAgcmV0dXJuXG4gICAgfSBlbHNlIHtcbiAgICAgIG5vZGUuc3RhdGljUm9vdCA9IGZhbHNlO1xuICAgIH1cbiAgICBpZiAobm9kZS5jaGlsZHJlbikge1xuICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBub2RlLmNoaWxkcmVuLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICBtYXJrU3RhdGljUm9vdHMobm9kZS5jaGlsZHJlbltpXSwgaXNJbkZvciB8fCAhIW5vZGUuZm9yKTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKG5vZGUuaWZDb25kaXRpb25zKSB7XG4gICAgICBmb3IgKHZhciBpJDEgPSAxLCBsJDEgPSBub2RlLmlmQ29uZGl0aW9ucy5sZW5ndGg7IGkkMSA8IGwkMTsgaSQxKyspIHtcbiAgICAgICAgbWFya1N0YXRpY1Jvb3RzKG5vZGUuaWZDb25kaXRpb25zW2kkMV0uYmxvY2ssIGlzSW5Gb3IpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBpc1N0YXRpYyAobm9kZSkge1xuICBpZiAobm9kZS50eXBlID09PSAyKSB7IC8vIGV4cHJlc3Npb25cbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuICBpZiAobm9kZS50eXBlID09PSAzKSB7IC8vIHRleHRcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG4gIHJldHVybiAhIShub2RlLnByZSB8fCAoXG4gICAgIW5vZGUuaGFzQmluZGluZ3MgJiYgLy8gbm8gZHluYW1pYyBiaW5kaW5nc1xuICAgICFub2RlLmlmICYmICFub2RlLmZvciAmJiAvLyBub3Qgdi1pZiBvciB2LWZvciBvciB2LWVsc2VcbiAgICAhaXNCdWlsdEluVGFnKG5vZGUudGFnKSAmJiAvLyBub3QgYSBidWlsdC1pblxuICAgIGlzUGxhdGZvcm1SZXNlcnZlZFRhZyhub2RlLnRhZykgJiYgLy8gbm90IGEgY29tcG9uZW50XG4gICAgIWlzRGlyZWN0Q2hpbGRPZlRlbXBsYXRlRm9yKG5vZGUpICYmXG4gICAgT2JqZWN0LmtleXMobm9kZSkuZXZlcnkoaXNTdGF0aWNLZXkpXG4gICkpXG59XG5cbmZ1bmN0aW9uIGlzRGlyZWN0Q2hpbGRPZlRlbXBsYXRlRm9yIChub2RlKSB7XG4gIHdoaWxlIChub2RlLnBhcmVudCkge1xuICAgIG5vZGUgPSBub2RlLnBhcmVudDtcbiAgICBpZiAobm9kZS50YWcgIT09ICd0ZW1wbGF0ZScpIHtcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cbiAgICBpZiAobm9kZS5mb3IpIHtcbiAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuICB9XG4gIHJldHVybiBmYWxzZVxufVxuXG4vKiAgKi9cblxudmFyIGZuRXhwUkUgPSAvXihbXFx3JF9dK3xcXChbXildKj9cXCkpXFxzKj0+fF5mdW5jdGlvbig/OlxccytbXFx3JF0rKT9cXHMqXFwoLztcbnZhciBmbkludm9rZVJFID0gL1xcKFteKV0qP1xcKTsqJC87XG52YXIgc2ltcGxlUGF0aFJFID0gL15bQS1aYS16XyRdW1xcdyRdKig/OlxcLltBLVphLXpfJF1bXFx3JF0qfFxcWydbXiddKj8nXXxcXFtcIlteXCJdKj9cIl18XFxbXFxkK118XFxbW0EtWmEtel8kXVtcXHckXSpdKSokLztcblxuLy8gS2V5Ym9hcmRFdmVudC5rZXlDb2RlIGFsaWFzZXNcbnZhciBrZXlDb2RlcyA9IHtcbiAgZXNjOiAyNyxcbiAgdGFiOiA5LFxuICBlbnRlcjogMTMsXG4gIHNwYWNlOiAzMixcbiAgdXA6IDM4LFxuICBsZWZ0OiAzNyxcbiAgcmlnaHQ6IDM5LFxuICBkb3duOiA0MCxcbiAgJ2RlbGV0ZSc6IFs4LCA0Nl1cbn07XG5cbi8vIEtleWJvYXJkRXZlbnQua2V5IGFsaWFzZXNcbnZhciBrZXlOYW1lcyA9IHtcbiAgLy8gIzc4ODA6IElFMTEgYW5kIEVkZ2UgdXNlIGBFc2NgIGZvciBFc2NhcGUga2V5IG5hbWUuXG4gIGVzYzogWydFc2MnLCAnRXNjYXBlJ10sXG4gIHRhYjogJ1RhYicsXG4gIGVudGVyOiAnRW50ZXInLFxuICAvLyAjOTExMjogSUUxMSB1c2VzIGBTcGFjZWJhcmAgZm9yIFNwYWNlIGtleSBuYW1lLlxuICBzcGFjZTogWycgJywgJ1NwYWNlYmFyJ10sXG4gIC8vICM3ODA2OiBJRTExIHVzZXMga2V5IG5hbWVzIHdpdGhvdXQgYEFycm93YCBwcmVmaXggZm9yIGFycm93IGtleXMuXG4gIHVwOiBbJ1VwJywgJ0Fycm93VXAnXSxcbiAgbGVmdDogWydMZWZ0JywgJ0Fycm93TGVmdCddLFxuICByaWdodDogWydSaWdodCcsICdBcnJvd1JpZ2h0J10sXG4gIGRvd246IFsnRG93bicsICdBcnJvd0Rvd24nXSxcbiAgLy8gIzkxMTI6IElFMTEgdXNlcyBgRGVsYCBmb3IgRGVsZXRlIGtleSBuYW1lLlxuICAnZGVsZXRlJzogWydCYWNrc3BhY2UnLCAnRGVsZXRlJywgJ0RlbCddXG59O1xuXG4vLyAjNDg2ODogbW9kaWZpZXJzIHRoYXQgcHJldmVudCB0aGUgZXhlY3V0aW9uIG9mIHRoZSBsaXN0ZW5lclxuLy8gbmVlZCB0byBleHBsaWNpdGx5IHJldHVybiBudWxsIHNvIHRoYXQgd2UgY2FuIGRldGVybWluZSB3aGV0aGVyIHRvIHJlbW92ZVxuLy8gdGhlIGxpc3RlbmVyIGZvciAub25jZVxudmFyIGdlbkd1YXJkID0gZnVuY3Rpb24gKGNvbmRpdGlvbikgeyByZXR1cm4gKFwiaWYoXCIgKyBjb25kaXRpb24gKyBcIilyZXR1cm4gbnVsbDtcIik7IH07XG5cbnZhciBtb2RpZmllckNvZGUgPSB7XG4gIHN0b3A6ICckZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7JyxcbiAgcHJldmVudDogJyRldmVudC5wcmV2ZW50RGVmYXVsdCgpOycsXG4gIHNlbGY6IGdlbkd1YXJkKFwiJGV2ZW50LnRhcmdldCAhPT0gJGV2ZW50LmN1cnJlbnRUYXJnZXRcIiksXG4gIGN0cmw6IGdlbkd1YXJkKFwiISRldmVudC5jdHJsS2V5XCIpLFxuICBzaGlmdDogZ2VuR3VhcmQoXCIhJGV2ZW50LnNoaWZ0S2V5XCIpLFxuICBhbHQ6IGdlbkd1YXJkKFwiISRldmVudC5hbHRLZXlcIiksXG4gIG1ldGE6IGdlbkd1YXJkKFwiISRldmVudC5tZXRhS2V5XCIpLFxuICBsZWZ0OiBnZW5HdWFyZChcIididXR0b24nIGluICRldmVudCAmJiAkZXZlbnQuYnV0dG9uICE9PSAwXCIpLFxuICBtaWRkbGU6IGdlbkd1YXJkKFwiJ2J1dHRvbicgaW4gJGV2ZW50ICYmICRldmVudC5idXR0b24gIT09IDFcIiksXG4gIHJpZ2h0OiBnZW5HdWFyZChcIididXR0b24nIGluICRldmVudCAmJiAkZXZlbnQuYnV0dG9uICE9PSAyXCIpXG59O1xuXG5mdW5jdGlvbiBnZW5IYW5kbGVycyAoXG4gIGV2ZW50cyxcbiAgaXNOYXRpdmVcbikge1xuICB2YXIgcHJlZml4ID0gaXNOYXRpdmUgPyAnbmF0aXZlT246JyA6ICdvbjonO1xuICB2YXIgc3RhdGljSGFuZGxlcnMgPSBcIlwiO1xuICB2YXIgZHluYW1pY0hhbmRsZXJzID0gXCJcIjtcbiAgZm9yICh2YXIgbmFtZSBpbiBldmVudHMpIHtcbiAgICB2YXIgaGFuZGxlckNvZGUgPSBnZW5IYW5kbGVyKGV2ZW50c1tuYW1lXSk7XG4gICAgaWYgKGV2ZW50c1tuYW1lXSAmJiBldmVudHNbbmFtZV0uZHluYW1pYykge1xuICAgICAgZHluYW1pY0hhbmRsZXJzICs9IG5hbWUgKyBcIixcIiArIGhhbmRsZXJDb2RlICsgXCIsXCI7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0YXRpY0hhbmRsZXJzICs9IFwiXFxcIlwiICsgbmFtZSArIFwiXFxcIjpcIiArIGhhbmRsZXJDb2RlICsgXCIsXCI7XG4gICAgfVxuICB9XG4gIHN0YXRpY0hhbmRsZXJzID0gXCJ7XCIgKyAoc3RhdGljSGFuZGxlcnMuc2xpY2UoMCwgLTEpKSArIFwifVwiO1xuICBpZiAoZHluYW1pY0hhbmRsZXJzKSB7XG4gICAgcmV0dXJuIHByZWZpeCArIFwiX2QoXCIgKyBzdGF0aWNIYW5kbGVycyArIFwiLFtcIiArIChkeW5hbWljSGFuZGxlcnMuc2xpY2UoMCwgLTEpKSArIFwiXSlcIlxuICB9IGVsc2Uge1xuICAgIHJldHVybiBwcmVmaXggKyBzdGF0aWNIYW5kbGVyc1xuICB9XG59XG5cbmZ1bmN0aW9uIGdlbkhhbmRsZXIgKGhhbmRsZXIpIHtcbiAgaWYgKCFoYW5kbGVyKSB7XG4gICAgcmV0dXJuICdmdW5jdGlvbigpe30nXG4gIH1cblxuICBpZiAoQXJyYXkuaXNBcnJheShoYW5kbGVyKSkge1xuICAgIHJldHVybiAoXCJbXCIgKyAoaGFuZGxlci5tYXAoZnVuY3Rpb24gKGhhbmRsZXIpIHsgcmV0dXJuIGdlbkhhbmRsZXIoaGFuZGxlcik7IH0pLmpvaW4oJywnKSkgKyBcIl1cIilcbiAgfVxuXG4gIHZhciBpc01ldGhvZFBhdGggPSBzaW1wbGVQYXRoUkUudGVzdChoYW5kbGVyLnZhbHVlKTtcbiAgdmFyIGlzRnVuY3Rpb25FeHByZXNzaW9uID0gZm5FeHBSRS50ZXN0KGhhbmRsZXIudmFsdWUpO1xuICB2YXIgaXNGdW5jdGlvbkludm9jYXRpb24gPSBzaW1wbGVQYXRoUkUudGVzdChoYW5kbGVyLnZhbHVlLnJlcGxhY2UoZm5JbnZva2VSRSwgJycpKTtcblxuICBpZiAoIWhhbmRsZXIubW9kaWZpZXJzKSB7XG4gICAgaWYgKGlzTWV0aG9kUGF0aCB8fCBpc0Z1bmN0aW9uRXhwcmVzc2lvbikge1xuICAgICAgcmV0dXJuIGhhbmRsZXIudmFsdWVcbiAgICB9XG4gICAgcmV0dXJuIChcImZ1bmN0aW9uKCRldmVudCl7XCIgKyAoaXNGdW5jdGlvbkludm9jYXRpb24gPyAoXCJyZXR1cm4gXCIgKyAoaGFuZGxlci52YWx1ZSkpIDogaGFuZGxlci52YWx1ZSkgKyBcIn1cIikgLy8gaW5saW5lIHN0YXRlbWVudFxuICB9IGVsc2Uge1xuICAgIHZhciBjb2RlID0gJyc7XG4gICAgdmFyIGdlbk1vZGlmaWVyQ29kZSA9ICcnO1xuICAgIHZhciBrZXlzID0gW107XG4gICAgZm9yICh2YXIga2V5IGluIGhhbmRsZXIubW9kaWZpZXJzKSB7XG4gICAgICBpZiAobW9kaWZpZXJDb2RlW2tleV0pIHtcbiAgICAgICAgZ2VuTW9kaWZpZXJDb2RlICs9IG1vZGlmaWVyQ29kZVtrZXldO1xuICAgICAgICAvLyBsZWZ0L3JpZ2h0XG4gICAgICAgIGlmIChrZXlDb2Rlc1trZXldKSB7XG4gICAgICAgICAga2V5cy5wdXNoKGtleSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSAnZXhhY3QnKSB7XG4gICAgICAgIHZhciBtb2RpZmllcnMgPSAoaGFuZGxlci5tb2RpZmllcnMpO1xuICAgICAgICBnZW5Nb2RpZmllckNvZGUgKz0gZ2VuR3VhcmQoXG4gICAgICAgICAgWydjdHJsJywgJ3NoaWZ0JywgJ2FsdCcsICdtZXRhJ11cbiAgICAgICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGtleU1vZGlmaWVyKSB7IHJldHVybiAhbW9kaWZpZXJzW2tleU1vZGlmaWVyXTsgfSlcbiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKGtleU1vZGlmaWVyKSB7IHJldHVybiAoXCIkZXZlbnQuXCIgKyBrZXlNb2RpZmllciArIFwiS2V5XCIpOyB9KVxuICAgICAgICAgICAgLmpvaW4oJ3x8JylcbiAgICAgICAgKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGtleXMucHVzaChrZXkpO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoa2V5cy5sZW5ndGgpIHtcbiAgICAgIGNvZGUgKz0gZ2VuS2V5RmlsdGVyKGtleXMpO1xuICAgIH1cbiAgICAvLyBNYWtlIHN1cmUgbW9kaWZpZXJzIGxpa2UgcHJldmVudCBhbmQgc3RvcCBnZXQgZXhlY3V0ZWQgYWZ0ZXIga2V5IGZpbHRlcmluZ1xuICAgIGlmIChnZW5Nb2RpZmllckNvZGUpIHtcbiAgICAgIGNvZGUgKz0gZ2VuTW9kaWZpZXJDb2RlO1xuICAgIH1cbiAgICB2YXIgaGFuZGxlckNvZGUgPSBpc01ldGhvZFBhdGhcbiAgICAgID8gKFwicmV0dXJuIFwiICsgKGhhbmRsZXIudmFsdWUpICsgXCIoJGV2ZW50KVwiKVxuICAgICAgOiBpc0Z1bmN0aW9uRXhwcmVzc2lvblxuICAgICAgICA/IChcInJldHVybiAoXCIgKyAoaGFuZGxlci52YWx1ZSkgKyBcIikoJGV2ZW50KVwiKVxuICAgICAgICA6IGlzRnVuY3Rpb25JbnZvY2F0aW9uXG4gICAgICAgICAgPyAoXCJyZXR1cm4gXCIgKyAoaGFuZGxlci52YWx1ZSkpXG4gICAgICAgICAgOiBoYW5kbGVyLnZhbHVlO1xuICAgIHJldHVybiAoXCJmdW5jdGlvbigkZXZlbnQpe1wiICsgY29kZSArIGhhbmRsZXJDb2RlICsgXCJ9XCIpXG4gIH1cbn1cblxuZnVuY3Rpb24gZ2VuS2V5RmlsdGVyIChrZXlzKSB7XG4gIHJldHVybiAoXG4gICAgLy8gbWFrZSBzdXJlIHRoZSBrZXkgZmlsdGVycyBvbmx5IGFwcGx5IHRvIEtleWJvYXJkRXZlbnRzXG4gICAgLy8gIzk0NDE6IGNhbid0IHVzZSAna2V5Q29kZScgaW4gJGV2ZW50IGJlY2F1c2UgQ2hyb21lIGF1dG9maWxsIGZpcmVzIGZha2VcbiAgICAvLyBrZXkgZXZlbnRzIHRoYXQgZG8gbm90IGhhdmUga2V5Q29kZSBwcm9wZXJ0eS4uLlxuICAgIFwiaWYoISRldmVudC50eXBlLmluZGV4T2YoJ2tleScpJiZcIiArXG4gICAgKGtleXMubWFwKGdlbkZpbHRlckNvZGUpLmpvaW4oJyYmJykpICsgXCIpcmV0dXJuIG51bGw7XCJcbiAgKVxufVxuXG5mdW5jdGlvbiBnZW5GaWx0ZXJDb2RlIChrZXkpIHtcbiAgdmFyIGtleVZhbCA9IHBhcnNlSW50KGtleSwgMTApO1xuICBpZiAoa2V5VmFsKSB7XG4gICAgcmV0dXJuIChcIiRldmVudC5rZXlDb2RlIT09XCIgKyBrZXlWYWwpXG4gIH1cbiAgdmFyIGtleUNvZGUgPSBrZXlDb2Rlc1trZXldO1xuICB2YXIga2V5TmFtZSA9IGtleU5hbWVzW2tleV07XG4gIHJldHVybiAoXG4gICAgXCJfaygkZXZlbnQua2V5Q29kZSxcIiArXG4gICAgKEpTT04uc3RyaW5naWZ5KGtleSkpICsgXCIsXCIgK1xuICAgIChKU09OLnN0cmluZ2lmeShrZXlDb2RlKSkgKyBcIixcIiArXG4gICAgXCIkZXZlbnQua2V5LFwiICtcbiAgICBcIlwiICsgKEpTT04uc3RyaW5naWZ5KGtleU5hbWUpKSArXG4gICAgXCIpXCJcbiAgKVxufVxuXG4vKiAgKi9cblxuZnVuY3Rpb24gb24gKGVsLCBkaXIpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgZGlyLm1vZGlmaWVycykge1xuICAgIHdhcm4oXCJ2LW9uIHdpdGhvdXQgYXJndW1lbnQgZG9lcyBub3Qgc3VwcG9ydCBtb2RpZmllcnMuXCIpO1xuICB9XG4gIGVsLndyYXBMaXN0ZW5lcnMgPSBmdW5jdGlvbiAoY29kZSkgeyByZXR1cm4gKFwiX2coXCIgKyBjb2RlICsgXCIsXCIgKyAoZGlyLnZhbHVlKSArIFwiKVwiKTsgfTtcbn1cblxuLyogICovXG5cbmZ1bmN0aW9uIGJpbmQkMSAoZWwsIGRpcikge1xuICBlbC53cmFwRGF0YSA9IGZ1bmN0aW9uIChjb2RlKSB7XG4gICAgcmV0dXJuIChcIl9iKFwiICsgY29kZSArIFwiLCdcIiArIChlbC50YWcpICsgXCInLFwiICsgKGRpci52YWx1ZSkgKyBcIixcIiArIChkaXIubW9kaWZpZXJzICYmIGRpci5tb2RpZmllcnMucHJvcCA/ICd0cnVlJyA6ICdmYWxzZScpICsgKGRpci5tb2RpZmllcnMgJiYgZGlyLm1vZGlmaWVycy5zeW5jID8gJyx0cnVlJyA6ICcnKSArIFwiKVwiKVxuICB9O1xufVxuXG4vKiAgKi9cblxudmFyIGJhc2VEaXJlY3RpdmVzID0ge1xuICBvbjogb24sXG4gIGJpbmQ6IGJpbmQkMSxcbiAgY2xvYWs6IG5vb3Bcbn07XG5cbi8qICAqL1xuXG5cblxuXG5cbnZhciBDb2RlZ2VuU3RhdGUgPSBmdW5jdGlvbiBDb2RlZ2VuU3RhdGUgKG9wdGlvbnMpIHtcbiAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgdGhpcy53YXJuID0gb3B0aW9ucy53YXJuIHx8IGJhc2VXYXJuO1xuICB0aGlzLnRyYW5zZm9ybXMgPSBwbHVja01vZHVsZUZ1bmN0aW9uKG9wdGlvbnMubW9kdWxlcywgJ3RyYW5zZm9ybUNvZGUnKTtcbiAgdGhpcy5kYXRhR2VuRm5zID0gcGx1Y2tNb2R1bGVGdW5jdGlvbihvcHRpb25zLm1vZHVsZXMsICdnZW5EYXRhJyk7XG4gIHRoaXMuZGlyZWN0aXZlcyA9IGV4dGVuZChleHRlbmQoe30sIGJhc2VEaXJlY3RpdmVzKSwgb3B0aW9ucy5kaXJlY3RpdmVzKTtcbiAgdmFyIGlzUmVzZXJ2ZWRUYWcgPSBvcHRpb25zLmlzUmVzZXJ2ZWRUYWcgfHwgbm87XG4gIHRoaXMubWF5YmVDb21wb25lbnQgPSBmdW5jdGlvbiAoZWwpIHsgcmV0dXJuICEhZWwuY29tcG9uZW50IHx8ICFpc1Jlc2VydmVkVGFnKGVsLnRhZyk7IH07XG4gIHRoaXMub25jZUlkID0gMDtcbiAgdGhpcy5zdGF0aWNSZW5kZXJGbnMgPSBbXTtcbiAgdGhpcy5wcmUgPSBmYWxzZTtcbn07XG5cblxuXG5mdW5jdGlvbiBnZW5lcmF0ZSAoXG4gIGFzdCxcbiAgb3B0aW9uc1xuKSB7XG4gIHZhciBzdGF0ZSA9IG5ldyBDb2RlZ2VuU3RhdGUob3B0aW9ucyk7XG4gIHZhciBjb2RlID0gYXN0ID8gZ2VuRWxlbWVudChhc3QsIHN0YXRlKSA6ICdfYyhcImRpdlwiKSc7XG4gIHJldHVybiB7XG4gICAgcmVuZGVyOiAoXCJ3aXRoKHRoaXMpe3JldHVybiBcIiArIGNvZGUgKyBcIn1cIiksXG4gICAgc3RhdGljUmVuZGVyRm5zOiBzdGF0ZS5zdGF0aWNSZW5kZXJGbnNcbiAgfVxufVxuXG5mdW5jdGlvbiBnZW5FbGVtZW50IChlbCwgc3RhdGUpIHtcbiAgaWYgKGVsLnBhcmVudCkge1xuICAgIGVsLnByZSA9IGVsLnByZSB8fCBlbC5wYXJlbnQucHJlO1xuICB9XG5cbiAgaWYgKGVsLnN0YXRpY1Jvb3QgJiYgIWVsLnN0YXRpY1Byb2Nlc3NlZCkge1xuICAgIHJldHVybiBnZW5TdGF0aWMoZWwsIHN0YXRlKVxuICB9IGVsc2UgaWYgKGVsLm9uY2UgJiYgIWVsLm9uY2VQcm9jZXNzZWQpIHtcbiAgICByZXR1cm4gZ2VuT25jZShlbCwgc3RhdGUpXG4gIH0gZWxzZSBpZiAoZWwuZm9yICYmICFlbC5mb3JQcm9jZXNzZWQpIHtcbiAgICByZXR1cm4gZ2VuRm9yKGVsLCBzdGF0ZSlcbiAgfSBlbHNlIGlmIChlbC5pZiAmJiAhZWwuaWZQcm9jZXNzZWQpIHtcbiAgICByZXR1cm4gZ2VuSWYoZWwsIHN0YXRlKVxuICB9IGVsc2UgaWYgKGVsLnRhZyA9PT0gJ3RlbXBsYXRlJyAmJiAhZWwuc2xvdFRhcmdldCAmJiAhc3RhdGUucHJlKSB7XG4gICAgcmV0dXJuIGdlbkNoaWxkcmVuKGVsLCBzdGF0ZSkgfHwgJ3ZvaWQgMCdcbiAgfSBlbHNlIGlmIChlbC50YWcgPT09ICdzbG90Jykge1xuICAgIHJldHVybiBnZW5TbG90KGVsLCBzdGF0ZSlcbiAgfSBlbHNlIHtcbiAgICAvLyBjb21wb25lbnQgb3IgZWxlbWVudFxuICAgIHZhciBjb2RlO1xuICAgIGlmIChlbC5jb21wb25lbnQpIHtcbiAgICAgIGNvZGUgPSBnZW5Db21wb25lbnQoZWwuY29tcG9uZW50LCBlbCwgc3RhdGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgZGF0YTtcbiAgICAgIGlmICghZWwucGxhaW4gfHwgKGVsLnByZSAmJiBzdGF0ZS5tYXliZUNvbXBvbmVudChlbCkpKSB7XG4gICAgICAgIGRhdGEgPSBnZW5EYXRhJDIoZWwsIHN0YXRlKTtcbiAgICAgIH1cblxuICAgICAgdmFyIGNoaWxkcmVuID0gZWwuaW5saW5lVGVtcGxhdGUgPyBudWxsIDogZ2VuQ2hpbGRyZW4oZWwsIHN0YXRlLCB0cnVlKTtcbiAgICAgIGNvZGUgPSBcIl9jKCdcIiArIChlbC50YWcpICsgXCInXCIgKyAoZGF0YSA/IChcIixcIiArIGRhdGEpIDogJycpICsgKGNoaWxkcmVuID8gKFwiLFwiICsgY2hpbGRyZW4pIDogJycpICsgXCIpXCI7XG4gICAgfVxuICAgIC8vIG1vZHVsZSB0cmFuc2Zvcm1zXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdGF0ZS50cmFuc2Zvcm1zLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb2RlID0gc3RhdGUudHJhbnNmb3Jtc1tpXShlbCwgY29kZSk7XG4gICAgfVxuICAgIHJldHVybiBjb2RlXG4gIH1cbn1cblxuLy8gaG9pc3Qgc3RhdGljIHN1Yi10cmVlcyBvdXRcbmZ1bmN0aW9uIGdlblN0YXRpYyAoZWwsIHN0YXRlKSB7XG4gIGVsLnN0YXRpY1Byb2Nlc3NlZCA9IHRydWU7XG4gIC8vIFNvbWUgZWxlbWVudHMgKHRlbXBsYXRlcykgbmVlZCB0byBiZWhhdmUgZGlmZmVyZW50bHkgaW5zaWRlIG9mIGEgdi1wcmVcbiAgLy8gbm9kZS4gIEFsbCBwcmUgbm9kZXMgYXJlIHN0YXRpYyByb290cywgc28gd2UgY2FuIHVzZSB0aGlzIGFzIGEgbG9jYXRpb24gdG9cbiAgLy8gd3JhcCBhIHN0YXRlIGNoYW5nZSBhbmQgcmVzZXQgaXQgdXBvbiBleGl0aW5nIHRoZSBwcmUgbm9kZS5cbiAgdmFyIG9yaWdpbmFsUHJlU3RhdGUgPSBzdGF0ZS5wcmU7XG4gIGlmIChlbC5wcmUpIHtcbiAgICBzdGF0ZS5wcmUgPSBlbC5wcmU7XG4gIH1cbiAgc3RhdGUuc3RhdGljUmVuZGVyRm5zLnB1c2goKFwid2l0aCh0aGlzKXtyZXR1cm4gXCIgKyAoZ2VuRWxlbWVudChlbCwgc3RhdGUpKSArIFwifVwiKSk7XG4gIHN0YXRlLnByZSA9IG9yaWdpbmFsUHJlU3RhdGU7XG4gIHJldHVybiAoXCJfbShcIiArIChzdGF0ZS5zdGF0aWNSZW5kZXJGbnMubGVuZ3RoIC0gMSkgKyAoZWwuc3RhdGljSW5Gb3IgPyAnLHRydWUnIDogJycpICsgXCIpXCIpXG59XG5cbi8vIHYtb25jZVxuZnVuY3Rpb24gZ2VuT25jZSAoZWwsIHN0YXRlKSB7XG4gIGVsLm9uY2VQcm9jZXNzZWQgPSB0cnVlO1xuICBpZiAoZWwuaWYgJiYgIWVsLmlmUHJvY2Vzc2VkKSB7XG4gICAgcmV0dXJuIGdlbklmKGVsLCBzdGF0ZSlcbiAgfSBlbHNlIGlmIChlbC5zdGF0aWNJbkZvcikge1xuICAgIHZhciBrZXkgPSAnJztcbiAgICB2YXIgcGFyZW50ID0gZWwucGFyZW50O1xuICAgIHdoaWxlIChwYXJlbnQpIHtcbiAgICAgIGlmIChwYXJlbnQuZm9yKSB7XG4gICAgICAgIGtleSA9IHBhcmVudC5rZXk7XG4gICAgICAgIGJyZWFrXG4gICAgICB9XG4gICAgICBwYXJlbnQgPSBwYXJlbnQucGFyZW50O1xuICAgIH1cbiAgICBpZiAoIWtleSkge1xuICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBzdGF0ZS53YXJuKFxuICAgICAgICBcInYtb25jZSBjYW4gb25seSBiZSB1c2VkIGluc2lkZSB2LWZvciB0aGF0IGlzIGtleWVkLiBcIixcbiAgICAgICAgZWwucmF3QXR0cnNNYXBbJ3Ytb25jZSddXG4gICAgICApO1xuICAgICAgcmV0dXJuIGdlbkVsZW1lbnQoZWwsIHN0YXRlKVxuICAgIH1cbiAgICByZXR1cm4gKFwiX28oXCIgKyAoZ2VuRWxlbWVudChlbCwgc3RhdGUpKSArIFwiLFwiICsgKHN0YXRlLm9uY2VJZCsrKSArIFwiLFwiICsga2V5ICsgXCIpXCIpXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGdlblN0YXRpYyhlbCwgc3RhdGUpXG4gIH1cbn1cblxuZnVuY3Rpb24gZ2VuSWYgKFxuICBlbCxcbiAgc3RhdGUsXG4gIGFsdEdlbixcbiAgYWx0RW1wdHlcbikge1xuICBlbC5pZlByb2Nlc3NlZCA9IHRydWU7IC8vIGF2b2lkIHJlY3Vyc2lvblxuICByZXR1cm4gZ2VuSWZDb25kaXRpb25zKGVsLmlmQ29uZGl0aW9ucy5zbGljZSgpLCBzdGF0ZSwgYWx0R2VuLCBhbHRFbXB0eSlcbn1cblxuZnVuY3Rpb24gZ2VuSWZDb25kaXRpb25zIChcbiAgY29uZGl0aW9ucyxcbiAgc3RhdGUsXG4gIGFsdEdlbixcbiAgYWx0RW1wdHlcbikge1xuICBpZiAoIWNvbmRpdGlvbnMubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGFsdEVtcHR5IHx8ICdfZSgpJ1xuICB9XG5cbiAgdmFyIGNvbmRpdGlvbiA9IGNvbmRpdGlvbnMuc2hpZnQoKTtcbiAgaWYgKGNvbmRpdGlvbi5leHApIHtcbiAgICByZXR1cm4gKFwiKFwiICsgKGNvbmRpdGlvbi5leHApICsgXCIpP1wiICsgKGdlblRlcm5hcnlFeHAoY29uZGl0aW9uLmJsb2NrKSkgKyBcIjpcIiArIChnZW5JZkNvbmRpdGlvbnMoY29uZGl0aW9ucywgc3RhdGUsIGFsdEdlbiwgYWx0RW1wdHkpKSlcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gKFwiXCIgKyAoZ2VuVGVybmFyeUV4cChjb25kaXRpb24uYmxvY2spKSlcbiAgfVxuXG4gIC8vIHYtaWYgd2l0aCB2LW9uY2Ugc2hvdWxkIGdlbmVyYXRlIGNvZGUgbGlrZSAoYSk/X20oMCk6X20oMSlcbiAgZnVuY3Rpb24gZ2VuVGVybmFyeUV4cCAoZWwpIHtcbiAgICByZXR1cm4gYWx0R2VuXG4gICAgICA/IGFsdEdlbihlbCwgc3RhdGUpXG4gICAgICA6IGVsLm9uY2VcbiAgICAgICAgPyBnZW5PbmNlKGVsLCBzdGF0ZSlcbiAgICAgICAgOiBnZW5FbGVtZW50KGVsLCBzdGF0ZSlcbiAgfVxufVxuXG5mdW5jdGlvbiBnZW5Gb3IgKFxuICBlbCxcbiAgc3RhdGUsXG4gIGFsdEdlbixcbiAgYWx0SGVscGVyXG4pIHtcbiAgdmFyIGV4cCA9IGVsLmZvcjtcbiAgdmFyIGFsaWFzID0gZWwuYWxpYXM7XG4gIHZhciBpdGVyYXRvcjEgPSBlbC5pdGVyYXRvcjEgPyAoXCIsXCIgKyAoZWwuaXRlcmF0b3IxKSkgOiAnJztcbiAgdmFyIGl0ZXJhdG9yMiA9IGVsLml0ZXJhdG9yMiA/IChcIixcIiArIChlbC5pdGVyYXRvcjIpKSA6ICcnO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmXG4gICAgc3RhdGUubWF5YmVDb21wb25lbnQoZWwpICYmXG4gICAgZWwudGFnICE9PSAnc2xvdCcgJiZcbiAgICBlbC50YWcgIT09ICd0ZW1wbGF0ZScgJiZcbiAgICAhZWwua2V5XG4gICkge1xuICAgIHN0YXRlLndhcm4oXG4gICAgICBcIjxcIiArIChlbC50YWcpICsgXCIgdi1mb3I9XFxcIlwiICsgYWxpYXMgKyBcIiBpbiBcIiArIGV4cCArIFwiXFxcIj46IGNvbXBvbmVudCBsaXN0cyByZW5kZXJlZCB3aXRoIFwiICtcbiAgICAgIFwidi1mb3Igc2hvdWxkIGhhdmUgZXhwbGljaXQga2V5cy4gXCIgK1xuICAgICAgXCJTZWUgaHR0cHM6Ly92dWVqcy5vcmcvZ3VpZGUvbGlzdC5odG1sI2tleSBmb3IgbW9yZSBpbmZvLlwiLFxuICAgICAgZWwucmF3QXR0cnNNYXBbJ3YtZm9yJ10sXG4gICAgICB0cnVlIC8qIHRpcCAqL1xuICAgICk7XG4gIH1cblxuICBlbC5mb3JQcm9jZXNzZWQgPSB0cnVlOyAvLyBhdm9pZCByZWN1cnNpb25cbiAgcmV0dXJuIChhbHRIZWxwZXIgfHwgJ19sJykgKyBcIigoXCIgKyBleHAgKyBcIiksXCIgK1xuICAgIFwiZnVuY3Rpb24oXCIgKyBhbGlhcyArIGl0ZXJhdG9yMSArIGl0ZXJhdG9yMiArIFwiKXtcIiArXG4gICAgICBcInJldHVybiBcIiArICgoYWx0R2VuIHx8IGdlbkVsZW1lbnQpKGVsLCBzdGF0ZSkpICtcbiAgICAnfSknXG59XG5cbmZ1bmN0aW9uIGdlbkRhdGEkMiAoZWwsIHN0YXRlKSB7XG4gIHZhciBkYXRhID0gJ3snO1xuXG4gIC8vIGRpcmVjdGl2ZXMgZmlyc3QuXG4gIC8vIGRpcmVjdGl2ZXMgbWF5IG11dGF0ZSB0aGUgZWwncyBvdGhlciBwcm9wZXJ0aWVzIGJlZm9yZSB0aGV5IGFyZSBnZW5lcmF0ZWQuXG4gIHZhciBkaXJzID0gZ2VuRGlyZWN0aXZlcyhlbCwgc3RhdGUpO1xuICBpZiAoZGlycykgeyBkYXRhICs9IGRpcnMgKyAnLCc7IH1cblxuICAvLyBrZXlcbiAgaWYgKGVsLmtleSkge1xuICAgIGRhdGEgKz0gXCJrZXk6XCIgKyAoZWwua2V5KSArIFwiLFwiO1xuICB9XG4gIC8vIHJlZlxuICBpZiAoZWwucmVmKSB7XG4gICAgZGF0YSArPSBcInJlZjpcIiArIChlbC5yZWYpICsgXCIsXCI7XG4gIH1cbiAgaWYgKGVsLnJlZkluRm9yKSB7XG4gICAgZGF0YSArPSBcInJlZkluRm9yOnRydWUsXCI7XG4gIH1cbiAgLy8gcHJlXG4gIGlmIChlbC5wcmUpIHtcbiAgICBkYXRhICs9IFwicHJlOnRydWUsXCI7XG4gIH1cbiAgLy8gcmVjb3JkIG9yaWdpbmFsIHRhZyBuYW1lIGZvciBjb21wb25lbnRzIHVzaW5nIFwiaXNcIiBhdHRyaWJ1dGVcbiAgaWYgKGVsLmNvbXBvbmVudCkge1xuICAgIGRhdGEgKz0gXCJ0YWc6XFxcIlwiICsgKGVsLnRhZykgKyBcIlxcXCIsXCI7XG4gIH1cbiAgLy8gbW9kdWxlIGRhdGEgZ2VuZXJhdGlvbiBmdW5jdGlvbnNcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdGF0ZS5kYXRhR2VuRm5zLmxlbmd0aDsgaSsrKSB7XG4gICAgZGF0YSArPSBzdGF0ZS5kYXRhR2VuRm5zW2ldKGVsKTtcbiAgfVxuICAvLyBhdHRyaWJ1dGVzXG4gIGlmIChlbC5hdHRycykge1xuICAgIGRhdGEgKz0gXCJhdHRyczpcIiArIChnZW5Qcm9wcyhlbC5hdHRycykpICsgXCIsXCI7XG4gIH1cbiAgLy8gRE9NIHByb3BzXG4gIGlmIChlbC5wcm9wcykge1xuICAgIGRhdGEgKz0gXCJkb21Qcm9wczpcIiArIChnZW5Qcm9wcyhlbC5wcm9wcykpICsgXCIsXCI7XG4gIH1cbiAgLy8gZXZlbnQgaGFuZGxlcnNcbiAgaWYgKGVsLmV2ZW50cykge1xuICAgIGRhdGEgKz0gKGdlbkhhbmRsZXJzKGVsLmV2ZW50cywgZmFsc2UpKSArIFwiLFwiO1xuICB9XG4gIGlmIChlbC5uYXRpdmVFdmVudHMpIHtcbiAgICBkYXRhICs9IChnZW5IYW5kbGVycyhlbC5uYXRpdmVFdmVudHMsIHRydWUpKSArIFwiLFwiO1xuICB9XG4gIC8vIHNsb3QgdGFyZ2V0XG4gIC8vIG9ubHkgZm9yIG5vbi1zY29wZWQgc2xvdHNcbiAgaWYgKGVsLnNsb3RUYXJnZXQgJiYgIWVsLnNsb3RTY29wZSkge1xuICAgIGRhdGEgKz0gXCJzbG90OlwiICsgKGVsLnNsb3RUYXJnZXQpICsgXCIsXCI7XG4gIH1cbiAgLy8gc2NvcGVkIHNsb3RzXG4gIGlmIChlbC5zY29wZWRTbG90cykge1xuICAgIGRhdGEgKz0gKGdlblNjb3BlZFNsb3RzKGVsLCBlbC5zY29wZWRTbG90cywgc3RhdGUpKSArIFwiLFwiO1xuICB9XG4gIC8vIGNvbXBvbmVudCB2LW1vZGVsXG4gIGlmIChlbC5tb2RlbCkge1xuICAgIGRhdGEgKz0gXCJtb2RlbDp7dmFsdWU6XCIgKyAoZWwubW9kZWwudmFsdWUpICsgXCIsY2FsbGJhY2s6XCIgKyAoZWwubW9kZWwuY2FsbGJhY2spICsgXCIsZXhwcmVzc2lvbjpcIiArIChlbC5tb2RlbC5leHByZXNzaW9uKSArIFwifSxcIjtcbiAgfVxuICAvLyBpbmxpbmUtdGVtcGxhdGVcbiAgaWYgKGVsLmlubGluZVRlbXBsYXRlKSB7XG4gICAgdmFyIGlubGluZVRlbXBsYXRlID0gZ2VuSW5saW5lVGVtcGxhdGUoZWwsIHN0YXRlKTtcbiAgICBpZiAoaW5saW5lVGVtcGxhdGUpIHtcbiAgICAgIGRhdGEgKz0gaW5saW5lVGVtcGxhdGUgKyBcIixcIjtcbiAgICB9XG4gIH1cbiAgZGF0YSA9IGRhdGEucmVwbGFjZSgvLCQvLCAnJykgKyAnfSc7XG4gIC8vIHYtYmluZCBkeW5hbWljIGFyZ3VtZW50IHdyYXBcbiAgLy8gdi1iaW5kIHdpdGggZHluYW1pYyBhcmd1bWVudHMgbXVzdCBiZSBhcHBsaWVkIHVzaW5nIHRoZSBzYW1lIHYtYmluZCBvYmplY3RcbiAgLy8gbWVyZ2UgaGVscGVyIHNvIHRoYXQgY2xhc3Mvc3R5bGUvbXVzdFVzZVByb3AgYXR0cnMgYXJlIGhhbmRsZWQgY29ycmVjdGx5LlxuICBpZiAoZWwuZHluYW1pY0F0dHJzKSB7XG4gICAgZGF0YSA9IFwiX2IoXCIgKyBkYXRhICsgXCIsXFxcIlwiICsgKGVsLnRhZykgKyBcIlxcXCIsXCIgKyAoZ2VuUHJvcHMoZWwuZHluYW1pY0F0dHJzKSkgKyBcIilcIjtcbiAgfVxuICAvLyB2LWJpbmQgZGF0YSB3cmFwXG4gIGlmIChlbC53cmFwRGF0YSkge1xuICAgIGRhdGEgPSBlbC53cmFwRGF0YShkYXRhKTtcbiAgfVxuICAvLyB2LW9uIGRhdGEgd3JhcFxuICBpZiAoZWwud3JhcExpc3RlbmVycykge1xuICAgIGRhdGEgPSBlbC53cmFwTGlzdGVuZXJzKGRhdGEpO1xuICB9XG4gIHJldHVybiBkYXRhXG59XG5cbmZ1bmN0aW9uIGdlbkRpcmVjdGl2ZXMgKGVsLCBzdGF0ZSkge1xuICB2YXIgZGlycyA9IGVsLmRpcmVjdGl2ZXM7XG4gIGlmICghZGlycykgeyByZXR1cm4gfVxuICB2YXIgcmVzID0gJ2RpcmVjdGl2ZXM6Wyc7XG4gIHZhciBoYXNSdW50aW1lID0gZmFsc2U7XG4gIHZhciBpLCBsLCBkaXIsIG5lZWRSdW50aW1lO1xuICBmb3IgKGkgPSAwLCBsID0gZGlycy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICBkaXIgPSBkaXJzW2ldO1xuICAgIG5lZWRSdW50aW1lID0gdHJ1ZTtcbiAgICB2YXIgZ2VuID0gc3RhdGUuZGlyZWN0aXZlc1tkaXIubmFtZV07XG4gICAgaWYgKGdlbikge1xuICAgICAgLy8gY29tcGlsZS10aW1lIGRpcmVjdGl2ZSB0aGF0IG1hbmlwdWxhdGVzIEFTVC5cbiAgICAgIC8vIHJldHVybnMgdHJ1ZSBpZiBpdCBhbHNvIG5lZWRzIGEgcnVudGltZSBjb3VudGVycGFydC5cbiAgICAgIG5lZWRSdW50aW1lID0gISFnZW4oZWwsIGRpciwgc3RhdGUud2Fybik7XG4gICAgfVxuICAgIGlmIChuZWVkUnVudGltZSkge1xuICAgICAgaGFzUnVudGltZSA9IHRydWU7XG4gICAgICByZXMgKz0gXCJ7bmFtZTpcXFwiXCIgKyAoZGlyLm5hbWUpICsgXCJcXFwiLHJhd05hbWU6XFxcIlwiICsgKGRpci5yYXdOYW1lKSArIFwiXFxcIlwiICsgKGRpci52YWx1ZSA/IChcIix2YWx1ZTooXCIgKyAoZGlyLnZhbHVlKSArIFwiKSxleHByZXNzaW9uOlwiICsgKEpTT04uc3RyaW5naWZ5KGRpci52YWx1ZSkpKSA6ICcnKSArIChkaXIuYXJnID8gKFwiLGFyZzpcIiArIChkaXIuaXNEeW5hbWljQXJnID8gZGlyLmFyZyA6IChcIlxcXCJcIiArIChkaXIuYXJnKSArIFwiXFxcIlwiKSkpIDogJycpICsgKGRpci5tb2RpZmllcnMgPyAoXCIsbW9kaWZpZXJzOlwiICsgKEpTT04uc3RyaW5naWZ5KGRpci5tb2RpZmllcnMpKSkgOiAnJykgKyBcIn0sXCI7XG4gICAgfVxuICB9XG4gIGlmIChoYXNSdW50aW1lKSB7XG4gICAgcmV0dXJuIHJlcy5zbGljZSgwLCAtMSkgKyAnXSdcbiAgfVxufVxuXG5mdW5jdGlvbiBnZW5JbmxpbmVUZW1wbGF0ZSAoZWwsIHN0YXRlKSB7XG4gIHZhciBhc3QgPSBlbC5jaGlsZHJlblswXTtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgKFxuICAgIGVsLmNoaWxkcmVuLmxlbmd0aCAhPT0gMSB8fCBhc3QudHlwZSAhPT0gMVxuICApKSB7XG4gICAgc3RhdGUud2FybihcbiAgICAgICdJbmxpbmUtdGVtcGxhdGUgY29tcG9uZW50cyBtdXN0IGhhdmUgZXhhY3RseSBvbmUgY2hpbGQgZWxlbWVudC4nLFxuICAgICAgeyBzdGFydDogZWwuc3RhcnQgfVxuICAgICk7XG4gIH1cbiAgaWYgKGFzdCAmJiBhc3QudHlwZSA9PT0gMSkge1xuICAgIHZhciBpbmxpbmVSZW5kZXJGbnMgPSBnZW5lcmF0ZShhc3QsIHN0YXRlLm9wdGlvbnMpO1xuICAgIHJldHVybiAoXCJpbmxpbmVUZW1wbGF0ZTp7cmVuZGVyOmZ1bmN0aW9uKCl7XCIgKyAoaW5saW5lUmVuZGVyRm5zLnJlbmRlcikgKyBcIn0sc3RhdGljUmVuZGVyRm5zOltcIiArIChpbmxpbmVSZW5kZXJGbnMuc3RhdGljUmVuZGVyRm5zLm1hcChmdW5jdGlvbiAoY29kZSkgeyByZXR1cm4gKFwiZnVuY3Rpb24oKXtcIiArIGNvZGUgKyBcIn1cIik7IH0pLmpvaW4oJywnKSkgKyBcIl19XCIpXG4gIH1cbn1cblxuZnVuY3Rpb24gZ2VuU2NvcGVkU2xvdHMgKFxuICBlbCxcbiAgc2xvdHMsXG4gIHN0YXRlXG4pIHtcbiAgLy8gYnkgZGVmYXVsdCBzY29wZWQgc2xvdHMgYXJlIGNvbnNpZGVyZWQgXCJzdGFibGVcIiwgdGhpcyBhbGxvd3MgY2hpbGRcbiAgLy8gY29tcG9uZW50cyB3aXRoIG9ubHkgc2NvcGVkIHNsb3RzIHRvIHNraXAgZm9yY2VkIHVwZGF0ZXMgZnJvbSBwYXJlbnQuXG4gIC8vIGJ1dCBpbiBzb21lIGNhc2VzIHdlIGhhdmUgdG8gYmFpbC1vdXQgb2YgdGhpcyBvcHRpbWl6YXRpb25cbiAgLy8gZm9yIGV4YW1wbGUgaWYgdGhlIHNsb3QgY29udGFpbnMgZHluYW1pYyBuYW1lcywgaGFzIHYtaWYgb3Igdi1mb3Igb24gdGhlbS4uLlxuICB2YXIgbmVlZHNGb3JjZVVwZGF0ZSA9IGVsLmZvciB8fCBPYmplY3Qua2V5cyhzbG90cykuc29tZShmdW5jdGlvbiAoa2V5KSB7XG4gICAgdmFyIHNsb3QgPSBzbG90c1trZXldO1xuICAgIHJldHVybiAoXG4gICAgICBzbG90LnNsb3RUYXJnZXREeW5hbWljIHx8XG4gICAgICBzbG90LmlmIHx8XG4gICAgICBzbG90LmZvciB8fFxuICAgICAgY29udGFpbnNTbG90Q2hpbGQoc2xvdCkgLy8gaXMgcGFzc2luZyBkb3duIHNsb3QgZnJvbSBwYXJlbnQgd2hpY2ggbWF5IGJlIGR5bmFtaWNcbiAgICApXG4gIH0pO1xuXG4gIC8vICM5NTM0OiBpZiBhIGNvbXBvbmVudCB3aXRoIHNjb3BlZCBzbG90cyBpcyBpbnNpZGUgYSBjb25kaXRpb25hbCBicmFuY2gsXG4gIC8vIGl0J3MgcG9zc2libGUgZm9yIHRoZSBzYW1lIGNvbXBvbmVudCB0byBiZSByZXVzZWQgYnV0IHdpdGggZGlmZmVyZW50XG4gIC8vIGNvbXBpbGVkIHNsb3QgY29udGVudC4gVG8gYXZvaWQgdGhhdCwgd2UgZ2VuZXJhdGUgYSB1bmlxdWUga2V5IGJhc2VkIG9uXG4gIC8vIHRoZSBnZW5lcmF0ZWQgY29kZSBvZiBhbGwgdGhlIHNsb3QgY29udGVudHMuXG4gIHZhciBuZWVkc0tleSA9ICEhZWwuaWY7XG5cbiAgLy8gT1Igd2hlbiBpdCBpcyBpbnNpZGUgYW5vdGhlciBzY29wZWQgc2xvdCBvciB2LWZvciAodGhlIHJlYWN0aXZpdHkgbWF5IGJlXG4gIC8vIGRpc2Nvbm5lY3RlZCBkdWUgdG8gdGhlIGludGVybWVkaWF0ZSBzY29wZSB2YXJpYWJsZSlcbiAgLy8gIzk0MzgsICM5NTA2XG4gIC8vIFRPRE86IHRoaXMgY2FuIGJlIGZ1cnRoZXIgb3B0aW1pemVkIGJ5IHByb3Blcmx5IGFuYWx5emluZyBpbi1zY29wZSBiaW5kaW5nc1xuICAvLyBhbmQgc2tpcCBmb3JjZSB1cGRhdGluZyBvbmVzIHRoYXQgZG8gbm90IGFjdHVhbGx5IHVzZSBzY29wZSB2YXJpYWJsZXMuXG4gIGlmICghbmVlZHNGb3JjZVVwZGF0ZSkge1xuICAgIHZhciBwYXJlbnQgPSBlbC5wYXJlbnQ7XG4gICAgd2hpbGUgKHBhcmVudCkge1xuICAgICAgaWYgKFxuICAgICAgICAocGFyZW50LnNsb3RTY29wZSAmJiBwYXJlbnQuc2xvdFNjb3BlICE9PSBlbXB0eVNsb3RTY29wZVRva2VuKSB8fFxuICAgICAgICBwYXJlbnQuZm9yXG4gICAgICApIHtcbiAgICAgICAgbmVlZHNGb3JjZVVwZGF0ZSA9IHRydWU7XG4gICAgICAgIGJyZWFrXG4gICAgICB9XG4gICAgICBpZiAocGFyZW50LmlmKSB7XG4gICAgICAgIG5lZWRzS2V5ID0gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIHBhcmVudCA9IHBhcmVudC5wYXJlbnQ7XG4gICAgfVxuICB9XG5cbiAgdmFyIGdlbmVyYXRlZFNsb3RzID0gT2JqZWN0LmtleXMoc2xvdHMpXG4gICAgLm1hcChmdW5jdGlvbiAoa2V5KSB7IHJldHVybiBnZW5TY29wZWRTbG90KHNsb3RzW2tleV0sIHN0YXRlKTsgfSlcbiAgICAuam9pbignLCcpO1xuXG4gIHJldHVybiAoXCJzY29wZWRTbG90czpfdShbXCIgKyBnZW5lcmF0ZWRTbG90cyArIFwiXVwiICsgKG5lZWRzRm9yY2VVcGRhdGUgPyBcIixudWxsLHRydWVcIiA6IFwiXCIpICsgKCFuZWVkc0ZvcmNlVXBkYXRlICYmIG5lZWRzS2V5ID8gKFwiLG51bGwsZmFsc2UsXCIgKyAoaGFzaChnZW5lcmF0ZWRTbG90cykpKSA6IFwiXCIpICsgXCIpXCIpXG59XG5cbmZ1bmN0aW9uIGhhc2goc3RyKSB7XG4gIHZhciBoYXNoID0gNTM4MTtcbiAgdmFyIGkgPSBzdHIubGVuZ3RoO1xuICB3aGlsZShpKSB7XG4gICAgaGFzaCA9IChoYXNoICogMzMpIF4gc3RyLmNoYXJDb2RlQXQoLS1pKTtcbiAgfVxuICByZXR1cm4gaGFzaCA+Pj4gMFxufVxuXG5mdW5jdGlvbiBjb250YWluc1Nsb3RDaGlsZCAoZWwpIHtcbiAgaWYgKGVsLnR5cGUgPT09IDEpIHtcbiAgICBpZiAoZWwudGFnID09PSAnc2xvdCcpIHtcbiAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuICAgIHJldHVybiBlbC5jaGlsZHJlbi5zb21lKGNvbnRhaW5zU2xvdENoaWxkKVxuICB9XG4gIHJldHVybiBmYWxzZVxufVxuXG5mdW5jdGlvbiBnZW5TY29wZWRTbG90IChcbiAgZWwsXG4gIHN0YXRlXG4pIHtcbiAgdmFyIGlzTGVnYWN5U3ludGF4ID0gZWwuYXR0cnNNYXBbJ3Nsb3Qtc2NvcGUnXTtcbiAgaWYgKGVsLmlmICYmICFlbC5pZlByb2Nlc3NlZCAmJiAhaXNMZWdhY3lTeW50YXgpIHtcbiAgICByZXR1cm4gZ2VuSWYoZWwsIHN0YXRlLCBnZW5TY29wZWRTbG90LCBcIm51bGxcIilcbiAgfVxuICBpZiAoZWwuZm9yICYmICFlbC5mb3JQcm9jZXNzZWQpIHtcbiAgICByZXR1cm4gZ2VuRm9yKGVsLCBzdGF0ZSwgZ2VuU2NvcGVkU2xvdClcbiAgfVxuICB2YXIgc2xvdFNjb3BlID0gZWwuc2xvdFNjb3BlID09PSBlbXB0eVNsb3RTY29wZVRva2VuXG4gICAgPyBcIlwiXG4gICAgOiBTdHJpbmcoZWwuc2xvdFNjb3BlKTtcbiAgdmFyIGZuID0gXCJmdW5jdGlvbihcIiArIHNsb3RTY29wZSArIFwiKXtcIiArXG4gICAgXCJyZXR1cm4gXCIgKyAoZWwudGFnID09PSAndGVtcGxhdGUnXG4gICAgICA/IGVsLmlmICYmIGlzTGVnYWN5U3ludGF4XG4gICAgICAgID8gKFwiKFwiICsgKGVsLmlmKSArIFwiKT9cIiArIChnZW5DaGlsZHJlbihlbCwgc3RhdGUpIHx8ICd1bmRlZmluZWQnKSArIFwiOnVuZGVmaW5lZFwiKVxuICAgICAgICA6IGdlbkNoaWxkcmVuKGVsLCBzdGF0ZSkgfHwgJ3VuZGVmaW5lZCdcbiAgICAgIDogZ2VuRWxlbWVudChlbCwgc3RhdGUpKSArIFwifVwiO1xuICAvLyByZXZlcnNlIHByb3h5IHYtc2xvdCB3aXRob3V0IHNjb3BlIG9uIHRoaXMuJHNsb3RzXG4gIHZhciByZXZlcnNlUHJveHkgPSBzbG90U2NvcGUgPyBcIlwiIDogXCIscHJveHk6dHJ1ZVwiO1xuICByZXR1cm4gKFwie2tleTpcIiArIChlbC5zbG90VGFyZ2V0IHx8IFwiXFxcImRlZmF1bHRcXFwiXCIpICsgXCIsZm46XCIgKyBmbiArIHJldmVyc2VQcm94eSArIFwifVwiKVxufVxuXG5mdW5jdGlvbiBnZW5DaGlsZHJlbiAoXG4gIGVsLFxuICBzdGF0ZSxcbiAgY2hlY2tTa2lwLFxuICBhbHRHZW5FbGVtZW50LFxuICBhbHRHZW5Ob2RlXG4pIHtcbiAgdmFyIGNoaWxkcmVuID0gZWwuY2hpbGRyZW47XG4gIGlmIChjaGlsZHJlbi5sZW5ndGgpIHtcbiAgICB2YXIgZWwkMSA9IGNoaWxkcmVuWzBdO1xuICAgIC8vIG9wdGltaXplIHNpbmdsZSB2LWZvclxuICAgIGlmIChjaGlsZHJlbi5sZW5ndGggPT09IDEgJiZcbiAgICAgIGVsJDEuZm9yICYmXG4gICAgICBlbCQxLnRhZyAhPT0gJ3RlbXBsYXRlJyAmJlxuICAgICAgZWwkMS50YWcgIT09ICdzbG90J1xuICAgICkge1xuICAgICAgdmFyIG5vcm1hbGl6YXRpb25UeXBlID0gY2hlY2tTa2lwXG4gICAgICAgID8gc3RhdGUubWF5YmVDb21wb25lbnQoZWwkMSkgPyBcIiwxXCIgOiBcIiwwXCJcbiAgICAgICAgOiBcIlwiO1xuICAgICAgcmV0dXJuIChcIlwiICsgKChhbHRHZW5FbGVtZW50IHx8IGdlbkVsZW1lbnQpKGVsJDEsIHN0YXRlKSkgKyBub3JtYWxpemF0aW9uVHlwZSlcbiAgICB9XG4gICAgdmFyIG5vcm1hbGl6YXRpb25UeXBlJDEgPSBjaGVja1NraXBcbiAgICAgID8gZ2V0Tm9ybWFsaXphdGlvblR5cGUoY2hpbGRyZW4sIHN0YXRlLm1heWJlQ29tcG9uZW50KVxuICAgICAgOiAwO1xuICAgIHZhciBnZW4gPSBhbHRHZW5Ob2RlIHx8IGdlbk5vZGU7XG4gICAgcmV0dXJuIChcIltcIiArIChjaGlsZHJlbi5tYXAoZnVuY3Rpb24gKGMpIHsgcmV0dXJuIGdlbihjLCBzdGF0ZSk7IH0pLmpvaW4oJywnKSkgKyBcIl1cIiArIChub3JtYWxpemF0aW9uVHlwZSQxID8gKFwiLFwiICsgbm9ybWFsaXphdGlvblR5cGUkMSkgOiAnJykpXG4gIH1cbn1cblxuLy8gZGV0ZXJtaW5lIHRoZSBub3JtYWxpemF0aW9uIG5lZWRlZCBmb3IgdGhlIGNoaWxkcmVuIGFycmF5LlxuLy8gMDogbm8gbm9ybWFsaXphdGlvbiBuZWVkZWRcbi8vIDE6IHNpbXBsZSBub3JtYWxpemF0aW9uIG5lZWRlZCAocG9zc2libGUgMS1sZXZlbCBkZWVwIG5lc3RlZCBhcnJheSlcbi8vIDI6IGZ1bGwgbm9ybWFsaXphdGlvbiBuZWVkZWRcbmZ1bmN0aW9uIGdldE5vcm1hbGl6YXRpb25UeXBlIChcbiAgY2hpbGRyZW4sXG4gIG1heWJlQ29tcG9uZW50XG4pIHtcbiAgdmFyIHJlcyA9IDA7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgZWwgPSBjaGlsZHJlbltpXTtcbiAgICBpZiAoZWwudHlwZSAhPT0gMSkge1xuICAgICAgY29udGludWVcbiAgICB9XG4gICAgaWYgKG5lZWRzTm9ybWFsaXphdGlvbihlbCkgfHxcbiAgICAgICAgKGVsLmlmQ29uZGl0aW9ucyAmJiBlbC5pZkNvbmRpdGlvbnMuc29tZShmdW5jdGlvbiAoYykgeyByZXR1cm4gbmVlZHNOb3JtYWxpemF0aW9uKGMuYmxvY2spOyB9KSkpIHtcbiAgICAgIHJlcyA9IDI7XG4gICAgICBicmVha1xuICAgIH1cbiAgICBpZiAobWF5YmVDb21wb25lbnQoZWwpIHx8XG4gICAgICAgIChlbC5pZkNvbmRpdGlvbnMgJiYgZWwuaWZDb25kaXRpb25zLnNvbWUoZnVuY3Rpb24gKGMpIHsgcmV0dXJuIG1heWJlQ29tcG9uZW50KGMuYmxvY2spOyB9KSkpIHtcbiAgICAgIHJlcyA9IDE7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXNcbn1cblxuZnVuY3Rpb24gbmVlZHNOb3JtYWxpemF0aW9uIChlbCkge1xuICByZXR1cm4gZWwuZm9yICE9PSB1bmRlZmluZWQgfHwgZWwudGFnID09PSAndGVtcGxhdGUnIHx8IGVsLnRhZyA9PT0gJ3Nsb3QnXG59XG5cbmZ1bmN0aW9uIGdlbk5vZGUgKG5vZGUsIHN0YXRlKSB7XG4gIGlmIChub2RlLnR5cGUgPT09IDEpIHtcbiAgICByZXR1cm4gZ2VuRWxlbWVudChub2RlLCBzdGF0ZSlcbiAgfSBlbHNlIGlmIChub2RlLnR5cGUgPT09IDMgJiYgbm9kZS5pc0NvbW1lbnQpIHtcbiAgICByZXR1cm4gZ2VuQ29tbWVudChub2RlKVxuICB9IGVsc2Uge1xuICAgIHJldHVybiBnZW5UZXh0KG5vZGUpXG4gIH1cbn1cblxuZnVuY3Rpb24gZ2VuVGV4dCAodGV4dCkge1xuICByZXR1cm4gKFwiX3YoXCIgKyAodGV4dC50eXBlID09PSAyXG4gICAgPyB0ZXh0LmV4cHJlc3Npb24gLy8gbm8gbmVlZCBmb3IgKCkgYmVjYXVzZSBhbHJlYWR5IHdyYXBwZWQgaW4gX3MoKVxuICAgIDogdHJhbnNmb3JtU3BlY2lhbE5ld2xpbmVzKEpTT04uc3RyaW5naWZ5KHRleHQudGV4dCkpKSArIFwiKVwiKVxufVxuXG5mdW5jdGlvbiBnZW5Db21tZW50IChjb21tZW50KSB7XG4gIHJldHVybiAoXCJfZShcIiArIChKU09OLnN0cmluZ2lmeShjb21tZW50LnRleHQpKSArIFwiKVwiKVxufVxuXG5mdW5jdGlvbiBnZW5TbG90IChlbCwgc3RhdGUpIHtcbiAgdmFyIHNsb3ROYW1lID0gZWwuc2xvdE5hbWUgfHwgJ1wiZGVmYXVsdFwiJztcbiAgdmFyIGNoaWxkcmVuID0gZ2VuQ2hpbGRyZW4oZWwsIHN0YXRlKTtcbiAgdmFyIHJlcyA9IFwiX3QoXCIgKyBzbG90TmFtZSArIChjaGlsZHJlbiA/IChcIixcIiArIGNoaWxkcmVuKSA6ICcnKTtcbiAgdmFyIGF0dHJzID0gZWwuYXR0cnMgfHwgZWwuZHluYW1pY0F0dHJzXG4gICAgPyBnZW5Qcm9wcygoZWwuYXR0cnMgfHwgW10pLmNvbmNhdChlbC5keW5hbWljQXR0cnMgfHwgW10pLm1hcChmdW5jdGlvbiAoYXR0cikgeyByZXR1cm4gKHtcbiAgICAgICAgLy8gc2xvdCBwcm9wcyBhcmUgY2FtZWxpemVkXG4gICAgICAgIG5hbWU6IGNhbWVsaXplKGF0dHIubmFtZSksXG4gICAgICAgIHZhbHVlOiBhdHRyLnZhbHVlLFxuICAgICAgICBkeW5hbWljOiBhdHRyLmR5bmFtaWNcbiAgICAgIH0pOyB9KSlcbiAgICA6IG51bGw7XG4gIHZhciBiaW5kJCQxID0gZWwuYXR0cnNNYXBbJ3YtYmluZCddO1xuICBpZiAoKGF0dHJzIHx8IGJpbmQkJDEpICYmICFjaGlsZHJlbikge1xuICAgIHJlcyArPSBcIixudWxsXCI7XG4gIH1cbiAgaWYgKGF0dHJzKSB7XG4gICAgcmVzICs9IFwiLFwiICsgYXR0cnM7XG4gIH1cbiAgaWYgKGJpbmQkJDEpIHtcbiAgICByZXMgKz0gKGF0dHJzID8gJycgOiAnLG51bGwnKSArIFwiLFwiICsgYmluZCQkMTtcbiAgfVxuICByZXR1cm4gcmVzICsgJyknXG59XG5cbi8vIGNvbXBvbmVudE5hbWUgaXMgZWwuY29tcG9uZW50LCB0YWtlIGl0IGFzIGFyZ3VtZW50IHRvIHNodW4gZmxvdydzIHBlc3NpbWlzdGljIHJlZmluZW1lbnRcbmZ1bmN0aW9uIGdlbkNvbXBvbmVudCAoXG4gIGNvbXBvbmVudE5hbWUsXG4gIGVsLFxuICBzdGF0ZVxuKSB7XG4gIHZhciBjaGlsZHJlbiA9IGVsLmlubGluZVRlbXBsYXRlID8gbnVsbCA6IGdlbkNoaWxkcmVuKGVsLCBzdGF0ZSwgdHJ1ZSk7XG4gIHJldHVybiAoXCJfYyhcIiArIGNvbXBvbmVudE5hbWUgKyBcIixcIiArIChnZW5EYXRhJDIoZWwsIHN0YXRlKSkgKyAoY2hpbGRyZW4gPyAoXCIsXCIgKyBjaGlsZHJlbikgOiAnJykgKyBcIilcIilcbn1cblxuZnVuY3Rpb24gZ2VuUHJvcHMgKHByb3BzKSB7XG4gIHZhciBzdGF0aWNQcm9wcyA9IFwiXCI7XG4gIHZhciBkeW5hbWljUHJvcHMgPSBcIlwiO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHByb3AgPSBwcm9wc1tpXTtcbiAgICB2YXIgdmFsdWUgPSB0cmFuc2Zvcm1TcGVjaWFsTmV3bGluZXMocHJvcC52YWx1ZSk7XG4gICAgaWYgKHByb3AuZHluYW1pYykge1xuICAgICAgZHluYW1pY1Byb3BzICs9IChwcm9wLm5hbWUpICsgXCIsXCIgKyB2YWx1ZSArIFwiLFwiO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdGF0aWNQcm9wcyArPSBcIlxcXCJcIiArIChwcm9wLm5hbWUpICsgXCJcXFwiOlwiICsgdmFsdWUgKyBcIixcIjtcbiAgICB9XG4gIH1cbiAgc3RhdGljUHJvcHMgPSBcIntcIiArIChzdGF0aWNQcm9wcy5zbGljZSgwLCAtMSkpICsgXCJ9XCI7XG4gIGlmIChkeW5hbWljUHJvcHMpIHtcbiAgICByZXR1cm4gKFwiX2QoXCIgKyBzdGF0aWNQcm9wcyArIFwiLFtcIiArIChkeW5hbWljUHJvcHMuc2xpY2UoMCwgLTEpKSArIFwiXSlcIilcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gc3RhdGljUHJvcHNcbiAgfVxufVxuXG4vLyAjMzg5NSwgIzQyNjhcbmZ1bmN0aW9uIHRyYW5zZm9ybVNwZWNpYWxOZXdsaW5lcyAodGV4dCkge1xuICByZXR1cm4gdGV4dFxuICAgIC5yZXBsYWNlKC9cXHUyMDI4L2csICdcXFxcdTIwMjgnKVxuICAgIC5yZXBsYWNlKC9cXHUyMDI5L2csICdcXFxcdTIwMjknKVxufVxuXG4vKiAgKi9cblxuXG5cbi8vIHRoZXNlIGtleXdvcmRzIHNob3VsZCBub3QgYXBwZWFyIGluc2lkZSBleHByZXNzaW9ucywgYnV0IG9wZXJhdG9ycyBsaWtlXG4vLyB0eXBlb2YsIGluc3RhbmNlb2YgYW5kIGluIGFyZSBhbGxvd2VkXG52YXIgcHJvaGliaXRlZEtleXdvcmRSRSA9IG5ldyBSZWdFeHAoJ1xcXFxiJyArIChcbiAgJ2RvLGlmLGZvcixsZXQsbmV3LHRyeSx2YXIsY2FzZSxlbHNlLHdpdGgsYXdhaXQsYnJlYWssY2F0Y2gsY2xhc3MsY29uc3QsJyArXG4gICdzdXBlcix0aHJvdyx3aGlsZSx5aWVsZCxkZWxldGUsZXhwb3J0LGltcG9ydCxyZXR1cm4sc3dpdGNoLGRlZmF1bHQsJyArXG4gICdleHRlbmRzLGZpbmFsbHksY29udGludWUsZGVidWdnZXIsZnVuY3Rpb24sYXJndW1lbnRzJ1xuKS5zcGxpdCgnLCcpLmpvaW4oJ1xcXFxifFxcXFxiJykgKyAnXFxcXGInKTtcblxuLy8gdGhlc2UgdW5hcnkgb3BlcmF0b3JzIHNob3VsZCBub3QgYmUgdXNlZCBhcyBwcm9wZXJ0eS9tZXRob2QgbmFtZXNcbnZhciB1bmFyeU9wZXJhdG9yc1JFID0gbmV3IFJlZ0V4cCgnXFxcXGInICsgKFxuICAnZGVsZXRlLHR5cGVvZix2b2lkJ1xuKS5zcGxpdCgnLCcpLmpvaW4oJ1xcXFxzKlxcXFwoW15cXFxcKV0qXFxcXCl8XFxcXGInKSArICdcXFxccypcXFxcKFteXFxcXCldKlxcXFwpJyk7XG5cbi8vIHN0cmlwIHN0cmluZ3MgaW4gZXhwcmVzc2lvbnNcbnZhciBzdHJpcFN0cmluZ1JFID0gLycoPzpbXidcXFxcXXxcXFxcLikqJ3xcIig/OlteXCJcXFxcXXxcXFxcLikqXCJ8YCg/OlteYFxcXFxdfFxcXFwuKSpcXCRcXHt8XFx9KD86W15gXFxcXF18XFxcXC4pKmB8YCg/OlteYFxcXFxdfFxcXFwuKSpgL2c7XG5cbi8vIGRldGVjdCBwcm9ibGVtYXRpYyBleHByZXNzaW9ucyBpbiBhIHRlbXBsYXRlXG5mdW5jdGlvbiBkZXRlY3RFcnJvcnMgKGFzdCwgd2Fybikge1xuICBpZiAoYXN0KSB7XG4gICAgY2hlY2tOb2RlKGFzdCwgd2Fybik7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2hlY2tOb2RlIChub2RlLCB3YXJuKSB7XG4gIGlmIChub2RlLnR5cGUgPT09IDEpIHtcbiAgICBmb3IgKHZhciBuYW1lIGluIG5vZGUuYXR0cnNNYXApIHtcbiAgICAgIGlmIChkaXJSRS50ZXN0KG5hbWUpKSB7XG4gICAgICAgIHZhciB2YWx1ZSA9IG5vZGUuYXR0cnNNYXBbbmFtZV07XG4gICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgIHZhciByYW5nZSA9IG5vZGUucmF3QXR0cnNNYXBbbmFtZV07XG4gICAgICAgICAgaWYgKG5hbWUgPT09ICd2LWZvcicpIHtcbiAgICAgICAgICAgIGNoZWNrRm9yKG5vZGUsIChcInYtZm9yPVxcXCJcIiArIHZhbHVlICsgXCJcXFwiXCIpLCB3YXJuLCByYW5nZSk7XG4gICAgICAgICAgfSBlbHNlIGlmIChuYW1lID09PSAndi1zbG90JyB8fCBuYW1lWzBdID09PSAnIycpIHtcbiAgICAgICAgICAgIGNoZWNrRnVuY3Rpb25QYXJhbWV0ZXJFeHByZXNzaW9uKHZhbHVlLCAobmFtZSArIFwiPVxcXCJcIiArIHZhbHVlICsgXCJcXFwiXCIpLCB3YXJuLCByYW5nZSk7XG4gICAgICAgICAgfSBlbHNlIGlmIChvblJFLnRlc3QobmFtZSkpIHtcbiAgICAgICAgICAgIGNoZWNrRXZlbnQodmFsdWUsIChuYW1lICsgXCI9XFxcIlwiICsgdmFsdWUgKyBcIlxcXCJcIiksIHdhcm4sIHJhbmdlKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2hlY2tFeHByZXNzaW9uKHZhbHVlLCAobmFtZSArIFwiPVxcXCJcIiArIHZhbHVlICsgXCJcXFwiXCIpLCB3YXJuLCByYW5nZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChub2RlLmNoaWxkcmVuKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG5vZGUuY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY2hlY2tOb2RlKG5vZGUuY2hpbGRyZW5baV0sIHdhcm4pO1xuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIGlmIChub2RlLnR5cGUgPT09IDIpIHtcbiAgICBjaGVja0V4cHJlc3Npb24obm9kZS5leHByZXNzaW9uLCBub2RlLnRleHQsIHdhcm4sIG5vZGUpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNoZWNrRXZlbnQgKGV4cCwgdGV4dCwgd2FybiwgcmFuZ2UpIHtcbiAgdmFyIHN0cmlwcGVkID0gZXhwLnJlcGxhY2Uoc3RyaXBTdHJpbmdSRSwgJycpO1xuICB2YXIga2V5d29yZE1hdGNoID0gc3RyaXBwZWQubWF0Y2godW5hcnlPcGVyYXRvcnNSRSk7XG4gIGlmIChrZXl3b3JkTWF0Y2ggJiYgc3RyaXBwZWQuY2hhckF0KGtleXdvcmRNYXRjaC5pbmRleCAtIDEpICE9PSAnJCcpIHtcbiAgICB3YXJuKFxuICAgICAgXCJhdm9pZCB1c2luZyBKYXZhU2NyaXB0IHVuYXJ5IG9wZXJhdG9yIGFzIHByb3BlcnR5IG5hbWU6IFwiICtcbiAgICAgIFwiXFxcIlwiICsgKGtleXdvcmRNYXRjaFswXSkgKyBcIlxcXCIgaW4gZXhwcmVzc2lvbiBcIiArICh0ZXh0LnRyaW0oKSksXG4gICAgICByYW5nZVxuICAgICk7XG4gIH1cbiAgY2hlY2tFeHByZXNzaW9uKGV4cCwgdGV4dCwgd2FybiwgcmFuZ2UpO1xufVxuXG5mdW5jdGlvbiBjaGVja0ZvciAobm9kZSwgdGV4dCwgd2FybiwgcmFuZ2UpIHtcbiAgY2hlY2tFeHByZXNzaW9uKG5vZGUuZm9yIHx8ICcnLCB0ZXh0LCB3YXJuLCByYW5nZSk7XG4gIGNoZWNrSWRlbnRpZmllcihub2RlLmFsaWFzLCAndi1mb3IgYWxpYXMnLCB0ZXh0LCB3YXJuLCByYW5nZSk7XG4gIGNoZWNrSWRlbnRpZmllcihub2RlLml0ZXJhdG9yMSwgJ3YtZm9yIGl0ZXJhdG9yJywgdGV4dCwgd2FybiwgcmFuZ2UpO1xuICBjaGVja0lkZW50aWZpZXIobm9kZS5pdGVyYXRvcjIsICd2LWZvciBpdGVyYXRvcicsIHRleHQsIHdhcm4sIHJhbmdlKTtcbn1cblxuZnVuY3Rpb24gY2hlY2tJZGVudGlmaWVyIChcbiAgaWRlbnQsXG4gIHR5cGUsXG4gIHRleHQsXG4gIHdhcm4sXG4gIHJhbmdlXG4pIHtcbiAgaWYgKHR5cGVvZiBpZGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICB0cnkge1xuICAgICAgbmV3IEZ1bmN0aW9uKChcInZhciBcIiArIGlkZW50ICsgXCI9X1wiKSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgd2FybigoXCJpbnZhbGlkIFwiICsgdHlwZSArIFwiIFxcXCJcIiArIGlkZW50ICsgXCJcXFwiIGluIGV4cHJlc3Npb246IFwiICsgKHRleHQudHJpbSgpKSksIHJhbmdlKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gY2hlY2tFeHByZXNzaW9uIChleHAsIHRleHQsIHdhcm4sIHJhbmdlKSB7XG4gIHRyeSB7XG4gICAgbmV3IEZ1bmN0aW9uKChcInJldHVybiBcIiArIGV4cCkpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgdmFyIGtleXdvcmRNYXRjaCA9IGV4cC5yZXBsYWNlKHN0cmlwU3RyaW5nUkUsICcnKS5tYXRjaChwcm9oaWJpdGVkS2V5d29yZFJFKTtcbiAgICBpZiAoa2V5d29yZE1hdGNoKSB7XG4gICAgICB3YXJuKFxuICAgICAgICBcImF2b2lkIHVzaW5nIEphdmFTY3JpcHQga2V5d29yZCBhcyBwcm9wZXJ0eSBuYW1lOiBcIiArXG4gICAgICAgIFwiXFxcIlwiICsgKGtleXdvcmRNYXRjaFswXSkgKyBcIlxcXCJcXG4gIFJhdyBleHByZXNzaW9uOiBcIiArICh0ZXh0LnRyaW0oKSksXG4gICAgICAgIHJhbmdlXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICB3YXJuKFxuICAgICAgICBcImludmFsaWQgZXhwcmVzc2lvbjogXCIgKyAoZS5tZXNzYWdlKSArIFwiIGluXFxuXFxuXCIgK1xuICAgICAgICBcIiAgICBcIiArIGV4cCArIFwiXFxuXFxuXCIgK1xuICAgICAgICBcIiAgUmF3IGV4cHJlc3Npb246IFwiICsgKHRleHQudHJpbSgpKSArIFwiXFxuXCIsXG4gICAgICAgIHJhbmdlXG4gICAgICApO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBjaGVja0Z1bmN0aW9uUGFyYW1ldGVyRXhwcmVzc2lvbiAoZXhwLCB0ZXh0LCB3YXJuLCByYW5nZSkge1xuICB0cnkge1xuICAgIG5ldyBGdW5jdGlvbihleHAsICcnKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHdhcm4oXG4gICAgICBcImludmFsaWQgZnVuY3Rpb24gcGFyYW1ldGVyIGV4cHJlc3Npb246IFwiICsgKGUubWVzc2FnZSkgKyBcIiBpblxcblxcblwiICtcbiAgICAgIFwiICAgIFwiICsgZXhwICsgXCJcXG5cXG5cIiArXG4gICAgICBcIiAgUmF3IGV4cHJlc3Npb246IFwiICsgKHRleHQudHJpbSgpKSArIFwiXFxuXCIsXG4gICAgICByYW5nZVxuICAgICk7XG4gIH1cbn1cblxuLyogICovXG5cbnZhciByYW5nZSA9IDI7XG5cbmZ1bmN0aW9uIGdlbmVyYXRlQ29kZUZyYW1lIChcbiAgc291cmNlLFxuICBzdGFydCxcbiAgZW5kXG4pIHtcbiAgaWYgKCBzdGFydCA9PT0gdm9pZCAwICkgc3RhcnQgPSAwO1xuICBpZiAoIGVuZCA9PT0gdm9pZCAwICkgZW5kID0gc291cmNlLmxlbmd0aDtcblxuICB2YXIgbGluZXMgPSBzb3VyY2Uuc3BsaXQoL1xccj9cXG4vKTtcbiAgdmFyIGNvdW50ID0gMDtcbiAgdmFyIHJlcyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpbmVzLmxlbmd0aDsgaSsrKSB7XG4gICAgY291bnQgKz0gbGluZXNbaV0ubGVuZ3RoICsgMTtcbiAgICBpZiAoY291bnQgPj0gc3RhcnQpIHtcbiAgICAgIGZvciAodmFyIGogPSBpIC0gcmFuZ2U7IGogPD0gaSArIHJhbmdlIHx8IGVuZCA+IGNvdW50OyBqKyspIHtcbiAgICAgICAgaWYgKGogPCAwIHx8IGogPj0gbGluZXMubGVuZ3RoKSB7IGNvbnRpbnVlIH1cbiAgICAgICAgcmVzLnB1c2goKFwiXCIgKyAoaiArIDEpICsgKHJlcGVhdCQxKFwiIFwiLCAzIC0gU3RyaW5nKGogKyAxKS5sZW5ndGgpKSArIFwifCAgXCIgKyAobGluZXNbal0pKSk7XG4gICAgICAgIHZhciBsaW5lTGVuZ3RoID0gbGluZXNbal0ubGVuZ3RoO1xuICAgICAgICBpZiAoaiA9PT0gaSkge1xuICAgICAgICAgIC8vIHB1c2ggdW5kZXJsaW5lXG4gICAgICAgICAgdmFyIHBhZCA9IHN0YXJ0IC0gKGNvdW50IC0gbGluZUxlbmd0aCkgKyAxO1xuICAgICAgICAgIHZhciBsZW5ndGggPSBlbmQgPiBjb3VudCA/IGxpbmVMZW5ndGggLSBwYWQgOiBlbmQgLSBzdGFydDtcbiAgICAgICAgICByZXMucHVzaChcIiAgIHwgIFwiICsgcmVwZWF0JDEoXCIgXCIsIHBhZCkgKyByZXBlYXQkMShcIl5cIiwgbGVuZ3RoKSk7XG4gICAgICAgIH0gZWxzZSBpZiAoaiA+IGkpIHtcbiAgICAgICAgICBpZiAoZW5kID4gY291bnQpIHtcbiAgICAgICAgICAgIHZhciBsZW5ndGgkMSA9IE1hdGgubWluKGVuZCAtIGNvdW50LCBsaW5lTGVuZ3RoKTtcbiAgICAgICAgICAgIHJlcy5wdXNoKFwiICAgfCAgXCIgKyByZXBlYXQkMShcIl5cIiwgbGVuZ3RoJDEpKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgY291bnQgKz0gbGluZUxlbmd0aCArIDE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGJyZWFrXG4gICAgfVxuICB9XG4gIHJldHVybiByZXMuam9pbignXFxuJylcbn1cblxuZnVuY3Rpb24gcmVwZWF0JDEgKHN0ciwgbikge1xuICB2YXIgcmVzdWx0ID0gJyc7XG4gIGlmIChuID4gMCkge1xuICAgIHdoaWxlICh0cnVlKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgICAgIGlmIChuICYgMSkgeyByZXN1bHQgKz0gc3RyOyB9XG4gICAgICBuID4+Pj0gMTtcbiAgICAgIGlmIChuIDw9IDApIHsgYnJlYWsgfVxuICAgICAgc3RyICs9IHN0cjtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdFxufVxuXG4vKiAgKi9cblxuXG5cbmZ1bmN0aW9uIGNyZWF0ZUZ1bmN0aW9uIChjb2RlLCBlcnJvcnMpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gbmV3IEZ1bmN0aW9uKGNvZGUpXG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGVycm9ycy5wdXNoKHsgZXJyOiBlcnIsIGNvZGU6IGNvZGUgfSk7XG4gICAgcmV0dXJuIG5vb3BcbiAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVDb21waWxlVG9GdW5jdGlvbkZuIChjb21waWxlKSB7XG4gIHZhciBjYWNoZSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIGNvbXBpbGVUb0Z1bmN0aW9ucyAoXG4gICAgdGVtcGxhdGUsXG4gICAgb3B0aW9ucyxcbiAgICB2bVxuICApIHtcbiAgICBvcHRpb25zID0gZXh0ZW5kKHt9LCBvcHRpb25zKTtcbiAgICB2YXIgd2FybiQkMSA9IG9wdGlvbnMud2FybiB8fCB3YXJuO1xuICAgIGRlbGV0ZSBvcHRpb25zLndhcm47XG5cbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgLy8gZGV0ZWN0IHBvc3NpYmxlIENTUCByZXN0cmljdGlvblxuICAgICAgdHJ5IHtcbiAgICAgICAgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gMScpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBpZiAoZS50b1N0cmluZygpLm1hdGNoKC91bnNhZmUtZXZhbHxDU1AvKSkge1xuICAgICAgICAgIHdhcm4kJDEoXG4gICAgICAgICAgICAnSXQgc2VlbXMgeW91IGFyZSB1c2luZyB0aGUgc3RhbmRhbG9uZSBidWlsZCBvZiBWdWUuanMgaW4gYW4gJyArXG4gICAgICAgICAgICAnZW52aXJvbm1lbnQgd2l0aCBDb250ZW50IFNlY3VyaXR5IFBvbGljeSB0aGF0IHByb2hpYml0cyB1bnNhZmUtZXZhbC4gJyArXG4gICAgICAgICAgICAnVGhlIHRlbXBsYXRlIGNvbXBpbGVyIGNhbm5vdCB3b3JrIGluIHRoaXMgZW52aXJvbm1lbnQuIENvbnNpZGVyICcgK1xuICAgICAgICAgICAgJ3JlbGF4aW5nIHRoZSBwb2xpY3kgdG8gYWxsb3cgdW5zYWZlLWV2YWwgb3IgcHJlLWNvbXBpbGluZyB5b3VyICcgK1xuICAgICAgICAgICAgJ3RlbXBsYXRlcyBpbnRvIHJlbmRlciBmdW5jdGlvbnMuJ1xuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBjaGVjayBjYWNoZVxuICAgIHZhciBrZXkgPSBvcHRpb25zLmRlbGltaXRlcnNcbiAgICAgID8gU3RyaW5nKG9wdGlvbnMuZGVsaW1pdGVycykgKyB0ZW1wbGF0ZVxuICAgICAgOiB0ZW1wbGF0ZTtcbiAgICBpZiAoY2FjaGVba2V5XSkge1xuICAgICAgcmV0dXJuIGNhY2hlW2tleV1cbiAgICB9XG5cbiAgICAvLyBjb21waWxlXG4gICAgdmFyIGNvbXBpbGVkID0gY29tcGlsZSh0ZW1wbGF0ZSwgb3B0aW9ucyk7XG5cbiAgICAvLyBjaGVjayBjb21waWxhdGlvbiBlcnJvcnMvdGlwc1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICBpZiAoY29tcGlsZWQuZXJyb3JzICYmIGNvbXBpbGVkLmVycm9ycy5sZW5ndGgpIHtcbiAgICAgICAgaWYgKG9wdGlvbnMub3V0cHV0U291cmNlUmFuZ2UpIHtcbiAgICAgICAgICBjb21waWxlZC5lcnJvcnMuZm9yRWFjaChmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgd2FybiQkMShcbiAgICAgICAgICAgICAgXCJFcnJvciBjb21waWxpbmcgdGVtcGxhdGU6XFxuXFxuXCIgKyAoZS5tc2cpICsgXCJcXG5cXG5cIiArXG4gICAgICAgICAgICAgIGdlbmVyYXRlQ29kZUZyYW1lKHRlbXBsYXRlLCBlLnN0YXJ0LCBlLmVuZCksXG4gICAgICAgICAgICAgIHZtXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHdhcm4kJDEoXG4gICAgICAgICAgICBcIkVycm9yIGNvbXBpbGluZyB0ZW1wbGF0ZTpcXG5cXG5cIiArIHRlbXBsYXRlICsgXCJcXG5cXG5cIiArXG4gICAgICAgICAgICBjb21waWxlZC5lcnJvcnMubWFwKGZ1bmN0aW9uIChlKSB7IHJldHVybiAoXCItIFwiICsgZSk7IH0pLmpvaW4oJ1xcbicpICsgJ1xcbicsXG4gICAgICAgICAgICB2bVxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChjb21waWxlZC50aXBzICYmIGNvbXBpbGVkLnRpcHMubGVuZ3RoKSB7XG4gICAgICAgIGlmIChvcHRpb25zLm91dHB1dFNvdXJjZVJhbmdlKSB7XG4gICAgICAgICAgY29tcGlsZWQudGlwcy5mb3JFYWNoKGZ1bmN0aW9uIChlKSB7IHJldHVybiB0aXAoZS5tc2csIHZtKTsgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29tcGlsZWQudGlwcy5mb3JFYWNoKGZ1bmN0aW9uIChtc2cpIHsgcmV0dXJuIHRpcChtc2csIHZtKTsgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyB0dXJuIGNvZGUgaW50byBmdW5jdGlvbnNcbiAgICB2YXIgcmVzID0ge307XG4gICAgdmFyIGZuR2VuRXJyb3JzID0gW107XG4gICAgcmVzLnJlbmRlciA9IGNyZWF0ZUZ1bmN0aW9uKGNvbXBpbGVkLnJlbmRlciwgZm5HZW5FcnJvcnMpO1xuICAgIHJlcy5zdGF0aWNSZW5kZXJGbnMgPSBjb21waWxlZC5zdGF0aWNSZW5kZXJGbnMubWFwKGZ1bmN0aW9uIChjb2RlKSB7XG4gICAgICByZXR1cm4gY3JlYXRlRnVuY3Rpb24oY29kZSwgZm5HZW5FcnJvcnMpXG4gICAgfSk7XG5cbiAgICAvLyBjaGVjayBmdW5jdGlvbiBnZW5lcmF0aW9uIGVycm9ycy5cbiAgICAvLyB0aGlzIHNob3VsZCBvbmx5IGhhcHBlbiBpZiB0aGVyZSBpcyBhIGJ1ZyBpbiB0aGUgY29tcGlsZXIgaXRzZWxmLlxuICAgIC8vIG1vc3RseSBmb3IgY29kZWdlbiBkZXZlbG9wbWVudCB1c2VcbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaWYgKCghY29tcGlsZWQuZXJyb3JzIHx8ICFjb21waWxlZC5lcnJvcnMubGVuZ3RoKSAmJiBmbkdlbkVycm9ycy5sZW5ndGgpIHtcbiAgICAgICAgd2FybiQkMShcbiAgICAgICAgICBcIkZhaWxlZCB0byBnZW5lcmF0ZSByZW5kZXIgZnVuY3Rpb246XFxuXFxuXCIgK1xuICAgICAgICAgIGZuR2VuRXJyb3JzLm1hcChmdW5jdGlvbiAocmVmKSB7XG4gICAgICAgICAgICB2YXIgZXJyID0gcmVmLmVycjtcbiAgICAgICAgICAgIHZhciBjb2RlID0gcmVmLmNvZGU7XG5cbiAgICAgICAgICAgIHJldHVybiAoKGVyci50b1N0cmluZygpKSArIFwiIGluXFxuXFxuXCIgKyBjb2RlICsgXCJcXG5cIik7XG4gICAgICAgIH0pLmpvaW4oJ1xcbicpLFxuICAgICAgICAgIHZtXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIChjYWNoZVtrZXldID0gcmVzKVxuICB9XG59XG5cbi8qICAqL1xuXG5mdW5jdGlvbiBjcmVhdGVDb21waWxlckNyZWF0b3IgKGJhc2VDb21waWxlKSB7XG4gIHJldHVybiBmdW5jdGlvbiBjcmVhdGVDb21waWxlciAoYmFzZU9wdGlvbnMpIHtcbiAgICBmdW5jdGlvbiBjb21waWxlIChcbiAgICAgIHRlbXBsYXRlLFxuICAgICAgb3B0aW9uc1xuICAgICkge1xuICAgICAgdmFyIGZpbmFsT3B0aW9ucyA9IE9iamVjdC5jcmVhdGUoYmFzZU9wdGlvbnMpO1xuICAgICAgdmFyIGVycm9ycyA9IFtdO1xuICAgICAgdmFyIHRpcHMgPSBbXTtcblxuICAgICAgdmFyIHdhcm4gPSBmdW5jdGlvbiAobXNnLCByYW5nZSwgdGlwKSB7XG4gICAgICAgICh0aXAgPyB0aXBzIDogZXJyb3JzKS5wdXNoKG1zZyk7XG4gICAgICB9O1xuXG4gICAgICBpZiAob3B0aW9ucykge1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBvcHRpb25zLm91dHB1dFNvdXJjZVJhbmdlKSB7XG4gICAgICAgICAgLy8gJGZsb3ctZGlzYWJsZS1saW5lXG4gICAgICAgICAgdmFyIGxlYWRpbmdTcGFjZUxlbmd0aCA9IHRlbXBsYXRlLm1hdGNoKC9eXFxzKi8pWzBdLmxlbmd0aDtcblxuICAgICAgICAgIHdhcm4gPSBmdW5jdGlvbiAobXNnLCByYW5nZSwgdGlwKSB7XG4gICAgICAgICAgICB2YXIgZGF0YSA9IHsgbXNnOiBtc2cgfTtcbiAgICAgICAgICAgIGlmIChyYW5nZSkge1xuICAgICAgICAgICAgICBpZiAocmFuZ2Uuc3RhcnQgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGRhdGEuc3RhcnQgPSByYW5nZS5zdGFydCArIGxlYWRpbmdTcGFjZUxlbmd0aDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBpZiAocmFuZ2UuZW5kICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBkYXRhLmVuZCA9IHJhbmdlLmVuZCArIGxlYWRpbmdTcGFjZUxlbmd0aDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgKHRpcCA/IHRpcHMgOiBlcnJvcnMpLnB1c2goZGF0YSk7XG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICAvLyBtZXJnZSBjdXN0b20gbW9kdWxlc1xuICAgICAgICBpZiAob3B0aW9ucy5tb2R1bGVzKSB7XG4gICAgICAgICAgZmluYWxPcHRpb25zLm1vZHVsZXMgPVxuICAgICAgICAgICAgKGJhc2VPcHRpb25zLm1vZHVsZXMgfHwgW10pLmNvbmNhdChvcHRpb25zLm1vZHVsZXMpO1xuICAgICAgICB9XG4gICAgICAgIC8vIG1lcmdlIGN1c3RvbSBkaXJlY3RpdmVzXG4gICAgICAgIGlmIChvcHRpb25zLmRpcmVjdGl2ZXMpIHtcbiAgICAgICAgICBmaW5hbE9wdGlvbnMuZGlyZWN0aXZlcyA9IGV4dGVuZChcbiAgICAgICAgICAgIE9iamVjdC5jcmVhdGUoYmFzZU9wdGlvbnMuZGlyZWN0aXZlcyB8fCBudWxsKSxcbiAgICAgICAgICAgIG9wdGlvbnMuZGlyZWN0aXZlc1xuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gY29weSBvdGhlciBvcHRpb25zXG4gICAgICAgIGZvciAodmFyIGtleSBpbiBvcHRpb25zKSB7XG4gICAgICAgICAgaWYgKGtleSAhPT0gJ21vZHVsZXMnICYmIGtleSAhPT0gJ2RpcmVjdGl2ZXMnKSB7XG4gICAgICAgICAgICBmaW5hbE9wdGlvbnNba2V5XSA9IG9wdGlvbnNba2V5XTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgZmluYWxPcHRpb25zLndhcm4gPSB3YXJuO1xuXG4gICAgICB2YXIgY29tcGlsZWQgPSBiYXNlQ29tcGlsZSh0ZW1wbGF0ZS50cmltKCksIGZpbmFsT3B0aW9ucyk7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICBkZXRlY3RFcnJvcnMoY29tcGlsZWQuYXN0LCB3YXJuKTtcbiAgICAgIH1cbiAgICAgIGNvbXBpbGVkLmVycm9ycyA9IGVycm9ycztcbiAgICAgIGNvbXBpbGVkLnRpcHMgPSB0aXBzO1xuICAgICAgcmV0dXJuIGNvbXBpbGVkXG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIGNvbXBpbGU6IGNvbXBpbGUsXG4gICAgICBjb21waWxlVG9GdW5jdGlvbnM6IGNyZWF0ZUNvbXBpbGVUb0Z1bmN0aW9uRm4oY29tcGlsZSlcbiAgICB9XG4gIH1cbn1cblxuLyogICovXG5cbi8vIGBjcmVhdGVDb21waWxlckNyZWF0b3JgIGFsbG93cyBjcmVhdGluZyBjb21waWxlcnMgdGhhdCB1c2UgYWx0ZXJuYXRpdmVcbi8vIHBhcnNlci9vcHRpbWl6ZXIvY29kZWdlbiwgZS5nIHRoZSBTU1Igb3B0aW1pemluZyBjb21waWxlci5cbi8vIEhlcmUgd2UganVzdCBleHBvcnQgYSBkZWZhdWx0IGNvbXBpbGVyIHVzaW5nIHRoZSBkZWZhdWx0IHBhcnRzLlxudmFyIGNyZWF0ZUNvbXBpbGVyID0gY3JlYXRlQ29tcGlsZXJDcmVhdG9yKGZ1bmN0aW9uIGJhc2VDb21waWxlIChcbiAgdGVtcGxhdGUsXG4gIG9wdGlvbnNcbikge1xuICB2YXIgYXN0ID0gcGFyc2UodGVtcGxhdGUudHJpbSgpLCBvcHRpb25zKTtcbiAgaWYgKG9wdGlvbnMub3B0aW1pemUgIT09IGZhbHNlKSB7XG4gICAgb3B0aW1pemUoYXN0LCBvcHRpb25zKTtcbiAgfVxuICB2YXIgY29kZSA9IGdlbmVyYXRlKGFzdCwgb3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgYXN0OiBhc3QsXG4gICAgcmVuZGVyOiBjb2RlLnJlbmRlcixcbiAgICBzdGF0aWNSZW5kZXJGbnM6IGNvZGUuc3RhdGljUmVuZGVyRm5zXG4gIH1cbn0pO1xuXG4vKiAgKi9cblxudmFyIHJlZiQxID0gY3JlYXRlQ29tcGlsZXIoYmFzZU9wdGlvbnMpO1xudmFyIGNvbXBpbGUgPSByZWYkMS5jb21waWxlO1xudmFyIGNvbXBpbGVUb0Z1bmN0aW9ucyA9IHJlZiQxLmNvbXBpbGVUb0Z1bmN0aW9ucztcblxuLyogICovXG5cbi8vIGNoZWNrIHdoZXRoZXIgY3VycmVudCBicm93c2VyIGVuY29kZXMgYSBjaGFyIGluc2lkZSBhdHRyaWJ1dGUgdmFsdWVzXG52YXIgZGl2O1xuZnVuY3Rpb24gZ2V0U2hvdWxkRGVjb2RlIChocmVmKSB7XG4gIGRpdiA9IGRpdiB8fCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgZGl2LmlubmVySFRNTCA9IGhyZWYgPyBcIjxhIGhyZWY9XFxcIlxcblxcXCIvPlwiIDogXCI8ZGl2IGE9XFxcIlxcblxcXCIvPlwiO1xuICByZXR1cm4gZGl2LmlubmVySFRNTC5pbmRleE9mKCcmIzEwOycpID4gMFxufVxuXG4vLyAjMzY2MzogSUUgZW5jb2RlcyBuZXdsaW5lcyBpbnNpZGUgYXR0cmlidXRlIHZhbHVlcyB3aGlsZSBvdGhlciBicm93c2VycyBkb24ndFxudmFyIHNob3VsZERlY29kZU5ld2xpbmVzID0gaW5Ccm93c2VyID8gZ2V0U2hvdWxkRGVjb2RlKGZhbHNlKSA6IGZhbHNlO1xuLy8gIzY4Mjg6IGNocm9tZSBlbmNvZGVzIGNvbnRlbnQgaW4gYVtocmVmXVxudmFyIHNob3VsZERlY29kZU5ld2xpbmVzRm9ySHJlZiA9IGluQnJvd3NlciA/IGdldFNob3VsZERlY29kZSh0cnVlKSA6IGZhbHNlO1xuXG4vKiAgKi9cblxudmFyIGlkVG9UZW1wbGF0ZSA9IGNhY2hlZChmdW5jdGlvbiAoaWQpIHtcbiAgdmFyIGVsID0gcXVlcnkoaWQpO1xuICByZXR1cm4gZWwgJiYgZWwuaW5uZXJIVE1MXG59KTtcblxudmFyIG1vdW50ID0gVnVlLnByb3RvdHlwZS4kbW91bnQ7XG5WdWUucHJvdG90eXBlLiRtb3VudCA9IGZ1bmN0aW9uIChcbiAgZWwsXG4gIGh5ZHJhdGluZ1xuKSB7XG4gIGVsID0gZWwgJiYgcXVlcnkoZWwpO1xuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICBpZiAoZWwgPT09IGRvY3VtZW50LmJvZHkgfHwgZWwgPT09IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgd2FybihcbiAgICAgIFwiRG8gbm90IG1vdW50IFZ1ZSB0byA8aHRtbD4gb3IgPGJvZHk+IC0gbW91bnQgdG8gbm9ybWFsIGVsZW1lbnRzIGluc3RlYWQuXCJcbiAgICApO1xuICAgIHJldHVybiB0aGlzXG4gIH1cblxuICB2YXIgb3B0aW9ucyA9IHRoaXMuJG9wdGlvbnM7XG4gIC8vIHJlc29sdmUgdGVtcGxhdGUvZWwgYW5kIGNvbnZlcnQgdG8gcmVuZGVyIGZ1bmN0aW9uXG4gIGlmICghb3B0aW9ucy5yZW5kZXIpIHtcbiAgICB2YXIgdGVtcGxhdGUgPSBvcHRpb25zLnRlbXBsYXRlO1xuICAgIGlmICh0ZW1wbGF0ZSkge1xuICAgICAgaWYgKHR5cGVvZiB0ZW1wbGF0ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgaWYgKHRlbXBsYXRlLmNoYXJBdCgwKSA9PT0gJyMnKSB7XG4gICAgICAgICAgdGVtcGxhdGUgPSBpZFRvVGVtcGxhdGUodGVtcGxhdGUpO1xuICAgICAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICF0ZW1wbGF0ZSkge1xuICAgICAgICAgICAgd2FybihcbiAgICAgICAgICAgICAgKFwiVGVtcGxhdGUgZWxlbWVudCBub3QgZm91bmQgb3IgaXMgZW1wdHk6IFwiICsgKG9wdGlvbnMudGVtcGxhdGUpKSxcbiAgICAgICAgICAgICAgdGhpc1xuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAodGVtcGxhdGUubm9kZVR5cGUpIHtcbiAgICAgICAgdGVtcGxhdGUgPSB0ZW1wbGF0ZS5pbm5lckhUTUw7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgIHdhcm4oJ2ludmFsaWQgdGVtcGxhdGUgb3B0aW9uOicgKyB0ZW1wbGF0ZSwgdGhpcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXNcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGVsKSB7XG4gICAgICB0ZW1wbGF0ZSA9IGdldE91dGVySFRNTChlbCk7XG4gICAgfVxuICAgIGlmICh0ZW1wbGF0ZSkge1xuICAgICAgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBjb25maWcucGVyZm9ybWFuY2UgJiYgbWFyaykge1xuICAgICAgICBtYXJrKCdjb21waWxlJyk7XG4gICAgICB9XG5cbiAgICAgIHZhciByZWYgPSBjb21waWxlVG9GdW5jdGlvbnModGVtcGxhdGUsIHtcbiAgICAgICAgb3V0cHV0U291cmNlUmFuZ2U6IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicsXG4gICAgICAgIHNob3VsZERlY29kZU5ld2xpbmVzOiBzaG91bGREZWNvZGVOZXdsaW5lcyxcbiAgICAgICAgc2hvdWxkRGVjb2RlTmV3bGluZXNGb3JIcmVmOiBzaG91bGREZWNvZGVOZXdsaW5lc0ZvckhyZWYsXG4gICAgICAgIGRlbGltaXRlcnM6IG9wdGlvbnMuZGVsaW1pdGVycyxcbiAgICAgICAgY29tbWVudHM6IG9wdGlvbnMuY29tbWVudHNcbiAgICAgIH0sIHRoaXMpO1xuICAgICAgdmFyIHJlbmRlciA9IHJlZi5yZW5kZXI7XG4gICAgICB2YXIgc3RhdGljUmVuZGVyRm5zID0gcmVmLnN0YXRpY1JlbmRlckZucztcbiAgICAgIG9wdGlvbnMucmVuZGVyID0gcmVuZGVyO1xuICAgICAgb3B0aW9ucy5zdGF0aWNSZW5kZXJGbnMgPSBzdGF0aWNSZW5kZXJGbnM7XG5cbiAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgY29uZmlnLnBlcmZvcm1hbmNlICYmIG1hcmspIHtcbiAgICAgICAgbWFyaygnY29tcGlsZSBlbmQnKTtcbiAgICAgICAgbWVhc3VyZSgoXCJ2dWUgXCIgKyAodGhpcy5fbmFtZSkgKyBcIiBjb21waWxlXCIpLCAnY29tcGlsZScsICdjb21waWxlIGVuZCcpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gbW91bnQuY2FsbCh0aGlzLCBlbCwgaHlkcmF0aW5nKVxufTtcblxuLyoqXG4gKiBHZXQgb3V0ZXJIVE1MIG9mIGVsZW1lbnRzLCB0YWtpbmcgY2FyZVxuICogb2YgU1ZHIGVsZW1lbnRzIGluIElFIGFzIHdlbGwuXG4gKi9cbmZ1bmN0aW9uIGdldE91dGVySFRNTCAoZWwpIHtcbiAgaWYgKGVsLm91dGVySFRNTCkge1xuICAgIHJldHVybiBlbC5vdXRlckhUTUxcbiAgfSBlbHNlIHtcbiAgICB2YXIgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGVsLmNsb25lTm9kZSh0cnVlKSk7XG4gICAgcmV0dXJuIGNvbnRhaW5lci5pbm5lckhUTUxcbiAgfVxufVxuXG5WdWUuY29tcGlsZSA9IGNvbXBpbGVUb0Z1bmN0aW9ucztcblxuZXhwb3J0IGRlZmF1bHQgVnVlO1xuIiwidmFyIGc7XG5cbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXG5nID0gKGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gdGhpcztcbn0pKCk7XG5cbnRyeSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxuXHRnID0gZyB8fCBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIiwiLyoqXG4gKiB2dWV4IHYzLjMuMFxuICogKGMpIDIwMjAgRXZhbiBZb3VcbiAqIEBsaWNlbnNlIE1JVFxuICovXG5mdW5jdGlvbiBhcHBseU1peGluIChWdWUpIHtcbiAgdmFyIHZlcnNpb24gPSBOdW1iZXIoVnVlLnZlcnNpb24uc3BsaXQoJy4nKVswXSk7XG5cbiAgaWYgKHZlcnNpb24gPj0gMikge1xuICAgIFZ1ZS5taXhpbih7IGJlZm9yZUNyZWF0ZTogdnVleEluaXQgfSk7XG4gIH0gZWxzZSB7XG4gICAgLy8gb3ZlcnJpZGUgaW5pdCBhbmQgaW5qZWN0IHZ1ZXggaW5pdCBwcm9jZWR1cmVcbiAgICAvLyBmb3IgMS54IGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5LlxuICAgIHZhciBfaW5pdCA9IFZ1ZS5wcm90b3R5cGUuX2luaXQ7XG4gICAgVnVlLnByb3RvdHlwZS5faW5pdCA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICBpZiAoIG9wdGlvbnMgPT09IHZvaWQgMCApIG9wdGlvbnMgPSB7fTtcblxuICAgICAgb3B0aW9ucy5pbml0ID0gb3B0aW9ucy5pbml0XG4gICAgICAgID8gW3Z1ZXhJbml0XS5jb25jYXQob3B0aW9ucy5pbml0KVxuICAgICAgICA6IHZ1ZXhJbml0O1xuICAgICAgX2luaXQuY2FsbCh0aGlzLCBvcHRpb25zKTtcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIFZ1ZXggaW5pdCBob29rLCBpbmplY3RlZCBpbnRvIGVhY2ggaW5zdGFuY2VzIGluaXQgaG9va3MgbGlzdC5cbiAgICovXG5cbiAgZnVuY3Rpb24gdnVleEluaXQgKCkge1xuICAgIHZhciBvcHRpb25zID0gdGhpcy4kb3B0aW9ucztcbiAgICAvLyBzdG9yZSBpbmplY3Rpb25cbiAgICBpZiAob3B0aW9ucy5zdG9yZSkge1xuICAgICAgdGhpcy4kc3RvcmUgPSB0eXBlb2Ygb3B0aW9ucy5zdG9yZSA9PT0gJ2Z1bmN0aW9uJ1xuICAgICAgICA/IG9wdGlvbnMuc3RvcmUoKVxuICAgICAgICA6IG9wdGlvbnMuc3RvcmU7XG4gICAgfSBlbHNlIGlmIChvcHRpb25zLnBhcmVudCAmJiBvcHRpb25zLnBhcmVudC4kc3RvcmUpIHtcbiAgICAgIHRoaXMuJHN0b3JlID0gb3B0aW9ucy5wYXJlbnQuJHN0b3JlO1xuICAgIH1cbiAgfVxufVxuXG52YXIgdGFyZ2V0ID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCdcbiAgPyB3aW5kb3dcbiAgOiB0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJ1xuICAgID8gZ2xvYmFsXG4gICAgOiB7fTtcbnZhciBkZXZ0b29sSG9vayA9IHRhcmdldC5fX1ZVRV9ERVZUT09MU19HTE9CQUxfSE9PS19fO1xuXG5mdW5jdGlvbiBkZXZ0b29sUGx1Z2luIChzdG9yZSkge1xuICBpZiAoIWRldnRvb2xIb29rKSB7IHJldHVybiB9XG5cbiAgc3RvcmUuX2RldnRvb2xIb29rID0gZGV2dG9vbEhvb2s7XG5cbiAgZGV2dG9vbEhvb2suZW1pdCgndnVleDppbml0Jywgc3RvcmUpO1xuXG4gIGRldnRvb2xIb29rLm9uKCd2dWV4OnRyYXZlbC10by1zdGF0ZScsIGZ1bmN0aW9uICh0YXJnZXRTdGF0ZSkge1xuICAgIHN0b3JlLnJlcGxhY2VTdGF0ZSh0YXJnZXRTdGF0ZSk7XG4gIH0pO1xuXG4gIHN0b3JlLnN1YnNjcmliZShmdW5jdGlvbiAobXV0YXRpb24sIHN0YXRlKSB7XG4gICAgZGV2dG9vbEhvb2suZW1pdCgndnVleDptdXRhdGlvbicsIG11dGF0aW9uLCBzdGF0ZSk7XG4gIH0sIHsgcHJlcGVuZDogdHJ1ZSB9KTtcblxuICBzdG9yZS5zdWJzY3JpYmVBY3Rpb24oZnVuY3Rpb24gKGFjdGlvbiwgc3RhdGUpIHtcbiAgICBkZXZ0b29sSG9vay5lbWl0KCd2dWV4OmFjdGlvbicsIGFjdGlvbiwgc3RhdGUpO1xuICB9LCB7IHByZXBlbmQ6IHRydWUgfSk7XG59XG5cbi8qKlxuICogR2V0IHRoZSBmaXJzdCBpdGVtIHRoYXQgcGFzcyB0aGUgdGVzdFxuICogYnkgc2Vjb25kIGFyZ3VtZW50IGZ1bmN0aW9uXG4gKlxuICogQHBhcmFtIHtBcnJheX0gbGlzdFxuICogQHBhcmFtIHtGdW5jdGlvbn0gZlxuICogQHJldHVybiB7Kn1cbiAqL1xuXG4vKipcbiAqIGZvckVhY2ggZm9yIG9iamVjdFxuICovXG5mdW5jdGlvbiBmb3JFYWNoVmFsdWUgKG9iaiwgZm4pIHtcbiAgT2JqZWN0LmtleXMob2JqKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgcmV0dXJuIGZuKG9ialtrZXldLCBrZXkpOyB9KTtcbn1cblxuZnVuY3Rpb24gaXNPYmplY3QgKG9iaikge1xuICByZXR1cm4gb2JqICE9PSBudWxsICYmIHR5cGVvZiBvYmogPT09ICdvYmplY3QnXG59XG5cbmZ1bmN0aW9uIGlzUHJvbWlzZSAodmFsKSB7XG4gIHJldHVybiB2YWwgJiYgdHlwZW9mIHZhbC50aGVuID09PSAnZnVuY3Rpb24nXG59XG5cbmZ1bmN0aW9uIGFzc2VydCAoY29uZGl0aW9uLCBtc2cpIHtcbiAgaWYgKCFjb25kaXRpb24pIHsgdGhyb3cgbmV3IEVycm9yKChcIlt2dWV4XSBcIiArIG1zZykpIH1cbn1cblxuZnVuY3Rpb24gcGFydGlhbCAoZm4sIGFyZykge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBmbihhcmcpXG4gIH1cbn1cblxuLy8gQmFzZSBkYXRhIHN0cnVjdCBmb3Igc3RvcmUncyBtb2R1bGUsIHBhY2thZ2Ugd2l0aCBzb21lIGF0dHJpYnV0ZSBhbmQgbWV0aG9kXG52YXIgTW9kdWxlID0gZnVuY3Rpb24gTW9kdWxlIChyYXdNb2R1bGUsIHJ1bnRpbWUpIHtcbiAgdGhpcy5ydW50aW1lID0gcnVudGltZTtcbiAgLy8gU3RvcmUgc29tZSBjaGlsZHJlbiBpdGVtXG4gIHRoaXMuX2NoaWxkcmVuID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgLy8gU3RvcmUgdGhlIG9yaWdpbiBtb2R1bGUgb2JqZWN0IHdoaWNoIHBhc3NlZCBieSBwcm9ncmFtbWVyXG4gIHRoaXMuX3Jhd01vZHVsZSA9IHJhd01vZHVsZTtcbiAgdmFyIHJhd1N0YXRlID0gcmF3TW9kdWxlLnN0YXRlO1xuXG4gIC8vIFN0b3JlIHRoZSBvcmlnaW4gbW9kdWxlJ3Mgc3RhdGVcbiAgdGhpcy5zdGF0ZSA9ICh0eXBlb2YgcmF3U3RhdGUgPT09ICdmdW5jdGlvbicgPyByYXdTdGF0ZSgpIDogcmF3U3RhdGUpIHx8IHt9O1xufTtcblxudmFyIHByb3RvdHlwZUFjY2Vzc29ycyA9IHsgbmFtZXNwYWNlZDogeyBjb25maWd1cmFibGU6IHRydWUgfSB9O1xuXG5wcm90b3R5cGVBY2Nlc3NvcnMubmFtZXNwYWNlZC5nZXQgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiAhIXRoaXMuX3Jhd01vZHVsZS5uYW1lc3BhY2VkXG59O1xuXG5Nb2R1bGUucHJvdG90eXBlLmFkZENoaWxkID0gZnVuY3Rpb24gYWRkQ2hpbGQgKGtleSwgbW9kdWxlKSB7XG4gIHRoaXMuX2NoaWxkcmVuW2tleV0gPSBtb2R1bGU7XG59O1xuXG5Nb2R1bGUucHJvdG90eXBlLnJlbW92ZUNoaWxkID0gZnVuY3Rpb24gcmVtb3ZlQ2hpbGQgKGtleSkge1xuICBkZWxldGUgdGhpcy5fY2hpbGRyZW5ba2V5XTtcbn07XG5cbk1vZHVsZS5wcm90b3R5cGUuZ2V0Q2hpbGQgPSBmdW5jdGlvbiBnZXRDaGlsZCAoa2V5KSB7XG4gIHJldHVybiB0aGlzLl9jaGlsZHJlbltrZXldXG59O1xuXG5Nb2R1bGUucHJvdG90eXBlLmhhc0NoaWxkID0gZnVuY3Rpb24gaGFzQ2hpbGQgKGtleSkge1xuICByZXR1cm4ga2V5IGluIHRoaXMuX2NoaWxkcmVuXG59O1xuXG5Nb2R1bGUucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uIHVwZGF0ZSAocmF3TW9kdWxlKSB7XG4gIHRoaXMuX3Jhd01vZHVsZS5uYW1lc3BhY2VkID0gcmF3TW9kdWxlLm5hbWVzcGFjZWQ7XG4gIGlmIChyYXdNb2R1bGUuYWN0aW9ucykge1xuICAgIHRoaXMuX3Jhd01vZHVsZS5hY3Rpb25zID0gcmF3TW9kdWxlLmFjdGlvbnM7XG4gIH1cbiAgaWYgKHJhd01vZHVsZS5tdXRhdGlvbnMpIHtcbiAgICB0aGlzLl9yYXdNb2R1bGUubXV0YXRpb25zID0gcmF3TW9kdWxlLm11dGF0aW9ucztcbiAgfVxuICBpZiAocmF3TW9kdWxlLmdldHRlcnMpIHtcbiAgICB0aGlzLl9yYXdNb2R1bGUuZ2V0dGVycyA9IHJhd01vZHVsZS5nZXR0ZXJzO1xuICB9XG59O1xuXG5Nb2R1bGUucHJvdG90eXBlLmZvckVhY2hDaGlsZCA9IGZ1bmN0aW9uIGZvckVhY2hDaGlsZCAoZm4pIHtcbiAgZm9yRWFjaFZhbHVlKHRoaXMuX2NoaWxkcmVuLCBmbik7XG59O1xuXG5Nb2R1bGUucHJvdG90eXBlLmZvckVhY2hHZXR0ZXIgPSBmdW5jdGlvbiBmb3JFYWNoR2V0dGVyIChmbikge1xuICBpZiAodGhpcy5fcmF3TW9kdWxlLmdldHRlcnMpIHtcbiAgICBmb3JFYWNoVmFsdWUodGhpcy5fcmF3TW9kdWxlLmdldHRlcnMsIGZuKTtcbiAgfVxufTtcblxuTW9kdWxlLnByb3RvdHlwZS5mb3JFYWNoQWN0aW9uID0gZnVuY3Rpb24gZm9yRWFjaEFjdGlvbiAoZm4pIHtcbiAgaWYgKHRoaXMuX3Jhd01vZHVsZS5hY3Rpb25zKSB7XG4gICAgZm9yRWFjaFZhbHVlKHRoaXMuX3Jhd01vZHVsZS5hY3Rpb25zLCBmbik7XG4gIH1cbn07XG5cbk1vZHVsZS5wcm90b3R5cGUuZm9yRWFjaE11dGF0aW9uID0gZnVuY3Rpb24gZm9yRWFjaE11dGF0aW9uIChmbikge1xuICBpZiAodGhpcy5fcmF3TW9kdWxlLm11dGF0aW9ucykge1xuICAgIGZvckVhY2hWYWx1ZSh0aGlzLl9yYXdNb2R1bGUubXV0YXRpb25zLCBmbik7XG4gIH1cbn07XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKCBNb2R1bGUucHJvdG90eXBlLCBwcm90b3R5cGVBY2Nlc3NvcnMgKTtcblxudmFyIE1vZHVsZUNvbGxlY3Rpb24gPSBmdW5jdGlvbiBNb2R1bGVDb2xsZWN0aW9uIChyYXdSb290TW9kdWxlKSB7XG4gIC8vIHJlZ2lzdGVyIHJvb3QgbW9kdWxlIChWdWV4LlN0b3JlIG9wdGlvbnMpXG4gIHRoaXMucmVnaXN0ZXIoW10sIHJhd1Jvb3RNb2R1bGUsIGZhbHNlKTtcbn07XG5cbk1vZHVsZUNvbGxlY3Rpb24ucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uIGdldCAocGF0aCkge1xuICByZXR1cm4gcGF0aC5yZWR1Y2UoZnVuY3Rpb24gKG1vZHVsZSwga2V5KSB7XG4gICAgcmV0dXJuIG1vZHVsZS5nZXRDaGlsZChrZXkpXG4gIH0sIHRoaXMucm9vdClcbn07XG5cbk1vZHVsZUNvbGxlY3Rpb24ucHJvdG90eXBlLmdldE5hbWVzcGFjZSA9IGZ1bmN0aW9uIGdldE5hbWVzcGFjZSAocGF0aCkge1xuICB2YXIgbW9kdWxlID0gdGhpcy5yb290O1xuICByZXR1cm4gcGF0aC5yZWR1Y2UoZnVuY3Rpb24gKG5hbWVzcGFjZSwga2V5KSB7XG4gICAgbW9kdWxlID0gbW9kdWxlLmdldENoaWxkKGtleSk7XG4gICAgcmV0dXJuIG5hbWVzcGFjZSArIChtb2R1bGUubmFtZXNwYWNlZCA/IGtleSArICcvJyA6ICcnKVxuICB9LCAnJylcbn07XG5cbk1vZHVsZUNvbGxlY3Rpb24ucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uIHVwZGF0ZSQxIChyYXdSb290TW9kdWxlKSB7XG4gIHVwZGF0ZShbXSwgdGhpcy5yb290LCByYXdSb290TW9kdWxlKTtcbn07XG5cbk1vZHVsZUNvbGxlY3Rpb24ucHJvdG90eXBlLnJlZ2lzdGVyID0gZnVuY3Rpb24gcmVnaXN0ZXIgKHBhdGgsIHJhd01vZHVsZSwgcnVudGltZSkge1xuICAgIHZhciB0aGlzJDEgPSB0aGlzO1xuICAgIGlmICggcnVudGltZSA9PT0gdm9pZCAwICkgcnVudGltZSA9IHRydWU7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBhc3NlcnRSYXdNb2R1bGUocGF0aCwgcmF3TW9kdWxlKTtcbiAgfVxuXG4gIHZhciBuZXdNb2R1bGUgPSBuZXcgTW9kdWxlKHJhd01vZHVsZSwgcnVudGltZSk7XG4gIGlmIChwYXRoLmxlbmd0aCA9PT0gMCkge1xuICAgIHRoaXMucm9vdCA9IG5ld01vZHVsZTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgcGFyZW50ID0gdGhpcy5nZXQocGF0aC5zbGljZSgwLCAtMSkpO1xuICAgIHBhcmVudC5hZGRDaGlsZChwYXRoW3BhdGgubGVuZ3RoIC0gMV0sIG5ld01vZHVsZSk7XG4gIH1cblxuICAvLyByZWdpc3RlciBuZXN0ZWQgbW9kdWxlc1xuICBpZiAocmF3TW9kdWxlLm1vZHVsZXMpIHtcbiAgICBmb3JFYWNoVmFsdWUocmF3TW9kdWxlLm1vZHVsZXMsIGZ1bmN0aW9uIChyYXdDaGlsZE1vZHVsZSwga2V5KSB7XG4gICAgICB0aGlzJDEucmVnaXN0ZXIocGF0aC5jb25jYXQoa2V5KSwgcmF3Q2hpbGRNb2R1bGUsIHJ1bnRpbWUpO1xuICAgIH0pO1xuICB9XG59O1xuXG5Nb2R1bGVDb2xsZWN0aW9uLnByb3RvdHlwZS51bnJlZ2lzdGVyID0gZnVuY3Rpb24gdW5yZWdpc3RlciAocGF0aCkge1xuICB2YXIgcGFyZW50ID0gdGhpcy5nZXQocGF0aC5zbGljZSgwLCAtMSkpO1xuICB2YXIga2V5ID0gcGF0aFtwYXRoLmxlbmd0aCAtIDFdO1xuICBpZiAoIXBhcmVudC5nZXRDaGlsZChrZXkpLnJ1bnRpbWUpIHsgcmV0dXJuIH1cblxuICBwYXJlbnQucmVtb3ZlQ2hpbGQoa2V5KTtcbn07XG5cbk1vZHVsZUNvbGxlY3Rpb24ucHJvdG90eXBlLmlzUmVnaXN0ZXJlZCA9IGZ1bmN0aW9uIGlzUmVnaXN0ZXJlZCAocGF0aCkge1xuICB2YXIgcGFyZW50ID0gdGhpcy5nZXQocGF0aC5zbGljZSgwLCAtMSkpO1xuICB2YXIga2V5ID0gcGF0aFtwYXRoLmxlbmd0aCAtIDFdO1xuXG4gIHJldHVybiBwYXJlbnQuaGFzQ2hpbGQoa2V5KVxufTtcblxuZnVuY3Rpb24gdXBkYXRlIChwYXRoLCB0YXJnZXRNb2R1bGUsIG5ld01vZHVsZSkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGFzc2VydFJhd01vZHVsZShwYXRoLCBuZXdNb2R1bGUpO1xuICB9XG5cbiAgLy8gdXBkYXRlIHRhcmdldCBtb2R1bGVcbiAgdGFyZ2V0TW9kdWxlLnVwZGF0ZShuZXdNb2R1bGUpO1xuXG4gIC8vIHVwZGF0ZSBuZXN0ZWQgbW9kdWxlc1xuICBpZiAobmV3TW9kdWxlLm1vZHVsZXMpIHtcbiAgICBmb3IgKHZhciBrZXkgaW4gbmV3TW9kdWxlLm1vZHVsZXMpIHtcbiAgICAgIGlmICghdGFyZ2V0TW9kdWxlLmdldENoaWxkKGtleSkpIHtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgICAgICBcIlt2dWV4XSB0cnlpbmcgdG8gYWRkIGEgbmV3IG1vZHVsZSAnXCIgKyBrZXkgKyBcIicgb24gaG90IHJlbG9hZGluZywgXCIgK1xuICAgICAgICAgICAgJ21hbnVhbCByZWxvYWQgaXMgbmVlZGVkJ1xuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICB1cGRhdGUoXG4gICAgICAgIHBhdGguY29uY2F0KGtleSksXG4gICAgICAgIHRhcmdldE1vZHVsZS5nZXRDaGlsZChrZXkpLFxuICAgICAgICBuZXdNb2R1bGUubW9kdWxlc1trZXldXG4gICAgICApO1xuICAgIH1cbiAgfVxufVxuXG52YXIgZnVuY3Rpb25Bc3NlcnQgPSB7XG4gIGFzc2VydDogZnVuY3Rpb24gKHZhbHVlKSB7IHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdmdW5jdGlvbic7IH0sXG4gIGV4cGVjdGVkOiAnZnVuY3Rpb24nXG59O1xuXG52YXIgb2JqZWN0QXNzZXJ0ID0ge1xuICBhc3NlcnQ6IGZ1bmN0aW9uICh2YWx1ZSkgeyByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nIHx8XG4gICAgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIHZhbHVlLmhhbmRsZXIgPT09ICdmdW5jdGlvbicpOyB9LFxuICBleHBlY3RlZDogJ2Z1bmN0aW9uIG9yIG9iamVjdCB3aXRoIFwiaGFuZGxlclwiIGZ1bmN0aW9uJ1xufTtcblxudmFyIGFzc2VydFR5cGVzID0ge1xuICBnZXR0ZXJzOiBmdW5jdGlvbkFzc2VydCxcbiAgbXV0YXRpb25zOiBmdW5jdGlvbkFzc2VydCxcbiAgYWN0aW9uczogb2JqZWN0QXNzZXJ0XG59O1xuXG5mdW5jdGlvbiBhc3NlcnRSYXdNb2R1bGUgKHBhdGgsIHJhd01vZHVsZSkge1xuICBPYmplY3Qua2V5cyhhc3NlcnRUeXBlcykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgaWYgKCFyYXdNb2R1bGVba2V5XSkgeyByZXR1cm4gfVxuXG4gICAgdmFyIGFzc2VydE9wdGlvbnMgPSBhc3NlcnRUeXBlc1trZXldO1xuXG4gICAgZm9yRWFjaFZhbHVlKHJhd01vZHVsZVtrZXldLCBmdW5jdGlvbiAodmFsdWUsIHR5cGUpIHtcbiAgICAgIGFzc2VydChcbiAgICAgICAgYXNzZXJ0T3B0aW9ucy5hc3NlcnQodmFsdWUpLFxuICAgICAgICBtYWtlQXNzZXJ0aW9uTWVzc2FnZShwYXRoLCBrZXksIHR5cGUsIHZhbHVlLCBhc3NlcnRPcHRpb25zLmV4cGVjdGVkKVxuICAgICAgKTtcbiAgICB9KTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIG1ha2VBc3NlcnRpb25NZXNzYWdlIChwYXRoLCBrZXksIHR5cGUsIHZhbHVlLCBleHBlY3RlZCkge1xuICB2YXIgYnVmID0ga2V5ICsgXCIgc2hvdWxkIGJlIFwiICsgZXhwZWN0ZWQgKyBcIiBidXQgXFxcIlwiICsga2V5ICsgXCIuXCIgKyB0eXBlICsgXCJcXFwiXCI7XG4gIGlmIChwYXRoLmxlbmd0aCA+IDApIHtcbiAgICBidWYgKz0gXCIgaW4gbW9kdWxlIFxcXCJcIiArIChwYXRoLmpvaW4oJy4nKSkgKyBcIlxcXCJcIjtcbiAgfVxuICBidWYgKz0gXCIgaXMgXCIgKyAoSlNPTi5zdHJpbmdpZnkodmFsdWUpKSArIFwiLlwiO1xuICByZXR1cm4gYnVmXG59XG5cbnZhciBWdWU7IC8vIGJpbmQgb24gaW5zdGFsbFxuXG52YXIgU3RvcmUgPSBmdW5jdGlvbiBTdG9yZSAob3B0aW9ucykge1xuICB2YXIgdGhpcyQxID0gdGhpcztcbiAgaWYgKCBvcHRpb25zID09PSB2b2lkIDAgKSBvcHRpb25zID0ge307XG5cbiAgLy8gQXV0byBpbnN0YWxsIGlmIGl0IGlzIG5vdCBkb25lIHlldCBhbmQgYHdpbmRvd2AgaGFzIGBWdWVgLlxuICAvLyBUbyBhbGxvdyB1c2VycyB0byBhdm9pZCBhdXRvLWluc3RhbGxhdGlvbiBpbiBzb21lIGNhc2VzLFxuICAvLyB0aGlzIGNvZGUgc2hvdWxkIGJlIHBsYWNlZCBoZXJlLiBTZWUgIzczMVxuICBpZiAoIVZ1ZSAmJiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuVnVlKSB7XG4gICAgaW5zdGFsbCh3aW5kb3cuVnVlKTtcbiAgfVxuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgYXNzZXJ0KFZ1ZSwgXCJtdXN0IGNhbGwgVnVlLnVzZShWdWV4KSBiZWZvcmUgY3JlYXRpbmcgYSBzdG9yZSBpbnN0YW5jZS5cIik7XG4gICAgYXNzZXJ0KHR5cGVvZiBQcm9taXNlICE9PSAndW5kZWZpbmVkJywgXCJ2dWV4IHJlcXVpcmVzIGEgUHJvbWlzZSBwb2x5ZmlsbCBpbiB0aGlzIGJyb3dzZXIuXCIpO1xuICAgIGFzc2VydCh0aGlzIGluc3RhbmNlb2YgU3RvcmUsIFwic3RvcmUgbXVzdCBiZSBjYWxsZWQgd2l0aCB0aGUgbmV3IG9wZXJhdG9yLlwiKTtcbiAgfVxuXG4gIHZhciBwbHVnaW5zID0gb3B0aW9ucy5wbHVnaW5zOyBpZiAoIHBsdWdpbnMgPT09IHZvaWQgMCApIHBsdWdpbnMgPSBbXTtcbiAgdmFyIHN0cmljdCA9IG9wdGlvbnMuc3RyaWN0OyBpZiAoIHN0cmljdCA9PT0gdm9pZCAwICkgc3RyaWN0ID0gZmFsc2U7XG5cbiAgLy8gc3RvcmUgaW50ZXJuYWwgc3RhdGVcbiAgdGhpcy5fY29tbWl0dGluZyA9IGZhbHNlO1xuICB0aGlzLl9hY3Rpb25zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgdGhpcy5fYWN0aW9uU3Vic2NyaWJlcnMgPSBbXTtcbiAgdGhpcy5fbXV0YXRpb25zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgdGhpcy5fd3JhcHBlZEdldHRlcnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICB0aGlzLl9tb2R1bGVzID0gbmV3IE1vZHVsZUNvbGxlY3Rpb24ob3B0aW9ucyk7XG4gIHRoaXMuX21vZHVsZXNOYW1lc3BhY2VNYXAgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICB0aGlzLl9zdWJzY3JpYmVycyA9IFtdO1xuICB0aGlzLl93YXRjaGVyVk0gPSBuZXcgVnVlKCk7XG4gIHRoaXMuX21ha2VMb2NhbEdldHRlcnNDYWNoZSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbiAgLy8gYmluZCBjb21taXQgYW5kIGRpc3BhdGNoIHRvIHNlbGZcbiAgdmFyIHN0b3JlID0gdGhpcztcbiAgdmFyIHJlZiA9IHRoaXM7XG4gIHZhciBkaXNwYXRjaCA9IHJlZi5kaXNwYXRjaDtcbiAgdmFyIGNvbW1pdCA9IHJlZi5jb21taXQ7XG4gIHRoaXMuZGlzcGF0Y2ggPSBmdW5jdGlvbiBib3VuZERpc3BhdGNoICh0eXBlLCBwYXlsb2FkKSB7XG4gICAgcmV0dXJuIGRpc3BhdGNoLmNhbGwoc3RvcmUsIHR5cGUsIHBheWxvYWQpXG4gIH07XG4gIHRoaXMuY29tbWl0ID0gZnVuY3Rpb24gYm91bmRDb21taXQgKHR5cGUsIHBheWxvYWQsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gY29tbWl0LmNhbGwoc3RvcmUsIHR5cGUsIHBheWxvYWQsIG9wdGlvbnMpXG4gIH07XG5cbiAgLy8gc3RyaWN0IG1vZGVcbiAgdGhpcy5zdHJpY3QgPSBzdHJpY3Q7XG5cbiAgdmFyIHN0YXRlID0gdGhpcy5fbW9kdWxlcy5yb290LnN0YXRlO1xuXG4gIC8vIGluaXQgcm9vdCBtb2R1bGUuXG4gIC8vIHRoaXMgYWxzbyByZWN1cnNpdmVseSByZWdpc3RlcnMgYWxsIHN1Yi1tb2R1bGVzXG4gIC8vIGFuZCBjb2xsZWN0cyBhbGwgbW9kdWxlIGdldHRlcnMgaW5zaWRlIHRoaXMuX3dyYXBwZWRHZXR0ZXJzXG4gIGluc3RhbGxNb2R1bGUodGhpcywgc3RhdGUsIFtdLCB0aGlzLl9tb2R1bGVzLnJvb3QpO1xuXG4gIC8vIGluaXRpYWxpemUgdGhlIHN0b3JlIHZtLCB3aGljaCBpcyByZXNwb25zaWJsZSBmb3IgdGhlIHJlYWN0aXZpdHlcbiAgLy8gKGFsc28gcmVnaXN0ZXJzIF93cmFwcGVkR2V0dGVycyBhcyBjb21wdXRlZCBwcm9wZXJ0aWVzKVxuICByZXNldFN0b3JlVk0odGhpcywgc3RhdGUpO1xuXG4gIC8vIGFwcGx5IHBsdWdpbnNcbiAgcGx1Z2lucy5mb3JFYWNoKGZ1bmN0aW9uIChwbHVnaW4pIHsgcmV0dXJuIHBsdWdpbih0aGlzJDEpOyB9KTtcblxuICB2YXIgdXNlRGV2dG9vbHMgPSBvcHRpb25zLmRldnRvb2xzICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLmRldnRvb2xzIDogVnVlLmNvbmZpZy5kZXZ0b29scztcbiAgaWYgKHVzZURldnRvb2xzKSB7XG4gICAgZGV2dG9vbFBsdWdpbih0aGlzKTtcbiAgfVxufTtcblxudmFyIHByb3RvdHlwZUFjY2Vzc29ycyQxID0geyBzdGF0ZTogeyBjb25maWd1cmFibGU6IHRydWUgfSB9O1xuXG5wcm90b3R5cGVBY2Nlc3NvcnMkMS5zdGF0ZS5nZXQgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzLl92bS5fZGF0YS4kJHN0YXRlXG59O1xuXG5wcm90b3R5cGVBY2Nlc3NvcnMkMS5zdGF0ZS5zZXQgPSBmdW5jdGlvbiAodikge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGFzc2VydChmYWxzZSwgXCJ1c2Ugc3RvcmUucmVwbGFjZVN0YXRlKCkgdG8gZXhwbGljaXQgcmVwbGFjZSBzdG9yZSBzdGF0ZS5cIik7XG4gIH1cbn07XG5cblN0b3JlLnByb3RvdHlwZS5jb21taXQgPSBmdW5jdGlvbiBjb21taXQgKF90eXBlLCBfcGF5bG9hZCwgX29wdGlvbnMpIHtcbiAgICB2YXIgdGhpcyQxID0gdGhpcztcblxuICAvLyBjaGVjayBvYmplY3Qtc3R5bGUgY29tbWl0XG4gIHZhciByZWYgPSB1bmlmeU9iamVjdFN0eWxlKF90eXBlLCBfcGF5bG9hZCwgX29wdGlvbnMpO1xuICAgIHZhciB0eXBlID0gcmVmLnR5cGU7XG4gICAgdmFyIHBheWxvYWQgPSByZWYucGF5bG9hZDtcbiAgICB2YXIgb3B0aW9ucyA9IHJlZi5vcHRpb25zO1xuXG4gIHZhciBtdXRhdGlvbiA9IHsgdHlwZTogdHlwZSwgcGF5bG9hZDogcGF5bG9hZCB9O1xuICB2YXIgZW50cnkgPSB0aGlzLl9tdXRhdGlvbnNbdHlwZV07XG4gIGlmICghZW50cnkpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgY29uc29sZS5lcnJvcigoXCJbdnVleF0gdW5rbm93biBtdXRhdGlvbiB0eXBlOiBcIiArIHR5cGUpKTtcbiAgICB9XG4gICAgcmV0dXJuXG4gIH1cbiAgdGhpcy5fd2l0aENvbW1pdChmdW5jdGlvbiAoKSB7XG4gICAgZW50cnkuZm9yRWFjaChmdW5jdGlvbiBjb21taXRJdGVyYXRvciAoaGFuZGxlcikge1xuICAgICAgaGFuZGxlcihwYXlsb2FkKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgdGhpcy5fc3Vic2NyaWJlcnNcbiAgICAuc2xpY2UoKSAvLyBzaGFsbG93IGNvcHkgdG8gcHJldmVudCBpdGVyYXRvciBpbnZhbGlkYXRpb24gaWYgc3Vic2NyaWJlciBzeW5jaHJvbm91c2x5IGNhbGxzIHVuc3Vic2NyaWJlXG4gICAgLmZvckVhY2goZnVuY3Rpb24gKHN1YikgeyByZXR1cm4gc3ViKG11dGF0aW9uLCB0aGlzJDEuc3RhdGUpOyB9KTtcblxuICBpZiAoXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJlxuICAgIG9wdGlvbnMgJiYgb3B0aW9ucy5zaWxlbnRcbiAgKSB7XG4gICAgY29uc29sZS53YXJuKFxuICAgICAgXCJbdnVleF0gbXV0YXRpb24gdHlwZTogXCIgKyB0eXBlICsgXCIuIFNpbGVudCBvcHRpb24gaGFzIGJlZW4gcmVtb3ZlZC4gXCIgK1xuICAgICAgJ1VzZSB0aGUgZmlsdGVyIGZ1bmN0aW9uYWxpdHkgaW4gdGhlIHZ1ZS1kZXZ0b29scydcbiAgICApO1xuICB9XG59O1xuXG5TdG9yZS5wcm90b3R5cGUuZGlzcGF0Y2ggPSBmdW5jdGlvbiBkaXNwYXRjaCAoX3R5cGUsIF9wYXlsb2FkKSB7XG4gICAgdmFyIHRoaXMkMSA9IHRoaXM7XG5cbiAgLy8gY2hlY2sgb2JqZWN0LXN0eWxlIGRpc3BhdGNoXG4gIHZhciByZWYgPSB1bmlmeU9iamVjdFN0eWxlKF90eXBlLCBfcGF5bG9hZCk7XG4gICAgdmFyIHR5cGUgPSByZWYudHlwZTtcbiAgICB2YXIgcGF5bG9hZCA9IHJlZi5wYXlsb2FkO1xuXG4gIHZhciBhY3Rpb24gPSB7IHR5cGU6IHR5cGUsIHBheWxvYWQ6IHBheWxvYWQgfTtcbiAgdmFyIGVudHJ5ID0gdGhpcy5fYWN0aW9uc1t0eXBlXTtcbiAgaWYgKCFlbnRyeSkge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICBjb25zb2xlLmVycm9yKChcIlt2dWV4XSB1bmtub3duIGFjdGlvbiB0eXBlOiBcIiArIHR5cGUpKTtcbiAgICB9XG4gICAgcmV0dXJuXG4gIH1cblxuICB0cnkge1xuICAgIHRoaXMuX2FjdGlvblN1YnNjcmliZXJzXG4gICAgICAuc2xpY2UoKSAvLyBzaGFsbG93IGNvcHkgdG8gcHJldmVudCBpdGVyYXRvciBpbnZhbGlkYXRpb24gaWYgc3Vic2NyaWJlciBzeW5jaHJvbm91c2x5IGNhbGxzIHVuc3Vic2NyaWJlXG4gICAgICAuZmlsdGVyKGZ1bmN0aW9uIChzdWIpIHsgcmV0dXJuIHN1Yi5iZWZvcmU7IH0pXG4gICAgICAuZm9yRWFjaChmdW5jdGlvbiAoc3ViKSB7IHJldHVybiBzdWIuYmVmb3JlKGFjdGlvbiwgdGhpcyQxLnN0YXRlKTsgfSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgY29uc29sZS53YXJuKFwiW3Z1ZXhdIGVycm9yIGluIGJlZm9yZSBhY3Rpb24gc3Vic2NyaWJlcnM6IFwiKTtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIHJlc3VsdCA9IGVudHJ5Lmxlbmd0aCA+IDFcbiAgICA/IFByb21pc2UuYWxsKGVudHJ5Lm1hcChmdW5jdGlvbiAoaGFuZGxlcikgeyByZXR1cm4gaGFuZGxlcihwYXlsb2FkKTsgfSkpXG4gICAgOiBlbnRyeVswXShwYXlsb2FkKTtcblxuICByZXR1cm4gcmVzdWx0LnRoZW4oZnVuY3Rpb24gKHJlcykge1xuICAgIHRyeSB7XG4gICAgICB0aGlzJDEuX2FjdGlvblN1YnNjcmliZXJzXG4gICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKHN1YikgeyByZXR1cm4gc3ViLmFmdGVyOyB9KVxuICAgICAgICAuZm9yRWFjaChmdW5jdGlvbiAoc3ViKSB7IHJldHVybiBzdWIuYWZ0ZXIoYWN0aW9uLCB0aGlzJDEuc3RhdGUpOyB9KTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICBjb25zb2xlLndhcm4oXCJbdnVleF0gZXJyb3IgaW4gYWZ0ZXIgYWN0aW9uIHN1YnNjcmliZXJzOiBcIik7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXNcbiAgfSlcbn07XG5cblN0b3JlLnByb3RvdHlwZS5zdWJzY3JpYmUgPSBmdW5jdGlvbiBzdWJzY3JpYmUgKGZuLCBvcHRpb25zKSB7XG4gIHJldHVybiBnZW5lcmljU3Vic2NyaWJlKGZuLCB0aGlzLl9zdWJzY3JpYmVycywgb3B0aW9ucylcbn07XG5cblN0b3JlLnByb3RvdHlwZS5zdWJzY3JpYmVBY3Rpb24gPSBmdW5jdGlvbiBzdWJzY3JpYmVBY3Rpb24gKGZuLCBvcHRpb25zKSB7XG4gIHZhciBzdWJzID0gdHlwZW9mIGZuID09PSAnZnVuY3Rpb24nID8geyBiZWZvcmU6IGZuIH0gOiBmbjtcbiAgcmV0dXJuIGdlbmVyaWNTdWJzY3JpYmUoc3VicywgdGhpcy5fYWN0aW9uU3Vic2NyaWJlcnMsIG9wdGlvbnMpXG59O1xuXG5TdG9yZS5wcm90b3R5cGUud2F0Y2ggPSBmdW5jdGlvbiB3YXRjaCAoZ2V0dGVyLCBjYiwgb3B0aW9ucykge1xuICAgIHZhciB0aGlzJDEgPSB0aGlzO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgYXNzZXJ0KHR5cGVvZiBnZXR0ZXIgPT09ICdmdW5jdGlvbicsIFwic3RvcmUud2F0Y2ggb25seSBhY2NlcHRzIGEgZnVuY3Rpb24uXCIpO1xuICB9XG4gIHJldHVybiB0aGlzLl93YXRjaGVyVk0uJHdhdGNoKGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdldHRlcih0aGlzJDEuc3RhdGUsIHRoaXMkMS5nZXR0ZXJzKTsgfSwgY2IsIG9wdGlvbnMpXG59O1xuXG5TdG9yZS5wcm90b3R5cGUucmVwbGFjZVN0YXRlID0gZnVuY3Rpb24gcmVwbGFjZVN0YXRlIChzdGF0ZSkge1xuICAgIHZhciB0aGlzJDEgPSB0aGlzO1xuXG4gIHRoaXMuX3dpdGhDb21taXQoZnVuY3Rpb24gKCkge1xuICAgIHRoaXMkMS5fdm0uX2RhdGEuJCRzdGF0ZSA9IHN0YXRlO1xuICB9KTtcbn07XG5cblN0b3JlLnByb3RvdHlwZS5yZWdpc3Rlck1vZHVsZSA9IGZ1bmN0aW9uIHJlZ2lzdGVyTW9kdWxlIChwYXRoLCByYXdNb2R1bGUsIG9wdGlvbnMpIHtcbiAgICBpZiAoIG9wdGlvbnMgPT09IHZvaWQgMCApIG9wdGlvbnMgPSB7fTtcblxuICBpZiAodHlwZW9mIHBhdGggPT09ICdzdHJpbmcnKSB7IHBhdGggPSBbcGF0aF07IH1cblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGFzc2VydChBcnJheS5pc0FycmF5KHBhdGgpLCBcIm1vZHVsZSBwYXRoIG11c3QgYmUgYSBzdHJpbmcgb3IgYW4gQXJyYXkuXCIpO1xuICAgIGFzc2VydChwYXRoLmxlbmd0aCA+IDAsICdjYW5ub3QgcmVnaXN0ZXIgdGhlIHJvb3QgbW9kdWxlIGJ5IHVzaW5nIHJlZ2lzdGVyTW9kdWxlLicpO1xuICB9XG5cbiAgdGhpcy5fbW9kdWxlcy5yZWdpc3RlcihwYXRoLCByYXdNb2R1bGUpO1xuICBpbnN0YWxsTW9kdWxlKHRoaXMsIHRoaXMuc3RhdGUsIHBhdGgsIHRoaXMuX21vZHVsZXMuZ2V0KHBhdGgpLCBvcHRpb25zLnByZXNlcnZlU3RhdGUpO1xuICAvLyByZXNldCBzdG9yZSB0byB1cGRhdGUgZ2V0dGVycy4uLlxuICByZXNldFN0b3JlVk0odGhpcywgdGhpcy5zdGF0ZSk7XG59O1xuXG5TdG9yZS5wcm90b3R5cGUudW5yZWdpc3Rlck1vZHVsZSA9IGZ1bmN0aW9uIHVucmVnaXN0ZXJNb2R1bGUgKHBhdGgpIHtcbiAgICB2YXIgdGhpcyQxID0gdGhpcztcblxuICBpZiAodHlwZW9mIHBhdGggPT09ICdzdHJpbmcnKSB7IHBhdGggPSBbcGF0aF07IH1cblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGFzc2VydChBcnJheS5pc0FycmF5KHBhdGgpLCBcIm1vZHVsZSBwYXRoIG11c3QgYmUgYSBzdHJpbmcgb3IgYW4gQXJyYXkuXCIpO1xuICB9XG5cbiAgdGhpcy5fbW9kdWxlcy51bnJlZ2lzdGVyKHBhdGgpO1xuICB0aGlzLl93aXRoQ29tbWl0KGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcGFyZW50U3RhdGUgPSBnZXROZXN0ZWRTdGF0ZSh0aGlzJDEuc3RhdGUsIHBhdGguc2xpY2UoMCwgLTEpKTtcbiAgICBWdWUuZGVsZXRlKHBhcmVudFN0YXRlLCBwYXRoW3BhdGgubGVuZ3RoIC0gMV0pO1xuICB9KTtcbiAgcmVzZXRTdG9yZSh0aGlzKTtcbn07XG5cblN0b3JlLnByb3RvdHlwZS5oYXNNb2R1bGUgPSBmdW5jdGlvbiBoYXNNb2R1bGUgKHBhdGgpIHtcbiAgaWYgKHR5cGVvZiBwYXRoID09PSAnc3RyaW5nJykgeyBwYXRoID0gW3BhdGhdOyB9XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBhc3NlcnQoQXJyYXkuaXNBcnJheShwYXRoKSwgXCJtb2R1bGUgcGF0aCBtdXN0IGJlIGEgc3RyaW5nIG9yIGFuIEFycmF5LlwiKTtcbiAgfVxuXG4gIHJldHVybiB0aGlzLl9tb2R1bGVzLmlzUmVnaXN0ZXJlZChwYXRoKVxufTtcblxuU3RvcmUucHJvdG90eXBlLmhvdFVwZGF0ZSA9IGZ1bmN0aW9uIGhvdFVwZGF0ZSAobmV3T3B0aW9ucykge1xuICB0aGlzLl9tb2R1bGVzLnVwZGF0ZShuZXdPcHRpb25zKTtcbiAgcmVzZXRTdG9yZSh0aGlzLCB0cnVlKTtcbn07XG5cblN0b3JlLnByb3RvdHlwZS5fd2l0aENvbW1pdCA9IGZ1bmN0aW9uIF93aXRoQ29tbWl0IChmbikge1xuICB2YXIgY29tbWl0dGluZyA9IHRoaXMuX2NvbW1pdHRpbmc7XG4gIHRoaXMuX2NvbW1pdHRpbmcgPSB0cnVlO1xuICBmbigpO1xuICB0aGlzLl9jb21taXR0aW5nID0gY29tbWl0dGluZztcbn07XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKCBTdG9yZS5wcm90b3R5cGUsIHByb3RvdHlwZUFjY2Vzc29ycyQxICk7XG5cbmZ1bmN0aW9uIGdlbmVyaWNTdWJzY3JpYmUgKGZuLCBzdWJzLCBvcHRpb25zKSB7XG4gIGlmIChzdWJzLmluZGV4T2YoZm4pIDwgMCkge1xuICAgIG9wdGlvbnMgJiYgb3B0aW9ucy5wcmVwZW5kXG4gICAgICA/IHN1YnMudW5zaGlmdChmbilcbiAgICAgIDogc3Vicy5wdXNoKGZuKTtcbiAgfVxuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBpID0gc3Vicy5pbmRleE9mKGZuKTtcbiAgICBpZiAoaSA+IC0xKSB7XG4gICAgICBzdWJzLnNwbGljZShpLCAxKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gcmVzZXRTdG9yZSAoc3RvcmUsIGhvdCkge1xuICBzdG9yZS5fYWN0aW9ucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIHN0b3JlLl9tdXRhdGlvbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICBzdG9yZS5fd3JhcHBlZEdldHRlcnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICBzdG9yZS5fbW9kdWxlc05hbWVzcGFjZU1hcCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIHZhciBzdGF0ZSA9IHN0b3JlLnN0YXRlO1xuICAvLyBpbml0IGFsbCBtb2R1bGVzXG4gIGluc3RhbGxNb2R1bGUoc3RvcmUsIHN0YXRlLCBbXSwgc3RvcmUuX21vZHVsZXMucm9vdCwgdHJ1ZSk7XG4gIC8vIHJlc2V0IHZtXG4gIHJlc2V0U3RvcmVWTShzdG9yZSwgc3RhdGUsIGhvdCk7XG59XG5cbmZ1bmN0aW9uIHJlc2V0U3RvcmVWTSAoc3RvcmUsIHN0YXRlLCBob3QpIHtcbiAgdmFyIG9sZFZtID0gc3RvcmUuX3ZtO1xuXG4gIC8vIGJpbmQgc3RvcmUgcHVibGljIGdldHRlcnNcbiAgc3RvcmUuZ2V0dGVycyA9IHt9O1xuICAvLyByZXNldCBsb2NhbCBnZXR0ZXJzIGNhY2hlXG4gIHN0b3JlLl9tYWtlTG9jYWxHZXR0ZXJzQ2FjaGUgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICB2YXIgd3JhcHBlZEdldHRlcnMgPSBzdG9yZS5fd3JhcHBlZEdldHRlcnM7XG4gIHZhciBjb21wdXRlZCA9IHt9O1xuICBmb3JFYWNoVmFsdWUod3JhcHBlZEdldHRlcnMsIGZ1bmN0aW9uIChmbiwga2V5KSB7XG4gICAgLy8gdXNlIGNvbXB1dGVkIHRvIGxldmVyYWdlIGl0cyBsYXp5LWNhY2hpbmcgbWVjaGFuaXNtXG4gICAgLy8gZGlyZWN0IGlubGluZSBmdW5jdGlvbiB1c2Ugd2lsbCBsZWFkIHRvIGNsb3N1cmUgcHJlc2VydmluZyBvbGRWbS5cbiAgICAvLyB1c2luZyBwYXJ0aWFsIHRvIHJldHVybiBmdW5jdGlvbiB3aXRoIG9ubHkgYXJndW1lbnRzIHByZXNlcnZlZCBpbiBjbG9zdXJlIGVudmlyb25tZW50LlxuICAgIGNvbXB1dGVkW2tleV0gPSBwYXJ0aWFsKGZuLCBzdG9yZSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHN0b3JlLmdldHRlcnMsIGtleSwge1xuICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzdG9yZS5fdm1ba2V5XTsgfSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUgLy8gZm9yIGxvY2FsIGdldHRlcnNcbiAgICB9KTtcbiAgfSk7XG5cbiAgLy8gdXNlIGEgVnVlIGluc3RhbmNlIHRvIHN0b3JlIHRoZSBzdGF0ZSB0cmVlXG4gIC8vIHN1cHByZXNzIHdhcm5pbmdzIGp1c3QgaW4gY2FzZSB0aGUgdXNlciBoYXMgYWRkZWRcbiAgLy8gc29tZSBmdW5reSBnbG9iYWwgbWl4aW5zXG4gIHZhciBzaWxlbnQgPSBWdWUuY29uZmlnLnNpbGVudDtcbiAgVnVlLmNvbmZpZy5zaWxlbnQgPSB0cnVlO1xuICBzdG9yZS5fdm0gPSBuZXcgVnVlKHtcbiAgICBkYXRhOiB7XG4gICAgICAkJHN0YXRlOiBzdGF0ZVxuICAgIH0sXG4gICAgY29tcHV0ZWQ6IGNvbXB1dGVkXG4gIH0pO1xuICBWdWUuY29uZmlnLnNpbGVudCA9IHNpbGVudDtcblxuICAvLyBlbmFibGUgc3RyaWN0IG1vZGUgZm9yIG5ldyB2bVxuICBpZiAoc3RvcmUuc3RyaWN0KSB7XG4gICAgZW5hYmxlU3RyaWN0TW9kZShzdG9yZSk7XG4gIH1cblxuICBpZiAob2xkVm0pIHtcbiAgICBpZiAoaG90KSB7XG4gICAgICAvLyBkaXNwYXRjaCBjaGFuZ2VzIGluIGFsbCBzdWJzY3JpYmVkIHdhdGNoZXJzXG4gICAgICAvLyB0byBmb3JjZSBnZXR0ZXIgcmUtZXZhbHVhdGlvbiBmb3IgaG90IHJlbG9hZGluZy5cbiAgICAgIHN0b3JlLl93aXRoQ29tbWl0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgb2xkVm0uX2RhdGEuJCRzdGF0ZSA9IG51bGw7XG4gICAgICB9KTtcbiAgICB9XG4gICAgVnVlLm5leHRUaWNrKGZ1bmN0aW9uICgpIHsgcmV0dXJuIG9sZFZtLiRkZXN0cm95KCk7IH0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIGluc3RhbGxNb2R1bGUgKHN0b3JlLCByb290U3RhdGUsIHBhdGgsIG1vZHVsZSwgaG90KSB7XG4gIHZhciBpc1Jvb3QgPSAhcGF0aC5sZW5ndGg7XG4gIHZhciBuYW1lc3BhY2UgPSBzdG9yZS5fbW9kdWxlcy5nZXROYW1lc3BhY2UocGF0aCk7XG5cbiAgLy8gcmVnaXN0ZXIgaW4gbmFtZXNwYWNlIG1hcFxuICBpZiAobW9kdWxlLm5hbWVzcGFjZWQpIHtcbiAgICBpZiAoc3RvcmUuX21vZHVsZXNOYW1lc3BhY2VNYXBbbmFtZXNwYWNlXSAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICBjb25zb2xlLmVycm9yKChcIlt2dWV4XSBkdXBsaWNhdGUgbmFtZXNwYWNlIFwiICsgbmFtZXNwYWNlICsgXCIgZm9yIHRoZSBuYW1lc3BhY2VkIG1vZHVsZSBcIiArIChwYXRoLmpvaW4oJy8nKSkpKTtcbiAgICB9XG4gICAgc3RvcmUuX21vZHVsZXNOYW1lc3BhY2VNYXBbbmFtZXNwYWNlXSA9IG1vZHVsZTtcbiAgfVxuXG4gIC8vIHNldCBzdGF0ZVxuICBpZiAoIWlzUm9vdCAmJiAhaG90KSB7XG4gICAgdmFyIHBhcmVudFN0YXRlID0gZ2V0TmVzdGVkU3RhdGUocm9vdFN0YXRlLCBwYXRoLnNsaWNlKDAsIC0xKSk7XG4gICAgdmFyIG1vZHVsZU5hbWUgPSBwYXRoW3BhdGgubGVuZ3RoIC0gMV07XG4gICAgc3RvcmUuX3dpdGhDb21taXQoZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgaWYgKG1vZHVsZU5hbWUgaW4gcGFyZW50U3RhdGUpIHtcbiAgICAgICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgICAgICAoXCJbdnVleF0gc3RhdGUgZmllbGQgXFxcIlwiICsgbW9kdWxlTmFtZSArIFwiXFxcIiB3YXMgb3ZlcnJpZGRlbiBieSBhIG1vZHVsZSB3aXRoIHRoZSBzYW1lIG5hbWUgYXQgXFxcIlwiICsgKHBhdGguam9pbignLicpKSArIFwiXFxcIlwiKVxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIFZ1ZS5zZXQocGFyZW50U3RhdGUsIG1vZHVsZU5hbWUsIG1vZHVsZS5zdGF0ZSk7XG4gICAgfSk7XG4gIH1cblxuICB2YXIgbG9jYWwgPSBtb2R1bGUuY29udGV4dCA9IG1ha2VMb2NhbENvbnRleHQoc3RvcmUsIG5hbWVzcGFjZSwgcGF0aCk7XG5cbiAgbW9kdWxlLmZvckVhY2hNdXRhdGlvbihmdW5jdGlvbiAobXV0YXRpb24sIGtleSkge1xuICAgIHZhciBuYW1lc3BhY2VkVHlwZSA9IG5hbWVzcGFjZSArIGtleTtcbiAgICByZWdpc3Rlck11dGF0aW9uKHN0b3JlLCBuYW1lc3BhY2VkVHlwZSwgbXV0YXRpb24sIGxvY2FsKTtcbiAgfSk7XG5cbiAgbW9kdWxlLmZvckVhY2hBY3Rpb24oZnVuY3Rpb24gKGFjdGlvbiwga2V5KSB7XG4gICAgdmFyIHR5cGUgPSBhY3Rpb24ucm9vdCA/IGtleSA6IG5hbWVzcGFjZSArIGtleTtcbiAgICB2YXIgaGFuZGxlciA9IGFjdGlvbi5oYW5kbGVyIHx8IGFjdGlvbjtcbiAgICByZWdpc3RlckFjdGlvbihzdG9yZSwgdHlwZSwgaGFuZGxlciwgbG9jYWwpO1xuICB9KTtcblxuICBtb2R1bGUuZm9yRWFjaEdldHRlcihmdW5jdGlvbiAoZ2V0dGVyLCBrZXkpIHtcbiAgICB2YXIgbmFtZXNwYWNlZFR5cGUgPSBuYW1lc3BhY2UgKyBrZXk7XG4gICAgcmVnaXN0ZXJHZXR0ZXIoc3RvcmUsIG5hbWVzcGFjZWRUeXBlLCBnZXR0ZXIsIGxvY2FsKTtcbiAgfSk7XG5cbiAgbW9kdWxlLmZvckVhY2hDaGlsZChmdW5jdGlvbiAoY2hpbGQsIGtleSkge1xuICAgIGluc3RhbGxNb2R1bGUoc3RvcmUsIHJvb3RTdGF0ZSwgcGF0aC5jb25jYXQoa2V5KSwgY2hpbGQsIGhvdCk7XG4gIH0pO1xufVxuXG4vKipcbiAqIG1ha2UgbG9jYWxpemVkIGRpc3BhdGNoLCBjb21taXQsIGdldHRlcnMgYW5kIHN0YXRlXG4gKiBpZiB0aGVyZSBpcyBubyBuYW1lc3BhY2UsIGp1c3QgdXNlIHJvb3Qgb25lc1xuICovXG5mdW5jdGlvbiBtYWtlTG9jYWxDb250ZXh0IChzdG9yZSwgbmFtZXNwYWNlLCBwYXRoKSB7XG4gIHZhciBub05hbWVzcGFjZSA9IG5hbWVzcGFjZSA9PT0gJyc7XG5cbiAgdmFyIGxvY2FsID0ge1xuICAgIGRpc3BhdGNoOiBub05hbWVzcGFjZSA/IHN0b3JlLmRpc3BhdGNoIDogZnVuY3Rpb24gKF90eXBlLCBfcGF5bG9hZCwgX29wdGlvbnMpIHtcbiAgICAgIHZhciBhcmdzID0gdW5pZnlPYmplY3RTdHlsZShfdHlwZSwgX3BheWxvYWQsIF9vcHRpb25zKTtcbiAgICAgIHZhciBwYXlsb2FkID0gYXJncy5wYXlsb2FkO1xuICAgICAgdmFyIG9wdGlvbnMgPSBhcmdzLm9wdGlvbnM7XG4gICAgICB2YXIgdHlwZSA9IGFyZ3MudHlwZTtcblxuICAgICAgaWYgKCFvcHRpb25zIHx8ICFvcHRpb25zLnJvb3QpIHtcbiAgICAgICAgdHlwZSA9IG5hbWVzcGFjZSArIHR5cGU7XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICFzdG9yZS5fYWN0aW9uc1t0eXBlXSkge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoKFwiW3Z1ZXhdIHVua25vd24gbG9jYWwgYWN0aW9uIHR5cGU6IFwiICsgKGFyZ3MudHlwZSkgKyBcIiwgZ2xvYmFsIHR5cGU6IFwiICsgdHlwZSkpO1xuICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBzdG9yZS5kaXNwYXRjaCh0eXBlLCBwYXlsb2FkKVxuICAgIH0sXG5cbiAgICBjb21taXQ6IG5vTmFtZXNwYWNlID8gc3RvcmUuY29tbWl0IDogZnVuY3Rpb24gKF90eXBlLCBfcGF5bG9hZCwgX29wdGlvbnMpIHtcbiAgICAgIHZhciBhcmdzID0gdW5pZnlPYmplY3RTdHlsZShfdHlwZSwgX3BheWxvYWQsIF9vcHRpb25zKTtcbiAgICAgIHZhciBwYXlsb2FkID0gYXJncy5wYXlsb2FkO1xuICAgICAgdmFyIG9wdGlvbnMgPSBhcmdzLm9wdGlvbnM7XG4gICAgICB2YXIgdHlwZSA9IGFyZ3MudHlwZTtcblxuICAgICAgaWYgKCFvcHRpb25zIHx8ICFvcHRpb25zLnJvb3QpIHtcbiAgICAgICAgdHlwZSA9IG5hbWVzcGFjZSArIHR5cGU7XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICFzdG9yZS5fbXV0YXRpb25zW3R5cGVdKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcigoXCJbdnVleF0gdW5rbm93biBsb2NhbCBtdXRhdGlvbiB0eXBlOiBcIiArIChhcmdzLnR5cGUpICsgXCIsIGdsb2JhbCB0eXBlOiBcIiArIHR5cGUpKTtcbiAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBzdG9yZS5jb21taXQodHlwZSwgcGF5bG9hZCwgb3B0aW9ucyk7XG4gICAgfVxuICB9O1xuXG4gIC8vIGdldHRlcnMgYW5kIHN0YXRlIG9iamVjdCBtdXN0IGJlIGdvdHRlbiBsYXppbHlcbiAgLy8gYmVjYXVzZSB0aGV5IHdpbGwgYmUgY2hhbmdlZCBieSB2bSB1cGRhdGVcbiAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMobG9jYWwsIHtcbiAgICBnZXR0ZXJzOiB7XG4gICAgICBnZXQ6IG5vTmFtZXNwYWNlXG4gICAgICAgID8gZnVuY3Rpb24gKCkgeyByZXR1cm4gc3RvcmUuZ2V0dGVyczsgfVxuICAgICAgICA6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1ha2VMb2NhbEdldHRlcnMoc3RvcmUsIG5hbWVzcGFjZSk7IH1cbiAgICB9LFxuICAgIHN0YXRlOiB7XG4gICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdldE5lc3RlZFN0YXRlKHN0b3JlLnN0YXRlLCBwYXRoKTsgfVxuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGxvY2FsXG59XG5cbmZ1bmN0aW9uIG1ha2VMb2NhbEdldHRlcnMgKHN0b3JlLCBuYW1lc3BhY2UpIHtcbiAgaWYgKCFzdG9yZS5fbWFrZUxvY2FsR2V0dGVyc0NhY2hlW25hbWVzcGFjZV0pIHtcbiAgICB2YXIgZ2V0dGVyc1Byb3h5ID0ge307XG4gICAgdmFyIHNwbGl0UG9zID0gbmFtZXNwYWNlLmxlbmd0aDtcbiAgICBPYmplY3Qua2V5cyhzdG9yZS5nZXR0ZXJzKS5mb3JFYWNoKGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgICAvLyBza2lwIGlmIHRoZSB0YXJnZXQgZ2V0dGVyIGlzIG5vdCBtYXRjaCB0aGlzIG5hbWVzcGFjZVxuICAgICAgaWYgKHR5cGUuc2xpY2UoMCwgc3BsaXRQb3MpICE9PSBuYW1lc3BhY2UpIHsgcmV0dXJuIH1cblxuICAgICAgLy8gZXh0cmFjdCBsb2NhbCBnZXR0ZXIgdHlwZVxuICAgICAgdmFyIGxvY2FsVHlwZSA9IHR5cGUuc2xpY2Uoc3BsaXRQb3MpO1xuXG4gICAgICAvLyBBZGQgYSBwb3J0IHRvIHRoZSBnZXR0ZXJzIHByb3h5LlxuICAgICAgLy8gRGVmaW5lIGFzIGdldHRlciBwcm9wZXJ0eSBiZWNhdXNlXG4gICAgICAvLyB3ZSBkbyBub3Qgd2FudCB0byBldmFsdWF0ZSB0aGUgZ2V0dGVycyBpbiB0aGlzIHRpbWUuXG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZ2V0dGVyc1Byb3h5LCBsb2NhbFR5cGUsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzdG9yZS5nZXR0ZXJzW3R5cGVdOyB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBzdG9yZS5fbWFrZUxvY2FsR2V0dGVyc0NhY2hlW25hbWVzcGFjZV0gPSBnZXR0ZXJzUHJveHk7XG4gIH1cblxuICByZXR1cm4gc3RvcmUuX21ha2VMb2NhbEdldHRlcnNDYWNoZVtuYW1lc3BhY2VdXG59XG5cbmZ1bmN0aW9uIHJlZ2lzdGVyTXV0YXRpb24gKHN0b3JlLCB0eXBlLCBoYW5kbGVyLCBsb2NhbCkge1xuICB2YXIgZW50cnkgPSBzdG9yZS5fbXV0YXRpb25zW3R5cGVdIHx8IChzdG9yZS5fbXV0YXRpb25zW3R5cGVdID0gW10pO1xuICBlbnRyeS5wdXNoKGZ1bmN0aW9uIHdyYXBwZWRNdXRhdGlvbkhhbmRsZXIgKHBheWxvYWQpIHtcbiAgICBoYW5kbGVyLmNhbGwoc3RvcmUsIGxvY2FsLnN0YXRlLCBwYXlsb2FkKTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHJlZ2lzdGVyQWN0aW9uIChzdG9yZSwgdHlwZSwgaGFuZGxlciwgbG9jYWwpIHtcbiAgdmFyIGVudHJ5ID0gc3RvcmUuX2FjdGlvbnNbdHlwZV0gfHwgKHN0b3JlLl9hY3Rpb25zW3R5cGVdID0gW10pO1xuICBlbnRyeS5wdXNoKGZ1bmN0aW9uIHdyYXBwZWRBY3Rpb25IYW5kbGVyIChwYXlsb2FkKSB7XG4gICAgdmFyIHJlcyA9IGhhbmRsZXIuY2FsbChzdG9yZSwge1xuICAgICAgZGlzcGF0Y2g6IGxvY2FsLmRpc3BhdGNoLFxuICAgICAgY29tbWl0OiBsb2NhbC5jb21taXQsXG4gICAgICBnZXR0ZXJzOiBsb2NhbC5nZXR0ZXJzLFxuICAgICAgc3RhdGU6IGxvY2FsLnN0YXRlLFxuICAgICAgcm9vdEdldHRlcnM6IHN0b3JlLmdldHRlcnMsXG4gICAgICByb290U3RhdGU6IHN0b3JlLnN0YXRlXG4gICAgfSwgcGF5bG9hZCk7XG4gICAgaWYgKCFpc1Byb21pc2UocmVzKSkge1xuICAgICAgcmVzID0gUHJvbWlzZS5yZXNvbHZlKHJlcyk7XG4gICAgfVxuICAgIGlmIChzdG9yZS5fZGV2dG9vbEhvb2spIHtcbiAgICAgIHJldHVybiByZXMuY2F0Y2goZnVuY3Rpb24gKGVycikge1xuICAgICAgICBzdG9yZS5fZGV2dG9vbEhvb2suZW1pdCgndnVleDplcnJvcicsIGVycik7XG4gICAgICAgIHRocm93IGVyclxuICAgICAgfSlcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHJlc1xuICAgIH1cbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHJlZ2lzdGVyR2V0dGVyIChzdG9yZSwgdHlwZSwgcmF3R2V0dGVyLCBsb2NhbCkge1xuICBpZiAoc3RvcmUuX3dyYXBwZWRHZXR0ZXJzW3R5cGVdKSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoKFwiW3Z1ZXhdIGR1cGxpY2F0ZSBnZXR0ZXIga2V5OiBcIiArIHR5cGUpKTtcbiAgICB9XG4gICAgcmV0dXJuXG4gIH1cbiAgc3RvcmUuX3dyYXBwZWRHZXR0ZXJzW3R5cGVdID0gZnVuY3Rpb24gd3JhcHBlZEdldHRlciAoc3RvcmUpIHtcbiAgICByZXR1cm4gcmF3R2V0dGVyKFxuICAgICAgbG9jYWwuc3RhdGUsIC8vIGxvY2FsIHN0YXRlXG4gICAgICBsb2NhbC5nZXR0ZXJzLCAvLyBsb2NhbCBnZXR0ZXJzXG4gICAgICBzdG9yZS5zdGF0ZSwgLy8gcm9vdCBzdGF0ZVxuICAgICAgc3RvcmUuZ2V0dGVycyAvLyByb290IGdldHRlcnNcbiAgICApXG4gIH07XG59XG5cbmZ1bmN0aW9uIGVuYWJsZVN0cmljdE1vZGUgKHN0b3JlKSB7XG4gIHN0b3JlLl92bS4kd2F0Y2goZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpcy5fZGF0YS4kJHN0YXRlIH0sIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgYXNzZXJ0KHN0b3JlLl9jb21taXR0aW5nLCBcImRvIG5vdCBtdXRhdGUgdnVleCBzdG9yZSBzdGF0ZSBvdXRzaWRlIG11dGF0aW9uIGhhbmRsZXJzLlwiKTtcbiAgICB9XG4gIH0sIHsgZGVlcDogdHJ1ZSwgc3luYzogdHJ1ZSB9KTtcbn1cblxuZnVuY3Rpb24gZ2V0TmVzdGVkU3RhdGUgKHN0YXRlLCBwYXRoKSB7XG4gIHJldHVybiBwYXRoLnJlZHVjZShmdW5jdGlvbiAoc3RhdGUsIGtleSkgeyByZXR1cm4gc3RhdGVba2V5XTsgfSwgc3RhdGUpXG59XG5cbmZ1bmN0aW9uIHVuaWZ5T2JqZWN0U3R5bGUgKHR5cGUsIHBheWxvYWQsIG9wdGlvbnMpIHtcbiAgaWYgKGlzT2JqZWN0KHR5cGUpICYmIHR5cGUudHlwZSkge1xuICAgIG9wdGlvbnMgPSBwYXlsb2FkO1xuICAgIHBheWxvYWQgPSB0eXBlO1xuICAgIHR5cGUgPSB0eXBlLnR5cGU7XG4gIH1cblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGFzc2VydCh0eXBlb2YgdHlwZSA9PT0gJ3N0cmluZycsIChcImV4cGVjdHMgc3RyaW5nIGFzIHRoZSB0eXBlLCBidXQgZm91bmQgXCIgKyAodHlwZW9mIHR5cGUpICsgXCIuXCIpKTtcbiAgfVxuXG4gIHJldHVybiB7IHR5cGU6IHR5cGUsIHBheWxvYWQ6IHBheWxvYWQsIG9wdGlvbnM6IG9wdGlvbnMgfVxufVxuXG5mdW5jdGlvbiBpbnN0YWxsIChfVnVlKSB7XG4gIGlmIChWdWUgJiYgX1Z1ZSA9PT0gVnVlKSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgICdbdnVleF0gYWxyZWFkeSBpbnN0YWxsZWQuIFZ1ZS51c2UoVnVleCkgc2hvdWxkIGJlIGNhbGxlZCBvbmx5IG9uY2UuJ1xuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuXG4gIH1cbiAgVnVlID0gX1Z1ZTtcbiAgYXBwbHlNaXhpbihWdWUpO1xufVxuXG4vKipcbiAqIFJlZHVjZSB0aGUgY29kZSB3aGljaCB3cml0dGVuIGluIFZ1ZS5qcyBmb3IgZ2V0dGluZyB0aGUgc3RhdGUuXG4gKiBAcGFyYW0ge1N0cmluZ30gW25hbWVzcGFjZV0gLSBNb2R1bGUncyBuYW1lc3BhY2VcbiAqIEBwYXJhbSB7T2JqZWN0fEFycmF5fSBzdGF0ZXMgIyBPYmplY3QncyBpdGVtIGNhbiBiZSBhIGZ1bmN0aW9uIHdoaWNoIGFjY2VwdCBzdGF0ZSBhbmQgZ2V0dGVycyBmb3IgcGFyYW0sIHlvdSBjYW4gZG8gc29tZXRoaW5nIGZvciBzdGF0ZSBhbmQgZ2V0dGVycyBpbiBpdC5cbiAqIEBwYXJhbSB7T2JqZWN0fVxuICovXG52YXIgbWFwU3RhdGUgPSBub3JtYWxpemVOYW1lc3BhY2UoZnVuY3Rpb24gKG5hbWVzcGFjZSwgc3RhdGVzKSB7XG4gIHZhciByZXMgPSB7fTtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgIWlzVmFsaWRNYXAoc3RhdGVzKSkge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1t2dWV4XSBtYXBTdGF0ZTogbWFwcGVyIHBhcmFtZXRlciBtdXN0IGJlIGVpdGhlciBhbiBBcnJheSBvciBhbiBPYmplY3QnKTtcbiAgfVxuICBub3JtYWxpemVNYXAoc3RhdGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChyZWYpIHtcbiAgICB2YXIga2V5ID0gcmVmLmtleTtcbiAgICB2YXIgdmFsID0gcmVmLnZhbDtcblxuICAgIHJlc1trZXldID0gZnVuY3Rpb24gbWFwcGVkU3RhdGUgKCkge1xuICAgICAgdmFyIHN0YXRlID0gdGhpcy4kc3RvcmUuc3RhdGU7XG4gICAgICB2YXIgZ2V0dGVycyA9IHRoaXMuJHN0b3JlLmdldHRlcnM7XG4gICAgICBpZiAobmFtZXNwYWNlKSB7XG4gICAgICAgIHZhciBtb2R1bGUgPSBnZXRNb2R1bGVCeU5hbWVzcGFjZSh0aGlzLiRzdG9yZSwgJ21hcFN0YXRlJywgbmFtZXNwYWNlKTtcbiAgICAgICAgaWYgKCFtb2R1bGUpIHtcbiAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuICAgICAgICBzdGF0ZSA9IG1vZHVsZS5jb250ZXh0LnN0YXRlO1xuICAgICAgICBnZXR0ZXJzID0gbW9kdWxlLmNvbnRleHQuZ2V0dGVycztcbiAgICAgIH1cbiAgICAgIHJldHVybiB0eXBlb2YgdmFsID09PSAnZnVuY3Rpb24nXG4gICAgICAgID8gdmFsLmNhbGwodGhpcywgc3RhdGUsIGdldHRlcnMpXG4gICAgICAgIDogc3RhdGVbdmFsXVxuICAgIH07XG4gICAgLy8gbWFyayB2dWV4IGdldHRlciBmb3IgZGV2dG9vbHNcbiAgICByZXNba2V5XS52dWV4ID0gdHJ1ZTtcbiAgfSk7XG4gIHJldHVybiByZXNcbn0pO1xuXG4vKipcbiAqIFJlZHVjZSB0aGUgY29kZSB3aGljaCB3cml0dGVuIGluIFZ1ZS5qcyBmb3IgY29tbWl0dGluZyB0aGUgbXV0YXRpb25cbiAqIEBwYXJhbSB7U3RyaW5nfSBbbmFtZXNwYWNlXSAtIE1vZHVsZSdzIG5hbWVzcGFjZVxuICogQHBhcmFtIHtPYmplY3R8QXJyYXl9IG11dGF0aW9ucyAjIE9iamVjdCdzIGl0ZW0gY2FuIGJlIGEgZnVuY3Rpb24gd2hpY2ggYWNjZXB0IGBjb21taXRgIGZ1bmN0aW9uIGFzIHRoZSBmaXJzdCBwYXJhbSwgaXQgY2FuIGFjY2VwdCBhbnRob3IgcGFyYW1zLiBZb3UgY2FuIGNvbW1pdCBtdXRhdGlvbiBhbmQgZG8gYW55IG90aGVyIHRoaW5ncyBpbiB0aGlzIGZ1bmN0aW9uLiBzcGVjaWFsbHksIFlvdSBuZWVkIHRvIHBhc3MgYW50aG9yIHBhcmFtcyBmcm9tIHRoZSBtYXBwZWQgZnVuY3Rpb24uXG4gKiBAcmV0dXJuIHtPYmplY3R9XG4gKi9cbnZhciBtYXBNdXRhdGlvbnMgPSBub3JtYWxpemVOYW1lc3BhY2UoZnVuY3Rpb24gKG5hbWVzcGFjZSwgbXV0YXRpb25zKSB7XG4gIHZhciByZXMgPSB7fTtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgIWlzVmFsaWRNYXAobXV0YXRpb25zKSkge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1t2dWV4XSBtYXBNdXRhdGlvbnM6IG1hcHBlciBwYXJhbWV0ZXIgbXVzdCBiZSBlaXRoZXIgYW4gQXJyYXkgb3IgYW4gT2JqZWN0Jyk7XG4gIH1cbiAgbm9ybWFsaXplTWFwKG11dGF0aW9ucykuZm9yRWFjaChmdW5jdGlvbiAocmVmKSB7XG4gICAgdmFyIGtleSA9IHJlZi5rZXk7XG4gICAgdmFyIHZhbCA9IHJlZi52YWw7XG5cbiAgICByZXNba2V5XSA9IGZ1bmN0aW9uIG1hcHBlZE11dGF0aW9uICgpIHtcbiAgICAgIHZhciBhcmdzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgICB3aGlsZSAoIGxlbi0tICkgYXJnc1sgbGVuIF0gPSBhcmd1bWVudHNbIGxlbiBdO1xuXG4gICAgICAvLyBHZXQgdGhlIGNvbW1pdCBtZXRob2QgZnJvbSBzdG9yZVxuICAgICAgdmFyIGNvbW1pdCA9IHRoaXMuJHN0b3JlLmNvbW1pdDtcbiAgICAgIGlmIChuYW1lc3BhY2UpIHtcbiAgICAgICAgdmFyIG1vZHVsZSA9IGdldE1vZHVsZUJ5TmFtZXNwYWNlKHRoaXMuJHN0b3JlLCAnbWFwTXV0YXRpb25zJywgbmFtZXNwYWNlKTtcbiAgICAgICAgaWYgKCFtb2R1bGUpIHtcbiAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuICAgICAgICBjb21taXQgPSBtb2R1bGUuY29udGV4dC5jb21taXQ7XG4gICAgICB9XG4gICAgICByZXR1cm4gdHlwZW9mIHZhbCA9PT0gJ2Z1bmN0aW9uJ1xuICAgICAgICA/IHZhbC5hcHBseSh0aGlzLCBbY29tbWl0XS5jb25jYXQoYXJncykpXG4gICAgICAgIDogY29tbWl0LmFwcGx5KHRoaXMuJHN0b3JlLCBbdmFsXS5jb25jYXQoYXJncykpXG4gICAgfTtcbiAgfSk7XG4gIHJldHVybiByZXNcbn0pO1xuXG4vKipcbiAqIFJlZHVjZSB0aGUgY29kZSB3aGljaCB3cml0dGVuIGluIFZ1ZS5qcyBmb3IgZ2V0dGluZyB0aGUgZ2V0dGVyc1xuICogQHBhcmFtIHtTdHJpbmd9IFtuYW1lc3BhY2VdIC0gTW9kdWxlJ3MgbmFtZXNwYWNlXG4gKiBAcGFyYW0ge09iamVjdHxBcnJheX0gZ2V0dGVyc1xuICogQHJldHVybiB7T2JqZWN0fVxuICovXG52YXIgbWFwR2V0dGVycyA9IG5vcm1hbGl6ZU5hbWVzcGFjZShmdW5jdGlvbiAobmFtZXNwYWNlLCBnZXR0ZXJzKSB7XG4gIHZhciByZXMgPSB7fTtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgIWlzVmFsaWRNYXAoZ2V0dGVycykpIHtcbiAgICBjb25zb2xlLmVycm9yKCdbdnVleF0gbWFwR2V0dGVyczogbWFwcGVyIHBhcmFtZXRlciBtdXN0IGJlIGVpdGhlciBhbiBBcnJheSBvciBhbiBPYmplY3QnKTtcbiAgfVxuICBub3JtYWxpemVNYXAoZ2V0dGVycykuZm9yRWFjaChmdW5jdGlvbiAocmVmKSB7XG4gICAgdmFyIGtleSA9IHJlZi5rZXk7XG4gICAgdmFyIHZhbCA9IHJlZi52YWw7XG5cbiAgICAvLyBUaGUgbmFtZXNwYWNlIGhhcyBiZWVuIG11dGF0ZWQgYnkgbm9ybWFsaXplTmFtZXNwYWNlXG4gICAgdmFsID0gbmFtZXNwYWNlICsgdmFsO1xuICAgIHJlc1trZXldID0gZnVuY3Rpb24gbWFwcGVkR2V0dGVyICgpIHtcbiAgICAgIGlmIChuYW1lc3BhY2UgJiYgIWdldE1vZHVsZUJ5TmFtZXNwYWNlKHRoaXMuJHN0b3JlLCAnbWFwR2V0dGVycycsIG5hbWVzcGFjZSkpIHtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiAhKHZhbCBpbiB0aGlzLiRzdG9yZS5nZXR0ZXJzKSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKChcIlt2dWV4XSB1bmtub3duIGdldHRlcjogXCIgKyB2YWwpKTtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVyc1t2YWxdXG4gICAgfTtcbiAgICAvLyBtYXJrIHZ1ZXggZ2V0dGVyIGZvciBkZXZ0b29sc1xuICAgIHJlc1trZXldLnZ1ZXggPSB0cnVlO1xuICB9KTtcbiAgcmV0dXJuIHJlc1xufSk7XG5cbi8qKlxuICogUmVkdWNlIHRoZSBjb2RlIHdoaWNoIHdyaXR0ZW4gaW4gVnVlLmpzIGZvciBkaXNwYXRjaCB0aGUgYWN0aW9uXG4gKiBAcGFyYW0ge1N0cmluZ30gW25hbWVzcGFjZV0gLSBNb2R1bGUncyBuYW1lc3BhY2VcbiAqIEBwYXJhbSB7T2JqZWN0fEFycmF5fSBhY3Rpb25zICMgT2JqZWN0J3MgaXRlbSBjYW4gYmUgYSBmdW5jdGlvbiB3aGljaCBhY2NlcHQgYGRpc3BhdGNoYCBmdW5jdGlvbiBhcyB0aGUgZmlyc3QgcGFyYW0sIGl0IGNhbiBhY2NlcHQgYW50aG9yIHBhcmFtcy4gWW91IGNhbiBkaXNwYXRjaCBhY3Rpb24gYW5kIGRvIGFueSBvdGhlciB0aGluZ3MgaW4gdGhpcyBmdW5jdGlvbi4gc3BlY2lhbGx5LCBZb3UgbmVlZCB0byBwYXNzIGFudGhvciBwYXJhbXMgZnJvbSB0aGUgbWFwcGVkIGZ1bmN0aW9uLlxuICogQHJldHVybiB7T2JqZWN0fVxuICovXG52YXIgbWFwQWN0aW9ucyA9IG5vcm1hbGl6ZU5hbWVzcGFjZShmdW5jdGlvbiAobmFtZXNwYWNlLCBhY3Rpb25zKSB7XG4gIHZhciByZXMgPSB7fTtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgIWlzVmFsaWRNYXAoYWN0aW9ucykpIHtcbiAgICBjb25zb2xlLmVycm9yKCdbdnVleF0gbWFwQWN0aW9uczogbWFwcGVyIHBhcmFtZXRlciBtdXN0IGJlIGVpdGhlciBhbiBBcnJheSBvciBhbiBPYmplY3QnKTtcbiAgfVxuICBub3JtYWxpemVNYXAoYWN0aW9ucykuZm9yRWFjaChmdW5jdGlvbiAocmVmKSB7XG4gICAgdmFyIGtleSA9IHJlZi5rZXk7XG4gICAgdmFyIHZhbCA9IHJlZi52YWw7XG5cbiAgICByZXNba2V5XSA9IGZ1bmN0aW9uIG1hcHBlZEFjdGlvbiAoKSB7XG4gICAgICB2YXIgYXJncyA9IFtdLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgICAgd2hpbGUgKCBsZW4tLSApIGFyZ3NbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gXTtcblxuICAgICAgLy8gZ2V0IGRpc3BhdGNoIGZ1bmN0aW9uIGZyb20gc3RvcmVcbiAgICAgIHZhciBkaXNwYXRjaCA9IHRoaXMuJHN0b3JlLmRpc3BhdGNoO1xuICAgICAgaWYgKG5hbWVzcGFjZSkge1xuICAgICAgICB2YXIgbW9kdWxlID0gZ2V0TW9kdWxlQnlOYW1lc3BhY2UodGhpcy4kc3RvcmUsICdtYXBBY3Rpb25zJywgbmFtZXNwYWNlKTtcbiAgICAgICAgaWYgKCFtb2R1bGUpIHtcbiAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuICAgICAgICBkaXNwYXRjaCA9IG1vZHVsZS5jb250ZXh0LmRpc3BhdGNoO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyB2YWwuYXBwbHkodGhpcywgW2Rpc3BhdGNoXS5jb25jYXQoYXJncykpXG4gICAgICAgIDogZGlzcGF0Y2guYXBwbHkodGhpcy4kc3RvcmUsIFt2YWxdLmNvbmNhdChhcmdzKSlcbiAgICB9O1xuICB9KTtcbiAgcmV0dXJuIHJlc1xufSk7XG5cbi8qKlxuICogUmViaW5kaW5nIG5hbWVzcGFjZSBwYXJhbSBmb3IgbWFwWFhYIGZ1bmN0aW9uIGluIHNwZWNpYWwgc2NvcGVkLCBhbmQgcmV0dXJuIHRoZW0gYnkgc2ltcGxlIG9iamVjdFxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWVzcGFjZVxuICogQHJldHVybiB7T2JqZWN0fVxuICovXG52YXIgY3JlYXRlTmFtZXNwYWNlZEhlbHBlcnMgPSBmdW5jdGlvbiAobmFtZXNwYWNlKSB7IHJldHVybiAoe1xuICBtYXBTdGF0ZTogbWFwU3RhdGUuYmluZChudWxsLCBuYW1lc3BhY2UpLFxuICBtYXBHZXR0ZXJzOiBtYXBHZXR0ZXJzLmJpbmQobnVsbCwgbmFtZXNwYWNlKSxcbiAgbWFwTXV0YXRpb25zOiBtYXBNdXRhdGlvbnMuYmluZChudWxsLCBuYW1lc3BhY2UpLFxuICBtYXBBY3Rpb25zOiBtYXBBY3Rpb25zLmJpbmQobnVsbCwgbmFtZXNwYWNlKVxufSk7IH07XG5cbi8qKlxuICogTm9ybWFsaXplIHRoZSBtYXBcbiAqIG5vcm1hbGl6ZU1hcChbMSwgMiwgM10pID0+IFsgeyBrZXk6IDEsIHZhbDogMSB9LCB7IGtleTogMiwgdmFsOiAyIH0sIHsga2V5OiAzLCB2YWw6IDMgfSBdXG4gKiBub3JtYWxpemVNYXAoe2E6IDEsIGI6IDIsIGM6IDN9KSA9PiBbIHsga2V5OiAnYScsIHZhbDogMSB9LCB7IGtleTogJ2InLCB2YWw6IDIgfSwgeyBrZXk6ICdjJywgdmFsOiAzIH0gXVxuICogQHBhcmFtIHtBcnJheXxPYmplY3R9IG1hcFxuICogQHJldHVybiB7T2JqZWN0fVxuICovXG5mdW5jdGlvbiBub3JtYWxpemVNYXAgKG1hcCkge1xuICBpZiAoIWlzVmFsaWRNYXAobWFwKSkge1xuICAgIHJldHVybiBbXVxuICB9XG4gIHJldHVybiBBcnJheS5pc0FycmF5KG1hcClcbiAgICA/IG1hcC5tYXAoZnVuY3Rpb24gKGtleSkgeyByZXR1cm4gKHsga2V5OiBrZXksIHZhbDoga2V5IH0pOyB9KVxuICAgIDogT2JqZWN0LmtleXMobWFwKS5tYXAoZnVuY3Rpb24gKGtleSkgeyByZXR1cm4gKHsga2V5OiBrZXksIHZhbDogbWFwW2tleV0gfSk7IH0pXG59XG5cbi8qKlxuICogVmFsaWRhdGUgd2hldGhlciBnaXZlbiBtYXAgaXMgdmFsaWQgb3Igbm90XG4gKiBAcGFyYW0geyp9IG1hcFxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqL1xuZnVuY3Rpb24gaXNWYWxpZE1hcCAobWFwKSB7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KG1hcCkgfHwgaXNPYmplY3QobWFwKVxufVxuXG4vKipcbiAqIFJldHVybiBhIGZ1bmN0aW9uIGV4cGVjdCB0d28gcGFyYW0gY29udGFpbnMgbmFtZXNwYWNlIGFuZCBtYXAuIGl0IHdpbGwgbm9ybWFsaXplIHRoZSBuYW1lc3BhY2UgYW5kIHRoZW4gdGhlIHBhcmFtJ3MgZnVuY3Rpb24gd2lsbCBoYW5kbGUgdGhlIG5ldyBuYW1lc3BhY2UgYW5kIHRoZSBtYXAuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmblxuICogQHJldHVybiB7RnVuY3Rpb259XG4gKi9cbmZ1bmN0aW9uIG5vcm1hbGl6ZU5hbWVzcGFjZSAoZm4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChuYW1lc3BhY2UsIG1hcCkge1xuICAgIGlmICh0eXBlb2YgbmFtZXNwYWNlICE9PSAnc3RyaW5nJykge1xuICAgICAgbWFwID0gbmFtZXNwYWNlO1xuICAgICAgbmFtZXNwYWNlID0gJyc7XG4gICAgfSBlbHNlIGlmIChuYW1lc3BhY2UuY2hhckF0KG5hbWVzcGFjZS5sZW5ndGggLSAxKSAhPT0gJy8nKSB7XG4gICAgICBuYW1lc3BhY2UgKz0gJy8nO1xuICAgIH1cbiAgICByZXR1cm4gZm4obmFtZXNwYWNlLCBtYXApXG4gIH1cbn1cblxuLyoqXG4gKiBTZWFyY2ggYSBzcGVjaWFsIG1vZHVsZSBmcm9tIHN0b3JlIGJ5IG5hbWVzcGFjZS4gaWYgbW9kdWxlIG5vdCBleGlzdCwgcHJpbnQgZXJyb3IgbWVzc2FnZS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBzdG9yZVxuICogQHBhcmFtIHtTdHJpbmd9IGhlbHBlclxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWVzcGFjZVxuICogQHJldHVybiB7T2JqZWN0fVxuICovXG5mdW5jdGlvbiBnZXRNb2R1bGVCeU5hbWVzcGFjZSAoc3RvcmUsIGhlbHBlciwgbmFtZXNwYWNlKSB7XG4gIHZhciBtb2R1bGUgPSBzdG9yZS5fbW9kdWxlc05hbWVzcGFjZU1hcFtuYW1lc3BhY2VdO1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiAhbW9kdWxlKSB7XG4gICAgY29uc29sZS5lcnJvcigoXCJbdnVleF0gbW9kdWxlIG5hbWVzcGFjZSBub3QgZm91bmQgaW4gXCIgKyBoZWxwZXIgKyBcIigpOiBcIiArIG5hbWVzcGFjZSkpO1xuICB9XG4gIHJldHVybiBtb2R1bGVcbn1cblxudmFyIGluZGV4X2VzbSA9IHtcbiAgU3RvcmU6IFN0b3JlLFxuICBpbnN0YWxsOiBpbnN0YWxsLFxuICB2ZXJzaW9uOiAnMy4zLjAnLFxuICBtYXBTdGF0ZTogbWFwU3RhdGUsXG4gIG1hcE11dGF0aW9uczogbWFwTXV0YXRpb25zLFxuICBtYXBHZXR0ZXJzOiBtYXBHZXR0ZXJzLFxuICBtYXBBY3Rpb25zOiBtYXBBY3Rpb25zLFxuICBjcmVhdGVOYW1lc3BhY2VkSGVscGVyczogY3JlYXRlTmFtZXNwYWNlZEhlbHBlcnNcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGluZGV4X2VzbTtcbmV4cG9ydCB7IFN0b3JlLCBpbnN0YWxsLCBtYXBTdGF0ZSwgbWFwTXV0YXRpb25zLCBtYXBHZXR0ZXJzLCBtYXBBY3Rpb25zLCBjcmVhdGVOYW1lc3BhY2VkSGVscGVycyB9O1xuIiwiLyohXG4gICogdnVlLXJvdXRlciB2My4xLjVcbiAgKiAoYykgMjAyMCBFdmFuIFlvdVxuICAqIEBsaWNlbnNlIE1JVFxuICAqL1xuLyogICovXG5cbmZ1bmN0aW9uIGFzc2VydCAoY29uZGl0aW9uLCBtZXNzYWdlKSB7XG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKChcIlt2dWUtcm91dGVyXSBcIiArIG1lc3NhZ2UpKVxuICB9XG59XG5cbmZ1bmN0aW9uIHdhcm4gKGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiAhY29uZGl0aW9uKSB7XG4gICAgdHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnICYmIGNvbnNvbGUud2FybigoXCJbdnVlLXJvdXRlcl0gXCIgKyBtZXNzYWdlKSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaXNFcnJvciAoZXJyKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZXJyKS5pbmRleE9mKCdFcnJvcicpID4gLTFcbn1cblxuZnVuY3Rpb24gaXNFeHRlbmRlZEVycm9yIChjb25zdHJ1Y3RvciwgZXJyKSB7XG4gIHJldHVybiAoXG4gICAgZXJyIGluc3RhbmNlb2YgY29uc3RydWN0b3IgfHxcbiAgICAvLyBfbmFtZSBpcyB0byBzdXBwb3J0IElFOSB0b29cbiAgICAoZXJyICYmIChlcnIubmFtZSA9PT0gY29uc3RydWN0b3IubmFtZSB8fCBlcnIuX25hbWUgPT09IGNvbnN0cnVjdG9yLl9uYW1lKSlcbiAgKVxufVxuXG5mdW5jdGlvbiBleHRlbmQgKGEsIGIpIHtcbiAgZm9yICh2YXIga2V5IGluIGIpIHtcbiAgICBhW2tleV0gPSBiW2tleV07XG4gIH1cbiAgcmV0dXJuIGFcbn1cblxudmFyIFZpZXcgPSB7XG4gIG5hbWU6ICdSb3V0ZXJWaWV3JyxcbiAgZnVuY3Rpb25hbDogdHJ1ZSxcbiAgcHJvcHM6IHtcbiAgICBuYW1lOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnZGVmYXVsdCdcbiAgICB9XG4gIH0sXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyIChfLCByZWYpIHtcbiAgICB2YXIgcHJvcHMgPSByZWYucHJvcHM7XG4gICAgdmFyIGNoaWxkcmVuID0gcmVmLmNoaWxkcmVuO1xuICAgIHZhciBwYXJlbnQgPSByZWYucGFyZW50O1xuICAgIHZhciBkYXRhID0gcmVmLmRhdGE7XG5cbiAgICAvLyB1c2VkIGJ5IGRldnRvb2xzIHRvIGRpc3BsYXkgYSByb3V0ZXItdmlldyBiYWRnZVxuICAgIGRhdGEucm91dGVyVmlldyA9IHRydWU7XG5cbiAgICAvLyBkaXJlY3RseSB1c2UgcGFyZW50IGNvbnRleHQncyBjcmVhdGVFbGVtZW50KCkgZnVuY3Rpb25cbiAgICAvLyBzbyB0aGF0IGNvbXBvbmVudHMgcmVuZGVyZWQgYnkgcm91dGVyLXZpZXcgY2FuIHJlc29sdmUgbmFtZWQgc2xvdHNcbiAgICB2YXIgaCA9IHBhcmVudC4kY3JlYXRlRWxlbWVudDtcbiAgICB2YXIgbmFtZSA9IHByb3BzLm5hbWU7XG4gICAgdmFyIHJvdXRlID0gcGFyZW50LiRyb3V0ZTtcbiAgICB2YXIgY2FjaGUgPSBwYXJlbnQuX3JvdXRlclZpZXdDYWNoZSB8fCAocGFyZW50Ll9yb3V0ZXJWaWV3Q2FjaGUgPSB7fSk7XG5cbiAgICAvLyBkZXRlcm1pbmUgY3VycmVudCB2aWV3IGRlcHRoLCBhbHNvIGNoZWNrIHRvIHNlZSBpZiB0aGUgdHJlZVxuICAgIC8vIGhhcyBiZWVuIHRvZ2dsZWQgaW5hY3RpdmUgYnV0IGtlcHQtYWxpdmUuXG4gICAgdmFyIGRlcHRoID0gMDtcbiAgICB2YXIgaW5hY3RpdmUgPSBmYWxzZTtcbiAgICB3aGlsZSAocGFyZW50ICYmIHBhcmVudC5fcm91dGVyUm9vdCAhPT0gcGFyZW50KSB7XG4gICAgICB2YXIgdm5vZGVEYXRhID0gcGFyZW50LiR2bm9kZSA/IHBhcmVudC4kdm5vZGUuZGF0YSA6IHt9O1xuICAgICAgaWYgKHZub2RlRGF0YS5yb3V0ZXJWaWV3KSB7XG4gICAgICAgIGRlcHRoKys7XG4gICAgICB9XG4gICAgICBpZiAodm5vZGVEYXRhLmtlZXBBbGl2ZSAmJiBwYXJlbnQuX2RpcmVjdEluYWN0aXZlICYmIHBhcmVudC5faW5hY3RpdmUpIHtcbiAgICAgICAgaW5hY3RpdmUgPSB0cnVlO1xuICAgICAgfVxuICAgICAgcGFyZW50ID0gcGFyZW50LiRwYXJlbnQ7XG4gICAgfVxuICAgIGRhdGEucm91dGVyVmlld0RlcHRoID0gZGVwdGg7XG5cbiAgICAvLyByZW5kZXIgcHJldmlvdXMgdmlldyBpZiB0aGUgdHJlZSBpcyBpbmFjdGl2ZSBhbmQga2VwdC1hbGl2ZVxuICAgIGlmIChpbmFjdGl2ZSkge1xuICAgICAgdmFyIGNhY2hlZERhdGEgPSBjYWNoZVtuYW1lXTtcbiAgICAgIHZhciBjYWNoZWRDb21wb25lbnQgPSBjYWNoZWREYXRhICYmIGNhY2hlZERhdGEuY29tcG9uZW50O1xuICAgICAgaWYgKGNhY2hlZENvbXBvbmVudCkge1xuICAgICAgICAvLyAjMjMwMVxuICAgICAgICAvLyBwYXNzIHByb3BzXG4gICAgICAgIGlmIChjYWNoZWREYXRhLmNvbmZpZ1Byb3BzKSB7XG4gICAgICAgICAgZmlsbFByb3BzaW5EYXRhKGNhY2hlZENvbXBvbmVudCwgZGF0YSwgY2FjaGVkRGF0YS5yb3V0ZSwgY2FjaGVkRGF0YS5jb25maWdQcm9wcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGgoY2FjaGVkQ29tcG9uZW50LCBkYXRhLCBjaGlsZHJlbilcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIHJlbmRlciBwcmV2aW91cyBlbXB0eSB2aWV3XG4gICAgICAgIHJldHVybiBoKClcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgbWF0Y2hlZCA9IHJvdXRlLm1hdGNoZWRbZGVwdGhdO1xuICAgIHZhciBjb21wb25lbnQgPSBtYXRjaGVkICYmIG1hdGNoZWQuY29tcG9uZW50c1tuYW1lXTtcblxuICAgIC8vIHJlbmRlciBlbXB0eSBub2RlIGlmIG5vIG1hdGNoZWQgcm91dGUgb3Igbm8gY29uZmlnIGNvbXBvbmVudFxuICAgIGlmICghbWF0Y2hlZCB8fCAhY29tcG9uZW50KSB7XG4gICAgICBjYWNoZVtuYW1lXSA9IG51bGw7XG4gICAgICByZXR1cm4gaCgpXG4gICAgfVxuXG4gICAgLy8gY2FjaGUgY29tcG9uZW50XG4gICAgY2FjaGVbbmFtZV0gPSB7IGNvbXBvbmVudDogY29tcG9uZW50IH07XG5cbiAgICAvLyBhdHRhY2ggaW5zdGFuY2UgcmVnaXN0cmF0aW9uIGhvb2tcbiAgICAvLyB0aGlzIHdpbGwgYmUgY2FsbGVkIGluIHRoZSBpbnN0YW5jZSdzIGluamVjdGVkIGxpZmVjeWNsZSBob29rc1xuICAgIGRhdGEucmVnaXN0ZXJSb3V0ZUluc3RhbmNlID0gZnVuY3Rpb24gKHZtLCB2YWwpIHtcbiAgICAgIC8vIHZhbCBjb3VsZCBiZSB1bmRlZmluZWQgZm9yIHVucmVnaXN0cmF0aW9uXG4gICAgICB2YXIgY3VycmVudCA9IG1hdGNoZWQuaW5zdGFuY2VzW25hbWVdO1xuICAgICAgaWYgKFxuICAgICAgICAodmFsICYmIGN1cnJlbnQgIT09IHZtKSB8fFxuICAgICAgICAoIXZhbCAmJiBjdXJyZW50ID09PSB2bSlcbiAgICAgICkge1xuICAgICAgICBtYXRjaGVkLmluc3RhbmNlc1tuYW1lXSA9IHZhbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBhbHNvIHJlZ2lzdGVyIGluc3RhbmNlIGluIHByZXBhdGNoIGhvb2tcbiAgICAvLyBpbiBjYXNlIHRoZSBzYW1lIGNvbXBvbmVudCBpbnN0YW5jZSBpcyByZXVzZWQgYWNyb3NzIGRpZmZlcmVudCByb3V0ZXNcbiAgICA7KGRhdGEuaG9vayB8fCAoZGF0YS5ob29rID0ge30pKS5wcmVwYXRjaCA9IGZ1bmN0aW9uIChfLCB2bm9kZSkge1xuICAgICAgbWF0Y2hlZC5pbnN0YW5jZXNbbmFtZV0gPSB2bm9kZS5jb21wb25lbnRJbnN0YW5jZTtcbiAgICB9O1xuXG4gICAgLy8gcmVnaXN0ZXIgaW5zdGFuY2UgaW4gaW5pdCBob29rXG4gICAgLy8gaW4gY2FzZSBrZXB0LWFsaXZlIGNvbXBvbmVudCBiZSBhY3RpdmVkIHdoZW4gcm91dGVzIGNoYW5nZWRcbiAgICBkYXRhLmhvb2suaW5pdCA9IGZ1bmN0aW9uICh2bm9kZSkge1xuICAgICAgaWYgKHZub2RlLmRhdGEua2VlcEFsaXZlICYmXG4gICAgICAgIHZub2RlLmNvbXBvbmVudEluc3RhbmNlICYmXG4gICAgICAgIHZub2RlLmNvbXBvbmVudEluc3RhbmNlICE9PSBtYXRjaGVkLmluc3RhbmNlc1tuYW1lXVxuICAgICAgKSB7XG4gICAgICAgIG1hdGNoZWQuaW5zdGFuY2VzW25hbWVdID0gdm5vZGUuY29tcG9uZW50SW5zdGFuY2U7XG4gICAgICB9XG4gICAgfTtcblxuICAgIHZhciBjb25maWdQcm9wcyA9IG1hdGNoZWQucHJvcHMgJiYgbWF0Y2hlZC5wcm9wc1tuYW1lXTtcbiAgICAvLyBzYXZlIHJvdXRlIGFuZCBjb25maWdQcm9wcyBpbiBjYWNoY2VcbiAgICBpZiAoY29uZmlnUHJvcHMpIHtcbiAgICAgIGV4dGVuZChjYWNoZVtuYW1lXSwge1xuICAgICAgICByb3V0ZTogcm91dGUsXG4gICAgICAgIGNvbmZpZ1Byb3BzOiBjb25maWdQcm9wc1xuICAgICAgfSk7XG4gICAgICBmaWxsUHJvcHNpbkRhdGEoY29tcG9uZW50LCBkYXRhLCByb3V0ZSwgY29uZmlnUHJvcHMpO1xuICAgIH1cblxuICAgIHJldHVybiBoKGNvbXBvbmVudCwgZGF0YSwgY2hpbGRyZW4pXG4gIH1cbn07XG5cbmZ1bmN0aW9uIGZpbGxQcm9wc2luRGF0YSAoY29tcG9uZW50LCBkYXRhLCByb3V0ZSwgY29uZmlnUHJvcHMpIHtcbiAgLy8gcmVzb2x2ZSBwcm9wc1xuICB2YXIgcHJvcHNUb1Bhc3MgPSBkYXRhLnByb3BzID0gcmVzb2x2ZVByb3BzKHJvdXRlLCBjb25maWdQcm9wcyk7XG4gIGlmIChwcm9wc1RvUGFzcykge1xuICAgIC8vIGNsb25lIHRvIHByZXZlbnQgbXV0YXRpb25cbiAgICBwcm9wc1RvUGFzcyA9IGRhdGEucHJvcHMgPSBleHRlbmQoe30sIHByb3BzVG9QYXNzKTtcbiAgICAvLyBwYXNzIG5vbi1kZWNsYXJlZCBwcm9wcyBhcyBhdHRyc1xuICAgIHZhciBhdHRycyA9IGRhdGEuYXR0cnMgPSBkYXRhLmF0dHJzIHx8IHt9O1xuICAgIGZvciAodmFyIGtleSBpbiBwcm9wc1RvUGFzcykge1xuICAgICAgaWYgKCFjb21wb25lbnQucHJvcHMgfHwgIShrZXkgaW4gY29tcG9uZW50LnByb3BzKSkge1xuICAgICAgICBhdHRyc1trZXldID0gcHJvcHNUb1Bhc3Nba2V5XTtcbiAgICAgICAgZGVsZXRlIHByb3BzVG9QYXNzW2tleV07XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIHJlc29sdmVQcm9wcyAocm91dGUsIGNvbmZpZykge1xuICBzd2l0Y2ggKHR5cGVvZiBjb25maWcpIHtcbiAgICBjYXNlICd1bmRlZmluZWQnOlxuICAgICAgcmV0dXJuXG4gICAgY2FzZSAnb2JqZWN0JzpcbiAgICAgIHJldHVybiBjb25maWdcbiAgICBjYXNlICdmdW5jdGlvbic6XG4gICAgICByZXR1cm4gY29uZmlnKHJvdXRlKVxuICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgICAgcmV0dXJuIGNvbmZpZyA/IHJvdXRlLnBhcmFtcyA6IHVuZGVmaW5lZFxuICAgIGRlZmF1bHQ6XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICB3YXJuKFxuICAgICAgICAgIGZhbHNlLFxuICAgICAgICAgIFwicHJvcHMgaW4gXFxcIlwiICsgKHJvdXRlLnBhdGgpICsgXCJcXFwiIGlzIGEgXCIgKyAodHlwZW9mIGNvbmZpZykgKyBcIiwgXCIgK1xuICAgICAgICAgIFwiZXhwZWN0aW5nIGFuIG9iamVjdCwgZnVuY3Rpb24gb3IgYm9vbGVhbi5cIlxuICAgICAgICApO1xuICAgICAgfVxuICB9XG59XG5cbi8qICAqL1xuXG52YXIgZW5jb2RlUmVzZXJ2ZVJFID0gL1shJygpKl0vZztcbnZhciBlbmNvZGVSZXNlcnZlUmVwbGFjZXIgPSBmdW5jdGlvbiAoYykgeyByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KTsgfTtcbnZhciBjb21tYVJFID0gLyUyQy9nO1xuXG4vLyBmaXhlZCBlbmNvZGVVUklDb21wb25lbnQgd2hpY2ggaXMgbW9yZSBjb25mb3JtYW50IHRvIFJGQzM5ODY6XG4vLyAtIGVzY2FwZXMgWyEnKCkqXVxuLy8gLSBwcmVzZXJ2ZSBjb21tYXNcbnZhciBlbmNvZGUgPSBmdW5jdGlvbiAoc3RyKSB7IHJldHVybiBlbmNvZGVVUklDb21wb25lbnQoc3RyKVxuICAucmVwbGFjZShlbmNvZGVSZXNlcnZlUkUsIGVuY29kZVJlc2VydmVSZXBsYWNlcilcbiAgLnJlcGxhY2UoY29tbWFSRSwgJywnKTsgfTtcblxudmFyIGRlY29kZSA9IGRlY29kZVVSSUNvbXBvbmVudDtcblxuZnVuY3Rpb24gcmVzb2x2ZVF1ZXJ5IChcbiAgcXVlcnksXG4gIGV4dHJhUXVlcnksXG4gIF9wYXJzZVF1ZXJ5XG4pIHtcbiAgaWYgKCBleHRyYVF1ZXJ5ID09PSB2b2lkIDAgKSBleHRyYVF1ZXJ5ID0ge307XG5cbiAgdmFyIHBhcnNlID0gX3BhcnNlUXVlcnkgfHwgcGFyc2VRdWVyeTtcbiAgdmFyIHBhcnNlZFF1ZXJ5O1xuICB0cnkge1xuICAgIHBhcnNlZFF1ZXJ5ID0gcGFyc2UocXVlcnkgfHwgJycpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB3YXJuKGZhbHNlLCBlLm1lc3NhZ2UpO1xuICAgIHBhcnNlZFF1ZXJ5ID0ge307XG4gIH1cbiAgZm9yICh2YXIga2V5IGluIGV4dHJhUXVlcnkpIHtcbiAgICBwYXJzZWRRdWVyeVtrZXldID0gZXh0cmFRdWVyeVtrZXldO1xuICB9XG4gIHJldHVybiBwYXJzZWRRdWVyeVxufVxuXG5mdW5jdGlvbiBwYXJzZVF1ZXJ5IChxdWVyeSkge1xuICB2YXIgcmVzID0ge307XG5cbiAgcXVlcnkgPSBxdWVyeS50cmltKCkucmVwbGFjZSgvXihcXD98I3wmKS8sICcnKTtcblxuICBpZiAoIXF1ZXJ5KSB7XG4gICAgcmV0dXJuIHJlc1xuICB9XG5cbiAgcXVlcnkuc3BsaXQoJyYnKS5mb3JFYWNoKGZ1bmN0aW9uIChwYXJhbSkge1xuICAgIHZhciBwYXJ0cyA9IHBhcmFtLnJlcGxhY2UoL1xcKy9nLCAnICcpLnNwbGl0KCc9Jyk7XG4gICAgdmFyIGtleSA9IGRlY29kZShwYXJ0cy5zaGlmdCgpKTtcbiAgICB2YXIgdmFsID0gcGFydHMubGVuZ3RoID4gMFxuICAgICAgPyBkZWNvZGUocGFydHMuam9pbignPScpKVxuICAgICAgOiBudWxsO1xuXG4gICAgaWYgKHJlc1trZXldID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJlc1trZXldID0gdmFsO1xuICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShyZXNba2V5XSkpIHtcbiAgICAgIHJlc1trZXldLnB1c2godmFsKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzW2tleV0gPSBbcmVzW2tleV0sIHZhbF07XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gcmVzXG59XG5cbmZ1bmN0aW9uIHN0cmluZ2lmeVF1ZXJ5IChvYmopIHtcbiAgdmFyIHJlcyA9IG9iaiA/IE9iamVjdC5rZXlzKG9iaikubWFwKGZ1bmN0aW9uIChrZXkpIHtcbiAgICB2YXIgdmFsID0gb2JqW2tleV07XG5cbiAgICBpZiAodmFsID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiAnJ1xuICAgIH1cblxuICAgIGlmICh2YWwgPT09IG51bGwpIHtcbiAgICAgIHJldHVybiBlbmNvZGUoa2V5KVxuICAgIH1cblxuICAgIGlmIChBcnJheS5pc0FycmF5KHZhbCkpIHtcbiAgICAgIHZhciByZXN1bHQgPSBbXTtcbiAgICAgIHZhbC5mb3JFYWNoKGZ1bmN0aW9uICh2YWwyKSB7XG4gICAgICAgIGlmICh2YWwyID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuICAgICAgICBpZiAodmFsMiA9PT0gbnVsbCkge1xuICAgICAgICAgIHJlc3VsdC5wdXNoKGVuY29kZShrZXkpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXN1bHQucHVzaChlbmNvZGUoa2V5KSArICc9JyArIGVuY29kZSh2YWwyKSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHJlc3VsdC5qb2luKCcmJylcbiAgICB9XG5cbiAgICByZXR1cm4gZW5jb2RlKGtleSkgKyAnPScgKyBlbmNvZGUodmFsKVxuICB9KS5maWx0ZXIoZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHgubGVuZ3RoID4gMDsgfSkuam9pbignJicpIDogbnVsbDtcbiAgcmV0dXJuIHJlcyA/IChcIj9cIiArIHJlcykgOiAnJ1xufVxuXG4vKiAgKi9cblxudmFyIHRyYWlsaW5nU2xhc2hSRSA9IC9cXC8/JC87XG5cbmZ1bmN0aW9uIGNyZWF0ZVJvdXRlIChcbiAgcmVjb3JkLFxuICBsb2NhdGlvbixcbiAgcmVkaXJlY3RlZEZyb20sXG4gIHJvdXRlclxuKSB7XG4gIHZhciBzdHJpbmdpZnlRdWVyeSA9IHJvdXRlciAmJiByb3V0ZXIub3B0aW9ucy5zdHJpbmdpZnlRdWVyeTtcblxuICB2YXIgcXVlcnkgPSBsb2NhdGlvbi5xdWVyeSB8fCB7fTtcbiAgdHJ5IHtcbiAgICBxdWVyeSA9IGNsb25lKHF1ZXJ5KTtcbiAgfSBjYXRjaCAoZSkge31cblxuICB2YXIgcm91dGUgPSB7XG4gICAgbmFtZTogbG9jYXRpb24ubmFtZSB8fCAocmVjb3JkICYmIHJlY29yZC5uYW1lKSxcbiAgICBtZXRhOiAocmVjb3JkICYmIHJlY29yZC5tZXRhKSB8fCB7fSxcbiAgICBwYXRoOiBsb2NhdGlvbi5wYXRoIHx8ICcvJyxcbiAgICBoYXNoOiBsb2NhdGlvbi5oYXNoIHx8ICcnLFxuICAgIHF1ZXJ5OiBxdWVyeSxcbiAgICBwYXJhbXM6IGxvY2F0aW9uLnBhcmFtcyB8fCB7fSxcbiAgICBmdWxsUGF0aDogZ2V0RnVsbFBhdGgobG9jYXRpb24sIHN0cmluZ2lmeVF1ZXJ5KSxcbiAgICBtYXRjaGVkOiByZWNvcmQgPyBmb3JtYXRNYXRjaChyZWNvcmQpIDogW11cbiAgfTtcbiAgaWYgKHJlZGlyZWN0ZWRGcm9tKSB7XG4gICAgcm91dGUucmVkaXJlY3RlZEZyb20gPSBnZXRGdWxsUGF0aChyZWRpcmVjdGVkRnJvbSwgc3RyaW5naWZ5UXVlcnkpO1xuICB9XG4gIHJldHVybiBPYmplY3QuZnJlZXplKHJvdXRlKVxufVxuXG5mdW5jdGlvbiBjbG9uZSAodmFsdWUpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgcmV0dXJuIHZhbHVlLm1hcChjbG9uZSlcbiAgfSBlbHNlIGlmICh2YWx1ZSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnKSB7XG4gICAgdmFyIHJlcyA9IHt9O1xuICAgIGZvciAodmFyIGtleSBpbiB2YWx1ZSkge1xuICAgICAgcmVzW2tleV0gPSBjbG9uZSh2YWx1ZVtrZXldKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB2YWx1ZVxuICB9XG59XG5cbi8vIHRoZSBzdGFydGluZyByb3V0ZSB0aGF0IHJlcHJlc2VudHMgdGhlIGluaXRpYWwgc3RhdGVcbnZhciBTVEFSVCA9IGNyZWF0ZVJvdXRlKG51bGwsIHtcbiAgcGF0aDogJy8nXG59KTtcblxuZnVuY3Rpb24gZm9ybWF0TWF0Y2ggKHJlY29yZCkge1xuICB2YXIgcmVzID0gW107XG4gIHdoaWxlIChyZWNvcmQpIHtcbiAgICByZXMudW5zaGlmdChyZWNvcmQpO1xuICAgIHJlY29yZCA9IHJlY29yZC5wYXJlbnQ7XG4gIH1cbiAgcmV0dXJuIHJlc1xufVxuXG5mdW5jdGlvbiBnZXRGdWxsUGF0aCAoXG4gIHJlZixcbiAgX3N0cmluZ2lmeVF1ZXJ5XG4pIHtcbiAgdmFyIHBhdGggPSByZWYucGF0aDtcbiAgdmFyIHF1ZXJ5ID0gcmVmLnF1ZXJ5OyBpZiAoIHF1ZXJ5ID09PSB2b2lkIDAgKSBxdWVyeSA9IHt9O1xuICB2YXIgaGFzaCA9IHJlZi5oYXNoOyBpZiAoIGhhc2ggPT09IHZvaWQgMCApIGhhc2ggPSAnJztcblxuICB2YXIgc3RyaW5naWZ5ID0gX3N0cmluZ2lmeVF1ZXJ5IHx8IHN0cmluZ2lmeVF1ZXJ5O1xuICByZXR1cm4gKHBhdGggfHwgJy8nKSArIHN0cmluZ2lmeShxdWVyeSkgKyBoYXNoXG59XG5cbmZ1bmN0aW9uIGlzU2FtZVJvdXRlIChhLCBiKSB7XG4gIGlmIChiID09PSBTVEFSVCkge1xuICAgIHJldHVybiBhID09PSBiXG4gIH0gZWxzZSBpZiAoIWIpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfSBlbHNlIGlmIChhLnBhdGggJiYgYi5wYXRoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIGEucGF0aC5yZXBsYWNlKHRyYWlsaW5nU2xhc2hSRSwgJycpID09PSBiLnBhdGgucmVwbGFjZSh0cmFpbGluZ1NsYXNoUkUsICcnKSAmJlxuICAgICAgYS5oYXNoID09PSBiLmhhc2ggJiZcbiAgICAgIGlzT2JqZWN0RXF1YWwoYS5xdWVyeSwgYi5xdWVyeSlcbiAgICApXG4gIH0gZWxzZSBpZiAoYS5uYW1lICYmIGIubmFtZSkge1xuICAgIHJldHVybiAoXG4gICAgICBhLm5hbWUgPT09IGIubmFtZSAmJlxuICAgICAgYS5oYXNoID09PSBiLmhhc2ggJiZcbiAgICAgIGlzT2JqZWN0RXF1YWwoYS5xdWVyeSwgYi5xdWVyeSkgJiZcbiAgICAgIGlzT2JqZWN0RXF1YWwoYS5wYXJhbXMsIGIucGFyYW1zKVxuICAgIClcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxufVxuXG5mdW5jdGlvbiBpc09iamVjdEVxdWFsIChhLCBiKSB7XG4gIGlmICggYSA9PT0gdm9pZCAwICkgYSA9IHt9O1xuICBpZiAoIGIgPT09IHZvaWQgMCApIGIgPSB7fTtcblxuICAvLyBoYW5kbGUgbnVsbCB2YWx1ZSAjMTU2NlxuICBpZiAoIWEgfHwgIWIpIHsgcmV0dXJuIGEgPT09IGIgfVxuICB2YXIgYUtleXMgPSBPYmplY3Qua2V5cyhhKTtcbiAgdmFyIGJLZXlzID0gT2JqZWN0LmtleXMoYik7XG4gIGlmIChhS2V5cy5sZW5ndGggIT09IGJLZXlzLmxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG4gIHJldHVybiBhS2V5cy5ldmVyeShmdW5jdGlvbiAoa2V5KSB7XG4gICAgdmFyIGFWYWwgPSBhW2tleV07XG4gICAgdmFyIGJWYWwgPSBiW2tleV07XG4gICAgLy8gY2hlY2sgbmVzdGVkIGVxdWFsaXR5XG4gICAgaWYgKHR5cGVvZiBhVmFsID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgYlZhbCA9PT0gJ29iamVjdCcpIHtcbiAgICAgIHJldHVybiBpc09iamVjdEVxdWFsKGFWYWwsIGJWYWwpXG4gICAgfVxuICAgIHJldHVybiBTdHJpbmcoYVZhbCkgPT09IFN0cmluZyhiVmFsKVxuICB9KVxufVxuXG5mdW5jdGlvbiBpc0luY2x1ZGVkUm91dGUgKGN1cnJlbnQsIHRhcmdldCkge1xuICByZXR1cm4gKFxuICAgIGN1cnJlbnQucGF0aC5yZXBsYWNlKHRyYWlsaW5nU2xhc2hSRSwgJy8nKS5pbmRleE9mKFxuICAgICAgdGFyZ2V0LnBhdGgucmVwbGFjZSh0cmFpbGluZ1NsYXNoUkUsICcvJylcbiAgICApID09PSAwICYmXG4gICAgKCF0YXJnZXQuaGFzaCB8fCBjdXJyZW50Lmhhc2ggPT09IHRhcmdldC5oYXNoKSAmJlxuICAgIHF1ZXJ5SW5jbHVkZXMoY3VycmVudC5xdWVyeSwgdGFyZ2V0LnF1ZXJ5KVxuICApXG59XG5cbmZ1bmN0aW9uIHF1ZXJ5SW5jbHVkZXMgKGN1cnJlbnQsIHRhcmdldCkge1xuICBmb3IgKHZhciBrZXkgaW4gdGFyZ2V0KSB7XG4gICAgaWYgKCEoa2V5IGluIGN1cnJlbnQpKSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWVcbn1cblxuLyogICovXG5cbmZ1bmN0aW9uIHJlc29sdmVQYXRoIChcbiAgcmVsYXRpdmUsXG4gIGJhc2UsXG4gIGFwcGVuZFxuKSB7XG4gIHZhciBmaXJzdENoYXIgPSByZWxhdGl2ZS5jaGFyQXQoMCk7XG4gIGlmIChmaXJzdENoYXIgPT09ICcvJykge1xuICAgIHJldHVybiByZWxhdGl2ZVxuICB9XG5cbiAgaWYgKGZpcnN0Q2hhciA9PT0gJz8nIHx8IGZpcnN0Q2hhciA9PT0gJyMnKSB7XG4gICAgcmV0dXJuIGJhc2UgKyByZWxhdGl2ZVxuICB9XG5cbiAgdmFyIHN0YWNrID0gYmFzZS5zcGxpdCgnLycpO1xuXG4gIC8vIHJlbW92ZSB0cmFpbGluZyBzZWdtZW50IGlmOlxuICAvLyAtIG5vdCBhcHBlbmRpbmdcbiAgLy8gLSBhcHBlbmRpbmcgdG8gdHJhaWxpbmcgc2xhc2ggKGxhc3Qgc2VnbWVudCBpcyBlbXB0eSlcbiAgaWYgKCFhcHBlbmQgfHwgIXN0YWNrW3N0YWNrLmxlbmd0aCAtIDFdKSB7XG4gICAgc3RhY2sucG9wKCk7XG4gIH1cblxuICAvLyByZXNvbHZlIHJlbGF0aXZlIHBhdGhcbiAgdmFyIHNlZ21lbnRzID0gcmVsYXRpdmUucmVwbGFjZSgvXlxcLy8sICcnKS5zcGxpdCgnLycpO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHNlZ21lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNlZ21lbnQgPSBzZWdtZW50c1tpXTtcbiAgICBpZiAoc2VnbWVudCA9PT0gJy4uJykge1xuICAgICAgc3RhY2sucG9wKCk7XG4gICAgfSBlbHNlIGlmIChzZWdtZW50ICE9PSAnLicpIHtcbiAgICAgIHN0YWNrLnB1c2goc2VnbWVudCk7XG4gICAgfVxuICB9XG5cbiAgLy8gZW5zdXJlIGxlYWRpbmcgc2xhc2hcbiAgaWYgKHN0YWNrWzBdICE9PSAnJykge1xuICAgIHN0YWNrLnVuc2hpZnQoJycpO1xuICB9XG5cbiAgcmV0dXJuIHN0YWNrLmpvaW4oJy8nKVxufVxuXG5mdW5jdGlvbiBwYXJzZVBhdGggKHBhdGgpIHtcbiAgdmFyIGhhc2ggPSAnJztcbiAgdmFyIHF1ZXJ5ID0gJyc7XG5cbiAgdmFyIGhhc2hJbmRleCA9IHBhdGguaW5kZXhPZignIycpO1xuICBpZiAoaGFzaEluZGV4ID49IDApIHtcbiAgICBoYXNoID0gcGF0aC5zbGljZShoYXNoSW5kZXgpO1xuICAgIHBhdGggPSBwYXRoLnNsaWNlKDAsIGhhc2hJbmRleCk7XG4gIH1cblxuICB2YXIgcXVlcnlJbmRleCA9IHBhdGguaW5kZXhPZignPycpO1xuICBpZiAocXVlcnlJbmRleCA+PSAwKSB7XG4gICAgcXVlcnkgPSBwYXRoLnNsaWNlKHF1ZXJ5SW5kZXggKyAxKTtcbiAgICBwYXRoID0gcGF0aC5zbGljZSgwLCBxdWVyeUluZGV4KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcGF0aDogcGF0aCxcbiAgICBxdWVyeTogcXVlcnksXG4gICAgaGFzaDogaGFzaFxuICB9XG59XG5cbmZ1bmN0aW9uIGNsZWFuUGF0aCAocGF0aCkge1xuICByZXR1cm4gcGF0aC5yZXBsYWNlKC9cXC9cXC8vZywgJy8nKVxufVxuXG52YXIgaXNhcnJheSA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG5cbi8qKlxuICogRXhwb3NlIGBwYXRoVG9SZWdleHBgLlxuICovXG52YXIgcGF0aFRvUmVnZXhwXzEgPSBwYXRoVG9SZWdleHA7XG52YXIgcGFyc2VfMSA9IHBhcnNlO1xudmFyIGNvbXBpbGVfMSA9IGNvbXBpbGU7XG52YXIgdG9rZW5zVG9GdW5jdGlvbl8xID0gdG9rZW5zVG9GdW5jdGlvbjtcbnZhciB0b2tlbnNUb1JlZ0V4cF8xID0gdG9rZW5zVG9SZWdFeHA7XG5cbi8qKlxuICogVGhlIG1haW4gcGF0aCBtYXRjaGluZyByZWdleHAgdXRpbGl0eS5cbiAqXG4gKiBAdHlwZSB7UmVnRXhwfVxuICovXG52YXIgUEFUSF9SRUdFWFAgPSBuZXcgUmVnRXhwKFtcbiAgLy8gTWF0Y2ggZXNjYXBlZCBjaGFyYWN0ZXJzIHRoYXQgd291bGQgb3RoZXJ3aXNlIGFwcGVhciBpbiBmdXR1cmUgbWF0Y2hlcy5cbiAgLy8gVGhpcyBhbGxvd3MgdGhlIHVzZXIgdG8gZXNjYXBlIHNwZWNpYWwgY2hhcmFjdGVycyB0aGF0IHdvbid0IHRyYW5zZm9ybS5cbiAgJyhcXFxcXFxcXC4pJyxcbiAgLy8gTWF0Y2ggRXhwcmVzcy1zdHlsZSBwYXJhbWV0ZXJzIGFuZCB1bi1uYW1lZCBwYXJhbWV0ZXJzIHdpdGggYSBwcmVmaXhcbiAgLy8gYW5kIG9wdGlvbmFsIHN1ZmZpeGVzLiBNYXRjaGVzIGFwcGVhciBhczpcbiAgLy9cbiAgLy8gXCIvOnRlc3QoXFxcXGQrKT9cIiA9PiBbXCIvXCIsIFwidGVzdFwiLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCBcIj9cIiwgdW5kZWZpbmVkXVxuICAvLyBcIi9yb3V0ZShcXFxcZCspXCIgID0+IFt1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCB1bmRlZmluZWRdXG4gIC8vIFwiLypcIiAgICAgICAgICAgID0+IFtcIi9cIiwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIipcIl1cbiAgJyhbXFxcXC8uXSk/KD86KD86XFxcXDooXFxcXHcrKSg/OlxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpP3xcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKShbKyo/XSk/fChcXFxcKikpJ1xuXS5qb2luKCd8JyksICdnJyk7XG5cbi8qKlxuICogUGFyc2UgYSBzdHJpbmcgZm9yIHRoZSByYXcgdG9rZW5zLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gb3B0aW9uc1xuICogQHJldHVybiB7IUFycmF5fVxuICovXG5mdW5jdGlvbiBwYXJzZSAoc3RyLCBvcHRpb25zKSB7XG4gIHZhciB0b2tlbnMgPSBbXTtcbiAgdmFyIGtleSA9IDA7XG4gIHZhciBpbmRleCA9IDA7XG4gIHZhciBwYXRoID0gJyc7XG4gIHZhciBkZWZhdWx0RGVsaW1pdGVyID0gb3B0aW9ucyAmJiBvcHRpb25zLmRlbGltaXRlciB8fCAnLyc7XG4gIHZhciByZXM7XG5cbiAgd2hpbGUgKChyZXMgPSBQQVRIX1JFR0VYUC5leGVjKHN0cikpICE9IG51bGwpIHtcbiAgICB2YXIgbSA9IHJlc1swXTtcbiAgICB2YXIgZXNjYXBlZCA9IHJlc1sxXTtcbiAgICB2YXIgb2Zmc2V0ID0gcmVzLmluZGV4O1xuICAgIHBhdGggKz0gc3RyLnNsaWNlKGluZGV4LCBvZmZzZXQpO1xuICAgIGluZGV4ID0gb2Zmc2V0ICsgbS5sZW5ndGg7XG5cbiAgICAvLyBJZ25vcmUgYWxyZWFkeSBlc2NhcGVkIHNlcXVlbmNlcy5cbiAgICBpZiAoZXNjYXBlZCkge1xuICAgICAgcGF0aCArPSBlc2NhcGVkWzFdO1xuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICB2YXIgbmV4dCA9IHN0cltpbmRleF07XG4gICAgdmFyIHByZWZpeCA9IHJlc1syXTtcbiAgICB2YXIgbmFtZSA9IHJlc1szXTtcbiAgICB2YXIgY2FwdHVyZSA9IHJlc1s0XTtcbiAgICB2YXIgZ3JvdXAgPSByZXNbNV07XG4gICAgdmFyIG1vZGlmaWVyID0gcmVzWzZdO1xuICAgIHZhciBhc3RlcmlzayA9IHJlc1s3XTtcblxuICAgIC8vIFB1c2ggdGhlIGN1cnJlbnQgcGF0aCBvbnRvIHRoZSB0b2tlbnMuXG4gICAgaWYgKHBhdGgpIHtcbiAgICAgIHRva2Vucy5wdXNoKHBhdGgpO1xuICAgICAgcGF0aCA9ICcnO1xuICAgIH1cblxuICAgIHZhciBwYXJ0aWFsID0gcHJlZml4ICE9IG51bGwgJiYgbmV4dCAhPSBudWxsICYmIG5leHQgIT09IHByZWZpeDtcbiAgICB2YXIgcmVwZWF0ID0gbW9kaWZpZXIgPT09ICcrJyB8fCBtb2RpZmllciA9PT0gJyonO1xuICAgIHZhciBvcHRpb25hbCA9IG1vZGlmaWVyID09PSAnPycgfHwgbW9kaWZpZXIgPT09ICcqJztcbiAgICB2YXIgZGVsaW1pdGVyID0gcmVzWzJdIHx8IGRlZmF1bHREZWxpbWl0ZXI7XG4gICAgdmFyIHBhdHRlcm4gPSBjYXB0dXJlIHx8IGdyb3VwO1xuXG4gICAgdG9rZW5zLnB1c2goe1xuICAgICAgbmFtZTogbmFtZSB8fCBrZXkrKyxcbiAgICAgIHByZWZpeDogcHJlZml4IHx8ICcnLFxuICAgICAgZGVsaW1pdGVyOiBkZWxpbWl0ZXIsXG4gICAgICBvcHRpb25hbDogb3B0aW9uYWwsXG4gICAgICByZXBlYXQ6IHJlcGVhdCxcbiAgICAgIHBhcnRpYWw6IHBhcnRpYWwsXG4gICAgICBhc3RlcmlzazogISFhc3RlcmlzayxcbiAgICAgIHBhdHRlcm46IHBhdHRlcm4gPyBlc2NhcGVHcm91cChwYXR0ZXJuKSA6IChhc3RlcmlzayA/ICcuKicgOiAnW14nICsgZXNjYXBlU3RyaW5nKGRlbGltaXRlcikgKyAnXSs/JylcbiAgICB9KTtcbiAgfVxuXG4gIC8vIE1hdGNoIGFueSBjaGFyYWN0ZXJzIHN0aWxsIHJlbWFpbmluZy5cbiAgaWYgKGluZGV4IDwgc3RyLmxlbmd0aCkge1xuICAgIHBhdGggKz0gc3RyLnN1YnN0cihpbmRleCk7XG4gIH1cblxuICAvLyBJZiB0aGUgcGF0aCBleGlzdHMsIHB1c2ggaXQgb250byB0aGUgZW5kLlxuICBpZiAocGF0aCkge1xuICAgIHRva2Vucy5wdXNoKHBhdGgpO1xuICB9XG5cbiAgcmV0dXJuIHRva2Vuc1xufVxuXG4vKipcbiAqIENvbXBpbGUgYSBzdHJpbmcgdG8gYSB0ZW1wbGF0ZSBmdW5jdGlvbiBmb3IgdGhlIHBhdGguXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgICAgICAgICAgICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IWZ1bmN0aW9uKE9iamVjdD0sIE9iamVjdD0pfVxuICovXG5mdW5jdGlvbiBjb21waWxlIChzdHIsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvRnVuY3Rpb24ocGFyc2Uoc3RyLCBvcHRpb25zKSlcbn1cblxuLyoqXG4gKiBQcmV0dGllciBlbmNvZGluZyBvZiBVUkkgcGF0aCBzZWdtZW50cy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bXFwvPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEVuY29kZSB0aGUgYXN0ZXJpc2sgcGFyYW1ldGVyLiBTaW1pbGFyIHRvIGBwcmV0dHlgLCBidXQgYWxsb3dzIHNsYXNoZXMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVBc3RlcmlzayAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIG1ldGhvZCBmb3IgdHJhbnNmb3JtaW5nIHRva2VucyBpbnRvIHRoZSBwYXRoIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiB0b2tlbnNUb0Z1bmN0aW9uICh0b2tlbnMpIHtcbiAgLy8gQ29tcGlsZSBhbGwgdGhlIHRva2VucyBpbnRvIHJlZ2V4cHMuXG4gIHZhciBtYXRjaGVzID0gbmV3IEFycmF5KHRva2Vucy5sZW5ndGgpO1xuXG4gIC8vIENvbXBpbGUgYWxsIHRoZSBwYXR0ZXJucyBiZWZvcmUgY29tcGlsYXRpb24uXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHR5cGVvZiB0b2tlbnNbaV0gPT09ICdvYmplY3QnKSB7XG4gICAgICBtYXRjaGVzW2ldID0gbmV3IFJlZ0V4cCgnXig/OicgKyB0b2tlbnNbaV0ucGF0dGVybiArICcpJCcpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAob2JqLCBvcHRzKSB7XG4gICAgdmFyIHBhdGggPSAnJztcbiAgICB2YXIgZGF0YSA9IG9iaiB8fCB7fTtcbiAgICB2YXIgb3B0aW9ucyA9IG9wdHMgfHwge307XG4gICAgdmFyIGVuY29kZSA9IG9wdGlvbnMucHJldHR5ID8gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IDogZW5jb2RlVVJJQ29tcG9uZW50O1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXTtcblxuICAgICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcGF0aCArPSB0b2tlbjtcblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICB2YXIgdmFsdWUgPSBkYXRhW3Rva2VuLm5hbWVdO1xuICAgICAgdmFyIHNlZ21lbnQ7XG5cbiAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgIC8vIFByZXBlbmQgcGFydGlhbCBzZWdtZW50IHByZWZpeGVzLlxuICAgICAgICAgIGlmICh0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgICBwYXRoICs9IHRva2VuLnByZWZpeDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gYmUgZGVmaW5lZCcpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGlzYXJyYXkodmFsdWUpKSB7XG4gICAgICAgIGlmICghdG9rZW4ucmVwZWF0KSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgcmVwZWF0LCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeSh2YWx1ZSkgKyAnYCcpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAodmFsdWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCBiZSBlbXB0eScpXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWx1ZS5sZW5ndGg7IGorKykge1xuICAgICAgICAgIHNlZ21lbnQgPSBlbmNvZGUodmFsdWVbal0pO1xuXG4gICAgICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIGFsbCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG1hdGNoIFwiJyArIHRva2VuLnBhdHRlcm4gKyAnXCIsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHNlZ21lbnQpICsgJ2AnKVxuICAgICAgICAgIH1cblxuICAgICAgICAgIHBhdGggKz0gKGogPT09IDAgPyB0b2tlbi5wcmVmaXggOiB0b2tlbi5kZWxpbWl0ZXIpICsgc2VnbWVudDtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHNlZ21lbnQgPSB0b2tlbi5hc3RlcmlzayA/IGVuY29kZUFzdGVyaXNrKHZhbHVlKSA6IGVuY29kZSh2YWx1ZSk7XG5cbiAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIFwiJyArIHNlZ21lbnQgKyAnXCInKVxuICAgICAgfVxuXG4gICAgICBwYXRoICs9IHRva2VuLnByZWZpeCArIHNlZ21lbnQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIHBhdGhcbiAgfVxufVxuXG4vKipcbiAqIEVzY2FwZSBhIHJlZ3VsYXIgZXhwcmVzc2lvbiBzdHJpbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlU3RyaW5nIChzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC8oWy4rKj89XiE6JHt9KClbXFxdfFxcL1xcXFxdKS9nLCAnXFxcXCQxJylcbn1cblxuLyoqXG4gKiBFc2NhcGUgdGhlIGNhcHR1cmluZyBncm91cCBieSBlc2NhcGluZyBzcGVjaWFsIGNoYXJhY3RlcnMgYW5kIG1lYW5pbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBncm91cFxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlc2NhcGVHcm91cCAoZ3JvdXApIHtcbiAgcmV0dXJuIGdyb3VwLnJlcGxhY2UoLyhbPSE6JFxcLygpXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogQXR0YWNoIHRoZSBrZXlzIGFzIGEgcHJvcGVydHkgb2YgdGhlIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshUmVnRXhwfSByZVxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gYXR0YWNoS2V5cyAocmUsIGtleXMpIHtcbiAgcmUua2V5cyA9IGtleXM7XG4gIHJldHVybiByZVxufVxuXG4vKipcbiAqIEdldCB0aGUgZmxhZ3MgZm9yIGEgcmVnZXhwIGZyb20gdGhlIG9wdGlvbnMuXG4gKlxuICogQHBhcmFtICB7T2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGZsYWdzIChvcHRpb25zKSB7XG4gIHJldHVybiBvcHRpb25zLnNlbnNpdGl2ZSA/ICcnIDogJ2knXG59XG5cbi8qKlxuICogUHVsbCBvdXQga2V5cyBmcm9tIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHJlZ2V4cFRvUmVnZXhwIChwYXRoLCBrZXlzKSB7XG4gIC8vIFVzZSBhIG5lZ2F0aXZlIGxvb2thaGVhZCB0byBtYXRjaCBvbmx5IGNhcHR1cmluZyBncm91cHMuXG4gIHZhciBncm91cHMgPSBwYXRoLnNvdXJjZS5tYXRjaCgvXFwoKD8hXFw/KS9nKTtcblxuICBpZiAoZ3JvdXBzKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBncm91cHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGtleXMucHVzaCh7XG4gICAgICAgIG5hbWU6IGksXG4gICAgICAgIHByZWZpeDogbnVsbCxcbiAgICAgICAgZGVsaW1pdGVyOiBudWxsLFxuICAgICAgICBvcHRpb25hbDogZmFsc2UsXG4gICAgICAgIHJlcGVhdDogZmFsc2UsXG4gICAgICAgIHBhcnRpYWw6IGZhbHNlLFxuICAgICAgICBhc3RlcmlzazogZmFsc2UsXG4gICAgICAgIHBhdHRlcm46IG51bGxcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHBhdGgsIGtleXMpXG59XG5cbi8qKlxuICogVHJhbnNmb3JtIGFuIGFycmF5IGludG8gYSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgcGF0aFxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gYXJyYXlUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICB2YXIgcGFydHMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHBhdGgubGVuZ3RoOyBpKyspIHtcbiAgICBwYXJ0cy5wdXNoKHBhdGhUb1JlZ2V4cChwYXRoW2ldLCBrZXlzLCBvcHRpb25zKS5zb3VyY2UpO1xuICB9XG5cbiAgdmFyIHJlZ2V4cCA9IG5ldyBSZWdFeHAoJyg/OicgKyBwYXJ0cy5qb2luKCd8JykgKyAnKScsIGZsYWdzKG9wdGlvbnMpKTtcblxuICByZXR1cm4gYXR0YWNoS2V5cyhyZWdleHAsIGtleXMpXG59XG5cbi8qKlxuICogQ3JlYXRlIGEgcGF0aCByZWdleHAgZnJvbSBzdHJpbmcgaW5wdXQuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgcGF0aFxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gc3RyaW5nVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvUmVnRXhwKHBhcnNlKHBhdGgsIG9wdGlvbnMpLCBrZXlzLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIGZ1bmN0aW9uIGZvciB0YWtpbmcgdG9rZW5zIGFuZCByZXR1cm5pbmcgYSBSZWdFeHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgICAgICAgICB0b2tlbnNcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0ga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiB0b2tlbnNUb1JlZ0V4cCAodG9rZW5zLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpO1xuICAgIGtleXMgPSBbXTtcbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG4gIHZhciBzdHJpY3QgPSBvcHRpb25zLnN0cmljdDtcbiAgdmFyIGVuZCA9IG9wdGlvbnMuZW5kICE9PSBmYWxzZTtcbiAgdmFyIHJvdXRlID0gJyc7XG5cbiAgLy8gSXRlcmF0ZSBvdmVyIHRoZSB0b2tlbnMgYW5kIGNyZWF0ZSBvdXIgcmVnZXhwIHN0cmluZy5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV07XG5cbiAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgcm91dGUgKz0gZXNjYXBlU3RyaW5nKHRva2VuKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHByZWZpeCA9IGVzY2FwZVN0cmluZyh0b2tlbi5wcmVmaXgpO1xuICAgICAgdmFyIGNhcHR1cmUgPSAnKD86JyArIHRva2VuLnBhdHRlcm4gKyAnKSc7XG5cbiAgICAgIGtleXMucHVzaCh0b2tlbik7XG5cbiAgICAgIGlmICh0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgY2FwdHVyZSArPSAnKD86JyArIHByZWZpeCArIGNhcHR1cmUgKyAnKSonO1xuICAgICAgfVxuXG4gICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgY2FwdHVyZSA9ICcoPzonICsgcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpKT8nO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyk/JztcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSc7XG4gICAgICB9XG5cbiAgICAgIHJvdXRlICs9IGNhcHR1cmU7XG4gICAgfVxuICB9XG5cbiAgdmFyIGRlbGltaXRlciA9IGVzY2FwZVN0cmluZyhvcHRpb25zLmRlbGltaXRlciB8fCAnLycpO1xuICB2YXIgZW5kc1dpdGhEZWxpbWl0ZXIgPSByb3V0ZS5zbGljZSgtZGVsaW1pdGVyLmxlbmd0aCkgPT09IGRlbGltaXRlcjtcblxuICAvLyBJbiBub24tc3RyaWN0IG1vZGUgd2UgYWxsb3cgYSBzbGFzaCBhdCB0aGUgZW5kIG9mIG1hdGNoLiBJZiB0aGUgcGF0aCB0b1xuICAvLyBtYXRjaCBhbHJlYWR5IGVuZHMgd2l0aCBhIHNsYXNoLCB3ZSByZW1vdmUgaXQgZm9yIGNvbnNpc3RlbmN5LiBUaGUgc2xhc2hcbiAgLy8gaXMgdmFsaWQgYXQgdGhlIGVuZCBvZiBhIHBhdGggbWF0Y2gsIG5vdCBpbiB0aGUgbWlkZGxlLiBUaGlzIGlzIGltcG9ydGFudFxuICAvLyBpbiBub24tZW5kaW5nIG1vZGUsIHdoZXJlIFwiL3Rlc3QvXCIgc2hvdWxkbid0IG1hdGNoIFwiL3Rlc3QvL3JvdXRlXCIuXG4gIGlmICghc3RyaWN0KSB7XG4gICAgcm91dGUgPSAoZW5kc1dpdGhEZWxpbWl0ZXIgPyByb3V0ZS5zbGljZSgwLCAtZGVsaW1pdGVyLmxlbmd0aCkgOiByb3V0ZSkgKyAnKD86JyArIGRlbGltaXRlciArICcoPz0kKSk/JztcbiAgfVxuXG4gIGlmIChlbmQpIHtcbiAgICByb3V0ZSArPSAnJCc7XG4gIH0gZWxzZSB7XG4gICAgLy8gSW4gbm9uLWVuZGluZyBtb2RlLCB3ZSBuZWVkIHRoZSBjYXB0dXJpbmcgZ3JvdXBzIHRvIG1hdGNoIGFzIG11Y2ggYXNcbiAgICAvLyBwb3NzaWJsZSBieSB1c2luZyBhIHBvc2l0aXZlIGxvb2thaGVhZCB0byB0aGUgZW5kIG9yIG5leHQgcGF0aCBzZWdtZW50LlxuICAgIHJvdXRlICs9IHN0cmljdCAmJiBlbmRzV2l0aERlbGltaXRlciA/ICcnIDogJyg/PScgKyBkZWxpbWl0ZXIgKyAnfCQpJztcbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKG5ldyBSZWdFeHAoJ14nICsgcm91dGUsIGZsYWdzKG9wdGlvbnMpKSwga2V5cylcbn1cblxuLyoqXG4gKiBOb3JtYWxpemUgdGhlIGdpdmVuIHBhdGggc3RyaW5nLCByZXR1cm5pbmcgYSByZWd1bGFyIGV4cHJlc3Npb24uXG4gKlxuICogQW4gZW1wdHkgYXJyYXkgY2FuIGJlIHBhc3NlZCBpbiBmb3IgdGhlIGtleXMsIHdoaWNoIHdpbGwgaG9sZCB0aGVcbiAqIHBsYWNlaG9sZGVyIGtleSBkZXNjcmlwdGlvbnMuIEZvciBleGFtcGxlLCB1c2luZyBgL3VzZXIvOmlkYCwgYGtleXNgIHdpbGxcbiAqIGNvbnRhaW4gYFt7IG5hbWU6ICdpZCcsIGRlbGltaXRlcjogJy8nLCBvcHRpb25hbDogZmFsc2UsIHJlcGVhdDogZmFsc2UgfV1gLlxuICpcbiAqIEBwYXJhbSAgeyhzdHJpbmd8UmVnRXhwfEFycmF5KX0gcGF0aFxuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSAgICAgICBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHBhdGhUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKTtcbiAgICBrZXlzID0gW107XG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICBpZiAocGF0aCBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgIHJldHVybiByZWdleHBUb1JlZ2V4cChwYXRoLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpKVxuICB9XG5cbiAgaWYgKGlzYXJyYXkocGF0aCkpIHtcbiAgICByZXR1cm4gYXJyYXlUb1JlZ2V4cCgvKiogQHR5cGUgeyFBcnJheX0gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxuICB9XG5cbiAgcmV0dXJuIHN0cmluZ1RvUmVnZXhwKC8qKiBAdHlwZSB7c3RyaW5nfSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG59XG5wYXRoVG9SZWdleHBfMS5wYXJzZSA9IHBhcnNlXzE7XG5wYXRoVG9SZWdleHBfMS5jb21waWxlID0gY29tcGlsZV8xO1xucGF0aFRvUmVnZXhwXzEudG9rZW5zVG9GdW5jdGlvbiA9IHRva2Vuc1RvRnVuY3Rpb25fMTtcbnBhdGhUb1JlZ2V4cF8xLnRva2Vuc1RvUmVnRXhwID0gdG9rZW5zVG9SZWdFeHBfMTtcblxuLyogICovXG5cbi8vICRmbG93LWRpc2FibGUtbGluZVxudmFyIHJlZ2V4cENvbXBpbGVDYWNoZSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbmZ1bmN0aW9uIGZpbGxQYXJhbXMgKFxuICBwYXRoLFxuICBwYXJhbXMsXG4gIHJvdXRlTXNnXG4pIHtcbiAgcGFyYW1zID0gcGFyYW1zIHx8IHt9O1xuICB0cnkge1xuICAgIHZhciBmaWxsZXIgPVxuICAgICAgcmVnZXhwQ29tcGlsZUNhY2hlW3BhdGhdIHx8XG4gICAgICAocmVnZXhwQ29tcGlsZUNhY2hlW3BhdGhdID0gcGF0aFRvUmVnZXhwXzEuY29tcGlsZShwYXRoKSk7XG5cbiAgICAvLyBGaXggIzI1MDUgcmVzb2x2aW5nIGFzdGVyaXNrIHJvdXRlcyB7IG5hbWU6ICdub3QtZm91bmQnLCBwYXJhbXM6IHsgcGF0aE1hdGNoOiAnL25vdC1mb3VuZCcgfX1cbiAgICBpZiAocGFyYW1zLnBhdGhNYXRjaCkgeyBwYXJhbXNbMF0gPSBwYXJhbXMucGF0aE1hdGNoOyB9XG5cbiAgICByZXR1cm4gZmlsbGVyKHBhcmFtcywgeyBwcmV0dHk6IHRydWUgfSlcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAvLyBGaXggIzMwNzIgbm8gd2FybiBpZiBgcGF0aE1hdGNoYCBpcyBzdHJpbmdcbiAgICAgIHdhcm4odHlwZW9mIHBhcmFtcy5wYXRoTWF0Y2ggPT09ICdzdHJpbmcnLCAoXCJtaXNzaW5nIHBhcmFtIGZvciBcIiArIHJvdXRlTXNnICsgXCI6IFwiICsgKGUubWVzc2FnZSkpKTtcbiAgICB9XG4gICAgcmV0dXJuICcnXG4gIH0gZmluYWxseSB7XG4gICAgLy8gZGVsZXRlIHRoZSAwIGlmIGl0IHdhcyBhZGRlZFxuICAgIGRlbGV0ZSBwYXJhbXNbMF07XG4gIH1cbn1cblxuLyogICovXG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZUxvY2F0aW9uIChcbiAgcmF3LFxuICBjdXJyZW50LFxuICBhcHBlbmQsXG4gIHJvdXRlclxuKSB7XG4gIHZhciBuZXh0ID0gdHlwZW9mIHJhdyA9PT0gJ3N0cmluZycgPyB7IHBhdGg6IHJhdyB9IDogcmF3O1xuICAvLyBuYW1lZCB0YXJnZXRcbiAgaWYgKG5leHQuX25vcm1hbGl6ZWQpIHtcbiAgICByZXR1cm4gbmV4dFxuICB9IGVsc2UgaWYgKG5leHQubmFtZSkge1xuICAgIG5leHQgPSBleHRlbmQoe30sIHJhdyk7XG4gICAgdmFyIHBhcmFtcyA9IG5leHQucGFyYW1zO1xuICAgIGlmIChwYXJhbXMgJiYgdHlwZW9mIHBhcmFtcyA9PT0gJ29iamVjdCcpIHtcbiAgICAgIG5leHQucGFyYW1zID0gZXh0ZW5kKHt9LCBwYXJhbXMpO1xuICAgIH1cbiAgICByZXR1cm4gbmV4dFxuICB9XG5cbiAgLy8gcmVsYXRpdmUgcGFyYW1zXG4gIGlmICghbmV4dC5wYXRoICYmIG5leHQucGFyYW1zICYmIGN1cnJlbnQpIHtcbiAgICBuZXh0ID0gZXh0ZW5kKHt9LCBuZXh0KTtcbiAgICBuZXh0Ll9ub3JtYWxpemVkID0gdHJ1ZTtcbiAgICB2YXIgcGFyYW1zJDEgPSBleHRlbmQoZXh0ZW5kKHt9LCBjdXJyZW50LnBhcmFtcyksIG5leHQucGFyYW1zKTtcbiAgICBpZiAoY3VycmVudC5uYW1lKSB7XG4gICAgICBuZXh0Lm5hbWUgPSBjdXJyZW50Lm5hbWU7XG4gICAgICBuZXh0LnBhcmFtcyA9IHBhcmFtcyQxO1xuICAgIH0gZWxzZSBpZiAoY3VycmVudC5tYXRjaGVkLmxlbmd0aCkge1xuICAgICAgdmFyIHJhd1BhdGggPSBjdXJyZW50Lm1hdGNoZWRbY3VycmVudC5tYXRjaGVkLmxlbmd0aCAtIDFdLnBhdGg7XG4gICAgICBuZXh0LnBhdGggPSBmaWxsUGFyYW1zKHJhd1BhdGgsIHBhcmFtcyQxLCAoXCJwYXRoIFwiICsgKGN1cnJlbnQucGF0aCkpKTtcbiAgICB9IGVsc2UgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIHdhcm4oZmFsc2UsIFwicmVsYXRpdmUgcGFyYW1zIG5hdmlnYXRpb24gcmVxdWlyZXMgYSBjdXJyZW50IHJvdXRlLlwiKTtcbiAgICB9XG4gICAgcmV0dXJuIG5leHRcbiAgfVxuXG4gIHZhciBwYXJzZWRQYXRoID0gcGFyc2VQYXRoKG5leHQucGF0aCB8fCAnJyk7XG4gIHZhciBiYXNlUGF0aCA9IChjdXJyZW50ICYmIGN1cnJlbnQucGF0aCkgfHwgJy8nO1xuICB2YXIgcGF0aCA9IHBhcnNlZFBhdGgucGF0aFxuICAgID8gcmVzb2x2ZVBhdGgocGFyc2VkUGF0aC5wYXRoLCBiYXNlUGF0aCwgYXBwZW5kIHx8IG5leHQuYXBwZW5kKVxuICAgIDogYmFzZVBhdGg7XG5cbiAgdmFyIHF1ZXJ5ID0gcmVzb2x2ZVF1ZXJ5KFxuICAgIHBhcnNlZFBhdGgucXVlcnksXG4gICAgbmV4dC5xdWVyeSxcbiAgICByb3V0ZXIgJiYgcm91dGVyLm9wdGlvbnMucGFyc2VRdWVyeVxuICApO1xuXG4gIHZhciBoYXNoID0gbmV4dC5oYXNoIHx8IHBhcnNlZFBhdGguaGFzaDtcbiAgaWYgKGhhc2ggJiYgaGFzaC5jaGFyQXQoMCkgIT09ICcjJykge1xuICAgIGhhc2ggPSBcIiNcIiArIGhhc2g7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIF9ub3JtYWxpemVkOiB0cnVlLFxuICAgIHBhdGg6IHBhdGgsXG4gICAgcXVlcnk6IHF1ZXJ5LFxuICAgIGhhc2g6IGhhc2hcbiAgfVxufVxuXG4vKiAgKi9cblxuLy8gd29yayBhcm91bmQgd2VpcmQgZmxvdyBidWdcbnZhciB0b1R5cGVzID0gW1N0cmluZywgT2JqZWN0XTtcbnZhciBldmVudFR5cGVzID0gW1N0cmluZywgQXJyYXldO1xuXG52YXIgbm9vcCA9IGZ1bmN0aW9uICgpIHt9O1xuXG52YXIgTGluayA9IHtcbiAgbmFtZTogJ1JvdXRlckxpbmsnLFxuICBwcm9wczoge1xuICAgIHRvOiB7XG4gICAgICB0eXBlOiB0b1R5cGVzLFxuICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICB9LFxuICAgIHRhZzoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJ2EnXG4gICAgfSxcbiAgICBleGFjdDogQm9vbGVhbixcbiAgICBhcHBlbmQ6IEJvb2xlYW4sXG4gICAgcmVwbGFjZTogQm9vbGVhbixcbiAgICBhY3RpdmVDbGFzczogU3RyaW5nLFxuICAgIGV4YWN0QWN0aXZlQ2xhc3M6IFN0cmluZyxcbiAgICBldmVudDoge1xuICAgICAgdHlwZTogZXZlbnRUeXBlcyxcbiAgICAgIGRlZmF1bHQ6ICdjbGljaydcbiAgICB9XG4gIH0sXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyIChoKSB7XG4gICAgdmFyIHRoaXMkMSA9IHRoaXM7XG5cbiAgICB2YXIgcm91dGVyID0gdGhpcy4kcm91dGVyO1xuICAgIHZhciBjdXJyZW50ID0gdGhpcy4kcm91dGU7XG4gICAgdmFyIHJlZiA9IHJvdXRlci5yZXNvbHZlKFxuICAgICAgdGhpcy50byxcbiAgICAgIGN1cnJlbnQsXG4gICAgICB0aGlzLmFwcGVuZFxuICAgICk7XG4gICAgdmFyIGxvY2F0aW9uID0gcmVmLmxvY2F0aW9uO1xuICAgIHZhciByb3V0ZSA9IHJlZi5yb3V0ZTtcbiAgICB2YXIgaHJlZiA9IHJlZi5ocmVmO1xuXG4gICAgdmFyIGNsYXNzZXMgPSB7fTtcbiAgICB2YXIgZ2xvYmFsQWN0aXZlQ2xhc3MgPSByb3V0ZXIub3B0aW9ucy5saW5rQWN0aXZlQ2xhc3M7XG4gICAgdmFyIGdsb2JhbEV4YWN0QWN0aXZlQ2xhc3MgPSByb3V0ZXIub3B0aW9ucy5saW5rRXhhY3RBY3RpdmVDbGFzcztcbiAgICAvLyBTdXBwb3J0IGdsb2JhbCBlbXB0eSBhY3RpdmUgY2xhc3NcbiAgICB2YXIgYWN0aXZlQ2xhc3NGYWxsYmFjayA9XG4gICAgICBnbG9iYWxBY3RpdmVDbGFzcyA9PSBudWxsID8gJ3JvdXRlci1saW5rLWFjdGl2ZScgOiBnbG9iYWxBY3RpdmVDbGFzcztcbiAgICB2YXIgZXhhY3RBY3RpdmVDbGFzc0ZhbGxiYWNrID1cbiAgICAgIGdsb2JhbEV4YWN0QWN0aXZlQ2xhc3MgPT0gbnVsbFxuICAgICAgICA/ICdyb3V0ZXItbGluay1leGFjdC1hY3RpdmUnXG4gICAgICAgIDogZ2xvYmFsRXhhY3RBY3RpdmVDbGFzcztcbiAgICB2YXIgYWN0aXZlQ2xhc3MgPVxuICAgICAgdGhpcy5hY3RpdmVDbGFzcyA9PSBudWxsID8gYWN0aXZlQ2xhc3NGYWxsYmFjayA6IHRoaXMuYWN0aXZlQ2xhc3M7XG4gICAgdmFyIGV4YWN0QWN0aXZlQ2xhc3MgPVxuICAgICAgdGhpcy5leGFjdEFjdGl2ZUNsYXNzID09IG51bGxcbiAgICAgICAgPyBleGFjdEFjdGl2ZUNsYXNzRmFsbGJhY2tcbiAgICAgICAgOiB0aGlzLmV4YWN0QWN0aXZlQ2xhc3M7XG5cbiAgICB2YXIgY29tcGFyZVRhcmdldCA9IHJvdXRlLnJlZGlyZWN0ZWRGcm9tXG4gICAgICA/IGNyZWF0ZVJvdXRlKG51bGwsIG5vcm1hbGl6ZUxvY2F0aW9uKHJvdXRlLnJlZGlyZWN0ZWRGcm9tKSwgbnVsbCwgcm91dGVyKVxuICAgICAgOiByb3V0ZTtcblxuICAgIGNsYXNzZXNbZXhhY3RBY3RpdmVDbGFzc10gPSBpc1NhbWVSb3V0ZShjdXJyZW50LCBjb21wYXJlVGFyZ2V0KTtcbiAgICBjbGFzc2VzW2FjdGl2ZUNsYXNzXSA9IHRoaXMuZXhhY3RcbiAgICAgID8gY2xhc3Nlc1tleGFjdEFjdGl2ZUNsYXNzXVxuICAgICAgOiBpc0luY2x1ZGVkUm91dGUoY3VycmVudCwgY29tcGFyZVRhcmdldCk7XG5cbiAgICB2YXIgaGFuZGxlciA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICBpZiAoZ3VhcmRFdmVudChlKSkge1xuICAgICAgICBpZiAodGhpcyQxLnJlcGxhY2UpIHtcbiAgICAgICAgICByb3V0ZXIucmVwbGFjZShsb2NhdGlvbiwgbm9vcCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcm91dGVyLnB1c2gobG9jYXRpb24sIG5vb3ApO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIHZhciBvbiA9IHsgY2xpY2s6IGd1YXJkRXZlbnQgfTtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLmV2ZW50KSkge1xuICAgICAgdGhpcy5ldmVudC5mb3JFYWNoKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIG9uW2VdID0gaGFuZGxlcjtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBvblt0aGlzLmV2ZW50XSA9IGhhbmRsZXI7XG4gICAgfVxuXG4gICAgdmFyIGRhdGEgPSB7IGNsYXNzOiBjbGFzc2VzIH07XG5cbiAgICB2YXIgc2NvcGVkU2xvdCA9XG4gICAgICAhdGhpcy4kc2NvcGVkU2xvdHMuJGhhc05vcm1hbCAmJlxuICAgICAgdGhpcy4kc2NvcGVkU2xvdHMuZGVmYXVsdCAmJlxuICAgICAgdGhpcy4kc2NvcGVkU2xvdHMuZGVmYXVsdCh7XG4gICAgICAgIGhyZWY6IGhyZWYsXG4gICAgICAgIHJvdXRlOiByb3V0ZSxcbiAgICAgICAgbmF2aWdhdGU6IGhhbmRsZXIsXG4gICAgICAgIGlzQWN0aXZlOiBjbGFzc2VzW2FjdGl2ZUNsYXNzXSxcbiAgICAgICAgaXNFeGFjdEFjdGl2ZTogY2xhc3Nlc1tleGFjdEFjdGl2ZUNsYXNzXVxuICAgICAgfSk7XG5cbiAgICBpZiAoc2NvcGVkU2xvdCkge1xuICAgICAgaWYgKHNjb3BlZFNsb3QubGVuZ3RoID09PSAxKSB7XG4gICAgICAgIHJldHVybiBzY29wZWRTbG90WzBdXG4gICAgICB9IGVsc2UgaWYgKHNjb3BlZFNsb3QubGVuZ3RoID4gMSB8fCAhc2NvcGVkU2xvdC5sZW5ndGgpIHtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICB3YXJuKFxuICAgICAgICAgICAgZmFsc2UsXG4gICAgICAgICAgICAoXCJSb3V0ZXJMaW5rIHdpdGggdG89XFxcIlwiICsgKHRoaXMudG8pICsgXCJcXFwiIGlzIHRyeWluZyB0byB1c2UgYSBzY29wZWQgc2xvdCBidXQgaXQgZGlkbid0IHByb3ZpZGUgZXhhY3RseSBvbmUgY2hpbGQuIFdyYXBwaW5nIHRoZSBjb250ZW50IHdpdGggYSBzcGFuIGVsZW1lbnQuXCIpXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2NvcGVkU2xvdC5sZW5ndGggPT09IDAgPyBoKCkgOiBoKCdzcGFuJywge30sIHNjb3BlZFNsb3QpXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHRoaXMudGFnID09PSAnYScpIHtcbiAgICAgIGRhdGEub24gPSBvbjtcbiAgICAgIGRhdGEuYXR0cnMgPSB7IGhyZWY6IGhyZWYgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gZmluZCB0aGUgZmlyc3QgPGE+IGNoaWxkIGFuZCBhcHBseSBsaXN0ZW5lciBhbmQgaHJlZlxuICAgICAgdmFyIGEgPSBmaW5kQW5jaG9yKHRoaXMuJHNsb3RzLmRlZmF1bHQpO1xuICAgICAgaWYgKGEpIHtcbiAgICAgICAgLy8gaW4gY2FzZSB0aGUgPGE+IGlzIGEgc3RhdGljIG5vZGVcbiAgICAgICAgYS5pc1N0YXRpYyA9IGZhbHNlO1xuICAgICAgICB2YXIgYURhdGEgPSAoYS5kYXRhID0gZXh0ZW5kKHt9LCBhLmRhdGEpKTtcbiAgICAgICAgYURhdGEub24gPSBhRGF0YS5vbiB8fCB7fTtcbiAgICAgICAgLy8gdHJhbnNmb3JtIGV4aXN0aW5nIGV2ZW50cyBpbiBib3RoIG9iamVjdHMgaW50byBhcnJheXMgc28gd2UgY2FuIHB1c2ggbGF0ZXJcbiAgICAgICAgZm9yICh2YXIgZXZlbnQgaW4gYURhdGEub24pIHtcbiAgICAgICAgICB2YXIgaGFuZGxlciQxID0gYURhdGEub25bZXZlbnRdO1xuICAgICAgICAgIGlmIChldmVudCBpbiBvbikge1xuICAgICAgICAgICAgYURhdGEub25bZXZlbnRdID0gQXJyYXkuaXNBcnJheShoYW5kbGVyJDEpID8gaGFuZGxlciQxIDogW2hhbmRsZXIkMV07XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIGFwcGVuZCBuZXcgbGlzdGVuZXJzIGZvciByb3V0ZXItbGlua1xuICAgICAgICBmb3IgKHZhciBldmVudCQxIGluIG9uKSB7XG4gICAgICAgICAgaWYgKGV2ZW50JDEgaW4gYURhdGEub24pIHtcbiAgICAgICAgICAgIC8vIG9uW2V2ZW50XSBpcyBhbHdheXMgYSBmdW5jdGlvblxuICAgICAgICAgICAgYURhdGEub25bZXZlbnQkMV0ucHVzaChvbltldmVudCQxXSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGFEYXRhLm9uW2V2ZW50JDFdID0gaGFuZGxlcjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgYUF0dHJzID0gKGEuZGF0YS5hdHRycyA9IGV4dGVuZCh7fSwgYS5kYXRhLmF0dHJzKSk7XG4gICAgICAgIGFBdHRycy5ocmVmID0gaHJlZjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIGRvZXNuJ3QgaGF2ZSA8YT4gY2hpbGQsIGFwcGx5IGxpc3RlbmVyIHRvIHNlbGZcbiAgICAgICAgZGF0YS5vbiA9IG9uO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBoKHRoaXMudGFnLCBkYXRhLCB0aGlzLiRzbG90cy5kZWZhdWx0KVxuICB9XG59O1xuXG5mdW5jdGlvbiBndWFyZEV2ZW50IChlKSB7XG4gIC8vIGRvbid0IHJlZGlyZWN0IHdpdGggY29udHJvbCBrZXlzXG4gIGlmIChlLm1ldGFLZXkgfHwgZS5hbHRLZXkgfHwgZS5jdHJsS2V5IHx8IGUuc2hpZnRLZXkpIHsgcmV0dXJuIH1cbiAgLy8gZG9uJ3QgcmVkaXJlY3Qgd2hlbiBwcmV2ZW50RGVmYXVsdCBjYWxsZWRcbiAgaWYgKGUuZGVmYXVsdFByZXZlbnRlZCkgeyByZXR1cm4gfVxuICAvLyBkb24ndCByZWRpcmVjdCBvbiByaWdodCBjbGlja1xuICBpZiAoZS5idXR0b24gIT09IHVuZGVmaW5lZCAmJiBlLmJ1dHRvbiAhPT0gMCkgeyByZXR1cm4gfVxuICAvLyBkb24ndCByZWRpcmVjdCBpZiBgdGFyZ2V0PVwiX2JsYW5rXCJgXG4gIGlmIChlLmN1cnJlbnRUYXJnZXQgJiYgZS5jdXJyZW50VGFyZ2V0LmdldEF0dHJpYnV0ZSkge1xuICAgIHZhciB0YXJnZXQgPSBlLmN1cnJlbnRUYXJnZXQuZ2V0QXR0cmlidXRlKCd0YXJnZXQnKTtcbiAgICBpZiAoL1xcYl9ibGFua1xcYi9pLnRlc3QodGFyZ2V0KSkgeyByZXR1cm4gfVxuICB9XG4gIC8vIHRoaXMgbWF5IGJlIGEgV2VleCBldmVudCB3aGljaCBkb2Vzbid0IGhhdmUgdGhpcyBtZXRob2RcbiAgaWYgKGUucHJldmVudERlZmF1bHQpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIH1cbiAgcmV0dXJuIHRydWVcbn1cblxuZnVuY3Rpb24gZmluZEFuY2hvciAoY2hpbGRyZW4pIHtcbiAgaWYgKGNoaWxkcmVuKSB7XG4gICAgdmFyIGNoaWxkO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNoaWxkID0gY2hpbGRyZW5baV07XG4gICAgICBpZiAoY2hpbGQudGFnID09PSAnYScpIHtcbiAgICAgICAgcmV0dXJuIGNoaWxkXG4gICAgICB9XG4gICAgICBpZiAoY2hpbGQuY2hpbGRyZW4gJiYgKGNoaWxkID0gZmluZEFuY2hvcihjaGlsZC5jaGlsZHJlbikpKSB7XG4gICAgICAgIHJldHVybiBjaGlsZFxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG52YXIgX1Z1ZTtcblxuZnVuY3Rpb24gaW5zdGFsbCAoVnVlKSB7XG4gIGlmIChpbnN0YWxsLmluc3RhbGxlZCAmJiBfVnVlID09PSBWdWUpIHsgcmV0dXJuIH1cbiAgaW5zdGFsbC5pbnN0YWxsZWQgPSB0cnVlO1xuXG4gIF9WdWUgPSBWdWU7XG5cbiAgdmFyIGlzRGVmID0gZnVuY3Rpb24gKHYpIHsgcmV0dXJuIHYgIT09IHVuZGVmaW5lZDsgfTtcblxuICB2YXIgcmVnaXN0ZXJJbnN0YW5jZSA9IGZ1bmN0aW9uICh2bSwgY2FsbFZhbCkge1xuICAgIHZhciBpID0gdm0uJG9wdGlvbnMuX3BhcmVudFZub2RlO1xuICAgIGlmIChpc0RlZihpKSAmJiBpc0RlZihpID0gaS5kYXRhKSAmJiBpc0RlZihpID0gaS5yZWdpc3RlclJvdXRlSW5zdGFuY2UpKSB7XG4gICAgICBpKHZtLCBjYWxsVmFsKTtcbiAgICB9XG4gIH07XG5cbiAgVnVlLm1peGluKHtcbiAgICBiZWZvcmVDcmVhdGU6IGZ1bmN0aW9uIGJlZm9yZUNyZWF0ZSAoKSB7XG4gICAgICBpZiAoaXNEZWYodGhpcy4kb3B0aW9ucy5yb3V0ZXIpKSB7XG4gICAgICAgIHRoaXMuX3JvdXRlclJvb3QgPSB0aGlzO1xuICAgICAgICB0aGlzLl9yb3V0ZXIgPSB0aGlzLiRvcHRpb25zLnJvdXRlcjtcbiAgICAgICAgdGhpcy5fcm91dGVyLmluaXQodGhpcyk7XG4gICAgICAgIFZ1ZS51dGlsLmRlZmluZVJlYWN0aXZlKHRoaXMsICdfcm91dGUnLCB0aGlzLl9yb3V0ZXIuaGlzdG9yeS5jdXJyZW50KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuX3JvdXRlclJvb3QgPSAodGhpcy4kcGFyZW50ICYmIHRoaXMuJHBhcmVudC5fcm91dGVyUm9vdCkgfHwgdGhpcztcbiAgICAgIH1cbiAgICAgIHJlZ2lzdGVySW5zdGFuY2UodGhpcywgdGhpcyk7XG4gICAgfSxcbiAgICBkZXN0cm95ZWQ6IGZ1bmN0aW9uIGRlc3Ryb3llZCAoKSB7XG4gICAgICByZWdpc3Rlckluc3RhbmNlKHRoaXMpO1xuICAgIH1cbiAgfSk7XG5cbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFZ1ZS5wcm90b3R5cGUsICckcm91dGVyJywge1xuICAgIGdldDogZnVuY3Rpb24gZ2V0ICgpIHsgcmV0dXJuIHRoaXMuX3JvdXRlclJvb3QuX3JvdXRlciB9XG4gIH0pO1xuXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShWdWUucHJvdG90eXBlLCAnJHJvdXRlJywge1xuICAgIGdldDogZnVuY3Rpb24gZ2V0ICgpIHsgcmV0dXJuIHRoaXMuX3JvdXRlclJvb3QuX3JvdXRlIH1cbiAgfSk7XG5cbiAgVnVlLmNvbXBvbmVudCgnUm91dGVyVmlldycsIFZpZXcpO1xuICBWdWUuY29tcG9uZW50KCdSb3V0ZXJMaW5rJywgTGluayk7XG5cbiAgdmFyIHN0cmF0cyA9IFZ1ZS5jb25maWcub3B0aW9uTWVyZ2VTdHJhdGVnaWVzO1xuICAvLyB1c2UgdGhlIHNhbWUgaG9vayBtZXJnaW5nIHN0cmF0ZWd5IGZvciByb3V0ZSBob29rc1xuICBzdHJhdHMuYmVmb3JlUm91dGVFbnRlciA9IHN0cmF0cy5iZWZvcmVSb3V0ZUxlYXZlID0gc3RyYXRzLmJlZm9yZVJvdXRlVXBkYXRlID0gc3RyYXRzLmNyZWF0ZWQ7XG59XG5cbi8qICAqL1xuXG52YXIgaW5Ccm93c2VyID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCc7XG5cbi8qICAqL1xuXG5mdW5jdGlvbiBjcmVhdGVSb3V0ZU1hcCAoXG4gIHJvdXRlcyxcbiAgb2xkUGF0aExpc3QsXG4gIG9sZFBhdGhNYXAsXG4gIG9sZE5hbWVNYXBcbikge1xuICAvLyB0aGUgcGF0aCBsaXN0IGlzIHVzZWQgdG8gY29udHJvbCBwYXRoIG1hdGNoaW5nIHByaW9yaXR5XG4gIHZhciBwYXRoTGlzdCA9IG9sZFBhdGhMaXN0IHx8IFtdO1xuICAvLyAkZmxvdy1kaXNhYmxlLWxpbmVcbiAgdmFyIHBhdGhNYXAgPSBvbGRQYXRoTWFwIHx8IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIC8vICRmbG93LWRpc2FibGUtbGluZVxuICB2YXIgbmFtZU1hcCA9IG9sZE5hbWVNYXAgfHwgT2JqZWN0LmNyZWF0ZShudWxsKTtcblxuICByb3V0ZXMuZm9yRWFjaChmdW5jdGlvbiAocm91dGUpIHtcbiAgICBhZGRSb3V0ZVJlY29yZChwYXRoTGlzdCwgcGF0aE1hcCwgbmFtZU1hcCwgcm91dGUpO1xuICB9KTtcblxuICAvLyBlbnN1cmUgd2lsZGNhcmQgcm91dGVzIGFyZSBhbHdheXMgYXQgdGhlIGVuZFxuICBmb3IgKHZhciBpID0gMCwgbCA9IHBhdGhMaXN0Lmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIGlmIChwYXRoTGlzdFtpXSA9PT0gJyonKSB7XG4gICAgICBwYXRoTGlzdC5wdXNoKHBhdGhMaXN0LnNwbGljZShpLCAxKVswXSk7XG4gICAgICBsLS07XG4gICAgICBpLS07XG4gICAgfVxuICB9XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG4gICAgLy8gd2FybiBpZiByb3V0ZXMgZG8gbm90IGluY2x1ZGUgbGVhZGluZyBzbGFzaGVzXG4gICAgdmFyIGZvdW5kID0gcGF0aExpc3RcbiAgICAvLyBjaGVjayBmb3IgbWlzc2luZyBsZWFkaW5nIHNsYXNoXG4gICAgICAuZmlsdGVyKGZ1bmN0aW9uIChwYXRoKSB7IHJldHVybiBwYXRoICYmIHBhdGguY2hhckF0KDApICE9PSAnKicgJiYgcGF0aC5jaGFyQXQoMCkgIT09ICcvJzsgfSk7XG5cbiAgICBpZiAoZm91bmQubGVuZ3RoID4gMCkge1xuICAgICAgdmFyIHBhdGhOYW1lcyA9IGZvdW5kLm1hcChmdW5jdGlvbiAocGF0aCkgeyByZXR1cm4gKFwiLSBcIiArIHBhdGgpOyB9KS5qb2luKCdcXG4nKTtcbiAgICAgIHdhcm4oZmFsc2UsIChcIk5vbi1uZXN0ZWQgcm91dGVzIG11c3QgaW5jbHVkZSBhIGxlYWRpbmcgc2xhc2ggY2hhcmFjdGVyLiBGaXggdGhlIGZvbGxvd2luZyByb3V0ZXM6IFxcblwiICsgcGF0aE5hbWVzKSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBwYXRoTGlzdDogcGF0aExpc3QsXG4gICAgcGF0aE1hcDogcGF0aE1hcCxcbiAgICBuYW1lTWFwOiBuYW1lTWFwXG4gIH1cbn1cblxuZnVuY3Rpb24gYWRkUm91dGVSZWNvcmQgKFxuICBwYXRoTGlzdCxcbiAgcGF0aE1hcCxcbiAgbmFtZU1hcCxcbiAgcm91dGUsXG4gIHBhcmVudCxcbiAgbWF0Y2hBc1xuKSB7XG4gIHZhciBwYXRoID0gcm91dGUucGF0aDtcbiAgdmFyIG5hbWUgPSByb3V0ZS5uYW1lO1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGFzc2VydChwYXRoICE9IG51bGwsIFwiXFxcInBhdGhcXFwiIGlzIHJlcXVpcmVkIGluIGEgcm91dGUgY29uZmlndXJhdGlvbi5cIik7XG4gICAgYXNzZXJ0KFxuICAgICAgdHlwZW9mIHJvdXRlLmNvbXBvbmVudCAhPT0gJ3N0cmluZycsXG4gICAgICBcInJvdXRlIGNvbmZpZyBcXFwiY29tcG9uZW50XFxcIiBmb3IgcGF0aDogXCIgKyAoU3RyaW5nKFxuICAgICAgICBwYXRoIHx8IG5hbWVcbiAgICAgICkpICsgXCIgY2Fubm90IGJlIGEgXCIgKyBcInN0cmluZyBpZC4gVXNlIGFuIGFjdHVhbCBjb21wb25lbnQgaW5zdGVhZC5cIlxuICAgICk7XG4gIH1cblxuICB2YXIgcGF0aFRvUmVnZXhwT3B0aW9ucyA9XG4gICAgcm91dGUucGF0aFRvUmVnZXhwT3B0aW9ucyB8fCB7fTtcbiAgdmFyIG5vcm1hbGl6ZWRQYXRoID0gbm9ybWFsaXplUGF0aChwYXRoLCBwYXJlbnQsIHBhdGhUb1JlZ2V4cE9wdGlvbnMuc3RyaWN0KTtcblxuICBpZiAodHlwZW9mIHJvdXRlLmNhc2VTZW5zaXRpdmUgPT09ICdib29sZWFuJykge1xuICAgIHBhdGhUb1JlZ2V4cE9wdGlvbnMuc2Vuc2l0aXZlID0gcm91dGUuY2FzZVNlbnNpdGl2ZTtcbiAgfVxuXG4gIHZhciByZWNvcmQgPSB7XG4gICAgcGF0aDogbm9ybWFsaXplZFBhdGgsXG4gICAgcmVnZXg6IGNvbXBpbGVSb3V0ZVJlZ2V4KG5vcm1hbGl6ZWRQYXRoLCBwYXRoVG9SZWdleHBPcHRpb25zKSxcbiAgICBjb21wb25lbnRzOiByb3V0ZS5jb21wb25lbnRzIHx8IHsgZGVmYXVsdDogcm91dGUuY29tcG9uZW50IH0sXG4gICAgaW5zdGFuY2VzOiB7fSxcbiAgICBuYW1lOiBuYW1lLFxuICAgIHBhcmVudDogcGFyZW50LFxuICAgIG1hdGNoQXM6IG1hdGNoQXMsXG4gICAgcmVkaXJlY3Q6IHJvdXRlLnJlZGlyZWN0LFxuICAgIGJlZm9yZUVudGVyOiByb3V0ZS5iZWZvcmVFbnRlcixcbiAgICBtZXRhOiByb3V0ZS5tZXRhIHx8IHt9LFxuICAgIHByb3BzOlxuICAgICAgcm91dGUucHJvcHMgPT0gbnVsbFxuICAgICAgICA/IHt9XG4gICAgICAgIDogcm91dGUuY29tcG9uZW50c1xuICAgICAgICAgID8gcm91dGUucHJvcHNcbiAgICAgICAgICA6IHsgZGVmYXVsdDogcm91dGUucHJvcHMgfVxuICB9O1xuXG4gIGlmIChyb3V0ZS5jaGlsZHJlbikge1xuICAgIC8vIFdhcm4gaWYgcm91dGUgaXMgbmFtZWQsIGRvZXMgbm90IHJlZGlyZWN0IGFuZCBoYXMgYSBkZWZhdWx0IGNoaWxkIHJvdXRlLlxuICAgIC8vIElmIHVzZXJzIG5hdmlnYXRlIHRvIHRoaXMgcm91dGUgYnkgbmFtZSwgdGhlIGRlZmF1bHQgY2hpbGQgd2lsbFxuICAgIC8vIG5vdCBiZSByZW5kZXJlZCAoR0ggSXNzdWUgIzYyOSlcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaWYgKFxuICAgICAgICByb3V0ZS5uYW1lICYmXG4gICAgICAgICFyb3V0ZS5yZWRpcmVjdCAmJlxuICAgICAgICByb3V0ZS5jaGlsZHJlbi5zb21lKGZ1bmN0aW9uIChjaGlsZCkgeyByZXR1cm4gL15cXC8/JC8udGVzdChjaGlsZC5wYXRoKTsgfSlcbiAgICAgICkge1xuICAgICAgICB3YXJuKFxuICAgICAgICAgIGZhbHNlLFxuICAgICAgICAgIFwiTmFtZWQgUm91dGUgJ1wiICsgKHJvdXRlLm5hbWUpICsgXCInIGhhcyBhIGRlZmF1bHQgY2hpbGQgcm91dGUuIFwiICtcbiAgICAgICAgICAgIFwiV2hlbiBuYXZpZ2F0aW5nIHRvIHRoaXMgbmFtZWQgcm91dGUgKDp0bz1cXFwie25hbWU6ICdcIiArIChyb3V0ZS5uYW1lKSArIFwiJ1xcXCIpLCBcIiArXG4gICAgICAgICAgICBcInRoZSBkZWZhdWx0IGNoaWxkIHJvdXRlIHdpbGwgbm90IGJlIHJlbmRlcmVkLiBSZW1vdmUgdGhlIG5hbWUgZnJvbSBcIiArXG4gICAgICAgICAgICBcInRoaXMgcm91dGUgYW5kIHVzZSB0aGUgbmFtZSBvZiB0aGUgZGVmYXVsdCBjaGlsZCByb3V0ZSBmb3IgbmFtZWQgXCIgK1xuICAgICAgICAgICAgXCJsaW5rcyBpbnN0ZWFkLlwiXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfVxuICAgIHJvdXRlLmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgICB2YXIgY2hpbGRNYXRjaEFzID0gbWF0Y2hBc1xuICAgICAgICA/IGNsZWFuUGF0aCgobWF0Y2hBcyArIFwiL1wiICsgKGNoaWxkLnBhdGgpKSlcbiAgICAgICAgOiB1bmRlZmluZWQ7XG4gICAgICBhZGRSb3V0ZVJlY29yZChwYXRoTGlzdCwgcGF0aE1hcCwgbmFtZU1hcCwgY2hpbGQsIHJlY29yZCwgY2hpbGRNYXRjaEFzKTtcbiAgICB9KTtcbiAgfVxuXG4gIGlmICghcGF0aE1hcFtyZWNvcmQucGF0aF0pIHtcbiAgICBwYXRoTGlzdC5wdXNoKHJlY29yZC5wYXRoKTtcbiAgICBwYXRoTWFwW3JlY29yZC5wYXRoXSA9IHJlY29yZDtcbiAgfVxuXG4gIGlmIChyb3V0ZS5hbGlhcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgdmFyIGFsaWFzZXMgPSBBcnJheS5pc0FycmF5KHJvdXRlLmFsaWFzKSA/IHJvdXRlLmFsaWFzIDogW3JvdXRlLmFsaWFzXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFsaWFzZXMubGVuZ3RoOyArK2kpIHtcbiAgICAgIHZhciBhbGlhcyA9IGFsaWFzZXNbaV07XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBhbGlhcyA9PT0gcGF0aCkge1xuICAgICAgICB3YXJuKFxuICAgICAgICAgIGZhbHNlLFxuICAgICAgICAgIChcIkZvdW5kIGFuIGFsaWFzIHdpdGggdGhlIHNhbWUgdmFsdWUgYXMgdGhlIHBhdGg6IFxcXCJcIiArIHBhdGggKyBcIlxcXCIuIFlvdSBoYXZlIHRvIHJlbW92ZSB0aGF0IGFsaWFzLiBJdCB3aWxsIGJlIGlnbm9yZWQgaW4gZGV2ZWxvcG1lbnQuXCIpXG4gICAgICAgICk7XG4gICAgICAgIC8vIHNraXAgaW4gZGV2IHRvIG1ha2UgaXQgd29ya1xuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICB2YXIgYWxpYXNSb3V0ZSA9IHtcbiAgICAgICAgcGF0aDogYWxpYXMsXG4gICAgICAgIGNoaWxkcmVuOiByb3V0ZS5jaGlsZHJlblxuICAgICAgfTtcbiAgICAgIGFkZFJvdXRlUmVjb3JkKFxuICAgICAgICBwYXRoTGlzdCxcbiAgICAgICAgcGF0aE1hcCxcbiAgICAgICAgbmFtZU1hcCxcbiAgICAgICAgYWxpYXNSb3V0ZSxcbiAgICAgICAgcGFyZW50LFxuICAgICAgICByZWNvcmQucGF0aCB8fCAnLycgLy8gbWF0Y2hBc1xuICAgICAgKTtcbiAgICB9XG4gIH1cblxuICBpZiAobmFtZSkge1xuICAgIGlmICghbmFtZU1hcFtuYW1lXSkge1xuICAgICAgbmFtZU1hcFtuYW1lXSA9IHJlY29yZDtcbiAgICB9IGVsc2UgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgIW1hdGNoQXMpIHtcbiAgICAgIHdhcm4oXG4gICAgICAgIGZhbHNlLFxuICAgICAgICBcIkR1cGxpY2F0ZSBuYW1lZCByb3V0ZXMgZGVmaW5pdGlvbjogXCIgK1xuICAgICAgICAgIFwieyBuYW1lOiBcXFwiXCIgKyBuYW1lICsgXCJcXFwiLCBwYXRoOiBcXFwiXCIgKyAocmVjb3JkLnBhdGgpICsgXCJcXFwiIH1cIlxuICAgICAgKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gY29tcGlsZVJvdXRlUmVnZXggKFxuICBwYXRoLFxuICBwYXRoVG9SZWdleHBPcHRpb25zXG4pIHtcbiAgdmFyIHJlZ2V4ID0gcGF0aFRvUmVnZXhwXzEocGF0aCwgW10sIHBhdGhUb1JlZ2V4cE9wdGlvbnMpO1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIHZhciBrZXlzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICByZWdleC5rZXlzLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgd2FybihcbiAgICAgICAgIWtleXNba2V5Lm5hbWVdLFxuICAgICAgICAoXCJEdXBsaWNhdGUgcGFyYW0ga2V5cyBpbiByb3V0ZSB3aXRoIHBhdGg6IFxcXCJcIiArIHBhdGggKyBcIlxcXCJcIilcbiAgICAgICk7XG4gICAgICBrZXlzW2tleS5uYW1lXSA9IHRydWU7XG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIHJlZ2V4XG59XG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZVBhdGggKFxuICBwYXRoLFxuICBwYXJlbnQsXG4gIHN0cmljdFxuKSB7XG4gIGlmICghc3RyaWN0KSB7IHBhdGggPSBwYXRoLnJlcGxhY2UoL1xcLyQvLCAnJyk7IH1cbiAgaWYgKHBhdGhbMF0gPT09ICcvJykgeyByZXR1cm4gcGF0aCB9XG4gIGlmIChwYXJlbnQgPT0gbnVsbCkgeyByZXR1cm4gcGF0aCB9XG4gIHJldHVybiBjbGVhblBhdGgoKChwYXJlbnQucGF0aCkgKyBcIi9cIiArIHBhdGgpKVxufVxuXG4vKiAgKi9cblxuXG5cbmZ1bmN0aW9uIGNyZWF0ZU1hdGNoZXIgKFxuICByb3V0ZXMsXG4gIHJvdXRlclxuKSB7XG4gIHZhciByZWYgPSBjcmVhdGVSb3V0ZU1hcChyb3V0ZXMpO1xuICB2YXIgcGF0aExpc3QgPSByZWYucGF0aExpc3Q7XG4gIHZhciBwYXRoTWFwID0gcmVmLnBhdGhNYXA7XG4gIHZhciBuYW1lTWFwID0gcmVmLm5hbWVNYXA7XG5cbiAgZnVuY3Rpb24gYWRkUm91dGVzIChyb3V0ZXMpIHtcbiAgICBjcmVhdGVSb3V0ZU1hcChyb3V0ZXMsIHBhdGhMaXN0LCBwYXRoTWFwLCBuYW1lTWFwKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG1hdGNoIChcbiAgICByYXcsXG4gICAgY3VycmVudFJvdXRlLFxuICAgIHJlZGlyZWN0ZWRGcm9tXG4gICkge1xuICAgIHZhciBsb2NhdGlvbiA9IG5vcm1hbGl6ZUxvY2F0aW9uKHJhdywgY3VycmVudFJvdXRlLCBmYWxzZSwgcm91dGVyKTtcbiAgICB2YXIgbmFtZSA9IGxvY2F0aW9uLm5hbWU7XG5cbiAgICBpZiAobmFtZSkge1xuICAgICAgdmFyIHJlY29yZCA9IG5hbWVNYXBbbmFtZV07XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICB3YXJuKHJlY29yZCwgKFwiUm91dGUgd2l0aCBuYW1lICdcIiArIG5hbWUgKyBcIicgZG9lcyBub3QgZXhpc3RcIikpO1xuICAgICAgfVxuICAgICAgaWYgKCFyZWNvcmQpIHsgcmV0dXJuIF9jcmVhdGVSb3V0ZShudWxsLCBsb2NhdGlvbikgfVxuICAgICAgdmFyIHBhcmFtTmFtZXMgPSByZWNvcmQucmVnZXgua2V5c1xuICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChrZXkpIHsgcmV0dXJuICFrZXkub3B0aW9uYWw7IH0pXG4gICAgICAgIC5tYXAoZnVuY3Rpb24gKGtleSkgeyByZXR1cm4ga2V5Lm5hbWU7IH0pO1xuXG4gICAgICBpZiAodHlwZW9mIGxvY2F0aW9uLnBhcmFtcyAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgbG9jYXRpb24ucGFyYW1zID0ge307XG4gICAgICB9XG5cbiAgICAgIGlmIChjdXJyZW50Um91dGUgJiYgdHlwZW9mIGN1cnJlbnRSb3V0ZS5wYXJhbXMgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIGZvciAodmFyIGtleSBpbiBjdXJyZW50Um91dGUucGFyYW1zKSB7XG4gICAgICAgICAgaWYgKCEoa2V5IGluIGxvY2F0aW9uLnBhcmFtcykgJiYgcGFyYW1OYW1lcy5pbmRleE9mKGtleSkgPiAtMSkge1xuICAgICAgICAgICAgbG9jYXRpb24ucGFyYW1zW2tleV0gPSBjdXJyZW50Um91dGUucGFyYW1zW2tleV07XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxvY2F0aW9uLnBhdGggPSBmaWxsUGFyYW1zKHJlY29yZC5wYXRoLCBsb2NhdGlvbi5wYXJhbXMsIChcIm5hbWVkIHJvdXRlIFxcXCJcIiArIG5hbWUgKyBcIlxcXCJcIikpO1xuICAgICAgcmV0dXJuIF9jcmVhdGVSb3V0ZShyZWNvcmQsIGxvY2F0aW9uLCByZWRpcmVjdGVkRnJvbSlcbiAgICB9IGVsc2UgaWYgKGxvY2F0aW9uLnBhdGgpIHtcbiAgICAgIGxvY2F0aW9uLnBhcmFtcyA9IHt9O1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXRoTGlzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgcGF0aCA9IHBhdGhMaXN0W2ldO1xuICAgICAgICB2YXIgcmVjb3JkJDEgPSBwYXRoTWFwW3BhdGhdO1xuICAgICAgICBpZiAobWF0Y2hSb3V0ZShyZWNvcmQkMS5yZWdleCwgbG9jYXRpb24ucGF0aCwgbG9jYXRpb24ucGFyYW1zKSkge1xuICAgICAgICAgIHJldHVybiBfY3JlYXRlUm91dGUocmVjb3JkJDEsIGxvY2F0aW9uLCByZWRpcmVjdGVkRnJvbSlcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICAvLyBubyBtYXRjaFxuICAgIHJldHVybiBfY3JlYXRlUm91dGUobnVsbCwgbG9jYXRpb24pXG4gIH1cblxuICBmdW5jdGlvbiByZWRpcmVjdCAoXG4gICAgcmVjb3JkLFxuICAgIGxvY2F0aW9uXG4gICkge1xuICAgIHZhciBvcmlnaW5hbFJlZGlyZWN0ID0gcmVjb3JkLnJlZGlyZWN0O1xuICAgIHZhciByZWRpcmVjdCA9IHR5cGVvZiBvcmlnaW5hbFJlZGlyZWN0ID09PSAnZnVuY3Rpb24nXG4gICAgICA/IG9yaWdpbmFsUmVkaXJlY3QoY3JlYXRlUm91dGUocmVjb3JkLCBsb2NhdGlvbiwgbnVsbCwgcm91dGVyKSlcbiAgICAgIDogb3JpZ2luYWxSZWRpcmVjdDtcblxuICAgIGlmICh0eXBlb2YgcmVkaXJlY3QgPT09ICdzdHJpbmcnKSB7XG4gICAgICByZWRpcmVjdCA9IHsgcGF0aDogcmVkaXJlY3QgfTtcbiAgICB9XG5cbiAgICBpZiAoIXJlZGlyZWN0IHx8IHR5cGVvZiByZWRpcmVjdCAhPT0gJ29iamVjdCcpIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIHdhcm4oXG4gICAgICAgICAgZmFsc2UsIChcImludmFsaWQgcmVkaXJlY3Qgb3B0aW9uOiBcIiArIChKU09OLnN0cmluZ2lmeShyZWRpcmVjdCkpKVxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgcmV0dXJuIF9jcmVhdGVSb3V0ZShudWxsLCBsb2NhdGlvbilcbiAgICB9XG5cbiAgICB2YXIgcmUgPSByZWRpcmVjdDtcbiAgICB2YXIgbmFtZSA9IHJlLm5hbWU7XG4gICAgdmFyIHBhdGggPSByZS5wYXRoO1xuICAgIHZhciBxdWVyeSA9IGxvY2F0aW9uLnF1ZXJ5O1xuICAgIHZhciBoYXNoID0gbG9jYXRpb24uaGFzaDtcbiAgICB2YXIgcGFyYW1zID0gbG9jYXRpb24ucGFyYW1zO1xuICAgIHF1ZXJ5ID0gcmUuaGFzT3duUHJvcGVydHkoJ3F1ZXJ5JykgPyByZS5xdWVyeSA6IHF1ZXJ5O1xuICAgIGhhc2ggPSByZS5oYXNPd25Qcm9wZXJ0eSgnaGFzaCcpID8gcmUuaGFzaCA6IGhhc2g7XG4gICAgcGFyYW1zID0gcmUuaGFzT3duUHJvcGVydHkoJ3BhcmFtcycpID8gcmUucGFyYW1zIDogcGFyYW1zO1xuXG4gICAgaWYgKG5hbWUpIHtcbiAgICAgIC8vIHJlc29sdmVkIG5hbWVkIGRpcmVjdFxuICAgICAgdmFyIHRhcmdldFJlY29yZCA9IG5hbWVNYXBbbmFtZV07XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICBhc3NlcnQodGFyZ2V0UmVjb3JkLCAoXCJyZWRpcmVjdCBmYWlsZWQ6IG5hbWVkIHJvdXRlIFxcXCJcIiArIG5hbWUgKyBcIlxcXCIgbm90IGZvdW5kLlwiKSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gbWF0Y2goe1xuICAgICAgICBfbm9ybWFsaXplZDogdHJ1ZSxcbiAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgcXVlcnk6IHF1ZXJ5LFxuICAgICAgICBoYXNoOiBoYXNoLFxuICAgICAgICBwYXJhbXM6IHBhcmFtc1xuICAgICAgfSwgdW5kZWZpbmVkLCBsb2NhdGlvbilcbiAgICB9IGVsc2UgaWYgKHBhdGgpIHtcbiAgICAgIC8vIDEuIHJlc29sdmUgcmVsYXRpdmUgcmVkaXJlY3RcbiAgICAgIHZhciByYXdQYXRoID0gcmVzb2x2ZVJlY29yZFBhdGgocGF0aCwgcmVjb3JkKTtcbiAgICAgIC8vIDIuIHJlc29sdmUgcGFyYW1zXG4gICAgICB2YXIgcmVzb2x2ZWRQYXRoID0gZmlsbFBhcmFtcyhyYXdQYXRoLCBwYXJhbXMsIChcInJlZGlyZWN0IHJvdXRlIHdpdGggcGF0aCBcXFwiXCIgKyByYXdQYXRoICsgXCJcXFwiXCIpKTtcbiAgICAgIC8vIDMuIHJlbWF0Y2ggd2l0aCBleGlzdGluZyBxdWVyeSBhbmQgaGFzaFxuICAgICAgcmV0dXJuIG1hdGNoKHtcbiAgICAgICAgX25vcm1hbGl6ZWQ6IHRydWUsXG4gICAgICAgIHBhdGg6IHJlc29sdmVkUGF0aCxcbiAgICAgICAgcXVlcnk6IHF1ZXJ5LFxuICAgICAgICBoYXNoOiBoYXNoXG4gICAgICB9LCB1bmRlZmluZWQsIGxvY2F0aW9uKVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICB3YXJuKGZhbHNlLCAoXCJpbnZhbGlkIHJlZGlyZWN0IG9wdGlvbjogXCIgKyAoSlNPTi5zdHJpbmdpZnkocmVkaXJlY3QpKSkpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIF9jcmVhdGVSb3V0ZShudWxsLCBsb2NhdGlvbilcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBhbGlhcyAoXG4gICAgcmVjb3JkLFxuICAgIGxvY2F0aW9uLFxuICAgIG1hdGNoQXNcbiAgKSB7XG4gICAgdmFyIGFsaWFzZWRQYXRoID0gZmlsbFBhcmFtcyhtYXRjaEFzLCBsb2NhdGlvbi5wYXJhbXMsIChcImFsaWFzZWQgcm91dGUgd2l0aCBwYXRoIFxcXCJcIiArIG1hdGNoQXMgKyBcIlxcXCJcIikpO1xuICAgIHZhciBhbGlhc2VkTWF0Y2ggPSBtYXRjaCh7XG4gICAgICBfbm9ybWFsaXplZDogdHJ1ZSxcbiAgICAgIHBhdGg6IGFsaWFzZWRQYXRoXG4gICAgfSk7XG4gICAgaWYgKGFsaWFzZWRNYXRjaCkge1xuICAgICAgdmFyIG1hdGNoZWQgPSBhbGlhc2VkTWF0Y2gubWF0Y2hlZDtcbiAgICAgIHZhciBhbGlhc2VkUmVjb3JkID0gbWF0Y2hlZFttYXRjaGVkLmxlbmd0aCAtIDFdO1xuICAgICAgbG9jYXRpb24ucGFyYW1zID0gYWxpYXNlZE1hdGNoLnBhcmFtcztcbiAgICAgIHJldHVybiBfY3JlYXRlUm91dGUoYWxpYXNlZFJlY29yZCwgbG9jYXRpb24pXG4gICAgfVxuICAgIHJldHVybiBfY3JlYXRlUm91dGUobnVsbCwgbG9jYXRpb24pXG4gIH1cblxuICBmdW5jdGlvbiBfY3JlYXRlUm91dGUgKFxuICAgIHJlY29yZCxcbiAgICBsb2NhdGlvbixcbiAgICByZWRpcmVjdGVkRnJvbVxuICApIHtcbiAgICBpZiAocmVjb3JkICYmIHJlY29yZC5yZWRpcmVjdCkge1xuICAgICAgcmV0dXJuIHJlZGlyZWN0KHJlY29yZCwgcmVkaXJlY3RlZEZyb20gfHwgbG9jYXRpb24pXG4gICAgfVxuICAgIGlmIChyZWNvcmQgJiYgcmVjb3JkLm1hdGNoQXMpIHtcbiAgICAgIHJldHVybiBhbGlhcyhyZWNvcmQsIGxvY2F0aW9uLCByZWNvcmQubWF0Y2hBcylcbiAgICB9XG4gICAgcmV0dXJuIGNyZWF0ZVJvdXRlKHJlY29yZCwgbG9jYXRpb24sIHJlZGlyZWN0ZWRGcm9tLCByb3V0ZXIpXG4gIH1cblxuICByZXR1cm4ge1xuICAgIG1hdGNoOiBtYXRjaCxcbiAgICBhZGRSb3V0ZXM6IGFkZFJvdXRlc1xuICB9XG59XG5cbmZ1bmN0aW9uIG1hdGNoUm91dGUgKFxuICByZWdleCxcbiAgcGF0aCxcbiAgcGFyYW1zXG4pIHtcbiAgdmFyIG0gPSBwYXRoLm1hdGNoKHJlZ2V4KTtcblxuICBpZiAoIW0pIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfSBlbHNlIGlmICghcGFyYW1zKSB7XG4gICAgcmV0dXJuIHRydWVcbiAgfVxuXG4gIGZvciAodmFyIGkgPSAxLCBsZW4gPSBtLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgdmFyIGtleSA9IHJlZ2V4LmtleXNbaSAtIDFdO1xuICAgIHZhciB2YWwgPSB0eXBlb2YgbVtpXSA9PT0gJ3N0cmluZycgPyBkZWNvZGVVUklDb21wb25lbnQobVtpXSkgOiBtW2ldO1xuICAgIGlmIChrZXkpIHtcbiAgICAgIC8vIEZpeCAjMTk5NDogdXNpbmcgKiB3aXRoIHByb3BzOiB0cnVlIGdlbmVyYXRlcyBhIHBhcmFtIG5hbWVkIDBcbiAgICAgIHBhcmFtc1trZXkubmFtZSB8fCAncGF0aE1hdGNoJ10gPSB2YWw7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRydWVcbn1cblxuZnVuY3Rpb24gcmVzb2x2ZVJlY29yZFBhdGggKHBhdGgsIHJlY29yZCkge1xuICByZXR1cm4gcmVzb2x2ZVBhdGgocGF0aCwgcmVjb3JkLnBhcmVudCA/IHJlY29yZC5wYXJlbnQucGF0aCA6ICcvJywgdHJ1ZSlcbn1cblxuLyogICovXG5cbi8vIHVzZSBVc2VyIFRpbWluZyBhcGkgKGlmIHByZXNlbnQpIGZvciBtb3JlIGFjY3VyYXRlIGtleSBwcmVjaXNpb25cbnZhciBUaW1lID1cbiAgaW5Ccm93c2VyICYmIHdpbmRvdy5wZXJmb3JtYW5jZSAmJiB3aW5kb3cucGVyZm9ybWFuY2Uubm93XG4gICAgPyB3aW5kb3cucGVyZm9ybWFuY2VcbiAgICA6IERhdGU7XG5cbmZ1bmN0aW9uIGdlblN0YXRlS2V5ICgpIHtcbiAgcmV0dXJuIFRpbWUubm93KCkudG9GaXhlZCgzKVxufVxuXG52YXIgX2tleSA9IGdlblN0YXRlS2V5KCk7XG5cbmZ1bmN0aW9uIGdldFN0YXRlS2V5ICgpIHtcbiAgcmV0dXJuIF9rZXlcbn1cblxuZnVuY3Rpb24gc2V0U3RhdGVLZXkgKGtleSkge1xuICByZXR1cm4gKF9rZXkgPSBrZXkpXG59XG5cbi8qICAqL1xuXG52YXIgcG9zaXRpb25TdG9yZSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbmZ1bmN0aW9uIHNldHVwU2Nyb2xsICgpIHtcbiAgLy8gRml4IGZvciAjMTU4NSBmb3IgRmlyZWZveFxuICAvLyBGaXggZm9yICMyMTk1IEFkZCBvcHRpb25hbCB0aGlyZCBhdHRyaWJ1dGUgdG8gd29ya2Fyb3VuZCBhIGJ1ZyBpbiBzYWZhcmkgaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTE4MjY3OFxuICAvLyBGaXggZm9yICMyNzc0IFN1cHBvcnQgZm9yIGFwcHMgbG9hZGVkIGZyb20gV2luZG93cyBmaWxlIHNoYXJlcyBub3QgbWFwcGVkIHRvIG5ldHdvcmsgZHJpdmVzOiByZXBsYWNlZCBsb2NhdGlvbi5vcmlnaW4gd2l0aFxuICAvLyB3aW5kb3cubG9jYXRpb24ucHJvdG9jb2wgKyAnLy8nICsgd2luZG93LmxvY2F0aW9uLmhvc3RcbiAgLy8gbG9jYXRpb24uaG9zdCBjb250YWlucyB0aGUgcG9ydCBhbmQgbG9jYXRpb24uaG9zdG5hbWUgZG9lc24ndFxuICB2YXIgcHJvdG9jb2xBbmRQYXRoID0gd2luZG93LmxvY2F0aW9uLnByb3RvY29sICsgJy8vJyArIHdpbmRvdy5sb2NhdGlvbi5ob3N0O1xuICB2YXIgYWJzb2x1dGVQYXRoID0gd2luZG93LmxvY2F0aW9uLmhyZWYucmVwbGFjZShwcm90b2NvbEFuZFBhdGgsICcnKTtcbiAgd2luZG93Lmhpc3RvcnkucmVwbGFjZVN0YXRlKHsga2V5OiBnZXRTdGF0ZUtleSgpIH0sICcnLCBhYnNvbHV0ZVBhdGgpO1xuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncG9wc3RhdGUnLCBmdW5jdGlvbiAoZSkge1xuICAgIHNhdmVTY3JvbGxQb3NpdGlvbigpO1xuICAgIGlmIChlLnN0YXRlICYmIGUuc3RhdGUua2V5KSB7XG4gICAgICBzZXRTdGF0ZUtleShlLnN0YXRlLmtleSk7XG4gICAgfVxuICB9KTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlU2Nyb2xsIChcbiAgcm91dGVyLFxuICB0byxcbiAgZnJvbSxcbiAgaXNQb3Bcbikge1xuICBpZiAoIXJvdXRlci5hcHApIHtcbiAgICByZXR1cm5cbiAgfVxuXG4gIHZhciBiZWhhdmlvciA9IHJvdXRlci5vcHRpb25zLnNjcm9sbEJlaGF2aW9yO1xuICBpZiAoIWJlaGF2aW9yKSB7XG4gICAgcmV0dXJuXG4gIH1cblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGFzc2VydCh0eXBlb2YgYmVoYXZpb3IgPT09ICdmdW5jdGlvbicsIFwic2Nyb2xsQmVoYXZpb3IgbXVzdCBiZSBhIGZ1bmN0aW9uXCIpO1xuICB9XG5cbiAgLy8gd2FpdCB1bnRpbCByZS1yZW5kZXIgZmluaXNoZXMgYmVmb3JlIHNjcm9sbGluZ1xuICByb3V0ZXIuYXBwLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHBvc2l0aW9uID0gZ2V0U2Nyb2xsUG9zaXRpb24oKTtcbiAgICB2YXIgc2hvdWxkU2Nyb2xsID0gYmVoYXZpb3IuY2FsbChcbiAgICAgIHJvdXRlcixcbiAgICAgIHRvLFxuICAgICAgZnJvbSxcbiAgICAgIGlzUG9wID8gcG9zaXRpb24gOiBudWxsXG4gICAgKTtcblxuICAgIGlmICghc2hvdWxkU2Nyb2xsKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHNob3VsZFNjcm9sbC50aGVuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBzaG91bGRTY3JvbGxcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHNob3VsZFNjcm9sbCkge1xuICAgICAgICAgIHNjcm9sbFRvUG9zaXRpb24oKHNob3VsZFNjcm9sbCksIHBvc2l0aW9uKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgYXNzZXJ0KGZhbHNlLCBlcnIudG9TdHJpbmcoKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2Nyb2xsVG9Qb3NpdGlvbihzaG91bGRTY3JvbGwsIHBvc2l0aW9uKTtcbiAgICB9XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBzYXZlU2Nyb2xsUG9zaXRpb24gKCkge1xuICB2YXIga2V5ID0gZ2V0U3RhdGVLZXkoKTtcbiAgaWYgKGtleSkge1xuICAgIHBvc2l0aW9uU3RvcmVba2V5XSA9IHtcbiAgICAgIHg6IHdpbmRvdy5wYWdlWE9mZnNldCxcbiAgICAgIHk6IHdpbmRvdy5wYWdlWU9mZnNldFxuICAgIH07XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0U2Nyb2xsUG9zaXRpb24gKCkge1xuICB2YXIga2V5ID0gZ2V0U3RhdGVLZXkoKTtcbiAgaWYgKGtleSkge1xuICAgIHJldHVybiBwb3NpdGlvblN0b3JlW2tleV1cbiAgfVxufVxuXG5mdW5jdGlvbiBnZXRFbGVtZW50UG9zaXRpb24gKGVsLCBvZmZzZXQpIHtcbiAgdmFyIGRvY0VsID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuICB2YXIgZG9jUmVjdCA9IGRvY0VsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICB2YXIgZWxSZWN0ID0gZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIHJldHVybiB7XG4gICAgeDogZWxSZWN0LmxlZnQgLSBkb2NSZWN0LmxlZnQgLSBvZmZzZXQueCxcbiAgICB5OiBlbFJlY3QudG9wIC0gZG9jUmVjdC50b3AgLSBvZmZzZXQueVxuICB9XG59XG5cbmZ1bmN0aW9uIGlzVmFsaWRQb3NpdGlvbiAob2JqKSB7XG4gIHJldHVybiBpc051bWJlcihvYmoueCkgfHwgaXNOdW1iZXIob2JqLnkpXG59XG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZVBvc2l0aW9uIChvYmopIHtcbiAgcmV0dXJuIHtcbiAgICB4OiBpc051bWJlcihvYmoueCkgPyBvYmoueCA6IHdpbmRvdy5wYWdlWE9mZnNldCxcbiAgICB5OiBpc051bWJlcihvYmoueSkgPyBvYmoueSA6IHdpbmRvdy5wYWdlWU9mZnNldFxuICB9XG59XG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZU9mZnNldCAob2JqKSB7XG4gIHJldHVybiB7XG4gICAgeDogaXNOdW1iZXIob2JqLngpID8gb2JqLnggOiAwLFxuICAgIHk6IGlzTnVtYmVyKG9iai55KSA/IG9iai55IDogMFxuICB9XG59XG5cbmZ1bmN0aW9uIGlzTnVtYmVyICh2KSB7XG4gIHJldHVybiB0eXBlb2YgdiA9PT0gJ251bWJlcidcbn1cblxudmFyIGhhc2hTdGFydHNXaXRoTnVtYmVyUkUgPSAvXiNcXGQvO1xuXG5mdW5jdGlvbiBzY3JvbGxUb1Bvc2l0aW9uIChzaG91bGRTY3JvbGwsIHBvc2l0aW9uKSB7XG4gIHZhciBpc09iamVjdCA9IHR5cGVvZiBzaG91bGRTY3JvbGwgPT09ICdvYmplY3QnO1xuICBpZiAoaXNPYmplY3QgJiYgdHlwZW9mIHNob3VsZFNjcm9sbC5zZWxlY3RvciA9PT0gJ3N0cmluZycpIHtcbiAgICAvLyBnZXRFbGVtZW50QnlJZCB3b3VsZCBzdGlsbCBmYWlsIGlmIHRoZSBzZWxlY3RvciBjb250YWlucyBhIG1vcmUgY29tcGxpY2F0ZWQgcXVlcnkgbGlrZSAjbWFpbltkYXRhLWF0dHJdXG4gICAgLy8gYnV0IGF0IHRoZSBzYW1lIHRpbWUsIGl0IGRvZXNuJ3QgbWFrZSBtdWNoIHNlbnNlIHRvIHNlbGVjdCBhbiBlbGVtZW50IHdpdGggYW4gaWQgYW5kIGFuIGV4dHJhIHNlbGVjdG9yXG4gICAgdmFyIGVsID0gaGFzaFN0YXJ0c1dpdGhOdW1iZXJSRS50ZXN0KHNob3VsZFNjcm9sbC5zZWxlY3RvcikgLy8gJGZsb3ctZGlzYWJsZS1saW5lXG4gICAgICA/IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHNob3VsZFNjcm9sbC5zZWxlY3Rvci5zbGljZSgxKSkgLy8gJGZsb3ctZGlzYWJsZS1saW5lXG4gICAgICA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2hvdWxkU2Nyb2xsLnNlbGVjdG9yKTtcblxuICAgIGlmIChlbCkge1xuICAgICAgdmFyIG9mZnNldCA9XG4gICAgICAgIHNob3VsZFNjcm9sbC5vZmZzZXQgJiYgdHlwZW9mIHNob3VsZFNjcm9sbC5vZmZzZXQgPT09ICdvYmplY3QnXG4gICAgICAgICAgPyBzaG91bGRTY3JvbGwub2Zmc2V0XG4gICAgICAgICAgOiB7fTtcbiAgICAgIG9mZnNldCA9IG5vcm1hbGl6ZU9mZnNldChvZmZzZXQpO1xuICAgICAgcG9zaXRpb24gPSBnZXRFbGVtZW50UG9zaXRpb24oZWwsIG9mZnNldCk7XG4gICAgfSBlbHNlIGlmIChpc1ZhbGlkUG9zaXRpb24oc2hvdWxkU2Nyb2xsKSkge1xuICAgICAgcG9zaXRpb24gPSBub3JtYWxpemVQb3NpdGlvbihzaG91bGRTY3JvbGwpO1xuICAgIH1cbiAgfSBlbHNlIGlmIChpc09iamVjdCAmJiBpc1ZhbGlkUG9zaXRpb24oc2hvdWxkU2Nyb2xsKSkge1xuICAgIHBvc2l0aW9uID0gbm9ybWFsaXplUG9zaXRpb24oc2hvdWxkU2Nyb2xsKTtcbiAgfVxuXG4gIGlmIChwb3NpdGlvbikge1xuICAgIHdpbmRvdy5zY3JvbGxUbyhwb3NpdGlvbi54LCBwb3NpdGlvbi55KTtcbiAgfVxufVxuXG4vKiAgKi9cblxudmFyIHN1cHBvcnRzUHVzaFN0YXRlID1cbiAgaW5Ccm93c2VyICYmXG4gIChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHVhID0gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQ7XG5cbiAgICBpZiAoXG4gICAgICAodWEuaW5kZXhPZignQW5kcm9pZCAyLicpICE9PSAtMSB8fCB1YS5pbmRleE9mKCdBbmRyb2lkIDQuMCcpICE9PSAtMSkgJiZcbiAgICAgIHVhLmluZGV4T2YoJ01vYmlsZSBTYWZhcmknKSAhPT0gLTEgJiZcbiAgICAgIHVhLmluZGV4T2YoJ0Nocm9tZScpID09PSAtMSAmJlxuICAgICAgdWEuaW5kZXhPZignV2luZG93cyBQaG9uZScpID09PSAtMVxuICAgICkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuXG4gICAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5ICYmICdwdXNoU3RhdGUnIGluIHdpbmRvdy5oaXN0b3J5XG4gIH0pKCk7XG5cbmZ1bmN0aW9uIHB1c2hTdGF0ZSAodXJsLCByZXBsYWNlKSB7XG4gIHNhdmVTY3JvbGxQb3NpdGlvbigpO1xuICAvLyB0cnkuLi5jYXRjaCB0aGUgcHVzaFN0YXRlIGNhbGwgdG8gZ2V0IGFyb3VuZCBTYWZhcmlcbiAgLy8gRE9NIEV4Y2VwdGlvbiAxOCB3aGVyZSBpdCBsaW1pdHMgdG8gMTAwIHB1c2hTdGF0ZSBjYWxsc1xuICB2YXIgaGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB0cnkge1xuICAgIGlmIChyZXBsYWNlKSB7XG4gICAgICAvLyBwcmVzZXJ2ZSBleGlzdGluZyBoaXN0b3J5IHN0YXRlIGFzIGl0IGNvdWxkIGJlIG92ZXJyaWRlbiBieSB0aGUgdXNlclxuICAgICAgdmFyIHN0YXRlQ29weSA9IGV4dGVuZCh7fSwgaGlzdG9yeS5zdGF0ZSk7XG4gICAgICBzdGF0ZUNvcHkua2V5ID0gZ2V0U3RhdGVLZXkoKTtcbiAgICAgIGhpc3RvcnkucmVwbGFjZVN0YXRlKHN0YXRlQ29weSwgJycsIHVybCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGhpc3RvcnkucHVzaFN0YXRlKHsga2V5OiBzZXRTdGF0ZUtleShnZW5TdGF0ZUtleSgpKSB9LCAnJywgdXJsKTtcbiAgICB9XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICB3aW5kb3cubG9jYXRpb25bcmVwbGFjZSA/ICdyZXBsYWNlJyA6ICdhc3NpZ24nXSh1cmwpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHJlcGxhY2VTdGF0ZSAodXJsKSB7XG4gIHB1c2hTdGF0ZSh1cmwsIHRydWUpO1xufVxuXG4vKiAgKi9cblxuZnVuY3Rpb24gcnVuUXVldWUgKHF1ZXVlLCBmbiwgY2IpIHtcbiAgdmFyIHN0ZXAgPSBmdW5jdGlvbiAoaW5kZXgpIHtcbiAgICBpZiAoaW5kZXggPj0gcXVldWUubGVuZ3RoKSB7XG4gICAgICBjYigpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAocXVldWVbaW5kZXhdKSB7XG4gICAgICAgIGZuKHF1ZXVlW2luZGV4XSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHN0ZXAoaW5kZXggKyAxKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzdGVwKGluZGV4ICsgMSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuICBzdGVwKDApO1xufVxuXG4vKiAgKi9cblxuZnVuY3Rpb24gcmVzb2x2ZUFzeW5jQ29tcG9uZW50cyAobWF0Y2hlZCkge1xuICByZXR1cm4gZnVuY3Rpb24gKHRvLCBmcm9tLCBuZXh0KSB7XG4gICAgdmFyIGhhc0FzeW5jID0gZmFsc2U7XG4gICAgdmFyIHBlbmRpbmcgPSAwO1xuICAgIHZhciBlcnJvciA9IG51bGw7XG5cbiAgICBmbGF0TWFwQ29tcG9uZW50cyhtYXRjaGVkLCBmdW5jdGlvbiAoZGVmLCBfLCBtYXRjaCwga2V5KSB7XG4gICAgICAvLyBpZiBpdCdzIGEgZnVuY3Rpb24gYW5kIGRvZXNuJ3QgaGF2ZSBjaWQgYXR0YWNoZWQsXG4gICAgICAvLyBhc3N1bWUgaXQncyBhbiBhc3luYyBjb21wb25lbnQgcmVzb2x2ZSBmdW5jdGlvbi5cbiAgICAgIC8vIHdlIGFyZSBub3QgdXNpbmcgVnVlJ3MgZGVmYXVsdCBhc3luYyByZXNvbHZpbmcgbWVjaGFuaXNtIGJlY2F1c2VcbiAgICAgIC8vIHdlIHdhbnQgdG8gaGFsdCB0aGUgbmF2aWdhdGlvbiB1bnRpbCB0aGUgaW5jb21pbmcgY29tcG9uZW50IGhhcyBiZWVuXG4gICAgICAvLyByZXNvbHZlZC5cbiAgICAgIGlmICh0eXBlb2YgZGVmID09PSAnZnVuY3Rpb24nICYmIGRlZi5jaWQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBoYXNBc3luYyA9IHRydWU7XG4gICAgICAgIHBlbmRpbmcrKztcblxuICAgICAgICB2YXIgcmVzb2x2ZSA9IG9uY2UoZnVuY3Rpb24gKHJlc29sdmVkRGVmKSB7XG4gICAgICAgICAgaWYgKGlzRVNNb2R1bGUocmVzb2x2ZWREZWYpKSB7XG4gICAgICAgICAgICByZXNvbHZlZERlZiA9IHJlc29sdmVkRGVmLmRlZmF1bHQ7XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIHNhdmUgcmVzb2x2ZWQgb24gYXN5bmMgZmFjdG9yeSBpbiBjYXNlIGl0J3MgdXNlZCBlbHNld2hlcmVcbiAgICAgICAgICBkZWYucmVzb2x2ZWQgPSB0eXBlb2YgcmVzb2x2ZWREZWYgPT09ICdmdW5jdGlvbidcbiAgICAgICAgICAgID8gcmVzb2x2ZWREZWZcbiAgICAgICAgICAgIDogX1Z1ZS5leHRlbmQocmVzb2x2ZWREZWYpO1xuICAgICAgICAgIG1hdGNoLmNvbXBvbmVudHNba2V5XSA9IHJlc29sdmVkRGVmO1xuICAgICAgICAgIHBlbmRpbmctLTtcbiAgICAgICAgICBpZiAocGVuZGluZyA8PSAwKSB7XG4gICAgICAgICAgICBuZXh0KCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICB2YXIgcmVqZWN0ID0gb25jZShmdW5jdGlvbiAocmVhc29uKSB7XG4gICAgICAgICAgdmFyIG1zZyA9IFwiRmFpbGVkIHRvIHJlc29sdmUgYXN5bmMgY29tcG9uZW50IFwiICsga2V5ICsgXCI6IFwiICsgcmVhc29uO1xuICAgICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgd2FybihmYWxzZSwgbXNnKTtcbiAgICAgICAgICBpZiAoIWVycm9yKSB7XG4gICAgICAgICAgICBlcnJvciA9IGlzRXJyb3IocmVhc29uKVxuICAgICAgICAgICAgICA/IHJlYXNvblxuICAgICAgICAgICAgICA6IG5ldyBFcnJvcihtc2cpO1xuICAgICAgICAgICAgbmV4dChlcnJvcik7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICB2YXIgcmVzO1xuICAgICAgICB0cnkge1xuICAgICAgICAgIHJlcyA9IGRlZihyZXNvbHZlLCByZWplY3QpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgcmVqZWN0KGUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChyZXMpIHtcbiAgICAgICAgICBpZiAodHlwZW9mIHJlcy50aGVuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICByZXMudGhlbihyZXNvbHZlLCByZWplY3QpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBuZXcgc3ludGF4IGluIFZ1ZSAyLjNcbiAgICAgICAgICAgIHZhciBjb21wID0gcmVzLmNvbXBvbmVudDtcbiAgICAgICAgICAgIGlmIChjb21wICYmIHR5cGVvZiBjb21wLnRoZW4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgY29tcC50aGVuKHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBpZiAoIWhhc0FzeW5jKSB7IG5leHQoKTsgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGZsYXRNYXBDb21wb25lbnRzIChcbiAgbWF0Y2hlZCxcbiAgZm5cbikge1xuICByZXR1cm4gZmxhdHRlbihtYXRjaGVkLm1hcChmdW5jdGlvbiAobSkge1xuICAgIHJldHVybiBPYmplY3Qua2V5cyhtLmNvbXBvbmVudHMpLm1hcChmdW5jdGlvbiAoa2V5KSB7IHJldHVybiBmbihcbiAgICAgIG0uY29tcG9uZW50c1trZXldLFxuICAgICAgbS5pbnN0YW5jZXNba2V5XSxcbiAgICAgIG0sIGtleVxuICAgICk7IH0pXG4gIH0pKVxufVxuXG5mdW5jdGlvbiBmbGF0dGVuIChhcnIpIHtcbiAgcmV0dXJuIEFycmF5LnByb3RvdHlwZS5jb25jYXQuYXBwbHkoW10sIGFycilcbn1cblxudmFyIGhhc1N5bWJvbCA9XG4gIHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiZcbiAgdHlwZW9mIFN5bWJvbC50b1N0cmluZ1RhZyA9PT0gJ3N5bWJvbCc7XG5cbmZ1bmN0aW9uIGlzRVNNb2R1bGUgKG9iaikge1xuICByZXR1cm4gb2JqLl9fZXNNb2R1bGUgfHwgKGhhc1N5bWJvbCAmJiBvYmpbU3ltYm9sLnRvU3RyaW5nVGFnXSA9PT0gJ01vZHVsZScpXG59XG5cbi8vIGluIFdlYnBhY2sgMiwgcmVxdWlyZS5lbnN1cmUgbm93IGFsc28gcmV0dXJucyBhIFByb21pc2Vcbi8vIHNvIHRoZSByZXNvbHZlL3JlamVjdCBmdW5jdGlvbnMgbWF5IGdldCBjYWxsZWQgYW4gZXh0cmEgdGltZVxuLy8gaWYgdGhlIHVzZXIgdXNlcyBhbiBhcnJvdyBmdW5jdGlvbiBzaG9ydGhhbmQgdGhhdCBoYXBwZW5zIHRvXG4vLyByZXR1cm4gdGhhdCBQcm9taXNlLlxuZnVuY3Rpb24gb25jZSAoZm4pIHtcbiAgdmFyIGNhbGxlZCA9IGZhbHNlO1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBhcmdzID0gW10sIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgd2hpbGUgKCBsZW4tLSApIGFyZ3NbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gXTtcblxuICAgIGlmIChjYWxsZWQpIHsgcmV0dXJuIH1cbiAgICBjYWxsZWQgPSB0cnVlO1xuICAgIHJldHVybiBmbi5hcHBseSh0aGlzLCBhcmdzKVxuICB9XG59XG5cbnZhciBOYXZpZ2F0aW9uRHVwbGljYXRlZCA9IC8qQF9fUFVSRV9fKi8oZnVuY3Rpb24gKEVycm9yKSB7XG4gIGZ1bmN0aW9uIE5hdmlnYXRpb25EdXBsaWNhdGVkIChub3JtYWxpemVkTG9jYXRpb24pIHtcbiAgICBFcnJvci5jYWxsKHRoaXMpO1xuICAgIHRoaXMubmFtZSA9IHRoaXMuX25hbWUgPSAnTmF2aWdhdGlvbkR1cGxpY2F0ZWQnO1xuICAgIC8vIHBhc3NpbmcgdGhlIG1lc3NhZ2UgdG8gc3VwZXIoKSBkb2Vzbid0IHNlZW0gdG8gd29yayBpbiB0aGUgdHJhbnNwaWxlZCB2ZXJzaW9uXG4gICAgdGhpcy5tZXNzYWdlID0gXCJOYXZpZ2F0aW5nIHRvIGN1cnJlbnQgbG9jYXRpb24gKFxcXCJcIiArIChub3JtYWxpemVkTG9jYXRpb24uZnVsbFBhdGgpICsgXCJcXFwiKSBpcyBub3QgYWxsb3dlZFwiO1xuICAgIC8vIGFkZCBhIHN0YWNrIHByb3BlcnR5IHNvIHNlcnZpY2VzIGxpa2UgU2VudHJ5IGNhbiBjb3JyZWN0bHkgZGlzcGxheSBpdFxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCAnc3RhY2snLCB7XG4gICAgICB2YWx1ZTogbmV3IEVycm9yKCkuc3RhY2ssXG4gICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIC8vIHdlIGNvdWxkIGFsc28gaGF2ZSB1c2VkXG4gICAgLy8gRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgdGhpcy5jb25zdHJ1Y3RvcilcbiAgICAvLyBidXQgaXQgb25seSBleGlzdHMgb24gbm9kZSBhbmQgY2hyb21lXG4gIH1cblxuICBpZiAoIEVycm9yICkgTmF2aWdhdGlvbkR1cGxpY2F0ZWQuX19wcm90b19fID0gRXJyb3I7XG4gIE5hdmlnYXRpb25EdXBsaWNhdGVkLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoIEVycm9yICYmIEVycm9yLnByb3RvdHlwZSApO1xuICBOYXZpZ2F0aW9uRHVwbGljYXRlZC5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBOYXZpZ2F0aW9uRHVwbGljYXRlZDtcblxuICByZXR1cm4gTmF2aWdhdGlvbkR1cGxpY2F0ZWQ7XG59KEVycm9yKSk7XG5cbi8vIHN1cHBvcnQgSUU5XG5OYXZpZ2F0aW9uRHVwbGljYXRlZC5fbmFtZSA9ICdOYXZpZ2F0aW9uRHVwbGljYXRlZCc7XG5cbi8qICAqL1xuXG52YXIgSGlzdG9yeSA9IGZ1bmN0aW9uIEhpc3RvcnkgKHJvdXRlciwgYmFzZSkge1xuICB0aGlzLnJvdXRlciA9IHJvdXRlcjtcbiAgdGhpcy5iYXNlID0gbm9ybWFsaXplQmFzZShiYXNlKTtcbiAgLy8gc3RhcnQgd2l0aCBhIHJvdXRlIG9iamVjdCB0aGF0IHN0YW5kcyBmb3IgXCJub3doZXJlXCJcbiAgdGhpcy5jdXJyZW50ID0gU1RBUlQ7XG4gIHRoaXMucGVuZGluZyA9IG51bGw7XG4gIHRoaXMucmVhZHkgPSBmYWxzZTtcbiAgdGhpcy5yZWFkeUNicyA9IFtdO1xuICB0aGlzLnJlYWR5RXJyb3JDYnMgPSBbXTtcbiAgdGhpcy5lcnJvckNicyA9IFtdO1xufTtcblxuSGlzdG9yeS5wcm90b3R5cGUubGlzdGVuID0gZnVuY3Rpb24gbGlzdGVuIChjYikge1xuICB0aGlzLmNiID0gY2I7XG59O1xuXG5IaXN0b3J5LnByb3RvdHlwZS5vblJlYWR5ID0gZnVuY3Rpb24gb25SZWFkeSAoY2IsIGVycm9yQ2IpIHtcbiAgaWYgKHRoaXMucmVhZHkpIHtcbiAgICBjYigpO1xuICB9IGVsc2Uge1xuICAgIHRoaXMucmVhZHlDYnMucHVzaChjYik7XG4gICAgaWYgKGVycm9yQ2IpIHtcbiAgICAgIHRoaXMucmVhZHlFcnJvckNicy5wdXNoKGVycm9yQ2IpO1xuICAgIH1cbiAgfVxufTtcblxuSGlzdG9yeS5wcm90b3R5cGUub25FcnJvciA9IGZ1bmN0aW9uIG9uRXJyb3IgKGVycm9yQ2IpIHtcbiAgdGhpcy5lcnJvckNicy5wdXNoKGVycm9yQ2IpO1xufTtcblxuSGlzdG9yeS5wcm90b3R5cGUudHJhbnNpdGlvblRvID0gZnVuY3Rpb24gdHJhbnNpdGlvblRvIChcbiAgbG9jYXRpb24sXG4gIG9uQ29tcGxldGUsXG4gIG9uQWJvcnRcbikge1xuICAgIHZhciB0aGlzJDEgPSB0aGlzO1xuXG4gIHZhciByb3V0ZSA9IHRoaXMucm91dGVyLm1hdGNoKGxvY2F0aW9uLCB0aGlzLmN1cnJlbnQpO1xuICB0aGlzLmNvbmZpcm1UcmFuc2l0aW9uKFxuICAgIHJvdXRlLFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIHRoaXMkMS51cGRhdGVSb3V0ZShyb3V0ZSk7XG4gICAgICBvbkNvbXBsZXRlICYmIG9uQ29tcGxldGUocm91dGUpO1xuICAgICAgdGhpcyQxLmVuc3VyZVVSTCgpO1xuXG4gICAgICAvLyBmaXJlIHJlYWR5IGNicyBvbmNlXG4gICAgICBpZiAoIXRoaXMkMS5yZWFkeSkge1xuICAgICAgICB0aGlzJDEucmVhZHkgPSB0cnVlO1xuICAgICAgICB0aGlzJDEucmVhZHlDYnMuZm9yRWFjaChmdW5jdGlvbiAoY2IpIHtcbiAgICAgICAgICBjYihyb3V0ZSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG4gICAgZnVuY3Rpb24gKGVycikge1xuICAgICAgaWYgKG9uQWJvcnQpIHtcbiAgICAgICAgb25BYm9ydChlcnIpO1xuICAgICAgfVxuICAgICAgaWYgKGVyciAmJiAhdGhpcyQxLnJlYWR5KSB7XG4gICAgICAgIHRoaXMkMS5yZWFkeSA9IHRydWU7XG4gICAgICAgIHRoaXMkMS5yZWFkeUVycm9yQ2JzLmZvckVhY2goZnVuY3Rpb24gKGNiKSB7XG4gICAgICAgICAgY2IoZXJyKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICApO1xufTtcblxuSGlzdG9yeS5wcm90b3R5cGUuY29uZmlybVRyYW5zaXRpb24gPSBmdW5jdGlvbiBjb25maXJtVHJhbnNpdGlvbiAocm91dGUsIG9uQ29tcGxldGUsIG9uQWJvcnQpIHtcbiAgICB2YXIgdGhpcyQxID0gdGhpcztcblxuICB2YXIgY3VycmVudCA9IHRoaXMuY3VycmVudDtcbiAgdmFyIGFib3J0ID0gZnVuY3Rpb24gKGVycikge1xuICAgIC8vIGFmdGVyIG1lcmdpbmcgaHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL3Z1ZS1yb3V0ZXIvcHVsbC8yNzcxIHdlXG4gICAgLy8gV2hlbiB0aGUgdXNlciBuYXZpZ2F0ZXMgdGhyb3VnaCBoaXN0b3J5IHRocm91Z2ggYmFjay9mb3J3YXJkIGJ1dHRvbnNcbiAgICAvLyB3ZSBkbyBub3Qgd2FudCB0byB0aHJvdyB0aGUgZXJyb3IuIFdlIG9ubHkgdGhyb3cgaXQgaWYgZGlyZWN0bHkgY2FsbGluZ1xuICAgIC8vIHB1c2gvcmVwbGFjZS4gVGhhdCdzIHdoeSBpdCdzIG5vdCBpbmNsdWRlZCBpbiBpc0Vycm9yXG4gICAgaWYgKCFpc0V4dGVuZGVkRXJyb3IoTmF2aWdhdGlvbkR1cGxpY2F0ZWQsIGVycikgJiYgaXNFcnJvcihlcnIpKSB7XG4gICAgICBpZiAodGhpcyQxLmVycm9yQ2JzLmxlbmd0aCkge1xuICAgICAgICB0aGlzJDEuZXJyb3JDYnMuZm9yRWFjaChmdW5jdGlvbiAoY2IpIHtcbiAgICAgICAgICBjYihlcnIpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdhcm4oZmFsc2UsICd1bmNhdWdodCBlcnJvciBkdXJpbmcgcm91dGUgbmF2aWdhdGlvbjonKTtcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgICAgfVxuICAgIH1cbiAgICBvbkFib3J0ICYmIG9uQWJvcnQoZXJyKTtcbiAgfTtcbiAgaWYgKFxuICAgIGlzU2FtZVJvdXRlKHJvdXRlLCBjdXJyZW50KSAmJlxuICAgIC8vIGluIHRoZSBjYXNlIHRoZSByb3V0ZSBtYXAgaGFzIGJlZW4gZHluYW1pY2FsbHkgYXBwZW5kZWQgdG9cbiAgICByb3V0ZS5tYXRjaGVkLmxlbmd0aCA9PT0gY3VycmVudC5tYXRjaGVkLmxlbmd0aFxuICApIHtcbiAgICB0aGlzLmVuc3VyZVVSTCgpO1xuICAgIHJldHVybiBhYm9ydChuZXcgTmF2aWdhdGlvbkR1cGxpY2F0ZWQocm91dGUpKVxuICB9XG5cbiAgdmFyIHJlZiA9IHJlc29sdmVRdWV1ZShcbiAgICB0aGlzLmN1cnJlbnQubWF0Y2hlZCxcbiAgICByb3V0ZS5tYXRjaGVkXG4gICk7XG4gICAgdmFyIHVwZGF0ZWQgPSByZWYudXBkYXRlZDtcbiAgICB2YXIgZGVhY3RpdmF0ZWQgPSByZWYuZGVhY3RpdmF0ZWQ7XG4gICAgdmFyIGFjdGl2YXRlZCA9IHJlZi5hY3RpdmF0ZWQ7XG5cbiAgdmFyIHF1ZXVlID0gW10uY29uY2F0KFxuICAgIC8vIGluLWNvbXBvbmVudCBsZWF2ZSBndWFyZHNcbiAgICBleHRyYWN0TGVhdmVHdWFyZHMoZGVhY3RpdmF0ZWQpLFxuICAgIC8vIGdsb2JhbCBiZWZvcmUgaG9va3NcbiAgICB0aGlzLnJvdXRlci5iZWZvcmVIb29rcyxcbiAgICAvLyBpbi1jb21wb25lbnQgdXBkYXRlIGhvb2tzXG4gICAgZXh0cmFjdFVwZGF0ZUhvb2tzKHVwZGF0ZWQpLFxuICAgIC8vIGluLWNvbmZpZyBlbnRlciBndWFyZHNcbiAgICBhY3RpdmF0ZWQubWFwKGZ1bmN0aW9uIChtKSB7IHJldHVybiBtLmJlZm9yZUVudGVyOyB9KSxcbiAgICAvLyBhc3luYyBjb21wb25lbnRzXG4gICAgcmVzb2x2ZUFzeW5jQ29tcG9uZW50cyhhY3RpdmF0ZWQpXG4gICk7XG5cbiAgdGhpcy5wZW5kaW5nID0gcm91dGU7XG4gIHZhciBpdGVyYXRvciA9IGZ1bmN0aW9uIChob29rLCBuZXh0KSB7XG4gICAgaWYgKHRoaXMkMS5wZW5kaW5nICE9PSByb3V0ZSkge1xuICAgICAgcmV0dXJuIGFib3J0KClcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgIGhvb2socm91dGUsIGN1cnJlbnQsIGZ1bmN0aW9uICh0bykge1xuICAgICAgICBpZiAodG8gPT09IGZhbHNlIHx8IGlzRXJyb3IodG8pKSB7XG4gICAgICAgICAgLy8gbmV4dChmYWxzZSkgLT4gYWJvcnQgbmF2aWdhdGlvbiwgZW5zdXJlIGN1cnJlbnQgVVJMXG4gICAgICAgICAgdGhpcyQxLmVuc3VyZVVSTCh0cnVlKTtcbiAgICAgICAgICBhYm9ydCh0byk7XG4gICAgICAgIH0gZWxzZSBpZiAoXG4gICAgICAgICAgdHlwZW9mIHRvID09PSAnc3RyaW5nJyB8fFxuICAgICAgICAgICh0eXBlb2YgdG8gPT09ICdvYmplY3QnICYmXG4gICAgICAgICAgICAodHlwZW9mIHRvLnBhdGggPT09ICdzdHJpbmcnIHx8IHR5cGVvZiB0by5uYW1lID09PSAnc3RyaW5nJykpXG4gICAgICAgICkge1xuICAgICAgICAgIC8vIG5leHQoJy8nKSBvciBuZXh0KHsgcGF0aDogJy8nIH0pIC0+IHJlZGlyZWN0XG4gICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICBpZiAodHlwZW9mIHRvID09PSAnb2JqZWN0JyAmJiB0by5yZXBsYWNlKSB7XG4gICAgICAgICAgICB0aGlzJDEucmVwbGFjZSh0byk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMkMS5wdXNoKHRvKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gY29uZmlybSB0cmFuc2l0aW9uIGFuZCBwYXNzIG9uIHRoZSB2YWx1ZVxuICAgICAgICAgIG5leHQodG8pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBhYm9ydChlKTtcbiAgICB9XG4gIH07XG5cbiAgcnVuUXVldWUocXVldWUsIGl0ZXJhdG9yLCBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHBvc3RFbnRlckNicyA9IFtdO1xuICAgIHZhciBpc1ZhbGlkID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpcyQxLmN1cnJlbnQgPT09IHJvdXRlOyB9O1xuICAgIC8vIHdhaXQgdW50aWwgYXN5bmMgY29tcG9uZW50cyBhcmUgcmVzb2x2ZWQgYmVmb3JlXG4gICAgLy8gZXh0cmFjdGluZyBpbi1jb21wb25lbnQgZW50ZXIgZ3VhcmRzXG4gICAgdmFyIGVudGVyR3VhcmRzID0gZXh0cmFjdEVudGVyR3VhcmRzKGFjdGl2YXRlZCwgcG9zdEVudGVyQ2JzLCBpc1ZhbGlkKTtcbiAgICB2YXIgcXVldWUgPSBlbnRlckd1YXJkcy5jb25jYXQodGhpcyQxLnJvdXRlci5yZXNvbHZlSG9va3MpO1xuICAgIHJ1blF1ZXVlKHF1ZXVlLCBpdGVyYXRvciwgZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHRoaXMkMS5wZW5kaW5nICE9PSByb3V0ZSkge1xuICAgICAgICByZXR1cm4gYWJvcnQoKVxuICAgICAgfVxuICAgICAgdGhpcyQxLnBlbmRpbmcgPSBudWxsO1xuICAgICAgb25Db21wbGV0ZShyb3V0ZSk7XG4gICAgICBpZiAodGhpcyQxLnJvdXRlci5hcHApIHtcbiAgICAgICAgdGhpcyQxLnJvdXRlci5hcHAuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBwb3N0RW50ZXJDYnMuZm9yRWFjaChmdW5jdGlvbiAoY2IpIHtcbiAgICAgICAgICAgIGNiKCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcbn07XG5cbkhpc3RvcnkucHJvdG90eXBlLnVwZGF0ZVJvdXRlID0gZnVuY3Rpb24gdXBkYXRlUm91dGUgKHJvdXRlKSB7XG4gIHZhciBwcmV2ID0gdGhpcy5jdXJyZW50O1xuICB0aGlzLmN1cnJlbnQgPSByb3V0ZTtcbiAgdGhpcy5jYiAmJiB0aGlzLmNiKHJvdXRlKTtcbiAgdGhpcy5yb3V0ZXIuYWZ0ZXJIb29rcy5mb3JFYWNoKGZ1bmN0aW9uIChob29rKSB7XG4gICAgaG9vayAmJiBob29rKHJvdXRlLCBwcmV2KTtcbiAgfSk7XG59O1xuXG5mdW5jdGlvbiBub3JtYWxpemVCYXNlIChiYXNlKSB7XG4gIGlmICghYmFzZSkge1xuICAgIGlmIChpbkJyb3dzZXIpIHtcbiAgICAgIC8vIHJlc3BlY3QgPGJhc2U+IHRhZ1xuICAgICAgdmFyIGJhc2VFbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Jhc2UnKTtcbiAgICAgIGJhc2UgPSAoYmFzZUVsICYmIGJhc2VFbC5nZXRBdHRyaWJ1dGUoJ2hyZWYnKSkgfHwgJy8nO1xuICAgICAgLy8gc3RyaXAgZnVsbCBVUkwgb3JpZ2luXG4gICAgICBiYXNlID0gYmFzZS5yZXBsYWNlKC9eaHR0cHM/OlxcL1xcL1teXFwvXSsvLCAnJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGJhc2UgPSAnLyc7XG4gICAgfVxuICB9XG4gIC8vIG1ha2Ugc3VyZSB0aGVyZSdzIHRoZSBzdGFydGluZyBzbGFzaFxuICBpZiAoYmFzZS5jaGFyQXQoMCkgIT09ICcvJykge1xuICAgIGJhc2UgPSAnLycgKyBiYXNlO1xuICB9XG4gIC8vIHJlbW92ZSB0cmFpbGluZyBzbGFzaFxuICByZXR1cm4gYmFzZS5yZXBsYWNlKC9cXC8kLywgJycpXG59XG5cbmZ1bmN0aW9uIHJlc29sdmVRdWV1ZSAoXG4gIGN1cnJlbnQsXG4gIG5leHRcbikge1xuICB2YXIgaTtcbiAgdmFyIG1heCA9IE1hdGgubWF4KGN1cnJlbnQubGVuZ3RoLCBuZXh0Lmxlbmd0aCk7XG4gIGZvciAoaSA9IDA7IGkgPCBtYXg7IGkrKykge1xuICAgIGlmIChjdXJyZW50W2ldICE9PSBuZXh0W2ldKSB7XG4gICAgICBicmVha1xuICAgIH1cbiAgfVxuICByZXR1cm4ge1xuICAgIHVwZGF0ZWQ6IG5leHQuc2xpY2UoMCwgaSksXG4gICAgYWN0aXZhdGVkOiBuZXh0LnNsaWNlKGkpLFxuICAgIGRlYWN0aXZhdGVkOiBjdXJyZW50LnNsaWNlKGkpXG4gIH1cbn1cblxuZnVuY3Rpb24gZXh0cmFjdEd1YXJkcyAoXG4gIHJlY29yZHMsXG4gIG5hbWUsXG4gIGJpbmQsXG4gIHJldmVyc2Vcbikge1xuICB2YXIgZ3VhcmRzID0gZmxhdE1hcENvbXBvbmVudHMocmVjb3JkcywgZnVuY3Rpb24gKGRlZiwgaW5zdGFuY2UsIG1hdGNoLCBrZXkpIHtcbiAgICB2YXIgZ3VhcmQgPSBleHRyYWN0R3VhcmQoZGVmLCBuYW1lKTtcbiAgICBpZiAoZ3VhcmQpIHtcbiAgICAgIHJldHVybiBBcnJheS5pc0FycmF5KGd1YXJkKVxuICAgICAgICA/IGd1YXJkLm1hcChmdW5jdGlvbiAoZ3VhcmQpIHsgcmV0dXJuIGJpbmQoZ3VhcmQsIGluc3RhbmNlLCBtYXRjaCwga2V5KTsgfSlcbiAgICAgICAgOiBiaW5kKGd1YXJkLCBpbnN0YW5jZSwgbWF0Y2gsIGtleSlcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gZmxhdHRlbihyZXZlcnNlID8gZ3VhcmRzLnJldmVyc2UoKSA6IGd1YXJkcylcbn1cblxuZnVuY3Rpb24gZXh0cmFjdEd1YXJkIChcbiAgZGVmLFxuICBrZXlcbikge1xuICBpZiAodHlwZW9mIGRlZiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIC8vIGV4dGVuZCBub3cgc28gdGhhdCBnbG9iYWwgbWl4aW5zIGFyZSBhcHBsaWVkLlxuICAgIGRlZiA9IF9WdWUuZXh0ZW5kKGRlZik7XG4gIH1cbiAgcmV0dXJuIGRlZi5vcHRpb25zW2tleV1cbn1cblxuZnVuY3Rpb24gZXh0cmFjdExlYXZlR3VhcmRzIChkZWFjdGl2YXRlZCkge1xuICByZXR1cm4gZXh0cmFjdEd1YXJkcyhkZWFjdGl2YXRlZCwgJ2JlZm9yZVJvdXRlTGVhdmUnLCBiaW5kR3VhcmQsIHRydWUpXG59XG5cbmZ1bmN0aW9uIGV4dHJhY3RVcGRhdGVIb29rcyAodXBkYXRlZCkge1xuICByZXR1cm4gZXh0cmFjdEd1YXJkcyh1cGRhdGVkLCAnYmVmb3JlUm91dGVVcGRhdGUnLCBiaW5kR3VhcmQpXG59XG5cbmZ1bmN0aW9uIGJpbmRHdWFyZCAoZ3VhcmQsIGluc3RhbmNlKSB7XG4gIGlmIChpbnN0YW5jZSkge1xuICAgIHJldHVybiBmdW5jdGlvbiBib3VuZFJvdXRlR3VhcmQgKCkge1xuICAgICAgcmV0dXJuIGd1YXJkLmFwcGx5KGluc3RhbmNlLCBhcmd1bWVudHMpXG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGV4dHJhY3RFbnRlckd1YXJkcyAoXG4gIGFjdGl2YXRlZCxcbiAgY2JzLFxuICBpc1ZhbGlkXG4pIHtcbiAgcmV0dXJuIGV4dHJhY3RHdWFyZHMoXG4gICAgYWN0aXZhdGVkLFxuICAgICdiZWZvcmVSb3V0ZUVudGVyJyxcbiAgICBmdW5jdGlvbiAoZ3VhcmQsIF8sIG1hdGNoLCBrZXkpIHtcbiAgICAgIHJldHVybiBiaW5kRW50ZXJHdWFyZChndWFyZCwgbWF0Y2gsIGtleSwgY2JzLCBpc1ZhbGlkKVxuICAgIH1cbiAgKVxufVxuXG5mdW5jdGlvbiBiaW5kRW50ZXJHdWFyZCAoXG4gIGd1YXJkLFxuICBtYXRjaCxcbiAga2V5LFxuICBjYnMsXG4gIGlzVmFsaWRcbikge1xuICByZXR1cm4gZnVuY3Rpb24gcm91dGVFbnRlckd1YXJkICh0bywgZnJvbSwgbmV4dCkge1xuICAgIHJldHVybiBndWFyZCh0bywgZnJvbSwgZnVuY3Rpb24gKGNiKSB7XG4gICAgICBpZiAodHlwZW9mIGNiID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGNicy5wdXNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAvLyAjNzUwXG4gICAgICAgICAgLy8gaWYgYSByb3V0ZXItdmlldyBpcyB3cmFwcGVkIHdpdGggYW4gb3V0LWluIHRyYW5zaXRpb24sXG4gICAgICAgICAgLy8gdGhlIGluc3RhbmNlIG1heSBub3QgaGF2ZSBiZWVuIHJlZ2lzdGVyZWQgYXQgdGhpcyB0aW1lLlxuICAgICAgICAgIC8vIHdlIHdpbGwgbmVlZCB0byBwb2xsIGZvciByZWdpc3RyYXRpb24gdW50aWwgY3VycmVudCByb3V0ZVxuICAgICAgICAgIC8vIGlzIG5vIGxvbmdlciB2YWxpZC5cbiAgICAgICAgICBwb2xsKGNiLCBtYXRjaC5pbnN0YW5jZXMsIGtleSwgaXNWYWxpZCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgbmV4dChjYik7XG4gICAgfSlcbiAgfVxufVxuXG5mdW5jdGlvbiBwb2xsIChcbiAgY2IsIC8vIHNvbWVob3cgZmxvdyBjYW5ub3QgaW5mZXIgdGhpcyBpcyBhIGZ1bmN0aW9uXG4gIGluc3RhbmNlcyxcbiAga2V5LFxuICBpc1ZhbGlkXG4pIHtcbiAgaWYgKFxuICAgIGluc3RhbmNlc1trZXldICYmXG4gICAgIWluc3RhbmNlc1trZXldLl9pc0JlaW5nRGVzdHJveWVkIC8vIGRvIG5vdCByZXVzZSBiZWluZyBkZXN0cm95ZWQgaW5zdGFuY2VcbiAgKSB7XG4gICAgY2IoaW5zdGFuY2VzW2tleV0pO1xuICB9IGVsc2UgaWYgKGlzVmFsaWQoKSkge1xuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgcG9sbChjYiwgaW5zdGFuY2VzLCBrZXksIGlzVmFsaWQpO1xuICAgIH0sIDE2KTtcbiAgfVxufVxuXG4vKiAgKi9cblxudmFyIEhUTUw1SGlzdG9yeSA9IC8qQF9fUFVSRV9fKi8oZnVuY3Rpb24gKEhpc3RvcnkpIHtcbiAgZnVuY3Rpb24gSFRNTDVIaXN0b3J5IChyb3V0ZXIsIGJhc2UpIHtcbiAgICB2YXIgdGhpcyQxID0gdGhpcztcblxuICAgIEhpc3RvcnkuY2FsbCh0aGlzLCByb3V0ZXIsIGJhc2UpO1xuXG4gICAgdmFyIGV4cGVjdFNjcm9sbCA9IHJvdXRlci5vcHRpb25zLnNjcm9sbEJlaGF2aW9yO1xuICAgIHZhciBzdXBwb3J0c1Njcm9sbCA9IHN1cHBvcnRzUHVzaFN0YXRlICYmIGV4cGVjdFNjcm9sbDtcblxuICAgIGlmIChzdXBwb3J0c1Njcm9sbCkge1xuICAgICAgc2V0dXBTY3JvbGwoKTtcbiAgICB9XG5cbiAgICB2YXIgaW5pdExvY2F0aW9uID0gZ2V0TG9jYXRpb24odGhpcy5iYXNlKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncG9wc3RhdGUnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgdmFyIGN1cnJlbnQgPSB0aGlzJDEuY3VycmVudDtcblxuICAgICAgLy8gQXZvaWRpbmcgZmlyc3QgYHBvcHN0YXRlYCBldmVudCBkaXNwYXRjaGVkIGluIHNvbWUgYnJvd3NlcnMgYnV0IGZpcnN0XG4gICAgICAvLyBoaXN0b3J5IHJvdXRlIG5vdCB1cGRhdGVkIHNpbmNlIGFzeW5jIGd1YXJkIGF0IHRoZSBzYW1lIHRpbWUuXG4gICAgICB2YXIgbG9jYXRpb24gPSBnZXRMb2NhdGlvbih0aGlzJDEuYmFzZSk7XG4gICAgICBpZiAodGhpcyQxLmN1cnJlbnQgPT09IFNUQVJUICYmIGxvY2F0aW9uID09PSBpbml0TG9jYXRpb24pIHtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG5cbiAgICAgIHRoaXMkMS50cmFuc2l0aW9uVG8obG9jYXRpb24sIGZ1bmN0aW9uIChyb3V0ZSkge1xuICAgICAgICBpZiAoc3VwcG9ydHNTY3JvbGwpIHtcbiAgICAgICAgICBoYW5kbGVTY3JvbGwocm91dGVyLCByb3V0ZSwgY3VycmVudCwgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgaWYgKCBIaXN0b3J5ICkgSFRNTDVIaXN0b3J5Ll9fcHJvdG9fXyA9IEhpc3Rvcnk7XG4gIEhUTUw1SGlzdG9yeS5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKCBIaXN0b3J5ICYmIEhpc3RvcnkucHJvdG90eXBlICk7XG4gIEhUTUw1SGlzdG9yeS5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBIVE1MNUhpc3Rvcnk7XG5cbiAgSFRNTDVIaXN0b3J5LnByb3RvdHlwZS5nbyA9IGZ1bmN0aW9uIGdvIChuKSB7XG4gICAgd2luZG93Lmhpc3RvcnkuZ28obik7XG4gIH07XG5cbiAgSFRNTDVIaXN0b3J5LnByb3RvdHlwZS5wdXNoID0gZnVuY3Rpb24gcHVzaCAobG9jYXRpb24sIG9uQ29tcGxldGUsIG9uQWJvcnQpIHtcbiAgICB2YXIgdGhpcyQxID0gdGhpcztcblxuICAgIHZhciByZWYgPSB0aGlzO1xuICAgIHZhciBmcm9tUm91dGUgPSByZWYuY3VycmVudDtcbiAgICB0aGlzLnRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgZnVuY3Rpb24gKHJvdXRlKSB7XG4gICAgICBwdXNoU3RhdGUoY2xlYW5QYXRoKHRoaXMkMS5iYXNlICsgcm91dGUuZnVsbFBhdGgpKTtcbiAgICAgIGhhbmRsZVNjcm9sbCh0aGlzJDEucm91dGVyLCByb3V0ZSwgZnJvbVJvdXRlLCBmYWxzZSk7XG4gICAgICBvbkNvbXBsZXRlICYmIG9uQ29tcGxldGUocm91dGUpO1xuICAgIH0sIG9uQWJvcnQpO1xuICB9O1xuXG4gIEhUTUw1SGlzdG9yeS5wcm90b3R5cGUucmVwbGFjZSA9IGZ1bmN0aW9uIHJlcGxhY2UgKGxvY2F0aW9uLCBvbkNvbXBsZXRlLCBvbkFib3J0KSB7XG4gICAgdmFyIHRoaXMkMSA9IHRoaXM7XG5cbiAgICB2YXIgcmVmID0gdGhpcztcbiAgICB2YXIgZnJvbVJvdXRlID0gcmVmLmN1cnJlbnQ7XG4gICAgdGhpcy50cmFuc2l0aW9uVG8obG9jYXRpb24sIGZ1bmN0aW9uIChyb3V0ZSkge1xuICAgICAgcmVwbGFjZVN0YXRlKGNsZWFuUGF0aCh0aGlzJDEuYmFzZSArIHJvdXRlLmZ1bGxQYXRoKSk7XG4gICAgICBoYW5kbGVTY3JvbGwodGhpcyQxLnJvdXRlciwgcm91dGUsIGZyb21Sb3V0ZSwgZmFsc2UpO1xuICAgICAgb25Db21wbGV0ZSAmJiBvbkNvbXBsZXRlKHJvdXRlKTtcbiAgICB9LCBvbkFib3J0KTtcbiAgfTtcblxuICBIVE1MNUhpc3RvcnkucHJvdG90eXBlLmVuc3VyZVVSTCA9IGZ1bmN0aW9uIGVuc3VyZVVSTCAocHVzaCkge1xuICAgIGlmIChnZXRMb2NhdGlvbih0aGlzLmJhc2UpICE9PSB0aGlzLmN1cnJlbnQuZnVsbFBhdGgpIHtcbiAgICAgIHZhciBjdXJyZW50ID0gY2xlYW5QYXRoKHRoaXMuYmFzZSArIHRoaXMuY3VycmVudC5mdWxsUGF0aCk7XG4gICAgICBwdXNoID8gcHVzaFN0YXRlKGN1cnJlbnQpIDogcmVwbGFjZVN0YXRlKGN1cnJlbnQpO1xuICAgIH1cbiAgfTtcblxuICBIVE1MNUhpc3RvcnkucHJvdG90eXBlLmdldEN1cnJlbnRMb2NhdGlvbiA9IGZ1bmN0aW9uIGdldEN1cnJlbnRMb2NhdGlvbiAoKSB7XG4gICAgcmV0dXJuIGdldExvY2F0aW9uKHRoaXMuYmFzZSlcbiAgfTtcblxuICByZXR1cm4gSFRNTDVIaXN0b3J5O1xufShIaXN0b3J5KSk7XG5cbmZ1bmN0aW9uIGdldExvY2F0aW9uIChiYXNlKSB7XG4gIHZhciBwYXRoID0gZGVjb2RlVVJJKHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZSk7XG4gIGlmIChiYXNlICYmIHBhdGguaW5kZXhPZihiYXNlKSA9PT0gMCkge1xuICAgIHBhdGggPSBwYXRoLnNsaWNlKGJhc2UubGVuZ3RoKTtcbiAgfVxuICByZXR1cm4gKHBhdGggfHwgJy8nKSArIHdpbmRvdy5sb2NhdGlvbi5zZWFyY2ggKyB3aW5kb3cubG9jYXRpb24uaGFzaFxufVxuXG4vKiAgKi9cblxudmFyIEhhc2hIaXN0b3J5ID0gLypAX19QVVJFX18qLyhmdW5jdGlvbiAoSGlzdG9yeSkge1xuICBmdW5jdGlvbiBIYXNoSGlzdG9yeSAocm91dGVyLCBiYXNlLCBmYWxsYmFjaykge1xuICAgIEhpc3RvcnkuY2FsbCh0aGlzLCByb3V0ZXIsIGJhc2UpO1xuICAgIC8vIGNoZWNrIGhpc3RvcnkgZmFsbGJhY2sgZGVlcGxpbmtpbmdcbiAgICBpZiAoZmFsbGJhY2sgJiYgY2hlY2tGYWxsYmFjayh0aGlzLmJhc2UpKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgZW5zdXJlU2xhc2goKTtcbiAgfVxuXG4gIGlmICggSGlzdG9yeSApIEhhc2hIaXN0b3J5Ll9fcHJvdG9fXyA9IEhpc3Rvcnk7XG4gIEhhc2hIaXN0b3J5LnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoIEhpc3RvcnkgJiYgSGlzdG9yeS5wcm90b3R5cGUgKTtcbiAgSGFzaEhpc3RvcnkucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gSGFzaEhpc3Rvcnk7XG5cbiAgLy8gdGhpcyBpcyBkZWxheWVkIHVudGlsIHRoZSBhcHAgbW91bnRzXG4gIC8vIHRvIGF2b2lkIHRoZSBoYXNoY2hhbmdlIGxpc3RlbmVyIGJlaW5nIGZpcmVkIHRvbyBlYXJseVxuICBIYXNoSGlzdG9yeS5wcm90b3R5cGUuc2V0dXBMaXN0ZW5lcnMgPSBmdW5jdGlvbiBzZXR1cExpc3RlbmVycyAoKSB7XG4gICAgdmFyIHRoaXMkMSA9IHRoaXM7XG5cbiAgICB2YXIgcm91dGVyID0gdGhpcy5yb3V0ZXI7XG4gICAgdmFyIGV4cGVjdFNjcm9sbCA9IHJvdXRlci5vcHRpb25zLnNjcm9sbEJlaGF2aW9yO1xuICAgIHZhciBzdXBwb3J0c1Njcm9sbCA9IHN1cHBvcnRzUHVzaFN0YXRlICYmIGV4cGVjdFNjcm9sbDtcblxuICAgIGlmIChzdXBwb3J0c1Njcm9sbCkge1xuICAgICAgc2V0dXBTY3JvbGwoKTtcbiAgICB9XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgIHN1cHBvcnRzUHVzaFN0YXRlID8gJ3BvcHN0YXRlJyA6ICdoYXNoY2hhbmdlJyxcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGN1cnJlbnQgPSB0aGlzJDEuY3VycmVudDtcbiAgICAgICAgaWYgKCFlbnN1cmVTbGFzaCgpKSB7XG4gICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cbiAgICAgICAgdGhpcyQxLnRyYW5zaXRpb25UbyhnZXRIYXNoKCksIGZ1bmN0aW9uIChyb3V0ZSkge1xuICAgICAgICAgIGlmIChzdXBwb3J0c1Njcm9sbCkge1xuICAgICAgICAgICAgaGFuZGxlU2Nyb2xsKHRoaXMkMS5yb3V0ZXIsIHJvdXRlLCBjdXJyZW50LCB0cnVlKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKCFzdXBwb3J0c1B1c2hTdGF0ZSkge1xuICAgICAgICAgICAgcmVwbGFjZUhhc2gocm91dGUuZnVsbFBhdGgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgKTtcbiAgfTtcblxuICBIYXNoSGlzdG9yeS5wcm90b3R5cGUucHVzaCA9IGZ1bmN0aW9uIHB1c2ggKGxvY2F0aW9uLCBvbkNvbXBsZXRlLCBvbkFib3J0KSB7XG4gICAgdmFyIHRoaXMkMSA9IHRoaXM7XG5cbiAgICB2YXIgcmVmID0gdGhpcztcbiAgICB2YXIgZnJvbVJvdXRlID0gcmVmLmN1cnJlbnQ7XG4gICAgdGhpcy50cmFuc2l0aW9uVG8oXG4gICAgICBsb2NhdGlvbixcbiAgICAgIGZ1bmN0aW9uIChyb3V0ZSkge1xuICAgICAgICBwdXNoSGFzaChyb3V0ZS5mdWxsUGF0aCk7XG4gICAgICAgIGhhbmRsZVNjcm9sbCh0aGlzJDEucm91dGVyLCByb3V0ZSwgZnJvbVJvdXRlLCBmYWxzZSk7XG4gICAgICAgIG9uQ29tcGxldGUgJiYgb25Db21wbGV0ZShyb3V0ZSk7XG4gICAgICB9LFxuICAgICAgb25BYm9ydFxuICAgICk7XG4gIH07XG5cbiAgSGFzaEhpc3RvcnkucHJvdG90eXBlLnJlcGxhY2UgPSBmdW5jdGlvbiByZXBsYWNlIChsb2NhdGlvbiwgb25Db21wbGV0ZSwgb25BYm9ydCkge1xuICAgIHZhciB0aGlzJDEgPSB0aGlzO1xuXG4gICAgdmFyIHJlZiA9IHRoaXM7XG4gICAgdmFyIGZyb21Sb3V0ZSA9IHJlZi5jdXJyZW50O1xuICAgIHRoaXMudHJhbnNpdGlvblRvKFxuICAgICAgbG9jYXRpb24sXG4gICAgICBmdW5jdGlvbiAocm91dGUpIHtcbiAgICAgICAgcmVwbGFjZUhhc2gocm91dGUuZnVsbFBhdGgpO1xuICAgICAgICBoYW5kbGVTY3JvbGwodGhpcyQxLnJvdXRlciwgcm91dGUsIGZyb21Sb3V0ZSwgZmFsc2UpO1xuICAgICAgICBvbkNvbXBsZXRlICYmIG9uQ29tcGxldGUocm91dGUpO1xuICAgICAgfSxcbiAgICAgIG9uQWJvcnRcbiAgICApO1xuICB9O1xuXG4gIEhhc2hIaXN0b3J5LnByb3RvdHlwZS5nbyA9IGZ1bmN0aW9uIGdvIChuKSB7XG4gICAgd2luZG93Lmhpc3RvcnkuZ28obik7XG4gIH07XG5cbiAgSGFzaEhpc3RvcnkucHJvdG90eXBlLmVuc3VyZVVSTCA9IGZ1bmN0aW9uIGVuc3VyZVVSTCAocHVzaCkge1xuICAgIHZhciBjdXJyZW50ID0gdGhpcy5jdXJyZW50LmZ1bGxQYXRoO1xuICAgIGlmIChnZXRIYXNoKCkgIT09IGN1cnJlbnQpIHtcbiAgICAgIHB1c2ggPyBwdXNoSGFzaChjdXJyZW50KSA6IHJlcGxhY2VIYXNoKGN1cnJlbnQpO1xuICAgIH1cbiAgfTtcblxuICBIYXNoSGlzdG9yeS5wcm90b3R5cGUuZ2V0Q3VycmVudExvY2F0aW9uID0gZnVuY3Rpb24gZ2V0Q3VycmVudExvY2F0aW9uICgpIHtcbiAgICByZXR1cm4gZ2V0SGFzaCgpXG4gIH07XG5cbiAgcmV0dXJuIEhhc2hIaXN0b3J5O1xufShIaXN0b3J5KSk7XG5cbmZ1bmN0aW9uIGNoZWNrRmFsbGJhY2sgKGJhc2UpIHtcbiAgdmFyIGxvY2F0aW9uID0gZ2V0TG9jYXRpb24oYmFzZSk7XG4gIGlmICghL15cXC8jLy50ZXN0KGxvY2F0aW9uKSkge1xuICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGNsZWFuUGF0aChiYXNlICsgJy8jJyArIGxvY2F0aW9uKSk7XG4gICAgcmV0dXJuIHRydWVcbiAgfVxufVxuXG5mdW5jdGlvbiBlbnN1cmVTbGFzaCAoKSB7XG4gIHZhciBwYXRoID0gZ2V0SGFzaCgpO1xuICBpZiAocGF0aC5jaGFyQXQoMCkgPT09ICcvJykge1xuICAgIHJldHVybiB0cnVlXG4gIH1cbiAgcmVwbGFjZUhhc2goJy8nICsgcGF0aCk7XG4gIHJldHVybiBmYWxzZVxufVxuXG5mdW5jdGlvbiBnZXRIYXNoICgpIHtcbiAgLy8gV2UgY2FuJ3QgdXNlIHdpbmRvdy5sb2NhdGlvbi5oYXNoIGhlcmUgYmVjYXVzZSBpdCdzIG5vdFxuICAvLyBjb25zaXN0ZW50IGFjcm9zcyBicm93c2VycyAtIEZpcmVmb3ggd2lsbCBwcmUtZGVjb2RlIGl0IVxuICB2YXIgaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICB2YXIgaW5kZXggPSBocmVmLmluZGV4T2YoJyMnKTtcbiAgLy8gZW1wdHkgcGF0aFxuICBpZiAoaW5kZXggPCAwKSB7IHJldHVybiAnJyB9XG5cbiAgaHJlZiA9IGhyZWYuc2xpY2UoaW5kZXggKyAxKTtcbiAgLy8gZGVjb2RlIHRoZSBoYXNoIGJ1dCBub3QgdGhlIHNlYXJjaCBvciBoYXNoXG4gIC8vIGFzIHNlYXJjaChxdWVyeSkgaXMgYWxyZWFkeSBkZWNvZGVkXG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS92dWVqcy92dWUtcm91dGVyL2lzc3Vlcy8yNzA4XG4gIHZhciBzZWFyY2hJbmRleCA9IGhyZWYuaW5kZXhPZignPycpO1xuICBpZiAoc2VhcmNoSW5kZXggPCAwKSB7XG4gICAgdmFyIGhhc2hJbmRleCA9IGhyZWYuaW5kZXhPZignIycpO1xuICAgIGlmIChoYXNoSW5kZXggPiAtMSkge1xuICAgICAgaHJlZiA9IGRlY29kZVVSSShocmVmLnNsaWNlKDAsIGhhc2hJbmRleCkpICsgaHJlZi5zbGljZShoYXNoSW5kZXgpO1xuICAgIH0gZWxzZSB7IGhyZWYgPSBkZWNvZGVVUkkoaHJlZik7IH1cbiAgfSBlbHNlIHtcbiAgICBocmVmID0gZGVjb2RlVVJJKGhyZWYuc2xpY2UoMCwgc2VhcmNoSW5kZXgpKSArIGhyZWYuc2xpY2Uoc2VhcmNoSW5kZXgpO1xuICB9XG5cbiAgcmV0dXJuIGhyZWZcbn1cblxuZnVuY3Rpb24gZ2V0VXJsIChwYXRoKSB7XG4gIHZhciBocmVmID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gIHZhciBpID0gaHJlZi5pbmRleE9mKCcjJyk7XG4gIHZhciBiYXNlID0gaSA+PSAwID8gaHJlZi5zbGljZSgwLCBpKSA6IGhyZWY7XG4gIHJldHVybiAoYmFzZSArIFwiI1wiICsgcGF0aClcbn1cblxuZnVuY3Rpb24gcHVzaEhhc2ggKHBhdGgpIHtcbiAgaWYgKHN1cHBvcnRzUHVzaFN0YXRlKSB7XG4gICAgcHVzaFN0YXRlKGdldFVybChwYXRoKSk7XG4gIH0gZWxzZSB7XG4gICAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBwYXRoO1xuICB9XG59XG5cbmZ1bmN0aW9uIHJlcGxhY2VIYXNoIChwYXRoKSB7XG4gIGlmIChzdXBwb3J0c1B1c2hTdGF0ZSkge1xuICAgIHJlcGxhY2VTdGF0ZShnZXRVcmwocGF0aCkpO1xuICB9IGVsc2Uge1xuICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGdldFVybChwYXRoKSk7XG4gIH1cbn1cblxuLyogICovXG5cbnZhciBBYnN0cmFjdEhpc3RvcnkgPSAvKkBfX1BVUkVfXyovKGZ1bmN0aW9uIChIaXN0b3J5KSB7XG4gIGZ1bmN0aW9uIEFic3RyYWN0SGlzdG9yeSAocm91dGVyLCBiYXNlKSB7XG4gICAgSGlzdG9yeS5jYWxsKHRoaXMsIHJvdXRlciwgYmFzZSk7XG4gICAgdGhpcy5zdGFjayA9IFtdO1xuICAgIHRoaXMuaW5kZXggPSAtMTtcbiAgfVxuXG4gIGlmICggSGlzdG9yeSApIEFic3RyYWN0SGlzdG9yeS5fX3Byb3RvX18gPSBIaXN0b3J5O1xuICBBYnN0cmFjdEhpc3RvcnkucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZSggSGlzdG9yeSAmJiBIaXN0b3J5LnByb3RvdHlwZSApO1xuICBBYnN0cmFjdEhpc3RvcnkucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gQWJzdHJhY3RIaXN0b3J5O1xuXG4gIEFic3RyYWN0SGlzdG9yeS5wcm90b3R5cGUucHVzaCA9IGZ1bmN0aW9uIHB1c2ggKGxvY2F0aW9uLCBvbkNvbXBsZXRlLCBvbkFib3J0KSB7XG4gICAgdmFyIHRoaXMkMSA9IHRoaXM7XG5cbiAgICB0aGlzLnRyYW5zaXRpb25UbyhcbiAgICAgIGxvY2F0aW9uLFxuICAgICAgZnVuY3Rpb24gKHJvdXRlKSB7XG4gICAgICAgIHRoaXMkMS5zdGFjayA9IHRoaXMkMS5zdGFjay5zbGljZSgwLCB0aGlzJDEuaW5kZXggKyAxKS5jb25jYXQocm91dGUpO1xuICAgICAgICB0aGlzJDEuaW5kZXgrKztcbiAgICAgICAgb25Db21wbGV0ZSAmJiBvbkNvbXBsZXRlKHJvdXRlKTtcbiAgICAgIH0sXG4gICAgICBvbkFib3J0XG4gICAgKTtcbiAgfTtcblxuICBBYnN0cmFjdEhpc3RvcnkucHJvdG90eXBlLnJlcGxhY2UgPSBmdW5jdGlvbiByZXBsYWNlIChsb2NhdGlvbiwgb25Db21wbGV0ZSwgb25BYm9ydCkge1xuICAgIHZhciB0aGlzJDEgPSB0aGlzO1xuXG4gICAgdGhpcy50cmFuc2l0aW9uVG8oXG4gICAgICBsb2NhdGlvbixcbiAgICAgIGZ1bmN0aW9uIChyb3V0ZSkge1xuICAgICAgICB0aGlzJDEuc3RhY2sgPSB0aGlzJDEuc3RhY2suc2xpY2UoMCwgdGhpcyQxLmluZGV4KS5jb25jYXQocm91dGUpO1xuICAgICAgICBvbkNvbXBsZXRlICYmIG9uQ29tcGxldGUocm91dGUpO1xuICAgICAgfSxcbiAgICAgIG9uQWJvcnRcbiAgICApO1xuICB9O1xuXG4gIEFic3RyYWN0SGlzdG9yeS5wcm90b3R5cGUuZ28gPSBmdW5jdGlvbiBnbyAobikge1xuICAgIHZhciB0aGlzJDEgPSB0aGlzO1xuXG4gICAgdmFyIHRhcmdldEluZGV4ID0gdGhpcy5pbmRleCArIG47XG4gICAgaWYgKHRhcmdldEluZGV4IDwgMCB8fCB0YXJnZXRJbmRleCA+PSB0aGlzLnN0YWNrLmxlbmd0aCkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIHZhciByb3V0ZSA9IHRoaXMuc3RhY2tbdGFyZ2V0SW5kZXhdO1xuICAgIHRoaXMuY29uZmlybVRyYW5zaXRpb24oXG4gICAgICByb3V0ZSxcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcyQxLmluZGV4ID0gdGFyZ2V0SW5kZXg7XG4gICAgICAgIHRoaXMkMS51cGRhdGVSb3V0ZShyb3V0ZSk7XG4gICAgICB9LFxuICAgICAgZnVuY3Rpb24gKGVycikge1xuICAgICAgICBpZiAoaXNFeHRlbmRlZEVycm9yKE5hdmlnYXRpb25EdXBsaWNhdGVkLCBlcnIpKSB7XG4gICAgICAgICAgdGhpcyQxLmluZGV4ID0gdGFyZ2V0SW5kZXg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICApO1xuICB9O1xuXG4gIEFic3RyYWN0SGlzdG9yeS5wcm90b3R5cGUuZ2V0Q3VycmVudExvY2F0aW9uID0gZnVuY3Rpb24gZ2V0Q3VycmVudExvY2F0aW9uICgpIHtcbiAgICB2YXIgY3VycmVudCA9IHRoaXMuc3RhY2tbdGhpcy5zdGFjay5sZW5ndGggLSAxXTtcbiAgICByZXR1cm4gY3VycmVudCA/IGN1cnJlbnQuZnVsbFBhdGggOiAnLydcbiAgfTtcblxuICBBYnN0cmFjdEhpc3RvcnkucHJvdG90eXBlLmVuc3VyZVVSTCA9IGZ1bmN0aW9uIGVuc3VyZVVSTCAoKSB7XG4gICAgLy8gbm9vcFxuICB9O1xuXG4gIHJldHVybiBBYnN0cmFjdEhpc3Rvcnk7XG59KEhpc3RvcnkpKTtcblxuLyogICovXG5cblxuXG52YXIgVnVlUm91dGVyID0gZnVuY3Rpb24gVnVlUm91dGVyIChvcHRpb25zKSB7XG4gIGlmICggb3B0aW9ucyA9PT0gdm9pZCAwICkgb3B0aW9ucyA9IHt9O1xuXG4gIHRoaXMuYXBwID0gbnVsbDtcbiAgdGhpcy5hcHBzID0gW107XG4gIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gIHRoaXMuYmVmb3JlSG9va3MgPSBbXTtcbiAgdGhpcy5yZXNvbHZlSG9va3MgPSBbXTtcbiAgdGhpcy5hZnRlckhvb2tzID0gW107XG4gIHRoaXMubWF0Y2hlciA9IGNyZWF0ZU1hdGNoZXIob3B0aW9ucy5yb3V0ZXMgfHwgW10sIHRoaXMpO1xuXG4gIHZhciBtb2RlID0gb3B0aW9ucy5tb2RlIHx8ICdoYXNoJztcbiAgdGhpcy5mYWxsYmFjayA9IG1vZGUgPT09ICdoaXN0b3J5JyAmJiAhc3VwcG9ydHNQdXNoU3RhdGUgJiYgb3B0aW9ucy5mYWxsYmFjayAhPT0gZmFsc2U7XG4gIGlmICh0aGlzLmZhbGxiYWNrKSB7XG4gICAgbW9kZSA9ICdoYXNoJztcbiAgfVxuICBpZiAoIWluQnJvd3Nlcikge1xuICAgIG1vZGUgPSAnYWJzdHJhY3QnO1xuICB9XG4gIHRoaXMubW9kZSA9IG1vZGU7XG5cbiAgc3dpdGNoIChtb2RlKSB7XG4gICAgY2FzZSAnaGlzdG9yeSc6XG4gICAgICB0aGlzLmhpc3RvcnkgPSBuZXcgSFRNTDVIaXN0b3J5KHRoaXMsIG9wdGlvbnMuYmFzZSk7XG4gICAgICBicmVha1xuICAgIGNhc2UgJ2hhc2gnOlxuICAgICAgdGhpcy5oaXN0b3J5ID0gbmV3IEhhc2hIaXN0b3J5KHRoaXMsIG9wdGlvbnMuYmFzZSwgdGhpcy5mYWxsYmFjayk7XG4gICAgICBicmVha1xuICAgIGNhc2UgJ2Fic3RyYWN0JzpcbiAgICAgIHRoaXMuaGlzdG9yeSA9IG5ldyBBYnN0cmFjdEhpc3RvcnkodGhpcywgb3B0aW9ucy5iYXNlKTtcbiAgICAgIGJyZWFrXG4gICAgZGVmYXVsdDpcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIGFzc2VydChmYWxzZSwgKFwiaW52YWxpZCBtb2RlOiBcIiArIG1vZGUpKTtcbiAgICAgIH1cbiAgfVxufTtcblxudmFyIHByb3RvdHlwZUFjY2Vzc29ycyA9IHsgY3VycmVudFJvdXRlOiB7IGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH07XG5cblZ1ZVJvdXRlci5wcm90b3R5cGUubWF0Y2ggPSBmdW5jdGlvbiBtYXRjaCAoXG4gIHJhdyxcbiAgY3VycmVudCxcbiAgcmVkaXJlY3RlZEZyb21cbikge1xuICByZXR1cm4gdGhpcy5tYXRjaGVyLm1hdGNoKHJhdywgY3VycmVudCwgcmVkaXJlY3RlZEZyb20pXG59O1xuXG5wcm90b3R5cGVBY2Nlc3NvcnMuY3VycmVudFJvdXRlLmdldCA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXMuaGlzdG9yeSAmJiB0aGlzLmhpc3RvcnkuY3VycmVudFxufTtcblxuVnVlUm91dGVyLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gaW5pdCAoYXBwIC8qIFZ1ZSBjb21wb25lbnQgaW5zdGFuY2UgKi8pIHtcbiAgICB2YXIgdGhpcyQxID0gdGhpcztcblxuICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGFzc2VydChcbiAgICBpbnN0YWxsLmluc3RhbGxlZCxcbiAgICBcIm5vdCBpbnN0YWxsZWQuIE1ha2Ugc3VyZSB0byBjYWxsIGBWdWUudXNlKFZ1ZVJvdXRlcilgIFwiICtcbiAgICBcImJlZm9yZSBjcmVhdGluZyByb290IGluc3RhbmNlLlwiXG4gICk7XG5cbiAgdGhpcy5hcHBzLnB1c2goYXBwKTtcblxuICAvLyBzZXQgdXAgYXBwIGRlc3Ryb3llZCBoYW5kbGVyXG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS92dWVqcy92dWUtcm91dGVyL2lzc3Vlcy8yNjM5XG4gIGFwcC4kb25jZSgnaG9vazpkZXN0cm95ZWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgLy8gY2xlYW4gb3V0IGFwcCBmcm9tIHRoaXMuYXBwcyBhcnJheSBvbmNlIGRlc3Ryb3llZFxuICAgIHZhciBpbmRleCA9IHRoaXMkMS5hcHBzLmluZGV4T2YoYXBwKTtcbiAgICBpZiAoaW5kZXggPiAtMSkgeyB0aGlzJDEuYXBwcy5zcGxpY2UoaW5kZXgsIDEpOyB9XG4gICAgLy8gZW5zdXJlIHdlIHN0aWxsIGhhdmUgYSBtYWluIGFwcCBvciBudWxsIGlmIG5vIGFwcHNcbiAgICAvLyB3ZSBkbyBub3QgcmVsZWFzZSB0aGUgcm91dGVyIHNvIGl0IGNhbiBiZSByZXVzZWRcbiAgICBpZiAodGhpcyQxLmFwcCA9PT0gYXBwKSB7IHRoaXMkMS5hcHAgPSB0aGlzJDEuYXBwc1swXSB8fCBudWxsOyB9XG4gIH0pO1xuXG4gIC8vIG1haW4gYXBwIHByZXZpb3VzbHkgaW5pdGlhbGl6ZWRcbiAgLy8gcmV0dXJuIGFzIHdlIGRvbid0IG5lZWQgdG8gc2V0IHVwIG5ldyBoaXN0b3J5IGxpc3RlbmVyXG4gIGlmICh0aGlzLmFwcCkge1xuICAgIHJldHVyblxuICB9XG5cbiAgdGhpcy5hcHAgPSBhcHA7XG5cbiAgdmFyIGhpc3RvcnkgPSB0aGlzLmhpc3Rvcnk7XG5cbiAgaWYgKGhpc3RvcnkgaW5zdGFuY2VvZiBIVE1MNUhpc3RvcnkpIHtcbiAgICBoaXN0b3J5LnRyYW5zaXRpb25UbyhoaXN0b3J5LmdldEN1cnJlbnRMb2NhdGlvbigpKTtcbiAgfSBlbHNlIGlmIChoaXN0b3J5IGluc3RhbmNlb2YgSGFzaEhpc3RvcnkpIHtcbiAgICB2YXIgc2V0dXBIYXNoTGlzdGVuZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBoaXN0b3J5LnNldHVwTGlzdGVuZXJzKCk7XG4gICAgfTtcbiAgICBoaXN0b3J5LnRyYW5zaXRpb25UbyhcbiAgICAgIGhpc3RvcnkuZ2V0Q3VycmVudExvY2F0aW9uKCksXG4gICAgICBzZXR1cEhhc2hMaXN0ZW5lcixcbiAgICAgIHNldHVwSGFzaExpc3RlbmVyXG4gICAgKTtcbiAgfVxuXG4gIGhpc3RvcnkubGlzdGVuKGZ1bmN0aW9uIChyb3V0ZSkge1xuICAgIHRoaXMkMS5hcHBzLmZvckVhY2goZnVuY3Rpb24gKGFwcCkge1xuICAgICAgYXBwLl9yb3V0ZSA9IHJvdXRlO1xuICAgIH0pO1xuICB9KTtcbn07XG5cblZ1ZVJvdXRlci5wcm90b3R5cGUuYmVmb3JlRWFjaCA9IGZ1bmN0aW9uIGJlZm9yZUVhY2ggKGZuKSB7XG4gIHJldHVybiByZWdpc3Rlckhvb2sodGhpcy5iZWZvcmVIb29rcywgZm4pXG59O1xuXG5WdWVSb3V0ZXIucHJvdG90eXBlLmJlZm9yZVJlc29sdmUgPSBmdW5jdGlvbiBiZWZvcmVSZXNvbHZlIChmbikge1xuICByZXR1cm4gcmVnaXN0ZXJIb29rKHRoaXMucmVzb2x2ZUhvb2tzLCBmbilcbn07XG5cblZ1ZVJvdXRlci5wcm90b3R5cGUuYWZ0ZXJFYWNoID0gZnVuY3Rpb24gYWZ0ZXJFYWNoIChmbikge1xuICByZXR1cm4gcmVnaXN0ZXJIb29rKHRoaXMuYWZ0ZXJIb29rcywgZm4pXG59O1xuXG5WdWVSb3V0ZXIucHJvdG90eXBlLm9uUmVhZHkgPSBmdW5jdGlvbiBvblJlYWR5IChjYiwgZXJyb3JDYikge1xuICB0aGlzLmhpc3Rvcnkub25SZWFkeShjYiwgZXJyb3JDYik7XG59O1xuXG5WdWVSb3V0ZXIucHJvdG90eXBlLm9uRXJyb3IgPSBmdW5jdGlvbiBvbkVycm9yIChlcnJvckNiKSB7XG4gIHRoaXMuaGlzdG9yeS5vbkVycm9yKGVycm9yQ2IpO1xufTtcblxuVnVlUm91dGVyLnByb3RvdHlwZS5wdXNoID0gZnVuY3Rpb24gcHVzaCAobG9jYXRpb24sIG9uQ29tcGxldGUsIG9uQWJvcnQpIHtcbiAgICB2YXIgdGhpcyQxID0gdGhpcztcblxuICAvLyAkZmxvdy1kaXNhYmxlLWxpbmVcbiAgaWYgKCFvbkNvbXBsZXRlICYmICFvbkFib3J0ICYmIHR5cGVvZiBQcm9taXNlICE9PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICB0aGlzJDEuaGlzdG9yeS5wdXNoKGxvY2F0aW9uLCByZXNvbHZlLCByZWplY3QpO1xuICAgIH0pXG4gIH0gZWxzZSB7XG4gICAgdGhpcy5oaXN0b3J5LnB1c2gobG9jYXRpb24sIG9uQ29tcGxldGUsIG9uQWJvcnQpO1xuICB9XG59O1xuXG5WdWVSb3V0ZXIucHJvdG90eXBlLnJlcGxhY2UgPSBmdW5jdGlvbiByZXBsYWNlIChsb2NhdGlvbiwgb25Db21wbGV0ZSwgb25BYm9ydCkge1xuICAgIHZhciB0aGlzJDEgPSB0aGlzO1xuXG4gIC8vICRmbG93LWRpc2FibGUtbGluZVxuICBpZiAoIW9uQ29tcGxldGUgJiYgIW9uQWJvcnQgJiYgdHlwZW9mIFByb21pc2UgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHRoaXMkMS5oaXN0b3J5LnJlcGxhY2UobG9jYXRpb24sIHJlc29sdmUsIHJlamVjdCk7XG4gICAgfSlcbiAgfSBlbHNlIHtcbiAgICB0aGlzLmhpc3RvcnkucmVwbGFjZShsb2NhdGlvbiwgb25Db21wbGV0ZSwgb25BYm9ydCk7XG4gIH1cbn07XG5cblZ1ZVJvdXRlci5wcm90b3R5cGUuZ28gPSBmdW5jdGlvbiBnbyAobikge1xuICB0aGlzLmhpc3RvcnkuZ28obik7XG59O1xuXG5WdWVSb3V0ZXIucHJvdG90eXBlLmJhY2sgPSBmdW5jdGlvbiBiYWNrICgpIHtcbiAgdGhpcy5nbygtMSk7XG59O1xuXG5WdWVSb3V0ZXIucHJvdG90eXBlLmZvcndhcmQgPSBmdW5jdGlvbiBmb3J3YXJkICgpIHtcbiAgdGhpcy5nbygxKTtcbn07XG5cblZ1ZVJvdXRlci5wcm90b3R5cGUuZ2V0TWF0Y2hlZENvbXBvbmVudHMgPSBmdW5jdGlvbiBnZXRNYXRjaGVkQ29tcG9uZW50cyAodG8pIHtcbiAgdmFyIHJvdXRlID0gdG9cbiAgICA/IHRvLm1hdGNoZWRcbiAgICAgID8gdG9cbiAgICAgIDogdGhpcy5yZXNvbHZlKHRvKS5yb3V0ZVxuICAgIDogdGhpcy5jdXJyZW50Um91dGU7XG4gIGlmICghcm91dGUpIHtcbiAgICByZXR1cm4gW11cbiAgfVxuICByZXR1cm4gW10uY29uY2F0LmFwcGx5KFtdLCByb3V0ZS5tYXRjaGVkLm1hcChmdW5jdGlvbiAobSkge1xuICAgIHJldHVybiBPYmplY3Qua2V5cyhtLmNvbXBvbmVudHMpLm1hcChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICByZXR1cm4gbS5jb21wb25lbnRzW2tleV1cbiAgICB9KVxuICB9KSlcbn07XG5cblZ1ZVJvdXRlci5wcm90b3R5cGUucmVzb2x2ZSA9IGZ1bmN0aW9uIHJlc29sdmUgKFxuICB0byxcbiAgY3VycmVudCxcbiAgYXBwZW5kXG4pIHtcbiAgY3VycmVudCA9IGN1cnJlbnQgfHwgdGhpcy5oaXN0b3J5LmN1cnJlbnQ7XG4gIHZhciBsb2NhdGlvbiA9IG5vcm1hbGl6ZUxvY2F0aW9uKFxuICAgIHRvLFxuICAgIGN1cnJlbnQsXG4gICAgYXBwZW5kLFxuICAgIHRoaXNcbiAgKTtcbiAgdmFyIHJvdXRlID0gdGhpcy5tYXRjaChsb2NhdGlvbiwgY3VycmVudCk7XG4gIHZhciBmdWxsUGF0aCA9IHJvdXRlLnJlZGlyZWN0ZWRGcm9tIHx8IHJvdXRlLmZ1bGxQYXRoO1xuICB2YXIgYmFzZSA9IHRoaXMuaGlzdG9yeS5iYXNlO1xuICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYoYmFzZSwgZnVsbFBhdGgsIHRoaXMubW9kZSk7XG4gIHJldHVybiB7XG4gICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgIHJvdXRlOiByb3V0ZSxcbiAgICBocmVmOiBocmVmLFxuICAgIC8vIGZvciBiYWNrd2FyZHMgY29tcGF0XG4gICAgbm9ybWFsaXplZFRvOiBsb2NhdGlvbixcbiAgICByZXNvbHZlZDogcm91dGVcbiAgfVxufTtcblxuVnVlUm91dGVyLnByb3RvdHlwZS5hZGRSb3V0ZXMgPSBmdW5jdGlvbiBhZGRSb3V0ZXMgKHJvdXRlcykge1xuICB0aGlzLm1hdGNoZXIuYWRkUm91dGVzKHJvdXRlcyk7XG4gIGlmICh0aGlzLmhpc3RvcnkuY3VycmVudCAhPT0gU1RBUlQpIHtcbiAgICB0aGlzLmhpc3RvcnkudHJhbnNpdGlvblRvKHRoaXMuaGlzdG9yeS5nZXRDdXJyZW50TG9jYXRpb24oKSk7XG4gIH1cbn07XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKCBWdWVSb3V0ZXIucHJvdG90eXBlLCBwcm90b3R5cGVBY2Nlc3NvcnMgKTtcblxuZnVuY3Rpb24gcmVnaXN0ZXJIb29rIChsaXN0LCBmbikge1xuICBsaXN0LnB1c2goZm4pO1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBpID0gbGlzdC5pbmRleE9mKGZuKTtcbiAgICBpZiAoaSA+IC0xKSB7IGxpc3Quc3BsaWNlKGksIDEpOyB9XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlSHJlZiAoYmFzZSwgZnVsbFBhdGgsIG1vZGUpIHtcbiAgdmFyIHBhdGggPSBtb2RlID09PSAnaGFzaCcgPyAnIycgKyBmdWxsUGF0aCA6IGZ1bGxQYXRoO1xuICByZXR1cm4gYmFzZSA/IGNsZWFuUGF0aChiYXNlICsgJy8nICsgcGF0aCkgOiBwYXRoXG59XG5cblZ1ZVJvdXRlci5pbnN0YWxsID0gaW5zdGFsbDtcblZ1ZVJvdXRlci52ZXJzaW9uID0gJzMuMS41JztcblxuaWYgKGluQnJvd3NlciAmJiB3aW5kb3cuVnVlKSB7XG4gIHdpbmRvdy5WdWUudXNlKFZ1ZVJvdXRlcik7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFZ1ZVJvdXRlcjtcbiIsIi8qIGdsb2JhbHMgX19WVUVfU1NSX0NPTlRFWFRfXyAqL1xuXG4vLyBJTVBPUlRBTlQ6IERvIE5PVCB1c2UgRVMyMDE1IGZlYXR1cmVzIGluIHRoaXMgZmlsZSAoZXhjZXB0IGZvciBtb2R1bGVzKS5cbi8vIFRoaXMgbW9kdWxlIGlzIGEgcnVudGltZSB1dGlsaXR5IGZvciBjbGVhbmVyIGNvbXBvbmVudCBtb2R1bGUgb3V0cHV0IGFuZCB3aWxsXG4vLyBiZSBpbmNsdWRlZCBpbiB0aGUgZmluYWwgd2VicGFjayB1c2VyIGJ1bmRsZS5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbm9ybWFsaXplQ29tcG9uZW50IChcbiAgc2NyaXB0RXhwb3J0cyxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZ1bmN0aW9uYWxUZW1wbGF0ZSxcbiAgaW5qZWN0U3R5bGVzLFxuICBzY29wZUlkLFxuICBtb2R1bGVJZGVudGlmaWVyLCAvKiBzZXJ2ZXIgb25seSAqL1xuICBzaGFkb3dNb2RlIC8qIHZ1ZS1jbGkgb25seSAqL1xuKSB7XG4gIC8vIFZ1ZS5leHRlbmQgY29uc3RydWN0b3IgZXhwb3J0IGludGVyb3BcbiAgdmFyIG9wdGlvbnMgPSB0eXBlb2Ygc2NyaXB0RXhwb3J0cyA9PT0gJ2Z1bmN0aW9uJ1xuICAgID8gc2NyaXB0RXhwb3J0cy5vcHRpb25zXG4gICAgOiBzY3JpcHRFeHBvcnRzXG5cbiAgLy8gcmVuZGVyIGZ1bmN0aW9uc1xuICBpZiAocmVuZGVyKSB7XG4gICAgb3B0aW9ucy5yZW5kZXIgPSByZW5kZXJcbiAgICBvcHRpb25zLnN0YXRpY1JlbmRlckZucyA9IHN0YXRpY1JlbmRlckZuc1xuICAgIG9wdGlvbnMuX2NvbXBpbGVkID0gdHJ1ZVxuICB9XG5cbiAgLy8gZnVuY3Rpb25hbCB0ZW1wbGF0ZVxuICBpZiAoZnVuY3Rpb25hbFRlbXBsYXRlKSB7XG4gICAgb3B0aW9ucy5mdW5jdGlvbmFsID0gdHJ1ZVxuICB9XG5cbiAgLy8gc2NvcGVkSWRcbiAgaWYgKHNjb3BlSWQpIHtcbiAgICBvcHRpb25zLl9zY29wZUlkID0gJ2RhdGEtdi0nICsgc2NvcGVJZFxuICB9XG5cbiAgdmFyIGhvb2tcbiAgaWYgKG1vZHVsZUlkZW50aWZpZXIpIHsgLy8gc2VydmVyIGJ1aWxkXG4gICAgaG9vayA9IGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICAvLyAyLjMgaW5qZWN0aW9uXG4gICAgICBjb250ZXh0ID1cbiAgICAgICAgY29udGV4dCB8fCAvLyBjYWNoZWQgY2FsbFxuICAgICAgICAodGhpcy4kdm5vZGUgJiYgdGhpcy4kdm5vZGUuc3NyQ29udGV4dCkgfHwgLy8gc3RhdGVmdWxcbiAgICAgICAgKHRoaXMucGFyZW50ICYmIHRoaXMucGFyZW50LiR2bm9kZSAmJiB0aGlzLnBhcmVudC4kdm5vZGUuc3NyQ29udGV4dCkgLy8gZnVuY3Rpb25hbFxuICAgICAgLy8gMi4yIHdpdGggcnVuSW5OZXdDb250ZXh0OiB0cnVlXG4gICAgICBpZiAoIWNvbnRleHQgJiYgdHlwZW9mIF9fVlVFX1NTUl9DT05URVhUX18gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGNvbnRleHQgPSBfX1ZVRV9TU1JfQ09OVEVYVF9fXG4gICAgICB9XG4gICAgICAvLyBpbmplY3QgY29tcG9uZW50IHN0eWxlc1xuICAgICAgaWYgKGluamVjdFN0eWxlcykge1xuICAgICAgICBpbmplY3RTdHlsZXMuY2FsbCh0aGlzLCBjb250ZXh0KVxuICAgICAgfVxuICAgICAgLy8gcmVnaXN0ZXIgY29tcG9uZW50IG1vZHVsZSBpZGVudGlmaWVyIGZvciBhc3luYyBjaHVuayBpbmZlcnJlbmNlXG4gICAgICBpZiAoY29udGV4dCAmJiBjb250ZXh0Ll9yZWdpc3RlcmVkQ29tcG9uZW50cykge1xuICAgICAgICBjb250ZXh0Ll9yZWdpc3RlcmVkQ29tcG9uZW50cy5hZGQobW9kdWxlSWRlbnRpZmllcilcbiAgICAgIH1cbiAgICB9XG4gICAgLy8gdXNlZCBieSBzc3IgaW4gY2FzZSBjb21wb25lbnQgaXMgY2FjaGVkIGFuZCBiZWZvcmVDcmVhdGVcbiAgICAvLyBuZXZlciBnZXRzIGNhbGxlZFxuICAgIG9wdGlvbnMuX3NzclJlZ2lzdGVyID0gaG9va1xuICB9IGVsc2UgaWYgKGluamVjdFN0eWxlcykge1xuICAgIGhvb2sgPSBzaGFkb3dNb2RlXG4gICAgICA/IGZ1bmN0aW9uICgpIHsgaW5qZWN0U3R5bGVzLmNhbGwodGhpcywgdGhpcy4kcm9vdC4kb3B0aW9ucy5zaGFkb3dSb290KSB9XG4gICAgICA6IGluamVjdFN0eWxlc1xuICB9XG5cbiAgaWYgKGhvb2spIHtcbiAgICBpZiAob3B0aW9ucy5mdW5jdGlvbmFsKSB7XG4gICAgICAvLyBmb3IgdGVtcGxhdGUtb25seSBob3QtcmVsb2FkIGJlY2F1c2UgaW4gdGhhdCBjYXNlIHRoZSByZW5kZXIgZm4gZG9lc24ndFxuICAgICAgLy8gZ28gdGhyb3VnaCB0aGUgbm9ybWFsaXplclxuICAgICAgb3B0aW9ucy5faW5qZWN0U3R5bGVzID0gaG9va1xuICAgICAgLy8gcmVnaXN0ZXIgZm9yIGZ1bmN0aW9uYWwgY29tcG9uZW50IGluIHZ1ZSBmaWxlXG4gICAgICB2YXIgb3JpZ2luYWxSZW5kZXIgPSBvcHRpb25zLnJlbmRlclxuICAgICAgb3B0aW9ucy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXJXaXRoU3R5bGVJbmplY3Rpb24gKGgsIGNvbnRleHQpIHtcbiAgICAgICAgaG9vay5jYWxsKGNvbnRleHQpXG4gICAgICAgIHJldHVybiBvcmlnaW5hbFJlbmRlcihoLCBjb250ZXh0KVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBpbmplY3QgY29tcG9uZW50IHJlZ2lzdHJhdGlvbiBhcyBiZWZvcmVDcmVhdGUgaG9va1xuICAgICAgdmFyIGV4aXN0aW5nID0gb3B0aW9ucy5iZWZvcmVDcmVhdGVcbiAgICAgIG9wdGlvbnMuYmVmb3JlQ3JlYXRlID0gZXhpc3RpbmdcbiAgICAgICAgPyBbXS5jb25jYXQoZXhpc3RpbmcsIGhvb2spXG4gICAgICAgIDogW2hvb2tdXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBleHBvcnRzOiBzY3JpcHRFeHBvcnRzLFxuICAgIG9wdGlvbnM6IG9wdGlvbnNcbiAgfVxufVxuIiwiKGZ1bmN0aW9uIHdlYnBhY2tVbml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblx0aWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKVxuXHRcdG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuXHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRkZWZpbmUoW10sIGZhY3RvcnkpO1xuXHRlbHNlIGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jylcblx0XHRleHBvcnRzW1wiTW9ja1wiXSA9IGZhY3RvcnkoKTtcblx0ZWxzZVxuXHRcdHJvb3RbXCJNb2NrXCJdID0gZmFjdG9yeSgpO1xufSkodGhpcywgZnVuY3Rpb24oKSB7XG5yZXR1cm4gLyoqKioqKi8gKGZ1bmN0aW9uKG1vZHVsZXMpIHsgLy8gd2VicGFja0Jvb3RzdHJhcFxuLyoqKioqKi8gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4vKioqKioqLyBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbi8qKioqKiovIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbi8qKioqKiovIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4vKioqKioqLyBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4vKioqKioqLyBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pXG4vKioqKioqLyBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcblxuLyoqKioqKi8gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4vKioqKioqLyBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuLyoqKioqKi8gXHRcdFx0ZXhwb3J0czoge30sXG4vKioqKioqLyBcdFx0XHRpZDogbW9kdWxlSWQsXG4vKioqKioqLyBcdFx0XHRsb2FkZWQ6IGZhbHNlXG4vKioqKioqLyBcdFx0fTtcblxuLyoqKioqKi8gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuLyoqKioqKi8gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4vKioqKioqLyBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuLyoqKioqKi8gXHRcdG1vZHVsZS5sb2FkZWQgPSB0cnVlO1xuXG4vKioqKioqLyBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbi8qKioqKiovIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4vKioqKioqLyBcdH1cblxuXG4vKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbi8qKioqKiovIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuLyoqKioqKi8gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG4vKioqKioqLyBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuLyoqKioqKi8gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcbi8qKioqKiovIH0pXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKi8gKFtcbi8qIDAgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXHQvKiBnbG9iYWwgcmVxdWlyZSwgbW9kdWxlLCB3aW5kb3cgKi9cblx0dmFyIEhhbmRsZXIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpXG5cdHZhciBVdGlsID0gX193ZWJwYWNrX3JlcXVpcmVfXygzKVxuXHR2YXIgUmFuZG9tID0gX193ZWJwYWNrX3JlcXVpcmVfXyg1KVxuXHR2YXIgUkUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIwKVxuXHR2YXIgdG9KU09OU2NoZW1hID0gX193ZWJwYWNrX3JlcXVpcmVfXygyMylcblx0dmFyIHZhbGlkID0gX193ZWJwYWNrX3JlcXVpcmVfXygyNSlcblxuXHR2YXIgWEhSXG5cdGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykgWEhSID0gX193ZWJwYWNrX3JlcXVpcmVfXygyNylcblxuXHQvKiFcblx0ICAgIE1vY2sgLSDmqKHmi5/or7fmsYIgJiDmqKHmi5/mlbDmja5cblx0ICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9udXlzb2Z0L01vY2tcblx0ICAgIOWiqOaZuiBtb3poaS5neXlAdGFvYmFvLmNvbSBudXlzb2Z0QGdtYWlsLmNvbVxuXHQqL1xuXHR2YXIgTW9jayA9IHtcblx0ICAgIEhhbmRsZXI6IEhhbmRsZXIsXG5cdCAgICBSYW5kb206IFJhbmRvbSxcblx0ICAgIFV0aWw6IFV0aWwsXG5cdCAgICBYSFI6IFhIUixcblx0ICAgIFJFOiBSRSxcblx0ICAgIHRvSlNPTlNjaGVtYTogdG9KU09OU2NoZW1hLFxuXHQgICAgdmFsaWQ6IHZhbGlkLFxuXHQgICAgaGVyZWRvYzogVXRpbC5oZXJlZG9jLFxuXHQgICAgc2V0dXA6IGZ1bmN0aW9uKHNldHRpbmdzKSB7XG5cdCAgICAgICAgcmV0dXJuIFhIUi5zZXR1cChzZXR0aW5ncylcblx0ICAgIH0sXG5cdCAgICBfbW9ja2VkOiB7fVxuXHR9XG5cblx0TW9jay52ZXJzaW9uID0gJzEuMC4xLWJldGEzJ1xuXG5cdC8vIOmBv+WFjeW+queOr+S+nei1llxuXHRpZiAoWEhSKSBYSFIuTW9jayA9IE1vY2tcblxuXHQvKlxuXHQgICAgKiBNb2NrLm1vY2soIHRlbXBsYXRlIClcblx0ICAgICogTW9jay5tb2NrKCBmdW5jdGlvbigpIClcblx0ICAgICogTW9jay5tb2NrKCBydXJsLCB0ZW1wbGF0ZSApXG5cdCAgICAqIE1vY2subW9jayggcnVybCwgZnVuY3Rpb24ob3B0aW9ucykgKVxuXHQgICAgKiBNb2NrLm1vY2soIHJ1cmwsIHJ0eXBlLCB0ZW1wbGF0ZSApXG5cdCAgICAqIE1vY2subW9jayggcnVybCwgcnR5cGUsIGZ1bmN0aW9uKG9wdGlvbnMpIClcblxuXHQgICAg5qC55o2u5pWw5o2u5qih5p2/55Sf5oiQ5qih5ouf5pWw5o2u44CCXG5cdCovXG5cdE1vY2subW9jayA9IGZ1bmN0aW9uKHJ1cmwsIHJ0eXBlLCB0ZW1wbGF0ZSkge1xuXHQgICAgLy8gTW9jay5tb2NrKHRlbXBsYXRlKVxuXHQgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcblx0ICAgICAgICByZXR1cm4gSGFuZGxlci5nZW4ocnVybClcblx0ICAgIH1cblx0ICAgIC8vIE1vY2subW9jayhydXJsLCB0ZW1wbGF0ZSlcblx0ICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAyKSB7XG5cdCAgICAgICAgdGVtcGxhdGUgPSBydHlwZVxuXHQgICAgICAgIHJ0eXBlID0gdW5kZWZpbmVkXG5cdCAgICB9XG5cdCAgICAvLyDmi6bmiKogWEhSXG5cdCAgICBpZiAoWEhSKSB3aW5kb3cuWE1MSHR0cFJlcXVlc3QgPSBYSFJcblx0ICAgIE1vY2suX21vY2tlZFtydXJsICsgKHJ0eXBlIHx8ICcnKV0gPSB7XG5cdCAgICAgICAgcnVybDogcnVybCxcblx0ICAgICAgICBydHlwZTogcnR5cGUsXG5cdCAgICAgICAgdGVtcGxhdGU6IHRlbXBsYXRlXG5cdCAgICB9XG5cdCAgICByZXR1cm4gTW9ja1xuXHR9XG5cblx0bW9kdWxlLmV4cG9ydHMgPSBNb2NrXG5cbi8qKiovIH0pLFxuLyogMSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cdC8qIFxuXHQgICAgIyMgSGFuZGxlclxuXG5cdCAgICDlpITnkIbmlbDmja7mqKHmnb/jgIJcblx0ICAgIFxuXHQgICAgKiBIYW5kbGVyLmdlbiggdGVtcGxhdGUsIG5hbWU/LCBjb250ZXh0PyApXG5cblx0ICAgICAgICDlhaXlj6Pmlrnms5XjgIJcblxuXHQgICAgKiBEYXRhIFRlbXBsYXRlIERlZmluaXRpb24sIERURFxuXHQgICAgICAgIFxuXHQgICAgICAgIOWkhOeQhuaVsOaNruaooeadv+WumuS5ieOAglxuXG5cdCAgICAgICAgKiBIYW5kbGVyLmFycmF5KCBvcHRpb25zIClcblx0ICAgICAgICAqIEhhbmRsZXIub2JqZWN0KCBvcHRpb25zIClcblx0ICAgICAgICAqIEhhbmRsZXIubnVtYmVyKCBvcHRpb25zIClcblx0ICAgICAgICAqIEhhbmRsZXIuYm9vbGVhbiggb3B0aW9ucyApXG5cdCAgICAgICAgKiBIYW5kbGVyLnN0cmluZyggb3B0aW9ucyApXG5cdCAgICAgICAgKiBIYW5kbGVyLmZ1bmN0aW9uKCBvcHRpb25zIClcblx0ICAgICAgICAqIEhhbmRsZXIucmVnZXhwKCBvcHRpb25zIClcblx0ICAgICAgICBcblx0ICAgICAgICDlpITnkIbot6/lvoTvvIjnm7jlr7nlkoznu53lr7nvvInjgIJcblxuXHQgICAgICAgICogSGFuZGxlci5nZXRWYWx1ZUJ5S2V5UGF0aCgga2V5LCBvcHRpb25zIClcblxuXHQgICAgKiBEYXRhIFBsYWNlaG9sZGVyIERlZmluaXRpb24sIERQRFxuXG5cdCAgICAgICAg5aSE55CG5pWw5o2u5Y2g5L2N56ym5a6a5LmJXG5cblx0ICAgICAgICAqIEhhbmRsZXIucGxhY2Vob2xkZXIoIHBsYWNlaG9sZGVyLCBjb250ZXh0LCB0ZW1wbGF0ZUNvbnRleHQsIG9wdGlvbnMgKVxuXG5cdCovXG5cblx0dmFyIENvbnN0YW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKVxuXHR2YXIgVXRpbCA9IF9fd2VicGFja19yZXF1aXJlX18oMylcblx0dmFyIFBhcnNlciA9IF9fd2VicGFja19yZXF1aXJlX18oNClcblx0dmFyIFJhbmRvbSA9IF9fd2VicGFja19yZXF1aXJlX18oNSlcblx0dmFyIFJFID0gX193ZWJwYWNrX3JlcXVpcmVfXygyMClcblxuXHR2YXIgSGFuZGxlciA9IHtcblx0ICAgIGV4dGVuZDogVXRpbC5leHRlbmRcblx0fVxuXG5cdC8qXG5cdCAgICB0ZW1wbGF0ZSAgICAgICAg5bGe5oCn5YC877yI5Y2z5pWw5o2u5qih5p2/77yJXG5cdCAgICBuYW1lICAgICAgICAgICAg5bGe5oCn5ZCNXG5cdCAgICBjb250ZXh0ICAgICAgICAg5pWw5o2u5LiK5LiL5paH77yM55Sf5oiQ5ZCO55qE5pWw5o2uXG5cdCAgICB0ZW1wbGF0ZUNvbnRleHQg5qih5p2/5LiK5LiL5paH77yMXG5cblx0ICAgIEhhbmRsZS5nZW4odGVtcGxhdGUsIG5hbWUsIG9wdGlvbnMpXG5cdCAgICBjb250ZXh0XG5cdCAgICAgICAgY3VycmVudENvbnRleHQsIHRlbXBsYXRlQ3VycmVudENvbnRleHQsIFxuXHQgICAgICAgIHBhdGgsIHRlbXBsYXRlUGF0aFxuXHQgICAgICAgIHJvb3QsIHRlbXBsYXRlUm9vdFxuXHQqL1xuXHRIYW5kbGVyLmdlbiA9IGZ1bmN0aW9uKHRlbXBsYXRlLCBuYW1lLCBjb250ZXh0KSB7XG5cdCAgICAvKiBqc2hpbnQgLVcwNDEgKi9cblx0ICAgIG5hbWUgPSBuYW1lID09IHVuZGVmaW5lZCA/ICcnIDogKG5hbWUgKyAnJylcblxuXHQgICAgY29udGV4dCA9IGNvbnRleHQgfHwge31cblx0ICAgIGNvbnRleHQgPSB7XG5cdCAgICAgICAgICAgIC8vIOW9k+WJjeiuv+mXrui3r+W+hO+8jOWPquacieWxnuaAp+WQje+8jOS4jeWMheaLrOeUn+aIkOinhOWImVxuXHQgICAgICAgICAgICBwYXRoOiBjb250ZXh0LnBhdGggfHwgW0NvbnN0YW50LkdVSURdLFxuXHQgICAgICAgICAgICB0ZW1wbGF0ZVBhdGg6IGNvbnRleHQudGVtcGxhdGVQYXRoIHx8IFtDb25zdGFudC5HVUlEKytdLFxuXHQgICAgICAgICAgICAvLyDmnIDnu4jlsZ7mgKflgLznmoTkuIrkuIvmlodcblx0ICAgICAgICAgICAgY3VycmVudENvbnRleHQ6IGNvbnRleHQuY3VycmVudENvbnRleHQsXG5cdCAgICAgICAgICAgIC8vIOWxnuaAp+WAvOaooeadv+eahOS4iuS4i+aWh1xuXHQgICAgICAgICAgICB0ZW1wbGF0ZUN1cnJlbnRDb250ZXh0OiBjb250ZXh0LnRlbXBsYXRlQ3VycmVudENvbnRleHQgfHwgdGVtcGxhdGUsXG5cdCAgICAgICAgICAgIC8vIOacgOe7iOWAvOeahOaguVxuXHQgICAgICAgICAgICByb290OiBjb250ZXh0LnJvb3QgfHwgY29udGV4dC5jdXJyZW50Q29udGV4dCxcblx0ICAgICAgICAgICAgLy8g5qih5p2/55qE5qC5XG5cdCAgICAgICAgICAgIHRlbXBsYXRlUm9vdDogY29udGV4dC50ZW1wbGF0ZVJvb3QgfHwgY29udGV4dC50ZW1wbGF0ZUN1cnJlbnRDb250ZXh0IHx8IHRlbXBsYXRlXG5cdCAgICAgICAgfVxuXHQgICAgICAgIC8vIGNvbnNvbGUubG9nKCdwYXRoOicsIGNvbnRleHQucGF0aC5qb2luKCcuJyksIHRlbXBsYXRlKVxuXG5cdCAgICB2YXIgcnVsZSA9IFBhcnNlci5wYXJzZShuYW1lKVxuXHQgICAgdmFyIHR5cGUgPSBVdGlsLnR5cGUodGVtcGxhdGUpXG5cdCAgICB2YXIgZGF0YVxuXG5cdCAgICBpZiAoSGFuZGxlclt0eXBlXSkge1xuXHQgICAgICAgIGRhdGEgPSBIYW5kbGVyW3R5cGVdKHtcblx0ICAgICAgICAgICAgLy8g5bGe5oCn5YC857G75Z6LXG5cdCAgICAgICAgICAgIHR5cGU6IHR5cGUsXG5cdCAgICAgICAgICAgIC8vIOWxnuaAp+WAvOaooeadv1xuXHQgICAgICAgICAgICB0ZW1wbGF0ZTogdGVtcGxhdGUsXG5cdCAgICAgICAgICAgIC8vIOWxnuaAp+WQjSArIOeUn+aIkOinhOWImVxuXHQgICAgICAgICAgICBuYW1lOiBuYW1lLFxuXHQgICAgICAgICAgICAvLyDlsZ7mgKflkI1cblx0ICAgICAgICAgICAgcGFyc2VkTmFtZTogbmFtZSA/IG5hbWUucmVwbGFjZShDb25zdGFudC5SRV9LRVksICckMScpIDogbmFtZSxcblxuXHQgICAgICAgICAgICAvLyDop6PmnpDlkI7nmoTnlJ/miJDop4TliJlcblx0ICAgICAgICAgICAgcnVsZTogcnVsZSxcblx0ICAgICAgICAgICAgLy8g55u45YWz5LiK5LiL5paHXG5cdCAgICAgICAgICAgIGNvbnRleHQ6IGNvbnRleHRcblx0ICAgICAgICB9KVxuXG5cdCAgICAgICAgaWYgKCFjb250ZXh0LnJvb3QpIGNvbnRleHQucm9vdCA9IGRhdGFcblx0ICAgICAgICByZXR1cm4gZGF0YVxuXHQgICAgfVxuXG5cdCAgICByZXR1cm4gdGVtcGxhdGVcblx0fVxuXG5cdEhhbmRsZXIuZXh0ZW5kKHtcblx0ICAgIGFycmF5OiBmdW5jdGlvbihvcHRpb25zKSB7XG5cdCAgICAgICAgdmFyIHJlc3VsdCA9IFtdLFxuXHQgICAgICAgICAgICBpLCBpaTtcblxuXHQgICAgICAgIC8vICduYW1lfDEnOiBbXVxuXHQgICAgICAgIC8vICduYW1lfGNvdW50JzogW11cblx0ICAgICAgICAvLyAnbmFtZXxtaW4tbWF4JzogW11cblx0ICAgICAgICBpZiAob3B0aW9ucy50ZW1wbGF0ZS5sZW5ndGggPT09IDApIHJldHVybiByZXN1bHRcblxuXHQgICAgICAgIC8vICdhcnInOiBbeyAnZW1haWwnOiAnQEVNQUlMJyB9LCB7ICdlbWFpbCc6ICdARU1BSUwnIH1dXG5cdCAgICAgICAgaWYgKCFvcHRpb25zLnJ1bGUucGFyYW1ldGVycykge1xuXHQgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgb3B0aW9ucy50ZW1wbGF0ZS5sZW5ndGg7IGkrKykge1xuXHQgICAgICAgICAgICAgICAgb3B0aW9ucy5jb250ZXh0LnBhdGgucHVzaChpKVxuXHQgICAgICAgICAgICAgICAgb3B0aW9ucy5jb250ZXh0LnRlbXBsYXRlUGF0aC5wdXNoKGkpXG5cdCAgICAgICAgICAgICAgICByZXN1bHQucHVzaChcblx0ICAgICAgICAgICAgICAgICAgICBIYW5kbGVyLmdlbihvcHRpb25zLnRlbXBsYXRlW2ldLCBpLCB7XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIHBhdGg6IG9wdGlvbnMuY29udGV4dC5wYXRoLFxuXHQgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVBhdGg6IG9wdGlvbnMuY29udGV4dC50ZW1wbGF0ZVBhdGgsXG5cdCAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRDb250ZXh0OiByZXN1bHQsXG5cdCAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlQ3VycmVudENvbnRleHQ6IG9wdGlvbnMudGVtcGxhdGUsXG5cdCAgICAgICAgICAgICAgICAgICAgICAgIHJvb3Q6IG9wdGlvbnMuY29udGV4dC5yb290IHx8IHJlc3VsdCxcblx0ICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVSb290OiBvcHRpb25zLmNvbnRleHQudGVtcGxhdGVSb290IHx8IG9wdGlvbnMudGVtcGxhdGVcblx0ICAgICAgICAgICAgICAgICAgICB9KVxuXHQgICAgICAgICAgICAgICAgKVxuXHQgICAgICAgICAgICAgICAgb3B0aW9ucy5jb250ZXh0LnBhdGgucG9wKClcblx0ICAgICAgICAgICAgICAgIG9wdGlvbnMuY29udGV4dC50ZW1wbGF0ZVBhdGgucG9wKClcblx0ICAgICAgICAgICAgfVxuXHQgICAgICAgIH0gZWxzZSB7XG5cdCAgICAgICAgICAgIC8vICdtZXRob2R8MSc6IFsnR0VUJywgJ1BPU1QnLCAnSEVBRCcsICdERUxFVEUnXVxuXHQgICAgICAgICAgICBpZiAob3B0aW9ucy5ydWxlLm1pbiA9PT0gMSAmJiBvcHRpb25zLnJ1bGUubWF4ID09PSB1bmRlZmluZWQpIHtcblx0ICAgICAgICAgICAgICAgIC8vIGZpeCAjMTdcblx0ICAgICAgICAgICAgICAgIG9wdGlvbnMuY29udGV4dC5wYXRoLnB1c2gob3B0aW9ucy5uYW1lKVxuXHQgICAgICAgICAgICAgICAgb3B0aW9ucy5jb250ZXh0LnRlbXBsYXRlUGF0aC5wdXNoKG9wdGlvbnMubmFtZSlcblx0ICAgICAgICAgICAgICAgIHJlc3VsdCA9IFJhbmRvbS5waWNrKFxuXHQgICAgICAgICAgICAgICAgICAgIEhhbmRsZXIuZ2VuKG9wdGlvbnMudGVtcGxhdGUsIHVuZGVmaW5lZCwge1xuXHQgICAgICAgICAgICAgICAgICAgICAgICBwYXRoOiBvcHRpb25zLmNvbnRleHQucGF0aCxcblx0ICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVQYXRoOiBvcHRpb25zLmNvbnRleHQudGVtcGxhdGVQYXRoLFxuXHQgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50Q29udGV4dDogcmVzdWx0LFxuXHQgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZUN1cnJlbnRDb250ZXh0OiBvcHRpb25zLnRlbXBsYXRlLFxuXHQgICAgICAgICAgICAgICAgICAgICAgICByb290OiBvcHRpb25zLmNvbnRleHQucm9vdCB8fCByZXN1bHQsXG5cdCAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlUm9vdDogb3B0aW9ucy5jb250ZXh0LnRlbXBsYXRlUm9vdCB8fCBvcHRpb25zLnRlbXBsYXRlXG5cdCAgICAgICAgICAgICAgICAgICAgfSlcblx0ICAgICAgICAgICAgICAgIClcblx0ICAgICAgICAgICAgICAgIG9wdGlvbnMuY29udGV4dC5wYXRoLnBvcCgpXG5cdCAgICAgICAgICAgICAgICBvcHRpb25zLmNvbnRleHQudGVtcGxhdGVQYXRoLnBvcCgpXG5cdCAgICAgICAgICAgIH0gZWxzZSB7XG5cdCAgICAgICAgICAgICAgICAvLyAnZGF0YXwrMSc6IFt7fSwge31dXG5cdCAgICAgICAgICAgICAgICBpZiAob3B0aW9ucy5ydWxlLnBhcmFtZXRlcnNbMl0pIHtcblx0ICAgICAgICAgICAgICAgICAgICBvcHRpb25zLnRlbXBsYXRlLl9fb3JkZXJfaW5kZXggPSBvcHRpb25zLnRlbXBsYXRlLl9fb3JkZXJfaW5kZXggfHwgMFxuXG5cdCAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5jb250ZXh0LnBhdGgucHVzaChvcHRpb25zLm5hbWUpXG5cdCAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5jb250ZXh0LnRlbXBsYXRlUGF0aC5wdXNoKG9wdGlvbnMubmFtZSlcblx0ICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSBIYW5kbGVyLmdlbihvcHRpb25zLnRlbXBsYXRlLCB1bmRlZmluZWQsIHtcblx0ICAgICAgICAgICAgICAgICAgICAgICAgcGF0aDogb3B0aW9ucy5jb250ZXh0LnBhdGgsXG5cdCAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlUGF0aDogb3B0aW9ucy5jb250ZXh0LnRlbXBsYXRlUGF0aCxcblx0ICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudENvbnRleHQ6IHJlc3VsdCxcblx0ICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVDdXJyZW50Q29udGV4dDogb3B0aW9ucy50ZW1wbGF0ZSxcblx0ICAgICAgICAgICAgICAgICAgICAgICAgcm9vdDogb3B0aW9ucy5jb250ZXh0LnJvb3QgfHwgcmVzdWx0LFxuXHQgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVJvb3Q6IG9wdGlvbnMuY29udGV4dC50ZW1wbGF0ZVJvb3QgfHwgb3B0aW9ucy50ZW1wbGF0ZVxuXHQgICAgICAgICAgICAgICAgICAgIH0pW1xuXHQgICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25zLnRlbXBsYXRlLl9fb3JkZXJfaW5kZXggJSBvcHRpb25zLnRlbXBsYXRlLmxlbmd0aFxuXHQgICAgICAgICAgICAgICAgICAgIF1cblxuXHQgICAgICAgICAgICAgICAgICAgIG9wdGlvbnMudGVtcGxhdGUuX19vcmRlcl9pbmRleCArPSArb3B0aW9ucy5ydWxlLnBhcmFtZXRlcnNbMl1cblxuXHQgICAgICAgICAgICAgICAgICAgIG9wdGlvbnMuY29udGV4dC5wYXRoLnBvcCgpXG5cdCAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5jb250ZXh0LnRlbXBsYXRlUGF0aC5wb3AoKVxuXG5cdCAgICAgICAgICAgICAgICB9IGVsc2Uge1xuXHQgICAgICAgICAgICAgICAgICAgIC8vICdkYXRhfDEtMTAnOiBbe31dXG5cdCAgICAgICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IG9wdGlvbnMucnVsZS5jb3VudDsgaSsrKSB7XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIC8vICdkYXRhfDEtMTAnOiBbe30sIHt9XVxuXHQgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGlpID0gMDsgaWkgPCBvcHRpb25zLnRlbXBsYXRlLmxlbmd0aDsgaWkrKykge1xuXHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5jb250ZXh0LnBhdGgucHVzaChyZXN1bHQubGVuZ3RoKVxuXHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5jb250ZXh0LnRlbXBsYXRlUGF0aC5wdXNoKGlpKVxuXHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goXG5cdCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSGFuZGxlci5nZW4ob3B0aW9ucy50ZW1wbGF0ZVtpaV0sIHJlc3VsdC5sZW5ndGgsIHtcblx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF0aDogb3B0aW9ucy5jb250ZXh0LnBhdGgsXG5cdCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlUGF0aDogb3B0aW9ucy5jb250ZXh0LnRlbXBsYXRlUGF0aCxcblx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudENvbnRleHQ6IHJlc3VsdCxcblx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVDdXJyZW50Q29udGV4dDogb3B0aW9ucy50ZW1wbGF0ZSxcblx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm9vdDogb3B0aW9ucy5jb250ZXh0LnJvb3QgfHwgcmVzdWx0LFxuXHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVJvb3Q6IG9wdGlvbnMuY29udGV4dC50ZW1wbGF0ZVJvb3QgfHwgb3B0aW9ucy50ZW1wbGF0ZVxuXHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG5cdCAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG5cdCAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25zLmNvbnRleHQucGF0aC5wb3AoKVxuXHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5jb250ZXh0LnRlbXBsYXRlUGF0aC5wb3AoKVxuXHQgICAgICAgICAgICAgICAgICAgICAgICB9XG5cdCAgICAgICAgICAgICAgICAgICAgfVxuXHQgICAgICAgICAgICAgICAgfVxuXHQgICAgICAgICAgICB9XG5cdCAgICAgICAgfVxuXHQgICAgICAgIHJldHVybiByZXN1bHRcblx0ICAgIH0sXG5cdCAgICBvYmplY3Q6IGZ1bmN0aW9uKG9wdGlvbnMpIHtcblx0ICAgICAgICB2YXIgcmVzdWx0ID0ge30sXG5cdCAgICAgICAgICAgIGtleXMsIGZuS2V5cywga2V5LCBwYXJzZWRLZXksIGluYywgaTtcblxuXHQgICAgICAgIC8vICdvYmp8bWluLW1heCc6IHt9XG5cdCAgICAgICAgLyoganNoaW50IC1XMDQxICovXG5cdCAgICAgICAgaWYgKG9wdGlvbnMucnVsZS5taW4gIT0gdW5kZWZpbmVkKSB7XG5cdCAgICAgICAgICAgIGtleXMgPSBVdGlsLmtleXMob3B0aW9ucy50ZW1wbGF0ZSlcblx0ICAgICAgICAgICAga2V5cyA9IFJhbmRvbS5zaHVmZmxlKGtleXMpXG5cdCAgICAgICAgICAgIGtleXMgPSBrZXlzLnNsaWNlKDAsIG9wdGlvbnMucnVsZS5jb3VudClcblx0ICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcblx0ICAgICAgICAgICAgICAgIGtleSA9IGtleXNbaV1cblx0ICAgICAgICAgICAgICAgIHBhcnNlZEtleSA9IGtleS5yZXBsYWNlKENvbnN0YW50LlJFX0tFWSwgJyQxJylcblx0ICAgICAgICAgICAgICAgIG9wdGlvbnMuY29udGV4dC5wYXRoLnB1c2gocGFyc2VkS2V5KVxuXHQgICAgICAgICAgICAgICAgb3B0aW9ucy5jb250ZXh0LnRlbXBsYXRlUGF0aC5wdXNoKGtleSlcblx0ICAgICAgICAgICAgICAgIHJlc3VsdFtwYXJzZWRLZXldID0gSGFuZGxlci5nZW4ob3B0aW9ucy50ZW1wbGF0ZVtrZXldLCBrZXksIHtcblx0ICAgICAgICAgICAgICAgICAgICBwYXRoOiBvcHRpb25zLmNvbnRleHQucGF0aCxcblx0ICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVBhdGg6IG9wdGlvbnMuY29udGV4dC50ZW1wbGF0ZVBhdGgsXG5cdCAgICAgICAgICAgICAgICAgICAgY3VycmVudENvbnRleHQ6IHJlc3VsdCxcblx0ICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZUN1cnJlbnRDb250ZXh0OiBvcHRpb25zLnRlbXBsYXRlLFxuXHQgICAgICAgICAgICAgICAgICAgIHJvb3Q6IG9wdGlvbnMuY29udGV4dC5yb290IHx8IHJlc3VsdCxcblx0ICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVJvb3Q6IG9wdGlvbnMuY29udGV4dC50ZW1wbGF0ZVJvb3QgfHwgb3B0aW9ucy50ZW1wbGF0ZVxuXHQgICAgICAgICAgICAgICAgfSlcblx0ICAgICAgICAgICAgICAgIG9wdGlvbnMuY29udGV4dC5wYXRoLnBvcCgpXG5cdCAgICAgICAgICAgICAgICBvcHRpb25zLmNvbnRleHQudGVtcGxhdGVQYXRoLnBvcCgpXG5cdCAgICAgICAgICAgIH1cblxuXHQgICAgICAgIH0gZWxzZSB7XG5cdCAgICAgICAgICAgIC8vICdvYmonOiB7fVxuXHQgICAgICAgICAgICBrZXlzID0gW11cblx0ICAgICAgICAgICAgZm5LZXlzID0gW10gLy8gIzI1IOaUueWPmOS6humdnuWHveaVsOWxnuaAp+eahOmhuuW6j++8jOafpeaJvui1t+adpeS4jeaWueS+v1xuXHQgICAgICAgICAgICBmb3IgKGtleSBpbiBvcHRpb25zLnRlbXBsYXRlKSB7XG5cdCAgICAgICAgICAgICAgICAodHlwZW9mIG9wdGlvbnMudGVtcGxhdGVba2V5XSA9PT0gJ2Z1bmN0aW9uJyA/IGZuS2V5cyA6IGtleXMpLnB1c2goa2V5KVxuXHQgICAgICAgICAgICB9XG5cdCAgICAgICAgICAgIGtleXMgPSBrZXlzLmNvbmNhdChmbktleXMpXG5cblx0ICAgICAgICAgICAgLypcblx0ICAgICAgICAgICAgICAgIOS8muaUueWPmOmdnuWHveaVsOWxnuaAp+eahOmhuuW6j1xuXHQgICAgICAgICAgICAgICAga2V5cyA9IFV0aWwua2V5cyhvcHRpb25zLnRlbXBsYXRlKVxuXHQgICAgICAgICAgICAgICAga2V5cy5zb3J0KGZ1bmN0aW9uKGEsIGIpIHtcblx0ICAgICAgICAgICAgICAgICAgICB2YXIgYWZuID0gdHlwZW9mIG9wdGlvbnMudGVtcGxhdGVbYV0gPT09ICdmdW5jdGlvbidcblx0ICAgICAgICAgICAgICAgICAgICB2YXIgYmZuID0gdHlwZW9mIG9wdGlvbnMudGVtcGxhdGVbYl0gPT09ICdmdW5jdGlvbidcblx0ICAgICAgICAgICAgICAgICAgICBpZiAoYWZuID09PSBiZm4pIHJldHVybiAwXG5cdCAgICAgICAgICAgICAgICAgICAgaWYgKGFmbiAmJiAhYmZuKSByZXR1cm4gMVxuXHQgICAgICAgICAgICAgICAgICAgIGlmICghYWZuICYmIGJmbikgcmV0dXJuIC0xXG5cdCAgICAgICAgICAgICAgICB9KVxuXHQgICAgICAgICAgICAqL1xuXG5cdCAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG5cdCAgICAgICAgICAgICAgICBrZXkgPSBrZXlzW2ldXG5cdCAgICAgICAgICAgICAgICBwYXJzZWRLZXkgPSBrZXkucmVwbGFjZShDb25zdGFudC5SRV9LRVksICckMScpXG5cdCAgICAgICAgICAgICAgICBvcHRpb25zLmNvbnRleHQucGF0aC5wdXNoKHBhcnNlZEtleSlcblx0ICAgICAgICAgICAgICAgIG9wdGlvbnMuY29udGV4dC50ZW1wbGF0ZVBhdGgucHVzaChrZXkpXG5cdCAgICAgICAgICAgICAgICByZXN1bHRbcGFyc2VkS2V5XSA9IEhhbmRsZXIuZ2VuKG9wdGlvbnMudGVtcGxhdGVba2V5XSwga2V5LCB7XG5cdCAgICAgICAgICAgICAgICAgICAgcGF0aDogb3B0aW9ucy5jb250ZXh0LnBhdGgsXG5cdCAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVQYXRoOiBvcHRpb25zLmNvbnRleHQudGVtcGxhdGVQYXRoLFxuXHQgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRDb250ZXh0OiByZXN1bHQsXG5cdCAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVDdXJyZW50Q29udGV4dDogb3B0aW9ucy50ZW1wbGF0ZSxcblx0ICAgICAgICAgICAgICAgICAgICByb290OiBvcHRpb25zLmNvbnRleHQucm9vdCB8fCByZXN1bHQsXG5cdCAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVSb290OiBvcHRpb25zLmNvbnRleHQudGVtcGxhdGVSb290IHx8IG9wdGlvbnMudGVtcGxhdGVcblx0ICAgICAgICAgICAgICAgIH0pXG5cdCAgICAgICAgICAgICAgICBvcHRpb25zLmNvbnRleHQucGF0aC5wb3AoKVxuXHQgICAgICAgICAgICAgICAgb3B0aW9ucy5jb250ZXh0LnRlbXBsYXRlUGF0aC5wb3AoKVxuXHQgICAgICAgICAgICAgICAgICAgIC8vICdpZHwrMSc6IDFcblx0ICAgICAgICAgICAgICAgIGluYyA9IGtleS5tYXRjaChDb25zdGFudC5SRV9LRVkpXG5cdCAgICAgICAgICAgICAgICBpZiAoaW5jICYmIGluY1syXSAmJiBVdGlsLnR5cGUob3B0aW9ucy50ZW1wbGF0ZVtrZXldKSA9PT0gJ251bWJlcicpIHtcblx0ICAgICAgICAgICAgICAgICAgICBvcHRpb25zLnRlbXBsYXRlW2tleV0gKz0gcGFyc2VJbnQoaW5jWzJdLCAxMClcblx0ICAgICAgICAgICAgICAgIH1cblx0ICAgICAgICAgICAgfVxuXHQgICAgICAgIH1cblx0ICAgICAgICByZXR1cm4gcmVzdWx0XG5cdCAgICB9LFxuXHQgICAgbnVtYmVyOiBmdW5jdGlvbihvcHRpb25zKSB7XG5cdCAgICAgICAgdmFyIHJlc3VsdCwgcGFydHM7XG5cdCAgICAgICAgaWYgKG9wdGlvbnMucnVsZS5kZWNpbWFsKSB7IC8vIGZsb2F0XG5cdCAgICAgICAgICAgIG9wdGlvbnMudGVtcGxhdGUgKz0gJydcblx0ICAgICAgICAgICAgcGFydHMgPSBvcHRpb25zLnRlbXBsYXRlLnNwbGl0KCcuJylcblx0ICAgICAgICAgICAgICAgIC8vICdmbG9hdDF8LjEtMTAnOiAxMCxcblx0ICAgICAgICAgICAgICAgIC8vICdmbG9hdDJ8MS0xMDAuMS0xMCc6IDEsXG5cdCAgICAgICAgICAgICAgICAvLyAnZmxvYXQzfDk5OS4xLTEwJzogMSxcblx0ICAgICAgICAgICAgICAgIC8vICdmbG9hdDR8LjMtMTAnOiAxMjMuMTIzLFxuXHQgICAgICAgICAgICBwYXJ0c1swXSA9IG9wdGlvbnMucnVsZS5yYW5nZSA/IG9wdGlvbnMucnVsZS5jb3VudCA6IHBhcnRzWzBdXG5cdCAgICAgICAgICAgIHBhcnRzWzFdID0gKHBhcnRzWzFdIHx8ICcnKS5zbGljZSgwLCBvcHRpb25zLnJ1bGUuZGNvdW50KVxuXHQgICAgICAgICAgICB3aGlsZSAocGFydHNbMV0ubGVuZ3RoIDwgb3B0aW9ucy5ydWxlLmRjb3VudCkge1xuXHQgICAgICAgICAgICAgICAgcGFydHNbMV0gKz0gKFxuXHQgICAgICAgICAgICAgICAgICAgIC8vIOacgOWQjuS4gOS9jeS4jeiDveS4uiAw77ya5aaC5p6c5pyA5ZCO5LiA5L2N5Li6IDDvvIzkvJrooqsgSlMg5byV5pOO5b+955Wl5o6J44CCXG5cdCAgICAgICAgICAgICAgICAgICAgKHBhcnRzWzFdLmxlbmd0aCA8IG9wdGlvbnMucnVsZS5kY291bnQgLSAxKSA/IFJhbmRvbS5jaGFyYWN0ZXIoJ251bWJlcicpIDogUmFuZG9tLmNoYXJhY3RlcignMTIzNDU2Nzg5Jylcblx0ICAgICAgICAgICAgICAgIClcblx0ICAgICAgICAgICAgfVxuXHQgICAgICAgICAgICByZXN1bHQgPSBwYXJzZUZsb2F0KHBhcnRzLmpvaW4oJy4nKSwgMTApXG5cdCAgICAgICAgfSBlbHNlIHsgLy8gaW50ZWdlclxuXHQgICAgICAgICAgICAvLyAnZ3JhZGUxfDEtMTAwJzogMSxcblx0ICAgICAgICAgICAgcmVzdWx0ID0gb3B0aW9ucy5ydWxlLnJhbmdlICYmICFvcHRpb25zLnJ1bGUucGFyYW1ldGVyc1syXSA/IG9wdGlvbnMucnVsZS5jb3VudCA6IG9wdGlvbnMudGVtcGxhdGVcblx0ICAgICAgICB9XG5cdCAgICAgICAgcmV0dXJuIHJlc3VsdFxuXHQgICAgfSxcblx0ICAgIGJvb2xlYW46IGZ1bmN0aW9uKG9wdGlvbnMpIHtcblx0ICAgICAgICB2YXIgcmVzdWx0O1xuXHQgICAgICAgIC8vICdwcm9wfG11bHRpcGxlJzogZmFsc2UsIOW9k+WJjeWAvOaYr+ebuOWPjeWAvOeahOamgueOh+WAjeaVsFxuXHQgICAgICAgIC8vICdwcm9wfHByb2JhYmlsaXR5LXByb2JhYmlsaXR5JzogZmFsc2UsIOW9k+WJjeWAvOS4juebuOWPjeWAvOeahOamgueOh1xuXHQgICAgICAgIHJlc3VsdCA9IG9wdGlvbnMucnVsZS5wYXJhbWV0ZXJzID8gUmFuZG9tLmJvb2wob3B0aW9ucy5ydWxlLm1pbiwgb3B0aW9ucy5ydWxlLm1heCwgb3B0aW9ucy50ZW1wbGF0ZSkgOiBvcHRpb25zLnRlbXBsYXRlXG5cdCAgICAgICAgcmV0dXJuIHJlc3VsdFxuXHQgICAgfSxcblx0ICAgIHN0cmluZzogZnVuY3Rpb24ob3B0aW9ucykge1xuXHQgICAgICAgIHZhciByZXN1bHQgPSAnJyxcblx0ICAgICAgICAgICAgaSwgcGxhY2Vob2xkZXJzLCBwaCwgcGhlZDtcblx0ICAgICAgICBpZiAob3B0aW9ucy50ZW1wbGF0ZS5sZW5ndGgpIHtcblxuXHQgICAgICAgICAgICAvLyAgJ2Zvbyc6ICfimIUnLFxuXHQgICAgICAgICAgICAvKiBqc2hpbnQgLVcwNDEgKi9cblx0ICAgICAgICAgICAgaWYgKG9wdGlvbnMucnVsZS5jb3VudCA9PSB1bmRlZmluZWQpIHtcblx0ICAgICAgICAgICAgICAgIHJlc3VsdCArPSBvcHRpb25zLnRlbXBsYXRlXG5cdCAgICAgICAgICAgIH1cblxuXHQgICAgICAgICAgICAvLyAnc3RhcnwxLTUnOiAn4piFJyxcblx0ICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IG9wdGlvbnMucnVsZS5jb3VudDsgaSsrKSB7XG5cdCAgICAgICAgICAgICAgICByZXN1bHQgKz0gb3B0aW9ucy50ZW1wbGF0ZVxuXHQgICAgICAgICAgICB9XG5cdCAgICAgICAgICAgIC8vICdlbWFpbHwxLTEwJzogJ0BFTUFJTCwgJyxcblx0ICAgICAgICAgICAgcGxhY2Vob2xkZXJzID0gcmVzdWx0Lm1hdGNoKENvbnN0YW50LlJFX1BMQUNFSE9MREVSKSB8fCBbXSAvLyBBLVpfMC05ID4gXFx3X1xuXHQgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgcGxhY2Vob2xkZXJzLmxlbmd0aDsgaSsrKSB7XG5cdCAgICAgICAgICAgICAgICBwaCA9IHBsYWNlaG9sZGVyc1tpXVxuXG5cdCAgICAgICAgICAgICAgICAvLyDpgYfliLDovazkuYnmlpzmnaDvvIzkuI3pnIDopoHop6PmnpDljaDkvY3nrKZcblx0ICAgICAgICAgICAgICAgIGlmICgvXlxcXFwvLnRlc3QocGgpKSB7XG5cdCAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXJzLnNwbGljZShpLS0sIDEpXG5cdCAgICAgICAgICAgICAgICAgICAgY29udGludWVcblx0ICAgICAgICAgICAgICAgIH1cblxuXHQgICAgICAgICAgICAgICAgcGhlZCA9IEhhbmRsZXIucGxhY2Vob2xkZXIocGgsIG9wdGlvbnMuY29udGV4dC5jdXJyZW50Q29udGV4dCwgb3B0aW9ucy5jb250ZXh0LnRlbXBsYXRlQ3VycmVudENvbnRleHQsIG9wdGlvbnMpXG5cblx0ICAgICAgICAgICAgICAgIC8vIOWPquacieS4gOS4quWNoOS9jeespu+8jOW5tuS4lOayoeacieWFtuS7luWtl+esplxuXHQgICAgICAgICAgICAgICAgaWYgKHBsYWNlaG9sZGVycy5sZW5ndGggPT09IDEgJiYgcGggPT09IHJlc3VsdCAmJiB0eXBlb2YgcGhlZCAhPT0gdHlwZW9mIHJlc3VsdCkgeyAvLyBcblx0ICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSBwaGVkXG5cdCAgICAgICAgICAgICAgICAgICAgYnJlYWtcblxuXHQgICAgICAgICAgICAgICAgICAgIGlmIChVdGlsLmlzTnVtZXJpYyhwaGVkKSkge1xuXHQgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSBwYXJzZUZsb2F0KHBoZWQsIDEwKVxuXHQgICAgICAgICAgICAgICAgICAgICAgICBicmVha1xuXHQgICAgICAgICAgICAgICAgICAgIH1cblx0ICAgICAgICAgICAgICAgICAgICBpZiAoL14odHJ1ZXxmYWxzZSkkLy50ZXN0KHBoZWQpKSB7XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IHBoZWQgPT09ICd0cnVlJyA/IHRydWUgOlxuXHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGhlZCA9PT0gJ2ZhbHNlJyA/IGZhbHNlIDpcblx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBoZWQgLy8g5bey57uP5piv5biD5bCU5YC8XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrXG5cdCAgICAgICAgICAgICAgICAgICAgfVxuXHQgICAgICAgICAgICAgICAgfVxuXHQgICAgICAgICAgICAgICAgcmVzdWx0ID0gcmVzdWx0LnJlcGxhY2UocGgsIHBoZWQpXG5cdCAgICAgICAgICAgIH1cblxuXHQgICAgICAgIH0gZWxzZSB7XG5cdCAgICAgICAgICAgIC8vICdBU0NJSXwxLTEwJzogJycsXG5cdCAgICAgICAgICAgIC8vICdBU0NJSSc6ICcnLFxuXHQgICAgICAgICAgICByZXN1bHQgPSBvcHRpb25zLnJ1bGUucmFuZ2UgPyBSYW5kb20uc3RyaW5nKG9wdGlvbnMucnVsZS5jb3VudCkgOiBvcHRpb25zLnRlbXBsYXRlXG5cdCAgICAgICAgfVxuXHQgICAgICAgIHJldHVybiByZXN1bHRcblx0ICAgIH0sXG5cdCAgICAnZnVuY3Rpb24nOiBmdW5jdGlvbihvcHRpb25zKSB7XG5cdCAgICAgICAgLy8gKCBjb250ZXh0LCBvcHRpb25zIClcblx0ICAgICAgICByZXR1cm4gb3B0aW9ucy50ZW1wbGF0ZS5jYWxsKG9wdGlvbnMuY29udGV4dC5jdXJyZW50Q29udGV4dCwgb3B0aW9ucylcblx0ICAgIH0sXG5cdCAgICAncmVnZXhwJzogZnVuY3Rpb24ob3B0aW9ucykge1xuXHQgICAgICAgIHZhciBzb3VyY2UgPSAnJ1xuXG5cdCAgICAgICAgLy8gJ25hbWUnOiAvcmVnZXhwLyxcblx0ICAgICAgICAvKiBqc2hpbnQgLVcwNDEgKi9cblx0ICAgICAgICBpZiAob3B0aW9ucy5ydWxlLmNvdW50ID09IHVuZGVmaW5lZCkge1xuXHQgICAgICAgICAgICBzb3VyY2UgKz0gb3B0aW9ucy50ZW1wbGF0ZS5zb3VyY2UgLy8gcmVnZXhwLnNvdXJjZVxuXHQgICAgICAgIH1cblxuXHQgICAgICAgIC8vICduYW1lfDEtNSc6IC9yZWdleHAvLFxuXHQgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb3B0aW9ucy5ydWxlLmNvdW50OyBpKyspIHtcblx0ICAgICAgICAgICAgc291cmNlICs9IG9wdGlvbnMudGVtcGxhdGUuc291cmNlXG5cdCAgICAgICAgfVxuXG5cdCAgICAgICAgcmV0dXJuIFJFLkhhbmRsZXIuZ2VuKFxuXHQgICAgICAgICAgICBSRS5QYXJzZXIucGFyc2UoXG5cdCAgICAgICAgICAgICAgICBzb3VyY2Vcblx0ICAgICAgICAgICAgKVxuXHQgICAgICAgIClcblx0ICAgIH1cblx0fSlcblxuXHRIYW5kbGVyLmV4dGVuZCh7XG5cdCAgICBfYWxsOiBmdW5jdGlvbigpIHtcblx0ICAgICAgICB2YXIgcmUgPSB7fTtcblx0ICAgICAgICBmb3IgKHZhciBrZXkgaW4gUmFuZG9tKSByZVtrZXkudG9Mb3dlckNhc2UoKV0gPSBrZXlcblx0ICAgICAgICByZXR1cm4gcmVcblx0ICAgIH0sXG5cdCAgICAvLyDlpITnkIbljaDkvY3nrKbvvIzovazmjaLkuLrmnIDnu4jlgLxcblx0ICAgIHBsYWNlaG9sZGVyOiBmdW5jdGlvbihwbGFjZWhvbGRlciwgb2JqLCB0ZW1wbGF0ZUNvbnRleHQsIG9wdGlvbnMpIHtcblx0ICAgICAgICAvLyBjb25zb2xlLmxvZyhvcHRpb25zLmNvbnRleHQucGF0aClcblx0ICAgICAgICAvLyAxIGtleSwgMiBwYXJhbXNcblx0ICAgICAgICBDb25zdGFudC5SRV9QTEFDRUhPTERFUi5leGVjKCcnKVxuXHQgICAgICAgIHZhciBwYXJ0cyA9IENvbnN0YW50LlJFX1BMQUNFSE9MREVSLmV4ZWMocGxhY2Vob2xkZXIpLFxuXHQgICAgICAgICAgICBrZXkgPSBwYXJ0cyAmJiBwYXJ0c1sxXSxcblx0ICAgICAgICAgICAgbGtleSA9IGtleSAmJiBrZXkudG9Mb3dlckNhc2UoKSxcblx0ICAgICAgICAgICAgb2tleSA9IHRoaXMuX2FsbCgpW2xrZXldLFxuXHQgICAgICAgICAgICBwYXJhbXMgPSBwYXJ0cyAmJiBwYXJ0c1syXSB8fCAnJ1xuXHQgICAgICAgIHZhciBwYXRoUGFydHMgPSB0aGlzLnNwbGl0UGF0aFRvQXJyYXkoa2V5KVxuXG5cdCAgICAgICAgLy8g6Kej5p6Q5Y2g5L2N56ym55qE5Y+C5pWwXG5cdCAgICAgICAgdHJ5IHtcblx0ICAgICAgICAgICAgLy8gMS4g5bCd6K+V5L+d5oyB5Y+C5pWw55qE57G75Z6LXG5cdCAgICAgICAgICAgIC8qXG5cdCAgICAgICAgICAgICAgICAjMjQgW1dpbmRvdyBGaXJlZm94IDMwLjAg5byV55SoIOWNoOS9jeespiDmipvplJldKGh0dHBzOi8vZ2l0aHViLmNvbS9udXlzb2Z0L01vY2svaXNzdWVzLzI0KVxuXHQgICAgICAgICAgICAgICAgW0JYOTA1Njog5ZCE5rWP6KeI5Zmo5LiLIHdpbmRvdy5ldmFsIOaWueazleeahOaJp+ihjOS4iuS4i+aWh+WtmOWcqOW3ruW8gl0oaHR0cDovL3d3dy53M2hlbHAub3JnL3poLWNuL2NhdXNlcy9CWDkwNTYpXG5cdCAgICAgICAgICAgICAgICDlupTor6XlsZ7kuo4gV2luZG93IEZpcmVmb3ggMzAuMCDnmoQgQlVHXG5cdCAgICAgICAgICAgICovXG5cdCAgICAgICAgICAgIC8qIGpzaGludCAtVzA2MSAqL1xuXHQgICAgICAgICAgICBwYXJhbXMgPSBldmFsKCcoZnVuY3Rpb24oKXsgcmV0dXJuIFtdLnNwbGljZS5jYWxsKGFyZ3VtZW50cywgMCApIH0pKCcgKyBwYXJhbXMgKyAnKScpXG5cdCAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcblx0ICAgICAgICAgICAgLy8gMi4g5aaC5p6c5aSx6LSl77yM5Y+q6IO96Kej5p6Q5Li65a2X56ym5LiyXG5cdCAgICAgICAgICAgIC8vIGNvbnNvbGUuZXJyb3IoZXJyb3IpXG5cdCAgICAgICAgICAgIC8vIGlmIChlcnJvciBpbnN0YW5jZW9mIFJlZmVyZW5jZUVycm9yKSBwYXJhbXMgPSBwYXJ0c1syXS5zcGxpdCgvLFxccyovKTtcblx0ICAgICAgICAgICAgLy8gZWxzZSB0aHJvdyBlcnJvclxuXHQgICAgICAgICAgICBwYXJhbXMgPSBwYXJ0c1syXS5zcGxpdCgvLFxccyovKVxuXHQgICAgICAgIH1cblxuXHQgICAgICAgIC8vIOWNoOS9jeespuS8mOWFiOW8leeUqOaVsOaNruaooeadv+S4reeahOWxnuaAp1xuXHQgICAgICAgIGlmIChvYmogJiYgKGtleSBpbiBvYmopKSByZXR1cm4gb2JqW2tleV1cblxuXHQgICAgICAgIC8vIEBpbmRleCBAa2V5XG5cdCAgICAgICAgLy8gaWYgKENvbnN0YW50LlJFX0lOREVYLnRlc3Qoa2V5KSkgcmV0dXJuICtvcHRpb25zLm5hbWVcblx0ICAgICAgICAvLyBpZiAoQ29uc3RhbnQuUkVfS0VZLnRlc3Qoa2V5KSkgcmV0dXJuIG9wdGlvbnMubmFtZVxuXG5cdCAgICAgICAgLy8g57ud5a+56Lev5b6EIG9yIOebuOWvuei3r+W+hFxuXHQgICAgICAgIGlmIChcblx0ICAgICAgICAgICAga2V5LmNoYXJBdCgwKSA9PT0gJy8nIHx8XG5cdCAgICAgICAgICAgIHBhdGhQYXJ0cy5sZW5ndGggPiAxXG5cdCAgICAgICAgKSByZXR1cm4gdGhpcy5nZXRWYWx1ZUJ5S2V5UGF0aChrZXksIG9wdGlvbnMpXG5cblx0ICAgICAgICAvLyDpgJLlvZLlvJXnlKjmlbDmja7mqKHmnb/kuK3nmoTlsZ7mgKdcblx0ICAgICAgICBpZiAodGVtcGxhdGVDb250ZXh0ICYmXG5cdCAgICAgICAgICAgICh0eXBlb2YgdGVtcGxhdGVDb250ZXh0ID09PSAnb2JqZWN0JykgJiZcblx0ICAgICAgICAgICAgKGtleSBpbiB0ZW1wbGF0ZUNvbnRleHQpICYmXG5cdCAgICAgICAgICAgIChwbGFjZWhvbGRlciAhPT0gdGVtcGxhdGVDb250ZXh0W2tleV0pIC8vIGZpeCAjMTUg6YG/5YWN6Ieq5bex5L6d6LWW6Ieq5bexXG5cdCAgICAgICAgKSB7XG5cdCAgICAgICAgICAgIC8vIOWFiOiuoeeul+iiq+W8leeUqOeahOWxnuaAp+WAvFxuXHQgICAgICAgICAgICB0ZW1wbGF0ZUNvbnRleHRba2V5XSA9IEhhbmRsZXIuZ2VuKHRlbXBsYXRlQ29udGV4dFtrZXldLCBrZXksIHtcblx0ICAgICAgICAgICAgICAgIGN1cnJlbnRDb250ZXh0OiBvYmosXG5cdCAgICAgICAgICAgICAgICB0ZW1wbGF0ZUN1cnJlbnRDb250ZXh0OiB0ZW1wbGF0ZUNvbnRleHRcblx0ICAgICAgICAgICAgfSlcblx0ICAgICAgICAgICAgcmV0dXJuIHRlbXBsYXRlQ29udGV4dFtrZXldXG5cdCAgICAgICAgfVxuXG5cdCAgICAgICAgLy8g5aaC5p6c5pyq5om+5Yiw77yM5YiZ5Y6f5qC36L+U5ZueXG5cdCAgICAgICAgaWYgKCEoa2V5IGluIFJhbmRvbSkgJiYgIShsa2V5IGluIFJhbmRvbSkgJiYgIShva2V5IGluIFJhbmRvbSkpIHJldHVybiBwbGFjZWhvbGRlclxuXG5cdCAgICAgICAgLy8g6YCS5b2S6Kej5p6Q5Y+C5pWw5Lit55qE5Y2g5L2N56ymXG5cdCAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXJhbXMubGVuZ3RoOyBpKyspIHtcblx0ICAgICAgICAgICAgQ29uc3RhbnQuUkVfUExBQ0VIT0xERVIuZXhlYygnJylcblx0ICAgICAgICAgICAgaWYgKENvbnN0YW50LlJFX1BMQUNFSE9MREVSLnRlc3QocGFyYW1zW2ldKSkge1xuXHQgICAgICAgICAgICAgICAgcGFyYW1zW2ldID0gSGFuZGxlci5wbGFjZWhvbGRlcihwYXJhbXNbaV0sIG9iaiwgdGVtcGxhdGVDb250ZXh0LCBvcHRpb25zKVxuXHQgICAgICAgICAgICB9XG5cdCAgICAgICAgfVxuXG5cdCAgICAgICAgdmFyIGhhbmRsZSA9IFJhbmRvbVtrZXldIHx8IFJhbmRvbVtsa2V5XSB8fCBSYW5kb21bb2tleV1cblx0ICAgICAgICBzd2l0Y2ggKFV0aWwudHlwZShoYW5kbGUpKSB7XG5cdCAgICAgICAgICAgIGNhc2UgJ2FycmF5Jzpcblx0ICAgICAgICAgICAgICAgIC8vIOiHquWKqOS7juaVsOe7hOS4reWPluS4gOS4qu+8jOS+i+WmgiBAYXJlYXNcblx0ICAgICAgICAgICAgICAgIHJldHVybiBSYW5kb20ucGljayhoYW5kbGUpXG5cdCAgICAgICAgICAgIGNhc2UgJ2Z1bmN0aW9uJzpcblx0ICAgICAgICAgICAgICAgIC8vIOaJp+ihjOWNoOS9jeespuaWueazle+8iOWkp+WkmuaVsOaDheWGte+8iVxuXHQgICAgICAgICAgICAgICAgaGFuZGxlLm9wdGlvbnMgPSBvcHRpb25zXG5cdCAgICAgICAgICAgICAgICB2YXIgcmUgPSBoYW5kbGUuYXBwbHkoUmFuZG9tLCBwYXJhbXMpXG5cdCAgICAgICAgICAgICAgICBpZiAocmUgPT09IHVuZGVmaW5lZCkgcmUgPSAnJyAvLyDlm6DkuLrmmK/lnKjlrZfnrKbkuLLkuK3vvIzmiYDku6Xpu5jorqTkuLrnqbrlrZfnrKbkuLLjgIJcblx0ICAgICAgICAgICAgICAgIGRlbGV0ZSBoYW5kbGUub3B0aW9uc1xuXHQgICAgICAgICAgICAgICAgcmV0dXJuIHJlXG5cdCAgICAgICAgfVxuXHQgICAgfSxcblx0ICAgIGdldFZhbHVlQnlLZXlQYXRoOiBmdW5jdGlvbihrZXksIG9wdGlvbnMpIHtcblx0ICAgICAgICB2YXIgb3JpZ2luYWxLZXkgPSBrZXlcblx0ICAgICAgICB2YXIga2V5UGF0aFBhcnRzID0gdGhpcy5zcGxpdFBhdGhUb0FycmF5KGtleSlcblx0ICAgICAgICB2YXIgYWJzb2x1dGVQYXRoUGFydHMgPSBbXVxuXG5cdCAgICAgICAgLy8g57ud5a+56Lev5b6EXG5cdCAgICAgICAgaWYgKGtleS5jaGFyQXQoMCkgPT09ICcvJykge1xuXHQgICAgICAgICAgICBhYnNvbHV0ZVBhdGhQYXJ0cyA9IFtvcHRpb25zLmNvbnRleHQucGF0aFswXV0uY29uY2F0KFxuXHQgICAgICAgICAgICAgICAgdGhpcy5ub3JtYWxpemVQYXRoKGtleVBhdGhQYXJ0cylcblx0ICAgICAgICAgICAgKVxuXHQgICAgICAgIH0gZWxzZSB7XG5cdCAgICAgICAgICAgIC8vIOebuOWvuei3r+W+hFxuXHQgICAgICAgICAgICBpZiAoa2V5UGF0aFBhcnRzLmxlbmd0aCA+IDEpIHtcblx0ICAgICAgICAgICAgICAgIGFic29sdXRlUGF0aFBhcnRzID0gb3B0aW9ucy5jb250ZXh0LnBhdGguc2xpY2UoMClcblx0ICAgICAgICAgICAgICAgIGFic29sdXRlUGF0aFBhcnRzLnBvcCgpXG5cdCAgICAgICAgICAgICAgICBhYnNvbHV0ZVBhdGhQYXJ0cyA9IHRoaXMubm9ybWFsaXplUGF0aChcblx0ICAgICAgICAgICAgICAgICAgICBhYnNvbHV0ZVBhdGhQYXJ0cy5jb25jYXQoa2V5UGF0aFBhcnRzKVxuXHQgICAgICAgICAgICAgICAgKVxuXG5cdCAgICAgICAgICAgIH1cblx0ICAgICAgICB9XG5cblx0ICAgICAgICB0cnkge1xuXHQgICAgICAgICAgICBrZXkgPSBrZXlQYXRoUGFydHNba2V5UGF0aFBhcnRzLmxlbmd0aCAtIDFdXG5cdCAgICAgICAgICAgIHZhciBjdXJyZW50Q29udGV4dCA9IG9wdGlvbnMuY29udGV4dC5yb290XG5cdCAgICAgICAgICAgIHZhciB0ZW1wbGF0ZUN1cnJlbnRDb250ZXh0ID0gb3B0aW9ucy5jb250ZXh0LnRlbXBsYXRlUm9vdFxuXHQgICAgICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFic29sdXRlUGF0aFBhcnRzLmxlbmd0aCAtIDE7IGkrKykge1xuXHQgICAgICAgICAgICAgICAgY3VycmVudENvbnRleHQgPSBjdXJyZW50Q29udGV4dFthYnNvbHV0ZVBhdGhQYXJ0c1tpXV1cblx0ICAgICAgICAgICAgICAgIHRlbXBsYXRlQ3VycmVudENvbnRleHQgPSB0ZW1wbGF0ZUN1cnJlbnRDb250ZXh0W2Fic29sdXRlUGF0aFBhcnRzW2ldXVxuXHQgICAgICAgICAgICB9XG5cdCAgICAgICAgICAgIC8vIOW8leeUqOeahOWAvOW3sue7j+iuoeeul+WlvVxuXHQgICAgICAgICAgICBpZiAoY3VycmVudENvbnRleHQgJiYgKGtleSBpbiBjdXJyZW50Q29udGV4dCkpIHJldHVybiBjdXJyZW50Q29udGV4dFtrZXldXG5cdCAgICBcblx0ICAgICAgICAgICAgLy8g5bCa5pyq6K6h566X77yM6YCS5b2S5byV55So5pWw5o2u5qih5p2/5Lit55qE5bGe5oCnXG5cdCAgICAgICAgICAgIGlmICh0ZW1wbGF0ZUN1cnJlbnRDb250ZXh0ICYmXG5cdCAgICAgICAgICAgICAgICAodHlwZW9mIHRlbXBsYXRlQ3VycmVudENvbnRleHQgPT09ICdvYmplY3QnKSAmJlxuXHQgICAgICAgICAgICAgICAgKGtleSBpbiB0ZW1wbGF0ZUN1cnJlbnRDb250ZXh0KSAmJlxuXHQgICAgICAgICAgICAgICAgKG9yaWdpbmFsS2V5ICE9PSB0ZW1wbGF0ZUN1cnJlbnRDb250ZXh0W2tleV0pIC8vIGZpeCAjMTUg6YG/5YWN6Ieq5bex5L6d6LWW6Ieq5bexXG5cdCAgICAgICAgICAgICkge1xuXHQgICAgICAgICAgICAgICAgLy8g5YWI6K6h566X6KKr5byV55So55qE5bGe5oCn5YC8XG5cdCAgICAgICAgICAgICAgICB0ZW1wbGF0ZUN1cnJlbnRDb250ZXh0W2tleV0gPSBIYW5kbGVyLmdlbih0ZW1wbGF0ZUN1cnJlbnRDb250ZXh0W2tleV0sIGtleSwge1xuXHQgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRDb250ZXh0OiBjdXJyZW50Q29udGV4dCxcblx0ICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZUN1cnJlbnRDb250ZXh0OiB0ZW1wbGF0ZUN1cnJlbnRDb250ZXh0XG5cdCAgICAgICAgICAgICAgICB9KVxuXHQgICAgICAgICAgICAgICAgcmV0dXJuIHRlbXBsYXRlQ3VycmVudENvbnRleHRba2V5XVxuXHQgICAgICAgICAgICB9XG5cdCAgICAgICAgfSBjYXRjaChlcnIpIHsgfVxuXG5cdCAgICAgICAgcmV0dXJuICdAJyArIGtleVBhdGhQYXJ0cy5qb2luKCcvJylcblx0ICAgIH0sXG5cdCAgICAvLyBodHRwczovL2dpdGh1Yi5jb20va2lzc3l0ZWFtL2tpc3N5L2Jsb2IvbWFzdGVyL3NyYy9wYXRoL3NyYy9wYXRoLmpzXG5cdCAgICBub3JtYWxpemVQYXRoOiBmdW5jdGlvbihwYXRoUGFydHMpIHtcblx0ICAgICAgICB2YXIgbmV3UGF0aFBhcnRzID0gW11cblx0ICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBhdGhQYXJ0cy5sZW5ndGg7IGkrKykge1xuXHQgICAgICAgICAgICBzd2l0Y2ggKHBhdGhQYXJ0c1tpXSkge1xuXHQgICAgICAgICAgICAgICAgY2FzZSAnLi4nOlxuXHQgICAgICAgICAgICAgICAgICAgIG5ld1BhdGhQYXJ0cy5wb3AoKVxuXHQgICAgICAgICAgICAgICAgICAgIGJyZWFrXG5cdCAgICAgICAgICAgICAgICBjYXNlICcuJzpcblx0ICAgICAgICAgICAgICAgICAgICBicmVha1xuXHQgICAgICAgICAgICAgICAgZGVmYXVsdDpcblx0ICAgICAgICAgICAgICAgICAgICBuZXdQYXRoUGFydHMucHVzaChwYXRoUGFydHNbaV0pXG5cdCAgICAgICAgICAgIH1cblx0ICAgICAgICB9XG5cdCAgICAgICAgcmV0dXJuIG5ld1BhdGhQYXJ0c1xuXHQgICAgfSxcblx0ICAgIHNwbGl0UGF0aFRvQXJyYXk6IGZ1bmN0aW9uKHBhdGgpIHtcblx0ICAgICAgICB2YXIgcGFydHMgPSBwYXRoLnNwbGl0KC9cXC8rLyk7XG5cdCAgICAgICAgaWYgKCFwYXJ0c1twYXJ0cy5sZW5ndGggLSAxXSkgcGFydHMgPSBwYXJ0cy5zbGljZSgwLCAtMSlcblx0ICAgICAgICBpZiAoIXBhcnRzWzBdKSBwYXJ0cyA9IHBhcnRzLnNsaWNlKDEpXG5cdCAgICAgICAgcmV0dXJuIHBhcnRzO1xuXHQgICAgfVxuXHR9KVxuXG5cdG1vZHVsZS5leHBvcnRzID0gSGFuZGxlclxuXG4vKioqLyB9KSxcbi8qIDIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuXHQvKlxuXHQgICAgIyMgQ29uc3RhbnRcblxuXHQgICAg5bi46YeP6ZuG5ZCI44CCXG5cdCAqL1xuXHQvKlxuXHQgICAgUkVfS0VZXG5cdCAgICAgICAgJ25hbWV8bWluLW1heCc6IHZhbHVlXG5cdCAgICAgICAgJ25hbWV8Y291bnQnOiB2YWx1ZVxuXHQgICAgICAgICduYW1lfG1pbi1tYXguZG1pbi1kbWF4JzogdmFsdWVcblx0ICAgICAgICAnbmFtZXxtaW4tbWF4LmRjb3VudCc6IHZhbHVlXG5cdCAgICAgICAgJ25hbWV8Y291bnQuZG1pbi1kbWF4JzogdmFsdWVcblx0ICAgICAgICAnbmFtZXxjb3VudC5kY291bnQnOiB2YWx1ZVxuXHQgICAgICAgICduYW1lfCtzdGVwJzogdmFsdWVcblxuXHQgICAgICAgIDEgbmFtZSwgMiBzdGVwLCAzIHJhbmdlIFsgbWluLCBtYXggXSwgNCBkcmFuZ2UgWyBkbWluLCBkbWF4IF1cblxuXHQgICAgUkVfUExBQ0VIT0xERVJcblx0ICAgICAgICBwbGFjZWhvbGRlcigqKVxuXG5cdCAgICBb5q2j5YiZ5p+l55yL5bel5YW3XShodHRwOi8vd3d3LnJlZ2V4cGVyLmNvbS8pXG5cblx0ICAgICMyNiDnlJ/miJDop4TliJkg5pSv5oyBIOi0n+aVsO+8jOS+i+WmgiBudW1iZXJ8LTEwMC0xMDBcblx0Ki9cblx0bW9kdWxlLmV4cG9ydHMgPSB7XG5cdCAgICBHVUlEOiAxLFxuXHQgICAgUkVfS0VZOiAvKC4rKVxcfCg/OlxcKyhcXGQrKXwoW1xcK1xcLV0/XFxkKy0/W1xcK1xcLV0/XFxkKik/KD86XFwuKFxcZCstP1xcZCopKT8pLyxcblx0ICAgIFJFX1JBTkdFOiAvKFtcXCtcXC1dP1xcZCspLT8oW1xcK1xcLV0/XFxkKyk/Lyxcblx0ICAgIFJFX1BMQUNFSE9MREVSOiAvXFxcXCpAKFteQCMlJigpXFw/XFxzXSspKD86XFwoKC4qPylcXCkpPy9nXG5cdCAgICAvLyAvXFxcXCpAKFteQCMlJigpXFw/XFxzXFwvXFwuXSspKD86XFwoKC4qPylcXCkpPy9nXG5cdCAgICAvLyBSRV9JTkRFWDogL15pbmRleCQvLFxuXHQgICAgLy8gUkVfS0VZOiAvXmtleSQvXG5cdH1cblxuLyoqKi8gfSksXG4vKiAzICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cblx0Lypcblx0ICAgICMjIFV0aWxpdGllc1xuXHQqL1xuXHR2YXIgVXRpbCA9IHt9XG5cblx0VXRpbC5leHRlbmQgPSBmdW5jdGlvbiBleHRlbmQoKSB7XG5cdCAgICB2YXIgdGFyZ2V0ID0gYXJndW1lbnRzWzBdIHx8IHt9LFxuXHQgICAgICAgIGkgPSAxLFxuXHQgICAgICAgIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGgsXG5cdCAgICAgICAgb3B0aW9ucywgbmFtZSwgc3JjLCBjb3B5LCBjbG9uZVxuXG5cdCAgICBpZiAobGVuZ3RoID09PSAxKSB7XG5cdCAgICAgICAgdGFyZ2V0ID0gdGhpc1xuXHQgICAgICAgIGkgPSAwXG5cdCAgICB9XG5cblx0ICAgIGZvciAoOyBpIDwgbGVuZ3RoOyBpKyspIHtcblx0ICAgICAgICBvcHRpb25zID0gYXJndW1lbnRzW2ldXG5cdCAgICAgICAgaWYgKCFvcHRpb25zKSBjb250aW51ZVxuXG5cdCAgICAgICAgZm9yIChuYW1lIGluIG9wdGlvbnMpIHtcblx0ICAgICAgICAgICAgc3JjID0gdGFyZ2V0W25hbWVdXG5cdCAgICAgICAgICAgIGNvcHkgPSBvcHRpb25zW25hbWVdXG5cblx0ICAgICAgICAgICAgaWYgKHRhcmdldCA9PT0gY29weSkgY29udGludWVcblx0ICAgICAgICAgICAgaWYgKGNvcHkgPT09IHVuZGVmaW5lZCkgY29udGludWVcblxuXHQgICAgICAgICAgICBpZiAoVXRpbC5pc0FycmF5KGNvcHkpIHx8IFV0aWwuaXNPYmplY3QoY29weSkpIHtcblx0ICAgICAgICAgICAgICAgIGlmIChVdGlsLmlzQXJyYXkoY29weSkpIGNsb25lID0gc3JjICYmIFV0aWwuaXNBcnJheShzcmMpID8gc3JjIDogW11cblx0ICAgICAgICAgICAgICAgIGlmIChVdGlsLmlzT2JqZWN0KGNvcHkpKSBjbG9uZSA9IHNyYyAmJiBVdGlsLmlzT2JqZWN0KHNyYykgPyBzcmMgOiB7fVxuXG5cdCAgICAgICAgICAgICAgICB0YXJnZXRbbmFtZV0gPSBVdGlsLmV4dGVuZChjbG9uZSwgY29weSlcblx0ICAgICAgICAgICAgfSBlbHNlIHtcblx0ICAgICAgICAgICAgICAgIHRhcmdldFtuYW1lXSA9IGNvcHlcblx0ICAgICAgICAgICAgfVxuXHQgICAgICAgIH1cblx0ICAgIH1cblxuXHQgICAgcmV0dXJuIHRhcmdldFxuXHR9XG5cblx0VXRpbC5lYWNoID0gZnVuY3Rpb24gZWFjaChvYmosIGl0ZXJhdG9yLCBjb250ZXh0KSB7XG5cdCAgICB2YXIgaSwga2V5XG5cdCAgICBpZiAodGhpcy50eXBlKG9iaikgPT09ICdudW1iZXInKSB7XG5cdCAgICAgICAgZm9yIChpID0gMDsgaSA8IG9iajsgaSsrKSB7XG5cdCAgICAgICAgICAgIGl0ZXJhdG9yKGksIGkpXG5cdCAgICAgICAgfVxuXHQgICAgfSBlbHNlIGlmIChvYmoubGVuZ3RoID09PSArb2JqLmxlbmd0aCkge1xuXHQgICAgICAgIGZvciAoaSA9IDA7IGkgPCBvYmoubGVuZ3RoOyBpKyspIHtcblx0ICAgICAgICAgICAgaWYgKGl0ZXJhdG9yLmNhbGwoY29udGV4dCwgb2JqW2ldLCBpLCBvYmopID09PSBmYWxzZSkgYnJlYWtcblx0ICAgICAgICB9XG5cdCAgICB9IGVsc2Uge1xuXHQgICAgICAgIGZvciAoa2V5IGluIG9iaikge1xuXHQgICAgICAgICAgICBpZiAoaXRlcmF0b3IuY2FsbChjb250ZXh0LCBvYmpba2V5XSwga2V5LCBvYmopID09PSBmYWxzZSkgYnJlYWtcblx0ICAgICAgICB9XG5cdCAgICB9XG5cdH1cblxuXHRVdGlsLnR5cGUgPSBmdW5jdGlvbiB0eXBlKG9iaikge1xuXHQgICAgcmV0dXJuIChvYmogPT09IG51bGwgfHwgb2JqID09PSB1bmRlZmluZWQpID8gU3RyaW5nKG9iaikgOiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwob2JqKS5tYXRjaCgvXFxbb2JqZWN0IChcXHcrKVxcXS8pWzFdLnRvTG93ZXJDYXNlKClcblx0fVxuXG5cdFV0aWwuZWFjaCgnU3RyaW5nIE9iamVjdCBBcnJheSBSZWdFeHAgRnVuY3Rpb24nLnNwbGl0KCcgJyksIGZ1bmN0aW9uKHZhbHVlKSB7XG5cdCAgICBVdGlsWydpcycgKyB2YWx1ZV0gPSBmdW5jdGlvbihvYmopIHtcblx0ICAgICAgICByZXR1cm4gVXRpbC50eXBlKG9iaikgPT09IHZhbHVlLnRvTG93ZXJDYXNlKClcblx0ICAgIH1cblx0fSlcblxuXHRVdGlsLmlzT2JqZWN0T3JBcnJheSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG5cdCAgICByZXR1cm4gVXRpbC5pc09iamVjdCh2YWx1ZSkgfHwgVXRpbC5pc0FycmF5KHZhbHVlKVxuXHR9XG5cblx0VXRpbC5pc051bWVyaWMgPSBmdW5jdGlvbih2YWx1ZSkge1xuXHQgICAgcmV0dXJuICFpc05hTihwYXJzZUZsb2F0KHZhbHVlKSkgJiYgaXNGaW5pdGUodmFsdWUpXG5cdH1cblxuXHRVdGlsLmtleXMgPSBmdW5jdGlvbihvYmopIHtcblx0ICAgIHZhciBrZXlzID0gW107XG5cdCAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG5cdCAgICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrZXkpKSBrZXlzLnB1c2goa2V5KVxuXHQgICAgfVxuXHQgICAgcmV0dXJuIGtleXM7XG5cdH1cblx0VXRpbC52YWx1ZXMgPSBmdW5jdGlvbihvYmopIHtcblx0ICAgIHZhciB2YWx1ZXMgPSBbXTtcblx0ICAgIGZvciAodmFyIGtleSBpbiBvYmopIHtcblx0ICAgICAgICBpZiAob2JqLmhhc093blByb3BlcnR5KGtleSkpIHZhbHVlcy5wdXNoKG9ialtrZXldKVxuXHQgICAgfVxuXHQgICAgcmV0dXJuIHZhbHVlcztcblx0fVxuXG5cdC8qXG5cdCAgICAjIyMgTW9jay5oZXJlZG9jKGZuKVxuXG5cdCAgICAqIE1vY2suaGVyZWRvYyhmbilcblxuXHQgICAg5Lul55u06KeC44CB5a6J5YWo55qE5pa55byP5Lmm5YaZ77yI5aSa6KGM77yJSFRNTCDmqKHmnb/jgIJcblxuXHQgICAgKirkvb/nlKjnpLrkvosqKuWmguS4i+aJgOekuu+8mlxuXG5cdCAgICAgICAgdmFyIHRwbCA9IE1vY2suaGVyZWRvYyhmdW5jdGlvbigpIHtcblx0ICAgICAgICAgICAgLyohXG5cdCAgICAgICAge3tlbWFpbH19e3thZ2V9fVxuXHQgICAgICAgIDwhLS0gTW9jayB7IFxuXHQgICAgICAgICAgICBlbWFpbDogJ0BFTUFJTCcsXG5cdCAgICAgICAgICAgIGFnZTogJ0BJTlQoMSwxMDApJ1xuXHQgICAgICAgIH0gLS0+XG5cdCAgICAgICAgICAgICpcXC9cblx0ICAgICAgICB9KVxuXHQgICAgXG5cdCAgICAqKuebuOWFs+mYheivuyoqXG5cdCAgICAqIFtDcmVhdGluZyBtdWx0aWxpbmUgc3RyaW5ncyBpbiBKYXZhU2NyaXB0XShodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzgwNTEwNy9jcmVhdGluZy1tdWx0aWxpbmUtc3RyaW5ncy1pbi1qYXZhc2NyaXB0KeOAgVxuXHQqL1xuXHRVdGlsLmhlcmVkb2MgPSBmdW5jdGlvbiBoZXJlZG9jKGZuKSB7XG5cdCAgICAvLyAxLiDnp7vpmaTotbflp4vnmoQgZnVuY3Rpb24oKXsgLyohXG5cdCAgICAvLyAyLiDnp7vpmaTmnKvlsL7nmoQgKi8gfVxuXHQgICAgLy8gMy4g56e76Zmk6LW35aeL5ZKM5pyr5bC+55qE56m65qC8XG5cdCAgICByZXR1cm4gZm4udG9TdHJpbmcoKVxuXHQgICAgICAgIC5yZXBsYWNlKC9eW15cXC9dK1xcL1xcKiE/LywgJycpXG5cdCAgICAgICAgLnJlcGxhY2UoL1xcKlxcL1teXFwvXSskLywgJycpXG5cdCAgICAgICAgLnJlcGxhY2UoL15bXFxzXFx4QTBdKy8sICcnKS5yZXBsYWNlKC9bXFxzXFx4QTBdKyQvLCAnJykgLy8gLnRyaW0oKVxuXHR9XG5cblx0VXRpbC5ub29wID0gZnVuY3Rpb24oKSB7fVxuXG5cdG1vZHVsZS5leHBvcnRzID0gVXRpbFxuXG4vKioqLyB9KSxcbi8qIDQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXHQvKlxuXHRcdCMjIFBhcnNlclxuXG5cdFx06Kej5p6Q5pWw5o2u5qih5p2/77yI5bGe5oCn5ZCN6YOo5YiG77yJ44CCXG5cblx0XHQqIFBhcnNlci5wYXJzZSggbmFtZSApXG5cdFx0XHRcblx0XHRcdGBgYGpzb25cblx0XHRcdHtcblx0XHRcdFx0cGFyYW1ldGVyczogWyBuYW1lLCBpbmMsIHJhbmdlLCBkZWNpbWFsIF0sXG5cdFx0XHRcdHJuYWdlOiBbIG1pbiAsIG1heCBdLFxuXG5cdFx0XHRcdG1pbjogbWluLFxuXHRcdFx0XHRtYXg6IG1heCxcblx0XHRcdFx0Y291bnQgOiBjb3VudCxcblxuXHRcdFx0XHRkZWNpbWFsOiBkZWNpbWFsLFxuXHRcdFx0XHRkbWluOiBkbWluLFxuXHRcdFx0XHRkbWF4OiBkbWF4LFxuXHRcdFx0XHRkY291bnQ6IGRjb3VudFxuXHRcdFx0fVxuXHRcdFx0YGBgXG5cdCAqL1xuXG5cdHZhciBDb25zdGFudCA9IF9fd2VicGFja19yZXF1aXJlX18oMilcblx0dmFyIFJhbmRvbSA9IF9fd2VicGFja19yZXF1aXJlX18oNSlcblxuXHQvKiBqc2hpbnQgLVcwNDEgKi9cblx0bW9kdWxlLmV4cG9ydHMgPSB7XG5cdFx0cGFyc2U6IGZ1bmN0aW9uKG5hbWUpIHtcblx0XHRcdG5hbWUgPSBuYW1lID09IHVuZGVmaW5lZCA/ICcnIDogKG5hbWUgKyAnJylcblxuXHRcdFx0dmFyIHBhcmFtZXRlcnMgPSAobmFtZSB8fCAnJykubWF0Y2goQ29uc3RhbnQuUkVfS0VZKVxuXG5cdFx0XHR2YXIgcmFuZ2UgPSBwYXJhbWV0ZXJzICYmIHBhcmFtZXRlcnNbM10gJiYgcGFyYW1ldGVyc1szXS5tYXRjaChDb25zdGFudC5SRV9SQU5HRSlcblx0XHRcdHZhciBtaW4gPSByYW5nZSAmJiByYW5nZVsxXSAmJiBwYXJzZUludChyYW5nZVsxXSwgMTApIC8vIHx8IDFcblx0XHRcdHZhciBtYXggPSByYW5nZSAmJiByYW5nZVsyXSAmJiBwYXJzZUludChyYW5nZVsyXSwgMTApIC8vIHx8IDFcblx0XHRcdFx0Ly8gcmVwZWF0IHx8IG1pbi1tYXggfHwgMVxuXHRcdFx0XHQvLyB2YXIgY291bnQgPSByYW5nZSA/ICFyYW5nZVsyXSAmJiBwYXJzZUludChyYW5nZVsxXSwgMTApIHx8IFJhbmRvbS5pbnRlZ2VyKG1pbiwgbWF4KSA6IDFcblx0XHRcdHZhciBjb3VudCA9IHJhbmdlID8gIXJhbmdlWzJdID8gcGFyc2VJbnQocmFuZ2VbMV0sIDEwKSA6IFJhbmRvbS5pbnRlZ2VyKG1pbiwgbWF4KSA6IHVuZGVmaW5lZFxuXG5cdFx0XHR2YXIgZGVjaW1hbCA9IHBhcmFtZXRlcnMgJiYgcGFyYW1ldGVyc1s0XSAmJiBwYXJhbWV0ZXJzWzRdLm1hdGNoKENvbnN0YW50LlJFX1JBTkdFKVxuXHRcdFx0dmFyIGRtaW4gPSBkZWNpbWFsICYmIGRlY2ltYWxbMV0gJiYgcGFyc2VJbnQoZGVjaW1hbFsxXSwgMTApIC8vIHx8IDAsXG5cdFx0XHR2YXIgZG1heCA9IGRlY2ltYWwgJiYgZGVjaW1hbFsyXSAmJiBwYXJzZUludChkZWNpbWFsWzJdLCAxMCkgLy8gfHwgMCxcblx0XHRcdFx0Ly8gaW50IHx8IGRtaW4tZG1heCB8fCAwXG5cdFx0XHR2YXIgZGNvdW50ID0gZGVjaW1hbCA/ICFkZWNpbWFsWzJdICYmIHBhcnNlSW50KGRlY2ltYWxbMV0sIDEwKSB8fCBSYW5kb20uaW50ZWdlcihkbWluLCBkbWF4KSA6IHVuZGVmaW5lZFxuXG5cdFx0XHR2YXIgcmVzdWx0ID0ge1xuXHRcdFx0XHQvLyAxIG5hbWUsIDIgaW5jLCAzIHJhbmdlLCA0IGRlY2ltYWxcblx0XHRcdFx0cGFyYW1ldGVyczogcGFyYW1ldGVycyxcblx0XHRcdFx0Ly8gMSBtaW4sIDIgbWF4XG5cdFx0XHRcdHJhbmdlOiByYW5nZSxcblx0XHRcdFx0bWluOiBtaW4sXG5cdFx0XHRcdG1heDogbWF4LFxuXHRcdFx0XHQvLyBtaW4tbWF4XG5cdFx0XHRcdGNvdW50OiBjb3VudCxcblx0XHRcdFx0Ly8g5piv5ZCm5pyJIGRlY2ltYWxcblx0XHRcdFx0ZGVjaW1hbDogZGVjaW1hbCxcblx0XHRcdFx0ZG1pbjogZG1pbixcblx0XHRcdFx0ZG1heDogZG1heCxcblx0XHRcdFx0Ly8gZG1pbi1kaW1heFxuXHRcdFx0XHRkY291bnQ6IGRjb3VudFxuXHRcdFx0fVxuXG5cdFx0XHRmb3IgKHZhciByIGluIHJlc3VsdCkge1xuXHRcdFx0XHRpZiAocmVzdWx0W3JdICE9IHVuZGVmaW5lZCkgcmV0dXJuIHJlc3VsdFxuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4ge31cblx0XHR9XG5cdH1cblxuLyoqKi8gfSksXG4vKiA1ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblx0Lypcblx0ICAgICMjIE1vY2suUmFuZG9tXG5cdCAgICBcblx0ICAgIOW3peWFt+exu++8jOeUqOS6jueUn+aIkOWQhOenjemaj+acuuaVsOaNruOAglxuXHQqL1xuXG5cdHZhciBVdGlsID0gX193ZWJwYWNrX3JlcXVpcmVfXygzKVxuXG5cdHZhciBSYW5kb20gPSB7XG5cdCAgICBleHRlbmQ6IFV0aWwuZXh0ZW5kXG5cdH1cblxuXHRSYW5kb20uZXh0ZW5kKF9fd2VicGFja19yZXF1aXJlX18oNikpXG5cdFJhbmRvbS5leHRlbmQoX193ZWJwYWNrX3JlcXVpcmVfXyg3KSlcblx0UmFuZG9tLmV4dGVuZChfX3dlYnBhY2tfcmVxdWlyZV9fKDgpKVxuXHRSYW5kb20uZXh0ZW5kKF9fd2VicGFja19yZXF1aXJlX18oMTApKVxuXHRSYW5kb20uZXh0ZW5kKF9fd2VicGFja19yZXF1aXJlX18oMTMpKVxuXHRSYW5kb20uZXh0ZW5kKF9fd2VicGFja19yZXF1aXJlX18oMTUpKVxuXHRSYW5kb20uZXh0ZW5kKF9fd2VicGFja19yZXF1aXJlX18oMTYpKVxuXHRSYW5kb20uZXh0ZW5kKF9fd2VicGFja19yZXF1aXJlX18oMTcpKVxuXHRSYW5kb20uZXh0ZW5kKF9fd2VicGFja19yZXF1aXJlX18oMTQpKVxuXHRSYW5kb20uZXh0ZW5kKF9fd2VicGFja19yZXF1aXJlX18oMTkpKVxuXG5cdG1vZHVsZS5leHBvcnRzID0gUmFuZG9tXG5cbi8qKiovIH0pLFxuLyogNiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5cdC8qXG5cdCAgICAjIyBCYXNpY3Ncblx0Ki9cblx0bW9kdWxlLmV4cG9ydHMgPSB7XG5cdCAgICAvLyDov5Tlm57kuIDkuKrpmo/mnLrnmoTluIPlsJTlgLzjgIJcblx0ICAgIGJvb2xlYW46IGZ1bmN0aW9uKG1pbiwgbWF4LCBjdXIpIHtcblx0ICAgICAgICBpZiAoY3VyICE9PSB1bmRlZmluZWQpIHtcblx0ICAgICAgICAgICAgbWluID0gdHlwZW9mIG1pbiAhPT0gJ3VuZGVmaW5lZCcgJiYgIWlzTmFOKG1pbikgPyBwYXJzZUludChtaW4sIDEwKSA6IDFcblx0ICAgICAgICAgICAgbWF4ID0gdHlwZW9mIG1heCAhPT0gJ3VuZGVmaW5lZCcgJiYgIWlzTmFOKG1heCkgPyBwYXJzZUludChtYXgsIDEwKSA6IDFcblx0ICAgICAgICAgICAgcmV0dXJuIE1hdGgucmFuZG9tKCkgPiAxLjAgLyAobWluICsgbWF4KSAqIG1pbiA/ICFjdXIgOiBjdXJcblx0ICAgICAgICB9XG5cblx0ICAgICAgICByZXR1cm4gTWF0aC5yYW5kb20oKSA+PSAwLjVcblx0ICAgIH0sXG5cdCAgICBib29sOiBmdW5jdGlvbihtaW4sIG1heCwgY3VyKSB7XG5cdCAgICAgICAgcmV0dXJuIHRoaXMuYm9vbGVhbihtaW4sIG1heCwgY3VyKVxuXHQgICAgfSxcblx0ICAgIC8vIOi/lOWbnuS4gOS4qumaj+acuueahOiHqueEtuaVsO+8iOWkp+S6juetieS6jiAwIOeahOaVtOaVsO+8ieOAglxuXHQgICAgbmF0dXJhbDogZnVuY3Rpb24obWluLCBtYXgpIHtcblx0ICAgICAgICBtaW4gPSB0eXBlb2YgbWluICE9PSAndW5kZWZpbmVkJyA/IHBhcnNlSW50KG1pbiwgMTApIDogMFxuXHQgICAgICAgIG1heCA9IHR5cGVvZiBtYXggIT09ICd1bmRlZmluZWQnID8gcGFyc2VJbnQobWF4LCAxMCkgOiA5MDA3MTk5MjU0NzQwOTkyIC8vIDJeNTNcblx0ICAgICAgICByZXR1cm4gTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbikpICsgbWluXG5cdCAgICB9LFxuXHQgICAgLy8g6L+U5Zue5LiA5Liq6ZqP5py655qE5pW05pWw44CCXG5cdCAgICBpbnRlZ2VyOiBmdW5jdGlvbihtaW4sIG1heCkge1xuXHQgICAgICAgIG1pbiA9IHR5cGVvZiBtaW4gIT09ICd1bmRlZmluZWQnID8gcGFyc2VJbnQobWluLCAxMCkgOiAtOTAwNzE5OTI1NDc0MDk5MlxuXHQgICAgICAgIG1heCA9IHR5cGVvZiBtYXggIT09ICd1bmRlZmluZWQnID8gcGFyc2VJbnQobWF4LCAxMCkgOiA5MDA3MTk5MjU0NzQwOTkyIC8vIDJeNTNcblx0ICAgICAgICByZXR1cm4gTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbikpICsgbWluXG5cdCAgICB9LFxuXHQgICAgaW50OiBmdW5jdGlvbihtaW4sIG1heCkge1xuXHQgICAgICAgIHJldHVybiB0aGlzLmludGVnZXIobWluLCBtYXgpXG5cdCAgICB9LFxuXHQgICAgLy8g6L+U5Zue5LiA5Liq6ZqP5py655qE5rWu54K55pWw44CCXG5cdCAgICBmbG9hdDogZnVuY3Rpb24obWluLCBtYXgsIGRtaW4sIGRtYXgpIHtcblx0ICAgICAgICBkbWluID0gZG1pbiA9PT0gdW5kZWZpbmVkID8gMCA6IGRtaW5cblx0ICAgICAgICBkbWluID0gTWF0aC5tYXgoTWF0aC5taW4oZG1pbiwgMTcpLCAwKVxuXHQgICAgICAgIGRtYXggPSBkbWF4ID09PSB1bmRlZmluZWQgPyAxNyA6IGRtYXhcblx0ICAgICAgICBkbWF4ID0gTWF0aC5tYXgoTWF0aC5taW4oZG1heCwgMTcpLCAwKVxuXHQgICAgICAgIHZhciByZXQgPSB0aGlzLmludGVnZXIobWluLCBtYXgpICsgJy4nO1xuXHQgICAgICAgIGZvciAodmFyIGkgPSAwLCBkY291bnQgPSB0aGlzLm5hdHVyYWwoZG1pbiwgZG1heCk7IGkgPCBkY291bnQ7IGkrKykge1xuXHQgICAgICAgICAgICByZXQgKz0gKFxuXHQgICAgICAgICAgICAgICAgLy8g5pyA5ZCO5LiA5L2N5LiN6IO95Li6IDDvvJrlpoLmnpzmnIDlkI7kuIDkvY3kuLogMO+8jOS8muiiqyBKUyDlvJXmk47lv73nlaXmjonjgIJcblx0ICAgICAgICAgICAgICAgIChpIDwgZGNvdW50IC0gMSkgPyB0aGlzLmNoYXJhY3RlcignbnVtYmVyJykgOiB0aGlzLmNoYXJhY3RlcignMTIzNDU2Nzg5Jylcblx0ICAgICAgICAgICAgKVxuXHQgICAgICAgIH1cblx0ICAgICAgICByZXR1cm4gcGFyc2VGbG9hdChyZXQsIDEwKVxuXHQgICAgfSxcblx0ICAgIC8vIOi/lOWbnuS4gOS4qumaj+acuuWtl+espuOAglxuXHQgICAgY2hhcmFjdGVyOiBmdW5jdGlvbihwb29sKSB7XG5cdCAgICAgICAgdmFyIHBvb2xzID0ge1xuXHQgICAgICAgICAgICBsb3dlcjogJ2FiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6Jyxcblx0ICAgICAgICAgICAgdXBwZXI6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWicsXG5cdCAgICAgICAgICAgIG51bWJlcjogJzAxMjM0NTY3ODknLFxuXHQgICAgICAgICAgICBzeW1ib2w6ICchQCMkJV4mKigpW10nXG5cdCAgICAgICAgfVxuXHQgICAgICAgIHBvb2xzLmFscGhhID0gcG9vbHMubG93ZXIgKyBwb29scy51cHBlclxuXHQgICAgICAgIHBvb2xzWyd1bmRlZmluZWQnXSA9IHBvb2xzLmxvd2VyICsgcG9vbHMudXBwZXIgKyBwb29scy5udW1iZXIgKyBwb29scy5zeW1ib2xcblxuXHQgICAgICAgIHBvb2wgPSBwb29sc1soJycgKyBwb29sKS50b0xvd2VyQ2FzZSgpXSB8fCBwb29sXG5cdCAgICAgICAgcmV0dXJuIHBvb2wuY2hhckF0KHRoaXMubmF0dXJhbCgwLCBwb29sLmxlbmd0aCAtIDEpKVxuXHQgICAgfSxcblx0ICAgIGNoYXI6IGZ1bmN0aW9uKHBvb2wpIHtcblx0ICAgICAgICByZXR1cm4gdGhpcy5jaGFyYWN0ZXIocG9vbClcblx0ICAgIH0sXG5cdCAgICAvLyDov5Tlm57kuIDkuKrpmo/mnLrlrZfnrKbkuLLjgIJcblx0ICAgIHN0cmluZzogZnVuY3Rpb24ocG9vbCwgbWluLCBtYXgpIHtcblx0ICAgICAgICB2YXIgbGVuXG5cdCAgICAgICAgc3dpdGNoIChhcmd1bWVudHMubGVuZ3RoKSB7XG5cdCAgICAgICAgICAgIGNhc2UgMDogLy8gKClcblx0ICAgICAgICAgICAgICAgIGxlbiA9IHRoaXMubmF0dXJhbCgzLCA3KVxuXHQgICAgICAgICAgICAgICAgYnJlYWtcblx0ICAgICAgICAgICAgY2FzZSAxOiAvLyAoIGxlbmd0aCApXG5cdCAgICAgICAgICAgICAgICBsZW4gPSBwb29sXG5cdCAgICAgICAgICAgICAgICBwb29sID0gdW5kZWZpbmVkXG5cdCAgICAgICAgICAgICAgICBicmVha1xuXHQgICAgICAgICAgICBjYXNlIDI6XG5cdCAgICAgICAgICAgICAgICAvLyAoIHBvb2wsIGxlbmd0aCApXG5cdCAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGFyZ3VtZW50c1swXSA9PT0gJ3N0cmluZycpIHtcblx0ICAgICAgICAgICAgICAgICAgICBsZW4gPSBtaW5cblx0ICAgICAgICAgICAgICAgIH0gZWxzZSB7XG5cdCAgICAgICAgICAgICAgICAgICAgLy8gKCBtaW4sIG1heCApXG5cdCAgICAgICAgICAgICAgICAgICAgbGVuID0gdGhpcy5uYXR1cmFsKHBvb2wsIG1pbilcblx0ICAgICAgICAgICAgICAgICAgICBwb29sID0gdW5kZWZpbmVkXG5cdCAgICAgICAgICAgICAgICB9XG5cdCAgICAgICAgICAgICAgICBicmVha1xuXHQgICAgICAgICAgICBjYXNlIDM6XG5cdCAgICAgICAgICAgICAgICBsZW4gPSB0aGlzLm5hdHVyYWwobWluLCBtYXgpXG5cdCAgICAgICAgICAgICAgICBicmVha1xuXHQgICAgICAgIH1cblxuXHQgICAgICAgIHZhciB0ZXh0ID0gJydcblx0ICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG5cdCAgICAgICAgICAgIHRleHQgKz0gdGhpcy5jaGFyYWN0ZXIocG9vbClcblx0ICAgICAgICB9XG5cblx0ICAgICAgICByZXR1cm4gdGV4dFxuXHQgICAgfSxcblx0ICAgIHN0cjogZnVuY3Rpb24oIC8qcG9vbCwgbWluLCBtYXgqLyApIHtcblx0ICAgICAgICByZXR1cm4gdGhpcy5zdHJpbmcuYXBwbHkodGhpcywgYXJndW1lbnRzKVxuXHQgICAgfSxcblx0ICAgIC8vIOi/lOWbnuS4gOS4quaVtOWei+aVsOe7hOOAglxuXHQgICAgcmFuZ2U6IGZ1bmN0aW9uKHN0YXJ0LCBzdG9wLCBzdGVwKSB7XG5cdCAgICAgICAgLy8gcmFuZ2UoIHN0b3AgKVxuXHQgICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDw9IDEpIHtcblx0ICAgICAgICAgICAgc3RvcCA9IHN0YXJ0IHx8IDA7XG5cdCAgICAgICAgICAgIHN0YXJ0ID0gMDtcblx0ICAgICAgICB9XG5cdCAgICAgICAgLy8gcmFuZ2UoIHN0YXJ0LCBzdG9wIClcblx0ICAgICAgICBzdGVwID0gYXJndW1lbnRzWzJdIHx8IDE7XG5cblx0ICAgICAgICBzdGFydCA9ICtzdGFydFxuXHQgICAgICAgIHN0b3AgPSArc3RvcFxuXHQgICAgICAgIHN0ZXAgPSArc3RlcFxuXG5cdCAgICAgICAgdmFyIGxlbiA9IE1hdGgubWF4KE1hdGguY2VpbCgoc3RvcCAtIHN0YXJ0KSAvIHN0ZXApLCAwKTtcblx0ICAgICAgICB2YXIgaWR4ID0gMDtcblx0ICAgICAgICB2YXIgcmFuZ2UgPSBuZXcgQXJyYXkobGVuKTtcblxuXHQgICAgICAgIHdoaWxlIChpZHggPCBsZW4pIHtcblx0ICAgICAgICAgICAgcmFuZ2VbaWR4KytdID0gc3RhcnQ7XG5cdCAgICAgICAgICAgIHN0YXJ0ICs9IHN0ZXA7XG5cdCAgICAgICAgfVxuXG5cdCAgICAgICAgcmV0dXJuIHJhbmdlO1xuXHQgICAgfVxuXHR9XG5cbi8qKiovIH0pLFxuLyogNyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5cdC8qXG5cdCAgICAjIyBEYXRlXG5cdCovXG5cdHZhciBwYXR0ZXJuTGV0dGVycyA9IHtcblx0ICAgIHl5eXk6ICdnZXRGdWxsWWVhcicsXG5cdCAgICB5eTogZnVuY3Rpb24oZGF0ZSkge1xuXHQgICAgICAgIHJldHVybiAoJycgKyBkYXRlLmdldEZ1bGxZZWFyKCkpLnNsaWNlKDIpXG5cdCAgICB9LFxuXHQgICAgeTogJ3l5JyxcblxuXHQgICAgTU06IGZ1bmN0aW9uKGRhdGUpIHtcblx0ICAgICAgICB2YXIgbSA9IGRhdGUuZ2V0TW9udGgoKSArIDFcblx0ICAgICAgICByZXR1cm4gbSA8IDEwID8gJzAnICsgbSA6IG1cblx0ICAgIH0sXG5cdCAgICBNOiBmdW5jdGlvbihkYXRlKSB7XG5cdCAgICAgICAgcmV0dXJuIGRhdGUuZ2V0TW9udGgoKSArIDFcblx0ICAgIH0sXG5cblx0ICAgIGRkOiBmdW5jdGlvbihkYXRlKSB7XG5cdCAgICAgICAgdmFyIGQgPSBkYXRlLmdldERhdGUoKVxuXHQgICAgICAgIHJldHVybiBkIDwgMTAgPyAnMCcgKyBkIDogZFxuXHQgICAgfSxcblx0ICAgIGQ6ICdnZXREYXRlJyxcblxuXHQgICAgSEg6IGZ1bmN0aW9uKGRhdGUpIHtcblx0ICAgICAgICB2YXIgaCA9IGRhdGUuZ2V0SG91cnMoKVxuXHQgICAgICAgIHJldHVybiBoIDwgMTAgPyAnMCcgKyBoIDogaFxuXHQgICAgfSxcblx0ICAgIEg6ICdnZXRIb3VycycsXG5cdCAgICBoaDogZnVuY3Rpb24oZGF0ZSkge1xuXHQgICAgICAgIHZhciBoID0gZGF0ZS5nZXRIb3VycygpICUgMTJcblx0ICAgICAgICByZXR1cm4gaCA8IDEwID8gJzAnICsgaCA6IGhcblx0ICAgIH0sXG5cdCAgICBoOiBmdW5jdGlvbihkYXRlKSB7XG5cdCAgICAgICAgcmV0dXJuIGRhdGUuZ2V0SG91cnMoKSAlIDEyXG5cdCAgICB9LFxuXG5cdCAgICBtbTogZnVuY3Rpb24oZGF0ZSkge1xuXHQgICAgICAgIHZhciBtID0gZGF0ZS5nZXRNaW51dGVzKClcblx0ICAgICAgICByZXR1cm4gbSA8IDEwID8gJzAnICsgbSA6IG1cblx0ICAgIH0sXG5cdCAgICBtOiAnZ2V0TWludXRlcycsXG5cblx0ICAgIHNzOiBmdW5jdGlvbihkYXRlKSB7XG5cdCAgICAgICAgdmFyIHMgPSBkYXRlLmdldFNlY29uZHMoKVxuXHQgICAgICAgIHJldHVybiBzIDwgMTAgPyAnMCcgKyBzIDogc1xuXHQgICAgfSxcblx0ICAgIHM6ICdnZXRTZWNvbmRzJyxcblxuXHQgICAgU1M6IGZ1bmN0aW9uKGRhdGUpIHtcblx0ICAgICAgICB2YXIgbXMgPSBkYXRlLmdldE1pbGxpc2Vjb25kcygpXG5cdCAgICAgICAgcmV0dXJuIG1zIDwgMTAgJiYgJzAwJyArIG1zIHx8IG1zIDwgMTAwICYmICcwJyArIG1zIHx8IG1zXG5cdCAgICB9LFxuXHQgICAgUzogJ2dldE1pbGxpc2Vjb25kcycsXG5cblx0ICAgIEE6IGZ1bmN0aW9uKGRhdGUpIHtcblx0ICAgICAgICByZXR1cm4gZGF0ZS5nZXRIb3VycygpIDwgMTIgPyAnQU0nIDogJ1BNJ1xuXHQgICAgfSxcblx0ICAgIGE6IGZ1bmN0aW9uKGRhdGUpIHtcblx0ICAgICAgICByZXR1cm4gZGF0ZS5nZXRIb3VycygpIDwgMTIgPyAnYW0nIDogJ3BtJ1xuXHQgICAgfSxcblx0ICAgIFQ6ICdnZXRUaW1lJ1xuXHR9XG5cdG1vZHVsZS5leHBvcnRzID0ge1xuXHQgICAgLy8g5pel5pyf5Y2g5L2N56ym6ZuG5ZCI44CCXG5cdCAgICBfcGF0dGVybkxldHRlcnM6IHBhdHRlcm5MZXR0ZXJzLFxuXHQgICAgLy8g5pel5pyf5Y2g5L2N56ym5q2j5YiZ44CCXG5cdCAgICBfcmZvcm1hdDogbmV3IFJlZ0V4cCgoZnVuY3Rpb24oKSB7XG5cdCAgICAgICAgdmFyIHJlID0gW11cblx0ICAgICAgICBmb3IgKHZhciBpIGluIHBhdHRlcm5MZXR0ZXJzKSByZS5wdXNoKGkpXG5cdCAgICAgICAgcmV0dXJuICcoJyArIHJlLmpvaW4oJ3wnKSArICcpJ1xuXHQgICAgfSkoKSwgJ2cnKSxcblx0ICAgIC8vIOagvOW8j+WMluaXpeacn+OAglxuXHQgICAgX2Zvcm1hdERhdGU6IGZ1bmN0aW9uKGRhdGUsIGZvcm1hdCkge1xuXHQgICAgICAgIHJldHVybiBmb3JtYXQucmVwbGFjZSh0aGlzLl9yZm9ybWF0LCBmdW5jdGlvbiBjcmVhdE5ld1N1YlN0cmluZygkMCwgZmxhZykge1xuXHQgICAgICAgICAgICByZXR1cm4gdHlwZW9mIHBhdHRlcm5MZXR0ZXJzW2ZsYWddID09PSAnZnVuY3Rpb24nID8gcGF0dGVybkxldHRlcnNbZmxhZ10oZGF0ZSkgOlxuXHQgICAgICAgICAgICAgICAgcGF0dGVybkxldHRlcnNbZmxhZ10gaW4gcGF0dGVybkxldHRlcnMgPyBjcmVhdE5ld1N1YlN0cmluZygkMCwgcGF0dGVybkxldHRlcnNbZmxhZ10pIDpcblx0ICAgICAgICAgICAgICAgIGRhdGVbcGF0dGVybkxldHRlcnNbZmxhZ11dKClcblx0ICAgICAgICB9KVxuXHQgICAgfSxcblx0ICAgIC8vIOeUn+aIkOS4gOS4qumaj+acuueahCBEYXRlIOWvueixoeOAglxuXHQgICAgX3JhbmRvbURhdGU6IGZ1bmN0aW9uKG1pbiwgbWF4KSB7IC8vIG1pbiwgbWF4XG5cdCAgICAgICAgbWluID0gbWluID09PSB1bmRlZmluZWQgPyBuZXcgRGF0ZSgwKSA6IG1pblxuXHQgICAgICAgIG1heCA9IG1heCA9PT0gdW5kZWZpbmVkID8gbmV3IERhdGUoKSA6IG1heFxuXHQgICAgICAgIHJldHVybiBuZXcgRGF0ZShNYXRoLnJhbmRvbSgpICogKG1heC5nZXRUaW1lKCkgLSBtaW4uZ2V0VGltZSgpKSlcblx0ICAgIH0sXG5cdCAgICAvLyDov5Tlm57kuIDkuKrpmo/mnLrnmoTml6XmnJ/lrZfnrKbkuLLjgIJcblx0ICAgIGRhdGU6IGZ1bmN0aW9uKGZvcm1hdCkge1xuXHQgICAgICAgIGZvcm1hdCA9IGZvcm1hdCB8fCAneXl5eS1NTS1kZCdcblx0ICAgICAgICByZXR1cm4gdGhpcy5fZm9ybWF0RGF0ZSh0aGlzLl9yYW5kb21EYXRlKCksIGZvcm1hdClcblx0ICAgIH0sXG5cdCAgICAvLyDov5Tlm57kuIDkuKrpmo/mnLrnmoTml7bpl7TlrZfnrKbkuLLjgIJcblx0ICAgIHRpbWU6IGZ1bmN0aW9uKGZvcm1hdCkge1xuXHQgICAgICAgIGZvcm1hdCA9IGZvcm1hdCB8fCAnSEg6bW06c3MnXG5cdCAgICAgICAgcmV0dXJuIHRoaXMuX2Zvcm1hdERhdGUodGhpcy5fcmFuZG9tRGF0ZSgpLCBmb3JtYXQpXG5cdCAgICB9LFxuXHQgICAgLy8g6L+U5Zue5LiA5Liq6ZqP5py655qE5pel5pyf5ZKM5pe26Ze05a2X56ym5Liy44CCXG5cdCAgICBkYXRldGltZTogZnVuY3Rpb24oZm9ybWF0KSB7XG5cdCAgICAgICAgZm9ybWF0ID0gZm9ybWF0IHx8ICd5eXl5LU1NLWRkIEhIOm1tOnNzJ1xuXHQgICAgICAgIHJldHVybiB0aGlzLl9mb3JtYXREYXRlKHRoaXMuX3JhbmRvbURhdGUoKSwgZm9ybWF0KVxuXHQgICAgfSxcblx0ICAgIC8vIOi/lOWbnuW9k+WJjeeahOaXpeacn+WSjOaXtumXtOWtl+espuS4suOAglxuXHQgICAgbm93OiBmdW5jdGlvbih1bml0LCBmb3JtYXQpIHtcblx0ICAgICAgICAvLyBub3codW5pdCkgbm93KGZvcm1hdClcblx0ICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuXHQgICAgICAgICAgICAvLyBub3coZm9ybWF0KVxuXHQgICAgICAgICAgICBpZiAoIS95ZWFyfG1vbnRofGRheXxob3VyfG1pbnV0ZXxzZWNvbmR8d2Vlay8udGVzdCh1bml0KSkge1xuXHQgICAgICAgICAgICAgICAgZm9ybWF0ID0gdW5pdFxuXHQgICAgICAgICAgICAgICAgdW5pdCA9ICcnXG5cdCAgICAgICAgICAgIH1cblx0ICAgICAgICB9XG5cdCAgICAgICAgdW5pdCA9ICh1bml0IHx8ICcnKS50b0xvd2VyQ2FzZSgpXG5cdCAgICAgICAgZm9ybWF0ID0gZm9ybWF0IHx8ICd5eXl5LU1NLWRkIEhIOm1tOnNzJ1xuXG5cdCAgICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZSgpXG5cblx0ICAgICAgICAvKiBqc2hpbnQgLVcwODYgKi9cblx0ICAgICAgICAvLyDlj4LogIPoh6ogaHR0cDovL21vbWVudGpzLmNuL2RvY3MvIy9tYW5pcHVsYXRpbmcvc3RhcnQtb2YvXG5cdCAgICAgICAgc3dpdGNoICh1bml0KSB7XG5cdCAgICAgICAgICAgIGNhc2UgJ3llYXInOlxuXHQgICAgICAgICAgICAgICAgZGF0ZS5zZXRNb250aCgwKVxuXHQgICAgICAgICAgICBjYXNlICdtb250aCc6XG5cdCAgICAgICAgICAgICAgICBkYXRlLnNldERhdGUoMSlcblx0ICAgICAgICAgICAgY2FzZSAnd2Vlayc6XG5cdCAgICAgICAgICAgIGNhc2UgJ2RheSc6XG5cdCAgICAgICAgICAgICAgICBkYXRlLnNldEhvdXJzKDApXG5cdCAgICAgICAgICAgIGNhc2UgJ2hvdXInOlxuXHQgICAgICAgICAgICAgICAgZGF0ZS5zZXRNaW51dGVzKDApXG5cdCAgICAgICAgICAgIGNhc2UgJ21pbnV0ZSc6XG5cdCAgICAgICAgICAgICAgICBkYXRlLnNldFNlY29uZHMoMClcblx0ICAgICAgICAgICAgY2FzZSAnc2Vjb25kJzpcblx0ICAgICAgICAgICAgICAgIGRhdGUuc2V0TWlsbGlzZWNvbmRzKDApXG5cdCAgICAgICAgfVxuXHQgICAgICAgIHN3aXRjaCAodW5pdCkge1xuXHQgICAgICAgICAgICBjYXNlICd3ZWVrJzpcblx0ICAgICAgICAgICAgICAgIGRhdGUuc2V0RGF0ZShkYXRlLmdldERhdGUoKSAtIGRhdGUuZ2V0RGF5KCkpXG5cdCAgICAgICAgfVxuXG5cdCAgICAgICAgcmV0dXJuIHRoaXMuX2Zvcm1hdERhdGUoZGF0ZSwgZm9ybWF0KVxuXHQgICAgfVxuXHR9XG5cbi8qKiovIH0pLFxuLyogOCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cdC8qIFdFQlBBQ0sgVkFSIElOSkVDVElPTiAqLyhmdW5jdGlvbihtb2R1bGUpIHsvKiBnbG9iYWwgZG9jdW1lbnQgICovXG5cdC8qXG5cdCAgICAjIyBJbWFnZVxuXHQqL1xuXHRtb2R1bGUuZXhwb3J0cyA9IHtcblx0ICAgIC8vIOW4uOingeeahOW5v+WRiuWuvemrmFxuXHQgICAgX2FkU2l6ZTogW1xuXHQgICAgICAgICczMDB4MjUwJywgJzI1MHgyNTAnLCAnMjQweDQwMCcsICczMzZ4MjgwJywgJzE4MHgxNTAnLFxuXHQgICAgICAgICc3MjB4MzAwJywgJzQ2OHg2MCcsICcyMzR4NjAnLCAnODh4MzEnLCAnMTIweDkwJyxcblx0ICAgICAgICAnMTIweDYwJywgJzEyMHgyNDAnLCAnMTI1eDEyNScsICc3Mjh4OTAnLCAnMTYweDYwMCcsXG5cdCAgICAgICAgJzEyMHg2MDAnLCAnMzAweDYwMCdcblx0ICAgIF0sXG5cdCAgICAvLyDluLjop4HnmoTlsY/luZXlrr3pq5hcblx0ICAgIF9zY3JlZW5TaXplOiBbXG5cdCAgICAgICAgJzMyMHgyMDAnLCAnMzIweDI0MCcsICc2NDB4NDgwJywgJzgwMHg0ODAnLCAnODAweDQ4MCcsXG5cdCAgICAgICAgJzEwMjR4NjAwJywgJzEwMjR4NzY4JywgJzEyODB4ODAwJywgJzE0NDB4OTAwJywgJzE5MjB4MTIwMCcsXG5cdCAgICAgICAgJzI1NjB4MTYwMCdcblx0ICAgIF0sXG5cdCAgICAvLyDluLjop4HnmoTop4bpopHlrr3pq5hcblx0ICAgIF92aWRlb1NpemU6IFsnNzIweDQ4MCcsICc3Njh4NTc2JywgJzEyODB4NzIwJywgJzE5MjB4MTA4MCddLFxuXHQgICAgLypcblx0ICAgICAgICDnlJ/miJDkuIDkuKrpmo/mnLrnmoTlm77niYflnLDlnYDjgIJcblxuXHQgICAgICAgIOabv+S7o+WbvueJh+a6kFxuXHQgICAgICAgICAgICBodHRwOi8vZnBvaW1nLmNvbS9cblx0ICAgICAgICDlj4LogIPoh6ogXG5cdCAgICAgICAgICAgIGh0dHA6Ly9yZW5zYW5uaW5nLml0ZXllLmNvbS9ibG9nLzE5MzMzMTBcblx0ICAgICAgICAgICAgaHR0cDovL2NvZGUudHV0c3BsdXMuY29tL2FydGljbGVzL3RoZS10b3AtOC1wbGFjZWhvbGRlcnMtZm9yLXdlYi1kZXNpZ25lcnMtLW5ldC0xOTQ4NVxuXHQgICAgKi9cblx0ICAgIGltYWdlOiBmdW5jdGlvbihzaXplLCBiYWNrZ3JvdW5kLCBmb3JlZ3JvdW5kLCBmb3JtYXQsIHRleHQpIHtcblx0ICAgICAgICAvLyBSYW5kb20uaW1hZ2UoIHNpemUsIGJhY2tncm91bmQsIGZvcmVncm91bmQsIHRleHQgKVxuXHQgICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSA0KSB7XG5cdCAgICAgICAgICAgIHRleHQgPSBmb3JtYXRcblx0ICAgICAgICAgICAgZm9ybWF0ID0gdW5kZWZpbmVkXG5cdCAgICAgICAgfVxuXHQgICAgICAgIC8vIFJhbmRvbS5pbWFnZSggc2l6ZSwgYmFja2dyb3VuZCwgdGV4dCApXG5cdCAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDMpIHtcblx0ICAgICAgICAgICAgdGV4dCA9IGZvcmVncm91bmRcblx0ICAgICAgICAgICAgZm9yZWdyb3VuZCA9IHVuZGVmaW5lZFxuXHQgICAgICAgIH1cblx0ICAgICAgICAvLyBSYW5kb20uaW1hZ2UoKVxuXHQgICAgICAgIGlmICghc2l6ZSkgc2l6ZSA9IHRoaXMucGljayh0aGlzLl9hZFNpemUpXG5cblx0ICAgICAgICBpZiAoYmFja2dyb3VuZCAmJiB+YmFja2dyb3VuZC5pbmRleE9mKCcjJykpIGJhY2tncm91bmQgPSBiYWNrZ3JvdW5kLnNsaWNlKDEpXG5cdCAgICAgICAgaWYgKGZvcmVncm91bmQgJiYgfmZvcmVncm91bmQuaW5kZXhPZignIycpKSBmb3JlZ3JvdW5kID0gZm9yZWdyb3VuZC5zbGljZSgxKVxuXG5cdCAgICAgICAgLy8gaHR0cDovL2R1bW15aW1hZ2UuY29tLzYwMHg0MDAvY2MwMGNjLzQ3MDA0Ny5wbmcmdGV4dD1oZWxsb1xuXHQgICAgICAgIHJldHVybiAnaHR0cDovL2R1bW15aW1hZ2UuY29tLycgKyBzaXplICtcblx0ICAgICAgICAgICAgKGJhY2tncm91bmQgPyAnLycgKyBiYWNrZ3JvdW5kIDogJycpICtcblx0ICAgICAgICAgICAgKGZvcmVncm91bmQgPyAnLycgKyBmb3JlZ3JvdW5kIDogJycpICtcblx0ICAgICAgICAgICAgKGZvcm1hdCA/ICcuJyArIGZvcm1hdCA6ICcnKSArXG5cdCAgICAgICAgICAgICh0ZXh0ID8gJyZ0ZXh0PScgKyB0ZXh0IDogJycpXG5cdCAgICB9LFxuXHQgICAgaW1nOiBmdW5jdGlvbigpIHtcblx0ICAgICAgICByZXR1cm4gdGhpcy5pbWFnZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpXG5cdCAgICB9LFxuXG5cdCAgICAvKlxuXHQgICAgICAgIEJyYW5kQ29sb3JzXG5cdCAgICAgICAgaHR0cDovL2JyYW5kY29sb3JzLm5ldC9cblx0ICAgICAgICBBIGNvbGxlY3Rpb24gb2YgbWFqb3IgYnJhbmQgY29sb3IgY29kZXMgY3VyYXRlZCBieSBHYWxlbiBHaWRtYW4uXG5cdCAgICAgICAg5aSn54mM5YWs5Y+455qE6aKc6Imy6ZuG5ZCIXG5cblx0ICAgICAgICAvLyDojrflj5blk4HniYzlkozpopzoibJcblx0ICAgICAgICAkKCdoMicpLmVhY2goZnVuY3Rpb24oaW5kZXgsIGl0ZW0pe1xuXHQgICAgICAgICAgICBpdGVtID0gJChpdGVtKVxuXHQgICAgICAgICAgICBjb25zb2xlLmxvZygnXFwnJyArIGl0ZW0udGV4dCgpICsgJ1xcJycsICc6JywgJ1xcJycgKyBpdGVtLm5leHQoKS50ZXh0KCkgKyAnXFwnJywgJywnKVxuXHQgICAgICAgIH0pXG5cdCAgICAqL1xuXHQgICAgX2JyYW5kQ29sb3JzOiB7XG5cdCAgICAgICAgJzRvcm1hdCc6ICcjZmIwYTJhJyxcblx0ICAgICAgICAnNTAwcHgnOiAnIzAyYWRlYScsXG5cdCAgICAgICAgJ0Fib3V0Lm1lIChibHVlKSc6ICcjMDA0MDVkJyxcblx0ICAgICAgICAnQWJvdXQubWUgKHllbGxvdyknOiAnI2ZmY2MzMycsXG5cdCAgICAgICAgJ0FkZHZvY2F0ZSc6ICcjZmY2MTM4Jyxcblx0ICAgICAgICAnQWRvYmUnOiAnI2ZmMDAwMCcsXG5cdCAgICAgICAgJ0FpbSc6ICcjZmNkMjBiJyxcblx0ICAgICAgICAnQW1hem9uJzogJyNlNDc5MTEnLFxuXHQgICAgICAgICdBbmRyb2lkJzogJyNhNGM2MzknLFxuXHQgICAgICAgICdBbmdpZVxcJ3MgTGlzdCc6ICcjN2ZiYjAwJyxcblx0ICAgICAgICAnQU9MJzogJyMwMDYwYTMnLFxuXHQgICAgICAgICdBdGxhc3NpYW4nOiAnIzAwMzM2NicsXG5cdCAgICAgICAgJ0JlaGFuY2UnOiAnIzA1M2VmZicsXG5cdCAgICAgICAgJ0JpZyBDYXJ0ZWwnOiAnIzk3YjUzOCcsXG5cdCAgICAgICAgJ2JpdGx5JzogJyNlZTYxMjMnLFxuXHQgICAgICAgICdCbG9nZ2VyJzogJyNmYzRmMDgnLFxuXHQgICAgICAgICdCb2VpbmcnOiAnIzAwMzlhNicsXG5cdCAgICAgICAgJ0Jvb2tpbmcuY29tJzogJyMwMDM1ODAnLFxuXHQgICAgICAgICdDYXJib25tYWRlJzogJyM2MTM4NTQnLFxuXHQgICAgICAgICdDaGVkZGFyJzogJyNmZjcyNDMnLFxuXHQgICAgICAgICdDb2RlIFNjaG9vbCc6ICcjM2Q0OTQ0Jyxcblx0ICAgICAgICAnRGVsaWNpb3VzJzogJyMyMDVjYzAnLFxuXHQgICAgICAgICdEZWxsJzogJyMzMjg3YzEnLFxuXHQgICAgICAgICdEZXNpZ25tb28nOiAnI2U1NGE0ZicsXG5cdCAgICAgICAgJ0RldmlhbnRhcnQnOiAnIzRlNjI1MicsXG5cdCAgICAgICAgJ0Rlc2lnbmVyIE5ld3MnOiAnIzJkNzJkYScsXG5cdCAgICAgICAgJ0Rldm91cic6ICcjZmQwMDAxJyxcblx0ICAgICAgICAnREVXQUxUJzogJyNmZWJkMTcnLFxuXHQgICAgICAgICdEaXNxdXMgKGJsdWUpJzogJyM1OWEzZmMnLFxuXHQgICAgICAgICdEaXNxdXMgKG9yYW5nZSknOiAnI2RiNzEzMicsXG5cdCAgICAgICAgJ0RyaWJiYmxlJzogJyNlYTRjODknLFxuXHQgICAgICAgICdEcm9wYm94JzogJyMzZDlhZTgnLFxuXHQgICAgICAgICdEcnVwYWwnOiAnIzBjNzZhYicsXG5cdCAgICAgICAgJ0R1bmtlZCc6ICcjMmEzMjNhJyxcblx0ICAgICAgICAnZUJheSc6ICcjODljNTA3Jyxcblx0ICAgICAgICAnRW1iZXInOiAnI2YwNWUxYicsXG5cdCAgICAgICAgJ0VuZ2FkZ2V0JzogJyMwMGJkZjYnLFxuXHQgICAgICAgICdFbnZhdG8nOiAnIzUyODAzNicsXG5cdCAgICAgICAgJ0V0c3knOiAnI2ViNmQyMCcsXG5cdCAgICAgICAgJ0V2ZXJub3RlJzogJyM1YmE1MjUnLFxuXHQgICAgICAgICdGYWIuY29tJzogJyNkZDAwMTcnLFxuXHQgICAgICAgICdGYWNlYm9vayc6ICcjM2I1OTk4Jyxcblx0ICAgICAgICAnRmlyZWZveCc6ICcjZTY2MDAwJyxcblx0ICAgICAgICAnRmxpY2tyIChibHVlKSc6ICcjMDA2M2RjJyxcblx0ICAgICAgICAnRmxpY2tyIChwaW5rKSc6ICcjZmYwMDg0Jyxcblx0ICAgICAgICAnRm9ycnN0JzogJyM1YjlhNjgnLFxuXHQgICAgICAgICdGb3Vyc3F1YXJlJzogJyMyNWEwY2EnLFxuXHQgICAgICAgICdHYXJtaW4nOiAnIzAwN2NjMycsXG5cdCAgICAgICAgJ0dldEdsdWUnOiAnIzJkNzVhMicsXG5cdCAgICAgICAgJ0dpbW1lYmFyJzogJyNmNzAwNzgnLFxuXHQgICAgICAgICdHaXRIdWInOiAnIzE3MTUxNScsXG5cdCAgICAgICAgJ0dvb2dsZSBCbHVlJzogJyMwMTQwY2EnLFxuXHQgICAgICAgICdHb29nbGUgR3JlZW4nOiAnIzE2YTYxZScsXG5cdCAgICAgICAgJ0dvb2dsZSBSZWQnOiAnI2RkMTgxMicsXG5cdCAgICAgICAgJ0dvb2dsZSBZZWxsb3cnOiAnI2ZjY2EwMycsXG5cdCAgICAgICAgJ0dvb2dsZSsnOiAnI2RkNGIzOScsXG5cdCAgICAgICAgJ0dyb292ZXNoYXJrJzogJyNmNzdmMDAnLFxuXHQgICAgICAgICdHcm91cG9uJzogJyM4MmI1NDgnLFxuXHQgICAgICAgICdIYWNrZXIgTmV3cyc6ICcjZmY2NjAwJyxcblx0ICAgICAgICAnSGVsbG9XYWxsZXQnOiAnIzAwODVjYScsXG5cdCAgICAgICAgJ0hlcm9rdSAobGlnaHQpJzogJyNjN2M1ZTYnLFxuXHQgICAgICAgICdIZXJva3UgKGRhcmspJzogJyM2NTY3YTUnLFxuXHQgICAgICAgICdIb290U3VpdGUnOiAnIzAwMzM2NicsXG5cdCAgICAgICAgJ0hvdXp6JzogJyM3M2JhMzcnLFxuXHQgICAgICAgICdIVE1MNSc6ICcjZWM2MjMxJyxcblx0ICAgICAgICAnSUtFQSc6ICcjZmZjYzMzJyxcblx0ICAgICAgICAnSU1EYic6ICcjZjNjZTEzJyxcblx0ICAgICAgICAnSW5zdGFncmFtJzogJyMzZjcyOWInLFxuXHQgICAgICAgICdJbnRlbCc6ICcjMDA3MWM1Jyxcblx0ICAgICAgICAnSW50dWl0JzogJyMzNjVlYmYnLFxuXHQgICAgICAgICdLaWNrc3RhcnRlcic6ICcjNzZjYzFlJyxcblx0ICAgICAgICAna2lwcHQnOiAnI2UwMzUwMCcsXG5cdCAgICAgICAgJ0tvZGVyeSc6ICcjMDBhZjgxJyxcblx0ICAgICAgICAnTGFzdEZNJzogJyNjMzAwMGQnLFxuXHQgICAgICAgICdMaW5rZWRJbic6ICcjMGU3NmE4Jyxcblx0ICAgICAgICAnTGl2ZXN0cmVhbSc6ICcjY2YwMDA1Jyxcblx0ICAgICAgICAnTHVtbyc6ICcjNTc2Mzk2Jyxcblx0ICAgICAgICAnTWl4cGFuZWwnOiAnI2EwODZkMycsXG5cdCAgICAgICAgJ01lZXR1cCc6ICcjZTUxOTM3Jyxcblx0ICAgICAgICAnTm9raWEnOiAnIzE4MzY5MycsXG5cdCAgICAgICAgJ05WSURJQSc6ICcjNzZiOTAwJyxcblx0ICAgICAgICAnT3BlcmEnOiAnI2NjMGYxNicsXG5cdCAgICAgICAgJ1BhdGgnOiAnI2U0MWYxMScsXG5cdCAgICAgICAgJ1BheVBhbCAoZGFyayknOiAnIzFlNDc3YScsXG5cdCAgICAgICAgJ1BheVBhbCAobGlnaHQpJzogJyMzYjdiYmYnLFxuXHQgICAgICAgICdQaW5ib2FyZCc6ICcjMDAwMGU2Jyxcblx0ICAgICAgICAnUGludGVyZXN0JzogJyNjODIzMmMnLFxuXHQgICAgICAgICdQbGF5U3RhdGlvbic6ICcjNjY1Y2JlJyxcblx0ICAgICAgICAnUG9ja2V0JzogJyNlZTQwNTYnLFxuXHQgICAgICAgICdQcmV6aSc6ICcjMzE4YmZmJyxcblx0ICAgICAgICAnUHVzaGEnOiAnIzBmNzFiNCcsXG5cdCAgICAgICAgJ1F1b3JhJzogJyNhODI0MDAnLFxuXHQgICAgICAgICdRVU9URS5mbSc6ICcjNjZjZWZmJyxcblx0ICAgICAgICAnUmRpbyc6ICcjMDA4ZmQ1Jyxcblx0ICAgICAgICAnUmVhZGFiaWxpdHknOiAnIzljMDAwMCcsXG5cdCAgICAgICAgJ1JlZCBIYXQnOiAnI2NjMDAwMCcsXG5cdCAgICAgICAgJ1Jlc291cmNlJzogJyM3ZWI0MDAnLFxuXHQgICAgICAgICdSb2NrcGFjayc6ICcjMGJhNmFiJyxcblx0ICAgICAgICAnUm9vbic6ICcjNjJiMGQ5Jyxcblx0ICAgICAgICAnUlNTJzogJyNlZTgwMmYnLFxuXHQgICAgICAgICdTYWxlc2ZvcmNlJzogJyMxNzk4YzEnLFxuXHQgICAgICAgICdTYW1zdW5nJzogJyMwYzRkYTInLFxuXHQgICAgICAgICdTaG9waWZ5JzogJyM5NmJmNDgnLFxuXHQgICAgICAgICdTa3lwZSc6ICcjMDBhZmYwJyxcblx0ICAgICAgICAnU25hZ2Fqb2InOiAnI2Y0N2EyMCcsXG5cdCAgICAgICAgJ1NvZnRvbmljJzogJyMwMDhhY2UnLFxuXHQgICAgICAgICdTb3VuZENsb3VkJzogJyNmZjc3MDAnLFxuXHQgICAgICAgICdTcGFjZSBCb3gnOiAnI2Y4Njk2MCcsXG5cdCAgICAgICAgJ1Nwb3RpZnknOiAnIzgxYjcxYScsXG5cdCAgICAgICAgJ1NwcmludCc6ICcjZmVlMTAwJyxcblx0ICAgICAgICAnU3F1YXJlc3BhY2UnOiAnIzEyMTIxMicsXG5cdCAgICAgICAgJ1N0YWNrT3ZlcmZsb3cnOiAnI2VmODIzNicsXG5cdCAgICAgICAgJ1N0YXBsZXMnOiAnI2NjMDAwMCcsXG5cdCAgICAgICAgJ1N0YXR1cyBDaGFydCc6ICcjZDc1ODRmJyxcblx0ICAgICAgICAnU3RyaXBlJzogJyMwMDhjZGQnLFxuXHQgICAgICAgICdTdHVkeUJsdWUnOiAnIzAwYWZlMScsXG5cdCAgICAgICAgJ1N0dW1ibGVVcG9uJzogJyNmNzQ0MjUnLFxuXHQgICAgICAgICdULU1vYmlsZSc6ICcjZWEwYThlJyxcblx0ICAgICAgICAnVGVjaG5vcmF0aSc6ICcjNDBhODAwJyxcblx0ICAgICAgICAnVGhlIE5leHQgV2ViJzogJyNlZjQ0MjMnLFxuXHQgICAgICAgICdUcmVlaG91c2UnOiAnIzVjYjg2OCcsXG5cdCAgICAgICAgJ1RydWxpYSc6ICcjNWVhYjFmJyxcblx0ICAgICAgICAnVHVtYmxyJzogJyMzNDUyNmYnLFxuXHQgICAgICAgICdUd2l0Y2gudHYnOiAnIzY0NDFhNScsXG5cdCAgICAgICAgJ1R3aXR0ZXInOiAnIzAwYWNlZScsXG5cdCAgICAgICAgJ1RZUE8zJzogJyNmZjg3MDAnLFxuXHQgICAgICAgICdVYnVudHUnOiAnI2RkNDgxNCcsXG5cdCAgICAgICAgJ1VzdHJlYW0nOiAnIzMzODhmZicsXG5cdCAgICAgICAgJ1Zlcml6b24nOiAnI2VmMWQxZCcsXG5cdCAgICAgICAgJ1ZpbWVvJzogJyM4NmM5ZWYnLFxuXHQgICAgICAgICdWaW5lJzogJyMwMGE0NzgnLFxuXHQgICAgICAgICdWaXJiJzogJyMwNmFmZDgnLFxuXHQgICAgICAgICdWaXJnaW4gTWVkaWEnOiAnI2NjMDAwMCcsXG5cdCAgICAgICAgJ1dvb2dhJzogJyM1YjAwOWMnLFxuXHQgICAgICAgICdXb3JkUHJlc3MgKGJsdWUpJzogJyMyMTc1OWInLFxuXHQgICAgICAgICdXb3JkUHJlc3MgKG9yYW5nZSknOiAnI2Q1NGUyMScsXG5cdCAgICAgICAgJ1dvcmRQcmVzcyAoZ3JleSknOiAnIzQ2NDY0NicsXG5cdCAgICAgICAgJ1d1bmRlcmxpc3QnOiAnIzJiODhkOScsXG5cdCAgICAgICAgJ1hCT1gnOiAnIzliYzg0OCcsXG5cdCAgICAgICAgJ1hJTkcnOiAnIzEyNjU2NycsXG5cdCAgICAgICAgJ1lhaG9vISc6ICcjNzIwZTllJyxcblx0ICAgICAgICAnWWFuZGV4JzogJyNmZmNjMDAnLFxuXHQgICAgICAgICdZZWxwJzogJyNjNDEyMDAnLFxuXHQgICAgICAgICdZb3VUdWJlJzogJyNjNDMwMmInLFxuXHQgICAgICAgICdaYWxvbmdvJzogJyM1NDk4ZGMnLFxuXHQgICAgICAgICdaZW5kZXNrJzogJyM3OGEzMDAnLFxuXHQgICAgICAgICdaZXJwbHknOiAnIzlkY2M3YScsXG5cdCAgICAgICAgJ1pvb3Rvb2wnOiAnIzVlOGIxZCdcblx0ICAgIH0sXG5cdCAgICBfYnJhbmROYW1lczogZnVuY3Rpb24oKSB7XG5cdCAgICAgICAgdmFyIGJyYW5kcyA9IFtdO1xuXHQgICAgICAgIGZvciAodmFyIGIgaW4gdGhpcy5fYnJhbmRDb2xvcnMpIHtcblx0ICAgICAgICAgICAgYnJhbmRzLnB1c2goYilcblx0ICAgICAgICB9XG5cdCAgICAgICAgcmV0dXJuIGJyYW5kc1xuXHQgICAgfSxcblx0ICAgIC8qXG5cdCAgICAgICAg55Sf5oiQ5LiA5q616ZqP5py655qEIEJhc2U2NCDlm77niYfnvJbnoIHjgIJcblxuXHQgICAgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9pbXNreS9ob2xkZXJcblx0ICAgICAgICBIb2xkZXIgcmVuZGVycyBpbWFnZSBwbGFjZWhvbGRlcnMgZW50aXJlbHkgb24gdGhlIGNsaWVudCBzaWRlLlxuXG5cdCAgICAgICAgZGF0YUltYWdlSG9sZGVyOiBmdW5jdGlvbihzaXplKSB7XG5cdCAgICAgICAgICAgIHJldHVybiAnaG9sZGVyLmpzLycgKyBzaXplXG5cdCAgICAgICAgfSxcblx0ICAgICovXG5cdCAgICBkYXRhSW1hZ2U6IGZ1bmN0aW9uKHNpemUsIHRleHQpIHtcblx0ICAgICAgICB2YXIgY2FudmFzXG5cdCAgICAgICAgaWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcpIHtcblx0ICAgICAgICAgICAgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJylcblx0ICAgICAgICB9IGVsc2Uge1xuXHQgICAgICAgICAgICAvKlxuXHQgICAgICAgICAgICAgICAgaHR0cHM6Ly9naXRodWIuY29tL0F1dG9tYXR0aWMvbm9kZS1jYW52YXNcblx0ICAgICAgICAgICAgICAgICAgICBucG0gaW5zdGFsbCBjYW52YXMgLS1zYXZlXG5cdCAgICAgICAgICAgICAgICDlronoo4Xpl67popjvvJpcblx0ICAgICAgICAgICAgICAgICogaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8yMjk1MzIwNi9ndWxwLWlzc3Vlcy13aXRoLWNhcmlvLWluc3RhbGwtY29tbWFuZC1ub3QtZm91bmQtd2hlbi10cnlpbmctdG8taW5zdGFsbGluZy1jYW52YVxuXHQgICAgICAgICAgICAgICAgKiBodHRwczovL2dpdGh1Yi5jb20vQXV0b21hdHRpYy9ub2RlLWNhbnZhcy9pc3N1ZXMvNDE1XG5cdCAgICAgICAgICAgICAgICAqIGh0dHBzOi8vZ2l0aHViLmNvbS9BdXRvbWF0dGljL25vZGUtY2FudmFzL3dpa2kvX3BhZ2VzXG5cblx0ICAgICAgICAgICAgICAgIFBT77yabm9kZS1jYW52YXMg55qE5a6J6KOF6L+H56iL5a6e5Zyo5piv5aSq57mB55CQ5LqG77yM5omA5Lul5LiN5pS+5YWlIHBhY2thZ2UuanNvbiDnmoQgZGVwZW5kZW5jaWVz44CCXG5cdCAgICAgICAgICAgICAqL1xuXHQgICAgICAgICAgICB2YXIgQ2FudmFzID0gbW9kdWxlLnJlcXVpcmUoJ2NhbnZhcycpXG5cdCAgICAgICAgICAgIGNhbnZhcyA9IG5ldyBDYW52YXMoKVxuXHQgICAgICAgIH1cblxuXHQgICAgICAgIHZhciBjdHggPSBjYW52YXMgJiYgY2FudmFzLmdldENvbnRleHQgJiYgY2FudmFzLmdldENvbnRleHQoXCIyZFwiKVxuXHQgICAgICAgIGlmICghY2FudmFzIHx8ICFjdHgpIHJldHVybiAnJ1xuXG5cdCAgICAgICAgaWYgKCFzaXplKSBzaXplID0gdGhpcy5waWNrKHRoaXMuX2FkU2l6ZSlcblx0ICAgICAgICB0ZXh0ID0gdGV4dCAhPT0gdW5kZWZpbmVkID8gdGV4dCA6IHNpemVcblxuXHQgICAgICAgIHNpemUgPSBzaXplLnNwbGl0KCd4JylcblxuXHQgICAgICAgIHZhciB3aWR0aCA9IHBhcnNlSW50KHNpemVbMF0sIDEwKSxcblx0ICAgICAgICAgICAgaGVpZ2h0ID0gcGFyc2VJbnQoc2l6ZVsxXSwgMTApLFxuXHQgICAgICAgICAgICBiYWNrZ3JvdW5kID0gdGhpcy5fYnJhbmRDb2xvcnNbdGhpcy5waWNrKHRoaXMuX2JyYW5kTmFtZXMoKSldLFxuXHQgICAgICAgICAgICBmb3JlZ3JvdW5kID0gJyNGRkYnLFxuXHQgICAgICAgICAgICB0ZXh0X2hlaWdodCA9IDE0LFxuXHQgICAgICAgICAgICBmb250ID0gJ3NhbnMtc2VyaWYnO1xuXG5cdCAgICAgICAgY2FudmFzLndpZHRoID0gd2lkdGhcblx0ICAgICAgICBjYW52YXMuaGVpZ2h0ID0gaGVpZ2h0XG5cdCAgICAgICAgY3R4LnRleHRBbGlnbiA9ICdjZW50ZXInXG5cdCAgICAgICAgY3R4LnRleHRCYXNlbGluZSA9ICdtaWRkbGUnXG5cdCAgICAgICAgY3R4LmZpbGxTdHlsZSA9IGJhY2tncm91bmRcblx0ICAgICAgICBjdHguZmlsbFJlY3QoMCwgMCwgd2lkdGgsIGhlaWdodClcblx0ICAgICAgICBjdHguZmlsbFN0eWxlID0gZm9yZWdyb3VuZFxuXHQgICAgICAgIGN0eC5mb250ID0gJ2JvbGQgJyArIHRleHRfaGVpZ2h0ICsgJ3B4ICcgKyBmb250XG5cdCAgICAgICAgY3R4LmZpbGxUZXh0KHRleHQsICh3aWR0aCAvIDIpLCAoaGVpZ2h0IC8gMiksIHdpZHRoKVxuXHQgICAgICAgIHJldHVybiBjYW52YXMudG9EYXRhVVJMKCdpbWFnZS9wbmcnKVxuXHQgICAgfVxuXHR9XG5cdC8qIFdFQlBBQ0sgVkFSIElOSkVDVElPTiAqL30uY2FsbChleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKDkpKG1vZHVsZSkpKVxuXG4vKioqLyB9KSxcbi8qIDkgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuXHRtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG1vZHVsZSkge1xyXG5cdFx0aWYoIW1vZHVsZS53ZWJwYWNrUG9seWZpbGwpIHtcclxuXHRcdFx0bW9kdWxlLmRlcHJlY2F0ZSA9IGZ1bmN0aW9uKCkge307XHJcblx0XHRcdG1vZHVsZS5wYXRocyA9IFtdO1xyXG5cdFx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcclxuXHRcdFx0bW9kdWxlLmNoaWxkcmVuID0gW107XHJcblx0XHRcdG1vZHVsZS53ZWJwYWNrUG9seWZpbGwgPSAxO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIG1vZHVsZTtcclxuXHR9XHJcblxuXG4vKioqLyB9KSxcbi8qIDEwICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblx0Lypcblx0ICAgICMjIENvbG9yXG5cblx0ICAgIGh0dHA6Ly9sbGxsbGwubGkvcmFuZG9tQ29sb3IvXG5cdCAgICAgICAgQSBjb2xvciBnZW5lcmF0b3IgZm9yIEphdmFTY3JpcHQuXG5cdCAgICAgICAgcmFuZG9tQ29sb3IgZ2VuZXJhdGVzIGF0dHJhY3RpdmUgY29sb3JzIGJ5IGRlZmF1bHQuIE1vcmUgc3BlY2lmaWNhbGx5LCByYW5kb21Db2xvciBwcm9kdWNlcyBicmlnaHQgY29sb3JzIHdpdGggYSByZWFzb25hYmx5IGhpZ2ggc2F0dXJhdGlvbi4gVGhpcyBtYWtlcyByYW5kb21Db2xvciBwYXJ0aWN1bGFybHkgdXNlZnVsIGZvciBkYXRhIHZpc3VhbGl6YXRpb25zIGFuZCBnZW5lcmF0aXZlIGFydC5cblxuXHQgICAgaHR0cDovL3JhbmRvbWNvbG91ci5jb20vXG5cdCAgICAgICAgdmFyIGJnX2NvbG91ciA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDE2Nzc3MjE1KS50b1N0cmluZygxNik7XG5cdCAgICAgICAgYmdfY29sb3VyID0gXCIjXCIgKyAoXCIwMDAwMDBcIiArIGJnX2NvbG91cikuc2xpY2UoLTYpO1xuXHQgICAgICAgIGRvY3VtZW50LmJnQ29sb3IgPSBiZ19jb2xvdXI7XG5cdCAgICBcblx0ICAgIGh0dHA6Ly9tYXJ0aW4uYW5rZXJsLmNvbS8yMDA5LzEyLzA5L2hvdy10by1jcmVhdGUtcmFuZG9tLWNvbG9ycy1wcm9ncmFtbWF0aWNhbGx5L1xuXHQgICAgICAgIENyZWF0aW5nIHJhbmRvbSBjb2xvcnMgaXMgYWN0dWFsbHkgbW9yZSBkaWZmaWN1bHQgdGhhbiBpdCBzZWVtcy4gVGhlIHJhbmRvbW5lc3MgaXRzZWxmIGlzIGVhc3ksIGJ1dCBhZXN0aGV0aWNhbGx5IHBsZWFzaW5nIHJhbmRvbW5lc3MgaXMgbW9yZSBkaWZmaWN1bHQuXG5cdCAgICAgICAgaHR0cHM6Ly9naXRodWIuY29tL2Rldm9uZ292ZXR0L2NvbG9yLWdlbmVyYXRvclxuXG5cdCAgICBodHRwOi8vd3d3LnBhdWxpcmlzaC5jb20vMjAwOS9yYW5kb20taGV4LWNvbG9yLWNvZGUtc25pcHBldHMvXG5cdCAgICAgICAgUmFuZG9tIEhleCBDb2xvciBDb2RlIEdlbmVyYXRvciBpbiBKYXZhU2NyaXB0XG5cblx0ICAgIGh0dHA6Ly9jaGFuY2Vqcy5jb20vI2NvbG9yXG5cdCAgICAgICAgY2hhbmNlLmNvbG9yKClcblx0ICAgICAgICAvLyA9PiAnIzc5YzE1Nydcblx0ICAgICAgICBjaGFuY2UuY29sb3Ioe2Zvcm1hdDogJ2hleCd9KVxuXHQgICAgICAgIC8vID0+ICcjZDY3MTE4J1xuXHQgICAgICAgIGNoYW5jZS5jb2xvcih7Zm9ybWF0OiAnc2hvcnRoZXgnfSlcblx0ICAgICAgICAvLyA9PiAnIzYwZidcblx0ICAgICAgICBjaGFuY2UuY29sb3Ioe2Zvcm1hdDogJ3JnYid9KVxuXHQgICAgICAgIC8vID0+ICdyZ2IoMTEwLDUyLDE2NCknXG5cblx0ICAgIGh0dHA6Ly90b29sLmM3c2t5LmNvbS93ZWJjb2xvclxuXHQgICAgICAgIOe9kemhteiuvuiuoeW4uOeUqOiJsuW9qeaQremFjeihqFxuXHQgICAgXG5cdCAgICBodHRwczovL2dpdGh1Yi5jb20vT25lLWNvbS9vbmUtY29sb3Jcblx0ICAgICAgICBBbiBPTy1iYXNlZCBKYXZhU2NyaXB0IGNvbG9yIHBhcnNlci9jb21wdXRhdGlvbiB0b29sa2l0IHdpdGggc3VwcG9ydCBmb3IgUkdCLCBIU1YsIEhTTCwgQ01ZSywgYW5kIGFscGhhIGNoYW5uZWxzLlxuXHQgICAgICAgIEFQSSDlvojotZ5cblxuXHQgICAgaHR0cHM6Ly9naXRodWIuY29tL2hhcnRodXIvY29sb3Jcblx0ICAgICAgICBKYXZhU2NyaXB0IGNvbG9yIGNvbnZlcnNpb24gYW5kIG1hbmlwdWxhdGlvbiBsaWJyYXJ5XG5cblx0ICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9sZWF2ZXJvdS9jc3MtY29sb3JzXG5cdCAgICAgICAgU2hhcmUgJiBjb252ZXJ0IENTUyBjb2xvcnNcblx0ICAgIGh0dHA6Ly9sZWF2ZXJvdS5naXRodWIuaW8vY3NzLWNvbG9ycy8jc2xhdGVncmF5XG5cdCAgICAgICAgVHlwZSBhIENTUyBjb2xvciBrZXl3b3JkLCAjaGV4LCBoc2woKSwgcmdiYSgpLCB3aGF0ZXZlcjpcblxuXHQgICAg6Imy6LCDIGh1ZVxuXHQgICAgICAgIGh0dHA6Ly9iYWlrZS5iYWlkdS5jb20vdmlldy8yMzM2OC5odG1cblx0ICAgICAgICDoibLosIPmjIfnmoTmmK/kuIDluYXnlLvkuK3nlLvpnaLoibLlvannmoTmgLvkvZPlgL7lkJHvvIzmmK/lpKfnmoToibLlvanmlYjmnpzjgIJcblx0ICAgIOmlseWSjOW6piBzYXR1cmF0aW9uXG5cdCAgICAgICAgaHR0cDovL2JhaWtlLmJhaWR1LmNvbS92aWV3LzE4OTY0NC5odG1cblx0ICAgICAgICDppbHlkozluqbmmK/mjIfoibLlvannmoTpspzoibPnqIvluqbvvIzkuZ/np7DoibLlvannmoTnuq/luqbjgILppbHlkozluqblj5blhrPkuo7or6XoibLkuK3lkKvoibLmiJDliIblkozmtojoibLmiJDliIbvvIjngbDoibLvvInnmoTmr5TkvovjgILlkKvoibLmiJDliIbotorlpKfvvIzppbHlkozluqbotorlpKfvvJvmtojoibLmiJDliIbotorlpKfvvIzppbHlkozluqbotorlsI/jgIJcblx0ICAgIOS6ruW6piBicmlnaHRuZXNzXG5cdCAgICAgICAgaHR0cDovL2JhaWtlLmJhaWR1LmNvbS92aWV3LzM0NzczLmh0bVxuXHQgICAgICAgIOS6ruW6puaYr+aMh+WPkeWFieS9k++8iOWPjeWFieS9k++8ieihqOmdouWPkeWFie+8iOWPjeWFie+8ieW8uuW8seeahOeJqeeQhumHj+OAglxuXHQgICAg54Wn5bqmIGx1bWlub3NpdHlcblx0ICAgICAgICDniankvZPooqvnhafkuq7nmoTnqIvluqYs6YeH55So5Y2V5L2N6Z2i56ev5omA5o6l5Y+X55qE5YWJ6YCa6YeP5p2l6KGo56S6LOihqOekuuWNleS9jeS4uuWLklvlhYvmlq9dKEx1eCxseCkgLOWNsyAxbSAvIG0yIOOAglxuXG5cdCAgICBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzE0ODQ1MDYvcmFuZG9tLWNvbG9yLWdlbmVyYXRvci1pbi1qYXZhc2NyaXB0XG5cdCAgICAgICAgdmFyIGxldHRlcnMgPSAnMDEyMzQ1Njc4OUFCQ0RFRicuc3BsaXQoJycpXG5cdCAgICAgICAgdmFyIGNvbG9yID0gJyMnXG5cdCAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCA2OyBpKyspIHtcblx0ICAgICAgICAgICAgY29sb3IgKz0gbGV0dGVyc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxNildXG5cdCAgICAgICAgfVxuXHQgICAgICAgIHJldHVybiBjb2xvclxuXHQgICAgXG5cdCAgICAgICAgLy8g6ZqP5py655Sf5oiQ5LiA5Liq5peg6ISR55qE6aKc6Imy77yM5qC85byP5Li6ICcjUlJHR0JCJ+OAglxuXHQgICAgICAgIC8vIF9icmFpbmxlc3NDb2xvcigpXG5cdCAgICAgICAgdmFyIGNvbG9yID0gTWF0aC5mbG9vcihcblx0ICAgICAgICAgICAgTWF0aC5yYW5kb20oKSAqXG5cdCAgICAgICAgICAgICgxNiAqIDE2ICogMTYgKiAxNiAqIDE2ICogMTYgLSAxKVxuXHQgICAgICAgICkudG9TdHJpbmcoMTYpXG5cdCAgICAgICAgY29sb3IgPSBcIiNcIiArIChcIjAwMDAwMFwiICsgY29sb3IpLnNsaWNlKC02KVxuXHQgICAgICAgIHJldHVybiBjb2xvci50b1VwcGVyQ2FzZSgpXG5cdCovXG5cblx0dmFyIENvbnZlcnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDExKVxuXHR2YXIgRElDVCA9IF9fd2VicGFja19yZXF1aXJlX18oMTIpXG5cblx0bW9kdWxlLmV4cG9ydHMgPSB7XG5cdCAgICAvLyDpmo/mnLrnlJ/miJDkuIDkuKrmnInlkLjlvJXlipvnmoTpopzoibLvvIzmoLzlvI/kuLogJyNSUkdHQkIn44CCXG5cdCAgICBjb2xvcjogZnVuY3Rpb24obmFtZSkge1xuXHQgICAgICAgIGlmIChuYW1lIHx8IERJQ1RbbmFtZV0pIHJldHVybiBESUNUW25hbWVdLm5pY2VyXG5cdCAgICAgICAgcmV0dXJuIHRoaXMuaGV4KClcblx0ICAgIH0sXG5cdCAgICAvLyAjREFDMERFXG5cdCAgICBoZXg6IGZ1bmN0aW9uKCkge1xuXHQgICAgICAgIHZhciBoc3YgPSB0aGlzLl9nb2xkZW5SYXRpb0NvbG9yKClcblx0ICAgICAgICB2YXIgcmdiID0gQ29udmVydC5oc3YycmdiKGhzdilcblx0ICAgICAgICB2YXIgaGV4ID0gQ29udmVydC5yZ2IyaGV4KHJnYlswXSwgcmdiWzFdLCByZ2JbMl0pXG5cdCAgICAgICAgcmV0dXJuIGhleFxuXHQgICAgfSxcblx0ICAgIC8vIHJnYigxMjgsMjU1LDI1NSlcblx0ICAgIHJnYjogZnVuY3Rpb24oKSB7XG5cdCAgICAgICAgdmFyIGhzdiA9IHRoaXMuX2dvbGRlblJhdGlvQ29sb3IoKVxuXHQgICAgICAgIHZhciByZ2IgPSBDb252ZXJ0LmhzdjJyZ2IoaHN2KVxuXHQgICAgICAgIHJldHVybiAncmdiKCcgK1xuXHQgICAgICAgICAgICBwYXJzZUludChyZ2JbMF0sIDEwKSArICcsICcgK1xuXHQgICAgICAgICAgICBwYXJzZUludChyZ2JbMV0sIDEwKSArICcsICcgK1xuXHQgICAgICAgICAgICBwYXJzZUludChyZ2JbMl0sIDEwKSArICcpJ1xuXHQgICAgfSxcblx0ICAgIC8vIHJnYmEoMTI4LDI1NSwyNTUsMC4zKVxuXHQgICAgcmdiYTogZnVuY3Rpb24oKSB7XG5cdCAgICAgICAgdmFyIGhzdiA9IHRoaXMuX2dvbGRlblJhdGlvQ29sb3IoKVxuXHQgICAgICAgIHZhciByZ2IgPSBDb252ZXJ0LmhzdjJyZ2IoaHN2KVxuXHQgICAgICAgIHJldHVybiAncmdiYSgnICtcblx0ICAgICAgICAgICAgcGFyc2VJbnQocmdiWzBdLCAxMCkgKyAnLCAnICtcblx0ICAgICAgICAgICAgcGFyc2VJbnQocmdiWzFdLCAxMCkgKyAnLCAnICtcblx0ICAgICAgICAgICAgcGFyc2VJbnQocmdiWzJdLCAxMCkgKyAnLCAnICtcblx0ICAgICAgICAgICAgTWF0aC5yYW5kb20oKS50b0ZpeGVkKDIpICsgJyknXG5cdCAgICB9LFxuXHQgICAgLy8gaHNsKDMwMCw4MCUsOTAlKVxuXHQgICAgaHNsOiBmdW5jdGlvbigpIHtcblx0ICAgICAgICB2YXIgaHN2ID0gdGhpcy5fZ29sZGVuUmF0aW9Db2xvcigpXG5cdCAgICAgICAgdmFyIGhzbCA9IENvbnZlcnQuaHN2MmhzbChoc3YpXG5cdCAgICAgICAgcmV0dXJuICdoc2woJyArXG5cdCAgICAgICAgICAgIHBhcnNlSW50KGhzbFswXSwgMTApICsgJywgJyArXG5cdCAgICAgICAgICAgIHBhcnNlSW50KGhzbFsxXSwgMTApICsgJywgJyArXG5cdCAgICAgICAgICAgIHBhcnNlSW50KGhzbFsyXSwgMTApICsgJyknXG5cdCAgICB9LFxuXHQgICAgLy8gaHR0cDovL21hcnRpbi5hbmtlcmwuY29tLzIwMDkvMTIvMDkvaG93LXRvLWNyZWF0ZS1yYW5kb20tY29sb3JzLXByb2dyYW1tYXRpY2FsbHkvXG5cdCAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vZGV2b25nb3ZldHQvY29sb3ItZ2VuZXJhdG9yL2Jsb2IvbWFzdGVyL2luZGV4LmpzXG5cdCAgICAvLyDpmo/mnLrnlJ/miJDkuIDkuKrmnInlkLjlvJXlipvnmoTpopzoibLjgIJcblx0ICAgIF9nb2xkZW5SYXRpb0NvbG9yOiBmdW5jdGlvbihzYXR1cmF0aW9uLCB2YWx1ZSkge1xuXHQgICAgICAgIHRoaXMuX2dvbGRlblJhdGlvID0gMC42MTgwMzM5ODg3NDk4OTVcblx0ICAgICAgICB0aGlzLl9odWUgPSB0aGlzLl9odWUgfHwgTWF0aC5yYW5kb20oKVxuXHQgICAgICAgIHRoaXMuX2h1ZSArPSB0aGlzLl9nb2xkZW5SYXRpb1xuXHQgICAgICAgIHRoaXMuX2h1ZSAlPSAxXG5cblx0ICAgICAgICBpZiAodHlwZW9mIHNhdHVyYXRpb24gIT09IFwibnVtYmVyXCIpIHNhdHVyYXRpb24gPSAwLjU7XG5cdCAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJudW1iZXJcIikgdmFsdWUgPSAwLjk1O1xuXG5cdCAgICAgICAgcmV0dXJuIFtcblx0ICAgICAgICAgICAgdGhpcy5faHVlICogMzYwLFxuXHQgICAgICAgICAgICBzYXR1cmF0aW9uICogMTAwLFxuXHQgICAgICAgICAgICB2YWx1ZSAqIDEwMFxuXHQgICAgICAgIF1cblx0ICAgIH1cblx0fVxuXG4vKioqLyB9KSxcbi8qIDExICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cblx0Lypcblx0ICAgICMjIENvbG9yIENvbnZlcnRcblxuXHQgICAgaHR0cDovL2Jsb2cuY3Nkbi5uZXQvaWRmYXlhL2FydGljbGUvZGV0YWlscy82NzcwNDE0XG5cdCAgICAgICAg6aKc6Imy56m66Ze0UkdC5LiOSFNWKEhTTCnnmoTovazmjaJcblx0Ki9cblx0Ly8gaHR0cHM6Ly9naXRodWIuY29tL2hhcnRodXIvY29sb3ItY29udmVydC9ibG9iL21hc3Rlci9jb252ZXJzaW9ucy5qc1xuXHRtb2R1bGUuZXhwb3J0cyA9IHtcblx0XHRyZ2IyaHNsOiBmdW5jdGlvbiByZ2IyaHNsKHJnYikge1xuXHRcdFx0dmFyIHIgPSByZ2JbMF0gLyAyNTUsXG5cdFx0XHRcdGcgPSByZ2JbMV0gLyAyNTUsXG5cdFx0XHRcdGIgPSByZ2JbMl0gLyAyNTUsXG5cdFx0XHRcdG1pbiA9IE1hdGgubWluKHIsIGcsIGIpLFxuXHRcdFx0XHRtYXggPSBNYXRoLm1heChyLCBnLCBiKSxcblx0XHRcdFx0ZGVsdGEgPSBtYXggLSBtaW4sXG5cdFx0XHRcdGgsIHMsIGw7XG5cblx0XHRcdGlmIChtYXggPT0gbWluKVxuXHRcdFx0XHRoID0gMDtcblx0XHRcdGVsc2UgaWYgKHIgPT0gbWF4KVxuXHRcdFx0XHRoID0gKGcgLSBiKSAvIGRlbHRhO1xuXHRcdFx0ZWxzZSBpZiAoZyA9PSBtYXgpXG5cdFx0XHRcdGggPSAyICsgKGIgLSByKSAvIGRlbHRhO1xuXHRcdFx0ZWxzZSBpZiAoYiA9PSBtYXgpXG5cdFx0XHRcdGggPSA0ICsgKHIgLSBnKSAvIGRlbHRhO1xuXG5cdFx0XHRoID0gTWF0aC5taW4oaCAqIDYwLCAzNjApO1xuXG5cdFx0XHRpZiAoaCA8IDApXG5cdFx0XHRcdGggKz0gMzYwO1xuXG5cdFx0XHRsID0gKG1pbiArIG1heCkgLyAyO1xuXG5cdFx0XHRpZiAobWF4ID09IG1pbilcblx0XHRcdFx0cyA9IDA7XG5cdFx0XHRlbHNlIGlmIChsIDw9IDAuNSlcblx0XHRcdFx0cyA9IGRlbHRhIC8gKG1heCArIG1pbik7XG5cdFx0XHRlbHNlXG5cdFx0XHRcdHMgPSBkZWx0YSAvICgyIC0gbWF4IC0gbWluKTtcblxuXHRcdFx0cmV0dXJuIFtoLCBzICogMTAwLCBsICogMTAwXTtcblx0XHR9LFxuXHRcdHJnYjJoc3Y6IGZ1bmN0aW9uIHJnYjJoc3YocmdiKSB7XG5cdFx0XHR2YXIgciA9IHJnYlswXSxcblx0XHRcdFx0ZyA9IHJnYlsxXSxcblx0XHRcdFx0YiA9IHJnYlsyXSxcblx0XHRcdFx0bWluID0gTWF0aC5taW4ociwgZywgYiksXG5cdFx0XHRcdG1heCA9IE1hdGgubWF4KHIsIGcsIGIpLFxuXHRcdFx0XHRkZWx0YSA9IG1heCAtIG1pbixcblx0XHRcdFx0aCwgcywgdjtcblxuXHRcdFx0aWYgKG1heCA9PT0gMClcblx0XHRcdFx0cyA9IDA7XG5cdFx0XHRlbHNlXG5cdFx0XHRcdHMgPSAoZGVsdGEgLyBtYXggKiAxMDAwKSAvIDEwO1xuXG5cdFx0XHRpZiAobWF4ID09IG1pbilcblx0XHRcdFx0aCA9IDA7XG5cdFx0XHRlbHNlIGlmIChyID09IG1heClcblx0XHRcdFx0aCA9IChnIC0gYikgLyBkZWx0YTtcblx0XHRcdGVsc2UgaWYgKGcgPT0gbWF4KVxuXHRcdFx0XHRoID0gMiArIChiIC0gcikgLyBkZWx0YTtcblx0XHRcdGVsc2UgaWYgKGIgPT0gbWF4KVxuXHRcdFx0XHRoID0gNCArIChyIC0gZykgLyBkZWx0YTtcblxuXHRcdFx0aCA9IE1hdGgubWluKGggKiA2MCwgMzYwKTtcblxuXHRcdFx0aWYgKGggPCAwKVxuXHRcdFx0XHRoICs9IDM2MDtcblxuXHRcdFx0diA9ICgobWF4IC8gMjU1KSAqIDEwMDApIC8gMTA7XG5cblx0XHRcdHJldHVybiBbaCwgcywgdl07XG5cdFx0fSxcblx0XHRoc2wycmdiOiBmdW5jdGlvbiBoc2wycmdiKGhzbCkge1xuXHRcdFx0dmFyIGggPSBoc2xbMF0gLyAzNjAsXG5cdFx0XHRcdHMgPSBoc2xbMV0gLyAxMDAsXG5cdFx0XHRcdGwgPSBoc2xbMl0gLyAxMDAsXG5cdFx0XHRcdHQxLCB0MiwgdDMsIHJnYiwgdmFsO1xuXG5cdFx0XHRpZiAocyA9PT0gMCkge1xuXHRcdFx0XHR2YWwgPSBsICogMjU1O1xuXHRcdFx0XHRyZXR1cm4gW3ZhbCwgdmFsLCB2YWxdO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAobCA8IDAuNSlcblx0XHRcdFx0dDIgPSBsICogKDEgKyBzKTtcblx0XHRcdGVsc2Vcblx0XHRcdFx0dDIgPSBsICsgcyAtIGwgKiBzO1xuXHRcdFx0dDEgPSAyICogbCAtIHQyO1xuXG5cdFx0XHRyZ2IgPSBbMCwgMCwgMF07XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDM7IGkrKykge1xuXHRcdFx0XHR0MyA9IGggKyAxIC8gMyAqIC0oaSAtIDEpO1xuXHRcdFx0XHRpZiAodDMgPCAwKSB0MysrO1xuXHRcdFx0XHRpZiAodDMgPiAxKSB0My0tO1xuXG5cdFx0XHRcdGlmICg2ICogdDMgPCAxKVxuXHRcdFx0XHRcdHZhbCA9IHQxICsgKHQyIC0gdDEpICogNiAqIHQzO1xuXHRcdFx0XHRlbHNlIGlmICgyICogdDMgPCAxKVxuXHRcdFx0XHRcdHZhbCA9IHQyO1xuXHRcdFx0XHRlbHNlIGlmICgzICogdDMgPCAyKVxuXHRcdFx0XHRcdHZhbCA9IHQxICsgKHQyIC0gdDEpICogKDIgLyAzIC0gdDMpICogNjtcblx0XHRcdFx0ZWxzZVxuXHRcdFx0XHRcdHZhbCA9IHQxO1xuXG5cdFx0XHRcdHJnYltpXSA9IHZhbCAqIDI1NTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHJnYjtcblx0XHR9LFxuXHRcdGhzbDJoc3Y6IGZ1bmN0aW9uIGhzbDJoc3YoaHNsKSB7XG5cdFx0XHR2YXIgaCA9IGhzbFswXSxcblx0XHRcdFx0cyA9IGhzbFsxXSAvIDEwMCxcblx0XHRcdFx0bCA9IGhzbFsyXSAvIDEwMCxcblx0XHRcdFx0c3YsIHY7XG5cdFx0XHRsICo9IDI7XG5cdFx0XHRzICo9IChsIDw9IDEpID8gbCA6IDIgLSBsO1xuXHRcdFx0diA9IChsICsgcykgLyAyO1xuXHRcdFx0c3YgPSAoMiAqIHMpIC8gKGwgKyBzKTtcblx0XHRcdHJldHVybiBbaCwgc3YgKiAxMDAsIHYgKiAxMDBdO1xuXHRcdH0sXG5cdFx0aHN2MnJnYjogZnVuY3Rpb24gaHN2MnJnYihoc3YpIHtcblx0XHRcdHZhciBoID0gaHN2WzBdIC8gNjBcblx0XHRcdHZhciBzID0gaHN2WzFdIC8gMTAwXG5cdFx0XHR2YXIgdiA9IGhzdlsyXSAvIDEwMFxuXHRcdFx0dmFyIGhpID0gTWF0aC5mbG9vcihoKSAlIDZcblxuXHRcdFx0dmFyIGYgPSBoIC0gTWF0aC5mbG9vcihoKVxuXHRcdFx0dmFyIHAgPSAyNTUgKiB2ICogKDEgLSBzKVxuXHRcdFx0dmFyIHEgPSAyNTUgKiB2ICogKDEgLSAocyAqIGYpKVxuXHRcdFx0dmFyIHQgPSAyNTUgKiB2ICogKDEgLSAocyAqICgxIC0gZikpKVxuXG5cdFx0XHR2ID0gMjU1ICogdlxuXG5cdFx0XHRzd2l0Y2ggKGhpKSB7XG5cdFx0XHRcdGNhc2UgMDpcblx0XHRcdFx0XHRyZXR1cm4gW3YsIHQsIHBdXG5cdFx0XHRcdGNhc2UgMTpcblx0XHRcdFx0XHRyZXR1cm4gW3EsIHYsIHBdXG5cdFx0XHRcdGNhc2UgMjpcblx0XHRcdFx0XHRyZXR1cm4gW3AsIHYsIHRdXG5cdFx0XHRcdGNhc2UgMzpcblx0XHRcdFx0XHRyZXR1cm4gW3AsIHEsIHZdXG5cdFx0XHRcdGNhc2UgNDpcblx0XHRcdFx0XHRyZXR1cm4gW3QsIHAsIHZdXG5cdFx0XHRcdGNhc2UgNTpcblx0XHRcdFx0XHRyZXR1cm4gW3YsIHAsIHFdXG5cdFx0XHR9XG5cdFx0fSxcblx0XHRoc3YyaHNsOiBmdW5jdGlvbiBoc3YyaHNsKGhzdikge1xuXHRcdFx0dmFyIGggPSBoc3ZbMF0sXG5cdFx0XHRcdHMgPSBoc3ZbMV0gLyAxMDAsXG5cdFx0XHRcdHYgPSBoc3ZbMl0gLyAxMDAsXG5cdFx0XHRcdHNsLCBsO1xuXG5cdFx0XHRsID0gKDIgLSBzKSAqIHY7XG5cdFx0XHRzbCA9IHMgKiB2O1xuXHRcdFx0c2wgLz0gKGwgPD0gMSkgPyBsIDogMiAtIGw7XG5cdFx0XHRsIC89IDI7XG5cdFx0XHRyZXR1cm4gW2gsIHNsICogMTAwLCBsICogMTAwXTtcblx0XHR9LFxuXHRcdC8vIGh0dHA6Ly93d3cuMTQwYnl0LmVzL2tleXdvcmRzL2NvbG9yXG5cdFx0cmdiMmhleDogZnVuY3Rpb24oXG5cdFx0XHRhLCAvLyByZWQsIGFzIGEgbnVtYmVyIGZyb20gMCB0byAyNTVcblx0XHRcdGIsIC8vIGdyZWVuLCBhcyBhIG51bWJlciBmcm9tIDAgdG8gMjU1XG5cdFx0XHRjIC8vIGJsdWUsIGFzIGEgbnVtYmVyIGZyb20gMCB0byAyNTVcblx0XHQpIHtcblx0XHRcdHJldHVybiBcIiNcIiArICgoMjU2ICsgYSA8PCA4IHwgYikgPDwgOCB8IGMpLnRvU3RyaW5nKDE2KS5zbGljZSgxKVxuXHRcdH0sXG5cdFx0aGV4MnJnYjogZnVuY3Rpb24oXG5cdFx0XHRhIC8vIHRha2UgYSBcIiN4eHh4eHhcIiBoZXggc3RyaW5nLFxuXHRcdCkge1xuXHRcdFx0YSA9ICcweCcgKyBhLnNsaWNlKDEpLnJlcGxhY2UoYS5sZW5ndGggPiA0ID8gYSA6IC8uL2csICckJiQmJykgfCAwO1xuXHRcdFx0cmV0dXJuIFthID4+IDE2LCBhID4+IDggJiAyNTUsIGEgJiAyNTVdXG5cdFx0fVxuXHR9XG5cbi8qKiovIH0pLFxuLyogMTIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuXHQvKlxuXHQgICAgIyMgQ29sb3Ig5a2X5YW45pWw5o2uXG5cblx0ICAgIOWtl+WFuOaVsOaNruadpea6kCBbQSBuaWNlciBjb2xvciBwYWxldHRlIGZvciB0aGUgd2ViXShodHRwOi8vY2xycy5jYy8pXG5cdCovXG5cdG1vZHVsZS5leHBvcnRzID0ge1xuXHQgICAgLy8gbmFtZSB2YWx1ZSBuaWNlclxuXHQgICAgbmF2eToge1xuXHQgICAgICAgIHZhbHVlOiAnIzAwMDA4MCcsXG5cdCAgICAgICAgbmljZXI6ICcjMDAxRjNGJ1xuXHQgICAgfSxcblx0ICAgIGJsdWU6IHtcblx0ICAgICAgICB2YWx1ZTogJyMwMDAwZmYnLFxuXHQgICAgICAgIG5pY2VyOiAnIzAwNzREOSdcblx0ICAgIH0sXG5cdCAgICBhcXVhOiB7XG5cdCAgICAgICAgdmFsdWU6ICcjMDBmZmZmJyxcblx0ICAgICAgICBuaWNlcjogJyM3RkRCRkYnXG5cdCAgICB9LFxuXHQgICAgdGVhbDoge1xuXHQgICAgICAgIHZhbHVlOiAnIzAwODA4MCcsXG5cdCAgICAgICAgbmljZXI6ICcjMzlDQ0NDJ1xuXHQgICAgfSxcblx0ICAgIG9saXZlOiB7XG5cdCAgICAgICAgdmFsdWU6ICcjMDA4MDAwJyxcblx0ICAgICAgICBuaWNlcjogJyMzRDk5NzAnXG5cdCAgICB9LFxuXHQgICAgZ3JlZW46IHtcblx0ICAgICAgICB2YWx1ZTogJyMwMDgwMDAnLFxuXHQgICAgICAgIG5pY2VyOiAnIzJFQ0M0MCdcblx0ICAgIH0sXG5cdCAgICBsaW1lOiB7XG5cdCAgICAgICAgdmFsdWU6ICcjMDBmZjAwJyxcblx0ICAgICAgICBuaWNlcjogJyMwMUZGNzAnXG5cdCAgICB9LFxuXHQgICAgeWVsbG93OiB7XG5cdCAgICAgICAgdmFsdWU6ICcjZmZmZjAwJyxcblx0ICAgICAgICBuaWNlcjogJyNGRkRDMDAnXG5cdCAgICB9LFxuXHQgICAgb3JhbmdlOiB7XG5cdCAgICAgICAgdmFsdWU6ICcjZmZhNTAwJyxcblx0ICAgICAgICBuaWNlcjogJyNGRjg1MUInXG5cdCAgICB9LFxuXHQgICAgcmVkOiB7XG5cdCAgICAgICAgdmFsdWU6ICcjZmYwMDAwJyxcblx0ICAgICAgICBuaWNlcjogJyNGRjQxMzYnXG5cdCAgICB9LFxuXHQgICAgbWFyb29uOiB7XG5cdCAgICAgICAgdmFsdWU6ICcjODAwMDAwJyxcblx0ICAgICAgICBuaWNlcjogJyM4NTE0NEInXG5cdCAgICB9LFxuXHQgICAgZnVjaHNpYToge1xuXHQgICAgICAgIHZhbHVlOiAnI2ZmMDBmZicsXG5cdCAgICAgICAgbmljZXI6ICcjRjAxMkJFJ1xuXHQgICAgfSxcblx0ICAgIHB1cnBsZToge1xuXHQgICAgICAgIHZhbHVlOiAnIzgwMDA4MCcsXG5cdCAgICAgICAgbmljZXI6ICcjQjEwREM5J1xuXHQgICAgfSxcblx0ICAgIHNpbHZlcjoge1xuXHQgICAgICAgIHZhbHVlOiAnI2MwYzBjMCcsXG5cdCAgICAgICAgbmljZXI6ICcjREREREREJ1xuXHQgICAgfSxcblx0ICAgIGdyYXk6IHtcblx0ICAgICAgICB2YWx1ZTogJyM4MDgwODAnLFxuXHQgICAgICAgIG5pY2VyOiAnI0FBQUFBQSdcblx0ICAgIH0sXG5cdCAgICBibGFjazoge1xuXHQgICAgICAgIHZhbHVlOiAnIzAwMDAwMCcsXG5cdCAgICAgICAgbmljZXI6ICcjMTExMTExJ1xuXHQgICAgfSxcblx0ICAgIHdoaXRlOiB7XG5cdCAgICAgICAgdmFsdWU6ICcjRkZGRkZGJyxcblx0ICAgICAgICBuaWNlcjogJyNGRkZGRkYnXG5cdCAgICB9XG5cdH1cblxuLyoqKi8gfSksXG4vKiAxMyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cdC8qXG5cdCAgICAjIyBUZXh0XG5cblx0ICAgIGh0dHA6Ly93d3cubGlwc3VtLmNvbS9cblx0Ki9cblx0dmFyIEJhc2ljID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2KVxuXHR2YXIgSGVscGVyID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNClcblxuXHRmdW5jdGlvbiByYW5nZShkZWZhdWx0TWluLCBkZWZhdWx0TWF4LCBtaW4sIG1heCkge1xuXHQgICAgcmV0dXJuIG1pbiA9PT0gdW5kZWZpbmVkID8gQmFzaWMubmF0dXJhbChkZWZhdWx0TWluLCBkZWZhdWx0TWF4KSA6IC8vICgpXG5cdCAgICAgICAgbWF4ID09PSB1bmRlZmluZWQgPyBtaW4gOiAvLyAoIGxlbiApXG5cdCAgICAgICAgQmFzaWMubmF0dXJhbChwYXJzZUludChtaW4sIDEwKSwgcGFyc2VJbnQobWF4LCAxMCkpIC8vICggbWluLCBtYXggKVxuXHR9XG5cblx0bW9kdWxlLmV4cG9ydHMgPSB7XG5cdCAgICAvLyDpmo/mnLrnlJ/miJDkuIDmrrXmlofmnKzjgIJcblx0ICAgIHBhcmFncmFwaDogZnVuY3Rpb24obWluLCBtYXgpIHtcblx0ICAgICAgICB2YXIgbGVuID0gcmFuZ2UoMywgNywgbWluLCBtYXgpXG5cdCAgICAgICAgdmFyIHJlc3VsdCA9IFtdXG5cdCAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuXHQgICAgICAgICAgICByZXN1bHQucHVzaCh0aGlzLnNlbnRlbmNlKCkpXG5cdCAgICAgICAgfVxuXHQgICAgICAgIHJldHVybiByZXN1bHQuam9pbignICcpXG5cdCAgICB9LFxuXHQgICAgLy8gXG5cdCAgICBjcGFyYWdyYXBoOiBmdW5jdGlvbihtaW4sIG1heCkge1xuXHQgICAgICAgIHZhciBsZW4gPSByYW5nZSgzLCA3LCBtaW4sIG1heClcblx0ICAgICAgICB2YXIgcmVzdWx0ID0gW11cblx0ICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG5cdCAgICAgICAgICAgIHJlc3VsdC5wdXNoKHRoaXMuY3NlbnRlbmNlKCkpXG5cdCAgICAgICAgfVxuXHQgICAgICAgIHJldHVybiByZXN1bHQuam9pbignJylcblx0ICAgIH0sXG5cdCAgICAvLyDpmo/mnLrnlJ/miJDkuIDkuKrlj6XlrZDvvIznrKzkuIDkuKrljZXor43nmoTpppblrZfmr43lpKflhpnjgIJcblx0ICAgIHNlbnRlbmNlOiBmdW5jdGlvbihtaW4sIG1heCkge1xuXHQgICAgICAgIHZhciBsZW4gPSByYW5nZSgxMiwgMTgsIG1pbiwgbWF4KVxuXHQgICAgICAgIHZhciByZXN1bHQgPSBbXVxuXHQgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcblx0ICAgICAgICAgICAgcmVzdWx0LnB1c2godGhpcy53b3JkKCkpXG5cdCAgICAgICAgfVxuXHQgICAgICAgIHJldHVybiBIZWxwZXIuY2FwaXRhbGl6ZShyZXN1bHQuam9pbignICcpKSArICcuJ1xuXHQgICAgfSxcblx0ICAgIC8vIOmaj+acuueUn+aIkOS4gOS4quS4reaWh+WPpeWtkOOAglxuXHQgICAgY3NlbnRlbmNlOiBmdW5jdGlvbihtaW4sIG1heCkge1xuXHQgICAgICAgIHZhciBsZW4gPSByYW5nZSgxMiwgMTgsIG1pbiwgbWF4KVxuXHQgICAgICAgIHZhciByZXN1bHQgPSBbXVxuXHQgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcblx0ICAgICAgICAgICAgcmVzdWx0LnB1c2godGhpcy5jd29yZCgpKVxuXHQgICAgICAgIH1cblxuXHQgICAgICAgIHJldHVybiByZXN1bHQuam9pbignJykgKyAn44CCJ1xuXHQgICAgfSxcblx0ICAgIC8vIOmaj+acuueUn+aIkOS4gOS4quWNleivjeOAglxuXHQgICAgd29yZDogZnVuY3Rpb24obWluLCBtYXgpIHtcblx0ICAgICAgICB2YXIgbGVuID0gcmFuZ2UoMywgMTAsIG1pbiwgbWF4KVxuXHQgICAgICAgIHZhciByZXN1bHQgPSAnJztcblx0ICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG5cdCAgICAgICAgICAgIHJlc3VsdCArPSBCYXNpYy5jaGFyYWN0ZXIoJ2xvd2VyJylcblx0ICAgICAgICB9XG5cdCAgICAgICAgcmV0dXJuIHJlc3VsdFxuXHQgICAgfSxcblx0ICAgIC8vIOmaj+acuueUn+aIkOS4gOS4quaIluWkmuS4quaxieWtl+OAglxuXHQgICAgY3dvcmQ6IGZ1bmN0aW9uKHBvb2wsIG1pbiwgbWF4KSB7XG5cdCAgICAgICAgLy8g5pyA5bi455So55qEIDUwMCDkuKrmsYnlrZcgaHR0cDovL2JhaWtlLmJhaWR1LmNvbS92aWV3LzU2ODQzNi5odG1cblx0ICAgICAgICB2YXIgRElDVF9LQU5aSSA9ICfnmoTkuIDmmK/lnKjkuI3kuobmnInlkozkurrov5nkuK3lpKfkuLrkuIrkuKrlm73miJHku6XopoHku5bml7bmnaXnlKjku6znlJ/liLDkvZzlnLDkuo7lh7rlsLHliIblr7nmiJDkvJrlj6/kuLvlj5HlubTliqjlkIzlt6XkuZ/og73kuIvov4flrZDor7Tkuqfnp43pnaLogIzmlrnlkI7lpJrlrprooYzlrabms5XmiYDmsJHlvpfnu4/ljYHkuInkuYvov5vnnYDnrYnpg6jluqblrrbnlLXlipvph4zlpoLmsLTljJbpq5joh6rkuoznkIbotbflsI/niannjrDlrp7liqDph4/pg73kuKTkvZPliLbmnLrlvZPkvb/ngrnku47kuJrmnKzljrvmiormgKflpb3lupTlvIDlroPlkIjov5jlm6DnlLHlhbbkupvnhLbliY3lpJblpKnmlL/lm5vml6XpgqPnpL7kuYnkuovlubPlvaLnm7jlhajooajpl7TmoLfkuI7lhbPlkITph43mlrDnur/lhoXmlbDmraPlv4Plj43kvaDmmI7nnIvljp/lj4jkuYjliKnmr5TmiJbkvYbotKjmsJTnrKzlkJHpgZPlkb3mraTlj5jmnaHlj6rmsqHnu5Pop6Ppl67mhI/lu7rmnIjlhazml6Dns7vlhpvlvojmg4XogIXmnIDnq4vku6Pmg7Plt7LpgJrlubbmj5Dnm7TpopjlhZrnqIvlsZXkupTmnpzmlpnosaHlkZjpnankvY3lhaXluLjmlofmgLvmrKHlk4HlvI/mtLvorr7lj4rnrqHnibnku7bplb/msYLogIHlpLTln7rotYTovrnmtYHot6/nuqflsJHlm77lsbHnu5/mjqXnn6XovoPlsIbnu4Top4HorqHliKvlpbnmiYvop5LmnJ/moLnorrrov5DlhpzmjIflh6DkuZ3ljLrlvLrmlL7lhrPopb/ooqvlubLlgZrlv4XmiJjlhYjlm57liJnku7vlj5bmja7lpITpmJ/ljZfnu5noibLlhYnpl6jljbPkv53msrvljJfpgKDnmb7op4Tng63poobkuIPmtbflj6PkuJzlr7zlmajljovlv5fkuJbph5Hlop7kuonmtY7pmLbmsrnmgJ3mnK/mnoHkuqTlj5fogZTku4DorqTlha3lhbHmnYPmlLbor4HmlLnmuIXlt7Hnvo7lho3ph4fovazmm7TljZXpo47liIfmiZPnmb3mlZnpgJ/oirHluKblronlnLrouqvovabkvovnnJ/liqHlhbfkuIfmr4/nm67oh7Povr7otbDnp6/npLrorq7lo7DmiqXmlpflroznsbvlhavnprvljY7lkI3noa7miY3np5HlvKDkv6HpqazoioLor53nsbPmlbTnqbrlhYPlhrXku4rpm4bmuKnkvKDlnJ/orrjmraXnvqTlub/nn7PorrDpnIDmrrXnoJTnlYzmi4nmnpflvovlj6vkuJTnqbbop4Lotornu4foo4XlvbHnrpfkvY7mjIHpn7PkvJfkuabluIPlpI3lrrnlhL/pobvpmYXllYbpnZ7pqozov57mlq3mt7Hpmr7ov5Hnn7/ljYPlkajlp5TntKDmioDlpIfljYrlip7pnZLnnIHliJfkuaDlk43nuqbmlK/oiKzlj7LmhJ/lirPkvr/lm6LlvoDphbjljobluILlhYvkvZXpmaTmtojmnoTlupznp7DlpKrlh4bnsr7lgLzlj7fnjofml4/nu7TliJLpgInmoIflhpnlrZjlgJnmr5vkurLlv6vmlYjmlq/pmaLmn6XmsZ/lnovnnLznjovmjInmoLzlhbvmmJPnva7mtL7lsYLniYflp4vljbTkuJPnirbogrLljoLkuqzor4bpgILlsZ7lnIbljIXngavkvY/osIPmu6Hljr/lsYDnhaflj4LnuqLnu4blvJXlkKzor6Xpk4Hku7fkuKXpvpnpo54nXG5cblx0ICAgICAgICB2YXIgbGVuXG5cdCAgICAgICAgc3dpdGNoIChhcmd1bWVudHMubGVuZ3RoKSB7XG5cdCAgICAgICAgICAgIGNhc2UgMDogLy8gKClcblx0ICAgICAgICAgICAgICAgIHBvb2wgPSBESUNUX0tBTlpJXG5cdCAgICAgICAgICAgICAgICBsZW4gPSAxXG5cdCAgICAgICAgICAgICAgICBicmVha1xuXHQgICAgICAgICAgICBjYXNlIDE6IC8vICggcG9vbCApXG5cdCAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGFyZ3VtZW50c1swXSA9PT0gJ3N0cmluZycpIHtcblx0ICAgICAgICAgICAgICAgICAgICBsZW4gPSAxXG5cdCAgICAgICAgICAgICAgICB9IGVsc2Uge1xuXHQgICAgICAgICAgICAgICAgICAgIC8vICggbGVuZ3RoIClcblx0ICAgICAgICAgICAgICAgICAgICBsZW4gPSBwb29sXG5cdCAgICAgICAgICAgICAgICAgICAgcG9vbCA9IERJQ1RfS0FOWklcblx0ICAgICAgICAgICAgICAgIH1cblx0ICAgICAgICAgICAgICAgIGJyZWFrXG5cdCAgICAgICAgICAgIGNhc2UgMjpcblx0ICAgICAgICAgICAgICAgIC8vICggcG9vbCwgbGVuZ3RoIClcblx0ICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgYXJndW1lbnRzWzBdID09PSAnc3RyaW5nJykge1xuXHQgICAgICAgICAgICAgICAgICAgIGxlbiA9IG1pblxuXHQgICAgICAgICAgICAgICAgfSBlbHNlIHtcblx0ICAgICAgICAgICAgICAgICAgICAvLyAoIG1pbiwgbWF4IClcblx0ICAgICAgICAgICAgICAgICAgICBsZW4gPSB0aGlzLm5hdHVyYWwocG9vbCwgbWluKVxuXHQgICAgICAgICAgICAgICAgICAgIHBvb2wgPSBESUNUX0tBTlpJXG5cdCAgICAgICAgICAgICAgICB9XG5cdCAgICAgICAgICAgICAgICBicmVha1xuXHQgICAgICAgICAgICBjYXNlIDM6XG5cdCAgICAgICAgICAgICAgICBsZW4gPSB0aGlzLm5hdHVyYWwobWluLCBtYXgpXG5cdCAgICAgICAgICAgICAgICBicmVha1xuXHQgICAgICAgIH1cblxuXHQgICAgICAgIHZhciByZXN1bHQgPSAnJ1xuXHQgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcblx0ICAgICAgICAgICAgcmVzdWx0ICs9IHBvb2wuY2hhckF0KHRoaXMubmF0dXJhbCgwLCBwb29sLmxlbmd0aCAtIDEpKVxuXHQgICAgICAgIH1cblx0ICAgICAgICByZXR1cm4gcmVzdWx0XG5cdCAgICB9LFxuXHQgICAgLy8g6ZqP5py655Sf5oiQ5LiA5Y+l5qCH6aKY77yM5YW25Lit5q+P5Liq5Y2V6K+N55qE6aaW5a2X5q+N5aSn5YaZ44CCXG5cdCAgICB0aXRsZTogZnVuY3Rpb24obWluLCBtYXgpIHtcblx0ICAgICAgICB2YXIgbGVuID0gcmFuZ2UoMywgNywgbWluLCBtYXgpXG5cdCAgICAgICAgdmFyIHJlc3VsdCA9IFtdXG5cdCAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuXHQgICAgICAgICAgICByZXN1bHQucHVzaCh0aGlzLmNhcGl0YWxpemUodGhpcy53b3JkKCkpKVxuXHQgICAgICAgIH1cblx0ICAgICAgICByZXR1cm4gcmVzdWx0LmpvaW4oJyAnKVxuXHQgICAgfSxcblx0ICAgIC8vIOmaj+acuueUn+aIkOS4gOWPpeS4reaWh+agh+mimOOAglxuXHQgICAgY3RpdGxlOiBmdW5jdGlvbihtaW4sIG1heCkge1xuXHQgICAgICAgIHZhciBsZW4gPSByYW5nZSgzLCA3LCBtaW4sIG1heClcblx0ICAgICAgICB2YXIgcmVzdWx0ID0gW11cblx0ICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG5cdCAgICAgICAgICAgIHJlc3VsdC5wdXNoKHRoaXMuY3dvcmQoKSlcblx0ICAgICAgICB9XG5cdCAgICAgICAgcmV0dXJuIHJlc3VsdC5qb2luKCcnKVxuXHQgICAgfVxuXHR9XG5cbi8qKiovIH0pLFxuLyogMTQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXHQvKlxuXHQgICAgIyMgSGVscGVyc1xuXHQqL1xuXG5cdHZhciBVdGlsID0gX193ZWJwYWNrX3JlcXVpcmVfXygzKVxuXG5cdG1vZHVsZS5leHBvcnRzID0ge1xuXHRcdC8vIOaKiuWtl+espuS4sueahOesrOS4gOS4quWtl+avjei9rOaNouS4uuWkp+WGmeOAglxuXHRcdGNhcGl0YWxpemU6IGZ1bmN0aW9uKHdvcmQpIHtcblx0XHRcdHJldHVybiAod29yZCArICcnKS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArICh3b3JkICsgJycpLnN1YnN0cigxKVxuXHRcdH0sXG5cdFx0Ly8g5oqK5a2X56ym5Liy6L2s5o2i5Li65aSn5YaZ44CCXG5cdFx0dXBwZXI6IGZ1bmN0aW9uKHN0cikge1xuXHRcdFx0cmV0dXJuIChzdHIgKyAnJykudG9VcHBlckNhc2UoKVxuXHRcdH0sXG5cdFx0Ly8g5oqK5a2X56ym5Liy6L2s5o2i5Li65bCP5YaZ44CCXG5cdFx0bG93ZXI6IGZ1bmN0aW9uKHN0cikge1xuXHRcdFx0cmV0dXJuIChzdHIgKyAnJykudG9Mb3dlckNhc2UoKVxuXHRcdH0sXG5cdFx0Ly8g5LuO5pWw57uE5Lit6ZqP5py66YCJ5Y+W5LiA5Liq5YWD57Sg77yM5bm26L+U5Zue44CCXG5cdFx0cGljazogZnVuY3Rpb24gcGljayhhcnIsIG1pbiwgbWF4KSB7XG5cdFx0XHQvLyBwaWNrKCBpdGVtMSwgaXRlbTIgLi4uIClcblx0XHRcdGlmICghVXRpbC5pc0FycmF5KGFycikpIHtcblx0XHRcdFx0YXJyID0gW10uc2xpY2UuY2FsbChhcmd1bWVudHMpXG5cdFx0XHRcdG1pbiA9IDFcblx0XHRcdFx0bWF4ID0gMVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Ly8gcGljayggWyBpdGVtMSwgaXRlbTIgLi4uIF0gKVxuXHRcdFx0XHRpZiAobWluID09PSB1bmRlZmluZWQpIG1pbiA9IDFcblxuXHRcdFx0XHQvLyBwaWNrKCBbIGl0ZW0xLCBpdGVtMiAuLi4gXSwgY291bnQgKVxuXHRcdFx0XHRpZiAobWF4ID09PSB1bmRlZmluZWQpIG1heCA9IG1pblxuXHRcdFx0fVxuXG5cdFx0XHRpZiAobWluID09PSAxICYmIG1heCA9PT0gMSkgcmV0dXJuIGFyclt0aGlzLm5hdHVyYWwoMCwgYXJyLmxlbmd0aCAtIDEpXVxuXG5cdFx0XHQvLyBwaWNrKCBbIGl0ZW0xLCBpdGVtMiAuLi4gXSwgbWluLCBtYXggKVxuXHRcdFx0cmV0dXJuIHRoaXMuc2h1ZmZsZShhcnIsIG1pbiwgbWF4KVxuXG5cdFx0XHQvLyDpgJrov4flj4LmlbDkuKrmlbDliKTmlq3mlrnms5Xnrb7lkI3vvIzmianlsZXmgKflpKrlt67vvIEjOTBcblx0XHRcdC8vIHN3aXRjaCAoYXJndW1lbnRzLmxlbmd0aCkge1xuXHRcdFx0Ly8gXHRjYXNlIDE6XG5cdFx0XHQvLyBcdFx0Ly8gcGljayggWyBpdGVtMSwgaXRlbTIgLi4uIF0gKVxuXHRcdFx0Ly8gXHRcdHJldHVybiBhcnJbdGhpcy5uYXR1cmFsKDAsIGFyci5sZW5ndGggLSAxKV1cblx0XHRcdC8vIFx0Y2FzZSAyOlxuXHRcdFx0Ly8gXHRcdC8vIHBpY2soIFsgaXRlbTEsIGl0ZW0yIC4uLiBdLCBjb3VudCApXG5cdFx0XHQvLyBcdFx0bWF4ID0gbWluXG5cdFx0XHQvLyBcdFx0XHQvKiBmYWxscyB0aHJvdWdoICovXG5cdFx0XHQvLyBcdGNhc2UgMzpcblx0XHRcdC8vIFx0XHQvLyBwaWNrKCBbIGl0ZW0xLCBpdGVtMiAuLi4gXSwgbWluLCBtYXggKVxuXHRcdFx0Ly8gXHRcdHJldHVybiB0aGlzLnNodWZmbGUoYXJyLCBtaW4sIG1heClcblx0XHRcdC8vIH1cblx0XHR9LFxuXHRcdC8qXG5cdFx0ICAgIOaJk+S5seaVsOe7hOS4reWFg+e0oOeahOmhuuW6j++8jOW5tui/lOWbnuOAglxuXHRcdCAgICBHaXZlbiBhbiBhcnJheSwgc2NyYW1ibGUgdGhlIG9yZGVyIGFuZCByZXR1cm4gaXQuXG5cblx0XHQgICAg5YW25LuW55qE5a6e546w5oCd6Lev77yaXG5cdFx0ICAgICAgICAvLyBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL2pzbGlicy93aWtpL0phdmFzY3JpcHRUaXBzXG5cdFx0ICAgICAgICByZXN1bHQgPSByZXN1bHQuc29ydChmdW5jdGlvbigpIHtcblx0XHQgICAgICAgICAgICByZXR1cm4gTWF0aC5yYW5kb20oKSAtIDAuNVxuXHRcdCAgICAgICAgfSlcblx0XHQqL1xuXHRcdHNodWZmbGU6IGZ1bmN0aW9uIHNodWZmbGUoYXJyLCBtaW4sIG1heCkge1xuXHRcdFx0YXJyID0gYXJyIHx8IFtdXG5cdFx0XHR2YXIgb2xkID0gYXJyLnNsaWNlKDApLFxuXHRcdFx0XHRyZXN1bHQgPSBbXSxcblx0XHRcdFx0aW5kZXggPSAwLFxuXHRcdFx0XHRsZW5ndGggPSBvbGQubGVuZ3RoO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpbmRleCA9IHRoaXMubmF0dXJhbCgwLCBvbGQubGVuZ3RoIC0gMSlcblx0XHRcdFx0cmVzdWx0LnB1c2gob2xkW2luZGV4XSlcblx0XHRcdFx0b2xkLnNwbGljZShpbmRleCwgMSlcblx0XHRcdH1cblx0XHRcdHN3aXRjaCAoYXJndW1lbnRzLmxlbmd0aCkge1xuXHRcdFx0XHRjYXNlIDA6XG5cdFx0XHRcdGNhc2UgMTpcblx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0XG5cdFx0XHRcdGNhc2UgMjpcblx0XHRcdFx0XHRtYXggPSBtaW5cblx0XHRcdFx0XHRcdC8qIGZhbGxzIHRocm91Z2ggKi9cblx0XHRcdFx0Y2FzZSAzOlxuXHRcdFx0XHRcdG1pbiA9IHBhcnNlSW50KG1pbiwgMTApXG5cdFx0XHRcdFx0bWF4ID0gcGFyc2VJbnQobWF4LCAxMClcblx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0LnNsaWNlKDAsIHRoaXMubmF0dXJhbChtaW4sIG1heCkpXG5cdFx0XHR9XG5cdFx0fSxcblx0XHQvKlxuXHRcdCAgICAqIFJhbmRvbS5vcmRlcihpdGVtLCBpdGVtKVxuXHRcdCAgICAqIFJhbmRvbS5vcmRlcihbaXRlbSwgaXRlbSAuLi5dKVxuXG5cdFx0ICAgIOmhuuW6j+iOt+WPluaVsOe7hOS4reeahOWFg+e0oFxuXG5cdFx0ICAgIFtKU09O5a+85YWl5pWw57uE5pSv5oyB5pWw57uE5pWw5o2u5b2V5YWlXShodHRwczovL2dpdGh1Yi5jb20vdGh4L1JBUC9pc3N1ZXMvMjIpXG5cblx0XHQgICAg5LiN5pSv5oyB5Y2V54us6LCD55So77yBXG5cdFx0Ki9cblx0XHRvcmRlcjogZnVuY3Rpb24gb3JkZXIoYXJyYXkpIHtcblx0XHRcdG9yZGVyLmNhY2hlID0gb3JkZXIuY2FjaGUgfHwge31cblxuXHRcdFx0aWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSBhcnJheSA9IFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAwKVxuXG5cdFx0XHQvLyBvcHRpb25zLmNvbnRleHQucGF0aC90ZW1wbGF0ZVBhdGhcblx0XHRcdHZhciBvcHRpb25zID0gb3JkZXIub3B0aW9uc1xuXHRcdFx0dmFyIHRlbXBsYXRlUGF0aCA9IG9wdGlvbnMuY29udGV4dC50ZW1wbGF0ZVBhdGguam9pbignLicpXG5cblx0XHRcdHZhciBjYWNoZSA9IChcblx0XHRcdFx0b3JkZXIuY2FjaGVbdGVtcGxhdGVQYXRoXSA9IG9yZGVyLmNhY2hlW3RlbXBsYXRlUGF0aF0gfHwge1xuXHRcdFx0XHRcdGluZGV4OiAwLFxuXHRcdFx0XHRcdGFycmF5OiBhcnJheVxuXHRcdFx0XHR9XG5cdFx0XHQpXG5cblx0XHRcdHJldHVybiBjYWNoZS5hcnJheVtjYWNoZS5pbmRleCsrICUgY2FjaGUuYXJyYXkubGVuZ3RoXVxuXHRcdH1cblx0fVxuXG4vKioqLyB9KSxcbi8qIDE1ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cblx0Lypcblx0ICAgICMjIE5hbWVcblxuXHQgICAgW0JleW9uZCB0aGUgVG9wIDEwMDAgTmFtZXNdKGh0dHA6Ly93d3cuc3NhLmdvdi9vYWN0L2JhYnluYW1lcy9saW1pdHMuaHRtbClcblx0Ki9cblx0bW9kdWxlLmV4cG9ydHMgPSB7XG5cdFx0Ly8g6ZqP5py655Sf5oiQ5LiA5Liq5bi46KeB55qE6Iux5paH5ZCN44CCXG5cdFx0Zmlyc3Q6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG5hbWVzID0gW1xuXHRcdFx0XHQvLyBtYWxlXG5cdFx0XHRcdFwiSmFtZXNcIiwgXCJKb2huXCIsIFwiUm9iZXJ0XCIsIFwiTWljaGFlbFwiLCBcIldpbGxpYW1cIixcblx0XHRcdFx0XCJEYXZpZFwiLCBcIlJpY2hhcmRcIiwgXCJDaGFybGVzXCIsIFwiSm9zZXBoXCIsIFwiVGhvbWFzXCIsXG5cdFx0XHRcdFwiQ2hyaXN0b3BoZXJcIiwgXCJEYW5pZWxcIiwgXCJQYXVsXCIsIFwiTWFya1wiLCBcIkRvbmFsZFwiLFxuXHRcdFx0XHRcIkdlb3JnZVwiLCBcIktlbm5ldGhcIiwgXCJTdGV2ZW5cIiwgXCJFZHdhcmRcIiwgXCJCcmlhblwiLFxuXHRcdFx0XHRcIlJvbmFsZFwiLCBcIkFudGhvbnlcIiwgXCJLZXZpblwiLCBcIkphc29uXCIsIFwiTWF0dGhld1wiLFxuXHRcdFx0XHRcIkdhcnlcIiwgXCJUaW1vdGh5XCIsIFwiSm9zZVwiLCBcIkxhcnJ5XCIsIFwiSmVmZnJleVwiLFxuXHRcdFx0XHRcIkZyYW5rXCIsIFwiU2NvdHRcIiwgXCJFcmljXCJcblx0XHRcdF0uY29uY2F0KFtcblx0XHRcdFx0Ly8gZmVtYWxlXG5cdFx0XHRcdFwiTWFyeVwiLCBcIlBhdHJpY2lhXCIsIFwiTGluZGFcIiwgXCJCYXJiYXJhXCIsIFwiRWxpemFiZXRoXCIsXG5cdFx0XHRcdFwiSmVubmlmZXJcIiwgXCJNYXJpYVwiLCBcIlN1c2FuXCIsIFwiTWFyZ2FyZXRcIiwgXCJEb3JvdGh5XCIsXG5cdFx0XHRcdFwiTGlzYVwiLCBcIk5hbmN5XCIsIFwiS2FyZW5cIiwgXCJCZXR0eVwiLCBcIkhlbGVuXCIsXG5cdFx0XHRcdFwiU2FuZHJhXCIsIFwiRG9ubmFcIiwgXCJDYXJvbFwiLCBcIlJ1dGhcIiwgXCJTaGFyb25cIixcblx0XHRcdFx0XCJNaWNoZWxsZVwiLCBcIkxhdXJhXCIsIFwiU2FyYWhcIiwgXCJLaW1iZXJseVwiLCBcIkRlYm9yYWhcIixcblx0XHRcdFx0XCJKZXNzaWNhXCIsIFwiU2hpcmxleVwiLCBcIkN5bnRoaWFcIiwgXCJBbmdlbGFcIiwgXCJNZWxpc3NhXCIsXG5cdFx0XHRcdFwiQnJlbmRhXCIsIFwiQW15XCIsIFwiQW5uYVwiXG5cdFx0XHRdKVxuXHRcdFx0cmV0dXJuIHRoaXMucGljayhuYW1lcylcblx0XHRcdFx0Ly8gb3IgdGhpcy5jYXBpdGFsaXplKHRoaXMud29yZCgpKVxuXHRcdH0sXG5cdFx0Ly8g6ZqP5py655Sf5oiQ5LiA5Liq5bi46KeB55qE6Iux5paH5aeT44CCXG5cdFx0bGFzdDogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgbmFtZXMgPSBbXG5cdFx0XHRcdFwiU21pdGhcIiwgXCJKb2huc29uXCIsIFwiV2lsbGlhbXNcIiwgXCJCcm93blwiLCBcIkpvbmVzXCIsXG5cdFx0XHRcdFwiTWlsbGVyXCIsIFwiRGF2aXNcIiwgXCJHYXJjaWFcIiwgXCJSb2RyaWd1ZXpcIiwgXCJXaWxzb25cIixcblx0XHRcdFx0XCJNYXJ0aW5lelwiLCBcIkFuZGVyc29uXCIsIFwiVGF5bG9yXCIsIFwiVGhvbWFzXCIsIFwiSGVybmFuZGV6XCIsXG5cdFx0XHRcdFwiTW9vcmVcIiwgXCJNYXJ0aW5cIiwgXCJKYWNrc29uXCIsIFwiVGhvbXBzb25cIiwgXCJXaGl0ZVwiLFxuXHRcdFx0XHRcIkxvcGV6XCIsIFwiTGVlXCIsIFwiR29uemFsZXpcIiwgXCJIYXJyaXNcIiwgXCJDbGFya1wiLFxuXHRcdFx0XHRcIkxld2lzXCIsIFwiUm9iaW5zb25cIiwgXCJXYWxrZXJcIiwgXCJQZXJlelwiLCBcIkhhbGxcIixcblx0XHRcdFx0XCJZb3VuZ1wiLCBcIkFsbGVuXCJcblx0XHRcdF1cblx0XHRcdHJldHVybiB0aGlzLnBpY2sobmFtZXMpXG5cdFx0XHRcdC8vIG9yIHRoaXMuY2FwaXRhbGl6ZSh0aGlzLndvcmQoKSlcblx0XHR9LFxuXHRcdC8vIOmaj+acuueUn+aIkOS4gOS4quW4uOingeeahOiLseaWh+Wnk+WQjeOAglxuXHRcdG5hbWU6IGZ1bmN0aW9uKG1pZGRsZSkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZmlyc3QoKSArICcgJyArXG5cdFx0XHRcdChtaWRkbGUgPyB0aGlzLmZpcnN0KCkgKyAnICcgOiAnJykgK1xuXHRcdFx0XHR0aGlzLmxhc3QoKVxuXHRcdH0sXG5cdFx0Lypcblx0XHQgICAg6ZqP5py655Sf5oiQ5LiA5Liq5bi46KeB55qE5Lit5paH5aeT44CCXG5cdFx0ICAgIFvkuJbnlYzluLjnlKjlp5PmsI/mjpLooYxdKGh0dHA6Ly9iYWlrZS5iYWlkdS5jb20vdmlldy8xNzE5MTE1Lmh0bSlcblx0XHQgICAgW+eOhOa0vue9kSAtIOe9kee7nOWwj+ivtOWIm+S9nOi+heWKqeW5s+WPsF0oaHR0cDovL3h1YW5wYWkuc2luYWFwcC5jb20vKVxuXHRcdCAqL1xuXHRcdGNmaXJzdDogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgbmFtZXMgPSAoXG5cdFx0XHRcdCfnjosg5p2OIOW8oCDliJgg6ZmIIOadqCDotbUg6buEIOWRqCDlkLQgJyArXG5cdFx0XHRcdCflvpAg5a2ZIOiDoSDmnLEg6auYIOaelyDkvZUg6YOtIOmprCDnvZcgJyArXG5cdFx0XHRcdCfmooEg5a6LIOmDkSDosKIg6Z+pIOWUkCDlhq8g5LqOIOiRoyDokKcgJyArXG5cdFx0XHRcdCfnqIsg5pu5IOiigSDpgpMg6K64IOWChSDmsogg5pu+IOW9rSDlkJUgJyArXG5cdFx0XHRcdCfoi48g5Y2iIOiSiyDolKEg6LS+IOS4gSDprY8g6JabIOWPtiDpmI4gJyArXG5cdFx0XHRcdCfkvZkg5r2YIOadnCDmiLQg5aSPIOmUuiDmsaog55SwIOS7uyDlp5wgJyArXG5cdFx0XHRcdCfojIMg5pa5IOefsyDlp5og6LCtIOW7liDpgrkg54aKIOmHkSDpmYYgJyArXG5cdFx0XHRcdCfpg50g5a2UIOeZvSDltJQg5bq3IOavmyDpgrEg56emIOaxnyDlj7IgJyArXG5cdFx0XHRcdCfpob4g5L6vIOmCtSDlrZ8g6b6ZIOS4hyDmrrUg6Zu3IOmSsSDmsaQgJyArXG5cdFx0XHRcdCflsLkg6buOIOaYkyDluLgg5q2mIOS5lCDotLog6LWWIOm+miDmlocnXG5cdFx0XHQpLnNwbGl0KCcgJylcblx0XHRcdHJldHVybiB0aGlzLnBpY2sobmFtZXMpXG5cdFx0fSxcblx0XHQvKlxuXHRcdCAgICDpmo/mnLrnlJ/miJDkuIDkuKrluLjop4HnmoTkuK3mloflkI3jgIJcblx0XHQgICAgW+S4reWbveacgOW4uOingeWQjeWtl+WJjTUw5ZCNX+S4ieS5neeul+WRvee9kV0oaHR0cDovL3d3dy5uYW1lOTk5Lm5ldC94aW5nbWluZy94aW5nc2hpLzIwMTMxMDA0LzQ4Lmh0bWwpXG5cdFx0ICovXG5cdFx0Y2xhc3Q6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG5hbWVzID0gKFxuXHRcdFx0XHQn5LyfIOiKsyDlqJwg56eA6IuxIOaVjyDpnZkg5Li9IOW8uiDno4og5YabICcgK1xuXHRcdFx0XHQn5rSLIOWLhyDoibMg5p2wIOWonyDmtpsg5piOIOi2hSDnp4DlhbAg6ZyeICcgK1xuXHRcdFx0XHQn5bmzIOWImiDmoYLoi7EnXG5cdFx0XHQpLnNwbGl0KCcgJylcblx0XHRcdHJldHVybiB0aGlzLnBpY2sobmFtZXMpXG5cdFx0fSxcblx0XHQvLyDpmo/mnLrnlJ/miJDkuIDkuKrluLjop4HnmoTkuK3mloflp5PlkI3jgIJcblx0XHRjbmFtZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5jZmlyc3QoKSArIHRoaXMuY2xhc3QoKVxuXHRcdH1cblx0fVxuXG4vKioqLyB9KSxcbi8qIDE2ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cblx0Lypcblx0ICAgICMjIFdlYlxuXHQqL1xuXHRtb2R1bGUuZXhwb3J0cyA9IHtcblx0ICAgIC8qXG5cdCAgICAgICAg6ZqP5py655Sf5oiQ5LiA5LiqIFVSTOOAglxuXG5cdCAgICAgICAgW1VSTCDop4TojINdKGh0dHA6Ly93d3cudzMub3JnL0FkZHJlc3NpbmcvVVJML3VybC1zcGVjLnR4dClcblx0ICAgICAgICAgICAgaHR0cCAgICAgICAgICAgICAgICAgICAgSHlwZXJ0ZXh0IFRyYW5zZmVyIFByb3RvY29sIFxuXHQgICAgICAgICAgICBmdHAgICAgICAgICAgICAgICAgICAgICBGaWxlIFRyYW5zZmVyIHByb3RvY29sIFxuXHQgICAgICAgICAgICBnb3BoZXIgICAgICAgICAgICAgICAgICBUaGUgR29waGVyIHByb3RvY29sIFxuXHQgICAgICAgICAgICBtYWlsdG8gICAgICAgICAgICAgICAgICBFbGVjdHJvbmljIG1haWwgYWRkcmVzcyBcblx0ICAgICAgICAgICAgbWlkICAgICAgICAgICAgICAgICAgICAgTWVzc2FnZSBpZGVudGlmaWVycyBmb3IgZWxlY3Ryb25pYyBtYWlsIFxuXHQgICAgICAgICAgICBjaWQgICAgICAgICAgICAgICAgICAgICBDb250ZW50IGlkZW50aWZpZXJzIGZvciBNSU1FIGJvZHkgcGFydCBcblx0ICAgICAgICAgICAgbmV3cyAgICAgICAgICAgICAgICAgICAgVXNlbmV0IG5ld3MgXG5cdCAgICAgICAgICAgIG5udHAgICAgICAgICAgICAgICAgICAgIFVzZW5ldCBuZXdzIGZvciBsb2NhbCBOTlRQIGFjY2VzcyBvbmx5IFxuXHQgICAgICAgICAgICBwcm9zcGVybyAgICAgICAgICAgICAgICBBY2Nlc3MgdXNpbmcgdGhlIHByb3NwZXJvIHByb3RvY29scyBcblx0ICAgICAgICAgICAgdGVsbmV0IHJsb2dpbiB0bjMyNzAgICAgUmVmZXJlbmNlIHRvIGludGVyYWN0aXZlIHNlc3Npb25zXG5cdCAgICAgICAgICAgIHdhaXMgICAgICAgICAgICAgICAgICAgIFdpZGUgQXJlYSBJbmZvcm1hdGlvbiBTZXJ2ZXJzIFxuXHQgICAgKi9cblx0ICAgIHVybDogZnVuY3Rpb24ocHJvdG9jb2wsIGhvc3QpIHtcblx0ICAgICAgICByZXR1cm4gKHByb3RvY29sIHx8IHRoaXMucHJvdG9jb2woKSkgKyAnOi8vJyArIC8vIHByb3RvY29sP1xuXHQgICAgICAgICAgICAoaG9zdCB8fCB0aGlzLmRvbWFpbigpKSArIC8vIGhvc3Q/XG5cdCAgICAgICAgICAgICcvJyArIHRoaXMud29yZCgpXG5cdCAgICB9LFxuXHQgICAgLy8g6ZqP5py655Sf5oiQ5LiA5LiqIFVSTCDljY/orq7jgIJcblx0ICAgIHByb3RvY29sOiBmdW5jdGlvbigpIHtcblx0ICAgICAgICByZXR1cm4gdGhpcy5waWNrKFxuXHQgICAgICAgICAgICAvLyDljY/orq7nsIdcblx0ICAgICAgICAgICAgJ2h0dHAgZnRwIGdvcGhlciBtYWlsdG8gbWlkIGNpZCBuZXdzIG5udHAgcHJvc3Blcm8gdGVsbmV0IHJsb2dpbiB0bjMyNzAgd2Fpcycuc3BsaXQoJyAnKVxuXHQgICAgICAgIClcblx0ICAgIH0sXG5cdCAgICAvLyDpmo/mnLrnlJ/miJDkuIDkuKrln5/lkI3jgIJcblx0ICAgIGRvbWFpbjogZnVuY3Rpb24odGxkKSB7XG5cdCAgICAgICAgcmV0dXJuIHRoaXMud29yZCgpICsgJy4nICsgKHRsZCB8fCB0aGlzLnRsZCgpKVxuXHQgICAgfSxcblx0ICAgIC8qXG5cdCAgICAgICAg6ZqP5py655Sf5oiQ5LiA5Liq6aG257qn5Z+f5ZCN44CCXG5cdCAgICAgICAg5Zu96ZmF6aG257qn5Z+f5ZCNIGludGVybmF0aW9uYWwgdG9wLWxldmVsIGRvbWFpbi1uYW1lcywgaVRMRHNcblx0ICAgICAgICDlm73lrrbpobbnuqfln5/lkI0gbmF0aW9uYWwgdG9wLWxldmVsIGRvbWFpbm5hbWVzLCBuVExEc1xuXHQgICAgICAgIFvln5/lkI3lkI7nvIDlpKflhahdKGh0dHA6Ly93d3cuMTYzbnMuY29tL3ppeHVuL3Bvc3QvNDQxNy5odG1sKVxuXHQgICAgKi9cblx0ICAgIHRsZDogZnVuY3Rpb24oKSB7IC8vIFRvcCBMZXZlbCBEb21haW5cblx0ICAgICAgICByZXR1cm4gdGhpcy5waWNrKFxuXHQgICAgICAgICAgICAoXG5cdCAgICAgICAgICAgICAgICAvLyDln5/lkI3lkI7nvIBcblx0ICAgICAgICAgICAgICAgICdjb20gbmV0IG9yZyBlZHUgZ292IGludCBtaWwgY24gJyArXG5cdCAgICAgICAgICAgICAgICAvLyDlm73lhoXln5/lkI1cblx0ICAgICAgICAgICAgICAgICdjb20uY24gbmV0LmNuIGdvdi5jbiBvcmcuY24gJyArXG5cdCAgICAgICAgICAgICAgICAvLyDkuK3mloflm73lhoXln5/lkI1cblx0ICAgICAgICAgICAgICAgICfkuK3lm70g5Lit5Zu95LqS6IGULuWFrOWPuCDkuK3lm73kupLogZQu572R57ucICcgK1xuXHQgICAgICAgICAgICAgICAgLy8g5paw5Zu96ZmF5Z+f5ZCNXG5cdCAgICAgICAgICAgICAgICAndGVsIGJpeiBjYyB0diBpbmZvIG5hbWUgaGsgbW9iaSBhc2lhIGNkIHRyYXZlbCBwcm8gbXVzZXVtIGNvb3AgYWVybyAnICtcblx0ICAgICAgICAgICAgICAgIC8vIOS4lueVjOWQhOWbveWfn+WQjeWQjue8gFxuXHQgICAgICAgICAgICAgICAgJ2FkIGFlIGFmIGFnIGFpIGFsIGFtIGFuIGFvIGFxIGFyIGFzIGF0IGF1IGF3IGF6IGJhIGJiIGJkIGJlIGJmIGJnIGJoIGJpIGJqIGJtIGJuIGJvIGJyIGJzIGJ0IGJ2IGJ3IGJ5IGJ6IGNhIGNjIGNmIGNnIGNoIGNpIGNrIGNsIGNtIGNuIGNvIGNxIGNyIGN1IGN2IGN4IGN5IGN6IGRlIGRqIGRrIGRtIGRvIGR6IGVjIGVlIGVnIGVoIGVzIGV0IGV2IGZpIGZqIGZrIGZtIGZvIGZyIGdhIGdiIGdkIGdlIGdmIGdoIGdpIGdsIGdtIGduIGdwIGdyIGd0IGd1IGd3IGd5IGhrIGhtIGhuIGhyIGh0IGh1IGlkIGllIGlsIGluIGlvIGlxIGlyIGlzIGl0IGptIGpvIGpwIGtlIGtnIGtoIGtpIGttIGtuIGtwIGtyIGt3IGt5IGt6IGxhIGxiIGxjIGxpIGxrIGxyIGxzIGx0IGx1IGx2IGx5IG1hIG1jIG1kIG1nIG1oIG1sIG1tIG1uIG1vIG1wIG1xIG1yIG1zIG10IG12IG13IG14IG15IG16IG5hIG5jIG5lIG5mIG5nIG5pIG5sIG5vIG5wIG5yIG50IG51IG56IG9tIHFhIHBhIHBlIHBmIHBnIHBoIHBrIHBsIHBtIHBuIHByIHB0IHB3IHB5IHJlIHJvIHJ1IHJ3IHNhIHNiIHNjIHNkIHNlIHNnIHNoIHNpIHNqIHNrIHNsIHNtIHNuIHNvIHNyIHN0IHN1IHN5IHN6IHRjIHRkIHRmIHRnIHRoIHRqIHRrIHRtIHRuIHRvIHRwIHRyIHR0IHR2IHR3IHR6IHVhIHVnIHVrIHVzIHV5IHZhIHZjIHZlIHZnIHZuIHZ1IHdmIHdzIHllIHl1IHphIHptIHpyIHp3J1xuXHQgICAgICAgICAgICApLnNwbGl0KCcgJylcblx0ICAgICAgICApXG5cdCAgICB9LFxuXHQgICAgLy8g6ZqP5py655Sf5oiQ5LiA5Liq6YKu5Lu25Zyw5Z2A44CCXG5cdCAgICBlbWFpbDogZnVuY3Rpb24oZG9tYWluKSB7XG5cdCAgICAgICAgcmV0dXJuIHRoaXMuY2hhcmFjdGVyKCdsb3dlcicpICsgJy4nICsgdGhpcy53b3JkKCkgKyAnQCcgK1xuXHQgICAgICAgICAgICAoXG5cdCAgICAgICAgICAgICAgICBkb21haW4gfHxcblx0ICAgICAgICAgICAgICAgICh0aGlzLndvcmQoKSArICcuJyArIHRoaXMudGxkKCkpXG5cdCAgICAgICAgICAgIClcblx0ICAgICAgICAgICAgLy8gcmV0dXJuIHRoaXMuY2hhcmFjdGVyKCdsb3dlcicpICsgJy4nICsgdGhpcy5sYXN0KCkudG9Mb3dlckNhc2UoKSArICdAJyArIHRoaXMubGFzdCgpLnRvTG93ZXJDYXNlKCkgKyAnLicgKyB0aGlzLnRsZCgpXG5cdCAgICAgICAgICAgIC8vIHJldHVybiB0aGlzLndvcmQoKSArICdAJyArIChkb21haW4gfHwgdGhpcy5kb21haW4oKSlcblx0ICAgIH0sXG5cdCAgICAvLyDpmo/mnLrnlJ/miJDkuIDkuKogSVAg5Zyw5Z2A44CCXG5cdCAgICBpcDogZnVuY3Rpb24oKSB7XG5cdCAgICAgICAgcmV0dXJuIHRoaXMubmF0dXJhbCgwLCAyNTUpICsgJy4nICtcblx0ICAgICAgICAgICAgdGhpcy5uYXR1cmFsKDAsIDI1NSkgKyAnLicgK1xuXHQgICAgICAgICAgICB0aGlzLm5hdHVyYWwoMCwgMjU1KSArICcuJyArXG5cdCAgICAgICAgICAgIHRoaXMubmF0dXJhbCgwLCAyNTUpXG5cdCAgICB9XG5cdH1cblxuLyoqKi8gfSksXG4vKiAxNyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cdC8qXG5cdCAgICAjIyBBZGRyZXNzXG5cdCovXG5cblx0dmFyIERJQ1QgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE4KVxuXHR2YXIgUkVHSU9OID0gWyfkuJzljJcnLCAn5Y2O5YyXJywgJ+WNjuS4nCcsICfljY7kuK0nLCAn5Y2O5Y2XJywgJ+ilv+WNlycsICfopb/ljJcnXVxuXG5cdG1vZHVsZS5leHBvcnRzID0ge1xuXHQgICAgLy8g6ZqP5py655Sf5oiQ5LiA5Liq5aSn5Yy644CCXG5cdCAgICByZWdpb246IGZ1bmN0aW9uKCkge1xuXHQgICAgICAgIHJldHVybiB0aGlzLnBpY2soUkVHSU9OKVxuXHQgICAgfSxcblx0ICAgIC8vIOmaj+acuueUn+aIkOS4gOS4qu+8iOS4reWbve+8ieecge+8iOaIluebtOi+luW4guOAgeiHquayu+WMuuOAgeeJueWIq+ihjOaUv+WMuu+8ieOAglxuXHQgICAgcHJvdmluY2U6IGZ1bmN0aW9uKCkge1xuXHQgICAgICAgIHJldHVybiB0aGlzLnBpY2soRElDVCkubmFtZVxuXHQgICAgfSxcblx0ICAgIC8vIOmaj+acuueUn+aIkOS4gOS4qu+8iOS4reWbve+8ieW4guOAglxuXHQgICAgY2l0eTogZnVuY3Rpb24ocHJlZml4KSB7XG5cdCAgICAgICAgdmFyIHByb3ZpbmNlID0gdGhpcy5waWNrKERJQ1QpXG5cdCAgICAgICAgdmFyIGNpdHkgPSB0aGlzLnBpY2socHJvdmluY2UuY2hpbGRyZW4pXG5cdCAgICAgICAgcmV0dXJuIHByZWZpeCA/IFtwcm92aW5jZS5uYW1lLCBjaXR5Lm5hbWVdLmpvaW4oJyAnKSA6IGNpdHkubmFtZVxuXHQgICAgfSxcblx0ICAgIC8vIOmaj+acuueUn+aIkOS4gOS4qu+8iOS4reWbve+8ieWOv+OAglxuXHQgICAgY291bnR5OiBmdW5jdGlvbihwcmVmaXgpIHtcblx0ICAgICAgICB2YXIgcHJvdmluY2UgPSB0aGlzLnBpY2soRElDVClcblx0ICAgICAgICB2YXIgY2l0eSA9IHRoaXMucGljayhwcm92aW5jZS5jaGlsZHJlbilcblx0ICAgICAgICB2YXIgY291bnR5ID0gdGhpcy5waWNrKGNpdHkuY2hpbGRyZW4pIHx8IHtcblx0ICAgICAgICAgICAgbmFtZTogJy0nXG5cdCAgICAgICAgfVxuXHQgICAgICAgIHJldHVybiBwcmVmaXggPyBbcHJvdmluY2UubmFtZSwgY2l0eS5uYW1lLCBjb3VudHkubmFtZV0uam9pbignICcpIDogY291bnR5Lm5hbWVcblx0ICAgIH0sXG5cdCAgICAvLyDpmo/mnLrnlJ/miJDkuIDkuKrpgq7mlL/nvJbnoIHvvIjlha3kvY3mlbDlrZfvvInjgIJcblx0ICAgIHppcDogZnVuY3Rpb24obGVuKSB7XG5cdCAgICAgICAgdmFyIHppcCA9ICcnXG5cdCAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAobGVuIHx8IDYpOyBpKyspIHppcCArPSB0aGlzLm5hdHVyYWwoMCwgOSlcblx0ICAgICAgICByZXR1cm4gemlwXG5cdCAgICB9XG5cblx0ICAgIC8vIGFkZHJlc3M6IGZ1bmN0aW9uKCkge30sXG5cdCAgICAvLyBwaG9uZTogZnVuY3Rpb24oKSB7fSxcblx0ICAgIC8vIGFyZWFjb2RlOiBmdW5jdGlvbigpIHt9LFxuXHQgICAgLy8gc3RyZWV0OiBmdW5jdGlvbigpIHt9LFxuXHQgICAgLy8gc3RyZWV0X3N1ZmZpeGVzOiBmdW5jdGlvbigpIHt9LFxuXHQgICAgLy8gc3RyZWV0X3N1ZmZpeDogZnVuY3Rpb24oKSB7fSxcblx0ICAgIC8vIHN0YXRlczogZnVuY3Rpb24oKSB7fSxcblx0ICAgIC8vIHN0YXRlOiBmdW5jdGlvbigpIHt9LFxuXHR9XG5cbi8qKiovIH0pLFxuLyogMTggKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuXHQvKlxuXHQgICAgIyMgQWRkcmVzcyDlrZflhbjmlbDmja5cblxuXHQgICAg5a2X5YW45pWw5o2u5p2l5rqQIGh0dHA6Ly93d3cuYXRhdGVjaC5vcmcvYXJ0aWNsZXMvMzAwMjg/cm5kPTI1NDI1OTg1NlxuXG5cdCAgICDlm73moIcg55yB77yI5biC77yJ57qn6KGM5pS/5Yy65YiS56CB6KGoXG5cblx0ICAgIOWNjuWMlyAgIOWMl+S6rOW4giDlpKnmtKXluIIg5rKz5YyX55yBIOWxseilv+ecgSDlhoXokpnlj6Toh6rmsrvljLpcblx0ICAgIOS4nOWMlyAgIOi+veWugeecgSDlkInmnpfnnIEg6buR6b6Z5rGf55yBXG5cdCAgICDljY7kuJwgICDkuIrmtbfluIIg5rGf6IuP55yBIOa1meaxn+ecgSDlronlvr3nnIEg56aP5bu655yBIOaxn+ilv+ecgSDlsbHkuJznnIFcblx0ICAgIOWNjuWNlyAgIOW5v+S4nOecgSDlub/opb/lo67ml4/oh6rmsrvljLog5rW35Y2X55yBXG5cdCAgICDljY7kuK0gICDmsrPljZfnnIEg5rmW5YyX55yBIOa5luWNl+ecgVxuXHQgICAg6KW/5Y2XICAg6YeN5bqG5biCIOWbm+W3neecgSDotLXlt57nnIEg5LqR5Y2X55yBIOilv+iXj+iHquayu+WMulxuXHQgICAg6KW/5YyXICAg6ZmV6KW/55yBIOeUmOiCg+ecgSDpnZLmtbfnnIEg5a6B5aSP5Zue5peP6Ieq5rK75Yy6IOaWsOeWhue7tOWQvuWwlOiHquayu+WMulxuXHQgICAg5riv5r6z5Y+wIOmmmea4r+eJueWIq+ihjOaUv+WMuiDmvrPpl6jnibnliKvooYzmlL/ljLog5Y+w5rm+55yBXG5cdCAgICBcblx0ICAgICoq5o6S5bqPKipcblx0ICAgIFxuXHQgICAgYGBganNcblx0ICAgIHZhciBtYXAgPSB7fVxuXHQgICAgXy5lYWNoKF8ua2V5cyhSRUdJT05TKSxmdW5jdGlvbihpZCl7XG5cdCAgICAgIG1hcFtpZF0gPSBSRUdJT05TW0lEXVxuXHQgICAgfSlcblx0ICAgIEpTT04uc3RyaW5naWZ5KG1hcClcblx0ICAgIGBgYFxuXHQqL1xuXHR2YXIgRElDVCA9IHtcblx0ICAgIFwiMTEwMDAwXCI6IFwi5YyX5LqsXCIsXG5cdCAgICBcIjExMDEwMFwiOiBcIuWMl+S6rOW4glwiLFxuXHQgICAgXCIxMTAxMDFcIjogXCLkuJzln47ljLpcIixcblx0ICAgIFwiMTEwMTAyXCI6IFwi6KW/5Z+O5Yy6XCIsXG5cdCAgICBcIjExMDEwNVwiOiBcIuacnemYs+WMulwiLFxuXHQgICAgXCIxMTAxMDZcIjogXCLkuLDlj7DljLpcIixcblx0ICAgIFwiMTEwMTA3XCI6IFwi55+z5pmv5bGx5Yy6XCIsXG5cdCAgICBcIjExMDEwOFwiOiBcIua1t+a3gOWMulwiLFxuXHQgICAgXCIxMTAxMDlcIjogXCLpl6jlpLTmsp/ljLpcIixcblx0ICAgIFwiMTEwMTExXCI6IFwi5oi/5bGx5Yy6XCIsXG5cdCAgICBcIjExMDExMlwiOiBcIumAmuW3nuWMulwiLFxuXHQgICAgXCIxMTAxMTNcIjogXCLpobrkuYnljLpcIixcblx0ICAgIFwiMTEwMTE0XCI6IFwi5piM5bmz5Yy6XCIsXG5cdCAgICBcIjExMDExNVwiOiBcIuWkp+WFtOWMulwiLFxuXHQgICAgXCIxMTAxMTZcIjogXCLmgIDmn5TljLpcIixcblx0ICAgIFwiMTEwMTE3XCI6IFwi5bmz6LC35Yy6XCIsXG5cdCAgICBcIjExMDIyOFwiOiBcIuWvhuS6keWOv1wiLFxuXHQgICAgXCIxMTAyMjlcIjogXCLlu7bluobljr9cIixcblx0ICAgIFwiMTEwMjMwXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjEyMDAwMFwiOiBcIuWkqea0pVwiLFxuXHQgICAgXCIxMjAxMDBcIjogXCLlpKnmtKXluIJcIixcblx0ICAgIFwiMTIwMTAxXCI6IFwi5ZKM5bmz5Yy6XCIsXG5cdCAgICBcIjEyMDEwMlwiOiBcIuays+S4nOWMulwiLFxuXHQgICAgXCIxMjAxMDNcIjogXCLmsrPopb/ljLpcIixcblx0ICAgIFwiMTIwMTA0XCI6IFwi5Y2X5byA5Yy6XCIsXG5cdCAgICBcIjEyMDEwNVwiOiBcIuays+WMl+WMulwiLFxuXHQgICAgXCIxMjAxMDZcIjogXCLnuqLmoaXljLpcIixcblx0ICAgIFwiMTIwMTEwXCI6IFwi5Lic5Li95Yy6XCIsXG5cdCAgICBcIjEyMDExMVwiOiBcIuilv+mdkuWMulwiLFxuXHQgICAgXCIxMjAxMTJcIjogXCLmtKXljZfljLpcIixcblx0ICAgIFwiMTIwMTEzXCI6IFwi5YyX6L6w5Yy6XCIsXG5cdCAgICBcIjEyMDExNFwiOiBcIuatpua4heWMulwiLFxuXHQgICAgXCIxMjAxMTVcIjogXCLlrp3lnbvljLpcIixcblx0ICAgIFwiMTIwMTE2XCI6IFwi5ruo5rW35paw5Yy6XCIsXG5cdCAgICBcIjEyMDIyMVwiOiBcIuWugeays+WOv1wiLFxuXHQgICAgXCIxMjAyMjNcIjogXCLpnZnmtbfljr9cIixcblx0ICAgIFwiMTIwMjI1XCI6IFwi6JOf5Y6/XCIsXG5cdCAgICBcIjEyMDIyNlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIxMzAwMDBcIjogXCLmsrPljJfnnIFcIixcblx0ICAgIFwiMTMwMTAwXCI6IFwi55+z5a625bqE5biCXCIsXG5cdCAgICBcIjEzMDEwMlwiOiBcIumVv+WuieWMulwiLFxuXHQgICAgXCIxMzAxMDNcIjogXCLmoaXkuJzljLpcIixcblx0ICAgIFwiMTMwMTA0XCI6IFwi5qGl6KW/5Yy6XCIsXG5cdCAgICBcIjEzMDEwNVwiOiBcIuaWsOWNjuWMulwiLFxuXHQgICAgXCIxMzAxMDdcIjogXCLkupXpmYnnn7/ljLpcIixcblx0ICAgIFwiMTMwMTA4XCI6IFwi6KOV5Y2O5Yy6XCIsXG5cdCAgICBcIjEzMDEyMVwiOiBcIuS6lemZieWOv1wiLFxuXHQgICAgXCIxMzAxMjNcIjogXCLmraPlrprljr9cIixcblx0ICAgIFwiMTMwMTI0XCI6IFwi5qC+5Z+O5Y6/XCIsXG5cdCAgICBcIjEzMDEyNVwiOiBcIuihjOWUkOWOv1wiLFxuXHQgICAgXCIxMzAxMjZcIjogXCLngbXlr7/ljr9cIixcblx0ICAgIFwiMTMwMTI3XCI6IFwi6auY6YKR5Y6/XCIsXG5cdCAgICBcIjEzMDEyOFwiOiBcIua3seazveWOv1wiLFxuXHQgICAgXCIxMzAxMjlcIjogXCLotZ7nmofljr9cIixcblx0ICAgIFwiMTMwMTMwXCI6IFwi5peg5p6B5Y6/XCIsXG5cdCAgICBcIjEzMDEzMVwiOiBcIuW5s+WxseWOv1wiLFxuXHQgICAgXCIxMzAxMzJcIjogXCLlhYPmsI/ljr9cIixcblx0ICAgIFwiMTMwMTMzXCI6IFwi6LW15Y6/XCIsXG5cdCAgICBcIjEzMDE4MVwiOiBcIui+m+mbhuW4glwiLFxuXHQgICAgXCIxMzAxODJcIjogXCLol4Hln47luIJcIixcblx0ICAgIFwiMTMwMTgzXCI6IFwi5pmL5bee5biCXCIsXG5cdCAgICBcIjEzMDE4NFwiOiBcIuaWsOS5kOW4glwiLFxuXHQgICAgXCIxMzAxODVcIjogXCLpub/ms4nluIJcIixcblx0ICAgIFwiMTMwMTg2XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjEzMDIwMFwiOiBcIuWUkOWxseW4glwiLFxuXHQgICAgXCIxMzAyMDJcIjogXCLot6/ljZfljLpcIixcblx0ICAgIFwiMTMwMjAzXCI6IFwi6Lev5YyX5Yy6XCIsXG5cdCAgICBcIjEzMDIwNFwiOiBcIuWPpOWGtuWMulwiLFxuXHQgICAgXCIxMzAyMDVcIjogXCLlvIDlubPljLpcIixcblx0ICAgIFwiMTMwMjA3XCI6IFwi5Liw5Y2X5Yy6XCIsXG5cdCAgICBcIjEzMDIwOFwiOiBcIuS4sOa2puWMulwiLFxuXHQgICAgXCIxMzAyMjNcIjogXCLmu6bljr9cIixcblx0ICAgIFwiMTMwMjI0XCI6IFwi5rum5Y2X5Y6/XCIsXG5cdCAgICBcIjEzMDIyNVwiOiBcIuS5kOS6reWOv1wiLFxuXHQgICAgXCIxMzAyMjdcIjogXCLov4Hopb/ljr9cIixcblx0ICAgIFwiMTMwMjI5XCI6IFwi546J55Sw5Y6/XCIsXG5cdCAgICBcIjEzMDIzMFwiOiBcIuabueWmg+eUuOWMulwiLFxuXHQgICAgXCIxMzAyODFcIjogXCLpgbXljJbluIJcIixcblx0ICAgIFwiMTMwMjgzXCI6IFwi6L+B5a6J5biCXCIsXG5cdCAgICBcIjEzMDI4NFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIxMzAzMDBcIjogXCLnp6bnmoflspvluIJcIixcblx0ICAgIFwiMTMwMzAyXCI6IFwi5rW35riv5Yy6XCIsXG5cdCAgICBcIjEzMDMwM1wiOiBcIuWxsea1t+WFs+WMulwiLFxuXHQgICAgXCIxMzAzMDRcIjogXCLljJfmiLTmsrPljLpcIixcblx0ICAgIFwiMTMwMzIxXCI6IFwi6Z2S6b6Z5ruh5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjEzMDMyMlwiOiBcIuaYjOm7juWOv1wiLFxuXHQgICAgXCIxMzAzMjNcIjogXCLmiprlroHljr9cIixcblx0ICAgIFwiMTMwMzI0XCI6IFwi5Y2i6b6Z5Y6/XCIsXG5cdCAgICBcIjEzMDM5OFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIxMzA0MDBcIjogXCLpgq/pg7jluIJcIixcblx0ICAgIFwiMTMwNDAyXCI6IFwi6YKv5bGx5Yy6XCIsXG5cdCAgICBcIjEzMDQwM1wiOiBcIuS4m+WPsOWMulwiLFxuXHQgICAgXCIxMzA0MDRcIjogXCLlpI3lhbTljLpcIixcblx0ICAgIFwiMTMwNDA2XCI6IFwi5bOw5bOw55+/5Yy6XCIsXG5cdCAgICBcIjEzMDQyMVwiOiBcIumCr+mDuOWOv1wiLFxuXHQgICAgXCIxMzA0MjNcIjogXCLkuLTmvLPljr9cIixcblx0ICAgIFwiMTMwNDI0XCI6IFwi5oiQ5a6J5Y6/XCIsXG5cdCAgICBcIjEzMDQyNVwiOiBcIuWkp+WQjeWOv1wiLFxuXHQgICAgXCIxMzA0MjZcIjogXCLmtonljr9cIixcblx0ICAgIFwiMTMwNDI3XCI6IFwi56OB5Y6/XCIsXG5cdCAgICBcIjEzMDQyOFwiOiBcIuiCpeS5oeWOv1wiLFxuXHQgICAgXCIxMzA0MjlcIjogXCLmsLjlubTljr9cIixcblx0ICAgIFwiMTMwNDMwXCI6IFwi6YKx5Y6/XCIsXG5cdCAgICBcIjEzMDQzMVwiOiBcIum4oeazveWOv1wiLFxuXHQgICAgXCIxMzA0MzJcIjogXCLlub/lubPljr9cIixcblx0ICAgIFwiMTMwNDMzXCI6IFwi6aaG6Zm25Y6/XCIsXG5cdCAgICBcIjEzMDQzNFwiOiBcIumtj+WOv1wiLFxuXHQgICAgXCIxMzA0MzVcIjogXCLmm7Llkajljr9cIixcblx0ICAgIFwiMTMwNDgxXCI6IFwi5q2m5a6J5biCXCIsXG5cdCAgICBcIjEzMDQ4MlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIxMzA1MDBcIjogXCLpgqLlj7DluIJcIixcblx0ICAgIFwiMTMwNTAyXCI6IFwi5qGl5Lic5Yy6XCIsXG5cdCAgICBcIjEzMDUwM1wiOiBcIuahpeilv+WMulwiLFxuXHQgICAgXCIxMzA1MjFcIjogXCLpgqLlj7Dljr9cIixcblx0ICAgIFwiMTMwNTIyXCI6IFwi5Li05Z+O5Y6/XCIsXG5cdCAgICBcIjEzMDUyM1wiOiBcIuWGheS4mOWOv1wiLFxuXHQgICAgXCIxMzA1MjRcIjogXCLmn4/kuaHljr9cIixcblx0ICAgIFwiMTMwNTI1XCI6IFwi6ZqG5bCn5Y6/XCIsXG5cdCAgICBcIjEzMDUyNlwiOiBcIuS7u+WOv1wiLFxuXHQgICAgXCIxMzA1MjdcIjogXCLljZflkozljr9cIixcblx0ICAgIFwiMTMwNTI4XCI6IFwi5a6B5pmL5Y6/XCIsXG5cdCAgICBcIjEzMDUyOVwiOiBcIuW3qOm5v+WOv1wiLFxuXHQgICAgXCIxMzA1MzBcIjogXCLmlrDmsrPljr9cIixcblx0ICAgIFwiMTMwNTMxXCI6IFwi5bm/5a6X5Y6/XCIsXG5cdCAgICBcIjEzMDUzMlwiOiBcIuW5s+S5oeWOv1wiLFxuXHQgICAgXCIxMzA1MzNcIjogXCLlqIHljr9cIixcblx0ICAgIFwiMTMwNTM0XCI6IFwi5riF5rKz5Y6/XCIsXG5cdCAgICBcIjEzMDUzNVwiOiBcIuS4tOilv+WOv1wiLFxuXHQgICAgXCIxMzA1ODFcIjogXCLljZflrqvluIJcIixcblx0ICAgIFwiMTMwNTgyXCI6IFwi5rKZ5rKz5biCXCIsXG5cdCAgICBcIjEzMDU4M1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIxMzA2MDBcIjogXCLkv53lrprluIJcIixcblx0ICAgIFwiMTMwNjAyXCI6IFwi5paw5biC5Yy6XCIsXG5cdCAgICBcIjEzMDYwM1wiOiBcIuWMl+W4guWMulwiLFxuXHQgICAgXCIxMzA2MDRcIjogXCLljZfluILljLpcIixcblx0ICAgIFwiMTMwNjIxXCI6IFwi5ruh5Z+O5Y6/XCIsXG5cdCAgICBcIjEzMDYyMlwiOiBcIua4heiLkeWOv1wiLFxuXHQgICAgXCIxMzA2MjNcIjogXCLmtp7msLTljr9cIixcblx0ICAgIFwiMTMwNjI0XCI6IFwi6Zic5bmz5Y6/XCIsXG5cdCAgICBcIjEzMDYyNVwiOiBcIuW+kOawtOWOv1wiLFxuXHQgICAgXCIxMzA2MjZcIjogXCLlrprlhbTljr9cIixcblx0ICAgIFwiMTMwNjI3XCI6IFwi5ZSQ5Y6/XCIsXG5cdCAgICBcIjEzMDYyOFwiOiBcIumrmOmYs+WOv1wiLFxuXHQgICAgXCIxMzA2MjlcIjogXCLlrrnln47ljr9cIixcblx0ICAgIFwiMTMwNjMwXCI6IFwi5rae5rqQ5Y6/XCIsXG5cdCAgICBcIjEzMDYzMVwiOiBcIuacm+mDveWOv1wiLFxuXHQgICAgXCIxMzA2MzJcIjogXCLlronmlrDljr9cIixcblx0ICAgIFwiMTMwNjMzXCI6IFwi5piT5Y6/XCIsXG5cdCAgICBcIjEzMDYzNFwiOiBcIuabsumYs+WOv1wiLFxuXHQgICAgXCIxMzA2MzVcIjogXCLooKHljr9cIixcblx0ICAgIFwiMTMwNjM2XCI6IFwi6aG65bmz5Y6/XCIsXG5cdCAgICBcIjEzMDYzN1wiOiBcIuWNmumHjuWOv1wiLFxuXHQgICAgXCIxMzA2MzhcIjogXCLpm4Tljr9cIixcblx0ICAgIFwiMTMwNjgxXCI6IFwi5ra/5bee5biCXCIsXG5cdCAgICBcIjEzMDY4MlwiOiBcIuWumuW3nuW4glwiLFxuXHQgICAgXCIxMzA2ODNcIjogXCLlronlm73luIJcIixcblx0ICAgIFwiMTMwNjg0XCI6IFwi6auY56KR5bqX5biCXCIsXG5cdCAgICBcIjEzMDY5OVwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIxMzA3MDBcIjogXCLlvKDlrrblj6PluIJcIixcblx0ICAgIFwiMTMwNzAyXCI6IFwi5qGl5Lic5Yy6XCIsXG5cdCAgICBcIjEzMDcwM1wiOiBcIuahpeilv+WMulwiLFxuXHQgICAgXCIxMzA3MDVcIjogXCLlrqPljJbljLpcIixcblx0ICAgIFwiMTMwNzA2XCI6IFwi5LiL6Iqx5Zut5Yy6XCIsXG5cdCAgICBcIjEzMDcyMVwiOiBcIuWuo+WMluWOv1wiLFxuXHQgICAgXCIxMzA3MjJcIjogXCLlvKDljJfljr9cIixcblx0ICAgIFwiMTMwNzIzXCI6IFwi5bq35L+d5Y6/XCIsXG5cdCAgICBcIjEzMDcyNFwiOiBcIuayvea6kOWOv1wiLFxuXHQgICAgXCIxMzA3MjVcIjogXCLlsJrkuYnljr9cIixcblx0ICAgIFwiMTMwNzI2XCI6IFwi6JSa5Y6/XCIsXG5cdCAgICBcIjEzMDcyN1wiOiBcIumYs+WOn+WOv1wiLFxuXHQgICAgXCIxMzA3MjhcIjogXCLmgIDlronljr9cIixcblx0ICAgIFwiMTMwNzI5XCI6IFwi5LiH5YWo5Y6/XCIsXG5cdCAgICBcIjEzMDczMFwiOiBcIuaAgOadpeWOv1wiLFxuXHQgICAgXCIxMzA3MzFcIjogXCLmtr/pub/ljr9cIixcblx0ICAgIFwiMTMwNzMyXCI6IFwi6LWk5Z+O5Y6/XCIsXG5cdCAgICBcIjEzMDczM1wiOiBcIuW0h+ekvOWOv1wiLFxuXHQgICAgXCIxMzA3MzRcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMTMwODAwXCI6IFwi5om/5b635biCXCIsXG5cdCAgICBcIjEzMDgwMlwiOiBcIuWPjOahpeWMulwiLFxuXHQgICAgXCIxMzA4MDNcIjogXCLlj4zmu6bljLpcIixcblx0ICAgIFwiMTMwODA0XCI6IFwi6bmw5omL6JCl5a2Q55+/5Yy6XCIsXG5cdCAgICBcIjEzMDgyMVwiOiBcIuaJv+W+t+WOv1wiLFxuXHQgICAgXCIxMzA4MjJcIjogXCLlhbTpmobljr9cIixcblx0ICAgIFwiMTMwODIzXCI6IFwi5bmz5rOJ5Y6/XCIsXG5cdCAgICBcIjEzMDgyNFwiOiBcIua7puW5s+WOv1wiLFxuXHQgICAgXCIxMzA4MjVcIjogXCLpmobljJbljr9cIixcblx0ICAgIFwiMTMwODI2XCI6IFwi5Liw5a6B5ruh5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjEzMDgyN1wiOiBcIuWuveWfjua7oeaXj+iHquayu+WOv1wiLFxuXHQgICAgXCIxMzA4MjhcIjogXCLlm7TlnLrmu6Hml4/okpnlj6Tml4/oh6rmsrvljr9cIixcblx0ICAgIFwiMTMwODI5XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjEzMDkwMFwiOiBcIuayp+W3nuW4glwiLFxuXHQgICAgXCIxMzA5MDJcIjogXCLmlrDljY7ljLpcIixcblx0ICAgIFwiMTMwOTAzXCI6IFwi6L+Q5rKz5Yy6XCIsXG5cdCAgICBcIjEzMDkyMVwiOiBcIuayp+WOv1wiLFxuXHQgICAgXCIxMzA5MjJcIjogXCLpnZLljr9cIixcblx0ICAgIFwiMTMwOTIzXCI6IFwi5Lic5YWJ5Y6/XCIsXG5cdCAgICBcIjEzMDkyNFwiOiBcIua1t+WFtOWOv1wiLFxuXHQgICAgXCIxMzA5MjVcIjogXCLnm5DlsbHljr9cIixcblx0ICAgIFwiMTMwOTI2XCI6IFwi6IKD5a6B5Y6/XCIsXG5cdCAgICBcIjEzMDkyN1wiOiBcIuWNl+earuWOv1wiLFxuXHQgICAgXCIxMzA5MjhcIjogXCLlkLTmoaXljr9cIixcblx0ICAgIFwiMTMwOTI5XCI6IFwi54yu5Y6/XCIsXG5cdCAgICBcIjEzMDkzMFwiOiBcIuWtn+adkeWbnuaXj+iHquayu+WOv1wiLFxuXHQgICAgXCIxMzA5ODFcIjogXCLms4rlpLTluIJcIixcblx0ICAgIFwiMTMwOTgyXCI6IFwi5Lu75LiY5biCXCIsXG5cdCAgICBcIjEzMDk4M1wiOiBcIum7hOmqheW4glwiLFxuXHQgICAgXCIxMzA5ODRcIjogXCLmsrPpl7TluIJcIixcblx0ICAgIFwiMTMwOTg1XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjEzMTAwMFwiOiBcIuW7iuWdiuW4glwiLFxuXHQgICAgXCIxMzEwMDJcIjogXCLlronmrKHljLpcIixcblx0ICAgIFwiMTMxMDAzXCI6IFwi5bm/6Ziz5Yy6XCIsXG5cdCAgICBcIjEzMTAyMlwiOiBcIuWbuuWuieWOv1wiLFxuXHQgICAgXCIxMzEwMjNcIjogXCLmsLjmuIXljr9cIixcblx0ICAgIFwiMTMxMDI0XCI6IFwi6aaZ5rKz5Y6/XCIsXG5cdCAgICBcIjEzMTAyNVwiOiBcIuWkp+WfjuWOv1wiLFxuXHQgICAgXCIxMzEwMjZcIjogXCLmloflronljr9cIixcblx0ICAgIFwiMTMxMDI4XCI6IFwi5aSn5Y6C5Zue5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjEzMTA4MVwiOiBcIumcuOW3nuW4glwiLFxuXHQgICAgXCIxMzEwODJcIjogXCLkuInmsrPluIJcIixcblx0ICAgIFwiMTMxMDgzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjEzMTEwMFwiOiBcIuihoeawtOW4glwiLFxuXHQgICAgXCIxMzExMDJcIjogXCLmoYPln47ljLpcIixcblx0ICAgIFwiMTMxMTIxXCI6IFwi5p6j5by65Y6/XCIsXG5cdCAgICBcIjEzMTEyMlwiOiBcIuatpumCkeWOv1wiLFxuXHQgICAgXCIxMzExMjNcIjogXCLmrablvLrljr9cIixcblx0ICAgIFwiMTMxMTI0XCI6IFwi6aW26Ziz5Y6/XCIsXG5cdCAgICBcIjEzMTEyNVwiOiBcIuWuieW5s+WOv1wiLFxuXHQgICAgXCIxMzExMjZcIjogXCLmlYXln47ljr9cIixcblx0ICAgIFwiMTMxMTI3XCI6IFwi5pmv5Y6/XCIsXG5cdCAgICBcIjEzMTEyOFwiOiBcIumYnOWfjuWOv1wiLFxuXHQgICAgXCIxMzExODFcIjogXCLlhoDlt57luIJcIixcblx0ICAgIFwiMTMxMTgyXCI6IFwi5rex5bee5biCXCIsXG5cdCAgICBcIjEzMTE4M1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIxNDAwMDBcIjogXCLlsbHopb/nnIFcIixcblx0ICAgIFwiMTQwMTAwXCI6IFwi5aSq5Y6f5biCXCIsXG5cdCAgICBcIjE0MDEwNVwiOiBcIuWwj+W6l+WMulwiLFxuXHQgICAgXCIxNDAxMDZcIjogXCLov47ms73ljLpcIixcblx0ICAgIFwiMTQwMTA3XCI6IFwi5p2P6Iqx5bKt5Yy6XCIsXG5cdCAgICBcIjE0MDEwOFwiOiBcIuWwluiNieWdquWMulwiLFxuXHQgICAgXCIxNDAxMDlcIjogXCLkuIfmn4/mnpfljLpcIixcblx0ICAgIFwiMTQwMTEwXCI6IFwi5pmL5rqQ5Yy6XCIsXG5cdCAgICBcIjE0MDEyMVwiOiBcIua4heW+kOWOv1wiLFxuXHQgICAgXCIxNDAxMjJcIjogXCLpmLPmm7Lljr9cIixcblx0ICAgIFwiMTQwMTIzXCI6IFwi5aiE54Om5Y6/XCIsXG5cdCAgICBcIjE0MDE4MVwiOiBcIuWPpOS6pOW4glwiLFxuXHQgICAgXCIxNDAxODJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMTQwMjAwXCI6IFwi5aSn5ZCM5biCXCIsXG5cdCAgICBcIjE0MDIwMlwiOiBcIuWfjuWMulwiLFxuXHQgICAgXCIxNDAyMDNcIjogXCLnn7/ljLpcIixcblx0ICAgIFwiMTQwMjExXCI6IFwi5Y2X6YOK5Yy6XCIsXG5cdCAgICBcIjE0MDIxMlwiOiBcIuaWsOiNo+WMulwiLFxuXHQgICAgXCIxNDAyMjFcIjogXCLpmLPpq5jljr9cIixcblx0ICAgIFwiMTQwMjIyXCI6IFwi5aSp6ZWH5Y6/XCIsXG5cdCAgICBcIjE0MDIyM1wiOiBcIuW5v+eBteWOv1wiLFxuXHQgICAgXCIxNDAyMjRcIjogXCLngbXkuJjljr9cIixcblx0ICAgIFwiMTQwMjI1XCI6IFwi5rWR5rqQ5Y6/XCIsXG5cdCAgICBcIjE0MDIyNlwiOiBcIuW3puS6keWOv1wiLFxuXHQgICAgXCIxNDAyMjdcIjogXCLlpKflkIzljr9cIixcblx0ICAgIFwiMTQwMjI4XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjE0MDMwMFwiOiBcIumYs+azieW4glwiLFxuXHQgICAgXCIxNDAzMDJcIjogXCLln47ljLpcIixcblx0ICAgIFwiMTQwMzAzXCI6IFwi55+/5Yy6XCIsXG5cdCAgICBcIjE0MDMxMVwiOiBcIumDiuWMulwiLFxuXHQgICAgXCIxNDAzMjFcIjogXCLlubPlrprljr9cIixcblx0ICAgIFwiMTQwMzIyXCI6IFwi55uC5Y6/XCIsXG5cdCAgICBcIjE0MDMyM1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIxNDA0MDBcIjogXCLplb/msrvluIJcIixcblx0ICAgIFwiMTQwNDIxXCI6IFwi6ZW/5rK75Y6/XCIsXG5cdCAgICBcIjE0MDQyM1wiOiBcIuilhOWeo+WOv1wiLFxuXHQgICAgXCIxNDA0MjRcIjogXCLlsa/nlZnljr9cIixcblx0ICAgIFwiMTQwNDI1XCI6IFwi5bmz6aG65Y6/XCIsXG5cdCAgICBcIjE0MDQyNlwiOiBcIum7juWfjuWOv1wiLFxuXHQgICAgXCIxNDA0MjdcIjogXCLlo7blhbPljr9cIixcblx0ICAgIFwiMTQwNDI4XCI6IFwi6ZW/5a2Q5Y6/XCIsXG5cdCAgICBcIjE0MDQyOVwiOiBcIuatpuS5oeWOv1wiLFxuXHQgICAgXCIxNDA0MzBcIjogXCLmsoHljr9cIixcblx0ICAgIFwiMTQwNDMxXCI6IFwi5rKB5rqQ5Y6/XCIsXG5cdCAgICBcIjE0MDQ4MVwiOiBcIua9nuWfjuW4glwiLFxuXHQgICAgXCIxNDA0ODJcIjogXCLln47ljLpcIixcblx0ICAgIFwiMTQwNDgzXCI6IFwi6YOK5Yy6XCIsXG5cdCAgICBcIjE0MDQ4NVwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIxNDA1MDBcIjogXCLmmYvln47luIJcIixcblx0ICAgIFwiMTQwNTAyXCI6IFwi5Z+O5Yy6XCIsXG5cdCAgICBcIjE0MDUyMVwiOiBcIuaygeawtOWOv1wiLFxuXHQgICAgXCIxNDA1MjJcIjogXCLpmLPln47ljr9cIixcblx0ICAgIFwiMTQwNTI0XCI6IFwi6Zm15bed5Y6/XCIsXG5cdCAgICBcIjE0MDUyNVwiOiBcIuazveW3nuWOv1wiLFxuXHQgICAgXCIxNDA1ODFcIjogXCLpq5jlubPluIJcIixcblx0ICAgIFwiMTQwNTgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjE0MDYwMFwiOiBcIuaclOW3nuW4glwiLFxuXHQgICAgXCIxNDA2MDJcIjogXCLmnJTln47ljLpcIixcblx0ICAgIFwiMTQwNjAzXCI6IFwi5bmz6bKB5Yy6XCIsXG5cdCAgICBcIjE0MDYyMVwiOiBcIuWxsemYtOWOv1wiLFxuXHQgICAgXCIxNDA2MjJcIjogXCLlupTljr9cIixcblx0ICAgIFwiMTQwNjIzXCI6IFwi5Y+z546J5Y6/XCIsXG5cdCAgICBcIjE0MDYyNFwiOiBcIuaAgOS7geWOv1wiLFxuXHQgICAgXCIxNDA2MjVcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMTQwNzAwXCI6IFwi5pmL5Lit5biCXCIsXG5cdCAgICBcIjE0MDcwMlwiOiBcIuamhuasoeWMulwiLFxuXHQgICAgXCIxNDA3MjFcIjogXCLmpobnpL7ljr9cIixcblx0ICAgIFwiMTQwNzIyXCI6IFwi5bem5p2D5Y6/XCIsXG5cdCAgICBcIjE0MDcyM1wiOiBcIuWSjOmhuuWOv1wiLFxuXHQgICAgXCIxNDA3MjRcIjogXCLmmJTpmLPljr9cIixcblx0ICAgIFwiMTQwNzI1XCI6IFwi5a+/6Ziz5Y6/XCIsXG5cdCAgICBcIjE0MDcyNlwiOiBcIuWkquiwt+WOv1wiLFxuXHQgICAgXCIxNDA3MjdcIjogXCLnpYHljr9cIixcblx0ICAgIFwiMTQwNzI4XCI6IFwi5bmz6YGl5Y6/XCIsXG5cdCAgICBcIjE0MDcyOVwiOiBcIueBteefs+WOv1wiLFxuXHQgICAgXCIxNDA3ODFcIjogXCLku4vkvJHluIJcIixcblx0ICAgIFwiMTQwNzgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjE0MDgwMFwiOiBcIui/kOWfjuW4glwiLFxuXHQgICAgXCIxNDA4MDJcIjogXCLnm5DmuZbljLpcIixcblx0ICAgIFwiMTQwODIxXCI6IFwi5Li054yX5Y6/XCIsXG5cdCAgICBcIjE0MDgyMlwiOiBcIuS4h+iNo+WOv1wiLFxuXHQgICAgXCIxNDA4MjNcIjogXCLpl7vllpzljr9cIixcblx0ICAgIFwiMTQwODI0XCI6IFwi56i35bGx5Y6/XCIsXG5cdCAgICBcIjE0MDgyNVwiOiBcIuaWsOe7m+WOv1wiLFxuXHQgICAgXCIxNDA4MjZcIjogXCLnu5vljr9cIixcblx0ICAgIFwiMTQwODI3XCI6IFwi5Z6j5puy5Y6/XCIsXG5cdCAgICBcIjE0MDgyOFwiOiBcIuWkj+WOv1wiLFxuXHQgICAgXCIxNDA4MjlcIjogXCLlubPpmYbljr9cIixcblx0ICAgIFwiMTQwODMwXCI6IFwi6Iqu5Z+O5Y6/XCIsXG5cdCAgICBcIjE0MDg4MVwiOiBcIuawuOa1juW4glwiLFxuXHQgICAgXCIxNDA4ODJcIjogXCLmsrPmtKXluIJcIixcblx0ICAgIFwiMTQwODgzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjE0MDkwMFwiOiBcIuW/u+W3nuW4glwiLFxuXHQgICAgXCIxNDA5MDJcIjogXCLlv7vlupzljLpcIixcblx0ICAgIFwiMTQwOTIxXCI6IFwi5a6a6KWE5Y6/XCIsXG5cdCAgICBcIjE0MDkyMlwiOiBcIuS6lOWPsOWOv1wiLFxuXHQgICAgXCIxNDA5MjNcIjogXCLku6Pljr9cIixcblx0ICAgIFwiMTQwOTI0XCI6IFwi57mB5bOZ5Y6/XCIsXG5cdCAgICBcIjE0MDkyNVwiOiBcIuWugeatpuWOv1wiLFxuXHQgICAgXCIxNDA5MjZcIjogXCLpnZnkuZDljr9cIixcblx0ICAgIFwiMTQwOTI3XCI6IFwi56We5rGg5Y6/XCIsXG5cdCAgICBcIjE0MDkyOFwiOiBcIuS6lOWvqOWOv1wiLFxuXHQgICAgXCIxNDA5MjlcIjogXCLlsqLlsprljr9cIixcblx0ICAgIFwiMTQwOTMwXCI6IFwi5rKz5puy5Y6/XCIsXG5cdCAgICBcIjE0MDkzMVwiOiBcIuS/neW+t+WOv1wiLFxuXHQgICAgXCIxNDA5MzJcIjogXCLlgY/lhbPljr9cIixcblx0ICAgIFwiMTQwOTgxXCI6IFwi5Y6f5bmz5biCXCIsXG5cdCAgICBcIjE0MDk4MlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIxNDEwMDBcIjogXCLkuLTmsb7luIJcIixcblx0ICAgIFwiMTQxMDAyXCI6IFwi5bCn6YO95Yy6XCIsXG5cdCAgICBcIjE0MTAyMVwiOiBcIuabsuayg+WOv1wiLFxuXHQgICAgXCIxNDEwMjJcIjogXCLnv7zln47ljr9cIixcblx0ICAgIFwiMTQxMDIzXCI6IFwi6KWE5rG+5Y6/XCIsXG5cdCAgICBcIjE0MTAyNFwiOiBcIua0qua0nuWOv1wiLFxuXHQgICAgXCIxNDEwMjVcIjogXCLlj6Tljr9cIixcblx0ICAgIFwiMTQxMDI2XCI6IFwi5a6J5rO95Y6/XCIsXG5cdCAgICBcIjE0MTAyN1wiOiBcIua1ruWxseWOv1wiLFxuXHQgICAgXCIxNDEwMjhcIjogXCLlkInljr9cIixcblx0ICAgIFwiMTQxMDI5XCI6IFwi5Lmh5a6B5Y6/XCIsXG5cdCAgICBcIjE0MTAzMFwiOiBcIuWkp+WugeWOv1wiLFxuXHQgICAgXCIxNDEwMzFcIjogXCLpmrDljr9cIixcblx0ICAgIFwiMTQxMDMyXCI6IFwi5rC45ZKM5Y6/XCIsXG5cdCAgICBcIjE0MTAzM1wiOiBcIuiSsuWOv1wiLFxuXHQgICAgXCIxNDEwMzRcIjogXCLmsb7opb/ljr9cIixcblx0ICAgIFwiMTQxMDgxXCI6IFwi5L6v6ams5biCXCIsXG5cdCAgICBcIjE0MTA4MlwiOiBcIumcjeW3nuW4glwiLFxuXHQgICAgXCIxNDEwODNcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMTQxMTAwXCI6IFwi5ZCV5qKB5biCXCIsXG5cdCAgICBcIjE0MTEwMlwiOiBcIuemu+efs+WMulwiLFxuXHQgICAgXCIxNDExMjFcIjogXCLmlofmsLTljr9cIixcblx0ICAgIFwiMTQxMTIyXCI6IFwi5Lqk5Z+O5Y6/XCIsXG5cdCAgICBcIjE0MTEyM1wiOiBcIuWFtOWOv1wiLFxuXHQgICAgXCIxNDExMjRcIjogXCLkuLTljr9cIixcblx0ICAgIFwiMTQxMTI1XCI6IFwi5p+z5p6X5Y6/XCIsXG5cdCAgICBcIjE0MTEyNlwiOiBcIuefs+alvOWOv1wiLFxuXHQgICAgXCIxNDExMjdcIjogXCLlsprljr9cIixcblx0ICAgIFwiMTQxMTI4XCI6IFwi5pa55bGx5Y6/XCIsXG5cdCAgICBcIjE0MTEyOVwiOiBcIuS4remYs+WOv1wiLFxuXHQgICAgXCIxNDExMzBcIjogXCLkuqTlj6Pljr9cIixcblx0ICAgIFwiMTQxMTgxXCI6IFwi5a2d5LmJ5biCXCIsXG5cdCAgICBcIjE0MTE4MlwiOiBcIuaxvumYs+W4glwiLFxuXHQgICAgXCIxNDExODNcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMTUwMDAwXCI6IFwi5YaF6JKZ5Y+k6Ieq5rK75Yy6XCIsXG5cdCAgICBcIjE1MDEwMFwiOiBcIuWRvOWSjOa1qeeJueW4glwiLFxuXHQgICAgXCIxNTAxMDJcIjogXCLmlrDln47ljLpcIixcblx0ICAgIFwiMTUwMTAzXCI6IFwi5Zue5rCR5Yy6XCIsXG5cdCAgICBcIjE1MDEwNFwiOiBcIueOieazieWMulwiLFxuXHQgICAgXCIxNTAxMDVcIjogXCLotZvnvZXljLpcIixcblx0ICAgIFwiMTUwMTIxXCI6IFwi5Zyf6buY54m55bem5peXXCIsXG5cdCAgICBcIjE1MDEyMlwiOiBcIuaJmOWFi+aJmOWOv1wiLFxuXHQgICAgXCIxNTAxMjNcIjogXCLlkozmnpfmoLzlsJTljr9cIixcblx0ICAgIFwiMTUwMTI0XCI6IFwi5riF5rC05rKz5Y6/XCIsXG5cdCAgICBcIjE1MDEyNVwiOiBcIuatpuW3neWOv1wiLFxuXHQgICAgXCIxNTAxMjZcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMTUwMjAwXCI6IFwi5YyF5aS05biCXCIsXG5cdCAgICBcIjE1MDIwMlwiOiBcIuS4nOays+WMulwiLFxuXHQgICAgXCIxNTAyMDNcIjogXCLmmIbpg73ku5HljLpcIixcblx0ICAgIFwiMTUwMjA0XCI6IFwi6Z2S5bGx5Yy6XCIsXG5cdCAgICBcIjE1MDIwNVwiOiBcIuefs+aLkOWMulwiLFxuXHQgICAgXCIxNTAyMDZcIjogXCLnmb3kupHphILljZrnn7/ljLpcIixcblx0ICAgIFwiMTUwMjA3XCI6IFwi5Lmd5Y6f5Yy6XCIsXG5cdCAgICBcIjE1MDIyMVwiOiBcIuWcn+m7mOeJueWPs+aXl1wiLFxuXHQgICAgXCIxNTAyMjJcIjogXCLlm7rpmLPljr9cIixcblx0ICAgIFwiMTUwMjIzXCI6IFwi6L6+5bCU572V6IyC5piO5a6J6IGU5ZCI5peXXCIsXG5cdCAgICBcIjE1MDIyNFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIxNTAzMDBcIjogXCLkuYzmtbfluIJcIixcblx0ICAgIFwiMTUwMzAyXCI6IFwi5rW35YuD5rm+5Yy6XCIsXG5cdCAgICBcIjE1MDMwM1wiOiBcIua1t+WNl+WMulwiLFxuXHQgICAgXCIxNTAzMDRcIjogXCLkuYzovr7ljLpcIixcblx0ICAgIFwiMTUwMzA1XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjE1MDQwMFwiOiBcIui1pOWzsOW4glwiLFxuXHQgICAgXCIxNTA0MDJcIjogXCLnuqLlsbHljLpcIixcblx0ICAgIFwiMTUwNDAzXCI6IFwi5YWD5a6d5bGx5Yy6XCIsXG5cdCAgICBcIjE1MDQwNFwiOiBcIuadvuWxseWMulwiLFxuXHQgICAgXCIxNTA0MjFcIjogXCLpmL/psoHnp5HlsJTmsoHml5dcIixcblx0ICAgIFwiMTUwNDIyXCI6IFwi5be05p6X5bem5peXXCIsXG5cdCAgICBcIjE1MDQyM1wiOiBcIuW3tOael+WPs+aXl1wiLFxuXHQgICAgXCIxNTA0MjRcIjogXCLmnpfopb/ljr9cIixcblx0ICAgIFwiMTUwNDI1XCI6IFwi5YWL5LuA5YWL6IW+5peXXCIsXG5cdCAgICBcIjE1MDQyNlwiOiBcIue/geeJm+eJueaXl1wiLFxuXHQgICAgXCIxNTA0MjhcIjogXCLlloDllofmsoHml5dcIixcblx0ICAgIFwiMTUwNDI5XCI6IFwi5a6B5Z+O5Y6/XCIsXG5cdCAgICBcIjE1MDQzMFwiOiBcIuaVluaxieaXl1wiLFxuXHQgICAgXCIxNTA0MzFcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMTUwNTAwXCI6IFwi6YCa6L695biCXCIsXG5cdCAgICBcIjE1MDUwMlwiOiBcIuenkeWwlOaygeWMulwiLFxuXHQgICAgXCIxNTA1MjFcIjogXCLnp5HlsJTmsoHlt6bnv7zkuK3ml5dcIixcblx0ICAgIFwiMTUwNTIyXCI6IFwi56eR5bCU5rKB5bem57+85ZCO5peXXCIsXG5cdCAgICBcIjE1MDUyM1wiOiBcIuW8gOmygeWOv1wiLFxuXHQgICAgXCIxNTA1MjRcIjogXCLlupPkvKbml5dcIixcblx0ICAgIFwiMTUwNTI1XCI6IFwi5aWI5pu85peXXCIsXG5cdCAgICBcIjE1MDUyNlwiOiBcIuaJjumygeeJueaXl1wiLFxuXHQgICAgXCIxNTA1ODFcIjogXCLpnI3mnpfpg63li5LluIJcIixcblx0ICAgIFwiMTUwNTgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjE1MDYwMFwiOiBcIumEguWwlOWkmuaWr+W4glwiLFxuXHQgICAgXCIxNTA2MDJcIjogXCLkuJzog5zljLpcIixcblx0ICAgIFwiMTUwNjIxXCI6IFwi6L6+5ouJ54m55peXXCIsXG5cdCAgICBcIjE1MDYyMlwiOiBcIuWHhuagvOWwlOaXl1wiLFxuXHQgICAgXCIxNTA2MjNcIjogXCLphILmiZjlhYvliY3ml5dcIixcblx0ICAgIFwiMTUwNjI0XCI6IFwi6YSC5omY5YWL5peXXCIsXG5cdCAgICBcIjE1MDYyNVwiOiBcIuadremUpuaXl1wiLFxuXHQgICAgXCIxNTA2MjZcIjogXCLkuYzlrqHml5dcIixcblx0ICAgIFwiMTUwNjI3XCI6IFwi5LyK6YeR6ZyN5rSb5peXXCIsXG5cdCAgICBcIjE1MDYyOFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIxNTA3MDBcIjogXCLlkbzkvKbotJ3lsJTluIJcIixcblx0ICAgIFwiMTUwNzAyXCI6IFwi5rW35ouJ5bCU5Yy6XCIsXG5cdCAgICBcIjE1MDcwM1wiOiBcIuaJjui1ieivuuWwlOWMulwiLFxuXHQgICAgXCIxNTA3MjFcIjogXCLpmL/ojaPml5dcIixcblx0ICAgIFwiMTUwNzIyXCI6IFwi6I6r5Yqb6L6+55Om6L6+5pah5bCU5peP6Ieq5rK75peXXCIsXG5cdCAgICBcIjE1MDcyM1wiOiBcIumEguS8puaYpeiHquayu+aXl1wiLFxuXHQgICAgXCIxNTA3MjRcIjogXCLphILmuKnlhYvml4/oh6rmsrvml5dcIixcblx0ICAgIFwiMTUwNzI1XCI6IFwi6ZmI5be05bCU6JmO5peXXCIsXG5cdCAgICBcIjE1MDcyNlwiOiBcIuaWsOW3tOWwlOiZjuW3puaXl1wiLFxuXHQgICAgXCIxNTA3MjdcIjogXCLmlrDlt7TlsJTomY7lj7Pml5dcIixcblx0ICAgIFwiMTUwNzgxXCI6IFwi5ruh5rSy6YeM5biCXCIsXG5cdCAgICBcIjE1MDc4MlwiOiBcIueJmeWFi+efs+W4glwiLFxuXHQgICAgXCIxNTA3ODNcIjogXCLmiY7lhbDlsa/luIJcIixcblx0ICAgIFwiMTUwNzg0XCI6IFwi6aKd5bCU5Y+k57qz5biCXCIsXG5cdCAgICBcIjE1MDc4NVwiOiBcIuagueays+W4glwiLFxuXHQgICAgXCIxNTA3ODZcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMTUwODAwXCI6IFwi5be05b2m5reW5bCU5biCXCIsXG5cdCAgICBcIjE1MDgwMlwiOiBcIuS4tOays+WMulwiLFxuXHQgICAgXCIxNTA4MjFcIjogXCLkupTljp/ljr9cIixcblx0ICAgIFwiMTUwODIyXCI6IFwi56O05Y+j5Y6/XCIsXG5cdCAgICBcIjE1MDgyM1wiOiBcIuS5jOaLieeJueWJjeaXl1wiLFxuXHQgICAgXCIxNTA4MjRcIjogXCLkuYzmi4nnibnkuK3ml5dcIixcblx0ICAgIFwiMTUwODI1XCI6IFwi5LmM5ouJ54m55ZCO5peXXCIsXG5cdCAgICBcIjE1MDgyNlwiOiBcIuadremUpuWQjuaXl1wiLFxuXHQgICAgXCIxNTA4MjdcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMTUwOTAwXCI6IFwi5LmM5YWw5a+f5biD5biCXCIsXG5cdCAgICBcIjE1MDkwMlwiOiBcIumbhuWugeWMulwiLFxuXHQgICAgXCIxNTA5MjFcIjogXCLljZPotYTljr9cIixcblx0ICAgIFwiMTUwOTIyXCI6IFwi5YyW5b635Y6/XCIsXG5cdCAgICBcIjE1MDkyM1wiOiBcIuWVhumDveWOv1wiLFxuXHQgICAgXCIxNTA5MjRcIjogXCLlhbTlkozljr9cIixcblx0ICAgIFwiMTUwOTI1XCI6IFwi5YeJ5Z+O5Y6/XCIsXG5cdCAgICBcIjE1MDkyNlwiOiBcIuWvn+WTiOWwlOWPs+e/vOWJjeaXl1wiLFxuXHQgICAgXCIxNTA5MjdcIjogXCLlr5/lk4jlsJTlj7Pnv7zkuK3ml5dcIixcblx0ICAgIFwiMTUwOTI4XCI6IFwi5a+f5ZOI5bCU5Y+z57+85ZCO5peXXCIsXG5cdCAgICBcIjE1MDkyOVwiOiBcIuWbm+WtkOeOi+aXl1wiLFxuXHQgICAgXCIxNTA5ODFcIjogXCLkuLDplYfluIJcIixcblx0ICAgIFwiMTUwOTgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjE1MjIwMFwiOiBcIuWFtOWuieebn1wiLFxuXHQgICAgXCIxNTIyMDFcIjogXCLkuYzlhbDmtannibnluIJcIixcblx0ICAgIFwiMTUyMjAyXCI6IFwi6Zi/5bCU5bGx5biCXCIsXG5cdCAgICBcIjE1MjIyMVwiOiBcIuenkeWwlOaygeWPs+e/vOWJjeaXl1wiLFxuXHQgICAgXCIxNTIyMjJcIjogXCLnp5HlsJTmsoHlj7Pnv7zkuK3ml5dcIixcblx0ICAgIFwiMTUyMjIzXCI6IFwi5omO6LWJ54m55peXXCIsXG5cdCAgICBcIjE1MjIyNFwiOiBcIueqgeazieWOv1wiLFxuXHQgICAgXCIxNTIyMjVcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMTUyNTAwXCI6IFwi6ZSh5p6X6YOt5YuS55ufXCIsXG5cdCAgICBcIjE1MjUwMVwiOiBcIuS6jOi/nua1qeeJueW4glwiLFxuXHQgICAgXCIxNTI1MDJcIjogXCLplKHmnpfmtannibnluIJcIixcblx0ICAgIFwiMTUyNTIyXCI6IFwi6Zi/5be05ZiO5peXXCIsXG5cdCAgICBcIjE1MjUyM1wiOiBcIuiLj+WwvOeJueW3puaXl1wiLFxuXHQgICAgXCIxNTI1MjRcIjogXCLoi4/lsLznibnlj7Pml5dcIixcblx0ICAgIFwiMTUyNTI1XCI6IFwi5Lic5LmM54+g56mG5rKB5peXXCIsXG5cdCAgICBcIjE1MjUyNlwiOiBcIuilv+S5jOePoOephuaygeaXl1wiLFxuXHQgICAgXCIxNTI1MjdcIjogXCLlpKrku4blr7rml5dcIixcblx0ICAgIFwiMTUyNTI4XCI6IFwi6ZW26buE5peXXCIsXG5cdCAgICBcIjE1MjUyOVwiOiBcIuato+mVtueZveaXl1wiLFxuXHQgICAgXCIxNTI1MzBcIjogXCLmraPok53ml5dcIixcblx0ICAgIFwiMTUyNTMxXCI6IFwi5aSa5Lym5Y6/XCIsXG5cdCAgICBcIjE1MjUzMlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIxNTI5MDBcIjogXCLpmL/mi4nlloTnm59cIixcblx0ICAgIFwiMTUyOTIxXCI6IFwi6Zi/5ouJ5ZaE5bem5peXXCIsXG5cdCAgICBcIjE1MjkyMlwiOiBcIumYv+aLieWWhOWPs+aXl1wiLFxuXHQgICAgXCIxNTI5MjNcIjogXCLpop3mtY7nurPml5dcIixcblx0ICAgIFwiMTUyOTI0XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjIxMDAwMFwiOiBcIui+veWugeecgVwiLFxuXHQgICAgXCIyMTAxMDBcIjogXCLmsojpmLPluIJcIixcblx0ICAgIFwiMjEwMTAyXCI6IFwi5ZKM5bmz5Yy6XCIsXG5cdCAgICBcIjIxMDEwM1wiOiBcIuayiOays+WMulwiLFxuXHQgICAgXCIyMTAxMDRcIjogXCLlpKfkuJzljLpcIixcblx0ICAgIFwiMjEwMTA1XCI6IFwi55qH5aeR5Yy6XCIsXG5cdCAgICBcIjIxMDEwNlwiOiBcIumTgeilv+WMulwiLFxuXHQgICAgXCIyMTAxMTFcIjogXCLoi4/lrrblsa/ljLpcIixcblx0ICAgIFwiMjEwMTEyXCI6IFwi5Lic6Zm15Yy6XCIsXG5cdCAgICBcIjIxMDExM1wiOiBcIuaWsOWfjuWtkOWMulwiLFxuXHQgICAgXCIyMTAxMTRcIjogXCLkuo7mtKrljLpcIixcblx0ICAgIFwiMjEwMTIyXCI6IFwi6L695Lit5Y6/XCIsXG5cdCAgICBcIjIxMDEyM1wiOiBcIuW6t+W5s+WOv1wiLFxuXHQgICAgXCIyMTAxMjRcIjogXCLms5XlupPljr9cIixcblx0ICAgIFwiMjEwMTgxXCI6IFwi5paw5rCR5biCXCIsXG5cdCAgICBcIjIxMDE4NFwiOiBcIuayiOWMl+aWsOWMulwiLFxuXHQgICAgXCIyMTAxODVcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMjEwMjAwXCI6IFwi5aSn6L+e5biCXCIsXG5cdCAgICBcIjIxMDIwMlwiOiBcIuS4reWxseWMulwiLFxuXHQgICAgXCIyMTAyMDNcIjogXCLopb/lspfljLpcIixcblx0ICAgIFwiMjEwMjA0XCI6IFwi5rKZ5rKz5Y+j5Yy6XCIsXG5cdCAgICBcIjIxMDIxMVwiOiBcIueUmOS6leWtkOWMulwiLFxuXHQgICAgXCIyMTAyMTJcIjogXCLml4Xpobrlj6PljLpcIixcblx0ICAgIFwiMjEwMjEzXCI6IFwi6YeR5bee5Yy6XCIsXG5cdCAgICBcIjIxMDIyNFwiOiBcIumVv+a1t+WOv1wiLFxuXHQgICAgXCIyMTAyODFcIjogXCLnk6bmiL/lupfluIJcIixcblx0ICAgIFwiMjEwMjgyXCI6IFwi5pmu5YWw5bqX5biCXCIsXG5cdCAgICBcIjIxMDI4M1wiOiBcIuW6hOays+W4glwiLFxuXHQgICAgXCIyMTAyOThcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMjEwMzAwXCI6IFwi6Z6N5bGx5biCXCIsXG5cdCAgICBcIjIxMDMwMlwiOiBcIumTgeS4nOWMulwiLFxuXHQgICAgXCIyMTAzMDNcIjogXCLpk4Hopb/ljLpcIixcblx0ICAgIFwiMjEwMzA0XCI6IFwi56uL5bGx5Yy6XCIsXG5cdCAgICBcIjIxMDMxMVwiOiBcIuWNg+WxseWMulwiLFxuXHQgICAgXCIyMTAzMjFcIjogXCLlj7Dlronljr9cIixcblx0ICAgIFwiMjEwMzIzXCI6IFwi5bKr5bKp5ruh5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjIxMDM4MVwiOiBcIua1t+WfjuW4glwiLFxuXHQgICAgXCIyMTAzODJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMjEwNDAwXCI6IFwi5oqa6aG65biCXCIsXG5cdCAgICBcIjIxMDQwMlwiOiBcIuaWsOaKmuWMulwiLFxuXHQgICAgXCIyMTA0MDNcIjogXCLkuJzmtLLljLpcIixcblx0ICAgIFwiMjEwNDA0XCI6IFwi5pyb6Iqx5Yy6XCIsXG5cdCAgICBcIjIxMDQxMVwiOiBcIumhuuWfjuWMulwiLFxuXHQgICAgXCIyMTA0MjFcIjogXCLmiprpobrljr9cIixcblx0ICAgIFwiMjEwNDIyXCI6IFwi5paw5a6+5ruh5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjIxMDQyM1wiOiBcIua4heWOn+a7oeaXj+iHquayu+WOv1wiLFxuXHQgICAgXCIyMTA0MjRcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMjEwNTAwXCI6IFwi5pys5rqq5biCXCIsXG5cdCAgICBcIjIxMDUwMlwiOiBcIuW5s+WxseWMulwiLFxuXHQgICAgXCIyMTA1MDNcIjogXCLmuqrmuZbljLpcIixcblx0ICAgIFwiMjEwNTA0XCI6IFwi5piO5bGx5Yy6XCIsXG5cdCAgICBcIjIxMDUwNVwiOiBcIuWNl+iKrOWMulwiLFxuXHQgICAgXCIyMTA1MjFcIjogXCLmnKzmuqrmu6Hml4/oh6rmsrvljr9cIixcblx0ICAgIFwiMjEwNTIyXCI6IFwi5qGT5LuB5ruh5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjIxMDUyM1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIyMTA2MDBcIjogXCLkuLnkuJzluIJcIixcblx0ICAgIFwiMjEwNjAyXCI6IFwi5YWD5a6d5Yy6XCIsXG5cdCAgICBcIjIxMDYwM1wiOiBcIuaMr+WFtOWMulwiLFxuXHQgICAgXCIyMTA2MDRcIjogXCLmjK/lronljLpcIixcblx0ICAgIFwiMjEwNjI0XCI6IFwi5a6955S45ruh5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjIxMDY4MVwiOiBcIuS4nOa4r+W4glwiLFxuXHQgICAgXCIyMTA2ODJcIjogXCLlh6Tln47luIJcIixcblx0ICAgIFwiMjEwNjgzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjIxMDcwMFwiOiBcIumUpuW3nuW4glwiLFxuXHQgICAgXCIyMTA3MDJcIjogXCLlj6TloZTljLpcIixcblx0ICAgIFwiMjEwNzAzXCI6IFwi5YeM5rKz5Yy6XCIsXG5cdCAgICBcIjIxMDcxMVwiOiBcIuWkquWSjOWMulwiLFxuXHQgICAgXCIyMTA3MjZcIjogXCLpu5HlsbHljr9cIixcblx0ICAgIFwiMjEwNzI3XCI6IFwi5LmJ5Y6/XCIsXG5cdCAgICBcIjIxMDc4MVwiOiBcIuWHjOa1t+W4glwiLFxuXHQgICAgXCIyMTA3ODJcIjogXCLljJfplYfluIJcIixcblx0ICAgIFwiMjEwNzgzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjIxMDgwMFwiOiBcIuiQpeWPo+W4glwiLFxuXHQgICAgXCIyMTA4MDJcIjogXCLnq5nliY3ljLpcIixcblx0ICAgIFwiMjEwODAzXCI6IFwi6KW/5biC5Yy6XCIsXG5cdCAgICBcIjIxMDgwNFwiOiBcIumyhemxvOWciOWMulwiLFxuXHQgICAgXCIyMTA4MTFcIjogXCLogIHovrnljLpcIixcblx0ICAgIFwiMjEwODgxXCI6IFwi55uW5bee5biCXCIsXG5cdCAgICBcIjIxMDg4MlwiOiBcIuWkp+efs+ahpeW4glwiLFxuXHQgICAgXCIyMTA4ODNcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMjEwOTAwXCI6IFwi6Zic5paw5biCXCIsXG5cdCAgICBcIjIxMDkwMlwiOiBcIua1t+W3nuWMulwiLFxuXHQgICAgXCIyMTA5MDNcIjogXCLmlrDpgrHljLpcIixcblx0ICAgIFwiMjEwOTA0XCI6IFwi5aSq5bmz5Yy6XCIsXG5cdCAgICBcIjIxMDkwNVwiOiBcIua4heays+mXqOWMulwiLFxuXHQgICAgXCIyMTA5MTFcIjogXCLnu4bmsrPljLpcIixcblx0ICAgIFwiMjEwOTIxXCI6IFwi6Zic5paw6JKZ5Y+k5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjIxMDkyMlwiOiBcIuW9sOatpuWOv1wiLFxuXHQgICAgXCIyMTA5MjNcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMjExMDAwXCI6IFwi6L696Ziz5biCXCIsXG5cdCAgICBcIjIxMTAwMlwiOiBcIueZveWhlOWMulwiLFxuXHQgICAgXCIyMTEwMDNcIjogXCLmloflnKPljLpcIixcblx0ICAgIFwiMjExMDA0XCI6IFwi5a6P5Lyf5Yy6XCIsXG5cdCAgICBcIjIxMTAwNVwiOiBcIuW8k+mVv+WyreWMulwiLFxuXHQgICAgXCIyMTEwMTFcIjogXCLlpKrlrZDmsrPljLpcIixcblx0ICAgIFwiMjExMDIxXCI6IFwi6L696Ziz5Y6/XCIsXG5cdCAgICBcIjIxMTA4MVwiOiBcIueBr+WhlOW4glwiLFxuXHQgICAgXCIyMTEwODJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMjExMTAwXCI6IFwi55uY6ZSm5biCXCIsXG5cdCAgICBcIjIxMTEwMlwiOiBcIuWPjOWPsOWtkOWMulwiLFxuXHQgICAgXCIyMTExMDNcIjogXCLlhbTpmoblj7DljLpcIixcblx0ICAgIFwiMjExMTIxXCI6IFwi5aSn5rS85Y6/XCIsXG5cdCAgICBcIjIxMTEyMlwiOiBcIuebmOWxseWOv1wiLFxuXHQgICAgXCIyMTExMjNcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMjExMjAwXCI6IFwi6ZOB5bKt5biCXCIsXG5cdCAgICBcIjIxMTIwMlwiOiBcIumTtuW3nuWMulwiLFxuXHQgICAgXCIyMTEyMDRcIjogXCLmuIXmsrPljLpcIixcblx0ICAgIFwiMjExMjIxXCI6IFwi6ZOB5bKt5Y6/XCIsXG5cdCAgICBcIjIxMTIyM1wiOiBcIuilv+S4sOWOv1wiLFxuXHQgICAgXCIyMTEyMjRcIjogXCLmmIzlm77ljr9cIixcblx0ICAgIFwiMjExMjgxXCI6IFwi6LCD5YW15bGx5biCXCIsXG5cdCAgICBcIjIxMTI4MlwiOiBcIuW8gOWOn+W4glwiLFxuXHQgICAgXCIyMTEyODNcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMjExMzAwXCI6IFwi5pyd6Ziz5biCXCIsXG5cdCAgICBcIjIxMTMwMlwiOiBcIuWPjOWhlOWMulwiLFxuXHQgICAgXCIyMTEzMDNcIjogXCLpvpnln47ljLpcIixcblx0ICAgIFwiMjExMzIxXCI6IFwi5pyd6Ziz5Y6/XCIsXG5cdCAgICBcIjIxMTMyMlwiOiBcIuW7uuW5s+WOv1wiLFxuXHQgICAgXCIyMTEzMjRcIjogXCLlloDllofmsoHlt6bnv7zokpnlj6Tml4/oh6rmsrvljr9cIixcblx0ICAgIFwiMjExMzgxXCI6IFwi5YyX56Wo5biCXCIsXG5cdCAgICBcIjIxMTM4MlwiOiBcIuWHjOa6kOW4glwiLFxuXHQgICAgXCIyMTEzODNcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMjExNDAwXCI6IFwi6JGr6Iqm5bKb5biCXCIsXG5cdCAgICBcIjIxMTQwMlwiOiBcIui/nuWxseWMulwiLFxuXHQgICAgXCIyMTE0MDNcIjogXCLpvpnmuK/ljLpcIixcblx0ICAgIFwiMjExNDA0XCI6IFwi5Y2X56Wo5Yy6XCIsXG5cdCAgICBcIjIxMTQyMVwiOiBcIue7peS4reWOv1wiLFxuXHQgICAgXCIyMTE0MjJcIjogXCLlu7rmmIzljr9cIixcblx0ICAgIFwiMjExNDgxXCI6IFwi5YW05Z+O5biCXCIsXG5cdCAgICBcIjIxMTQ4MlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIyMjAwMDBcIjogXCLlkInmnpfnnIFcIixcblx0ICAgIFwiMjIwMTAwXCI6IFwi6ZW/5pil5biCXCIsXG5cdCAgICBcIjIyMDEwMlwiOiBcIuWNl+WFs+WMulwiLFxuXHQgICAgXCIyMjAxMDNcIjogXCLlrr3ln47ljLpcIixcblx0ICAgIFwiMjIwMTA0XCI6IFwi5pyd6Ziz5Yy6XCIsXG5cdCAgICBcIjIyMDEwNVwiOiBcIuS6jOmBk+WMulwiLFxuXHQgICAgXCIyMjAxMDZcIjogXCLnu7/lm63ljLpcIixcblx0ICAgIFwiMjIwMTEyXCI6IFwi5Y+M6Ziz5Yy6XCIsXG5cdCAgICBcIjIyMDEyMlwiOiBcIuWGnOWuieWOv1wiLFxuXHQgICAgXCIyMjAxODFcIjogXCLkuZ3lj7DluIJcIixcblx0ICAgIFwiMjIwMTgyXCI6IFwi5qaG5qCR5biCXCIsXG5cdCAgICBcIjIyMDE4M1wiOiBcIuW+t+aDoOW4glwiLFxuXHQgICAgXCIyMjAxODhcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMjIwMjAwXCI6IFwi5ZCJ5p6X5biCXCIsXG5cdCAgICBcIjIyMDIwMlwiOiBcIuaYjOmCkeWMulwiLFxuXHQgICAgXCIyMjAyMDNcIjogXCLpvpnmva3ljLpcIixcblx0ICAgIFwiMjIwMjA0XCI6IFwi6Ii56JCl5Yy6XCIsXG5cdCAgICBcIjIyMDIxMVwiOiBcIuS4sOa7oeWMulwiLFxuXHQgICAgXCIyMjAyMjFcIjogXCLmsLjlkInljr9cIixcblx0ICAgIFwiMjIwMjgxXCI6IFwi6Juf5rKz5biCXCIsXG5cdCAgICBcIjIyMDI4MlwiOiBcIuahpueUuOW4glwiLFxuXHQgICAgXCIyMjAyODNcIjogXCLoiJLlhbDluIJcIixcblx0ICAgIFwiMjIwMjg0XCI6IFwi56OQ55+z5biCXCIsXG5cdCAgICBcIjIyMDI4NVwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIyMjAzMDBcIjogXCLlm5vlubPluIJcIixcblx0ICAgIFwiMjIwMzAyXCI6IFwi6ZOB6KW/5Yy6XCIsXG5cdCAgICBcIjIyMDMwM1wiOiBcIumTgeS4nOWMulwiLFxuXHQgICAgXCIyMjAzMjJcIjogXCLmoqjmoJHljr9cIixcblx0ICAgIFwiMjIwMzIzXCI6IFwi5LyK6YCa5ruh5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjIyMDM4MVwiOiBcIuWFrOS4u+WyreW4glwiLFxuXHQgICAgXCIyMjAzODJcIjogXCLlj4zovr3luIJcIixcblx0ICAgIFwiMjIwMzgzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjIyMDQwMFwiOiBcIui+vea6kOW4glwiLFxuXHQgICAgXCIyMjA0MDJcIjogXCLpvpnlsbHljLpcIixcblx0ICAgIFwiMjIwNDAzXCI6IFwi6KW/5a6J5Yy6XCIsXG5cdCAgICBcIjIyMDQyMVwiOiBcIuS4nOS4sOWOv1wiLFxuXHQgICAgXCIyMjA0MjJcIjogXCLkuJzovr3ljr9cIixcblx0ICAgIFwiMjIwNDIzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjIyMDUwMFwiOiBcIumAmuWMluW4glwiLFxuXHQgICAgXCIyMjA1MDJcIjogXCLkuJzmmIzljLpcIixcblx0ICAgIFwiMjIwNTAzXCI6IFwi5LqM6YGT5rGf5Yy6XCIsXG5cdCAgICBcIjIyMDUyMVwiOiBcIumAmuWMluWOv1wiLFxuXHQgICAgXCIyMjA1MjNcIjogXCLovonljZfljr9cIixcblx0ICAgIFwiMjIwNTI0XCI6IFwi5p+z5rKz5Y6/XCIsXG5cdCAgICBcIjIyMDU4MVwiOiBcIuaiheays+WPo+W4glwiLFxuXHQgICAgXCIyMjA1ODJcIjogXCLpm4blronluIJcIixcblx0ICAgIFwiMjIwNTgzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjIyMDYwMFwiOiBcIueZveWxseW4glwiLFxuXHQgICAgXCIyMjA2MDJcIjogXCLmtZHmsZ/ljLpcIixcblx0ICAgIFwiMjIwNjIxXCI6IFwi5oqa5p2+5Y6/XCIsXG5cdCAgICBcIjIyMDYyMlwiOiBcIumdluWuh+WOv1wiLFxuXHQgICAgXCIyMjA2MjNcIjogXCLplb/nmb3mnJ3pspzml4/oh6rmsrvljr9cIixcblx0ICAgIFwiMjIwNjI1XCI6IFwi5rGf5rqQ5Yy6XCIsXG5cdCAgICBcIjIyMDY4MVwiOiBcIuS4tOaxn+W4glwiLFxuXHQgICAgXCIyMjA2ODJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMjIwNzAwXCI6IFwi5p2+5Y6f5biCXCIsXG5cdCAgICBcIjIyMDcwMlwiOiBcIuWugeaxn+WMulwiLFxuXHQgICAgXCIyMjA3MjFcIjogXCLliY3pg63lsJTnvZfmlq/okpnlj6Tml4/oh6rmsrvljr9cIixcblx0ICAgIFwiMjIwNzIyXCI6IFwi6ZW/5bKt5Y6/XCIsXG5cdCAgICBcIjIyMDcyM1wiOiBcIuS5vuWuieWOv1wiLFxuXHQgICAgXCIyMjA3MjRcIjogXCLmibbkvZnluIJcIixcblx0ICAgIFwiMjIwNzI1XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjIyMDgwMFwiOiBcIueZveWfjuW4glwiLFxuXHQgICAgXCIyMjA4MDJcIjogXCLmtK7ljJfljLpcIixcblx0ICAgIFwiMjIwODIxXCI6IFwi6ZWH6LWJ5Y6/XCIsXG5cdCAgICBcIjIyMDgyMlwiOiBcIumAmuamhuWOv1wiLFxuXHQgICAgXCIyMjA4ODFcIjogXCLmtK7ljZfluIJcIixcblx0ICAgIFwiMjIwODgyXCI6IFwi5aSn5a6J5biCXCIsXG5cdCAgICBcIjIyMDg4M1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIyMjI0MDBcIjogXCLlu7bovrnmnJ3pspzml4/oh6rmsrvlt55cIixcblx0ICAgIFwiMjIyNDAxXCI6IFwi5bu25ZCJ5biCXCIsXG5cdCAgICBcIjIyMjQwMlwiOiBcIuWbvuS7rOW4glwiLFxuXHQgICAgXCIyMjI0MDNcIjogXCLmlabljJbluIJcIixcblx0ICAgIFwiMjIyNDA0XCI6IFwi54+y5pil5biCXCIsXG5cdCAgICBcIjIyMjQwNVwiOiBcIum+meS6leW4glwiLFxuXHQgICAgXCIyMjI0MDZcIjogXCLlkozpvpnluIJcIixcblx0ICAgIFwiMjIyNDI0XCI6IFwi5rGq5riF5Y6/XCIsXG5cdCAgICBcIjIyMjQyNlwiOiBcIuWuieWbvuWOv1wiLFxuXHQgICAgXCIyMjI0MjdcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMjMwMDAwXCI6IFwi6buR6b6Z5rGf55yBXCIsXG5cdCAgICBcIjIzMDEwMFwiOiBcIuWTiOWwlOa7qOW4glwiLFxuXHQgICAgXCIyMzAxMDJcIjogXCLpgZPph4zljLpcIixcblx0ICAgIFwiMjMwMTAzXCI6IFwi5Y2X5bKX5Yy6XCIsXG5cdCAgICBcIjIzMDEwNFwiOiBcIumBk+WkluWMulwiLFxuXHQgICAgXCIyMzAxMDZcIjogXCLpppnlnYrljLpcIixcblx0ICAgIFwiMjMwMTA4XCI6IFwi5bmz5oi/5Yy6XCIsXG5cdCAgICBcIjIzMDEwOVwiOiBcIuadvuWMl+WMulwiLFxuXHQgICAgXCIyMzAxMTFcIjogXCLlkbzlhbDljLpcIixcblx0ICAgIFwiMjMwMTIzXCI6IFwi5L6d5YWw5Y6/XCIsXG5cdCAgICBcIjIzMDEyNFwiOiBcIuaWueato+WOv1wiLFxuXHQgICAgXCIyMzAxMjVcIjogXCLlrr7ljr9cIixcblx0ICAgIFwiMjMwMTI2XCI6IFwi5be05b2m5Y6/XCIsXG5cdCAgICBcIjIzMDEyN1wiOiBcIuacqOWFsOWOv1wiLFxuXHQgICAgXCIyMzAxMjhcIjogXCLpgJrmsrPljr9cIixcblx0ICAgIFwiMjMwMTI5XCI6IFwi5bu25a+/5Y6/XCIsXG5cdCAgICBcIjIzMDE4MVwiOiBcIumYv+WfjuWMulwiLFxuXHQgICAgXCIyMzAxODJcIjogXCLlj4zln47luIJcIixcblx0ICAgIFwiMjMwMTgzXCI6IFwi5bCa5b+X5biCXCIsXG5cdCAgICBcIjIzMDE4NFwiOiBcIuS6lOW4uOW4glwiLFxuXHQgICAgXCIyMzAxODZcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMjMwMjAwXCI6IFwi6b2Q6b2Q5ZOI5bCU5biCXCIsXG5cdCAgICBcIjIzMDIwMlwiOiBcIum+meaymeWMulwiLFxuXHQgICAgXCIyMzAyMDNcIjogXCLlu7rljY7ljLpcIixcblx0ICAgIFwiMjMwMjA0XCI6IFwi6ZOB6ZSL5Yy6XCIsXG5cdCAgICBcIjIzMDIwNVwiOiBcIuaYguaYgua6quWMulwiLFxuXHQgICAgXCIyMzAyMDZcIjogXCLlr4zmi4nlsJTln7rljLpcIixcblx0ICAgIFwiMjMwMjA3XCI6IFwi56K+5a2Q5bGx5Yy6XCIsXG5cdCAgICBcIjIzMDIwOFwiOiBcIuaihemHjOaWr+i+vuaWoeWwlOaXj+WMulwiLFxuXHQgICAgXCIyMzAyMjFcIjogXCLpvpnmsZ/ljr9cIixcblx0ICAgIFwiMjMwMjIzXCI6IFwi5L6d5a6J5Y6/XCIsXG5cdCAgICBcIjIzMDIyNFwiOiBcIuazsOadpeWOv1wiLFxuXHQgICAgXCIyMzAyMjVcIjogXCLnlJjljZfljr9cIixcblx0ICAgIFwiMjMwMjI3XCI6IFwi5a+M6KOV5Y6/XCIsXG5cdCAgICBcIjIzMDIyOVwiOiBcIuWFi+WxseWOv1wiLFxuXHQgICAgXCIyMzAyMzBcIjogXCLlhYvkuJzljr9cIixcblx0ICAgIFwiMjMwMjMxXCI6IFwi5ouc5rOJ5Y6/XCIsXG5cdCAgICBcIjIzMDI4MVwiOiBcIuiut+ays+W4glwiLFxuXHQgICAgXCIyMzAyODJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMjMwMzAwXCI6IFwi6bih6KW/5biCXCIsXG5cdCAgICBcIjIzMDMwMlwiOiBcIum4oeWGoOWMulwiLFxuXHQgICAgXCIyMzAzMDNcIjogXCLmgZLlsbHljLpcIixcblx0ICAgIFwiMjMwMzA0XCI6IFwi5ru06YGT5Yy6XCIsXG5cdCAgICBcIjIzMDMwNVwiOiBcIuaiqOagkeWMulwiLFxuXHQgICAgXCIyMzAzMDZcIjogXCLln47lrZDmsrPljLpcIixcblx0ICAgIFwiMjMwMzA3XCI6IFwi6bq75bGx5Yy6XCIsXG5cdCAgICBcIjIzMDMyMVwiOiBcIum4oeS4nOWOv1wiLFxuXHQgICAgXCIyMzAzODFcIjogXCLomY7mnpfluIJcIixcblx0ICAgIFwiMjMwMzgyXCI6IFwi5a+G5bGx5biCXCIsXG5cdCAgICBcIjIzMDM4M1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIyMzA0MDBcIjogXCLpuaTlspfluIJcIixcblx0ICAgIFwiMjMwNDAyXCI6IFwi5ZCR6Ziz5Yy6XCIsXG5cdCAgICBcIjIzMDQwM1wiOiBcIuW3peWGnOWMulwiLFxuXHQgICAgXCIyMzA0MDRcIjogXCLljZflsbHljLpcIixcblx0ICAgIFwiMjMwNDA1XCI6IFwi5YW05a6J5Yy6XCIsXG5cdCAgICBcIjIzMDQwNlwiOiBcIuS4nOWxseWMulwiLFxuXHQgICAgXCIyMzA0MDdcIjogXCLlhbTlsbHljLpcIixcblx0ICAgIFwiMjMwNDIxXCI6IFwi6JCd5YyX5Y6/XCIsXG5cdCAgICBcIjIzMDQyMlwiOiBcIue7pea7qOWOv1wiLFxuXHQgICAgXCIyMzA0MjNcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMjMwNTAwXCI6IFwi5Y+M6bit5bGx5biCXCIsXG5cdCAgICBcIjIzMDUwMlwiOiBcIuWwluWxseWMulwiLFxuXHQgICAgXCIyMzA1MDNcIjogXCLlsq3kuJzljLpcIixcblx0ICAgIFwiMjMwNTA1XCI6IFwi5Zub5pa55Y+w5Yy6XCIsXG5cdCAgICBcIjIzMDUwNlwiOiBcIuWuneWxseWMulwiLFxuXHQgICAgXCIyMzA1MjFcIjogXCLpm4botKTljr9cIixcblx0ICAgIFwiMjMwNTIyXCI6IFwi5Y+L6LCK5Y6/XCIsXG5cdCAgICBcIjIzMDUyM1wiOiBcIuWunea4heWOv1wiLFxuXHQgICAgXCIyMzA1MjRcIjogXCLppbbmsrPljr9cIixcblx0ICAgIFwiMjMwNTI1XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjIzMDYwMFwiOiBcIuWkp+W6huW4glwiLFxuXHQgICAgXCIyMzA2MDJcIjogXCLokKjlsJTlm77ljLpcIixcblx0ICAgIFwiMjMwNjAzXCI6IFwi6b6Z5Yek5Yy6XCIsXG5cdCAgICBcIjIzMDYwNFwiOiBcIuiuqeiDoei3r+WMulwiLFxuXHQgICAgXCIyMzA2MDVcIjogXCLnuqLlspfljLpcIixcblx0ICAgIFwiMjMwNjA2XCI6IFwi5aSn5ZCM5Yy6XCIsXG5cdCAgICBcIjIzMDYyMVwiOiBcIuiCh+W3nuWOv1wiLFxuXHQgICAgXCIyMzA2MjJcIjogXCLogofmupDljr9cIixcblx0ICAgIFwiMjMwNjIzXCI6IFwi5p6X55S45Y6/XCIsXG5cdCAgICBcIjIzMDYyNFwiOiBcIuadnOWwlOS8r+eJueiSmeWPpOaXj+iHquayu+WOv1wiLFxuXHQgICAgXCIyMzA2MjVcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMjMwNzAwXCI6IFwi5LyK5pil5biCXCIsXG5cdCAgICBcIjIzMDcwMlwiOiBcIuS8iuaYpeWMulwiLFxuXHQgICAgXCIyMzA3MDNcIjogXCLljZflspTljLpcIixcblx0ICAgIFwiMjMwNzA0XCI6IFwi5Y+L5aW95Yy6XCIsXG5cdCAgICBcIjIzMDcwNVwiOiBcIuilv+ael+WMulwiLFxuXHQgICAgXCIyMzA3MDZcIjogXCLnv6Dls6bljLpcIixcblx0ICAgIFwiMjMwNzA3XCI6IFwi5paw6Z2S5Yy6XCIsXG5cdCAgICBcIjIzMDcwOFwiOiBcIue+jua6quWMulwiLFxuXHQgICAgXCIyMzA3MDlcIjogXCLph5HlsbHlsa/ljLpcIixcblx0ICAgIFwiMjMwNzEwXCI6IFwi5LqU6JCl5Yy6XCIsXG5cdCAgICBcIjIzMDcxMVwiOiBcIuS5jOmprOays+WMulwiLFxuXHQgICAgXCIyMzA3MTJcIjogXCLmsaTml7rmsrPljLpcIixcblx0ICAgIFwiMjMwNzEzXCI6IFwi5bim5bKt5Yy6XCIsXG5cdCAgICBcIjIzMDcxNFwiOiBcIuS5jOS8iuWyreWMulwiLFxuXHQgICAgXCIyMzA3MTVcIjogXCLnuqLmmJ/ljLpcIixcblx0ICAgIFwiMjMwNzE2XCI6IFwi5LiK55SY5bKt5Yy6XCIsXG5cdCAgICBcIjIzMDcyMlwiOiBcIuWYieiNq+WOv1wiLFxuXHQgICAgXCIyMzA3ODFcIjogXCLpk4HlipvluIJcIixcblx0ICAgIFwiMjMwNzgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjIzMDgwMFwiOiBcIuS9s+acqOaWr+W4glwiLFxuXHQgICAgXCIyMzA4MDNcIjogXCLlkJHpmLPljLpcIixcblx0ICAgIFwiMjMwODA0XCI6IFwi5YmN6L+b5Yy6XCIsXG5cdCAgICBcIjIzMDgwNVwiOiBcIuS4nOmjjuWMulwiLFxuXHQgICAgXCIyMzA4MTFcIjogXCLpg4rljLpcIixcblx0ICAgIFwiMjMwODIyXCI6IFwi5qGm5Y2X5Y6/XCIsXG5cdCAgICBcIjIzMDgyNlwiOiBcIuahpuW3neWOv1wiLFxuXHQgICAgXCIyMzA4MjhcIjogXCLmsaTljp/ljr9cIixcblx0ICAgIFwiMjMwODMzXCI6IFwi5oqa6L+c5Y6/XCIsXG5cdCAgICBcIjIzMDg4MVwiOiBcIuWQjOaxn+W4glwiLFxuXHQgICAgXCIyMzA4ODJcIjogXCLlr4zplKbluIJcIixcblx0ICAgIFwiMjMwODgzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjIzMDkwMFwiOiBcIuS4g+WPsOays+W4glwiLFxuXHQgICAgXCIyMzA5MDJcIjogXCLmlrDlhbTljLpcIixcblx0ICAgIFwiMjMwOTAzXCI6IFwi5qGD5bGx5Yy6XCIsXG5cdCAgICBcIjIzMDkwNFwiOiBcIuiMhOWtkOays+WMulwiLFxuXHQgICAgXCIyMzA5MjFcIjogXCLli4PliKnljr9cIixcblx0ICAgIFwiMjMwOTIyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjIzMTAwMFwiOiBcIueJoeS4ueaxn+W4glwiLFxuXHQgICAgXCIyMzEwMDJcIjogXCLkuJzlronljLpcIixcblx0ICAgIFwiMjMxMDAzXCI6IFwi6Ziz5piO5Yy6XCIsXG5cdCAgICBcIjIzMTAwNFwiOiBcIueIseawkeWMulwiLFxuXHQgICAgXCIyMzEwMDVcIjogXCLopb/lronljLpcIixcblx0ICAgIFwiMjMxMDI0XCI6IFwi5Lic5a6B5Y6/XCIsXG5cdCAgICBcIjIzMTAyNVwiOiBcIuael+WPo+WOv1wiLFxuXHQgICAgXCIyMzEwODFcIjogXCLnu6XoiqzmsrPluIJcIixcblx0ICAgIFwiMjMxMDgzXCI6IFwi5rW35p6X5biCXCIsXG5cdCAgICBcIjIzMTA4NFwiOiBcIuWugeWuieW4glwiLFxuXHQgICAgXCIyMzEwODVcIjogXCLnqYbmo7HluIJcIixcblx0ICAgIFwiMjMxMDg2XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjIzMTEwMFwiOiBcIum7keays+W4glwiLFxuXHQgICAgXCIyMzExMDJcIjogXCLniLHovonljLpcIixcblx0ICAgIFwiMjMxMTIxXCI6IFwi5aup5rGf5Y6/XCIsXG5cdCAgICBcIjIzMTEyM1wiOiBcIumAiuWFi+WOv1wiLFxuXHQgICAgXCIyMzExMjRcIjogXCLlrZnlkLTljr9cIixcblx0ICAgIFwiMjMxMTgxXCI6IFwi5YyX5a6J5biCXCIsXG5cdCAgICBcIjIzMTE4MlwiOiBcIuS6lOWkp+i/nuaxoOW4glwiLFxuXHQgICAgXCIyMzExODNcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMjMxMjAwXCI6IFwi57ul5YyW5biCXCIsXG5cdCAgICBcIjIzMTIwMlwiOiBcIuWMl+ael+WMulwiLFxuXHQgICAgXCIyMzEyMjFcIjogXCLmnJvlpY7ljr9cIixcblx0ICAgIFwiMjMxMjIyXCI6IFwi5YWw6KW/5Y6/XCIsXG5cdCAgICBcIjIzMTIyM1wiOiBcIumdkuWGiOWOv1wiLFxuXHQgICAgXCIyMzEyMjRcIjogXCLluoblronljr9cIixcblx0ICAgIFwiMjMxMjI1XCI6IFwi5piO5rC05Y6/XCIsXG5cdCAgICBcIjIzMTIyNlwiOiBcIue7peajseWOv1wiLFxuXHQgICAgXCIyMzEyODFcIjogXCLlronovr7luIJcIixcblx0ICAgIFwiMjMxMjgyXCI6IFwi6IKH5Lic5biCXCIsXG5cdCAgICBcIjIzMTI4M1wiOiBcIua1t+S8puW4glwiLFxuXHQgICAgXCIyMzEyODRcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMjMyNzAwXCI6IFwi5aSn5YW05a6J5bKt5Zyw5Yy6XCIsXG5cdCAgICBcIjIzMjcwMlwiOiBcIuadvuWyreWMulwiLFxuXHQgICAgXCIyMzI3MDNcIjogXCLmlrDmnpfljLpcIixcblx0ICAgIFwiMjMyNzA0XCI6IFwi5ZG85Lit5Yy6XCIsXG5cdCAgICBcIjIzMjcyMVwiOiBcIuWRvOeOm+WOv1wiLFxuXHQgICAgXCIyMzI3MjJcIjogXCLloZTmsrPljr9cIixcblx0ICAgIFwiMjMyNzIzXCI6IFwi5ryg5rKz5Y6/XCIsXG5cdCAgICBcIjIzMjcyNFwiOiBcIuWKoOagvOi+vuWlh+WMulwiLFxuXHQgICAgXCIyMzI3MjVcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMzEwMDAwXCI6IFwi5LiK5rW3XCIsXG5cdCAgICBcIjMxMDEwMFwiOiBcIuS4iua1t+W4glwiLFxuXHQgICAgXCIzMTAxMDFcIjogXCLpu4TmtabljLpcIixcblx0ICAgIFwiMzEwMTA0XCI6IFwi5b6Q5rGH5Yy6XCIsXG5cdCAgICBcIjMxMDEwNVwiOiBcIumVv+WugeWMulwiLFxuXHQgICAgXCIzMTAxMDZcIjogXCLpnZnlronljLpcIixcblx0ICAgIFwiMzEwMTA3XCI6IFwi5pmu6ZmA5Yy6XCIsXG5cdCAgICBcIjMxMDEwOFwiOiBcIumXuOWMl+WMulwiLFxuXHQgICAgXCIzMTAxMDlcIjogXCLombnlj6PljLpcIixcblx0ICAgIFwiMzEwMTEwXCI6IFwi5p2o5rWm5Yy6XCIsXG5cdCAgICBcIjMxMDExMlwiOiBcIumXteihjOWMulwiLFxuXHQgICAgXCIzMTAxMTNcIjogXCLlrp3lsbHljLpcIixcblx0ICAgIFwiMzEwMTE0XCI6IFwi5ZiJ5a6a5Yy6XCIsXG5cdCAgICBcIjMxMDExNVwiOiBcIua1puS4nOaWsOWMulwiLFxuXHQgICAgXCIzMTAxMTZcIjogXCLph5HlsbHljLpcIixcblx0ICAgIFwiMzEwMTE3XCI6IFwi5p2+5rGf5Yy6XCIsXG5cdCAgICBcIjMxMDExOFwiOiBcIumdkua1puWMulwiLFxuXHQgICAgXCIzMTAxMjBcIjogXCLlpYnotKTljLpcIixcblx0ICAgIFwiMzEwMjMwXCI6IFwi5bSH5piO5Y6/XCIsXG5cdCAgICBcIjMxMDIzMVwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzMjAwMDBcIjogXCLmsZ/oi4/nnIFcIixcblx0ICAgIFwiMzIwMTAwXCI6IFwi5Y2X5Lqs5biCXCIsXG5cdCAgICBcIjMyMDEwMlwiOiBcIueOhOatpuWMulwiLFxuXHQgICAgXCIzMjAxMDRcIjogXCLnp6bmt67ljLpcIixcblx0ICAgIFwiMzIwMTA1XCI6IFwi5bu66YK65Yy6XCIsXG5cdCAgICBcIjMyMDEwNlwiOiBcIum8k+alvOWMulwiLFxuXHQgICAgXCIzMjAxMTFcIjogXCLmtablj6PljLpcIixcblx0ICAgIFwiMzIwMTEzXCI6IFwi5qCW6Zye5Yy6XCIsXG5cdCAgICBcIjMyMDExNFwiOiBcIumbqOiKseWPsOWMulwiLFxuXHQgICAgXCIzMjAxMTVcIjogXCLmsZ/lroHljLpcIixcblx0ICAgIFwiMzIwMTE2XCI6IFwi5YWt5ZCI5Yy6XCIsXG5cdCAgICBcIjMyMDEyNFwiOiBcIua6p+awtOWMulwiLFxuXHQgICAgXCIzMjAxMjVcIjogXCLpq5jmt7PljLpcIixcblx0ICAgIFwiMzIwMTI2XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjMyMDIwMFwiOiBcIuaXoOmUoeW4glwiLFxuXHQgICAgXCIzMjAyMDJcIjogXCLltIflronljLpcIixcblx0ICAgIFwiMzIwMjAzXCI6IFwi5Y2X6ZW/5Yy6XCIsXG5cdCAgICBcIjMyMDIwNFwiOiBcIuWMl+WhmOWMulwiLFxuXHQgICAgXCIzMjAyMDVcIjogXCLplKHlsbHljLpcIixcblx0ICAgIFwiMzIwMjA2XCI6IFwi5oOg5bGx5Yy6XCIsXG5cdCAgICBcIjMyMDIxMVwiOiBcIua7qOa5luWMulwiLFxuXHQgICAgXCIzMjAyODFcIjogXCLmsZ/pmLTluIJcIixcblx0ICAgIFwiMzIwMjgyXCI6IFwi5a6c5YW05biCXCIsXG5cdCAgICBcIjMyMDI5N1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzMjAzMDBcIjogXCLlvpDlt57luIJcIixcblx0ICAgIFwiMzIwMzAyXCI6IFwi6byT5qW85Yy6XCIsXG5cdCAgICBcIjMyMDMwM1wiOiBcIuS6kem+meWMulwiLFxuXHQgICAgXCIzMjAzMDVcIjogXCLotL7msarljLpcIixcblx0ICAgIFwiMzIwMzExXCI6IFwi5rOJ5bGx5Yy6XCIsXG5cdCAgICBcIjMyMDMyMVwiOiBcIuS4sOWOv1wiLFxuXHQgICAgXCIzMjAzMjJcIjogXCLmspvljr9cIixcblx0ICAgIFwiMzIwMzIzXCI6IFwi6ZOc5bGx5Yy6XCIsXG5cdCAgICBcIjMyMDMyNFwiOiBcIuedouWugeWOv1wiLFxuXHQgICAgXCIzMjAzODFcIjogXCLmlrDmsoLluIJcIixcblx0ICAgIFwiMzIwMzgyXCI6IFwi6YKz5bee5biCXCIsXG5cdCAgICBcIjMyMDM4M1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzMjA0MDBcIjogXCLluLjlt57luIJcIixcblx0ICAgIFwiMzIwNDAyXCI6IFwi5aSp5a6B5Yy6XCIsXG5cdCAgICBcIjMyMDQwNFwiOiBcIumSn+alvOWMulwiLFxuXHQgICAgXCIzMjA0MDVcIjogXCLmiJrlooXloLDljLpcIixcblx0ICAgIFwiMzIwNDExXCI6IFwi5paw5YyX5Yy6XCIsXG5cdCAgICBcIjMyMDQxMlwiOiBcIuatpui/m+WMulwiLFxuXHQgICAgXCIzMjA0ODFcIjogXCLmuqfpmLPluIJcIixcblx0ICAgIFwiMzIwNDgyXCI6IFwi6YeR5Z2b5biCXCIsXG5cdCAgICBcIjMyMDQ4M1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzMjA1MDBcIjogXCLoi4/lt57luIJcIixcblx0ICAgIFwiMzIwNTA1XCI6IFwi6JmO5LiY5Yy6XCIsXG5cdCAgICBcIjMyMDUwNlwiOiBcIuWQtOS4reWMulwiLFxuXHQgICAgXCIzMjA1MDdcIjogXCLnm7jln47ljLpcIixcblx0ICAgIFwiMzIwNTA4XCI6IFwi5aeR6IuP5Yy6XCIsXG5cdCAgICBcIjMyMDU4MVwiOiBcIuW4uOeGn+W4glwiLFxuXHQgICAgXCIzMjA1ODJcIjogXCLlvKDlrrbmuK/luIJcIixcblx0ICAgIFwiMzIwNTgzXCI6IFwi5piG5bGx5biCXCIsXG5cdCAgICBcIjMyMDU4NFwiOiBcIuWQtOaxn+WMulwiLFxuXHQgICAgXCIzMjA1ODVcIjogXCLlpKrku5PluIJcIixcblx0ICAgIFwiMzIwNTk2XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjMyMDYwMFwiOiBcIuWNl+mAmuW4glwiLFxuXHQgICAgXCIzMjA2MDJcIjogXCLltIflt53ljLpcIixcblx0ICAgIFwiMzIwNjExXCI6IFwi5riv6Ze45Yy6XCIsXG5cdCAgICBcIjMyMDYxMlwiOiBcIumAmuW3nuWMulwiLFxuXHQgICAgXCIzMjA2MjFcIjogXCLmtbflronljr9cIixcblx0ICAgIFwiMzIwNjIzXCI6IFwi5aaC5Lic5Y6/XCIsXG5cdCAgICBcIjMyMDY4MVwiOiBcIuWQr+S4nOW4glwiLFxuXHQgICAgXCIzMjA2ODJcIjogXCLlpoLnmovluIJcIixcblx0ICAgIFwiMzIwNjg0XCI6IFwi5rW36Zeo5biCXCIsXG5cdCAgICBcIjMyMDY5NFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzMjA3MDBcIjogXCLov57kupHmuK/luIJcIixcblx0ICAgIFwiMzIwNzAzXCI6IFwi6L+e5LqR5Yy6XCIsXG5cdCAgICBcIjMyMDcwNVwiOiBcIuaWsOa1puWMulwiLFxuXHQgICAgXCIzMjA3MDZcIjogXCLmtbflt57ljLpcIixcblx0ICAgIFwiMzIwNzIxXCI6IFwi6LWj5qaG5Y6/XCIsXG5cdCAgICBcIjMyMDcyMlwiOiBcIuS4nOa1t+WOv1wiLFxuXHQgICAgXCIzMjA3MjNcIjogXCLngYzkupHljr9cIixcblx0ICAgIFwiMzIwNzI0XCI6IFwi54GM5Y2X5Y6/XCIsXG5cdCAgICBcIjMyMDcyNVwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzMjA4MDBcIjogXCLmt67lronluIJcIixcblx0ICAgIFwiMzIwODAyXCI6IFwi5riF5rKz5Yy6XCIsXG5cdCAgICBcIjMyMDgwM1wiOiBcIua3ruWuieWMulwiLFxuXHQgICAgXCIzMjA4MDRcIjogXCLmt67pmLTljLpcIixcblx0ICAgIFwiMzIwODExXCI6IFwi5riF5rWm5Yy6XCIsXG5cdCAgICBcIjMyMDgyNlwiOiBcIua2n+awtOWOv1wiLFxuXHQgICAgXCIzMjA4MjlcIjogXCLmtKrms73ljr9cIixcblx0ICAgIFwiMzIwODMwXCI6IFwi55ux55yZ5Y6/XCIsXG5cdCAgICBcIjMyMDgzMVwiOiBcIumHkea5luWOv1wiLFxuXHQgICAgXCIzMjA4MzJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMzIwOTAwXCI6IFwi55uQ5Z+O5biCXCIsXG5cdCAgICBcIjMyMDkwMlwiOiBcIuS6rea5luWMulwiLFxuXHQgICAgXCIzMjA5MDNcIjogXCLnm5Dpg73ljLpcIixcblx0ICAgIFwiMzIwOTIxXCI6IFwi5ZON5rC05Y6/XCIsXG5cdCAgICBcIjMyMDkyMlwiOiBcIua7qOa1t+WOv1wiLFxuXHQgICAgXCIzMjA5MjNcIjogXCLpmJzlroHljr9cIixcblx0ICAgIFwiMzIwOTI0XCI6IFwi5bCE6Ziz5Y6/XCIsXG5cdCAgICBcIjMyMDkyNVwiOiBcIuW7uua5luWOv1wiLFxuXHQgICAgXCIzMjA5ODFcIjogXCLkuJzlj7DluIJcIixcblx0ICAgIFwiMzIwOTgyXCI6IFwi5aSn5Liw5biCXCIsXG5cdCAgICBcIjMyMDk4M1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzMjEwMDBcIjogXCLmiazlt57luIJcIixcblx0ICAgIFwiMzIxMDAyXCI6IFwi5bm/6Zm15Yy6XCIsXG5cdCAgICBcIjMyMTAwM1wiOiBcIumCl+axn+WMulwiLFxuXHQgICAgXCIzMjEwMjNcIjogXCLlrp3lupTljr9cIixcblx0ICAgIFwiMzIxMDgxXCI6IFwi5Luq5b6B5biCXCIsXG5cdCAgICBcIjMyMTA4NFwiOiBcIumrmOmCruW4glwiLFxuXHQgICAgXCIzMjEwODhcIjogXCLmsZ/pg73ljLpcIixcblx0ICAgIFwiMzIxMDkzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjMyMTEwMFwiOiBcIumVh+axn+W4glwiLFxuXHQgICAgXCIzMjExMDJcIjogXCLkuqzlj6PljLpcIixcblx0ICAgIFwiMzIxMTExXCI6IFwi5ram5bee5Yy6XCIsXG5cdCAgICBcIjMyMTExMlwiOiBcIuS4ueW+kuWMulwiLFxuXHQgICAgXCIzMjExODFcIjogXCLkuLnpmLPluIJcIixcblx0ICAgIFwiMzIxMTgyXCI6IFwi5oms5Lit5biCXCIsXG5cdCAgICBcIjMyMTE4M1wiOiBcIuWPpeWuueW4glwiLFxuXHQgICAgXCIzMjExODRcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMzIxMjAwXCI6IFwi5rOw5bee5biCXCIsXG5cdCAgICBcIjMyMTIwMlwiOiBcIua1t+mZteWMulwiLFxuXHQgICAgXCIzMjEyMDNcIjogXCLpq5jmuK/ljLpcIixcblx0ICAgIFwiMzIxMjgxXCI6IFwi5YW05YyW5biCXCIsXG5cdCAgICBcIjMyMTI4MlwiOiBcIumdluaxn+W4glwiLFxuXHQgICAgXCIzMjEyODNcIjogXCLms7DlhbTluIJcIixcblx0ICAgIFwiMzIxMjg0XCI6IFwi5aec5aCw5Yy6XCIsXG5cdCAgICBcIjMyMTI4NVwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzMjEzMDBcIjogXCLlrr/ov4HluIJcIixcblx0ICAgIFwiMzIxMzAyXCI6IFwi5a6/5Z+O5Yy6XCIsXG5cdCAgICBcIjMyMTMxMVwiOiBcIuWuv+ixq+WMulwiLFxuXHQgICAgXCIzMjEzMjJcIjogXCLmsq3pmLPljr9cIixcblx0ICAgIFwiMzIxMzIzXCI6IFwi5rOX6Ziz5Y6/XCIsXG5cdCAgICBcIjMyMTMyNFwiOiBcIuazl+a0quWOv1wiLFxuXHQgICAgXCIzMjEzMjVcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMzMwMDAwXCI6IFwi5rWZ5rGf55yBXCIsXG5cdCAgICBcIjMzMDEwMFwiOiBcIuadreW3nuW4glwiLFxuXHQgICAgXCIzMzAxMDJcIjogXCLkuIrln47ljLpcIixcblx0ICAgIFwiMzMwMTAzXCI6IFwi5LiL5Z+O5Yy6XCIsXG5cdCAgICBcIjMzMDEwNFwiOiBcIuaxn+W5suWMulwiLFxuXHQgICAgXCIzMzAxMDVcIjogXCLmi7HlooXljLpcIixcblx0ICAgIFwiMzMwMTA2XCI6IFwi6KW/5rmW5Yy6XCIsXG5cdCAgICBcIjMzMDEwOFwiOiBcIua7qOaxn+WMulwiLFxuXHQgICAgXCIzMzAxMDlcIjogXCLokKflsbHljLpcIixcblx0ICAgIFwiMzMwMTEwXCI6IFwi5L2Z5p2t5Yy6XCIsXG5cdCAgICBcIjMzMDEyMlwiOiBcIuahkOW6kOWOv1wiLFxuXHQgICAgXCIzMzAxMjdcIjogXCLmt7Plronljr9cIixcblx0ICAgIFwiMzMwMTgyXCI6IFwi5bu65b635biCXCIsXG5cdCAgICBcIjMzMDE4M1wiOiBcIuWvjOmYs+W4glwiLFxuXHQgICAgXCIzMzAxODVcIjogXCLkuLTlronluIJcIixcblx0ICAgIFwiMzMwMTg2XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjMzMDIwMFwiOiBcIuWugeazouW4glwiLFxuXHQgICAgXCIzMzAyMDNcIjogXCLmtbfmm5nljLpcIixcblx0ICAgIFwiMzMwMjA0XCI6IFwi5rGf5Lic5Yy6XCIsXG5cdCAgICBcIjMzMDIwNVwiOiBcIuaxn+WMl+WMulwiLFxuXHQgICAgXCIzMzAyMDZcIjogXCLljJfku5HljLpcIixcblx0ICAgIFwiMzMwMjExXCI6IFwi6ZWH5rW35Yy6XCIsXG5cdCAgICBcIjMzMDIxMlwiOiBcIumEnuW3nuWMulwiLFxuXHQgICAgXCIzMzAyMjVcIjogXCLosaHlsbHljr9cIixcblx0ICAgIFwiMzMwMjI2XCI6IFwi5a6B5rW35Y6/XCIsXG5cdCAgICBcIjMzMDI4MVwiOiBcIuS9meWnmuW4glwiLFxuXHQgICAgXCIzMzAyODJcIjogXCLmhYjmuqrluIJcIixcblx0ICAgIFwiMzMwMjgzXCI6IFwi5aWJ5YyW5biCXCIsXG5cdCAgICBcIjMzMDI4NFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzMzAzMDBcIjogXCLmuKnlt57luIJcIixcblx0ICAgIFwiMzMwMzAyXCI6IFwi6bm/5Z+O5Yy6XCIsXG5cdCAgICBcIjMzMDMwM1wiOiBcIum+mea5vuWMulwiLFxuXHQgICAgXCIzMzAzMDRcIjogXCLnk6/mtbfljLpcIixcblx0ICAgIFwiMzMwMzIyXCI6IFwi5rSe5aS05Y6/XCIsXG5cdCAgICBcIjMzMDMyNFwiOiBcIuawuOWYieWOv1wiLFxuXHQgICAgXCIzMzAzMjZcIjogXCLlubPpmLPljr9cIixcblx0ICAgIFwiMzMwMzI3XCI6IFwi6IuN5Y2X5Y6/XCIsXG5cdCAgICBcIjMzMDMyOFwiOiBcIuaWh+aIkOWOv1wiLFxuXHQgICAgXCIzMzAzMjlcIjogXCLms7Dpobrljr9cIixcblx0ICAgIFwiMzMwMzgxXCI6IFwi55Ge5a6J5biCXCIsXG5cdCAgICBcIjMzMDM4MlwiOiBcIuS5kOa4heW4glwiLFxuXHQgICAgXCIzMzAzODNcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMzMwNDAwXCI6IFwi5ZiJ5YW05biCXCIsXG5cdCAgICBcIjMzMDQwMlwiOiBcIuWNl+a5luWMulwiLFxuXHQgICAgXCIzMzA0MTFcIjogXCLnp4DmtLLljLpcIixcblx0ICAgIFwiMzMwNDIxXCI6IFwi5ZiJ5ZaE5Y6/XCIsXG5cdCAgICBcIjMzMDQyNFwiOiBcIua1t+ebkOWOv1wiLFxuXHQgICAgXCIzMzA0ODFcIjogXCLmtbflroHluIJcIixcblx0ICAgIFwiMzMwNDgyXCI6IFwi5bmz5rmW5biCXCIsXG5cdCAgICBcIjMzMDQ4M1wiOiBcIuahkOS5oeW4glwiLFxuXHQgICAgXCIzMzA0ODRcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMzMwNTAwXCI6IFwi5rmW5bee5biCXCIsXG5cdCAgICBcIjMzMDUwMlwiOiBcIuWQtOWFtOWMulwiLFxuXHQgICAgXCIzMzA1MDNcIjogXCLljZfmtZTljLpcIixcblx0ICAgIFwiMzMwNTIxXCI6IFwi5b635riF5Y6/XCIsXG5cdCAgICBcIjMzMDUyMlwiOiBcIumVv+WFtOWOv1wiLFxuXHQgICAgXCIzMzA1MjNcIjogXCLlronlkInljr9cIixcblx0ICAgIFwiMzMwNTI0XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjMzMDYwMFwiOiBcIue7jeWFtOW4glwiLFxuXHQgICAgXCIzMzA2MDJcIjogXCLotorln47ljLpcIixcblx0ICAgIFwiMzMwNjIxXCI6IFwi57uN5YW05Y6/XCIsXG5cdCAgICBcIjMzMDYyNFwiOiBcIuaWsOaYjOWOv1wiLFxuXHQgICAgXCIzMzA2ODFcIjogXCLor7jmmqjluIJcIixcblx0ICAgIFwiMzMwNjgyXCI6IFwi5LiK6Jme5biCXCIsXG5cdCAgICBcIjMzMDY4M1wiOiBcIuW1iuW3nuW4glwiLFxuXHQgICAgXCIzMzA2ODRcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMzMwNzAwXCI6IFwi6YeR5Y2O5biCXCIsXG5cdCAgICBcIjMzMDcwMlwiOiBcIuWpuuWfjuWMulwiLFxuXHQgICAgXCIzMzA3MDNcIjogXCLph5HkuJzljLpcIixcblx0ICAgIFwiMzMwNzIzXCI6IFwi5q2m5LmJ5Y6/XCIsXG5cdCAgICBcIjMzMDcyNlwiOiBcIua1puaxn+WOv1wiLFxuXHQgICAgXCIzMzA3MjdcIjogXCLno5Dlronljr9cIixcblx0ICAgIFwiMzMwNzgxXCI6IFwi5YWw5rqq5biCXCIsXG5cdCAgICBcIjMzMDc4MlwiOiBcIuS5ieS5jOW4glwiLFxuXHQgICAgXCIzMzA3ODNcIjogXCLkuJzpmLPluIJcIixcblx0ICAgIFwiMzMwNzg0XCI6IFwi5rC45bq35biCXCIsXG5cdCAgICBcIjMzMDc4NVwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzMzA4MDBcIjogXCLooaLlt57luIJcIixcblx0ICAgIFwiMzMwODAyXCI6IFwi5p+v5Z+O5Yy6XCIsXG5cdCAgICBcIjMzMDgwM1wiOiBcIuihouaxn+WMulwiLFxuXHQgICAgXCIzMzA4MjJcIjogXCLluLjlsbHljr9cIixcblx0ICAgIFwiMzMwODI0XCI6IFwi5byA5YyW5Y6/XCIsXG5cdCAgICBcIjMzMDgyNVwiOiBcIum+mea4uOWOv1wiLFxuXHQgICAgXCIzMzA4ODFcIjogXCLmsZ/lsbHluIJcIixcblx0ICAgIFwiMzMwODgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjMzMDkwMFwiOiBcIuiIn+WxseW4glwiLFxuXHQgICAgXCIzMzA5MDJcIjogXCLlrprmtbfljLpcIixcblx0ICAgIFwiMzMwOTAzXCI6IFwi5pmu6ZmA5Yy6XCIsXG5cdCAgICBcIjMzMDkyMVwiOiBcIuWyseWxseWOv1wiLFxuXHQgICAgXCIzMzA5MjJcIjogXCLltYrms5fljr9cIixcblx0ICAgIFwiMzMwOTIzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjMzMTAwMFwiOiBcIuWPsOW3nuW4glwiLFxuXHQgICAgXCIzMzEwMDJcIjogXCLmpJLmsZ/ljLpcIixcblx0ICAgIFwiMzMxMDAzXCI6IFwi6buE5bKp5Yy6XCIsXG5cdCAgICBcIjMzMTAwNFwiOiBcIui3r+ahpeWMulwiLFxuXHQgICAgXCIzMzEwMjFcIjogXCLnjonnjq/ljr9cIixcblx0ICAgIFwiMzMxMDIyXCI6IFwi5LiJ6Zeo5Y6/XCIsXG5cdCAgICBcIjMzMTAyM1wiOiBcIuWkqeWPsOWOv1wiLFxuXHQgICAgXCIzMzEwMjRcIjogXCLku5nlsYXljr9cIixcblx0ICAgIFwiMzMxMDgxXCI6IFwi5rip5bKt5biCXCIsXG5cdCAgICBcIjMzMTA4MlwiOiBcIuS4tOa1t+W4glwiLFxuXHQgICAgXCIzMzEwODNcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMzMxMTAwXCI6IFwi5Li95rC05biCXCIsXG5cdCAgICBcIjMzMTEwMlwiOiBcIuiOsumDveWMulwiLFxuXHQgICAgXCIzMzExMjFcIjogXCLpnZLnlLDljr9cIixcblx0ICAgIFwiMzMxMTIyXCI6IFwi57yZ5LqR5Y6/XCIsXG5cdCAgICBcIjMzMTEyM1wiOiBcIumBguaYjOWOv1wiLFxuXHQgICAgXCIzMzExMjRcIjogXCLmnb7pmLPljr9cIixcblx0ICAgIFwiMzMxMTI1XCI6IFwi5LqR5ZKM5Y6/XCIsXG5cdCAgICBcIjMzMTEyNlwiOiBcIuW6huWFg+WOv1wiLFxuXHQgICAgXCIzMzExMjdcIjogXCLmma/lroHnlbLml4/oh6rmsrvljr9cIixcblx0ICAgIFwiMzMxMTgxXCI6IFwi6b6Z5rOJ5biCXCIsXG5cdCAgICBcIjMzMTE4MlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNDAwMDBcIjogXCLlronlvr3nnIFcIixcblx0ICAgIFwiMzQwMTAwXCI6IFwi5ZCI6IKl5biCXCIsXG5cdCAgICBcIjM0MDEwMlwiOiBcIueRtua1t+WMulwiLFxuXHQgICAgXCIzNDAxMDNcIjogXCLlupDpmLPljLpcIixcblx0ICAgIFwiMzQwMTA0XCI6IFwi6JyA5bGx5Yy6XCIsXG5cdCAgICBcIjM0MDExMVwiOiBcIuWMheays+WMulwiLFxuXHQgICAgXCIzNDAxMjFcIjogXCLplb/kuLDljr9cIixcblx0ICAgIFwiMzQwMTIyXCI6IFwi6IKl5Lic5Y6/XCIsXG5cdCAgICBcIjM0MDEyM1wiOiBcIuiCpeilv+WOv1wiLFxuXHQgICAgXCIzNDAxOTJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMzQwMjAwXCI6IFwi6Iqc5rmW5biCXCIsXG5cdCAgICBcIjM0MDIwMlwiOiBcIumVnOa5luWMulwiLFxuXHQgICAgXCIzNDAyMDNcIjogXCLlvIvmsZ/ljLpcIixcblx0ICAgIFwiMzQwMjA3XCI6IFwi6big5rGf5Yy6XCIsXG5cdCAgICBcIjM0MDIwOFwiOiBcIuS4ieWxseWMulwiLFxuXHQgICAgXCIzNDAyMjFcIjogXCLoipzmuZbljr9cIixcblx0ICAgIFwiMzQwMjIyXCI6IFwi57mB5piM5Y6/XCIsXG5cdCAgICBcIjM0MDIyM1wiOiBcIuWNl+mZteWOv1wiLFxuXHQgICAgXCIzNDAyMjRcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMzQwMzAwXCI6IFwi6JqM5Z+g5biCXCIsXG5cdCAgICBcIjM0MDMwMlwiOiBcIum+meWtkOa5luWMulwiLFxuXHQgICAgXCIzNDAzMDNcIjogXCLomozlsbHljLpcIixcblx0ICAgIFwiMzQwMzA0XCI6IFwi56a55Lya5Yy6XCIsXG5cdCAgICBcIjM0MDMxMVwiOiBcIua3ruS4iuWMulwiLFxuXHQgICAgXCIzNDAzMjFcIjogXCLmgIDov5zljr9cIixcblx0ICAgIFwiMzQwMzIyXCI6IFwi5LqU5rKz5Y6/XCIsXG5cdCAgICBcIjM0MDMyM1wiOiBcIuWbuumVh+WOv1wiLFxuXHQgICAgXCIzNDAzMjRcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMzQwNDAwXCI6IFwi5reu5Y2X5biCXCIsXG5cdCAgICBcIjM0MDQwMlwiOiBcIuWkp+mAmuWMulwiLFxuXHQgICAgXCIzNDA0MDNcIjogXCLnlLDlrrblurXljLpcIixcblx0ICAgIFwiMzQwNDA0XCI6IFwi6LCi5a626ZuG5Yy6XCIsXG5cdCAgICBcIjM0MDQwNVwiOiBcIuWFq+WFrOWxseWMulwiLFxuXHQgICAgXCIzNDA0MDZcIjogXCLmvZjpm4bljLpcIixcblx0ICAgIFwiMzQwNDIxXCI6IFwi5Yek5Y+w5Y6/XCIsXG5cdCAgICBcIjM0MDQyMlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNDA1MDBcIjogXCLpqazpno3lsbHluIJcIixcblx0ICAgIFwiMzQwNTAzXCI6IFwi6Iqx5bGx5Yy6XCIsXG5cdCAgICBcIjM0MDUwNFwiOiBcIumbqOWxseWMulwiLFxuXHQgICAgXCIzNDA1MDZcIjogXCLljZrmnJvljLpcIixcblx0ICAgIFwiMzQwNTIxXCI6IFwi5b2T5raC5Y6/XCIsXG5cdCAgICBcIjM0MDUyMlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNDA2MDBcIjogXCLmt67ljJfluIJcIixcblx0ICAgIFwiMzQwNjAyXCI6IFwi5p2c6ZuG5Yy6XCIsXG5cdCAgICBcIjM0MDYwM1wiOiBcIuebuOWxseWMulwiLFxuXHQgICAgXCIzNDA2MDRcIjogXCLng4jlsbHljLpcIixcblx0ICAgIFwiMzQwNjIxXCI6IFwi5r+J5rqq5Y6/XCIsXG5cdCAgICBcIjM0MDYyMlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNDA3MDBcIjogXCLpk5zpmbXluIJcIixcblx0ICAgIFwiMzQwNzAyXCI6IFwi6ZOc5a6Y5bGx5Yy6XCIsXG5cdCAgICBcIjM0MDcwM1wiOiBcIueLruWtkOWxseWMulwiLFxuXHQgICAgXCIzNDA3MTFcIjogXCLpg4rljLpcIixcblx0ICAgIFwiMzQwNzIxXCI6IFwi6ZOc6Zm15Y6/XCIsXG5cdCAgICBcIjM0MDcyMlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNDA4MDBcIjogXCLlronluobluIJcIixcblx0ICAgIFwiMzQwODAyXCI6IFwi6L+O5rGf5Yy6XCIsXG5cdCAgICBcIjM0MDgwM1wiOiBcIuWkp+inguWMulwiLFxuXHQgICAgXCIzNDA4MTFcIjogXCLlrpznp4DljLpcIixcblx0ICAgIFwiMzQwODIyXCI6IFwi5oCA5a6B5Y6/XCIsXG5cdCAgICBcIjM0MDgyM1wiOiBcIuaenumYs+WOv1wiLFxuXHQgICAgXCIzNDA4MjRcIjogXCLmvZzlsbHljr9cIixcblx0ICAgIFwiMzQwODI1XCI6IFwi5aSq5rmW5Y6/XCIsXG5cdCAgICBcIjM0MDgyNlwiOiBcIuWuv+advuWOv1wiLFxuXHQgICAgXCIzNDA4MjdcIjogXCLmnJvmsZ/ljr9cIixcblx0ICAgIFwiMzQwODI4XCI6IFwi5bKz6KW/5Y6/XCIsXG5cdCAgICBcIjM0MDg4MVwiOiBcIuahkOWfjuW4glwiLFxuXHQgICAgXCIzNDA4ODJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMzQxMDAwXCI6IFwi6buE5bGx5biCXCIsXG5cdCAgICBcIjM0MTAwMlwiOiBcIuWxr+a6quWMulwiLFxuXHQgICAgXCIzNDEwMDNcIjogXCLpu4TlsbHljLpcIixcblx0ICAgIFwiMzQxMDA0XCI6IFwi5b695bee5Yy6XCIsXG5cdCAgICBcIjM0MTAyMVwiOiBcIuatmeWOv1wiLFxuXHQgICAgXCIzNDEwMjJcIjogXCLkvJHlroHljr9cIixcblx0ICAgIFwiMzQxMDIzXCI6IFwi6buf5Y6/XCIsXG5cdCAgICBcIjM0MTAyNFwiOiBcIuelgemXqOWOv1wiLFxuXHQgICAgXCIzNDEwMjVcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMzQxMTAwXCI6IFwi5ruB5bee5biCXCIsXG5cdCAgICBcIjM0MTEwMlwiOiBcIueQheeQiuWMulwiLFxuXHQgICAgXCIzNDExMDNcIjogXCLljZfosK/ljLpcIixcblx0ICAgIFwiMzQxMTIyXCI6IFwi5p2l5a6J5Y6/XCIsXG5cdCAgICBcIjM0MTEyNFwiOiBcIuWFqOakkuWOv1wiLFxuXHQgICAgXCIzNDExMjVcIjogXCLlrprov5zljr9cIixcblx0ICAgIFwiMzQxMTI2XCI6IFwi5Yek6Ziz5Y6/XCIsXG5cdCAgICBcIjM0MTE4MVwiOiBcIuWkqemVv+W4glwiLFxuXHQgICAgXCIzNDExODJcIjogXCLmmI7lhYnluIJcIixcblx0ICAgIFwiMzQxMTgzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjM0MTIwMFwiOiBcIumYnOmYs+W4glwiLFxuXHQgICAgXCIzNDEyMDJcIjogXCLpoo3lt57ljLpcIixcblx0ICAgIFwiMzQxMjAzXCI6IFwi6aKN5Lic5Yy6XCIsXG5cdCAgICBcIjM0MTIwNFwiOiBcIumijeazieWMulwiLFxuXHQgICAgXCIzNDEyMjFcIjogXCLkuLTms4nljr9cIixcblx0ICAgIFwiMzQxMjIyXCI6IFwi5aSq5ZKM5Y6/XCIsXG5cdCAgICBcIjM0MTIyNVwiOiBcIumYnOWNl+WOv1wiLFxuXHQgICAgXCIzNDEyMjZcIjogXCLpoo3kuIrljr9cIixcblx0ICAgIFwiMzQxMjgyXCI6IFwi55WM6aaW5biCXCIsXG5cdCAgICBcIjM0MTI4M1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNDEzMDBcIjogXCLlrr/lt57luIJcIixcblx0ICAgIFwiMzQxMzAyXCI6IFwi5Z+H5qGl5Yy6XCIsXG5cdCAgICBcIjM0MTMyMVwiOiBcIueggOWxseWOv1wiLFxuXHQgICAgXCIzNDEzMjJcIjogXCLokKfljr9cIixcblx0ICAgIFwiMzQxMzIzXCI6IFwi54G155Kn5Y6/XCIsXG5cdCAgICBcIjM0MTMyNFwiOiBcIuazl+WOv1wiLFxuXHQgICAgXCIzNDEzMjVcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMzQxNDAwXCI6IFwi5bei5rmW5biCXCIsXG5cdCAgICBcIjM0MTQyMVwiOiBcIuW6kOaxn+WOv1wiLFxuXHQgICAgXCIzNDE0MjJcIjogXCLml6DkuLrljr9cIixcblx0ICAgIFwiMzQxNDIzXCI6IFwi5ZCr5bGx5Y6/XCIsXG5cdCAgICBcIjM0MTQyNFwiOiBcIuWSjOWOv1wiLFxuXHQgICAgXCIzNDE1MDBcIjogXCLlha3lronluIJcIixcblx0ICAgIFwiMzQxNTAyXCI6IFwi6YeR5a6J5Yy6XCIsXG5cdCAgICBcIjM0MTUwM1wiOiBcIuijleWuieWMulwiLFxuXHQgICAgXCIzNDE1MjFcIjogXCLlr7/ljr9cIixcblx0ICAgIFwiMzQxNTIyXCI6IFwi6ZyN6YKx5Y6/XCIsXG5cdCAgICBcIjM0MTUyM1wiOiBcIuiIkuWfjuWOv1wiLFxuXHQgICAgXCIzNDE1MjRcIjogXCLph5Hlr6jljr9cIixcblx0ICAgIFwiMzQxNTI1XCI6IFwi6ZyN5bGx5Y6/XCIsXG5cdCAgICBcIjM0MTUyNlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNDE2MDBcIjogXCLkurPlt57luIJcIixcblx0ICAgIFwiMzQxNjAyXCI6IFwi6LCv5Z+O5Yy6XCIsXG5cdCAgICBcIjM0MTYyMVwiOiBcIua2oemYs+WOv1wiLFxuXHQgICAgXCIzNDE2MjJcIjogXCLokpnln47ljr9cIixcblx0ICAgIFwiMzQxNjIzXCI6IFwi5Yip6L6b5Y6/XCIsXG5cdCAgICBcIjM0MTYyNFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNDE3MDBcIjogXCLmsaDlt57luIJcIixcblx0ICAgIFwiMzQxNzAyXCI6IFwi6LS15rGg5Yy6XCIsXG5cdCAgICBcIjM0MTcyMVwiOiBcIuS4nOiHs+WOv1wiLFxuXHQgICAgXCIzNDE3MjJcIjogXCLnn7Plj7Dljr9cIixcblx0ICAgIFwiMzQxNzIzXCI6IFwi6Z2S6Ziz5Y6/XCIsXG5cdCAgICBcIjM0MTcyNFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNDE4MDBcIjogXCLlrqPln47luIJcIixcblx0ICAgIFwiMzQxODAyXCI6IFwi5a6j5bee5Yy6XCIsXG5cdCAgICBcIjM0MTgyMVwiOiBcIumDjua6quWOv1wiLFxuXHQgICAgXCIzNDE4MjJcIjogXCLlub/lvrfljr9cIixcblx0ICAgIFwiMzQxODIzXCI6IFwi5rO+5Y6/XCIsXG5cdCAgICBcIjM0MTgyNFwiOiBcIue7qea6quWOv1wiLFxuXHQgICAgXCIzNDE4MjVcIjogXCLml4zlvrfljr9cIixcblx0ICAgIFwiMzQxODgxXCI6IFwi5a6B5Zu95biCXCIsXG5cdCAgICBcIjM0MTg4MlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNTAwMDBcIjogXCLnpo/lu7rnnIFcIixcblx0ICAgIFwiMzUwMTAwXCI6IFwi56aP5bee5biCXCIsXG5cdCAgICBcIjM1MDEwMlwiOiBcIum8k+alvOWMulwiLFxuXHQgICAgXCIzNTAxMDNcIjogXCLlj7DmsZ/ljLpcIixcblx0ICAgIFwiMzUwMTA0XCI6IFwi5LuT5bGx5Yy6XCIsXG5cdCAgICBcIjM1MDEwNVwiOiBcIumprOWwvuWMulwiLFxuXHQgICAgXCIzNTAxMTFcIjogXCLmmYvlronljLpcIixcblx0ICAgIFwiMzUwMTIxXCI6IFwi6Ze95L6v5Y6/XCIsXG5cdCAgICBcIjM1MDEyMlwiOiBcIui/nuaxn+WOv1wiLFxuXHQgICAgXCIzNTAxMjNcIjogXCLnvZfmupDljr9cIixcblx0ICAgIFwiMzUwMTI0XCI6IFwi6Ze95riF5Y6/XCIsXG5cdCAgICBcIjM1MDEyNVwiOiBcIuawuOazsOWOv1wiLFxuXHQgICAgXCIzNTAxMjhcIjogXCLlubPmva3ljr9cIixcblx0ICAgIFwiMzUwMTgxXCI6IFwi56aP5riF5biCXCIsXG5cdCAgICBcIjM1MDE4MlwiOiBcIumVv+S5kOW4glwiLFxuXHQgICAgXCIzNTAxODNcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMzUwMjAwXCI6IFwi5Y6m6Zeo5biCXCIsXG5cdCAgICBcIjM1MDIwM1wiOiBcIuaAneaYjuWMulwiLFxuXHQgICAgXCIzNTAyMDVcIjogXCLmtbfmsqfljLpcIixcblx0ICAgIFwiMzUwMjA2XCI6IFwi5rmW6YeM5Yy6XCIsXG5cdCAgICBcIjM1MDIxMVwiOiBcIumbhue+juWMulwiLFxuXHQgICAgXCIzNTAyMTJcIjogXCLlkIzlronljLpcIixcblx0ICAgIFwiMzUwMjEzXCI6IFwi57+U5a6J5Yy6XCIsXG5cdCAgICBcIjM1MDIxNFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNTAzMDBcIjogXCLojobnlLDluIJcIixcblx0ICAgIFwiMzUwMzAyXCI6IFwi5Z+O5Y6i5Yy6XCIsXG5cdCAgICBcIjM1MDMwM1wiOiBcIua2teaxn+WMulwiLFxuXHQgICAgXCIzNTAzMDRcIjogXCLojZTln47ljLpcIixcblx0ICAgIFwiMzUwMzA1XCI6IFwi56eA5bG/5Yy6XCIsXG5cdCAgICBcIjM1MDMyMlwiOiBcIuS7mea4uOWOv1wiLFxuXHQgICAgXCIzNTAzMjNcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMzUwNDAwXCI6IFwi5LiJ5piO5biCXCIsXG5cdCAgICBcIjM1MDQwMlwiOiBcIuaiheWIl+WMulwiLFxuXHQgICAgXCIzNTA0MDNcIjogXCLkuInlhYPljLpcIixcblx0ICAgIFwiMzUwNDIxXCI6IFwi5piO5rqq5Y6/XCIsXG5cdCAgICBcIjM1MDQyM1wiOiBcIua4hea1geWOv1wiLFxuXHQgICAgXCIzNTA0MjRcIjogXCLlroHljJbljr9cIixcblx0ICAgIFwiMzUwNDI1XCI6IFwi5aSn55Sw5Y6/XCIsXG5cdCAgICBcIjM1MDQyNlwiOiBcIuWwpOa6quWOv1wiLFxuXHQgICAgXCIzNTA0MjdcIjogXCLmspnljr9cIixcblx0ICAgIFwiMzUwNDI4XCI6IFwi5bCG5LmQ5Y6/XCIsXG5cdCAgICBcIjM1MDQyOVwiOiBcIuazsOWugeWOv1wiLFxuXHQgICAgXCIzNTA0MzBcIjogXCLlu7rlroHljr9cIixcblx0ICAgIFwiMzUwNDgxXCI6IFwi5rC45a6J5biCXCIsXG5cdCAgICBcIjM1MDQ4MlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNTA1MDBcIjogXCLms4nlt57luIJcIixcblx0ICAgIFwiMzUwNTAyXCI6IFwi6bKk5Z+O5Yy6XCIsXG5cdCAgICBcIjM1MDUwM1wiOiBcIuS4sOazveWMulwiLFxuXHQgICAgXCIzNTA1MDRcIjogXCLmtJvmsZ/ljLpcIixcblx0ICAgIFwiMzUwNTA1XCI6IFwi5rOJ5riv5Yy6XCIsXG5cdCAgICBcIjM1MDUyMVwiOiBcIuaDoOWuieWOv1wiLFxuXHQgICAgXCIzNTA1MjRcIjogXCLlronmuqrljr9cIixcblx0ICAgIFwiMzUwNTI1XCI6IFwi5rC45pil5Y6/XCIsXG5cdCAgICBcIjM1MDUyNlwiOiBcIuW+t+WMluWOv1wiLFxuXHQgICAgXCIzNTA1MjdcIjogXCLph5Hpl6jljr9cIixcblx0ICAgIFwiMzUwNTgxXCI6IFwi55+z54uu5biCXCIsXG5cdCAgICBcIjM1MDU4MlwiOiBcIuaZi+axn+W4glwiLFxuXHQgICAgXCIzNTA1ODNcIjogXCLljZflronluIJcIixcblx0ICAgIFwiMzUwNTg0XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjM1MDYwMFwiOiBcIua8s+W3nuW4glwiLFxuXHQgICAgXCIzNTA2MDJcIjogXCLoipfln47ljLpcIixcblx0ICAgIFwiMzUwNjAzXCI6IFwi6b6Z5paH5Yy6XCIsXG5cdCAgICBcIjM1MDYyMlwiOiBcIuS6kemchOWOv1wiLFxuXHQgICAgXCIzNTA2MjNcIjogXCLmvLPmtabljr9cIixcblx0ICAgIFwiMzUwNjI0XCI6IFwi6K+P5a6J5Y6/XCIsXG5cdCAgICBcIjM1MDYyNVwiOiBcIumVv+azsOWOv1wiLFxuXHQgICAgXCIzNTA2MjZcIjogXCLkuJzlsbHljr9cIixcblx0ICAgIFwiMzUwNjI3XCI6IFwi5Y2X6Z2W5Y6/XCIsXG5cdCAgICBcIjM1MDYyOFwiOiBcIuW5s+WSjOWOv1wiLFxuXHQgICAgXCIzNTA2MjlcIjogXCLljY7lronljr9cIixcblx0ICAgIFwiMzUwNjgxXCI6IFwi6b6Z5rW35biCXCIsXG5cdCAgICBcIjM1MDY4MlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNTA3MDBcIjogXCLljZflubPluIJcIixcblx0ICAgIFwiMzUwNzAyXCI6IFwi5bu25bmz5Yy6XCIsXG5cdCAgICBcIjM1MDcyMVwiOiBcIumhuuaYjOWOv1wiLFxuXHQgICAgXCIzNTA3MjJcIjogXCLmtabln47ljr9cIixcblx0ICAgIFwiMzUwNzIzXCI6IFwi5YWJ5rO95Y6/XCIsXG5cdCAgICBcIjM1MDcyNFwiOiBcIuadvua6quWOv1wiLFxuXHQgICAgXCIzNTA3MjVcIjogXCLmlL/lkozljr9cIixcblx0ICAgIFwiMzUwNzgxXCI6IFwi6YK15q2m5biCXCIsXG5cdCAgICBcIjM1MDc4MlwiOiBcIuatpuWkt+WxseW4glwiLFxuXHQgICAgXCIzNTA3ODNcIjogXCLlu7rnk6/luIJcIixcblx0ICAgIFwiMzUwNzg0XCI6IFwi5bu66Ziz5biCXCIsXG5cdCAgICBcIjM1MDc4NVwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNTA4MDBcIjogXCLpvpnlsqnluIJcIixcblx0ICAgIFwiMzUwODAyXCI6IFwi5paw572X5Yy6XCIsXG5cdCAgICBcIjM1MDgyMVwiOiBcIumVv+axgOWOv1wiLFxuXHQgICAgXCIzNTA4MjJcIjogXCLmsLjlrprljr9cIixcblx0ICAgIFwiMzUwODIzXCI6IFwi5LiK5p2t5Y6/XCIsXG5cdCAgICBcIjM1MDgyNFwiOiBcIuatpuW5s+WOv1wiLFxuXHQgICAgXCIzNTA4MjVcIjogXCLov57ln47ljr9cIixcblx0ICAgIFwiMzUwODgxXCI6IFwi5ryz5bmz5biCXCIsXG5cdCAgICBcIjM1MDg4MlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNTA5MDBcIjogXCLlroHlvrfluIJcIixcblx0ICAgIFwiMzUwOTAyXCI6IFwi6JWJ5Z+O5Yy6XCIsXG5cdCAgICBcIjM1MDkyMVwiOiBcIumcnua1puWOv1wiLFxuXHQgICAgXCIzNTA5MjJcIjogXCLlj6TnlLDljr9cIixcblx0ICAgIFwiMzUwOTIzXCI6IFwi5bGP5Y2X5Y6/XCIsXG5cdCAgICBcIjM1MDkyNFwiOiBcIuWvv+WugeWOv1wiLFxuXHQgICAgXCIzNTA5MjVcIjogXCLlkajlroHljr9cIixcblx0ICAgIFwiMzUwOTI2XCI6IFwi5p+Y6I2j5Y6/XCIsXG5cdCAgICBcIjM1MDk4MVwiOiBcIuemj+WuieW4glwiLFxuXHQgICAgXCIzNTA5ODJcIjogXCLnpo/pvI7luIJcIixcblx0ICAgIFwiMzUwOTgzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjM2MDAwMFwiOiBcIuaxn+ilv+ecgVwiLFxuXHQgICAgXCIzNjAxMDBcIjogXCLljZfmmIzluIJcIixcblx0ICAgIFwiMzYwMTAyXCI6IFwi5Lic5rmW5Yy6XCIsXG5cdCAgICBcIjM2MDEwM1wiOiBcIuilv+a5luWMulwiLFxuXHQgICAgXCIzNjAxMDRcIjogXCLpnZLkupHosLHljLpcIixcblx0ICAgIFwiMzYwMTA1XCI6IFwi5rm+6YeM5Yy6XCIsXG5cdCAgICBcIjM2MDExMVwiOiBcIumdkuWxsea5luWMulwiLFxuXHQgICAgXCIzNjAxMjFcIjogXCLljZfmmIzljr9cIixcblx0ICAgIFwiMzYwMTIyXCI6IFwi5paw5bu65Y6/XCIsXG5cdCAgICBcIjM2MDEyM1wiOiBcIuWuieS5ieWOv1wiLFxuXHQgICAgXCIzNjAxMjRcIjogXCLov5votKTljr9cIixcblx0ICAgIFwiMzYwMTI4XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjM2MDIwMFwiOiBcIuaZr+W+t+mVh+W4glwiLFxuXHQgICAgXCIzNjAyMDJcIjogXCLmmIzmsZ/ljLpcIixcblx0ICAgIFwiMzYwMjAzXCI6IFwi54+g5bGx5Yy6XCIsXG5cdCAgICBcIjM2MDIyMlwiOiBcIua1ruaigeWOv1wiLFxuXHQgICAgXCIzNjAyODFcIjogXCLkuZDlubPluIJcIixcblx0ICAgIFwiMzYwMjgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjM2MDMwMFwiOiBcIuiQjeS5oeW4glwiLFxuXHQgICAgXCIzNjAzMDJcIjogXCLlronmupDljLpcIixcblx0ICAgIFwiMzYwMzEzXCI6IFwi5rmY5Lic5Yy6XCIsXG5cdCAgICBcIjM2MDMyMVwiOiBcIuiOsuiKseWOv1wiLFxuXHQgICAgXCIzNjAzMjJcIjogXCLkuIrmoJfljr9cIixcblx0ICAgIFwiMzYwMzIzXCI6IFwi6Iqm5rqq5Y6/XCIsXG5cdCAgICBcIjM2MDMyNFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNjA0MDBcIjogXCLkuZ3msZ/luIJcIixcblx0ICAgIFwiMzYwNDAyXCI6IFwi5bqQ5bGx5Yy6XCIsXG5cdCAgICBcIjM2MDQwM1wiOiBcIua1lOmYs+WMulwiLFxuXHQgICAgXCIzNjA0MjFcIjogXCLkuZ3msZ/ljr9cIixcblx0ICAgIFwiMzYwNDIzXCI6IFwi5q2m5a6B5Y6/XCIsXG5cdCAgICBcIjM2MDQyNFwiOiBcIuS/ruawtOWOv1wiLFxuXHQgICAgXCIzNjA0MjVcIjogXCLmsLjkv67ljr9cIixcblx0ICAgIFwiMzYwNDI2XCI6IFwi5b635a6J5Y6/XCIsXG5cdCAgICBcIjM2MDQyN1wiOiBcIuaYn+WtkOWOv1wiLFxuXHQgICAgXCIzNjA0MjhcIjogXCLpg73mmIzljr9cIixcblx0ICAgIFwiMzYwNDI5XCI6IFwi5rmW5Y+j5Y6/XCIsXG5cdCAgICBcIjM2MDQzMFwiOiBcIuW9reazveWOv1wiLFxuXHQgICAgXCIzNjA0ODFcIjogXCLnkZ7mmIzluIJcIixcblx0ICAgIFwiMzYwNDgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjM2MDQ4M1wiOiBcIuWFsemdkuWfjuW4glwiLFxuXHQgICAgXCIzNjA1MDBcIjogXCLmlrDkvZnluIJcIixcblx0ICAgIFwiMzYwNTAyXCI6IFwi5rid5rC05Yy6XCIsXG5cdCAgICBcIjM2MDUyMVwiOiBcIuWIhuWunOWOv1wiLFxuXHQgICAgXCIzNjA1MjJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMzYwNjAwXCI6IFwi6bmw5r2t5biCXCIsXG5cdCAgICBcIjM2MDYwMlwiOiBcIuaciOa5luWMulwiLFxuXHQgICAgXCIzNjA2MjJcIjogXCLkvZnmsZ/ljr9cIixcblx0ICAgIFwiMzYwNjgxXCI6IFwi6LS15rqq5biCXCIsXG5cdCAgICBcIjM2MDY4MlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNjA3MDBcIjogXCLotaPlt57luIJcIixcblx0ICAgIFwiMzYwNzAyXCI6IFwi56ug6LSh5Yy6XCIsXG5cdCAgICBcIjM2MDcyMVwiOiBcIui1o+WOv1wiLFxuXHQgICAgXCIzNjA3MjJcIjogXCLkv6HkuLDljr9cIixcblx0ICAgIFwiMzYwNzIzXCI6IFwi5aSn5L2Z5Y6/XCIsXG5cdCAgICBcIjM2MDcyNFwiOiBcIuS4iueKueWOv1wiLFxuXHQgICAgXCIzNjA3MjVcIjogXCLltIfkuYnljr9cIixcblx0ICAgIFwiMzYwNzI2XCI6IFwi5a6J6L+c5Y6/XCIsXG5cdCAgICBcIjM2MDcyN1wiOiBcIum+meWNl+WOv1wiLFxuXHQgICAgXCIzNjA3MjhcIjogXCLlrprljZfljr9cIixcblx0ICAgIFwiMzYwNzI5XCI6IFwi5YWo5Y2X5Y6/XCIsXG5cdCAgICBcIjM2MDczMFwiOiBcIuWugemDveWOv1wiLFxuXHQgICAgXCIzNjA3MzFcIjogXCLkuo7pg73ljr9cIixcblx0ICAgIFwiMzYwNzMyXCI6IFwi5YW05Zu95Y6/XCIsXG5cdCAgICBcIjM2MDczM1wiOiBcIuS8muaYjOWOv1wiLFxuXHQgICAgXCIzNjA3MzRcIjogXCLlr7vkuYzljr9cIixcblx0ICAgIFwiMzYwNzM1XCI6IFwi55+z5Z+O5Y6/XCIsXG5cdCAgICBcIjM2MDc4MVwiOiBcIueRnumHkeW4glwiLFxuXHQgICAgXCIzNjA3ODJcIjogXCLljZflurfluIJcIixcblx0ICAgIFwiMzYwNzgzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjM2MDgwMFwiOiBcIuWQieWuieW4glwiLFxuXHQgICAgXCIzNjA4MDJcIjogXCLlkInlt57ljLpcIixcblx0ICAgIFwiMzYwODAzXCI6IFwi6Z2S5Y6f5Yy6XCIsXG5cdCAgICBcIjM2MDgyMVwiOiBcIuWQieWuieWOv1wiLFxuXHQgICAgXCIzNjA4MjJcIjogXCLlkInmsLTljr9cIixcblx0ICAgIFwiMzYwODIzXCI6IFwi5bOh5rGf5Y6/XCIsXG5cdCAgICBcIjM2MDgyNFwiOiBcIuaWsOW5suWOv1wiLFxuXHQgICAgXCIzNjA4MjVcIjogXCLmsLjkuLDljr9cIixcblx0ICAgIFwiMzYwODI2XCI6IFwi5rOw5ZKM5Y6/XCIsXG5cdCAgICBcIjM2MDgyN1wiOiBcIumBguW3neWOv1wiLFxuXHQgICAgXCIzNjA4MjhcIjogXCLkuIflronljr9cIixcblx0ICAgIFwiMzYwODI5XCI6IFwi5a6J56aP5Y6/XCIsXG5cdCAgICBcIjM2MDgzMFwiOiBcIuawuOaWsOWOv1wiLFxuXHQgICAgXCIzNjA4ODFcIjogXCLkupXlhojlsbHluIJcIixcblx0ICAgIFwiMzYwODgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjM2MDkwMFwiOiBcIuWunOaYpeW4glwiLFxuXHQgICAgXCIzNjA5MDJcIjogXCLoooHlt57ljLpcIixcblx0ICAgIFwiMzYwOTIxXCI6IFwi5aWJ5paw5Y6/XCIsXG5cdCAgICBcIjM2MDkyMlwiOiBcIuS4h+i9veWOv1wiLFxuXHQgICAgXCIzNjA5MjNcIjogXCLkuIrpq5jljr9cIixcblx0ICAgIFwiMzYwOTI0XCI6IFwi5a6c5Liw5Y6/XCIsXG5cdCAgICBcIjM2MDkyNVwiOiBcIumdluWuieWOv1wiLFxuXHQgICAgXCIzNjA5MjZcIjogXCLpk5zpvJPljr9cIixcblx0ICAgIFwiMzYwOTgxXCI6IFwi5Liw5Z+O5biCXCIsXG5cdCAgICBcIjM2MDk4MlwiOiBcIuaon+agkeW4glwiLFxuXHQgICAgXCIzNjA5ODNcIjogXCLpq5jlronluIJcIixcblx0ICAgIFwiMzYwOTg0XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjM2MTAwMFwiOiBcIuaKmuW3nuW4glwiLFxuXHQgICAgXCIzNjEwMDJcIjogXCLkuLTlt53ljLpcIixcblx0ICAgIFwiMzYxMDIxXCI6IFwi5Y2X5Z+O5Y6/XCIsXG5cdCAgICBcIjM2MTAyMlwiOiBcIum7juW3neWOv1wiLFxuXHQgICAgXCIzNjEwMjNcIjogXCLljZfkuLDljr9cIixcblx0ICAgIFwiMzYxMDI0XCI6IFwi5bSH5LuB5Y6/XCIsXG5cdCAgICBcIjM2MTAyNVwiOiBcIuS5kOWuieWOv1wiLFxuXHQgICAgXCIzNjEwMjZcIjogXCLlrpzpu4Tljr9cIixcblx0ICAgIFwiMzYxMDI3XCI6IFwi6YeR5rqq5Y6/XCIsXG5cdCAgICBcIjM2MTAyOFwiOiBcIui1hOa6quWOv1wiLFxuXHQgICAgXCIzNjEwMjlcIjogXCLkuJzkuaHljr9cIixcblx0ICAgIFwiMzYxMDMwXCI6IFwi5bm/5piM5Y6/XCIsXG5cdCAgICBcIjM2MTAzMVwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNjExMDBcIjogXCLkuIrppbbluIJcIixcblx0ICAgIFwiMzYxMTAyXCI6IFwi5L+h5bee5Yy6XCIsXG5cdCAgICBcIjM2MTEyMVwiOiBcIuS4iumltuWOv1wiLFxuXHQgICAgXCIzNjExMjJcIjogXCLlub/kuLDljr9cIixcblx0ICAgIFwiMzYxMTIzXCI6IFwi546J5bGx5Y6/XCIsXG5cdCAgICBcIjM2MTEyNFwiOiBcIumTheWxseWOv1wiLFxuXHQgICAgXCIzNjExMjVcIjogXCLmqKrls7Dljr9cIixcblx0ICAgIFwiMzYxMTI2XCI6IFwi5byL6Ziz5Y6/XCIsXG5cdCAgICBcIjM2MTEyN1wiOiBcIuS9meW5suWOv1wiLFxuXHQgICAgXCIzNjExMjhcIjogXCLphLHpmLPljr9cIixcblx0ICAgIFwiMzYxMTI5XCI6IFwi5LiH5bm05Y6/XCIsXG5cdCAgICBcIjM2MTEzMFwiOiBcIuWpuua6kOWOv1wiLFxuXHQgICAgXCIzNjExODFcIjogXCLlvrflhbTluIJcIixcblx0ICAgIFwiMzYxMTgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjM3MDAwMFwiOiBcIuWxseS4nOecgVwiLFxuXHQgICAgXCIzNzAxMDBcIjogXCLmtY7ljZfluIJcIixcblx0ICAgIFwiMzcwMTAyXCI6IFwi5Y6G5LiL5Yy6XCIsXG5cdCAgICBcIjM3MDEwM1wiOiBcIuW4guS4reWMulwiLFxuXHQgICAgXCIzNzAxMDRcIjogXCLmp5DojavljLpcIixcblx0ICAgIFwiMzcwMTA1XCI6IFwi5aSp5qGl5Yy6XCIsXG5cdCAgICBcIjM3MDExMlwiOiBcIuWOhuWfjuWMulwiLFxuXHQgICAgXCIzNzAxMTNcIjogXCLplb/muIXljLpcIixcblx0ICAgIFwiMzcwMTI0XCI6IFwi5bmz6Zi05Y6/XCIsXG5cdCAgICBcIjM3MDEyNVwiOiBcIua1jumYs+WOv1wiLFxuXHQgICAgXCIzNzAxMjZcIjogXCLllYbmsrPljr9cIixcblx0ICAgIFwiMzcwMTgxXCI6IFwi56ug5LiY5biCXCIsXG5cdCAgICBcIjM3MDE4MlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNzAyMDBcIjogXCLpnZLlspvluIJcIixcblx0ICAgIFwiMzcwMjAyXCI6IFwi5biC5Y2X5Yy6XCIsXG5cdCAgICBcIjM3MDIwM1wiOiBcIuW4guWMl+WMulwiLFxuXHQgICAgXCIzNzAyMTFcIjogXCLpu4TlspvljLpcIixcblx0ICAgIFwiMzcwMjEyXCI6IFwi5bSC5bGx5Yy6XCIsXG5cdCAgICBcIjM3MDIxM1wiOiBcIuadjuayp+WMulwiLFxuXHQgICAgXCIzNzAyMTRcIjogXCLln47pmLPljLpcIixcblx0ICAgIFwiMzcwMjgxXCI6IFwi6IO25bee5biCXCIsXG5cdCAgICBcIjM3MDI4MlwiOiBcIuWNs+WiqOW4glwiLFxuXHQgICAgXCIzNzAyODNcIjogXCLlubPluqbluIJcIixcblx0ICAgIFwiMzcwMjg1XCI6IFwi6I6x6KW/5biCXCIsXG5cdCAgICBcIjM3MDI4NlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNzAzMDBcIjogXCLmt4TljZrluIJcIixcblx0ICAgIFwiMzcwMzAyXCI6IFwi5reE5bed5Yy6XCIsXG5cdCAgICBcIjM3MDMwM1wiOiBcIuW8oOW6l+WMulwiLFxuXHQgICAgXCIzNzAzMDRcIjogXCLljZrlsbHljLpcIixcblx0ICAgIFwiMzcwMzA1XCI6IFwi5Li05reE5Yy6XCIsXG5cdCAgICBcIjM3MDMwNlwiOiBcIuWRqOadkeWMulwiLFxuXHQgICAgXCIzNzAzMjFcIjogXCLmoZPlj7Dljr9cIixcblx0ICAgIFwiMzcwMzIyXCI6IFwi6auY6Z2S5Y6/XCIsXG5cdCAgICBcIjM3MDMyM1wiOiBcIuaygua6kOWOv1wiLFxuXHQgICAgXCIzNzAzMjRcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMzcwNDAwXCI6IFwi5p6j5bqE5biCXCIsXG5cdCAgICBcIjM3MDQwMlwiOiBcIuW4guS4reWMulwiLFxuXHQgICAgXCIzNzA0MDNcIjogXCLolpvln47ljLpcIixcblx0ICAgIFwiMzcwNDA0XCI6IFwi5bOE5Z+O5Yy6XCIsXG5cdCAgICBcIjM3MDQwNVwiOiBcIuWPsOWEv+W6hOWMulwiLFxuXHQgICAgXCIzNzA0MDZcIjogXCLlsbHkuq3ljLpcIixcblx0ICAgIFwiMzcwNDgxXCI6IFwi5ruV5bee5biCXCIsXG5cdCAgICBcIjM3MDQ4MlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNzA1MDBcIjogXCLkuJzokKXluIJcIixcblx0ICAgIFwiMzcwNTAyXCI6IFwi5Lic6JCl5Yy6XCIsXG5cdCAgICBcIjM3MDUwM1wiOiBcIuays+WPo+WMulwiLFxuXHQgICAgXCIzNzA1MjFcIjogXCLlnqbliKnljr9cIixcblx0ICAgIFwiMzcwNTIyXCI6IFwi5Yip5rSl5Y6/XCIsXG5cdCAgICBcIjM3MDUyM1wiOiBcIuW5v+mltuWOv1wiLFxuXHQgICAgXCIzNzA1OTFcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMzcwNjAwXCI6IFwi54Of5Y+w5biCXCIsXG5cdCAgICBcIjM3MDYwMlwiOiBcIuiKnee9mOWMulwiLFxuXHQgICAgXCIzNzA2MTFcIjogXCLnpo/lsbHljLpcIixcblx0ICAgIFwiMzcwNjEyXCI6IFwi54mf5bmz5Yy6XCIsXG5cdCAgICBcIjM3MDYxM1wiOiBcIuiOseWxseWMulwiLFxuXHQgICAgXCIzNzA2MzRcIjogXCLplb/lspvljr9cIixcblx0ICAgIFwiMzcwNjgxXCI6IFwi6b6Z5Y+j5biCXCIsXG5cdCAgICBcIjM3MDY4MlwiOiBcIuiOsemYs+W4glwiLFxuXHQgICAgXCIzNzA2ODNcIjogXCLojrHlt57luIJcIixcblx0ICAgIFwiMzcwNjg0XCI6IFwi6JOs6I6x5biCXCIsXG5cdCAgICBcIjM3MDY4NVwiOiBcIuaLm+i/nOW4glwiLFxuXHQgICAgXCIzNzA2ODZcIjogXCLmoJbpnJ7luIJcIixcblx0ICAgIFwiMzcwNjg3XCI6IFwi5rW36Ziz5biCXCIsXG5cdCAgICBcIjM3MDY4OFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNzA3MDBcIjogXCLmvY3lnYrluIJcIixcblx0ICAgIFwiMzcwNzAyXCI6IFwi5r2N5Z+O5Yy6XCIsXG5cdCAgICBcIjM3MDcwM1wiOiBcIuWvkuS6reWMulwiLFxuXHQgICAgXCIzNzA3MDRcIjogXCLlnYrlrZDljLpcIixcblx0ICAgIFwiMzcwNzA1XCI6IFwi5aWO5paH5Yy6XCIsXG5cdCAgICBcIjM3MDcyNFwiOiBcIuS4tOackOWOv1wiLFxuXHQgICAgXCIzNzA3MjVcIjogXCLmmIzkuZDljr9cIixcblx0ICAgIFwiMzcwNzgxXCI6IFwi6Z2S5bee5biCXCIsXG5cdCAgICBcIjM3MDc4MlwiOiBcIuivuOWfjuW4glwiLFxuXHQgICAgXCIzNzA3ODNcIjogXCLlr7/lhYnluIJcIixcblx0ICAgIFwiMzcwNzg0XCI6IFwi5a6J5LiY5biCXCIsXG5cdCAgICBcIjM3MDc4NVwiOiBcIumrmOWvhuW4glwiLFxuXHQgICAgXCIzNzA3ODZcIjogXCLmmIzpgpHluIJcIixcblx0ICAgIFwiMzcwNzg3XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjM3MDgwMFwiOiBcIua1juWugeW4glwiLFxuXHQgICAgXCIzNzA4MDJcIjogXCLluILkuK3ljLpcIixcblx0ICAgIFwiMzcwODExXCI6IFwi5Lu75Z+O5Yy6XCIsXG5cdCAgICBcIjM3MDgyNlwiOiBcIuW+ruWxseWOv1wiLFxuXHQgICAgXCIzNzA4MjdcIjogXCLpsbzlj7Dljr9cIixcblx0ICAgIFwiMzcwODI4XCI6IFwi6YeR5Lmh5Y6/XCIsXG5cdCAgICBcIjM3MDgyOVwiOiBcIuWYieelpeWOv1wiLFxuXHQgICAgXCIzNzA4MzBcIjogXCLmsbbkuIrljr9cIixcblx0ICAgIFwiMzcwODMxXCI6IFwi5rOX5rC05Y6/XCIsXG5cdCAgICBcIjM3MDgzMlwiOiBcIuaigeWxseWOv1wiLFxuXHQgICAgXCIzNzA4ODFcIjogXCLmm7LpmJzluIJcIixcblx0ICAgIFwiMzcwODgyXCI6IFwi5YWW5bee5biCXCIsXG5cdCAgICBcIjM3MDg4M1wiOiBcIumCueWfjuW4glwiLFxuXHQgICAgXCIzNzA4ODRcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMzcwOTAwXCI6IFwi5rOw5a6J5biCXCIsXG5cdCAgICBcIjM3MDkwMlwiOiBcIuazsOWxseWMulwiLFxuXHQgICAgXCIzNzA5MDNcIjogXCLlsrHlsrPljLpcIixcblx0ICAgIFwiMzcwOTIxXCI6IFwi5a6B6Ziz5Y6/XCIsXG5cdCAgICBcIjM3MDkyM1wiOiBcIuS4nOW5s+WOv1wiLFxuXHQgICAgXCIzNzA5ODJcIjogXCLmlrDms7DluIJcIixcblx0ICAgIFwiMzcwOTgzXCI6IFwi6IKl5Z+O5biCXCIsXG5cdCAgICBcIjM3MDk4NFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNzEwMDBcIjogXCLlqIHmtbfluIJcIixcblx0ICAgIFwiMzcxMDAyXCI6IFwi546v57+g5Yy6XCIsXG5cdCAgICBcIjM3MTA4MVwiOiBcIuaWh+eZu+W4glwiLFxuXHQgICAgXCIzNzEwODJcIjogXCLojaPmiJDluIJcIixcblx0ICAgIFwiMzcxMDgzXCI6IFwi5Lmz5bGx5biCXCIsXG5cdCAgICBcIjM3MTA4NFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNzExMDBcIjogXCLml6XnhafluIJcIixcblx0ICAgIFwiMzcxMTAyXCI6IFwi5Lic5riv5Yy6XCIsXG5cdCAgICBcIjM3MTEwM1wiOiBcIuWymuWxseWMulwiLFxuXHQgICAgXCIzNzExMjFcIjogXCLkupTojrLljr9cIixcblx0ICAgIFwiMzcxMTIyXCI6IFwi6I6S5Y6/XCIsXG5cdCAgICBcIjM3MTEyM1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNzEyMDBcIjogXCLojrHoipzluIJcIixcblx0ICAgIFwiMzcxMjAyXCI6IFwi6I6x5Z+O5Yy6XCIsXG5cdCAgICBcIjM3MTIwM1wiOiBcIumSouWfjuWMulwiLFxuXHQgICAgXCIzNzEyMDRcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMzcxMzAwXCI6IFwi5Li05rKC5biCXCIsXG5cdCAgICBcIjM3MTMwMlwiOiBcIuWFsOWxseWMulwiLFxuXHQgICAgXCIzNzEzMTFcIjogXCLnvZfluoTljLpcIixcblx0ICAgIFwiMzcxMzEyXCI6IFwi5rKz5Lic5Yy6XCIsXG5cdCAgICBcIjM3MTMyMVwiOiBcIuayguWNl+WOv1wiLFxuXHQgICAgXCIzNzEzMjJcIjogXCLpg6/ln47ljr9cIixcblx0ICAgIFwiMzcxMzIzXCI6IFwi5rKC5rC05Y6/XCIsXG5cdCAgICBcIjM3MTMyNFwiOiBcIuiLjeWxseWOv1wiLFxuXHQgICAgXCIzNzEzMjVcIjogXCLotLnljr9cIixcblx0ICAgIFwiMzcxMzI2XCI6IFwi5bmz6YKR5Y6/XCIsXG5cdCAgICBcIjM3MTMyN1wiOiBcIuiOkuWNl+WOv1wiLFxuXHQgICAgXCIzNzEzMjhcIjogXCLokpnpmLTljr9cIixcblx0ICAgIFwiMzcxMzI5XCI6IFwi5Li05rKt5Y6/XCIsXG5cdCAgICBcIjM3MTMzMFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCIzNzE0MDBcIjogXCLlvrflt57luIJcIixcblx0ICAgIFwiMzcxNDAyXCI6IFwi5b635Z+O5Yy6XCIsXG5cdCAgICBcIjM3MTQyMVwiOiBcIumZteWOv1wiLFxuXHQgICAgXCIzNzE0MjJcIjogXCLlroHmtKXljr9cIixcblx0ICAgIFwiMzcxNDIzXCI6IFwi5bqG5LqR5Y6/XCIsXG5cdCAgICBcIjM3MTQyNFwiOiBcIuS4tOmCkeWOv1wiLFxuXHQgICAgXCIzNzE0MjVcIjogXCLpvZDmsrPljr9cIixcblx0ICAgIFwiMzcxNDI2XCI6IFwi5bmz5Y6f5Y6/XCIsXG5cdCAgICBcIjM3MTQyN1wiOiBcIuWkj+a0peWOv1wiLFxuXHQgICAgXCIzNzE0MjhcIjogXCLmrabln47ljr9cIixcblx0ICAgIFwiMzcxNDgxXCI6IFwi5LmQ6Zm15biCXCIsXG5cdCAgICBcIjM3MTQ4MlwiOiBcIuemueWfjuW4glwiLFxuXHQgICAgXCIzNzE0ODNcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiMzcxNTAwXCI6IFwi6IGK5Z+O5biCXCIsXG5cdCAgICBcIjM3MTUwMlwiOiBcIuS4nOaYjOW6nOWMulwiLFxuXHQgICAgXCIzNzE1MjFcIjogXCLpmLPosLfljr9cIixcblx0ICAgIFwiMzcxNTIyXCI6IFwi6I6Y5Y6/XCIsXG5cdCAgICBcIjM3MTUyM1wiOiBcIuiMjOW5s+WOv1wiLFxuXHQgICAgXCIzNzE1MjRcIjogXCLkuJzpmL/ljr9cIixcblx0ICAgIFwiMzcxNTI1XCI6IFwi5Yag5Y6/XCIsXG5cdCAgICBcIjM3MTUyNlwiOiBcIumrmOWUkOWOv1wiLFxuXHQgICAgXCIzNzE1ODFcIjogXCLkuLTmuIXluIJcIixcblx0ICAgIFwiMzcxNTgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjM3MTYwMFwiOiBcIua7qOW3nuW4glwiLFxuXHQgICAgXCIzNzE2MDJcIjogXCLmu6jln47ljLpcIixcblx0ICAgIFwiMzcxNjIxXCI6IFwi5oOg5rCR5Y6/XCIsXG5cdCAgICBcIjM3MTYyMlwiOiBcIumYs+S/oeWOv1wiLFxuXHQgICAgXCIzNzE2MjNcIjogXCLml6Dmo6Pljr9cIixcblx0ICAgIFwiMzcxNjI0XCI6IFwi5rK+5YyW5Y6/XCIsXG5cdCAgICBcIjM3MTYyNVwiOiBcIuWNmuWFtOWOv1wiLFxuXHQgICAgXCIzNzE2MjZcIjogXCLpgrnlubPljr9cIixcblx0ICAgIFwiMzcxNjI3XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjM3MTcwMFwiOiBcIuiPj+azveW4glwiLFxuXHQgICAgXCIzNzE3MDJcIjogXCLniaHkuLnljLpcIixcblx0ICAgIFwiMzcxNzIxXCI6IFwi5pu55Y6/XCIsXG5cdCAgICBcIjM3MTcyMlwiOiBcIuWNleWOv1wiLFxuXHQgICAgXCIzNzE3MjNcIjogXCLmiJDmrabljr9cIixcblx0ICAgIFwiMzcxNzI0XCI6IFwi5beo6YeO5Y6/XCIsXG5cdCAgICBcIjM3MTcyNVwiOiBcIumDk+WfjuWOv1wiLFxuXHQgICAgXCIzNzE3MjZcIjogXCLphITln47ljr9cIixcblx0ICAgIFwiMzcxNzI3XCI6IFwi5a6a6Zm25Y6/XCIsXG5cdCAgICBcIjM3MTcyOFwiOiBcIuS4nOaYjuWOv1wiLFxuXHQgICAgXCIzNzE3MjlcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDEwMDAwXCI6IFwi5rKz5Y2X55yBXCIsXG5cdCAgICBcIjQxMDEwMFwiOiBcIumDkeW3nuW4glwiLFxuXHQgICAgXCI0MTAxMDJcIjogXCLkuK3ljp/ljLpcIixcblx0ICAgIFwiNDEwMTAzXCI6IFwi5LqM5LiD5Yy6XCIsXG5cdCAgICBcIjQxMDEwNFwiOiBcIueuoeWfjuWbnuaXj+WMulwiLFxuXHQgICAgXCI0MTAxMDVcIjogXCLph5HmsLTljLpcIixcblx0ICAgIFwiNDEwMTA2XCI6IFwi5LiK6KGX5Yy6XCIsXG5cdCAgICBcIjQxMDEwOFwiOiBcIuaDoOa1juWMulwiLFxuXHQgICAgXCI0MTAxMjJcIjogXCLkuK3niZ/ljr9cIixcblx0ICAgIFwiNDEwMTgxXCI6IFwi5bep5LmJ5biCXCIsXG5cdCAgICBcIjQxMDE4MlwiOiBcIuiNpemYs+W4glwiLFxuXHQgICAgXCI0MTAxODNcIjogXCLmlrDlr4bluIJcIixcblx0ICAgIFwiNDEwMTg0XCI6IFwi5paw6YOR5biCXCIsXG5cdCAgICBcIjQxMDE4NVwiOiBcIueZu+WwgeW4glwiLFxuXHQgICAgXCI0MTAxODhcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDEwMjAwXCI6IFwi5byA5bCB5biCXCIsXG5cdCAgICBcIjQxMDIwMlwiOiBcIum+meS6reWMulwiLFxuXHQgICAgXCI0MTAyMDNcIjogXCLpobrmsrPlm57ml4/ljLpcIixcblx0ICAgIFwiNDEwMjA0XCI6IFwi6byT5qW85Yy6XCIsXG5cdCAgICBcIjQxMDIwNVwiOiBcIuemueeOi+WPsOWMulwiLFxuXHQgICAgXCI0MTAyMTFcIjogXCLph5HmmI7ljLpcIixcblx0ICAgIFwiNDEwMjIxXCI6IFwi5p2e5Y6/XCIsXG5cdCAgICBcIjQxMDIyMlwiOiBcIumAmuiuuOWOv1wiLFxuXHQgICAgXCI0MTAyMjNcIjogXCLlsInmsI/ljr9cIixcblx0ICAgIFwiNDEwMjI0XCI6IFwi5byA5bCB5Y6/XCIsXG5cdCAgICBcIjQxMDIyNVwiOiBcIuWFsOiAg+WOv1wiLFxuXHQgICAgXCI0MTAyMjZcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDEwMzAwXCI6IFwi5rSb6Ziz5biCXCIsXG5cdCAgICBcIjQxMDMwMlwiOiBcIuiAgeWfjuWMulwiLFxuXHQgICAgXCI0MTAzMDNcIjogXCLopb/lt6XljLpcIixcblx0ICAgIFwiNDEwMzA0XCI6IFwi54CN5rKz5Zue5peP5Yy6XCIsXG5cdCAgICBcIjQxMDMwNVwiOiBcIua2p+ilv+WMulwiLFxuXHQgICAgXCI0MTAzMDZcIjogXCLlkInliKnljLpcIixcblx0ICAgIFwiNDEwMzA3XCI6IFwi5rSb6b6Z5Yy6XCIsXG5cdCAgICBcIjQxMDMyMlwiOiBcIuWtn+a0peWOv1wiLFxuXHQgICAgXCI0MTAzMjNcIjogXCLmlrDlronljr9cIixcblx0ICAgIFwiNDEwMzI0XCI6IFwi5qC+5bed5Y6/XCIsXG5cdCAgICBcIjQxMDMyNVwiOiBcIuW1qeWOv1wiLFxuXHQgICAgXCI0MTAzMjZcIjogXCLmsZ3pmLPljr9cIixcblx0ICAgIFwiNDEwMzI3XCI6IFwi5a6c6Ziz5Y6/XCIsXG5cdCAgICBcIjQxMDMyOFwiOiBcIua0m+WugeWOv1wiLFxuXHQgICAgXCI0MTAzMjlcIjogXCLkvIrlt53ljr9cIixcblx0ICAgIFwiNDEwMzgxXCI6IFwi5YGD5biI5biCXCIsXG5cdCAgICBcIjQxMDQwMFwiOiBcIuW5s+mhtuWxseW4glwiLFxuXHQgICAgXCI0MTA0MDJcIjogXCLmlrDljY7ljLpcIixcblx0ICAgIFwiNDEwNDAzXCI6IFwi5Y2r5Lic5Yy6XCIsXG5cdCAgICBcIjQxMDQwNFwiOiBcIuefs+m+meWMulwiLFxuXHQgICAgXCI0MTA0MTFcIjogXCLmuZvmsrPljLpcIixcblx0ICAgIFwiNDEwNDIxXCI6IFwi5a6d5Liw5Y6/XCIsXG5cdCAgICBcIjQxMDQyMlwiOiBcIuWPtuWOv1wiLFxuXHQgICAgXCI0MTA0MjNcIjogXCLpsoHlsbHljr9cIixcblx0ICAgIFwiNDEwNDI1XCI6IFwi6YOP5Y6/XCIsXG5cdCAgICBcIjQxMDQ4MVwiOiBcIuiInumSouW4glwiLFxuXHQgICAgXCI0MTA0ODJcIjogXCLmsZ3lt57luIJcIixcblx0ICAgIFwiNDEwNDgzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQxMDUwMFwiOiBcIuWuiemYs+W4glwiLFxuXHQgICAgXCI0MTA1MDJcIjogXCLmlofls7DljLpcIixcblx0ICAgIFwiNDEwNTAzXCI6IFwi5YyX5YWz5Yy6XCIsXG5cdCAgICBcIjQxMDUwNVwiOiBcIuaut+mDveWMulwiLFxuXHQgICAgXCI0MTA1MDZcIjogXCLpvpnlronljLpcIixcblx0ICAgIFwiNDEwNTIyXCI6IFwi5a6J6Ziz5Y6/XCIsXG5cdCAgICBcIjQxMDUyM1wiOiBcIuaxpOmYtOWOv1wiLFxuXHQgICAgXCI0MTA1MjZcIjogXCLmu5Hljr9cIixcblx0ICAgIFwiNDEwNTI3XCI6IFwi5YaF6buE5Y6/XCIsXG5cdCAgICBcIjQxMDU4MVwiOiBcIuael+W3nuW4glwiLFxuXHQgICAgXCI0MTA1ODJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDEwNjAwXCI6IFwi6bmk5aOB5biCXCIsXG5cdCAgICBcIjQxMDYwMlwiOiBcIum5pOWxseWMulwiLFxuXHQgICAgXCI0MTA2MDNcIjogXCLlsbHln47ljLpcIixcblx0ICAgIFwiNDEwNjExXCI6IFwi5reH5ruo5Yy6XCIsXG5cdCAgICBcIjQxMDYyMVwiOiBcIua1muWOv1wiLFxuXHQgICAgXCI0MTA2MjJcIjogXCLmt4fljr9cIixcblx0ICAgIFwiNDEwNjIzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQxMDcwMFwiOiBcIuaWsOS5oeW4glwiLFxuXHQgICAgXCI0MTA3MDJcIjogXCLnuqLml5fljLpcIixcblx0ICAgIFwiNDEwNzAzXCI6IFwi5Y2r5ruo5Yy6XCIsXG5cdCAgICBcIjQxMDcwNFwiOiBcIuWHpOazieWMulwiLFxuXHQgICAgXCI0MTA3MTFcIjogXCLniafph47ljLpcIixcblx0ICAgIFwiNDEwNzIxXCI6IFwi5paw5Lmh5Y6/XCIsXG5cdCAgICBcIjQxMDcyNFwiOiBcIuiOt+WYieWOv1wiLFxuXHQgICAgXCI0MTA3MjVcIjogXCLljp/pmLPljr9cIixcblx0ICAgIFwiNDEwNzI2XCI6IFwi5bu25rSl5Y6/XCIsXG5cdCAgICBcIjQxMDcyN1wiOiBcIuWwgeS4mOWOv1wiLFxuXHQgICAgXCI0MTA3MjhcIjogXCLplb/lnqPljr9cIixcblx0ICAgIFwiNDEwNzgxXCI6IFwi5Y2r6L6J5biCXCIsXG5cdCAgICBcIjQxMDc4MlwiOiBcIui+ieWOv+W4glwiLFxuXHQgICAgXCI0MTA3ODNcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDEwODAwXCI6IFwi54Sm5L2c5biCXCIsXG5cdCAgICBcIjQxMDgwMlwiOiBcIuino+aUvuWMulwiLFxuXHQgICAgXCI0MTA4MDNcIjogXCLkuK3nq5nljLpcIixcblx0ICAgIFwiNDEwODA0XCI6IFwi6ams5p2R5Yy6XCIsXG5cdCAgICBcIjQxMDgxMVwiOiBcIuWxsemYs+WMulwiLFxuXHQgICAgXCI0MTA4MjFcIjogXCLkv67mrabljr9cIixcblx0ICAgIFwiNDEwODIyXCI6IFwi5Y2a54ix5Y6/XCIsXG5cdCAgICBcIjQxMDgyM1wiOiBcIuatpumZn+WOv1wiLFxuXHQgICAgXCI0MTA4MjVcIjogXCLmuKnljr9cIixcblx0ICAgIFwiNDEwODgxXCI6IFwi5rWO5rqQ5biCXCIsXG5cdCAgICBcIjQxMDg4MlwiOiBcIuaygemYs+W4glwiLFxuXHQgICAgXCI0MTA4ODNcIjogXCLlrZ/lt57luIJcIixcblx0ICAgIFwiNDEwODg0XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQxMDkwMFwiOiBcIua/rumYs+W4glwiLFxuXHQgICAgXCI0MTA5MDJcIjogXCLljY7pvpnljLpcIixcblx0ICAgIFwiNDEwOTIyXCI6IFwi5riF5Liw5Y6/XCIsXG5cdCAgICBcIjQxMDkyM1wiOiBcIuWNl+S5kOWOv1wiLFxuXHQgICAgXCI0MTA5MjZcIjogXCLojIPljr9cIixcblx0ICAgIFwiNDEwOTI3XCI6IFwi5Y+w5YmN5Y6/XCIsXG5cdCAgICBcIjQxMDkyOFwiOiBcIua/rumYs+WOv1wiLFxuXHQgICAgXCI0MTA5MjlcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDExMDAwXCI6IFwi6K645piM5biCXCIsXG5cdCAgICBcIjQxMTAwMlwiOiBcIumtj+mDveWMulwiLFxuXHQgICAgXCI0MTEwMjNcIjogXCLorrjmmIzljr9cIixcblx0ICAgIFwiNDExMDI0XCI6IFwi6YSi6Zm15Y6/XCIsXG5cdCAgICBcIjQxMTAyNVwiOiBcIuilhOWfjuWOv1wiLFxuXHQgICAgXCI0MTEwODFcIjogXCLnprnlt57luIJcIixcblx0ICAgIFwiNDExMDgyXCI6IFwi6ZW/6JGb5biCXCIsXG5cdCAgICBcIjQxMTA4M1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI0MTExMDBcIjogXCLmvK/msrPluIJcIixcblx0ICAgIFwiNDExMTAyXCI6IFwi5rqQ5rGH5Yy6XCIsXG5cdCAgICBcIjQxMTEwM1wiOiBcIumDvuWfjuWMulwiLFxuXHQgICAgXCI0MTExMDRcIjogXCLlj6zpmbXljLpcIixcblx0ICAgIFwiNDExMTIxXCI6IFwi6Iie6Ziz5Y6/XCIsXG5cdCAgICBcIjQxMTEyMlwiOiBcIuS4tOmijeWOv1wiLFxuXHQgICAgXCI0MTExMjNcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDExMjAwXCI6IFwi5LiJ6Zeo5bOh5biCXCIsXG5cdCAgICBcIjQxMTIwMlwiOiBcIua5lua7qOWMulwiLFxuXHQgICAgXCI0MTEyMjFcIjogXCLmuJHmsaDljr9cIixcblx0ICAgIFwiNDExMjIyXCI6IFwi6ZmV5Y6/XCIsXG5cdCAgICBcIjQxMTIyNFwiOiBcIuWNouawj+WOv1wiLFxuXHQgICAgXCI0MTEyODFcIjogXCLkuYnpqazluIJcIixcblx0ICAgIFwiNDExMjgyXCI6IFwi54G15a6d5biCXCIsXG5cdCAgICBcIjQxMTI4M1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI0MTEzMDBcIjogXCLljZfpmLPluIJcIixcblx0ICAgIFwiNDExMzAyXCI6IFwi5a6b5Z+O5Yy6XCIsXG5cdCAgICBcIjQxMTMwM1wiOiBcIuWNp+m+meWMulwiLFxuXHQgICAgXCI0MTEzMjFcIjogXCLljZflj6zljr9cIixcblx0ICAgIFwiNDExMzIyXCI6IFwi5pa55Z+O5Y6/XCIsXG5cdCAgICBcIjQxMTMyM1wiOiBcIuilv+WzoeWOv1wiLFxuXHQgICAgXCI0MTEzMjRcIjogXCLplYflubPljr9cIixcblx0ICAgIFwiNDExMzI1XCI6IFwi5YaF5Lmh5Y6/XCIsXG5cdCAgICBcIjQxMTMyNlwiOiBcIua3heW3neWOv1wiLFxuXHQgICAgXCI0MTEzMjdcIjogXCLnpL7ml5fljr9cIixcblx0ICAgIFwiNDExMzI4XCI6IFwi5ZSQ5rKz5Y6/XCIsXG5cdCAgICBcIjQxMTMyOVwiOiBcIuaWsOmHjuWOv1wiLFxuXHQgICAgXCI0MTEzMzBcIjogXCLmoZDmn4/ljr9cIixcblx0ICAgIFwiNDExMzgxXCI6IFwi6YKT5bee5biCXCIsXG5cdCAgICBcIjQxMTM4MlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI0MTE0MDBcIjogXCLllYbkuJjluIJcIixcblx0ICAgIFwiNDExNDAyXCI6IFwi5qKB5Zut5Yy6XCIsXG5cdCAgICBcIjQxMTQwM1wiOiBcIuedoumYs+WMulwiLFxuXHQgICAgXCI0MTE0MjFcIjogXCLmsJHmnYPljr9cIixcblx0ICAgIFwiNDExNDIyXCI6IFwi552i5Y6/XCIsXG5cdCAgICBcIjQxMTQyM1wiOiBcIuWugemZteWOv1wiLFxuXHQgICAgXCI0MTE0MjRcIjogXCLmn5jln47ljr9cIixcblx0ICAgIFwiNDExNDI1XCI6IFwi6Jme5Z+O5Y6/XCIsXG5cdCAgICBcIjQxMTQyNlwiOiBcIuWkj+mCkeWOv1wiLFxuXHQgICAgXCI0MTE0ODFcIjogXCLmsLjln47luIJcIixcblx0ICAgIFwiNDExNDgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQxMTUwMFwiOiBcIuS/oemYs+W4glwiLFxuXHQgICAgXCI0MTE1MDJcIjogXCLmtYnmsrPljLpcIixcblx0ICAgIFwiNDExNTAzXCI6IFwi5bmz5qGl5Yy6XCIsXG5cdCAgICBcIjQxMTUyMVwiOiBcIue9l+WxseWOv1wiLFxuXHQgICAgXCI0MTE1MjJcIjogXCLlhYnlsbHljr9cIixcblx0ICAgIFwiNDExNTIzXCI6IFwi5paw5Y6/XCIsXG5cdCAgICBcIjQxMTUyNFwiOiBcIuWVhuWfjuWOv1wiLFxuXHQgICAgXCI0MTE1MjVcIjogXCLlm7rlp4vljr9cIixcblx0ICAgIFwiNDExNTI2XCI6IFwi5r2i5bed5Y6/XCIsXG5cdCAgICBcIjQxMTUyN1wiOiBcIua3rua7qOWOv1wiLFxuXHQgICAgXCI0MTE1MjhcIjogXCLmga/ljr9cIixcblx0ICAgIFwiNDExNTI5XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQxMTYwMFwiOiBcIuWRqOWPo+W4glwiLFxuXHQgICAgXCI0MTE2MDJcIjogXCLlt53msYfljLpcIixcblx0ICAgIFwiNDExNjIxXCI6IFwi5om25rKf5Y6/XCIsXG5cdCAgICBcIjQxMTYyMlwiOiBcIuilv+WNjuWOv1wiLFxuXHQgICAgXCI0MTE2MjNcIjogXCLllYbmsLTljr9cIixcblx0ICAgIFwiNDExNjI0XCI6IFwi5rKI5LiY5Y6/XCIsXG5cdCAgICBcIjQxMTYyNVwiOiBcIumDuOWfjuWOv1wiLFxuXHQgICAgXCI0MTE2MjZcIjogXCLmt67pmLPljr9cIixcblx0ICAgIFwiNDExNjI3XCI6IFwi5aSq5bq35Y6/XCIsXG5cdCAgICBcIjQxMTYyOFwiOiBcIum5v+mCkeWOv1wiLFxuXHQgICAgXCI0MTE2ODFcIjogXCLpobnln47luIJcIixcblx0ICAgIFwiNDExNjgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQxMTcwMFwiOiBcIumpu+mprOW6l+W4glwiLFxuXHQgICAgXCI0MTE3MDJcIjogXCLpqb/ln47ljLpcIixcblx0ICAgIFwiNDExNzIxXCI6IFwi6KW/5bmz5Y6/XCIsXG5cdCAgICBcIjQxMTcyMlwiOiBcIuS4iuiUoeWOv1wiLFxuXHQgICAgXCI0MTE3MjNcIjogXCLlubPoiIbljr9cIixcblx0ICAgIFwiNDExNzI0XCI6IFwi5q2j6Ziz5Y6/XCIsXG5cdCAgICBcIjQxMTcyNVwiOiBcIuehruWxseWOv1wiLFxuXHQgICAgXCI0MTE3MjZcIjogXCLms4zpmLPljr9cIixcblx0ICAgIFwiNDExNzI3XCI6IFwi5rGd5Y2X5Y6/XCIsXG5cdCAgICBcIjQxMTcyOFwiOiBcIumBguW5s+WOv1wiLFxuXHQgICAgXCI0MTE3MjlcIjogXCLmlrDolKHljr9cIixcblx0ICAgIFwiNDExNzMwXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQyMDAwMFwiOiBcIua5luWMl+ecgVwiLFxuXHQgICAgXCI0MjAxMDBcIjogXCLmrabmsYnluIJcIixcblx0ICAgIFwiNDIwMTAyXCI6IFwi5rGf5bK45Yy6XCIsXG5cdCAgICBcIjQyMDEwM1wiOiBcIuaxn+axieWMulwiLFxuXHQgICAgXCI0MjAxMDRcIjogXCLnoZrlj6PljLpcIixcblx0ICAgIFwiNDIwMTA1XCI6IFwi5rGJ6Ziz5Yy6XCIsXG5cdCAgICBcIjQyMDEwNlwiOiBcIuatpuaYjOWMulwiLFxuXHQgICAgXCI0MjAxMDdcIjogXCLpnZLlsbHljLpcIixcblx0ICAgIFwiNDIwMTExXCI6IFwi5rSq5bGx5Yy6XCIsXG5cdCAgICBcIjQyMDExMlwiOiBcIuS4nOilv+a5luWMulwiLFxuXHQgICAgXCI0MjAxMTNcIjogXCLmsYnljZfljLpcIixcblx0ICAgIFwiNDIwMTE0XCI6IFwi6JSh55S45Yy6XCIsXG5cdCAgICBcIjQyMDExNVwiOiBcIuaxn+Wkj+WMulwiLFxuXHQgICAgXCI0MjAxMTZcIjogXCLpu4TpmYLljLpcIixcblx0ICAgIFwiNDIwMTE3XCI6IFwi5paw5rSy5Yy6XCIsXG5cdCAgICBcIjQyMDExOFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI0MjAyMDBcIjogXCLpu4Tnn7PluIJcIixcblx0ICAgIFwiNDIwMjAyXCI6IFwi6buE55+z5riv5Yy6XCIsXG5cdCAgICBcIjQyMDIwM1wiOiBcIuilv+WhnuWxseWMulwiLFxuXHQgICAgXCI0MjAyMDRcIjogXCLkuIvpmYbljLpcIixcblx0ICAgIFwiNDIwMjA1XCI6IFwi6ZOB5bGx5Yy6XCIsXG5cdCAgICBcIjQyMDIyMlwiOiBcIumYs+aWsOWOv1wiLFxuXHQgICAgXCI0MjAyODFcIjogXCLlpKflhrbluIJcIixcblx0ICAgIFwiNDIwMjgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQyMDMwMFwiOiBcIuWNgeWgsOW4glwiLFxuXHQgICAgXCI0MjAzMDJcIjogXCLojIXnrq3ljLpcIixcblx0ICAgIFwiNDIwMzAzXCI6IFwi5byg5rm+5Yy6XCIsXG5cdCAgICBcIjQyMDMyMVwiOiBcIumDp+WOv1wiLFxuXHQgICAgXCI0MjAzMjJcIjogXCLpg6fopb/ljr9cIixcblx0ICAgIFwiNDIwMzIzXCI6IFwi56u55bGx5Y6/XCIsXG5cdCAgICBcIjQyMDMyNFwiOiBcIueruea6quWOv1wiLFxuXHQgICAgXCI0MjAzMjVcIjogXCLmiL/ljr9cIixcblx0ICAgIFwiNDIwMzgxXCI6IFwi5Li55rGf5Y+j5biCXCIsXG5cdCAgICBcIjQyMDM4M1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI0MjA1MDBcIjogXCLlrpzmmIzluIJcIixcblx0ICAgIFwiNDIwNTAyXCI6IFwi6KW/6Zm15Yy6XCIsXG5cdCAgICBcIjQyMDUwM1wiOiBcIuS8jeWutuWyl+WMulwiLFxuXHQgICAgXCI0MjA1MDRcIjogXCLngrnlhpvljLpcIixcblx0ICAgIFwiNDIwNTA1XCI6IFwi54yH5Lqt5Yy6XCIsXG5cdCAgICBcIjQyMDUwNlwiOiBcIuWkt+mZteWMulwiLFxuXHQgICAgXCI0MjA1MjVcIjogXCLov5zlronljr9cIixcblx0ICAgIFwiNDIwNTI2XCI6IFwi5YW05bGx5Y6/XCIsXG5cdCAgICBcIjQyMDUyN1wiOiBcIuenreW9kuWOv1wiLFxuXHQgICAgXCI0MjA1MjhcIjogXCLplb/pmLPlnJ/lrrbml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNDIwNTI5XCI6IFwi5LqU5bOw5Zyf5a625peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjQyMDU4MVwiOiBcIuWunOmDveW4glwiLFxuXHQgICAgXCI0MjA1ODJcIjogXCLlvZPpmLPluIJcIixcblx0ICAgIFwiNDIwNTgzXCI6IFwi5p6d5rGf5biCXCIsXG5cdCAgICBcIjQyMDU4NFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI0MjA2MDBcIjogXCLopYTpmLPluIJcIixcblx0ICAgIFwiNDIwNjAyXCI6IFwi6KWE5Z+O5Yy6XCIsXG5cdCAgICBcIjQyMDYwNlwiOiBcIuaoiuWfjuWMulwiLFxuXHQgICAgXCI0MjA2MDdcIjogXCLopYTlt57ljLpcIixcblx0ICAgIFwiNDIwNjI0XCI6IFwi5Y2X5ryz5Y6/XCIsXG5cdCAgICBcIjQyMDYyNVwiOiBcIuiwt+WfjuWOv1wiLFxuXHQgICAgXCI0MjA2MjZcIjogXCLkv53lurfljr9cIixcblx0ICAgIFwiNDIwNjgyXCI6IFwi6ICB5rKz5Y+j5biCXCIsXG5cdCAgICBcIjQyMDY4M1wiOiBcIuaeo+mYs+W4glwiLFxuXHQgICAgXCI0MjA2ODRcIjogXCLlrpzln47luIJcIixcblx0ICAgIFwiNDIwNjg1XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQyMDcwMFwiOiBcIumEguW3nuW4glwiLFxuXHQgICAgXCI0MjA3MDJcIjogXCLmooHlrZDmuZbljLpcIixcblx0ICAgIFwiNDIwNzAzXCI6IFwi5Y2O5a655Yy6XCIsXG5cdCAgICBcIjQyMDcwNFwiOiBcIumEguWfjuWMulwiLFxuXHQgICAgXCI0MjA3MDVcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDIwODAwXCI6IFwi6I2G6Zeo5biCXCIsXG5cdCAgICBcIjQyMDgwMlwiOiBcIuS4nOWuneWMulwiLFxuXHQgICAgXCI0MjA4MDRcIjogXCLmjofliIDljLpcIixcblx0ICAgIFwiNDIwODIxXCI6IFwi5Lqs5bGx5Y6/XCIsXG5cdCAgICBcIjQyMDgyMlwiOiBcIuaymea0i+WOv1wiLFxuXHQgICAgXCI0MjA4ODFcIjogXCLpkp/npaXluIJcIixcblx0ICAgIFwiNDIwODgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQyMDkwMFwiOiBcIuWtneaEn+W4glwiLFxuXHQgICAgXCI0MjA5MDJcIjogXCLlrZ3ljZfljLpcIixcblx0ICAgIFwiNDIwOTIxXCI6IFwi5a2d5piM5Y6/XCIsXG5cdCAgICBcIjQyMDkyMlwiOiBcIuWkp+aCn+WOv1wiLFxuXHQgICAgXCI0MjA5MjNcIjogXCLkupHmoqbljr9cIixcblx0ICAgIFwiNDIwOTgxXCI6IFwi5bqU5Z+O5biCXCIsXG5cdCAgICBcIjQyMDk4MlwiOiBcIuWuiemZhuW4glwiLFxuXHQgICAgXCI0MjA5ODRcIjogXCLmsYnlt53luIJcIixcblx0ICAgIFwiNDIwOTg1XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQyMTAwMFwiOiBcIuiNhuW3nuW4glwiLFxuXHQgICAgXCI0MjEwMDJcIjogXCLmspnluILljLpcIixcblx0ICAgIFwiNDIxMDAzXCI6IFwi6I2G5bee5Yy6XCIsXG5cdCAgICBcIjQyMTAyMlwiOiBcIuWFrOWuieWOv1wiLFxuXHQgICAgXCI0MjEwMjNcIjogXCLnm5HliKnljr9cIixcblx0ICAgIFwiNDIxMDI0XCI6IFwi5rGf6Zm15Y6/XCIsXG5cdCAgICBcIjQyMTA4MVwiOiBcIuefs+mmluW4glwiLFxuXHQgICAgXCI0MjEwODNcIjogXCLmtKrmuZbluIJcIixcblx0ICAgIFwiNDIxMDg3XCI6IFwi5p2+5ruL5biCXCIsXG5cdCAgICBcIjQyMTA4OFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI0MjExMDBcIjogXCLpu4TlhojluIJcIixcblx0ICAgIFwiNDIxMTAyXCI6IFwi6buE5bee5Yy6XCIsXG5cdCAgICBcIjQyMTEyMVwiOiBcIuWboumjjuWOv1wiLFxuXHQgICAgXCI0MjExMjJcIjogXCLnuqLlronljr9cIixcblx0ICAgIFwiNDIxMTIzXCI6IFwi572X55Sw5Y6/XCIsXG5cdCAgICBcIjQyMTEyNFwiOiBcIuiLseWxseWOv1wiLFxuXHQgICAgXCI0MjExMjVcIjogXCLmtaDmsLTljr9cIixcblx0ICAgIFwiNDIxMTI2XCI6IFwi6JWy5pil5Y6/XCIsXG5cdCAgICBcIjQyMTEyN1wiOiBcIum7hOaiheWOv1wiLFxuXHQgICAgXCI0MjExODFcIjogXCLpurvln47luIJcIixcblx0ICAgIFwiNDIxMTgyXCI6IFwi5q2m56m05biCXCIsXG5cdCAgICBcIjQyMTE4M1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI0MjEyMDBcIjogXCLlkrjlroHluIJcIixcblx0ICAgIFwiNDIxMjAyXCI6IFwi5ZK45a6J5Yy6XCIsXG5cdCAgICBcIjQyMTIyMVwiOiBcIuWYiemxvOWOv1wiLFxuXHQgICAgXCI0MjEyMjJcIjogXCLpgJrln47ljr9cIixcblx0ICAgIFwiNDIxMjIzXCI6IFwi5bSH6Ziz5Y6/XCIsXG5cdCAgICBcIjQyMTIyNFwiOiBcIumAmuWxseWOv1wiLFxuXHQgICAgXCI0MjEyODFcIjogXCLotaTlo4HluIJcIixcblx0ICAgIFwiNDIxMjgzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQyMTMwMFwiOiBcIumaj+W3nuW4glwiLFxuXHQgICAgXCI0MjEzMDJcIjogXCLmm77pg73ljLpcIixcblx0ICAgIFwiNDIxMzIxXCI6IFwi6ZqP5Y6/XCIsXG5cdCAgICBcIjQyMTM4MVwiOiBcIuW5v+awtOW4glwiLFxuXHQgICAgXCI0MjEzODJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDIyODAwXCI6IFwi5oGp5pa95Zyf5a625peP6IuX5peP6Ieq5rK75beeXCIsXG5cdCAgICBcIjQyMjgwMVwiOiBcIuaBqeaWveW4glwiLFxuXHQgICAgXCI0MjI4MDJcIjogXCLliKnlt53luIJcIixcblx0ICAgIFwiNDIyODIyXCI6IFwi5bu65aeL5Y6/XCIsXG5cdCAgICBcIjQyMjgyM1wiOiBcIuW3tOS4nOWOv1wiLFxuXHQgICAgXCI0MjI4MjVcIjogXCLlrqPmganljr9cIixcblx0ICAgIFwiNDIyODI2XCI6IFwi5ZK45Liw5Y6/XCIsXG5cdCAgICBcIjQyMjgyN1wiOiBcIuadpeWHpOWOv1wiLFxuXHQgICAgXCI0MjI4MjhcIjogXCLpuaTls7Dljr9cIixcblx0ICAgIFwiNDIyODI5XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQyOTAwNFwiOiBcIuS7meahg+W4glwiLFxuXHQgICAgXCI0MjkwMDVcIjogXCLmvZzmsZ/luIJcIixcblx0ICAgIFwiNDI5MDA2XCI6IFwi5aSp6Zeo5biCXCIsXG5cdCAgICBcIjQyOTAyMVwiOiBcIuelnuWGnOaetuael+WMulwiLFxuXHQgICAgXCI0MzAwMDBcIjogXCLmuZbljZfnnIFcIixcblx0ICAgIFwiNDMwMTAwXCI6IFwi6ZW/5rKZ5biCXCIsXG5cdCAgICBcIjQzMDEwMlwiOiBcIuiKmeiTieWMulwiLFxuXHQgICAgXCI0MzAxMDNcIjogXCLlpKnlv4PljLpcIixcblx0ICAgIFwiNDMwMTA0XCI6IFwi5bKz6bqT5Yy6XCIsXG5cdCAgICBcIjQzMDEwNVwiOiBcIuW8gOemj+WMulwiLFxuXHQgICAgXCI0MzAxMTFcIjogXCLpm6joirHljLpcIixcblx0ICAgIFwiNDMwMTIxXCI6IFwi6ZW/5rKZ5Y6/XCIsXG5cdCAgICBcIjQzMDEyMlwiOiBcIuacm+WfjuWMulwiLFxuXHQgICAgXCI0MzAxMjRcIjogXCLlroHkuaHljr9cIixcblx0ICAgIFwiNDMwMTgxXCI6IFwi5rWP6Ziz5biCXCIsXG5cdCAgICBcIjQzMDE4MlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI0MzAyMDBcIjogXCLmoKrmtLLluIJcIixcblx0ICAgIFwiNDMwMjAyXCI6IFwi6I235aGY5Yy6XCIsXG5cdCAgICBcIjQzMDIwM1wiOiBcIuiKpua3nuWMulwiLFxuXHQgICAgXCI0MzAyMDRcIjogXCLnn7Pls7DljLpcIixcblx0ICAgIFwiNDMwMjExXCI6IFwi5aSp5YWD5Yy6XCIsXG5cdCAgICBcIjQzMDIyMVwiOiBcIuagqua0suWOv1wiLFxuXHQgICAgXCI0MzAyMjNcIjogXCLmlLjljr9cIixcblx0ICAgIFwiNDMwMjI0XCI6IFwi6Iy26Zm15Y6/XCIsXG5cdCAgICBcIjQzMDIyNVwiOiBcIueCjumZteWOv1wiLFxuXHQgICAgXCI0MzAyODFcIjogXCLphrTpmbXluIJcIixcblx0ICAgIFwiNDMwMjgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQzMDMwMFwiOiBcIua5mOa9reW4glwiLFxuXHQgICAgXCI0MzAzMDJcIjogXCLpm6jmuZbljLpcIixcblx0ICAgIFwiNDMwMzA0XCI6IFwi5bKz5aGY5Yy6XCIsXG5cdCAgICBcIjQzMDMyMVwiOiBcIua5mOa9reWOv1wiLFxuXHQgICAgXCI0MzAzODFcIjogXCLmuZjkuaHluIJcIixcblx0ICAgIFwiNDMwMzgyXCI6IFwi6Z+25bGx5biCXCIsXG5cdCAgICBcIjQzMDM4M1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI0MzA0MDBcIjogXCLooaHpmLPluIJcIixcblx0ICAgIFwiNDMwNDA1XCI6IFwi54+g5pmW5Yy6XCIsXG5cdCAgICBcIjQzMDQwNlwiOiBcIumbgeWzsOWMulwiLFxuXHQgICAgXCI0MzA0MDdcIjogXCLnn7PpvJPljLpcIixcblx0ICAgIFwiNDMwNDA4XCI6IFwi6JK45rmY5Yy6XCIsXG5cdCAgICBcIjQzMDQxMlwiOiBcIuWNl+Wys+WMulwiLFxuXHQgICAgXCI0MzA0MjFcIjogXCLooaHpmLPljr9cIixcblx0ICAgIFwiNDMwNDIyXCI6IFwi6KGh5Y2X5Y6/XCIsXG5cdCAgICBcIjQzMDQyM1wiOiBcIuihoeWxseWOv1wiLFxuXHQgICAgXCI0MzA0MjRcIjogXCLooaHkuJzljr9cIixcblx0ICAgIFwiNDMwNDI2XCI6IFwi56WB5Lic5Y6/XCIsXG5cdCAgICBcIjQzMDQ4MVwiOiBcIuiAkumYs+W4glwiLFxuXHQgICAgXCI0MzA0ODJcIjogXCLluLjlroHluIJcIixcblx0ICAgIFwiNDMwNDgzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQzMDUwMFwiOiBcIumCtemYs+W4glwiLFxuXHQgICAgXCI0MzA1MDJcIjogXCLlj4zmuIXljLpcIixcblx0ICAgIFwiNDMwNTAzXCI6IFwi5aSn56Wl5Yy6XCIsXG5cdCAgICBcIjQzMDUxMVwiOiBcIuWMl+WhlOWMulwiLFxuXHQgICAgXCI0MzA1MjFcIjogXCLpgrXkuJzljr9cIixcblx0ICAgIFwiNDMwNTIyXCI6IFwi5paw6YK15Y6/XCIsXG5cdCAgICBcIjQzMDUyM1wiOiBcIumCtemYs+WOv1wiLFxuXHQgICAgXCI0MzA1MjRcIjogXCLpmoblm57ljr9cIixcblx0ICAgIFwiNDMwNTI1XCI6IFwi5rSe5Y+j5Y6/XCIsXG5cdCAgICBcIjQzMDUyN1wiOiBcIue7peWugeWOv1wiLFxuXHQgICAgXCI0MzA1MjhcIjogXCLmlrDlroHljr9cIixcblx0ICAgIFwiNDMwNTI5XCI6IFwi5Z+O5q2l6IuX5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjQzMDU4MVwiOiBcIuatpuWGiOW4glwiLFxuXHQgICAgXCI0MzA1ODJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDMwNjAwXCI6IFwi5bKz6Ziz5biCXCIsXG5cdCAgICBcIjQzMDYwMlwiOiBcIuWys+mYs+alvOWMulwiLFxuXHQgICAgXCI0MzA2MDNcIjogXCLkupHmuqrljLpcIixcblx0ICAgIFwiNDMwNjExXCI6IFwi5ZCb5bGx5Yy6XCIsXG5cdCAgICBcIjQzMDYyMVwiOiBcIuWys+mYs+WOv1wiLFxuXHQgICAgXCI0MzA2MjNcIjogXCLljY7lrrnljr9cIixcblx0ICAgIFwiNDMwNjI0XCI6IFwi5rmY6Zi05Y6/XCIsXG5cdCAgICBcIjQzMDYyNlwiOiBcIuW5s+axn+WOv1wiLFxuXHQgICAgXCI0MzA2ODFcIjogXCLmsajnvZfluIJcIixcblx0ICAgIFwiNDMwNjgyXCI6IFwi5Li05rmY5biCXCIsXG5cdCAgICBcIjQzMDY4M1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI0MzA3MDBcIjogXCLluLjlvrfluIJcIixcblx0ICAgIFwiNDMwNzAyXCI6IFwi5q2m6Zm15Yy6XCIsXG5cdCAgICBcIjQzMDcwM1wiOiBcIum8juWfjuWMulwiLFxuXHQgICAgXCI0MzA3MjFcIjogXCLlronkuaHljr9cIixcblx0ICAgIFwiNDMwNzIyXCI6IFwi5rGJ5a+/5Y6/XCIsXG5cdCAgICBcIjQzMDcyM1wiOiBcIua+p+WOv1wiLFxuXHQgICAgXCI0MzA3MjRcIjogXCLkuLTmvqfljr9cIixcblx0ICAgIFwiNDMwNzI1XCI6IFwi5qGD5rqQ5Y6/XCIsXG5cdCAgICBcIjQzMDcyNlwiOiBcIuefs+mXqOWOv1wiLFxuXHQgICAgXCI0MzA3ODFcIjogXCLmtKXluILluIJcIixcblx0ICAgIFwiNDMwNzgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQzMDgwMFwiOiBcIuW8oOWutueVjOW4glwiLFxuXHQgICAgXCI0MzA4MDJcIjogXCLmsLjlrprljLpcIixcblx0ICAgIFwiNDMwODExXCI6IFwi5q2m6Zm15rqQ5Yy6XCIsXG5cdCAgICBcIjQzMDgyMVwiOiBcIuaFiOWIqeWOv1wiLFxuXHQgICAgXCI0MzA4MjJcIjogXCLmoZHmpI3ljr9cIixcblx0ICAgIFwiNDMwODIzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQzMDkwMFwiOiBcIuebiumYs+W4glwiLFxuXHQgICAgXCI0MzA5MDJcIjogXCLotYTpmLPljLpcIixcblx0ICAgIFwiNDMwOTAzXCI6IFwi6LWr5bGx5Yy6XCIsXG5cdCAgICBcIjQzMDkyMVwiOiBcIuWNl+WOv1wiLFxuXHQgICAgXCI0MzA5MjJcIjogXCLmoYPmsZ/ljr9cIixcblx0ICAgIFwiNDMwOTIzXCI6IFwi5a6J5YyW5Y6/XCIsXG5cdCAgICBcIjQzMDk4MVwiOiBcIuayheaxn+W4glwiLFxuXHQgICAgXCI0MzA5ODJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDMxMDAwXCI6IFwi6YO05bee5biCXCIsXG5cdCAgICBcIjQzMTAwMlwiOiBcIuWMl+a5luWMulwiLFxuXHQgICAgXCI0MzEwMDNcIjogXCLoi4/ku5nljLpcIixcblx0ICAgIFwiNDMxMDIxXCI6IFwi5qGC6Ziz5Y6/XCIsXG5cdCAgICBcIjQzMTAyMlwiOiBcIuWunOeroOWOv1wiLFxuXHQgICAgXCI0MzEwMjNcIjogXCLmsLjlhbTljr9cIixcblx0ICAgIFwiNDMxMDI0XCI6IFwi5ZiJ56a+5Y6/XCIsXG5cdCAgICBcIjQzMTAyNVwiOiBcIuS4tOatpuWOv1wiLFxuXHQgICAgXCI0MzEwMjZcIjogXCLmsZ3ln47ljr9cIixcblx0ICAgIFwiNDMxMDI3XCI6IFwi5qGC5Lic5Y6/XCIsXG5cdCAgICBcIjQzMTAyOFwiOiBcIuWuieS7geWOv1wiLFxuXHQgICAgXCI0MzEwODFcIjogXCLotYTlhbTluIJcIixcblx0ICAgIFwiNDMxMDgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQzMTEwMFwiOiBcIuawuOW3nuW4glwiLFxuXHQgICAgXCI0MzExMDJcIjogXCLpm7bpmbXljLpcIixcblx0ICAgIFwiNDMxMTAzXCI6IFwi5Ya35rC05rup5Yy6XCIsXG5cdCAgICBcIjQzMTEyMVwiOiBcIuelgemYs+WOv1wiLFxuXHQgICAgXCI0MzExMjJcIjogXCLkuJzlronljr9cIixcblx0ICAgIFwiNDMxMTIzXCI6IFwi5Y+M54mM5Y6/XCIsXG5cdCAgICBcIjQzMTEyNFwiOiBcIumBk+WOv1wiLFxuXHQgICAgXCI0MzExMjVcIjogXCLmsZ/msLjljr9cIixcblx0ICAgIFwiNDMxMTI2XCI6IFwi5a6B6L+c5Y6/XCIsXG5cdCAgICBcIjQzMTEyN1wiOiBcIuiTneWxseWOv1wiLFxuXHQgICAgXCI0MzExMjhcIjogXCLmlrDnlLDljr9cIixcblx0ICAgIFwiNDMxMTI5XCI6IFwi5rGf5Y2O55G25peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjQzMTEzMFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI0MzEyMDBcIjogXCLmgIDljJbluIJcIixcblx0ICAgIFwiNDMxMjAyXCI6IFwi6bmk5Z+O5Yy6XCIsXG5cdCAgICBcIjQzMTIyMVwiOiBcIuS4reaWueWOv1wiLFxuXHQgICAgXCI0MzEyMjJcIjogXCLmsoXpmbXljr9cIixcblx0ICAgIFwiNDMxMjIzXCI6IFwi6L6w5rqq5Y6/XCIsXG5cdCAgICBcIjQzMTIyNFwiOiBcIua6hua1puWOv1wiLFxuXHQgICAgXCI0MzEyMjVcIjogXCLkvJrlkIzljr9cIixcblx0ICAgIFwiNDMxMjI2XCI6IFwi6bq76Ziz6IuX5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjQzMTIyN1wiOiBcIuaWsOaZg+S+l+aXj+iHquayu+WOv1wiLFxuXHQgICAgXCI0MzEyMjhcIjogXCLoirfmsZ/kvpfml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNDMxMjI5XCI6IFwi6Z2W5bee6IuX5peP5L6X5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjQzMTIzMFwiOiBcIumAmumBk+S+l+aXj+iHquayu+WOv1wiLFxuXHQgICAgXCI0MzEyODFcIjogXCLmtKrmsZ/luIJcIixcblx0ICAgIFwiNDMxMjgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQzMTMwMFwiOiBcIuWohOW6leW4glwiLFxuXHQgICAgXCI0MzEzMDJcIjogXCLlqITmmJ/ljLpcIixcblx0ICAgIFwiNDMxMzIxXCI6IFwi5Y+M5bOw5Y6/XCIsXG5cdCAgICBcIjQzMTMyMlwiOiBcIuaWsOWMluWOv1wiLFxuXHQgICAgXCI0MzEzODFcIjogXCLlhrfmsLTmsZ/luIJcIixcblx0ICAgIFwiNDMxMzgyXCI6IFwi5raf5rqQ5biCXCIsXG5cdCAgICBcIjQzMTM4M1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI0MzMxMDBcIjogXCLmuZjopb/lnJ/lrrbml4/oi5fml4/oh6rmsrvlt55cIixcblx0ICAgIFwiNDMzMTAxXCI6IFwi5ZCJ6aaW5biCXCIsXG5cdCAgICBcIjQzMzEyMlwiOiBcIuazuOa6quWOv1wiLFxuXHQgICAgXCI0MzMxMjNcIjogXCLlh6Tlh7Dljr9cIixcblx0ICAgIFwiNDMzMTI0XCI6IFwi6Iqx5Z6j5Y6/XCIsXG5cdCAgICBcIjQzMzEyNVwiOiBcIuS/nemdluWOv1wiLFxuXHQgICAgXCI0MzMxMjZcIjogXCLlj6TkuIjljr9cIixcblx0ICAgIFwiNDMzMTI3XCI6IFwi5rC46aG65Y6/XCIsXG5cdCAgICBcIjQzMzEzMFwiOiBcIum+meWxseWOv1wiLFxuXHQgICAgXCI0MzMxMzFcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDQwMDAwXCI6IFwi5bm/5Lic55yBXCIsXG5cdCAgICBcIjQ0MDEwMFwiOiBcIuW5v+W3nuW4glwiLFxuXHQgICAgXCI0NDAxMDNcIjogXCLojZTmub7ljLpcIixcblx0ICAgIFwiNDQwMTA0XCI6IFwi6LaK56eA5Yy6XCIsXG5cdCAgICBcIjQ0MDEwNVwiOiBcIua1t+ePoOWMulwiLFxuXHQgICAgXCI0NDAxMDZcIjogXCLlpKnmsrPljLpcIixcblx0ICAgIFwiNDQwMTExXCI6IFwi55m95LqR5Yy6XCIsXG5cdCAgICBcIjQ0MDExMlwiOiBcIum7hOWflOWMulwiLFxuXHQgICAgXCI0NDAxMTNcIjogXCLnlarnprrljLpcIixcblx0ICAgIFwiNDQwMTE0XCI6IFwi6Iqx6YO95Yy6XCIsXG5cdCAgICBcIjQ0MDExNVwiOiBcIuWNl+aymeWMulwiLFxuXHQgICAgXCI0NDAxMTZcIjogXCLokJ3lspfljLpcIixcblx0ICAgIFwiNDQwMTgzXCI6IFwi5aKe5Z+O5biCXCIsXG5cdCAgICBcIjQ0MDE4NFwiOiBcIuS7juWMluW4glwiLFxuXHQgICAgXCI0NDAxODlcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDQwMjAwXCI6IFwi6Z+25YWz5biCXCIsXG5cdCAgICBcIjQ0MDIwM1wiOiBcIuatpuaxn+WMulwiLFxuXHQgICAgXCI0NDAyMDRcIjogXCLmtYjmsZ/ljLpcIixcblx0ICAgIFwiNDQwMjA1XCI6IFwi5puy5rGf5Yy6XCIsXG5cdCAgICBcIjQ0MDIyMlwiOiBcIuWni+WFtOWOv1wiLFxuXHQgICAgXCI0NDAyMjRcIjogXCLku4HljJbljr9cIixcblx0ICAgIFwiNDQwMjI5XCI6IFwi57+B5rqQ5Y6/XCIsXG5cdCAgICBcIjQ0MDIzMlwiOiBcIuS5s+a6kOeRtuaXj+iHquayu+WOv1wiLFxuXHQgICAgXCI0NDAyMzNcIjogXCLmlrDkuLDljr9cIixcblx0ICAgIFwiNDQwMjgxXCI6IFwi5LmQ5piM5biCXCIsXG5cdCAgICBcIjQ0MDI4MlwiOiBcIuWNl+mbhOW4glwiLFxuXHQgICAgXCI0NDAyODNcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDQwMzAwXCI6IFwi5rex5Zyz5biCXCIsXG5cdCAgICBcIjQ0MDMwM1wiOiBcIue9l+a5luWMulwiLFxuXHQgICAgXCI0NDAzMDRcIjogXCLnpo/nlLDljLpcIixcblx0ICAgIFwiNDQwMzA1XCI6IFwi5Y2X5bGx5Yy6XCIsXG5cdCAgICBcIjQ0MDMwNlwiOiBcIuWuneWuieWMulwiLFxuXHQgICAgXCI0NDAzMDdcIjogXCLpvpnlspfljLpcIixcblx0ICAgIFwiNDQwMzA4XCI6IFwi55uQ55Sw5Yy6XCIsXG5cdCAgICBcIjQ0MDMwOVwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI0NDAzMjBcIjogXCLlhYnmmI7mlrDljLpcIixcblx0ICAgIFwiNDQwMzIxXCI6IFwi5Z2q5bGx5paw5Yy6XCIsXG5cdCAgICBcIjQ0MDMyMlwiOiBcIuWkp+m5j+aWsOWMulwiLFxuXHQgICAgXCI0NDAzMjNcIjogXCLpvpnljY7mlrDljLpcIixcblx0ICAgIFwiNDQwNDAwXCI6IFwi54+g5rW35biCXCIsXG5cdCAgICBcIjQ0MDQwMlwiOiBcIummmea0suWMulwiLFxuXHQgICAgXCI0NDA0MDNcIjogXCLmlpfpl6jljLpcIixcblx0ICAgIFwiNDQwNDA0XCI6IFwi6YeR5rm+5Yy6XCIsXG5cdCAgICBcIjQ0MDQ4OFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI0NDA1MDBcIjogXCLmsZXlpLTluIJcIixcblx0ICAgIFwiNDQwNTA3XCI6IFwi6b6Z5rmW5Yy6XCIsXG5cdCAgICBcIjQ0MDUxMVwiOiBcIumHkeW5s+WMulwiLFxuXHQgICAgXCI0NDA1MTJcIjogXCLmv6DmsZ/ljLpcIixcblx0ICAgIFwiNDQwNTEzXCI6IFwi5r2u6Ziz5Yy6XCIsXG5cdCAgICBcIjQ0MDUxNFwiOiBcIua9ruWNl+WMulwiLFxuXHQgICAgXCI0NDA1MTVcIjogXCLmvoTmtbfljLpcIixcblx0ICAgIFwiNDQwNTIzXCI6IFwi5Y2X5r6z5Y6/XCIsXG5cdCAgICBcIjQ0MDUyNFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI0NDA2MDBcIjogXCLkvZvlsbHluIJcIixcblx0ICAgIFwiNDQwNjA0XCI6IFwi56aF5Z+O5Yy6XCIsXG5cdCAgICBcIjQ0MDYwNVwiOiBcIuWNl+a1t+WMulwiLFxuXHQgICAgXCI0NDA2MDZcIjogXCLpobrlvrfljLpcIixcblx0ICAgIFwiNDQwNjA3XCI6IFwi5LiJ5rC05Yy6XCIsXG5cdCAgICBcIjQ0MDYwOFwiOiBcIumrmOaYjuWMulwiLFxuXHQgICAgXCI0NDA2MDlcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDQwNzAwXCI6IFwi5rGf6Zeo5biCXCIsXG5cdCAgICBcIjQ0MDcwM1wiOiBcIuiTrOaxn+WMulwiLFxuXHQgICAgXCI0NDA3MDRcIjogXCLmsZ/mtbfljLpcIixcblx0ICAgIFwiNDQwNzA1XCI6IFwi5paw5Lya5Yy6XCIsXG5cdCAgICBcIjQ0MDc4MVwiOiBcIuWPsOWxseW4glwiLFxuXHQgICAgXCI0NDA3ODNcIjogXCLlvIDlubPluIJcIixcblx0ICAgIFwiNDQwNzg0XCI6IFwi6bmk5bGx5biCXCIsXG5cdCAgICBcIjQ0MDc4NVwiOiBcIuaBqeW5s+W4glwiLFxuXHQgICAgXCI0NDA3ODZcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDQwODAwXCI6IFwi5rmb5rGf5biCXCIsXG5cdCAgICBcIjQ0MDgwMlwiOiBcIui1pOWdjuWMulwiLFxuXHQgICAgXCI0NDA4MDNcIjogXCLpnJ7lsbHljLpcIixcblx0ICAgIFwiNDQwODA0XCI6IFwi5Z2h5aS05Yy6XCIsXG5cdCAgICBcIjQ0MDgxMVwiOiBcIum6u+eroOWMulwiLFxuXHQgICAgXCI0NDA4MjNcIjogXCLpgYLmuqrljr9cIixcblx0ICAgIFwiNDQwODI1XCI6IFwi5b6Q6Ze75Y6/XCIsXG5cdCAgICBcIjQ0MDg4MVwiOiBcIuW7ieaxn+W4glwiLFxuXHQgICAgXCI0NDA4ODJcIjogXCLpm7flt57luIJcIixcblx0ICAgIFwiNDQwODgzXCI6IFwi5ZC05bed5biCXCIsXG5cdCAgICBcIjQ0MDg4NFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI0NDA5MDBcIjogXCLojILlkI3luIJcIixcblx0ICAgIFwiNDQwOTAyXCI6IFwi6IyC5Y2X5Yy6XCIsXG5cdCAgICBcIjQ0MDkwM1wiOiBcIuiMgua4r+WMulwiLFxuXHQgICAgXCI0NDA5MjNcIjogXCLnlLXnmb3ljr9cIixcblx0ICAgIFwiNDQwOTgxXCI6IFwi6auY5bee5biCXCIsXG5cdCAgICBcIjQ0MDk4MlwiOiBcIuWMluW3nuW4glwiLFxuXHQgICAgXCI0NDA5ODNcIjogXCLkv6HlrpzluIJcIixcblx0ICAgIFwiNDQwOTg0XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQ0MTIwMFwiOiBcIuiCh+W6huW4glwiLFxuXHQgICAgXCI0NDEyMDJcIjogXCLnq6/lt57ljLpcIixcblx0ICAgIFwiNDQxMjAzXCI6IFwi6byO5rmW5Yy6XCIsXG5cdCAgICBcIjQ0MTIyM1wiOiBcIuW5v+WugeWOv1wiLFxuXHQgICAgXCI0NDEyMjRcIjogXCLmgIDpm4bljr9cIixcblx0ICAgIFwiNDQxMjI1XCI6IFwi5bCB5byA5Y6/XCIsXG5cdCAgICBcIjQ0MTIyNlwiOiBcIuW+t+W6huWOv1wiLFxuXHQgICAgXCI0NDEyODNcIjogXCLpq5jopoHluIJcIixcblx0ICAgIFwiNDQxMjg0XCI6IFwi5Zub5Lya5biCXCIsXG5cdCAgICBcIjQ0MTI4NVwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI0NDEzMDBcIjogXCLmg6Dlt57luIJcIixcblx0ICAgIFwiNDQxMzAyXCI6IFwi5oOg5Z+O5Yy6XCIsXG5cdCAgICBcIjQ0MTMwM1wiOiBcIuaDoOmYs+WMulwiLFxuXHQgICAgXCI0NDEzMjJcIjogXCLljZrnvZfljr9cIixcblx0ICAgIFwiNDQxMzIzXCI6IFwi5oOg5Lic5Y6/XCIsXG5cdCAgICBcIjQ0MTMyNFwiOiBcIum+memXqOWOv1wiLFxuXHQgICAgXCI0NDEzMjVcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDQxNDAwXCI6IFwi5qKF5bee5biCXCIsXG5cdCAgICBcIjQ0MTQwMlwiOiBcIuaiheaxn+WMulwiLFxuXHQgICAgXCI0NDE0MjFcIjogXCLmooXljr9cIixcblx0ICAgIFwiNDQxNDIyXCI6IFwi5aSn5Z+U5Y6/XCIsXG5cdCAgICBcIjQ0MTQyM1wiOiBcIuS4sOmhuuWOv1wiLFxuXHQgICAgXCI0NDE0MjRcIjogXCLkupTljY7ljr9cIixcblx0ICAgIFwiNDQxNDI2XCI6IFwi5bmz6L+c5Y6/XCIsXG5cdCAgICBcIjQ0MTQyN1wiOiBcIuiVieWyreWOv1wiLFxuXHQgICAgXCI0NDE0ODFcIjogXCLlhbTlroHluIJcIixcblx0ICAgIFwiNDQxNDgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQ0MTUwMFwiOiBcIuaxleWwvuW4glwiLFxuXHQgICAgXCI0NDE1MDJcIjogXCLln47ljLpcIixcblx0ICAgIFwiNDQxNTIxXCI6IFwi5rW35Liw5Y6/XCIsXG5cdCAgICBcIjQ0MTUyM1wiOiBcIumZhuays+WOv1wiLFxuXHQgICAgXCI0NDE1ODFcIjogXCLpmYbkuLDluIJcIixcblx0ICAgIFwiNDQxNTgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQ0MTYwMFwiOiBcIuays+a6kOW4glwiLFxuXHQgICAgXCI0NDE2MDJcIjogXCLmupDln47ljLpcIixcblx0ICAgIFwiNDQxNjIxXCI6IFwi57Sr6YeR5Y6/XCIsXG5cdCAgICBcIjQ0MTYyMlwiOiBcIum+meW3neWOv1wiLFxuXHQgICAgXCI0NDE2MjNcIjogXCLov57lubPljr9cIixcblx0ICAgIFwiNDQxNjI0XCI6IFwi5ZKM5bmz5Y6/XCIsXG5cdCAgICBcIjQ0MTYyNVwiOiBcIuS4nOa6kOWOv1wiLFxuXHQgICAgXCI0NDE2MjZcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDQxNzAwXCI6IFwi6Ziz5rGf5biCXCIsXG5cdCAgICBcIjQ0MTcwMlwiOiBcIuaxn+WfjuWMulwiLFxuXHQgICAgXCI0NDE3MjFcIjogXCLpmLPopb/ljr9cIixcblx0ICAgIFwiNDQxNzIzXCI6IFwi6Ziz5Lic5Y6/XCIsXG5cdCAgICBcIjQ0MTc4MVwiOiBcIumYs+aYpeW4glwiLFxuXHQgICAgXCI0NDE3ODJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDQxODAwXCI6IFwi5riF6L+c5biCXCIsXG5cdCAgICBcIjQ0MTgwMlwiOiBcIua4heWfjuWMulwiLFxuXHQgICAgXCI0NDE4MjFcIjogXCLkvZvlhojljr9cIixcblx0ICAgIFwiNDQxODIzXCI6IFwi6Ziz5bGx5Y6/XCIsXG5cdCAgICBcIjQ0MTgyNVwiOiBcIui/nuWxseWjruaXj+eRtuaXj+iHquayu+WOv1wiLFxuXHQgICAgXCI0NDE4MjZcIjogXCLov57ljZfnkbbml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNDQxODI3XCI6IFwi5riF5paw5Yy6XCIsXG5cdCAgICBcIjQ0MTg4MVwiOiBcIuiLseW+t+W4glwiLFxuXHQgICAgXCI0NDE4ODJcIjogXCLov57lt57luIJcIixcblx0ICAgIFwiNDQxODgzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQ0MTkwMFwiOiBcIuS4nOiOnuW4glwiLFxuXHQgICAgXCI0NDIwMDBcIjogXCLkuK3lsbHluIJcIixcblx0ICAgIFwiNDQyMTAxXCI6IFwi5Lic5rKZ576k5bKbXCIsXG5cdCAgICBcIjQ0NTEwMFwiOiBcIua9ruW3nuW4glwiLFxuXHQgICAgXCI0NDUxMDJcIjogXCLmuZjmoaXljLpcIixcblx0ICAgIFwiNDQ1MTIxXCI6IFwi5r2u5a6J5Yy6XCIsXG5cdCAgICBcIjQ0NTEyMlwiOiBcIumltuW5s+WOv1wiLFxuXHQgICAgXCI0NDUxODZcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDQ1MjAwXCI6IFwi5o+t6Ziz5biCXCIsXG5cdCAgICBcIjQ0NTIwMlwiOiBcIuamleWfjuWMulwiLFxuXHQgICAgXCI0NDUyMjFcIjogXCLmj63kuJzljLpcIixcblx0ICAgIFwiNDQ1MjIyXCI6IFwi5o+t6KW/5Y6/XCIsXG5cdCAgICBcIjQ0NTIyNFwiOiBcIuaDoOadpeWOv1wiLFxuXHQgICAgXCI0NDUyODFcIjogXCLmma7lroHluIJcIixcblx0ICAgIFwiNDQ1Mjg1XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQ0NTMwMFwiOiBcIuS6kea1ruW4glwiLFxuXHQgICAgXCI0NDUzMDJcIjogXCLkupHln47ljLpcIixcblx0ICAgIFwiNDQ1MzIxXCI6IFwi5paw5YW05Y6/XCIsXG5cdCAgICBcIjQ0NTMyMlwiOiBcIumDgeWNl+WOv1wiLFxuXHQgICAgXCI0NDUzMjNcIjogXCLkupHlronljr9cIixcblx0ICAgIFwiNDQ1MzgxXCI6IFwi572X5a6a5biCXCIsXG5cdCAgICBcIjQ0NTM4MlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI0NTAwMDBcIjogXCLlub/opb/lo67ml4/oh6rmsrvljLpcIixcblx0ICAgIFwiNDUwMTAwXCI6IFwi5Y2X5a6B5biCXCIsXG5cdCAgICBcIjQ1MDEwMlwiOiBcIuWFtOWugeWMulwiLFxuXHQgICAgXCI0NTAxMDNcIjogXCLpnZLnp4DljLpcIixcblx0ICAgIFwiNDUwMTA1XCI6IFwi5rGf5Y2X5Yy6XCIsXG5cdCAgICBcIjQ1MDEwN1wiOiBcIuilv+S5oeWhmOWMulwiLFxuXHQgICAgXCI0NTAxMDhcIjogXCLoia/luobljLpcIixcblx0ICAgIFwiNDUwMTA5XCI6IFwi6YKV5a6B5Yy6XCIsXG5cdCAgICBcIjQ1MDEyMlwiOiBcIuatpum4o+WOv1wiLFxuXHQgICAgXCI0NTAxMjNcIjogXCLpmoblronljr9cIixcblx0ICAgIFwiNDUwMTI0XCI6IFwi6ams5bGx5Y6/XCIsXG5cdCAgICBcIjQ1MDEyNVwiOiBcIuS4iuael+WOv1wiLFxuXHQgICAgXCI0NTAxMjZcIjogXCLlrr7pmLPljr9cIixcblx0ICAgIFwiNDUwMTI3XCI6IFwi5qiq5Y6/XCIsXG5cdCAgICBcIjQ1MDEyOFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI0NTAyMDBcIjogXCLmn7Plt57luIJcIixcblx0ICAgIFwiNDUwMjAyXCI6IFwi5Z+O5Lit5Yy6XCIsXG5cdCAgICBcIjQ1MDIwM1wiOiBcIumxvOWzsOWMulwiLFxuXHQgICAgXCI0NTAyMDRcIjogXCLmn7PljZfljLpcIixcblx0ICAgIFwiNDUwMjA1XCI6IFwi5p+z5YyX5Yy6XCIsXG5cdCAgICBcIjQ1MDIyMVwiOiBcIuafs+axn+WOv1wiLFxuXHQgICAgXCI0NTAyMjJcIjogXCLmn7Pln47ljr9cIixcblx0ICAgIFwiNDUwMjIzXCI6IFwi6bm/5a+o5Y6/XCIsXG5cdCAgICBcIjQ1MDIyNFwiOiBcIuiejeWuieWOv1wiLFxuXHQgICAgXCI0NTAyMjVcIjogXCLono3msLToi5fml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNDUwMjI2XCI6IFwi5LiJ5rGf5L6X5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjQ1MDIyN1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI0NTAzMDBcIjogXCLmoYLmnpfluIJcIixcblx0ICAgIFwiNDUwMzAyXCI6IFwi56eA5bOw5Yy6XCIsXG5cdCAgICBcIjQ1MDMwM1wiOiBcIuWPoOW9qeWMulwiLFxuXHQgICAgXCI0NTAzMDRcIjogXCLosaHlsbHljLpcIixcblx0ICAgIFwiNDUwMzA1XCI6IFwi5LiD5pif5Yy6XCIsXG5cdCAgICBcIjQ1MDMxMVwiOiBcIumbgeWxseWMulwiLFxuXHQgICAgXCI0NTAzMjFcIjogXCLpmLPmnJTljr9cIixcblx0ICAgIFwiNDUwMzIyXCI6IFwi5Li05qGC5Yy6XCIsXG5cdCAgICBcIjQ1MDMyM1wiOiBcIueBteW3neWOv1wiLFxuXHQgICAgXCI0NTAzMjRcIjogXCLlhajlt57ljr9cIixcblx0ICAgIFwiNDUwMzI1XCI6IFwi5YW05a6J5Y6/XCIsXG5cdCAgICBcIjQ1MDMyNlwiOiBcIuawuOemj+WOv1wiLFxuXHQgICAgXCI0NTAzMjdcIjogXCLngYzpmLPljr9cIixcblx0ICAgIFwiNDUwMzI4XCI6IFwi6b6Z6IOc5ZCE5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjQ1MDMyOVwiOiBcIui1hOa6kOWOv1wiLFxuXHQgICAgXCI0NTAzMzBcIjogXCLlubPkuZDljr9cIixcblx0ICAgIFwiNDUwMzMxXCI6IFwi6I2U5rWm5Y6/XCIsXG5cdCAgICBcIjQ1MDMzMlwiOiBcIuaBreWfjueRtuaXj+iHquayu+WOv1wiLFxuXHQgICAgXCI0NTAzMzNcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDUwNDAwXCI6IFwi5qKn5bee5biCXCIsXG5cdCAgICBcIjQ1MDQwM1wiOiBcIuS4h+engOWMulwiLFxuXHQgICAgXCI0NTA0MDVcIjogXCLplb/mtLLljLpcIixcblx0ICAgIFwiNDUwNDA2XCI6IFwi6b6Z5Zyp5Yy6XCIsXG5cdCAgICBcIjQ1MDQyMVwiOiBcIuiLjeaip+WOv1wiLFxuXHQgICAgXCI0NTA0MjJcIjogXCLol6Tljr9cIixcblx0ICAgIFwiNDUwNDIzXCI6IFwi6JKZ5bGx5Y6/XCIsXG5cdCAgICBcIjQ1MDQ4MVwiOiBcIuWykea6quW4glwiLFxuXHQgICAgXCI0NTA0ODJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDUwNTAwXCI6IFwi5YyX5rW35biCXCIsXG5cdCAgICBcIjQ1MDUwMlwiOiBcIua1t+WfjuWMulwiLFxuXHQgICAgXCI0NTA1MDNcIjogXCLpk7bmtbfljLpcIixcblx0ICAgIFwiNDUwNTEyXCI6IFwi6ZOB5bGx5riv5Yy6XCIsXG5cdCAgICBcIjQ1MDUyMVwiOiBcIuWQiOa1puWOv1wiLFxuXHQgICAgXCI0NTA1MjJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDUwNjAwXCI6IFwi6Ziy5Z+O5riv5biCXCIsXG5cdCAgICBcIjQ1MDYwMlwiOiBcIua4r+WPo+WMulwiLFxuXHQgICAgXCI0NTA2MDNcIjogXCLpmLLln47ljLpcIixcblx0ICAgIFwiNDUwNjIxXCI6IFwi5LiK5oCd5Y6/XCIsXG5cdCAgICBcIjQ1MDY4MVwiOiBcIuS4nOWFtOW4glwiLFxuXHQgICAgXCI0NTA2ODJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDUwNzAwXCI6IFwi6ZKm5bee5biCXCIsXG5cdCAgICBcIjQ1MDcwMlwiOiBcIumSpuWNl+WMulwiLFxuXHQgICAgXCI0NTA3MDNcIjogXCLpkqbljJfljLpcIixcblx0ICAgIFwiNDUwNzIxXCI6IFwi54G15bGx5Y6/XCIsXG5cdCAgICBcIjQ1MDcyMlwiOiBcIua1puWMl+WOv1wiLFxuXHQgICAgXCI0NTA3MjNcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDUwODAwXCI6IFwi6LS15riv5biCXCIsXG5cdCAgICBcIjQ1MDgwMlwiOiBcIua4r+WMl+WMulwiLFxuXHQgICAgXCI0NTA4MDNcIjogXCLmuK/ljZfljLpcIixcblx0ICAgIFwiNDUwODA0XCI6IFwi6KaD5aGY5Yy6XCIsXG5cdCAgICBcIjQ1MDgyMVwiOiBcIuW5s+WNl+WOv1wiLFxuXHQgICAgXCI0NTA4ODFcIjogXCLmoYLlubPluIJcIixcblx0ICAgIFwiNDUwODgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQ1MDkwMFwiOiBcIueOieael+W4glwiLFxuXHQgICAgXCI0NTA5MDJcIjogXCLnjonlt57ljLpcIixcblx0ICAgIFwiNDUwOTAzXCI6IFwi56aP57u15Yy6XCIsXG5cdCAgICBcIjQ1MDkyMVwiOiBcIuWuueWOv1wiLFxuXHQgICAgXCI0NTA5MjJcIjogXCLpmYblt53ljr9cIixcblx0ICAgIFwiNDUwOTIzXCI6IFwi5Y2a55m95Y6/XCIsXG5cdCAgICBcIjQ1MDkyNFwiOiBcIuWFtOS4muWOv1wiLFxuXHQgICAgXCI0NTA5ODFcIjogXCLljJfmtYHluIJcIixcblx0ICAgIFwiNDUwOTgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQ1MTAwMFwiOiBcIueZvuiJsuW4glwiLFxuXHQgICAgXCI0NTEwMDJcIjogXCLlj7PmsZ/ljLpcIixcblx0ICAgIFwiNDUxMDIxXCI6IFwi55Sw6Ziz5Y6/XCIsXG5cdCAgICBcIjQ1MTAyMlwiOiBcIueUsOS4nOWOv1wiLFxuXHQgICAgXCI0NTEwMjNcIjogXCLlubPmnpzljr9cIixcblx0ICAgIFwiNDUxMDI0XCI6IFwi5b635L+d5Y6/XCIsXG5cdCAgICBcIjQ1MTAyNVwiOiBcIumdluilv+WOv1wiLFxuXHQgICAgXCI0NTEwMjZcIjogXCLpgqPlnaHljr9cIixcblx0ICAgIFwiNDUxMDI3XCI6IFwi5YeM5LqR5Y6/XCIsXG5cdCAgICBcIjQ1MTAyOFwiOiBcIuS5kOS4muWOv1wiLFxuXHQgICAgXCI0NTEwMjlcIjogXCLnlLDmnpfljr9cIixcblx0ICAgIFwiNDUxMDMwXCI6IFwi6KW/5p6X5Y6/XCIsXG5cdCAgICBcIjQ1MTAzMVwiOiBcIumahuael+WQhOaXj+iHquayu+WOv1wiLFxuXHQgICAgXCI0NTEwMzJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNDUxMTAwXCI6IFwi6LS65bee5biCXCIsXG5cdCAgICBcIjQ1MTEwMlwiOiBcIuWFq+atpeWMulwiLFxuXHQgICAgXCI0NTExMTlcIjogXCLlubPmoYLnrqHnkIbljLpcIixcblx0ICAgIFwiNDUxMTIxXCI6IFwi5pit5bmz5Y6/XCIsXG5cdCAgICBcIjQ1MTEyMlwiOiBcIumSn+WxseWOv1wiLFxuXHQgICAgXCI0NTExMjNcIjogXCLlr4zlt53nkbbml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNDUxMTI0XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQ1MTIwMFwiOiBcIuays+axoOW4glwiLFxuXHQgICAgXCI0NTEyMDJcIjogXCLph5Hln47msZ/ljLpcIixcblx0ICAgIFwiNDUxMjIxXCI6IFwi5Y2X5Li55Y6/XCIsXG5cdCAgICBcIjQ1MTIyMlwiOiBcIuWkqeWzqOWOv1wiLFxuXHQgICAgXCI0NTEyMjNcIjogXCLlh6TlsbHljr9cIixcblx0ICAgIFwiNDUxMjI0XCI6IFwi5Lic5YWw5Y6/XCIsXG5cdCAgICBcIjQ1MTIyNVwiOiBcIue9l+WfjuS7q+S9rOaXj+iHquayu+WOv1wiLFxuXHQgICAgXCI0NTEyMjZcIjogXCLnjq/msZ/mr5vljZfml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNDUxMjI3XCI6IFwi5be06ams55G25peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjQ1MTIyOFwiOiBcIumDveWuieeRtuaXj+iHquayu+WOv1wiLFxuXHQgICAgXCI0NTEyMjlcIjogXCLlpKfljJbnkbbml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNDUxMjgxXCI6IFwi5a6c5bee5biCXCIsXG5cdCAgICBcIjQ1MTI4MlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI0NTEzMDBcIjogXCLmnaXlrr7luIJcIixcblx0ICAgIFwiNDUxMzAyXCI6IFwi5YW05a6+5Yy6XCIsXG5cdCAgICBcIjQ1MTMyMVwiOiBcIuW/u+WfjuWOv1wiLFxuXHQgICAgXCI0NTEzMjJcIjogXCLosaHlt57ljr9cIixcblx0ICAgIFwiNDUxMzIzXCI6IFwi5q2m5a6j5Y6/XCIsXG5cdCAgICBcIjQ1MTMyNFwiOiBcIumHkeengOeRtuaXj+iHquayu+WOv1wiLFxuXHQgICAgXCI0NTEzODFcIjogXCLlkIjlsbHluIJcIixcblx0ICAgIFwiNDUxMzgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQ1MTQwMFwiOiBcIuW0h+W3puW4glwiLFxuXHQgICAgXCI0NTE0MDJcIjogXCLmsZ/lt57ljLpcIixcblx0ICAgIFwiNDUxNDIxXCI6IFwi5om257ul5Y6/XCIsXG5cdCAgICBcIjQ1MTQyMlwiOiBcIuWugeaYjuWOv1wiLFxuXHQgICAgXCI0NTE0MjNcIjogXCLpvpnlt57ljr9cIixcblx0ICAgIFwiNDUxNDI0XCI6IFwi5aSn5paw5Y6/XCIsXG5cdCAgICBcIjQ1MTQyNVwiOiBcIuWkqeetieWOv1wiLFxuXHQgICAgXCI0NTE0ODFcIjogXCLlh63npaXluIJcIixcblx0ICAgIFwiNDUxNDgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjQ2MDAwMFwiOiBcIua1t+WNl+ecgVwiLFxuXHQgICAgXCI0NjAxMDBcIjogXCLmtbflj6PluIJcIixcblx0ICAgIFwiNDYwMTA1XCI6IFwi56eA6Iux5Yy6XCIsXG5cdCAgICBcIjQ2MDEwNlwiOiBcIum+meWNjuWMulwiLFxuXHQgICAgXCI0NjAxMDdcIjogXCLnkLzlsbHljLpcIixcblx0ICAgIFwiNDYwMTA4XCI6IFwi576O5YWw5Yy6XCIsXG5cdCAgICBcIjQ2MDEwOVwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI0NjAyMDBcIjogXCLkuInkuprluIJcIixcblx0ICAgIFwiNDYwMzAwXCI6IFwi5LiJ5rKZ5biCXCIsXG5cdCAgICBcIjQ2MDMyMVwiOiBcIuilv+aymee+pOWym1wiLFxuXHQgICAgXCI0NjAzMjJcIjogXCLljZfmspnnvqTlsptcIixcblx0ICAgIFwiNDYwMzIzXCI6IFwi5Lit5rKZ576k5bKb55qE5bKb56SB5Y+K5YW25rW35Z+fXCIsXG5cdCAgICBcIjQ2OTAwMVwiOiBcIuS6lOaMh+WxseW4glwiLFxuXHQgICAgXCI0NjkwMDJcIjogXCLnkLzmtbfluIJcIixcblx0ICAgIFwiNDY5MDAzXCI6IFwi5YSL5bee5biCXCIsXG5cdCAgICBcIjQ2OTAwNVwiOiBcIuaWh+aYjOW4glwiLFxuXHQgICAgXCI0NjkwMDZcIjogXCLkuIflroHluIJcIixcblx0ICAgIFwiNDY5MDA3XCI6IFwi5Lic5pa55biCXCIsXG5cdCAgICBcIjQ2OTAyNVwiOiBcIuWumuWuieWOv1wiLFxuXHQgICAgXCI0NjkwMjZcIjogXCLlsa/mmIzljr9cIixcblx0ICAgIFwiNDY5MDI3XCI6IFwi5r6E6L+I5Y6/XCIsXG5cdCAgICBcIjQ2OTAyOFwiOiBcIuS4tOmrmOWOv1wiLFxuXHQgICAgXCI0NjkwMzBcIjogXCLnmb3mspnpu47ml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNDY5MDMxXCI6IFwi5piM5rGf6buO5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjQ2OTAzM1wiOiBcIuS5kOS4nOm7juaXj+iHquayu+WOv1wiLFxuXHQgICAgXCI0NjkwMzRcIjogXCLpmbXmsLTpu47ml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNDY5MDM1XCI6IFwi5L+d5Lqt6buO5peP6IuX5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjQ2OTAzNlwiOiBcIueQvOS4rem7juaXj+iLl+aXj+iHquayu+WOv1wiLFxuXHQgICAgXCI0NzEwMDVcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNTAwMDAwXCI6IFwi6YeN5bqGXCIsXG5cdCAgICBcIjUwMDEwMFwiOiBcIumHjeW6huW4glwiLFxuXHQgICAgXCI1MDAxMDFcIjogXCLkuIflt57ljLpcIixcblx0ICAgIFwiNTAwMTAyXCI6IFwi5raq6Zm15Yy6XCIsXG5cdCAgICBcIjUwMDEwM1wiOiBcIua4neS4reWMulwiLFxuXHQgICAgXCI1MDAxMDRcIjogXCLlpKfmuKHlj6PljLpcIixcblx0ICAgIFwiNTAwMTA1XCI6IFwi5rGf5YyX5Yy6XCIsXG5cdCAgICBcIjUwMDEwNlwiOiBcIuaymeWdquWdneWMulwiLFxuXHQgICAgXCI1MDAxMDdcIjogXCLkuZ3pvpnlnaHljLpcIixcblx0ICAgIFwiNTAwMTA4XCI6IFwi5Y2X5bK45Yy6XCIsXG5cdCAgICBcIjUwMDEwOVwiOiBcIuWMl+eimuWMulwiLFxuXHQgICAgXCI1MDAxMTBcIjogXCLkuIfnm5vljLpcIixcblx0ICAgIFwiNTAwMTExXCI6IFwi5Y+M5qGl5Yy6XCIsXG5cdCAgICBcIjUwMDExMlwiOiBcIua4neWMl+WMulwiLFxuXHQgICAgXCI1MDAxMTNcIjogXCLlt7TljZfljLpcIixcblx0ICAgIFwiNTAwMTE0XCI6IFwi6buU5rGf5Yy6XCIsXG5cdCAgICBcIjUwMDExNVwiOiBcIumVv+Wvv+WMulwiLFxuXHQgICAgXCI1MDAyMjJcIjogXCLntqbmsZ/ljLpcIixcblx0ICAgIFwiNTAwMjIzXCI6IFwi5r285Y2X5Y6/XCIsXG5cdCAgICBcIjUwMDIyNFwiOiBcIumTnOaigeWOv1wiLFxuXHQgICAgXCI1MDAyMjVcIjogXCLlpKfotrPljLpcIixcblx0ICAgIFwiNTAwMjI2XCI6IFwi6I2j5piM5Y6/XCIsXG5cdCAgICBcIjUwMDIyN1wiOiBcIueSp+WxseWOv1wiLFxuXHQgICAgXCI1MDAyMjhcIjogXCLmooHlubPljr9cIixcblx0ICAgIFwiNTAwMjI5XCI6IFwi5Z+O5Y+j5Y6/XCIsXG5cdCAgICBcIjUwMDIzMFwiOiBcIuS4sOmDveWOv1wiLFxuXHQgICAgXCI1MDAyMzFcIjogXCLlnqvmsZ/ljr9cIixcblx0ICAgIFwiNTAwMjMyXCI6IFwi5q2m6ZqG5Y6/XCIsXG5cdCAgICBcIjUwMDIzM1wiOiBcIuW/oOWOv1wiLFxuXHQgICAgXCI1MDAyMzRcIjogXCLlvIDljr9cIixcblx0ICAgIFwiNTAwMjM1XCI6IFwi5LqR6Ziz5Y6/XCIsXG5cdCAgICBcIjUwMDIzNlwiOiBcIuWlieiKguWOv1wiLFxuXHQgICAgXCI1MDAyMzdcIjogXCLlt6vlsbHljr9cIixcblx0ICAgIFwiNTAwMjM4XCI6IFwi5ber5rqq5Y6/XCIsXG5cdCAgICBcIjUwMDI0MFwiOiBcIuefs+afseWcn+WutuaXj+iHquayu+WOv1wiLFxuXHQgICAgXCI1MDAyNDFcIjogXCLnp4DlsbHlnJ/lrrbml4/oi5fml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNTAwMjQyXCI6IFwi6YWJ6Ziz5Zyf5a625peP6IuX5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjUwMDI0M1wiOiBcIuW9reawtOiLl+aXj+Wcn+WutuaXj+iHquayu+WOv1wiLFxuXHQgICAgXCI1MDAzODFcIjogXCLmsZ/mtKXljLpcIixcblx0ICAgIFwiNTAwMzgyXCI6IFwi5ZCI5bed5Yy6XCIsXG5cdCAgICBcIjUwMDM4M1wiOiBcIuawuOW3neWMulwiLFxuXHQgICAgXCI1MDAzODRcIjogXCLljZflt53ljLpcIixcblx0ICAgIFwiNTAwMzg1XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjUxMDAwMFwiOiBcIuWbm+W3neecgVwiLFxuXHQgICAgXCI1MTAxMDBcIjogXCLmiJDpg73luIJcIixcblx0ICAgIFwiNTEwMTA0XCI6IFwi6ZSm5rGf5Yy6XCIsXG5cdCAgICBcIjUxMDEwNVwiOiBcIumdkue+iuWMulwiLFxuXHQgICAgXCI1MTAxMDZcIjogXCLph5HniZvljLpcIixcblx0ICAgIFwiNTEwMTA3XCI6IFwi5q2m5L6v5Yy6XCIsXG5cdCAgICBcIjUxMDEwOFwiOiBcIuaIkOWNjuWMulwiLFxuXHQgICAgXCI1MTAxMTJcIjogXCLpvpnms4npqb/ljLpcIixcblx0ICAgIFwiNTEwMTEzXCI6IFwi6Z2S55m95rGf5Yy6XCIsXG5cdCAgICBcIjUxMDExNFwiOiBcIuaWsOmDveWMulwiLFxuXHQgICAgXCI1MTAxMTVcIjogXCLmuKnmsZ/ljLpcIixcblx0ICAgIFwiNTEwMTIxXCI6IFwi6YeR5aCC5Y6/XCIsXG5cdCAgICBcIjUxMDEyMlwiOiBcIuWPjOa1geWOv1wiLFxuXHQgICAgXCI1MTAxMjRcIjogXCLpg6vljr9cIixcblx0ICAgIFwiNTEwMTI5XCI6IFwi5aSn6YKR5Y6/XCIsXG5cdCAgICBcIjUxMDEzMVwiOiBcIuiSsuaxn+WOv1wiLFxuXHQgICAgXCI1MTAxMzJcIjogXCLmlrDmtKXljr9cIixcblx0ICAgIFwiNTEwMTgxXCI6IFwi6YO95rGf5aCw5biCXCIsXG5cdCAgICBcIjUxMDE4MlwiOiBcIuW9reW3nuW4glwiLFxuXHQgICAgXCI1MTAxODNcIjogXCLpgpvltIPluIJcIixcblx0ICAgIFwiNTEwMTg0XCI6IFwi5bSH5bee5biCXCIsXG5cdCAgICBcIjUxMDE4NVwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI1MTAzMDBcIjogXCLoh6rotKHluIJcIixcblx0ICAgIFwiNTEwMzAyXCI6IFwi6Ieq5rWB5LqV5Yy6XCIsXG5cdCAgICBcIjUxMDMwM1wiOiBcIui0oeS6leWMulwiLFxuXHQgICAgXCI1MTAzMDRcIjogXCLlpKflronljLpcIixcblx0ICAgIFwiNTEwMzExXCI6IFwi5rK/5rup5Yy6XCIsXG5cdCAgICBcIjUxMDMyMVwiOiBcIuiNo+WOv1wiLFxuXHQgICAgXCI1MTAzMjJcIjogXCLlr4zpobrljr9cIixcblx0ICAgIFwiNTEwMzIzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjUxMDQwMFwiOiBcIuaUgOaeneiKseW4glwiLFxuXHQgICAgXCI1MTA0MDJcIjogXCLkuJzljLpcIixcblx0ICAgIFwiNTEwNDAzXCI6IFwi6KW/5Yy6XCIsXG5cdCAgICBcIjUxMDQxMVwiOiBcIuS7geWSjOWMulwiLFxuXHQgICAgXCI1MTA0MjFcIjogXCLnsbPmmJPljr9cIixcblx0ICAgIFwiNTEwNDIyXCI6IFwi55uQ6L655Y6/XCIsXG5cdCAgICBcIjUxMDQyM1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI1MTA1MDBcIjogXCLms7jlt57luIJcIixcblx0ICAgIFwiNTEwNTAyXCI6IFwi5rGf6Ziz5Yy6XCIsXG5cdCAgICBcIjUxMDUwM1wiOiBcIue6s+a6quWMulwiLFxuXHQgICAgXCI1MTA1MDRcIjogXCLpvpnpqazmva3ljLpcIixcblx0ICAgIFwiNTEwNTIxXCI6IFwi5rO45Y6/XCIsXG5cdCAgICBcIjUxMDUyMlwiOiBcIuWQiOaxn+WOv1wiLFxuXHQgICAgXCI1MTA1MjRcIjogXCLlj5nmsLjljr9cIixcblx0ICAgIFwiNTEwNTI1XCI6IFwi5Y+k6JS65Y6/XCIsXG5cdCAgICBcIjUxMDUyNlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI1MTA2MDBcIjogXCLlvrfpmLPluIJcIixcblx0ICAgIFwiNTEwNjAzXCI6IFwi5peM6Ziz5Yy6XCIsXG5cdCAgICBcIjUxMDYyM1wiOiBcIuS4reaxn+WOv1wiLFxuXHQgICAgXCI1MTA2MjZcIjogXCLnvZfmsZ/ljr9cIixcblx0ICAgIFwiNTEwNjgxXCI6IFwi5bm/5rGJ5biCXCIsXG5cdCAgICBcIjUxMDY4MlwiOiBcIuS7gOmCoeW4glwiLFxuXHQgICAgXCI1MTA2ODNcIjogXCLnu7Xnq7nluIJcIixcblx0ICAgIFwiNTEwNjg0XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjUxMDcwMFwiOiBcIue7temYs+W4glwiLFxuXHQgICAgXCI1MTA3MDNcIjogXCLmtqrln47ljLpcIixcblx0ICAgIFwiNTEwNzA0XCI6IFwi5ri45LuZ5Yy6XCIsXG5cdCAgICBcIjUxMDcyMlwiOiBcIuS4ieWPsOWOv1wiLFxuXHQgICAgXCI1MTA3MjNcIjogXCLnm5Dkuq3ljr9cIixcblx0ICAgIFwiNTEwNzI0XCI6IFwi5a6J5Y6/XCIsXG5cdCAgICBcIjUxMDcyNVwiOiBcIuaik+a9vOWOv1wiLFxuXHQgICAgXCI1MTA3MjZcIjogXCLljJflt53nvozml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNTEwNzI3XCI6IFwi5bmz5q2m5Y6/XCIsXG5cdCAgICBcIjUxMDc4MVwiOiBcIuaxn+ayueW4glwiLFxuXHQgICAgXCI1MTA3ODJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNTEwODAwXCI6IFwi5bm/5YWD5biCXCIsXG5cdCAgICBcIjUxMDgwMlwiOiBcIuWIqeW3nuWMulwiLFxuXHQgICAgXCI1MTA4MTFcIjogXCLmmK3ljJbljLpcIixcblx0ICAgIFwiNTEwODEyXCI6IFwi5pyd5aSp5Yy6XCIsXG5cdCAgICBcIjUxMDgyMVwiOiBcIuaXuuiLjeWOv1wiLFxuXHQgICAgXCI1MTA4MjJcIjogXCLpnZLlt53ljr9cIixcblx0ICAgIFwiNTEwODIzXCI6IFwi5YmR6ZiB5Y6/XCIsXG5cdCAgICBcIjUxMDgyNFwiOiBcIuiLjea6quWOv1wiLFxuXHQgICAgXCI1MTA4MjVcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNTEwOTAwXCI6IFwi6YGC5a6B5biCXCIsXG5cdCAgICBcIjUxMDkwM1wiOiBcIuiIueWxseWMulwiLFxuXHQgICAgXCI1MTA5MDRcIjogXCLlronlsYXljLpcIixcblx0ICAgIFwiNTEwOTIxXCI6IFwi6JOs5rqq5Y6/XCIsXG5cdCAgICBcIjUxMDkyMlwiOiBcIuWwhOa0quWOv1wiLFxuXHQgICAgXCI1MTA5MjNcIjogXCLlpKfoi7Hljr9cIixcblx0ICAgIFwiNTEwOTI0XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjUxMTAwMFwiOiBcIuWGheaxn+W4glwiLFxuXHQgICAgXCI1MTEwMDJcIjogXCLluILkuK3ljLpcIixcblx0ICAgIFwiNTExMDExXCI6IFwi5Lic5YW05Yy6XCIsXG5cdCAgICBcIjUxMTAyNFwiOiBcIuWogei/nOWOv1wiLFxuXHQgICAgXCI1MTEwMjVcIjogXCLotYTkuK3ljr9cIixcblx0ICAgIFwiNTExMDI4XCI6IFwi6ZqG5piM5Y6/XCIsXG5cdCAgICBcIjUxMTAyOVwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI1MTExMDBcIjogXCLkuZDlsbHluIJcIixcblx0ICAgIFwiNTExMTAyXCI6IFwi5biC5Lit5Yy6XCIsXG5cdCAgICBcIjUxMTExMVwiOiBcIuaymea5vuWMulwiLFxuXHQgICAgXCI1MTExMTJcIjogXCLkupTpgJrmoaXljLpcIixcblx0ICAgIFwiNTExMTEzXCI6IFwi6YeR5Y+j5rKz5Yy6XCIsXG5cdCAgICBcIjUxMTEyM1wiOiBcIueKjeS4uuWOv1wiLFxuXHQgICAgXCI1MTExMjRcIjogXCLkupXnoJTljr9cIixcblx0ICAgIFwiNTExMTI2XCI6IFwi5aS55rGf5Y6/XCIsXG5cdCAgICBcIjUxMTEyOVwiOiBcIuaykOW3neWOv1wiLFxuXHQgICAgXCI1MTExMzJcIjogXCLls6jovrnlvZ3ml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNTExMTMzXCI6IFwi6ams6L655b2d5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjUxMTE4MVwiOiBcIuWzqOecieWxseW4glwiLFxuXHQgICAgXCI1MTExODJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNTExMzAwXCI6IFwi5Y2X5YWF5biCXCIsXG5cdCAgICBcIjUxMTMwMlwiOiBcIumhuuW6huWMulwiLFxuXHQgICAgXCI1MTEzMDNcIjogXCLpq5jlnarljLpcIixcblx0ICAgIFwiNTExMzA0XCI6IFwi5ZiJ6Zm15Yy6XCIsXG5cdCAgICBcIjUxMTMyMVwiOiBcIuWNl+mDqOWOv1wiLFxuXHQgICAgXCI1MTEzMjJcIjogXCLokKXlsbHljr9cIixcblx0ICAgIFwiNTExMzIzXCI6IFwi6JOs5a6J5Y6/XCIsXG5cdCAgICBcIjUxMTMyNFwiOiBcIuS7qumZh+WOv1wiLFxuXHQgICAgXCI1MTEzMjVcIjogXCLopb/lhYXljr9cIixcblx0ICAgIFwiNTExMzgxXCI6IFwi6ZiG5Lit5biCXCIsXG5cdCAgICBcIjUxMTM4MlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI1MTE0MDBcIjogXCLnnInlsbHluIJcIixcblx0ICAgIFwiNTExNDAyXCI6IFwi5Lic5Z2h5Yy6XCIsXG5cdCAgICBcIjUxMTQyMVwiOiBcIuS7geWvv+WOv1wiLFxuXHQgICAgXCI1MTE0MjJcIjogXCLlva3lsbHljr9cIixcblx0ICAgIFwiNTExNDIzXCI6IFwi5rSq6ZuF5Y6/XCIsXG5cdCAgICBcIjUxMTQyNFwiOiBcIuS4ueajseWOv1wiLFxuXHQgICAgXCI1MTE0MjVcIjogXCLpnZLnpZ7ljr9cIixcblx0ICAgIFwiNTExNDI2XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjUxMTUwMFwiOiBcIuWunOWuvuW4glwiLFxuXHQgICAgXCI1MTE1MDJcIjogXCLnv6DlsY/ljLpcIixcblx0ICAgIFwiNTExNTIxXCI6IFwi5a6c5a6+5Y6/XCIsXG5cdCAgICBcIjUxMTUyMlwiOiBcIuWNl+a6quWMulwiLFxuXHQgICAgXCI1MTE1MjNcIjogXCLmsZ/lronljr9cIixcblx0ICAgIFwiNTExNTI0XCI6IFwi6ZW/5a6B5Y6/XCIsXG5cdCAgICBcIjUxMTUyNVwiOiBcIumrmOWOv1wiLFxuXHQgICAgXCI1MTE1MjZcIjogXCLnj5nljr9cIixcblx0ICAgIFwiNTExNTI3XCI6IFwi562g6L+e5Y6/XCIsXG5cdCAgICBcIjUxMTUyOFwiOiBcIuWFtOaWh+WOv1wiLFxuXHQgICAgXCI1MTE1MjlcIjogXCLlsY/lsbHljr9cIixcblx0ICAgIFwiNTExNTMwXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjUxMTYwMFwiOiBcIuW5v+WuieW4glwiLFxuXHQgICAgXCI1MTE2MDJcIjogXCLlub/lronljLpcIixcblx0ICAgIFwiNTExNjAzXCI6IFwi5YmN6ZSL5Yy6XCIsXG5cdCAgICBcIjUxMTYyMVwiOiBcIuWys+axoOWOv1wiLFxuXHQgICAgXCI1MTE2MjJcIjogXCLmrabog5zljr9cIixcblx0ICAgIFwiNTExNjIzXCI6IFwi6YK75rC05Y6/XCIsXG5cdCAgICBcIjUxMTY4MVwiOiBcIuWNjuiTpeW4glwiLFxuXHQgICAgXCI1MTE2ODNcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNTExNzAwXCI6IFwi6L6+5bee5biCXCIsXG5cdCAgICBcIjUxMTcwMlwiOiBcIumAmuW3neWMulwiLFxuXHQgICAgXCI1MTE3MjFcIjogXCLovr7lt53ljLpcIixcblx0ICAgIFwiNTExNzIyXCI6IFwi5a6j5rGJ5Y6/XCIsXG5cdCAgICBcIjUxMTcyM1wiOiBcIuW8gOaxn+WOv1wiLFxuXHQgICAgXCI1MTE3MjRcIjogXCLlpKfnq7nljr9cIixcblx0ICAgIFwiNTExNzI1XCI6IFwi5rig5Y6/XCIsXG5cdCAgICBcIjUxMTc4MVwiOiBcIuS4h+a6kOW4glwiLFxuXHQgICAgXCI1MTE3ODJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNTExODAwXCI6IFwi6ZuF5a6J5biCXCIsXG5cdCAgICBcIjUxMTgwMlwiOiBcIumbqOWfjuWMulwiLFxuXHQgICAgXCI1MTE4MjFcIjogXCLlkI3lsbHljLpcIixcblx0ICAgIFwiNTExODIyXCI6IFwi6I2l57uP5Y6/XCIsXG5cdCAgICBcIjUxMTgyM1wiOiBcIuaxiea6kOWOv1wiLFxuXHQgICAgXCI1MTE4MjRcIjogXCLnn7Pmo4nljr9cIixcblx0ICAgIFwiNTExODI1XCI6IFwi5aSp5YWo5Y6/XCIsXG5cdCAgICBcIjUxMTgyNlwiOiBcIuiKpuWxseWOv1wiLFxuXHQgICAgXCI1MTE4MjdcIjogXCLlrp3lhbTljr9cIixcblx0ICAgIFwiNTExODI4XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjUxMTkwMFwiOiBcIuW3tOS4reW4glwiLFxuXHQgICAgXCI1MTE5MDJcIjogXCLlt7Tlt57ljLpcIixcblx0ICAgIFwiNTExOTAzXCI6IFwi5oGp6Ziz5Yy6XCIsXG5cdCAgICBcIjUxMTkyMVwiOiBcIumAmuaxn+WOv1wiLFxuXHQgICAgXCI1MTE5MjJcIjogXCLljZfmsZ/ljr9cIixcblx0ICAgIFwiNTExOTIzXCI6IFwi5bmz5piM5Y6/XCIsXG5cdCAgICBcIjUxMTkyNFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI1MTIwMDBcIjogXCLotYTpmLPluIJcIixcblx0ICAgIFwiNTEyMDAyXCI6IFwi6ZuB5rGf5Yy6XCIsXG5cdCAgICBcIjUxMjAyMVwiOiBcIuWuieWys+WOv1wiLFxuXHQgICAgXCI1MTIwMjJcIjogXCLkuZDoh7Pljr9cIixcblx0ICAgIFwiNTEyMDgxXCI6IFwi566A6Ziz5biCXCIsXG5cdCAgICBcIjUxMjA4MlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI1MTMyMDBcIjogXCLpmL/lnZ3ol4/ml4/nvozml4/oh6rmsrvlt55cIixcblx0ICAgIFwiNTEzMjIxXCI6IFwi5rG25bed5Y6/XCIsXG5cdCAgICBcIjUxMzIyMlwiOiBcIueQhuWOv1wiLFxuXHQgICAgXCI1MTMyMjNcIjogXCLojILljr9cIixcblx0ICAgIFwiNTEzMjI0XCI6IFwi5p2+5r2Y5Y6/XCIsXG5cdCAgICBcIjUxMzIyNVwiOiBcIuS5neWvqOayn+WOv1wiLFxuXHQgICAgXCI1MTMyMjZcIjogXCLph5Hlt53ljr9cIixcblx0ICAgIFwiNTEzMjI3XCI6IFwi5bCP6YeR5Y6/XCIsXG5cdCAgICBcIjUxMzIyOFwiOiBcIum7keawtOWOv1wiLFxuXHQgICAgXCI1MTMyMjlcIjogXCLpqazlsJTlurfljr9cIixcblx0ICAgIFwiNTEzMjMwXCI6IFwi5aOk5aGY5Y6/XCIsXG5cdCAgICBcIjUxMzIzMVwiOiBcIumYv+WdneWOv1wiLFxuXHQgICAgXCI1MTMyMzJcIjogXCLoi6XlsJTnm5bljr9cIixcblx0ICAgIFwiNTEzMjMzXCI6IFwi57qi5Y6f5Y6/XCIsXG5cdCAgICBcIjUxMzIzNFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI1MTMzMDBcIjogXCLnlJjlrZzol4/ml4/oh6rmsrvlt55cIixcblx0ICAgIFwiNTEzMzIxXCI6IFwi5bq35a6a5Y6/XCIsXG5cdCAgICBcIjUxMzMyMlwiOiBcIuazuOWumuWOv1wiLFxuXHQgICAgXCI1MTMzMjNcIjogXCLkuLnlt7Tljr9cIixcblx0ICAgIFwiNTEzMzI0XCI6IFwi5Lmd6b6Z5Y6/XCIsXG5cdCAgICBcIjUxMzMyNVwiOiBcIumbheaxn+WOv1wiLFxuXHQgICAgXCI1MTMzMjZcIjogXCLpgZPlrZrljr9cIixcblx0ICAgIFwiNTEzMzI3XCI6IFwi54KJ6ZyN5Y6/XCIsXG5cdCAgICBcIjUxMzMyOFwiOiBcIueUmOWtnOWOv1wiLFxuXHQgICAgXCI1MTMzMjlcIjogXCLmlrDpvpnljr9cIixcblx0ICAgIFwiNTEzMzMwXCI6IFwi5b635qC85Y6/XCIsXG5cdCAgICBcIjUxMzMzMVwiOiBcIueZveeOieWOv1wiLFxuXHQgICAgXCI1MTMzMzJcIjogXCLnn7PmuKDljr9cIixcblx0ICAgIFwiNTEzMzMzXCI6IFwi6Imy6L6+5Y6/XCIsXG5cdCAgICBcIjUxMzMzNFwiOiBcIueQhuWhmOWOv1wiLFxuXHQgICAgXCI1MTMzMzVcIjogXCLlt7TloZjljr9cIixcblx0ICAgIFwiNTEzMzM2XCI6IFwi5Lmh5Z+O5Y6/XCIsXG5cdCAgICBcIjUxMzMzN1wiOiBcIueou+WfjuWOv1wiLFxuXHQgICAgXCI1MTMzMzhcIjogXCLlvpfojaPljr9cIixcblx0ICAgIFwiNTEzMzM5XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjUxMzQwMFwiOiBcIuWHieWxseW9neaXj+iHquayu+W3nlwiLFxuXHQgICAgXCI1MTM0MDFcIjogXCLopb/mmIzluIJcIixcblx0ICAgIFwiNTEzNDIyXCI6IFwi5pyo6YeM6JeP5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjUxMzQyM1wiOiBcIuebkOa6kOWOv1wiLFxuXHQgICAgXCI1MTM0MjRcIjogXCLlvrfmmIzljr9cIixcblx0ICAgIFwiNTEzNDI1XCI6IFwi5Lya55CG5Y6/XCIsXG5cdCAgICBcIjUxMzQyNlwiOiBcIuS8muS4nOWOv1wiLFxuXHQgICAgXCI1MTM0MjdcIjogXCLlroHljZfljr9cIixcblx0ICAgIFwiNTEzNDI4XCI6IFwi5pmu5qC85Y6/XCIsXG5cdCAgICBcIjUxMzQyOVwiOiBcIuW4g+aLluWOv1wiLFxuXHQgICAgXCI1MTM0MzBcIjogXCLph5HpmLPljr9cIixcblx0ICAgIFwiNTEzNDMxXCI6IFwi5pit6KeJ5Y6/XCIsXG5cdCAgICBcIjUxMzQzMlwiOiBcIuWWnOW+t+WOv1wiLFxuXHQgICAgXCI1MTM0MzNcIjogXCLlhpXlroHljr9cIixcblx0ICAgIFwiNTEzNDM0XCI6IFwi6LaK6KW/5Y6/XCIsXG5cdCAgICBcIjUxMzQzNVwiOiBcIueUmOa0m+WOv1wiLFxuXHQgICAgXCI1MTM0MzZcIjogXCLnvo7lp5Hljr9cIixcblx0ICAgIFwiNTEzNDM3XCI6IFwi6Zu35rOi5Y6/XCIsXG5cdCAgICBcIjUxMzQzOFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI1MjAwMDBcIjogXCLotLXlt57nnIFcIixcblx0ICAgIFwiNTIwMTAwXCI6IFwi6LS16Ziz5biCXCIsXG5cdCAgICBcIjUyMDEwMlwiOiBcIuWNl+aYjuWMulwiLFxuXHQgICAgXCI1MjAxMDNcIjogXCLkupHlsqnljLpcIixcblx0ICAgIFwiNTIwMTExXCI6IFwi6Iqx5rqq5Yy6XCIsXG5cdCAgICBcIjUyMDExMlwiOiBcIuS5jOW9k+WMulwiLFxuXHQgICAgXCI1MjAxMTNcIjogXCLnmb3kupHljLpcIixcblx0ICAgIFwiNTIwMTIxXCI6IFwi5byA6Ziz5Y6/XCIsXG5cdCAgICBcIjUyMDEyMlwiOiBcIuaBr+eDveWOv1wiLFxuXHQgICAgXCI1MjAxMjNcIjogXCLkv67mlofljr9cIixcblx0ICAgIFwiNTIwMTUxXCI6IFwi6KeC5bGx5rmW5Yy6XCIsXG5cdCAgICBcIjUyMDE4MVwiOiBcIua4hemVh+W4glwiLFxuXHQgICAgXCI1MjAxODJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNTIwMjAwXCI6IFwi5YWt55uY5rC05biCXCIsXG5cdCAgICBcIjUyMDIwMVwiOiBcIumSn+WxseWMulwiLFxuXHQgICAgXCI1MjAyMDNcIjogXCLlha3mnp3nibnljLpcIixcblx0ICAgIFwiNTIwMjIxXCI6IFwi5rC05Z+O5Y6/XCIsXG5cdCAgICBcIjUyMDIyMlwiOiBcIuebmOWOv1wiLFxuXHQgICAgXCI1MjAyMjNcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNTIwMzAwXCI6IFwi6YG15LmJ5biCXCIsXG5cdCAgICBcIjUyMDMwMlwiOiBcIue6ouiKseWyl+WMulwiLFxuXHQgICAgXCI1MjAzMDNcIjogXCLmsYflt53ljLpcIixcblx0ICAgIFwiNTIwMzIxXCI6IFwi6YG15LmJ5Y6/XCIsXG5cdCAgICBcIjUyMDMyMlwiOiBcIuahkOaik+WOv1wiLFxuXHQgICAgXCI1MjAzMjNcIjogXCLnu6XpmLPljr9cIixcblx0ICAgIFwiNTIwMzI0XCI6IFwi5q2j5a6J5Y6/XCIsXG5cdCAgICBcIjUyMDMyNVwiOiBcIumBk+ecn+S7oeS9rOaXj+iLl+aXj+iHquayu+WOv1wiLFxuXHQgICAgXCI1MjAzMjZcIjogXCLliqHlt53ku6Hkvazml4/oi5fml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNTIwMzI3XCI6IFwi5Yek5YaI5Y6/XCIsXG5cdCAgICBcIjUyMDMyOFwiOiBcIua5hOa9reWOv1wiLFxuXHQgICAgXCI1MjAzMjlcIjogXCLkvZnluobljr9cIixcblx0ICAgIFwiNTIwMzMwXCI6IFwi5Lmg5rC05Y6/XCIsXG5cdCAgICBcIjUyMDM4MVwiOiBcIui1pOawtOW4glwiLFxuXHQgICAgXCI1MjAzODJcIjogXCLku4HmgIDluIJcIixcblx0ICAgIFwiNTIwMzgzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjUyMDQwMFwiOiBcIuWuiemhuuW4glwiLFxuXHQgICAgXCI1MjA0MDJcIjogXCLopb/np4DljLpcIixcblx0ICAgIFwiNTIwNDIxXCI6IFwi5bmz5Z2d5Y6/XCIsXG5cdCAgICBcIjUyMDQyMlwiOiBcIuaZruWumuWOv1wiLFxuXHQgICAgXCI1MjA0MjNcIjogXCLplYflroHluIPkvp3ml4/oi5fml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNTIwNDI0XCI6IFwi5YWz5bKt5biD5L6d5peP6IuX5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjUyMDQyNVwiOiBcIue0q+S6keiLl+aXj+W4g+S+neaXj+iHquayu+WOv1wiLFxuXHQgICAgXCI1MjA0MjZcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNTIyMjAwXCI6IFwi6ZOc5LuB5biCXCIsXG5cdCAgICBcIjUyMjIwMVwiOiBcIueip+axn+WMulwiLFxuXHQgICAgXCI1MjIyMjJcIjogXCLmsZ/lj6Pljr9cIixcblx0ICAgIFwiNTIyMjIzXCI6IFwi546J5bGP5L6X5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjUyMjIyNFwiOiBcIuefs+mYoeWOv1wiLFxuXHQgICAgXCI1MjIyMjVcIjogXCLmgJ3ljZfljr9cIixcblx0ICAgIFwiNTIyMjI2XCI6IFwi5Y2w5rGf5Zyf5a625peP6IuX5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjUyMjIyN1wiOiBcIuW+t+axn+WOv1wiLFxuXHQgICAgXCI1MjIyMjhcIjogXCLmsr/msrPlnJ/lrrbml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNTIyMjI5XCI6IFwi5p2+5qGD6IuX5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjUyMjIzMFwiOiBcIuS4h+WxseWMulwiLFxuXHQgICAgXCI1MjIyMzFcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNTIyMzAwXCI6IFwi6buU6KW/5Y2X5biD5L6d5peP6IuX5peP6Ieq5rK75beeXCIsXG5cdCAgICBcIjUyMjMwMVwiOiBcIuWFtOS5ieW4glwiLFxuXHQgICAgXCI1MjIzMjJcIjogXCLlhbTku4Hljr9cIixcblx0ICAgIFwiNTIyMzIzXCI6IFwi5pmu5a6J5Y6/XCIsXG5cdCAgICBcIjUyMjMyNFwiOiBcIuaZtOmahuWOv1wiLFxuXHQgICAgXCI1MjIzMjVcIjogXCLotJ7kuLDljr9cIixcblx0ICAgIFwiNTIyMzI2XCI6IFwi5pyb6LCf5Y6/XCIsXG5cdCAgICBcIjUyMjMyN1wiOiBcIuWGjOS6qOWOv1wiLFxuXHQgICAgXCI1MjIzMjhcIjogXCLlronpvpnljr9cIixcblx0ICAgIFwiNTIyMzI5XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjUyMjQwMFwiOiBcIuavleiKguW4glwiLFxuXHQgICAgXCI1MjI0MDFcIjogXCLkuIPmmJ/lhbPljLpcIixcblx0ICAgIFwiNTIyNDIyXCI6IFwi5aSn5pa55Y6/XCIsXG5cdCAgICBcIjUyMjQyM1wiOiBcIum7lOilv+WOv1wiLFxuXHQgICAgXCI1MjI0MjRcIjogXCLph5Hmspnljr9cIixcblx0ICAgIFwiNTIyNDI1XCI6IFwi57uH6YeR5Y6/XCIsXG5cdCAgICBcIjUyMjQyNlwiOiBcIue6s+mbjeWOv1wiLFxuXHQgICAgXCI1MjI0MjdcIjogXCLlqIHlroHlvZ3ml4/lm57ml4/oi5fml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNTIyNDI4XCI6IFwi6LWr56ug5Y6/XCIsXG5cdCAgICBcIjUyMjQyOVwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI1MjI2MDBcIjogXCLpu5TkuJzljZfoi5fml4/kvpfml4/oh6rmsrvlt55cIixcblx0ICAgIFwiNTIyNjAxXCI6IFwi5Yev6YeM5biCXCIsXG5cdCAgICBcIjUyMjYyMlwiOiBcIum7hOW5s+WOv1wiLFxuXHQgICAgXCI1MjI2MjNcIjogXCLmlr3np4nljr9cIixcblx0ICAgIFwiNTIyNjI0XCI6IFwi5LiJ56mX5Y6/XCIsXG5cdCAgICBcIjUyMjYyNVwiOiBcIumVh+i/nOWOv1wiLFxuXHQgICAgXCI1MjI2MjZcIjogXCLlspHlt6nljr9cIixcblx0ICAgIFwiNTIyNjI3XCI6IFwi5aSp5p+x5Y6/XCIsXG5cdCAgICBcIjUyMjYyOFwiOiBcIumUpuWxj+WOv1wiLFxuXHQgICAgXCI1MjI2MjlcIjogXCLliZHmsrPljr9cIixcblx0ICAgIFwiNTIyNjMwXCI6IFwi5Y+w5rGf5Y6/XCIsXG5cdCAgICBcIjUyMjYzMVwiOiBcIum7juW5s+WOv1wiLFxuXHQgICAgXCI1MjI2MzJcIjogXCLmppXmsZ/ljr9cIixcblx0ICAgIFwiNTIyNjMzXCI6IFwi5LuO5rGf5Y6/XCIsXG5cdCAgICBcIjUyMjYzNFwiOiBcIumbt+WxseWOv1wiLFxuXHQgICAgXCI1MjI2MzVcIjogXCLpurvmsZ/ljr9cIixcblx0ICAgIFwiNTIyNjM2XCI6IFwi5Li55a+o5Y6/XCIsXG5cdCAgICBcIjUyMjYzN1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI1MjI3MDBcIjogXCLpu5TljZfluIPkvp3ml4/oi5fml4/oh6rmsrvlt55cIixcblx0ICAgIFwiNTIyNzAxXCI6IFwi6YO95YyA5biCXCIsXG5cdCAgICBcIjUyMjcwMlwiOiBcIuemj+azieW4glwiLFxuXHQgICAgXCI1MjI3MjJcIjogXCLojZTms6Lljr9cIixcblx0ICAgIFwiNTIyNzIzXCI6IFwi6LS15a6a5Y6/XCIsXG5cdCAgICBcIjUyMjcyNVwiOiBcIueTruWuieWOv1wiLFxuXHQgICAgXCI1MjI3MjZcIjogXCLni6zlsbHljr9cIixcblx0ICAgIFwiNTIyNzI3XCI6IFwi5bmz5aGY5Y6/XCIsXG5cdCAgICBcIjUyMjcyOFwiOiBcIue9l+eUuOWOv1wiLFxuXHQgICAgXCI1MjI3MjlcIjogXCLplb/pobrljr9cIixcblx0ICAgIFwiNTIyNzMwXCI6IFwi6b6Z6YeM5Y6/XCIsXG5cdCAgICBcIjUyMjczMVwiOiBcIuaDoOawtOWOv1wiLFxuXHQgICAgXCI1MjI3MzJcIjogXCLkuInpg73msLTml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNTIyNzMzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjUzMDAwMFwiOiBcIuS6keWNl+ecgVwiLFxuXHQgICAgXCI1MzAxMDBcIjogXCLmmIbmmI7luIJcIixcblx0ICAgIFwiNTMwMTAyXCI6IFwi5LqU5Y2O5Yy6XCIsXG5cdCAgICBcIjUzMDEwM1wiOiBcIuebmOm+meWMulwiLFxuXHQgICAgXCI1MzAxMTFcIjogXCLlrpjmuKHljLpcIixcblx0ICAgIFwiNTMwMTEyXCI6IFwi6KW/5bGx5Yy6XCIsXG5cdCAgICBcIjUzMDExM1wiOiBcIuS4nOW3neWMulwiLFxuXHQgICAgXCI1MzAxMjFcIjogXCLlkYjotKHljLpcIixcblx0ICAgIFwiNTMwMTIyXCI6IFwi5pmL5a6B5Y6/XCIsXG5cdCAgICBcIjUzMDEyNFwiOiBcIuWvjOawkeWOv1wiLFxuXHQgICAgXCI1MzAxMjVcIjogXCLlrpzoia/ljr9cIixcblx0ICAgIFwiNTMwMTI2XCI6IFwi55+z5p6X5b2d5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjUzMDEyN1wiOiBcIuW1qeaYjuWOv1wiLFxuXHQgICAgXCI1MzAxMjhcIjogXCLnpoTlip3lvZ3ml4/oi5fml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNTMwMTI5XCI6IFwi5a+755S45Zue5peP5b2d5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjUzMDE4MVwiOiBcIuWuieWugeW4glwiLFxuXHQgICAgXCI1MzAxODJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNTMwMzAwXCI6IFwi5puy6Z2W5biCXCIsXG5cdCAgICBcIjUzMDMwMlwiOiBcIum6kum6n+WMulwiLFxuXHQgICAgXCI1MzAzMjFcIjogXCLpqazpvpnljr9cIixcblx0ICAgIFwiNTMwMzIyXCI6IFwi6ZmG6Imv5Y6/XCIsXG5cdCAgICBcIjUzMDMyM1wiOiBcIuW4iOWul+WOv1wiLFxuXHQgICAgXCI1MzAzMjRcIjogXCLnvZflubPljr9cIixcblx0ICAgIFwiNTMwMzI1XCI6IFwi5a+M5rqQ5Y6/XCIsXG5cdCAgICBcIjUzMDMyNlwiOiBcIuS8muazveWOv1wiLFxuXHQgICAgXCI1MzAzMjhcIjogXCLmsr7nm4rljr9cIixcblx0ICAgIFwiNTMwMzgxXCI6IFwi5a6j5aiB5biCXCIsXG5cdCAgICBcIjUzMDM4MlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI1MzA0MDBcIjogXCLnjonmuqrluIJcIixcblx0ICAgIFwiNTMwNDAyXCI6IFwi57qi5aGU5Yy6XCIsXG5cdCAgICBcIjUzMDQyMVwiOiBcIuaxn+W3neWOv1wiLFxuXHQgICAgXCI1MzA0MjJcIjogXCLmvoTmsZ/ljr9cIixcblx0ICAgIFwiNTMwNDIzXCI6IFwi6YCa5rW35Y6/XCIsXG5cdCAgICBcIjUzMDQyNFwiOiBcIuWNjuWugeWOv1wiLFxuXHQgICAgXCI1MzA0MjVcIjogXCLmmJPpl6jljr9cIixcblx0ICAgIFwiNTMwNDI2XCI6IFwi5bOo5bGx5b2d5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjUzMDQyN1wiOiBcIuaWsOW5s+W9neaXj+WCo+aXj+iHquayu+WOv1wiLFxuXHQgICAgXCI1MzA0MjhcIjogXCLlhYPmsZ/lk4jlsLzml4/lvZ3ml4/lgqPml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNTMwNDI5XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjUzMDUwMFwiOiBcIuS/neWxseW4glwiLFxuXHQgICAgXCI1MzA1MDJcIjogXCLpmobpmLPljLpcIixcblx0ICAgIFwiNTMwNTIxXCI6IFwi5pa955S45Y6/XCIsXG5cdCAgICBcIjUzMDUyMlwiOiBcIuiFvuWGsuWOv1wiLFxuXHQgICAgXCI1MzA1MjNcIjogXCLpvpnpmbXljr9cIixcblx0ICAgIFwiNTMwNTI0XCI6IFwi5piM5a6B5Y6/XCIsXG5cdCAgICBcIjUzMDUyNVwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI1MzA2MDBcIjogXCLmmK3pgJrluIJcIixcblx0ICAgIFwiNTMwNjAyXCI6IFwi5pit6Ziz5Yy6XCIsXG5cdCAgICBcIjUzMDYyMVwiOiBcIumygeeUuOWOv1wiLFxuXHQgICAgXCI1MzA2MjJcIjogXCLlt6flrrbljr9cIixcblx0ICAgIFwiNTMwNjIzXCI6IFwi55uQ5rSl5Y6/XCIsXG5cdCAgICBcIjUzMDYyNFwiOiBcIuWkp+WFs+WOv1wiLFxuXHQgICAgXCI1MzA2MjVcIjogXCLmsLjlloTljr9cIixcblx0ICAgIFwiNTMwNjI2XCI6IFwi57ul5rGf5Y6/XCIsXG5cdCAgICBcIjUzMDYyN1wiOiBcIumVh+mbhOWOv1wiLFxuXHQgICAgXCI1MzA2MjhcIjogXCLlvZ3oia/ljr9cIixcblx0ICAgIFwiNTMwNjI5XCI6IFwi5aiB5L+h5Y6/XCIsXG5cdCAgICBcIjUzMDYzMFwiOiBcIuawtOWvjOWOv1wiLFxuXHQgICAgXCI1MzA2MzFcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNTMwNzAwXCI6IFwi5Li95rGf5biCXCIsXG5cdCAgICBcIjUzMDcwMlwiOiBcIuWPpOWfjuWMulwiLFxuXHQgICAgXCI1MzA3MjFcIjogXCLnjonpvpnnurPopb/ml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNTMwNzIyXCI6IFwi5rC46IOc5Y6/XCIsXG5cdCAgICBcIjUzMDcyM1wiOiBcIuWNjuWdquWOv1wiLFxuXHQgICAgXCI1MzA3MjRcIjogXCLlroHokpflvZ3ml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNTMwNzI1XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjUzMDgwMFwiOiBcIuaZrua0seW4glwiLFxuXHQgICAgXCI1MzA4MDJcIjogXCLmgJ3ojIXljLpcIixcblx0ICAgIFwiNTMwODIxXCI6IFwi5a6B5rSx5ZOI5bC85peP5b2d5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjUzMDgyMlwiOiBcIuWiqOaxn+WTiOWwvOaXj+iHquayu+WOv1wiLFxuXHQgICAgXCI1MzA4MjNcIjogXCLmma/kuJzlvZ3ml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNTMwODI0XCI6IFwi5pmv6LC35YKj5peP5b2d5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjUzMDgyNVwiOiBcIumVh+ayheW9neaXj+WTiOWwvOaXj+aLieelnOaXj+iHquayu+WOv1wiLFxuXHQgICAgXCI1MzA4MjZcIjogXCLmsZ/ln47lk4jlsLzml4/lvZ3ml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNTMwODI3XCI6IFwi5a2f6L+e5YKj5peP5ouJ56Wc5peP5L2k5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjUzMDgyOFwiOiBcIua+nOayp+aLieelnOaXj+iHquayu+WOv1wiLFxuXHQgICAgXCI1MzA4MjlcIjogXCLopb/nm5/kvaTml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNTMwODMwXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjUzMDkwMFwiOiBcIuS4tOayp+W4glwiLFxuXHQgICAgXCI1MzA5MDJcIjogXCLkuLTnv5TljLpcIixcblx0ICAgIFwiNTMwOTIxXCI6IFwi5Yek5bqG5Y6/XCIsXG5cdCAgICBcIjUzMDkyMlwiOiBcIuS6keWOv1wiLFxuXHQgICAgXCI1MzA5MjNcIjogXCLmsLjlvrfljr9cIixcblx0ICAgIFwiNTMwOTI0XCI6IFwi6ZWH5bq35Y6/XCIsXG5cdCAgICBcIjUzMDkyNVwiOiBcIuWPjOaxn+aLieelnOaXj+S9pOaXj+W4g+acl+aXj+WCo+aXj+iHquayu+WOv1wiLFxuXHQgICAgXCI1MzA5MjZcIjogXCLogL/pqazlgqPml4/kvaTml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNTMwOTI3XCI6IFwi5rKn5rqQ5L2k5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjUzMDkyOFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI1MzIzMDBcIjogXCLmpZrpm4TlvZ3ml4/oh6rmsrvlt55cIixcblx0ICAgIFwiNTMyMzAxXCI6IFwi5qWa6ZuE5biCXCIsXG5cdCAgICBcIjUzMjMyMlwiOiBcIuWPjOafj+WOv1wiLFxuXHQgICAgXCI1MzIzMjNcIjogXCLniZ/lrprljr9cIixcblx0ICAgIFwiNTMyMzI0XCI6IFwi5Y2X5Y2O5Y6/XCIsXG5cdCAgICBcIjUzMjMyNVwiOiBcIuWnmuWuieWOv1wiLFxuXHQgICAgXCI1MzIzMjZcIjogXCLlpKflp5rljr9cIixcblx0ICAgIFwiNTMyMzI3XCI6IFwi5rC45LuB5Y6/XCIsXG5cdCAgICBcIjUzMjMyOFwiOiBcIuWFg+iwi+WOv1wiLFxuXHQgICAgXCI1MzIzMjlcIjogXCLmrablrprljr9cIixcblx0ICAgIFwiNTMyMzMxXCI6IFwi56aE5Liw5Y6/XCIsXG5cdCAgICBcIjUzMjMzMlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI1MzI1MDBcIjogXCLnuqLmsrPlk4jlsLzml4/lvZ3ml4/oh6rmsrvlt55cIixcblx0ICAgIFwiNTMyNTAxXCI6IFwi5Liq5pen5biCXCIsXG5cdCAgICBcIjUzMjUwMlwiOiBcIuW8gOi/nOW4glwiLFxuXHQgICAgXCI1MzI1MjJcIjogXCLokpnoh6rluIJcIixcblx0ICAgIFwiNTMyNTIzXCI6IFwi5bGP6L656IuX5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjUzMjUyNFwiOiBcIuW7uuawtOWOv1wiLFxuXHQgICAgXCI1MzI1MjVcIjogXCLnn7PlsY/ljr9cIixcblx0ICAgIFwiNTMyNTI2XCI6IFwi5byl5YuS5biCXCIsXG5cdCAgICBcIjUzMjUyN1wiOiBcIuazuOilv+WOv1wiLFxuXHQgICAgXCI1MzI1MjhcIjogXCLlhYPpmLPljr9cIixcblx0ICAgIFwiNTMyNTI5XCI6IFwi57qi5rKz5Y6/XCIsXG5cdCAgICBcIjUzMjUzMFwiOiBcIumHkeW5s+iLl+aXj+eRtuaXj+WCo+aXj+iHquayu+WOv1wiLFxuXHQgICAgXCI1MzI1MzFcIjogXCLnu7/mmKXljr9cIixcblx0ICAgIFwiNTMyNTMyXCI6IFwi5rKz5Y+j55G25peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjUzMjUzM1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI1MzI2MDBcIjogXCLmloflsbHlo67ml4/oi5fml4/oh6rmsrvlt55cIixcblx0ICAgIFwiNTMyNjIxXCI6IFwi5paH5bGx5biCXCIsXG5cdCAgICBcIjUzMjYyMlwiOiBcIuegmuWxseWOv1wiLFxuXHQgICAgXCI1MzI2MjNcIjogXCLopb/nlbTljr9cIixcblx0ICAgIFwiNTMyNjI0XCI6IFwi6bq75qCX5Z2h5Y6/XCIsXG5cdCAgICBcIjUzMjYyNVwiOiBcIumprOWFs+WOv1wiLFxuXHQgICAgXCI1MzI2MjZcIjogXCLkuJjljJfljr9cIixcblx0ICAgIFwiNTMyNjI3XCI6IFwi5bm/5Y2X5Y6/XCIsXG5cdCAgICBcIjUzMjYyOFwiOiBcIuWvjOWugeWOv1wiLFxuXHQgICAgXCI1MzI2MjlcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNTMyODAwXCI6IFwi6KW/5Y+M54mI57qz5YKj5peP6Ieq5rK75beeXCIsXG5cdCAgICBcIjUzMjgwMVwiOiBcIuaZr+a0quW4glwiLFxuXHQgICAgXCI1MzI4MjJcIjogXCLli5Dmtbfljr9cIixcblx0ICAgIFwiNTMyODIzXCI6IFwi5YuQ6IWK5Y6/XCIsXG5cdCAgICBcIjUzMjgyNFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI1MzI5MDBcIjogXCLlpKfnkIbnmb3ml4/oh6rmsrvlt55cIixcblx0ICAgIFwiNTMyOTAxXCI6IFwi5aSn55CG5biCXCIsXG5cdCAgICBcIjUzMjkyMlwiOiBcIua8vua/nuW9neaXj+iHquayu+WOv1wiLFxuXHQgICAgXCI1MzI5MjNcIjogXCLnpaXkupHljr9cIixcblx0ICAgIFwiNTMyOTI0XCI6IFwi5a6+5bed5Y6/XCIsXG5cdCAgICBcIjUzMjkyNVwiOiBcIuW8pea4oeWOv1wiLFxuXHQgICAgXCI1MzI5MjZcIjogXCLljZfmtqflvZ3ml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNTMyOTI3XCI6IFwi5beN5bGx5b2d5peP5Zue5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjUzMjkyOFwiOiBcIuawuOW5s+WOv1wiLFxuXHQgICAgXCI1MzI5MjlcIjogXCLkupHpvpnljr9cIixcblx0ICAgIFwiNTMyOTMwXCI6IFwi5rSx5rqQ5Y6/XCIsXG5cdCAgICBcIjUzMjkzMVwiOiBcIuWJkeW3neWOv1wiLFxuXHQgICAgXCI1MzI5MzJcIjogXCLpuaTluobljr9cIixcblx0ICAgIFwiNTMyOTMzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjUzMzEwMFwiOiBcIuW+t+Wuj+WCo+aXj+aZr+mih+aXj+iHquayu+W3nlwiLFxuXHQgICAgXCI1MzMxMDJcIjogXCLnkZ7kuL3luIJcIixcblx0ICAgIFwiNTMzMTAzXCI6IFwi6IqS5biCXCIsXG5cdCAgICBcIjUzMzEyMlwiOiBcIuaigeays+WOv1wiLFxuXHQgICAgXCI1MzMxMjNcIjogXCLnm4jmsZ/ljr9cIixcblx0ICAgIFwiNTMzMTI0XCI6IFwi6ZmH5bed5Y6/XCIsXG5cdCAgICBcIjUzMzEyNVwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI1MzMzMDBcIjogXCLmgJLmsZ/lgojlg7Pml4/oh6rmsrvlt55cIixcblx0ICAgIFwiNTMzMzIxXCI6IFwi5rO45rC05Y6/XCIsXG5cdCAgICBcIjUzMzMyM1wiOiBcIuemj+i0oeWOv1wiLFxuXHQgICAgXCI1MzMzMjRcIjogXCLotKHlsbHni6zpvpnml4/mgJLml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNTMzMzI1XCI6IFwi5YWw5Z2q55m95peP5pmu57Gz5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjUzMzMyNlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI1MzM0MDBcIjogXCLov6rluobol4/ml4/oh6rmsrvlt55cIixcblx0ICAgIFwiNTMzNDIxXCI6IFwi6aaZ5qC86YeM5ouJ5Y6/XCIsXG5cdCAgICBcIjUzMzQyMlwiOiBcIuW+t+mSpuWOv1wiLFxuXHQgICAgXCI1MzM0MjNcIjogXCLnu7Topb/lgojlg7Pml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNTMzNDI0XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjU0MDAwMFwiOiBcIuilv+iXj+iHquayu+WMulwiLFxuXHQgICAgXCI1NDAxMDBcIjogXCLmi4nokKjluIJcIixcblx0ICAgIFwiNTQwMTAyXCI6IFwi5Z+O5YWz5Yy6XCIsXG5cdCAgICBcIjU0MDEyMVwiOiBcIuael+WRqOWOv1wiLFxuXHQgICAgXCI1NDAxMjJcIjogXCLlvZPpm4Tljr9cIixcblx0ICAgIFwiNTQwMTIzXCI6IFwi5bC85pyo5Y6/XCIsXG5cdCAgICBcIjU0MDEyNFwiOiBcIuabsuawtOWOv1wiLFxuXHQgICAgXCI1NDAxMjVcIjogXCLloIbpvpnlvrfluobljr9cIixcblx0ICAgIFwiNTQwMTI2XCI6IFwi6L6+5a2c5Y6/XCIsXG5cdCAgICBcIjU0MDEyN1wiOiBcIuWiqOerueW3peWNoeWOv1wiLFxuXHQgICAgXCI1NDAxMjhcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNTQyMTAwXCI6IFwi5piM6YO95Zyw5Yy6XCIsXG5cdCAgICBcIjU0MjEyMVwiOiBcIuaYjOmDveWOv1wiLFxuXHQgICAgXCI1NDIxMjJcIjogXCLmsZ/ovr7ljr9cIixcblx0ICAgIFwiNTQyMTIzXCI6IFwi6LSh6KeJ5Y6/XCIsXG5cdCAgICBcIjU0MjEyNFwiOiBcIuexu+S5jOm9kOWOv1wiLFxuXHQgICAgXCI1NDIxMjVcIjogXCLkuIHpnZLljr9cIixcblx0ICAgIFwiNTQyMTI2XCI6IFwi5a+f6ZuF5Y6/XCIsXG5cdCAgICBcIjU0MjEyN1wiOiBcIuWFq+Wuv+WOv1wiLFxuXHQgICAgXCI1NDIxMjhcIjogXCLlt6botKHljr9cIixcblx0ICAgIFwiNTQyMTI5XCI6IFwi6IqS5bq35Y6/XCIsXG5cdCAgICBcIjU0MjEzMlwiOiBcIua0m+mahuWOv1wiLFxuXHQgICAgXCI1NDIxMzNcIjogXCLovrnlnZ3ljr9cIixcblx0ICAgIFwiNTQyMTM0XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjU0MjIwMFwiOiBcIuWxseWNl+WcsOWMulwiLFxuXHQgICAgXCI1NDIyMjFcIjogXCLkuYPkuJzljr9cIixcblx0ICAgIFwiNTQyMjIyXCI6IFwi5omO5ZuK5Y6/XCIsXG5cdCAgICBcIjU0MjIyM1wiOiBcIui0oeWYjuWOv1wiLFxuXHQgICAgXCI1NDIyMjRcIjogXCLmoZHml6Xljr9cIixcblx0ICAgIFwiNTQyMjI1XCI6IFwi55C857uT5Y6/XCIsXG5cdCAgICBcIjU0MjIyNlwiOiBcIuabsuadvuWOv1wiLFxuXHQgICAgXCI1NDIyMjdcIjogXCLmjqrnvo7ljr9cIixcblx0ICAgIFwiNTQyMjI4XCI6IFwi5rSb5omO5Y6/XCIsXG5cdCAgICBcIjU0MjIyOVwiOiBcIuWKoOafpeWOv1wiLFxuXHQgICAgXCI1NDIyMzFcIjogXCLpmoblrZDljr9cIixcblx0ICAgIFwiNTQyMjMyXCI6IFwi6ZSZ6YKj5Y6/XCIsXG5cdCAgICBcIjU0MjIzM1wiOiBcIua1quWNoeWtkOWOv1wiLFxuXHQgICAgXCI1NDIyMzRcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNTQyMzAwXCI6IFwi5pel5ZaA5YiZ5Zyw5Yy6XCIsXG5cdCAgICBcIjU0MjMwMVwiOiBcIuaXpeWWgOWImeW4glwiLFxuXHQgICAgXCI1NDIzMjJcIjogXCLljZfmnKjmnpfljr9cIixcblx0ICAgIFwiNTQyMzIzXCI6IFwi5rGf5a2c5Y6/XCIsXG5cdCAgICBcIjU0MjMyNFwiOiBcIuWumuaXpeWOv1wiLFxuXHQgICAgXCI1NDIzMjVcIjogXCLokKjov6bljr9cIixcblx0ICAgIFwiNTQyMzI2XCI6IFwi5ouJ5a2c5Y6/XCIsXG5cdCAgICBcIjU0MjMyN1wiOiBcIuaYguS7geWOv1wiLFxuXHQgICAgXCI1NDIzMjhcIjogXCLosKLpgJrpl6jljr9cIixcblx0ICAgIFwiNTQyMzI5XCI6IFwi55m95pyX5Y6/XCIsXG5cdCAgICBcIjU0MjMzMFwiOiBcIuS7geW4g+WOv1wiLFxuXHQgICAgXCI1NDIzMzFcIjogXCLlurfpqazljr9cIixcblx0ICAgIFwiNTQyMzMyXCI6IFwi5a6a57uT5Y6/XCIsXG5cdCAgICBcIjU0MjMzM1wiOiBcIuS7suW3tOWOv1wiLFxuXHQgICAgXCI1NDIzMzRcIjogXCLkuprkuJzljr9cIixcblx0ICAgIFwiNTQyMzM1XCI6IFwi5ZCJ6ZqG5Y6/XCIsXG5cdCAgICBcIjU0MjMzNlwiOiBcIuiBguaLieacqOWOv1wiLFxuXHQgICAgXCI1NDIzMzdcIjogXCLokKjlmI7ljr9cIixcblx0ICAgIFwiNTQyMzM4XCI6IFwi5bKX5be05Y6/XCIsXG5cdCAgICBcIjU0MjMzOVwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI1NDI0MDBcIjogXCLpgqPmm7LlnLDljLpcIixcblx0ICAgIFwiNTQyNDIxXCI6IFwi6YKj5puy5Y6/XCIsXG5cdCAgICBcIjU0MjQyMlwiOiBcIuWYiem7juWOv1wiLFxuXHQgICAgXCI1NDI0MjNcIjogXCLmr5TlpoLljr9cIixcblx0ICAgIFwiNTQyNDI0XCI6IFwi6IGC6I2j5Y6/XCIsXG5cdCAgICBcIjU0MjQyNVwiOiBcIuWuieWkmuWOv1wiLFxuXHQgICAgXCI1NDI0MjZcIjogXCLnlLPmiY7ljr9cIixcblx0ICAgIFwiNTQyNDI3XCI6IFwi57Si5Y6/XCIsXG5cdCAgICBcIjU0MjQyOFwiOiBcIuePreaIiOWOv1wiLFxuXHQgICAgXCI1NDI0MjlcIjogXCLlt7TpnZLljr9cIixcblx0ICAgIFwiNTQyNDMwXCI6IFwi5bC8546b5Y6/XCIsXG5cdCAgICBcIjU0MjQzMVwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI1NDI0MzJcIjogXCLlj4zmuZbljr9cIixcblx0ICAgIFwiNTQyNTAwXCI6IFwi6Zi/6YeM5Zyw5Yy6XCIsXG5cdCAgICBcIjU0MjUyMVwiOiBcIuaZruWFsOWOv1wiLFxuXHQgICAgXCI1NDI1MjJcIjogXCLmnK3ovr7ljr9cIixcblx0ICAgIFwiNTQyNTIzXCI6IFwi5Zm25bCU5Y6/XCIsXG5cdCAgICBcIjU0MjUyNFwiOiBcIuaXpeWcn+WOv1wiLFxuXHQgICAgXCI1NDI1MjVcIjogXCLpnanlkInljr9cIixcblx0ICAgIFwiNTQyNTI2XCI6IFwi5pS55YiZ5Y6/XCIsXG5cdCAgICBcIjU0MjUyN1wiOiBcIuaOquWLpOWOv1wiLFxuXHQgICAgXCI1NDI1MjhcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNTQyNjAwXCI6IFwi5p6X6Iqd5Zyw5Yy6XCIsXG5cdCAgICBcIjU0MjYyMVwiOiBcIuael+iKneWOv1wiLFxuXHQgICAgXCI1NDI2MjJcIjogXCLlt6XluIPmsZ/ovr7ljr9cIixcblx0ICAgIFwiNTQyNjIzXCI6IFwi57Gz5p6X5Y6/XCIsXG5cdCAgICBcIjU0MjYyNFwiOiBcIuWiqOiEseWOv1wiLFxuXHQgICAgXCI1NDI2MjVcIjogXCLms6Llr4bljr9cIixcblx0ICAgIFwiNTQyNjI2XCI6IFwi5a+f6ZqF5Y6/XCIsXG5cdCAgICBcIjU0MjYyN1wiOiBcIuacl+WOv1wiLFxuXHQgICAgXCI1NDI2MjhcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNjEwMDAwXCI6IFwi6ZmV6KW/55yBXCIsXG5cdCAgICBcIjYxMDEwMFwiOiBcIuilv+WuieW4glwiLFxuXHQgICAgXCI2MTAxMDJcIjogXCLmlrDln47ljLpcIixcblx0ICAgIFwiNjEwMTAzXCI6IFwi56KR5p6X5Yy6XCIsXG5cdCAgICBcIjYxMDEwNFwiOiBcIuiOsua5luWMulwiLFxuXHQgICAgXCI2MTAxMTFcIjogXCLngZ7moaXljLpcIixcblx0ICAgIFwiNjEwMTEyXCI6IFwi5pyq5aSu5Yy6XCIsXG5cdCAgICBcIjYxMDExM1wiOiBcIumbgeWhlOWMulwiLFxuXHQgICAgXCI2MTAxMTRcIjogXCLpmI7oia/ljLpcIixcblx0ICAgIFwiNjEwMTE1XCI6IFwi5Li05r285Yy6XCIsXG5cdCAgICBcIjYxMDExNlwiOiBcIumVv+WuieWMulwiLFxuXHQgICAgXCI2MTAxMjJcIjogXCLok53nlLDljr9cIixcblx0ICAgIFwiNjEwMTI0XCI6IFwi5ZGo6Iez5Y6/XCIsXG5cdCAgICBcIjYxMDEyNVwiOiBcIuaIt+WOv1wiLFxuXHQgICAgXCI2MTAxMjZcIjogXCLpq5jpmbXljr9cIixcblx0ICAgIFwiNjEwMTI3XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjYxMDIwMFwiOiBcIumTnOW3neW4glwiLFxuXHQgICAgXCI2MTAyMDJcIjogXCLnjovnm4rljLpcIixcblx0ICAgIFwiNjEwMjAzXCI6IFwi5Y2w5Y+w5Yy6XCIsXG5cdCAgICBcIjYxMDIwNFwiOiBcIuiAgOW3nuWMulwiLFxuXHQgICAgXCI2MTAyMjJcIjogXCLlrpzlkJvljr9cIixcblx0ICAgIFwiNjEwMjIzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjYxMDMwMFwiOiBcIuWunem4oeW4glwiLFxuXHQgICAgXCI2MTAzMDJcIjogXCLmuK3mu6jljLpcIixcblx0ICAgIFwiNjEwMzAzXCI6IFwi6YeR5Y+w5Yy6XCIsXG5cdCAgICBcIjYxMDMwNFwiOiBcIumZiOS7k+WMulwiLFxuXHQgICAgXCI2MTAzMjJcIjogXCLlh6Tnv5Tljr9cIixcblx0ICAgIFwiNjEwMzIzXCI6IFwi5bKQ5bGx5Y6/XCIsXG5cdCAgICBcIjYxMDMyNFwiOiBcIuaJtumjjuWOv1wiLFxuXHQgICAgXCI2MTAzMjZcIjogXCLnnInljr9cIixcblx0ICAgIFwiNjEwMzI3XCI6IFwi6ZmH5Y6/XCIsXG5cdCAgICBcIjYxMDMyOFwiOiBcIuWNg+mYs+WOv1wiLFxuXHQgICAgXCI2MTAzMjlcIjogXCLpup/muLjljr9cIixcblx0ICAgIFwiNjEwMzMwXCI6IFwi5Yek5Y6/XCIsXG5cdCAgICBcIjYxMDMzMVwiOiBcIuWkqueZveWOv1wiLFxuXHQgICAgXCI2MTAzMzJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNjEwNDAwXCI6IFwi5ZK46Ziz5biCXCIsXG5cdCAgICBcIjYxMDQwMlwiOiBcIuenpumDveWMulwiLFxuXHQgICAgXCI2MTA0MDNcIjogXCLmnajpmbXljLpcIixcblx0ICAgIFwiNjEwNDA0XCI6IFwi5rit5Z+O5Yy6XCIsXG5cdCAgICBcIjYxMDQyMlwiOiBcIuS4ieWOn+WOv1wiLFxuXHQgICAgXCI2MTA0MjNcIjogXCLms77pmLPljr9cIixcblx0ICAgIFwiNjEwNDI0XCI6IFwi5Lm+5Y6/XCIsXG5cdCAgICBcIjYxMDQyNVwiOiBcIuekvOazieWOv1wiLFxuXHQgICAgXCI2MTA0MjZcIjogXCLmsLjlr7/ljr9cIixcblx0ICAgIFwiNjEwNDI3XCI6IFwi5b2s5Y6/XCIsXG5cdCAgICBcIjYxMDQyOFwiOiBcIumVv+atpuWOv1wiLFxuXHQgICAgXCI2MTA0MjlcIjogXCLml6zpgpHljr9cIixcblx0ICAgIFwiNjEwNDMwXCI6IFwi5rez5YyW5Y6/XCIsXG5cdCAgICBcIjYxMDQzMVwiOiBcIuatpuWKn+WOv1wiLFxuXHQgICAgXCI2MTA0ODFcIjogXCLlhbTlubPluIJcIixcblx0ICAgIFwiNjEwNDgyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjYxMDUwMFwiOiBcIua4reWNl+W4glwiLFxuXHQgICAgXCI2MTA1MDJcIjogXCLkuLTmuK3ljLpcIixcblx0ICAgIFwiNjEwNTIxXCI6IFwi5Y2O5Y6/XCIsXG5cdCAgICBcIjYxMDUyMlwiOiBcIua9vOWFs+WOv1wiLFxuXHQgICAgXCI2MTA1MjNcIjogXCLlpKfojZTljr9cIixcblx0ICAgIFwiNjEwNTI0XCI6IFwi5ZCI6Ziz5Y6/XCIsXG5cdCAgICBcIjYxMDUyNVwiOiBcIua+hOWfjuWOv1wiLFxuXHQgICAgXCI2MTA1MjZcIjogXCLokrLln47ljr9cIixcblx0ICAgIFwiNjEwNTI3XCI6IFwi55m95rC05Y6/XCIsXG5cdCAgICBcIjYxMDUyOFwiOiBcIuWvjOW5s+WOv1wiLFxuXHQgICAgXCI2MTA1ODFcIjogXCLpn6nln47luIJcIixcblx0ICAgIFwiNjEwNTgyXCI6IFwi5Y2O6Zi05biCXCIsXG5cdCAgICBcIjYxMDU4M1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI2MTA2MDBcIjogXCLlu7blronluIJcIixcblx0ICAgIFwiNjEwNjAyXCI6IFwi5a6d5aGU5Yy6XCIsXG5cdCAgICBcIjYxMDYyMVwiOiBcIuW7tumVv+WOv1wiLFxuXHQgICAgXCI2MTA2MjJcIjogXCLlu7blt53ljr9cIixcblx0ICAgIFwiNjEwNjIzXCI6IFwi5a2Q6ZW/5Y6/XCIsXG5cdCAgICBcIjYxMDYyNFwiOiBcIuWuieWhnuWOv1wiLFxuXHQgICAgXCI2MTA2MjVcIjogXCLlv5fkuLnljr9cIixcblx0ICAgIFwiNjEwNjI2XCI6IFwi5ZC06LW35Y6/XCIsXG5cdCAgICBcIjYxMDYyN1wiOiBcIueUmOazieWOv1wiLFxuXHQgICAgXCI2MTA2MjhcIjogXCLlr4zljr9cIixcblx0ICAgIFwiNjEwNjI5XCI6IFwi5rSb5bed5Y6/XCIsXG5cdCAgICBcIjYxMDYzMFwiOiBcIuWunOW3neWOv1wiLFxuXHQgICAgXCI2MTA2MzFcIjogXCLpu4Tpvpnljr9cIixcblx0ICAgIFwiNjEwNjMyXCI6IFwi6buE6Zm15Y6/XCIsXG5cdCAgICBcIjYxMDYzM1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI2MTA3MDBcIjogXCLmsYnkuK3luIJcIixcblx0ICAgIFwiNjEwNzAyXCI6IFwi5rGJ5Y+w5Yy6XCIsXG5cdCAgICBcIjYxMDcyMVwiOiBcIuWNl+mDkeWOv1wiLFxuXHQgICAgXCI2MTA3MjJcIjogXCLln47lm7rljr9cIixcblx0ICAgIFwiNjEwNzIzXCI6IFwi5rSL5Y6/XCIsXG5cdCAgICBcIjYxMDcyNFwiOiBcIuilv+S5oeWOv1wiLFxuXHQgICAgXCI2MTA3MjVcIjogXCLli4nljr9cIixcblx0ICAgIFwiNjEwNzI2XCI6IFwi5a6B5by65Y6/XCIsXG5cdCAgICBcIjYxMDcyN1wiOiBcIueVpemYs+WOv1wiLFxuXHQgICAgXCI2MTA3MjhcIjogXCLplYflt7Tljr9cIixcblx0ICAgIFwiNjEwNzI5XCI6IFwi55WZ5Z2d5Y6/XCIsXG5cdCAgICBcIjYxMDczMFwiOiBcIuS9m+WdquWOv1wiLFxuXHQgICAgXCI2MTA3MzFcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNjEwODAwXCI6IFwi5qaG5p6X5biCXCIsXG5cdCAgICBcIjYxMDgwMlwiOiBcIuamhumYs+WMulwiLFxuXHQgICAgXCI2MTA4MjFcIjogXCLnpZ7mnKjljr9cIixcblx0ICAgIFwiNjEwODIyXCI6IFwi5bqc6LC35Y6/XCIsXG5cdCAgICBcIjYxMDgyM1wiOiBcIuaoquWxseWOv1wiLFxuXHQgICAgXCI2MTA4MjRcIjogXCLpnZbovrnljr9cIixcblx0ICAgIFwiNjEwODI1XCI6IFwi5a6a6L655Y6/XCIsXG5cdCAgICBcIjYxMDgyNlwiOiBcIue7peW+t+WOv1wiLFxuXHQgICAgXCI2MTA4MjdcIjogXCLnsbPohILljr9cIixcblx0ICAgIFwiNjEwODI4XCI6IFwi5L2z5Y6/XCIsXG5cdCAgICBcIjYxMDgyOVwiOiBcIuWQtOWgoeWOv1wiLFxuXHQgICAgXCI2MTA4MzBcIjogXCLmuIXmtqfljr9cIixcblx0ICAgIFwiNjEwODMxXCI6IFwi5a2Q5rSy5Y6/XCIsXG5cdCAgICBcIjYxMDgzMlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI2MTA5MDBcIjogXCLlronlurfluIJcIixcblx0ICAgIFwiNjEwOTAyXCI6IFwi5rGJ5ruo5Yy6XCIsXG5cdCAgICBcIjYxMDkyMVwiOiBcIuaxiemYtOWOv1wiLFxuXHQgICAgXCI2MTA5MjJcIjogXCLnn7Pms4nljr9cIixcblx0ICAgIFwiNjEwOTIzXCI6IFwi5a6B6ZmV5Y6/XCIsXG5cdCAgICBcIjYxMDkyNFwiOiBcIue0q+mYs+WOv1wiLFxuXHQgICAgXCI2MTA5MjVcIjogXCLlsprnmovljr9cIixcblx0ICAgIFwiNjEwOTI2XCI6IFwi5bmz5Yip5Y6/XCIsXG5cdCAgICBcIjYxMDkyN1wiOiBcIumVh+WdquWOv1wiLFxuXHQgICAgXCI2MTA5MjhcIjogXCLml6zpmLPljr9cIixcblx0ICAgIFwiNjEwOTI5XCI6IFwi55m95rKz5Y6/XCIsXG5cdCAgICBcIjYxMDkzMFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI2MTEwMDBcIjogXCLllYbmtJvluIJcIixcblx0ICAgIFwiNjExMDAyXCI6IFwi5ZWG5bee5Yy6XCIsXG5cdCAgICBcIjYxMTAyMVwiOiBcIua0m+WNl+WOv1wiLFxuXHQgICAgXCI2MTEwMjJcIjogXCLkuLnlh6Tljr9cIixcblx0ICAgIFwiNjExMDIzXCI6IFwi5ZWG5Y2X5Y6/XCIsXG5cdCAgICBcIjYxMTAyNFwiOiBcIuWxsemYs+WOv1wiLFxuXHQgICAgXCI2MTEwMjVcIjogXCLplYflronljr9cIixcblx0ICAgIFwiNjExMDI2XCI6IFwi5p+e5rC05Y6/XCIsXG5cdCAgICBcIjYxMTAyN1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI2MjAwMDBcIjogXCLnlJjogoPnnIFcIixcblx0ICAgIFwiNjIwMTAwXCI6IFwi5YWw5bee5biCXCIsXG5cdCAgICBcIjYyMDEwMlwiOiBcIuWfjuWFs+WMulwiLFxuXHQgICAgXCI2MjAxMDNcIjogXCLkuIPph4zmsrPljLpcIixcblx0ICAgIFwiNjIwMTA0XCI6IFwi6KW/5Zu65Yy6XCIsXG5cdCAgICBcIjYyMDEwNVwiOiBcIuWuieWugeWMulwiLFxuXHQgICAgXCI2MjAxMTFcIjogXCLnuqLlj6TljLpcIixcblx0ICAgIFwiNjIwMTIxXCI6IFwi5rC455m75Y6/XCIsXG5cdCAgICBcIjYyMDEyMlwiOiBcIueai+WFsOWOv1wiLFxuXHQgICAgXCI2MjAxMjNcIjogXCLmpobkuK3ljr9cIixcblx0ICAgIFwiNjIwMTI0XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjYyMDIwMFwiOiBcIuWYieWzquWFs+W4glwiLFxuXHQgICAgXCI2MjAzMDBcIjogXCLph5HmmIzluIJcIixcblx0ICAgIFwiNjIwMzAyXCI6IFwi6YeR5bed5Yy6XCIsXG5cdCAgICBcIjYyMDMyMVwiOiBcIuawuOaYjOWOv1wiLFxuXHQgICAgXCI2MjAzMjJcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNjIwNDAwXCI6IFwi55m96ZO25biCXCIsXG5cdCAgICBcIjYyMDQwMlwiOiBcIueZvemTtuWMulwiLFxuXHQgICAgXCI2MjA0MDNcIjogXCLlubPlt53ljLpcIixcblx0ICAgIFwiNjIwNDIxXCI6IFwi6Z2W6L+c5Y6/XCIsXG5cdCAgICBcIjYyMDQyMlwiOiBcIuS8muWugeWOv1wiLFxuXHQgICAgXCI2MjA0MjNcIjogXCLmma/ms7Dljr9cIixcblx0ICAgIFwiNjIwNDI0XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjYyMDUwMFwiOiBcIuWkqeawtOW4glwiLFxuXHQgICAgXCI2MjA1MDJcIjogXCLnp6blt57ljLpcIixcblx0ICAgIFwiNjIwNTAzXCI6IFwi6bqm56ev5Yy6XCIsXG5cdCAgICBcIjYyMDUyMVwiOiBcIua4heawtOWOv1wiLFxuXHQgICAgXCI2MjA1MjJcIjogXCLnp6blronljr9cIixcblx0ICAgIFwiNjIwNTIzXCI6IFwi55SY6LC35Y6/XCIsXG5cdCAgICBcIjYyMDUyNFwiOiBcIuatpuWxseWOv1wiLFxuXHQgICAgXCI2MjA1MjVcIjogXCLlvKDlrrblt53lm57ml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNjIwNTI2XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjYyMDYwMFwiOiBcIuatpuWogeW4glwiLFxuXHQgICAgXCI2MjA2MDJcIjogXCLlh4nlt57ljLpcIixcblx0ICAgIFwiNjIwNjIxXCI6IFwi5rCR5Yuk5Y6/XCIsXG5cdCAgICBcIjYyMDYyMlwiOiBcIuWPpOa1quWOv1wiLFxuXHQgICAgXCI2MjA2MjNcIjogXCLlpKnnpZ3ol4/ml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNjIwNjI0XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjYyMDcwMFwiOiBcIuW8oOaOluW4glwiLFxuXHQgICAgXCI2MjA3MDJcIjogXCLnlJjlt57ljLpcIixcblx0ICAgIFwiNjIwNzIxXCI6IFwi6IKD5Y2X6KOV5Zu65peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjYyMDcyMlwiOiBcIuawkeS5kOWOv1wiLFxuXHQgICAgXCI2MjA3MjNcIjogXCLkuLTms73ljr9cIixcblx0ICAgIFwiNjIwNzI0XCI6IFwi6auY5Y+w5Y6/XCIsXG5cdCAgICBcIjYyMDcyNVwiOiBcIuWxseS4ueWOv1wiLFxuXHQgICAgXCI2MjA3MjZcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNjIwODAwXCI6IFwi5bmz5YeJ5biCXCIsXG5cdCAgICBcIjYyMDgwMlwiOiBcIuW0huWzkuWMulwiLFxuXHQgICAgXCI2MjA4MjFcIjogXCLms77lt53ljr9cIixcblx0ICAgIFwiNjIwODIyXCI6IFwi54G15Y+w5Y6/XCIsXG5cdCAgICBcIjYyMDgyM1wiOiBcIuW0h+S/oeWOv1wiLFxuXHQgICAgXCI2MjA4MjRcIjogXCLljY7kuq3ljr9cIixcblx0ICAgIFwiNjIwODI1XCI6IFwi5bqE5rWq5Y6/XCIsXG5cdCAgICBcIjYyMDgyNlwiOiBcIumdmeWugeWOv1wiLFxuXHQgICAgXCI2MjA4MjdcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNjIwOTAwXCI6IFwi6YWS5rOJ5biCXCIsXG5cdCAgICBcIjYyMDkwMlwiOiBcIuiCg+W3nuWMulwiLFxuXHQgICAgXCI2MjA5MjFcIjogXCLph5HloZTljr9cIixcblx0ICAgIFwiNjIwOTIyXCI6IFwi55Oc5bee5Y6/XCIsXG5cdCAgICBcIjYyMDkyM1wiOiBcIuiCg+WMl+iSmeWPpOaXj+iHquayu+WOv1wiLFxuXHQgICAgXCI2MjA5MjRcIjogXCLpmL/lhYvloZ7lk4jokKjlhYvml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNjIwOTgxXCI6IFwi546J6Zeo5biCXCIsXG5cdCAgICBcIjYyMDk4MlwiOiBcIuaVpueFjOW4glwiLFxuXHQgICAgXCI2MjA5ODNcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNjIxMDAwXCI6IFwi5bqG6Ziz5biCXCIsXG5cdCAgICBcIjYyMTAwMlwiOiBcIuilv+WzsOWMulwiLFxuXHQgICAgXCI2MjEwMjFcIjogXCLluobln47ljr9cIixcblx0ICAgIFwiNjIxMDIyXCI6IFwi546v5Y6/XCIsXG5cdCAgICBcIjYyMTAyM1wiOiBcIuWNjuaxoOWOv1wiLFxuXHQgICAgXCI2MjEwMjRcIjogXCLlkIjmsLTljr9cIixcblx0ICAgIFwiNjIxMDI1XCI6IFwi5q2j5a6B5Y6/XCIsXG5cdCAgICBcIjYyMTAyNlwiOiBcIuWugeWOv1wiLFxuXHQgICAgXCI2MjEwMjdcIjogXCLplYfljp/ljr9cIixcblx0ICAgIFwiNjIxMDI4XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjYyMTEwMFwiOiBcIuWumuilv+W4glwiLFxuXHQgICAgXCI2MjExMDJcIjogXCLlronlrprljLpcIixcblx0ICAgIFwiNjIxMTIxXCI6IFwi6YCa5rit5Y6/XCIsXG5cdCAgICBcIjYyMTEyMlwiOiBcIumZh+ilv+WOv1wiLFxuXHQgICAgXCI2MjExMjNcIjogXCLmuK3mupDljr9cIixcblx0ICAgIFwiNjIxMTI0XCI6IFwi5Li05rSu5Y6/XCIsXG5cdCAgICBcIjYyMTEyNVwiOiBcIua8s+WOv1wiLFxuXHQgICAgXCI2MjExMjZcIjogXCLlsrfljr9cIixcblx0ICAgIFwiNjIxMTI3XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjYyMTIwMFwiOiBcIumZh+WNl+W4glwiLFxuXHQgICAgXCI2MjEyMDJcIjogXCLmrabpg73ljLpcIixcblx0ICAgIFwiNjIxMjIxXCI6IFwi5oiQ5Y6/XCIsXG5cdCAgICBcIjYyMTIyMlwiOiBcIuaWh+WOv1wiLFxuXHQgICAgXCI2MjEyMjNcIjogXCLlrpXmmIzljr9cIixcblx0ICAgIFwiNjIxMjI0XCI6IFwi5bq35Y6/XCIsXG5cdCAgICBcIjYyMTIyNVwiOiBcIuilv+WSjOWOv1wiLFxuXHQgICAgXCI2MjEyMjZcIjogXCLnpLzljr9cIixcblx0ICAgIFwiNjIxMjI3XCI6IFwi5b695Y6/XCIsXG5cdCAgICBcIjYyMTIyOFwiOiBcIuS4pOW9k+WOv1wiLFxuXHQgICAgXCI2MjEyMjlcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNjIyOTAwXCI6IFwi5Li05aSP5Zue5peP6Ieq5rK75beeXCIsXG5cdCAgICBcIjYyMjkwMVwiOiBcIuS4tOWkj+W4glwiLFxuXHQgICAgXCI2MjI5MjFcIjogXCLkuLTlpI/ljr9cIixcblx0ICAgIFwiNjIyOTIyXCI6IFwi5bq35LmQ5Y6/XCIsXG5cdCAgICBcIjYyMjkyM1wiOiBcIuawuOmdluWOv1wiLFxuXHQgICAgXCI2MjI5MjRcIjogXCLlub/msrPljr9cIixcblx0ICAgIFwiNjIyOTI1XCI6IFwi5ZKM5pS/5Y6/XCIsXG5cdCAgICBcIjYyMjkyNlwiOiBcIuS4nOS5oeaXj+iHquayu+WOv1wiLFxuXHQgICAgXCI2MjI5MjdcIjogXCLnp6/nn7PlsbHkv53lronml4/kuJzkuaHml4/mkpLmi4nml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNjIyOTI4XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjYyMzAwMFwiOiBcIueUmOWNl+iXj+aXj+iHquayu+W3nlwiLFxuXHQgICAgXCI2MjMwMDFcIjogXCLlkIjkvZzluIJcIixcblx0ICAgIFwiNjIzMDIxXCI6IFwi5Li05r2t5Y6/XCIsXG5cdCAgICBcIjYyMzAyMlwiOiBcIuWNk+WwvOWOv1wiLFxuXHQgICAgXCI2MjMwMjNcIjogXCLoiJ/mm7Lljr9cIixcblx0ICAgIFwiNjIzMDI0XCI6IFwi6L+t6YOo5Y6/XCIsXG5cdCAgICBcIjYyMzAyNVwiOiBcIueOm+absuWOv1wiLFxuXHQgICAgXCI2MjMwMjZcIjogXCLnoozmm7Lljr9cIixcblx0ICAgIFwiNjIzMDI3XCI6IFwi5aSP5rKz5Y6/XCIsXG5cdCAgICBcIjYyMzAyOFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI2MzAwMDBcIjogXCLpnZLmtbfnnIFcIixcblx0ICAgIFwiNjMwMTAwXCI6IFwi6KW/5a6B5biCXCIsXG5cdCAgICBcIjYzMDEwMlwiOiBcIuWfjuS4nOWMulwiLFxuXHQgICAgXCI2MzAxMDNcIjogXCLln47kuK3ljLpcIixcblx0ICAgIFwiNjMwMTA0XCI6IFwi5Z+O6KW/5Yy6XCIsXG5cdCAgICBcIjYzMDEwNVwiOiBcIuWfjuWMl+WMulwiLFxuXHQgICAgXCI2MzAxMjFcIjogXCLlpKfpgJrlm57ml4/lnJ/ml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNjMwMTIyXCI6IFwi5rmf5Lit5Y6/XCIsXG5cdCAgICBcIjYzMDEyM1wiOiBcIua5n+a6kOWOv1wiLFxuXHQgICAgXCI2MzAxMjRcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNjMyMTAwXCI6IFwi5rW35Lic5biCXCIsXG5cdCAgICBcIjYzMjEyMVwiOiBcIuW5s+WuieWOv1wiLFxuXHQgICAgXCI2MzIxMjJcIjogXCLmsJHlkozlm57ml4/lnJ/ml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNjMyMTIzXCI6IFwi5LmQ6YO95Yy6XCIsXG5cdCAgICBcIjYzMjEyNlwiOiBcIuS6kuWKqeWcn+aXj+iHquayu+WOv1wiLFxuXHQgICAgXCI2MzIxMjdcIjogXCLljJbpmoblm57ml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNjMyMTI4XCI6IFwi5b6q5YyW5pKS5ouJ5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjYzMjEyOVwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI2MzIyMDBcIjogXCLmtbfljJfol4/ml4/oh6rmsrvlt55cIixcblx0ICAgIFwiNjMyMjIxXCI6IFwi6Zeo5rqQ5Zue5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjYzMjIyMlwiOiBcIuelgei/nuWOv1wiLFxuXHQgICAgXCI2MzIyMjNcIjogXCLmtbfmmY/ljr9cIixcblx0ICAgIFwiNjMyMjI0XCI6IFwi5Yia5a+f5Y6/XCIsXG5cdCAgICBcIjYzMjIyNVwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI2MzIzMDBcIjogXCLpu4TljZfol4/ml4/oh6rmsrvlt55cIixcblx0ICAgIFwiNjMyMzIxXCI6IFwi5ZCM5LuB5Y6/XCIsXG5cdCAgICBcIjYzMjMyMlwiOiBcIuWwluaJjuWOv1wiLFxuXHQgICAgXCI2MzIzMjNcIjogXCLms73lupPljr9cIixcblx0ICAgIFwiNjMyMzI0XCI6IFwi5rKz5Y2X6JKZ5Y+k5peP6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjYzMjMyNVwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI2MzI1MDBcIjogXCLmtbfljZfol4/ml4/oh6rmsrvlt55cIixcblx0ICAgIFwiNjMyNTIxXCI6IFwi5YWx5ZKM5Y6/XCIsXG5cdCAgICBcIjYzMjUyMlwiOiBcIuWQjOW+t+WOv1wiLFxuXHQgICAgXCI2MzI1MjNcIjogXCLotLXlvrfljr9cIixcblx0ICAgIFwiNjMyNTI0XCI6IFwi5YW05rW35Y6/XCIsXG5cdCAgICBcIjYzMjUyNVwiOiBcIui0teWNl+WOv1wiLFxuXHQgICAgXCI2MzI1MjZcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNjMyNjAwXCI6IFwi5p6c5rSb6JeP5peP6Ieq5rK75beeXCIsXG5cdCAgICBcIjYzMjYyMVwiOiBcIueOm+aygeWOv1wiLFxuXHQgICAgXCI2MzI2MjJcIjogXCLnj63njpvljr9cIixcblx0ICAgIFwiNjMyNjIzXCI6IFwi55SY5b635Y6/XCIsXG5cdCAgICBcIjYzMjYyNFwiOiBcIui+vuaXpeWOv1wiLFxuXHQgICAgXCI2MzI2MjVcIjogXCLkuYXmsrvljr9cIixcblx0ICAgIFwiNjMyNjI2XCI6IFwi546b5aSa5Y6/XCIsXG5cdCAgICBcIjYzMjYyN1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI2MzI3MDBcIjogXCLnjonmoJHol4/ml4/oh6rmsrvlt55cIixcblx0ICAgIFwiNjMyNzIxXCI6IFwi546J5qCR5biCXCIsXG5cdCAgICBcIjYzMjcyMlwiOiBcIuadguWkmuWOv1wiLFxuXHQgICAgXCI2MzI3MjNcIjogXCLnp7DlpJrljr9cIixcblx0ICAgIFwiNjMyNzI0XCI6IFwi5rK75aSa5Y6/XCIsXG5cdCAgICBcIjYzMjcyNVwiOiBcIuWbiuiwpuWOv1wiLFxuXHQgICAgXCI2MzI3MjZcIjogXCLmm7LpurvojrHljr9cIixcblx0ICAgIFwiNjMyNzI3XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjYzMjgwMFwiOiBcIua1t+ilv+iSmeWPpOaXj+iXj+aXj+iHquayu+W3nlwiLFxuXHQgICAgXCI2MzI4MDFcIjogXCLmoLzlsJTmnKjluIJcIixcblx0ICAgIFwiNjMyODAyXCI6IFwi5b635Luk5ZOI5biCXCIsXG5cdCAgICBcIjYzMjgyMVwiOiBcIuS5jOWFsOWOv1wiLFxuXHQgICAgXCI2MzI4MjJcIjogXCLpg73lhbDljr9cIixcblx0ICAgIFwiNjMyODIzXCI6IFwi5aSp5bO75Y6/XCIsXG5cdCAgICBcIjYzMjgyNFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI2NDAwMDBcIjogXCLlroHlpI/lm57ml4/oh6rmsrvljLpcIixcblx0ICAgIFwiNjQwMTAwXCI6IFwi6ZO25bed5biCXCIsXG5cdCAgICBcIjY0MDEwNFwiOiBcIuWFtOW6huWMulwiLFxuXHQgICAgXCI2NDAxMDVcIjogXCLopb/lpI/ljLpcIixcblx0ICAgIFwiNjQwMTA2XCI6IFwi6YeR5Yek5Yy6XCIsXG5cdCAgICBcIjY0MDEyMVwiOiBcIuawuOWugeWOv1wiLFxuXHQgICAgXCI2NDAxMjJcIjogXCLotLrlhbDljr9cIixcblx0ICAgIFwiNjQwMTgxXCI6IFwi54G15q2m5biCXCIsXG5cdCAgICBcIjY0MDE4MlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI2NDAyMDBcIjogXCLnn7PlmLTlsbHluIJcIixcblx0ICAgIFwiNjQwMjAyXCI6IFwi5aSn5q2m5Y+j5Yy6XCIsXG5cdCAgICBcIjY0MDIwNVwiOiBcIuaDoOWGnOWMulwiLFxuXHQgICAgXCI2NDAyMjFcIjogXCLlubPnvZfljr9cIixcblx0ICAgIFwiNjQwMjIyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjY0MDMwMFwiOiBcIuWQtOW/oOW4glwiLFxuXHQgICAgXCI2NDAzMDJcIjogXCLliKnpgJrljLpcIixcblx0ICAgIFwiNjQwMzAzXCI6IFwi57qi5a+65aCh5Yy6XCIsXG5cdCAgICBcIjY0MDMyM1wiOiBcIuebkOaxoOWOv1wiLFxuXHQgICAgXCI2NDAzMjRcIjogXCLlkIzlv4Pljr9cIixcblx0ICAgIFwiNjQwMzgxXCI6IFwi6Z2S6ZOc5bOh5biCXCIsXG5cdCAgICBcIjY0MDM4MlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI2NDA0MDBcIjogXCLlm7rljp/luIJcIixcblx0ICAgIFwiNjQwNDAyXCI6IFwi5Y6f5bee5Yy6XCIsXG5cdCAgICBcIjY0MDQyMlwiOiBcIuilv+WQieWOv1wiLFxuXHQgICAgXCI2NDA0MjNcIjogXCLpmoblvrfljr9cIixcblx0ICAgIFwiNjQwNDI0XCI6IFwi5rO+5rqQ5Y6/XCIsXG5cdCAgICBcIjY0MDQyNVwiOiBcIuW9remYs+WOv1wiLFxuXHQgICAgXCI2NDA0MjZcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNjQwNTAwXCI6IFwi5Lit5Y2r5biCXCIsXG5cdCAgICBcIjY0MDUwMlwiOiBcIuaymeWdoeWktOWMulwiLFxuXHQgICAgXCI2NDA1MjFcIjogXCLkuK3lroHljr9cIixcblx0ICAgIFwiNjQwNTIyXCI6IFwi5rW35Y6f5Y6/XCIsXG5cdCAgICBcIjY0MDUyM1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI2NTAwMDBcIjogXCLmlrDnlobnu7TlkL7lsJToh6rmsrvljLpcIixcblx0ICAgIFwiNjUwMTAwXCI6IFwi5LmM6bKB5pyo6b2Q5biCXCIsXG5cdCAgICBcIjY1MDEwMlwiOiBcIuWkqeWxseWMulwiLFxuXHQgICAgXCI2NTAxMDNcIjogXCLmspnkvp3lt7TlhYvljLpcIixcblx0ICAgIFwiNjUwMTA0XCI6IFwi5paw5biC5Yy6XCIsXG5cdCAgICBcIjY1MDEwNVwiOiBcIuawtOejqOayn+WMulwiLFxuXHQgICAgXCI2NTAxMDZcIjogXCLlpLTlsa/msrPljLpcIixcblx0ICAgIFwiNjUwMTA3XCI6IFwi6L6+5Z2C5Z+O5Yy6XCIsXG5cdCAgICBcIjY1MDEwOVwiOiBcIuexs+S4nOWMulwiLFxuXHQgICAgXCI2NTAxMjFcIjogXCLkuYzpsoHmnKjpvZDljr9cIixcblx0ICAgIFwiNjUwMTIyXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjY1MDIwMFwiOiBcIuWFi+aLieeOm+S+neW4glwiLFxuXHQgICAgXCI2NTAyMDJcIjogXCLni6zlsbHlrZDljLpcIixcblx0ICAgIFwiNjUwMjAzXCI6IFwi5YWL5ouJ546b5L6d5Yy6XCIsXG5cdCAgICBcIjY1MDIwNFwiOiBcIueZveeisea7qeWMulwiLFxuXHQgICAgXCI2NTAyMDVcIjogXCLkuYzlsJTnpr7ljLpcIixcblx0ICAgIFwiNjUwMjA2XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjY1MjEwMFwiOiBcIuWQkOmygeeVquWcsOWMulwiLFxuXHQgICAgXCI2NTIxMDFcIjogXCLlkJDpsoHnlarluIJcIixcblx0ICAgIFwiNjUyMTIyXCI6IFwi6YSv5ZaE5Y6/XCIsXG5cdCAgICBcIjY1MjEyM1wiOiBcIuaJmOWFi+mAiuWOv1wiLFxuXHQgICAgXCI2NTIxMjRcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNjUyMjAwXCI6IFwi5ZOI5a+G5Zyw5Yy6XCIsXG5cdCAgICBcIjY1MjIwMVwiOiBcIuWTiOWvhuW4glwiLFxuXHQgICAgXCI2NTIyMjJcIjogXCLlt7Tph4zlnaTlk4jokKjlhYvoh6rmsrvljr9cIixcblx0ICAgIFwiNjUyMjIzXCI6IFwi5LyK5ZC+5Y6/XCIsXG5cdCAgICBcIjY1MjIyNFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI2NTIzMDBcIjogXCLmmIzlkInlm57ml4/oh6rmsrvlt55cIixcblx0ICAgIFwiNjUyMzAxXCI6IFwi5piM5ZCJ5biCXCIsXG5cdCAgICBcIjY1MjMwMlwiOiBcIumYnOW6t+W4glwiLFxuXHQgICAgXCI2NTIzMjNcIjogXCLlkbzlm77lo4Hljr9cIixcblx0ICAgIFwiNjUyMzI0XCI6IFwi546b57qz5pav5Y6/XCIsXG5cdCAgICBcIjY1MjMyNVwiOiBcIuWlh+WPsOWOv1wiLFxuXHQgICAgXCI2NTIzMjdcIjogXCLlkInmnKjokKjlsJTljr9cIixcblx0ICAgIFwiNjUyMzI4XCI6IFwi5pyo5Z6S5ZOI6JCo5YWL6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjY1MjMyOVwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI2NTI3MDBcIjogXCLljZrlsJTloZTmi4nokpnlj6Toh6rmsrvlt55cIixcblx0ICAgIFwiNjUyNzAxXCI6IFwi5Y2a5LmQ5biCXCIsXG5cdCAgICBcIjY1MjcwMlwiOiBcIumYv+aLieWxseWPo+W4glwiLFxuXHQgICAgXCI2NTI3MjJcIjogXCLnsr7msrPljr9cIixcblx0ICAgIFwiNjUyNzIzXCI6IFwi5rip5rOJ5Y6/XCIsXG5cdCAgICBcIjY1MjcyNFwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI2NTI4MDBcIjogXCLlt7Tpn7Ppg63mpZ7okpnlj6Toh6rmsrvlt55cIixcblx0ICAgIFwiNjUyODAxXCI6IFwi5bqT5bCU5YuS5biCXCIsXG5cdCAgICBcIjY1MjgyMlwiOiBcIui9ruWPsOWOv1wiLFxuXHQgICAgXCI2NTI4MjNcIjogXCLlsInnioHljr9cIixcblx0ICAgIFwiNjUyODI0XCI6IFwi6Iul576M5Y6/XCIsXG5cdCAgICBcIjY1MjgyNVwiOiBcIuS4lOacq+WOv1wiLFxuXHQgICAgXCI2NTI4MjZcIjogXCLnhInogIblm57ml4/oh6rmsrvljr9cIixcblx0ICAgIFwiNjUyODI3XCI6IFwi5ZKM6Z2Z5Y6/XCIsXG5cdCAgICBcIjY1MjgyOFwiOiBcIuWSjOehleWOv1wiLFxuXHQgICAgXCI2NTI4MjlcIjogXCLljZrmuZbljr9cIixcblx0ICAgIFwiNjUyODMwXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjY1MjkwMFwiOiBcIumYv+WFi+iLj+WcsOWMulwiLFxuXHQgICAgXCI2NTI5MDFcIjogXCLpmL/lhYvoi4/luIJcIixcblx0ICAgIFwiNjUyOTIyXCI6IFwi5rip5a6/5Y6/XCIsXG5cdCAgICBcIjY1MjkyM1wiOiBcIuW6k+i9puWOv1wiLFxuXHQgICAgXCI2NTI5MjRcIjogXCLmspnpm4Xljr9cIixcblx0ICAgIFwiNjUyOTI1XCI6IFwi5paw5ZKM5Y6/XCIsXG5cdCAgICBcIjY1MjkyNlwiOiBcIuaLnOWfjuWOv1wiLFxuXHQgICAgXCI2NTI5MjdcIjogXCLkuYzku4Dljr9cIixcblx0ICAgIFwiNjUyOTI4XCI6IFwi6Zi/55Om5o+Q5Y6/XCIsXG5cdCAgICBcIjY1MjkyOVwiOiBcIuafr+WdquWOv1wiLFxuXHQgICAgXCI2NTI5MzBcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNjUzMDAwXCI6IFwi5YWL5a2c5YuS6IuP5p+v5bCU5YWL5a2c6Ieq5rK75beeXCIsXG5cdCAgICBcIjY1MzAwMVwiOiBcIumYv+WbvuS7gOW4glwiLFxuXHQgICAgXCI2NTMwMjJcIjogXCLpmL/lhYvpmbbljr9cIixcblx0ICAgIFwiNjUzMDIzXCI6IFwi6Zi/5ZCI5aWH5Y6/XCIsXG5cdCAgICBcIjY1MzAyNFwiOiBcIuS5jOaBsOWOv1wiLFxuXHQgICAgXCI2NTMwMjVcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNjUzMTAwXCI6IFwi5ZaA5LuA5Zyw5Yy6XCIsXG5cdCAgICBcIjY1MzEwMVwiOiBcIuWWgOS7gOW4glwiLFxuXHQgICAgXCI2NTMxMjFcIjogXCLnlo/pmYTljr9cIixcblx0ICAgIFwiNjUzMTIyXCI6IFwi55aP5YuS5Y6/XCIsXG5cdCAgICBcIjY1MzEyM1wiOiBcIuiLseWQieaymeWOv1wiLFxuXHQgICAgXCI2NTMxMjRcIjogXCLms73mma7ljr9cIixcblx0ICAgIFwiNjUzMTI1XCI6IFwi6I6O6L2m5Y6/XCIsXG5cdCAgICBcIjY1MzEyNlwiOiBcIuWPtuWfjuWOv1wiLFxuXHQgICAgXCI2NTMxMjdcIjogXCLpuqbnm5bmj5Dljr9cIixcblx0ICAgIFwiNjUzMTI4XCI6IFwi5bKz5pmu5rmW5Y6/XCIsXG5cdCAgICBcIjY1MzEyOVwiOiBcIuS8veW4iOWOv1wiLFxuXHQgICAgXCI2NTMxMzBcIjogXCLlt7TmpZrljr9cIixcblx0ICAgIFwiNjUzMTMxXCI6IFwi5aGU5LuA5bqT5bCU5bmy5aGU5ZCJ5YWL6Ieq5rK75Y6/XCIsXG5cdCAgICBcIjY1MzEzMlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI2NTMyMDBcIjogXCLlkoznlLDlnLDljLpcIixcblx0ICAgIFwiNjUzMjAxXCI6IFwi5ZKM55Sw5biCXCIsXG5cdCAgICBcIjY1MzIyMVwiOiBcIuWSjOeUsOWOv1wiLFxuXHQgICAgXCI2NTMyMjJcIjogXCLloqjnjonljr9cIixcblx0ICAgIFwiNjUzMjIzXCI6IFwi55qu5bGx5Y6/XCIsXG5cdCAgICBcIjY1MzIyNFwiOiBcIua0m+a1puWOv1wiLFxuXHQgICAgXCI2NTMyMjVcIjogXCLnrZbli5Lljr9cIixcblx0ICAgIFwiNjUzMjI2XCI6IFwi5LqO55Sw5Y6/XCIsXG5cdCAgICBcIjY1MzIyN1wiOiBcIuawkeS4sOWOv1wiLFxuXHQgICAgXCI2NTMyMjhcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNjU0MDAwXCI6IFwi5LyK54qB5ZOI6JCo5YWL6Ieq5rK75beeXCIsXG5cdCAgICBcIjY1NDAwMlwiOiBcIuS8iuWugeW4glwiLFxuXHQgICAgXCI2NTQwMDNcIjogXCLlpY7lsa/luIJcIixcblx0ICAgIFwiNjU0MDIxXCI6IFwi5LyK5a6B5Y6/XCIsXG5cdCAgICBcIjY1NDAyMlwiOiBcIuWvn+W4g+afpeWwlOmUoeS8r+iHquayu+WOv1wiLFxuXHQgICAgXCI2NTQwMjNcIjogXCLpnI3ln47ljr9cIixcblx0ICAgIFwiNjU0MDI0XCI6IFwi5bep55WZ5Y6/XCIsXG5cdCAgICBcIjY1NDAyNVwiOiBcIuaWsOa6kOWOv1wiLFxuXHQgICAgXCI2NTQwMjZcIjogXCLmmK3oi4/ljr9cIixcblx0ICAgIFwiNjU0MDI3XCI6IFwi54m55YWL5pav5Y6/XCIsXG5cdCAgICBcIjY1NDAyOFwiOiBcIuWwvOWLkuWFi+WOv1wiLFxuXHQgICAgXCI2NTQwMjlcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNjU0MjAwXCI6IFwi5aGU5Z+O5Zyw5Yy6XCIsXG5cdCAgICBcIjY1NDIwMVwiOiBcIuWhlOWfjuW4glwiLFxuXHQgICAgXCI2NTQyMDJcIjogXCLkuYzoi4/luIJcIixcblx0ICAgIFwiNjU0MjIxXCI6IFwi6aKd5pWP5Y6/XCIsXG5cdCAgICBcIjY1NDIyM1wiOiBcIuaymea5vuWOv1wiLFxuXHQgICAgXCI2NTQyMjRcIjogXCLmiZjph4zljr9cIixcblx0ICAgIFwiNjU0MjI1XCI6IFwi6KOV5rCR5Y6/XCIsXG5cdCAgICBcIjY1NDIyNlwiOiBcIuWSjOW4g+WFi+i1m+WwlOiSmeWPpOiHquayu+WOv1wiLFxuXHQgICAgXCI2NTQyMjdcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNjU0MzAwXCI6IFwi6Zi/5YuS5rOw5Zyw5Yy6XCIsXG5cdCAgICBcIjY1NDMwMVwiOiBcIumYv+WLkuazsOW4glwiLFxuXHQgICAgXCI2NTQzMjFcIjogXCLluIPlsJTmtKXljr9cIixcblx0ICAgIFwiNjU0MzIyXCI6IFwi5a+M6JW05Y6/XCIsXG5cdCAgICBcIjY1NDMyM1wiOiBcIuemj+a1t+WOv1wiLFxuXHQgICAgXCI2NTQzMjRcIjogXCLlk4jlt7TmsrPljr9cIixcblx0ICAgIFwiNjU0MzI1XCI6IFwi6Z2S5rKz5Y6/XCIsXG5cdCAgICBcIjY1NDMyNlwiOiBcIuWQieacqOS5g+WOv1wiLFxuXHQgICAgXCI2NTQzMjdcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNjU5MDAxXCI6IFwi55+z5rKz5a2Q5biCXCIsXG5cdCAgICBcIjY1OTAwMlwiOiBcIumYv+aLieWwlOW4glwiLFxuXHQgICAgXCI2NTkwMDNcIjogXCLlm77mnKjoiJLlhYvluIJcIixcblx0ICAgIFwiNjU5MDA0XCI6IFwi5LqU5a625rig5biCXCIsXG5cdCAgICBcIjcxMDAwMFwiOiBcIuWPsOa5vlwiLFxuXHQgICAgXCI3MTAxMDBcIjogXCLlj7DljJfluIJcIixcblx0ICAgIFwiNzEwMTAxXCI6IFwi5Lit5q2j5Yy6XCIsXG5cdCAgICBcIjcxMDEwMlwiOiBcIuWkp+WQjOWMulwiLFxuXHQgICAgXCI3MTAxMDNcIjogXCLkuK3lsbHljLpcIixcblx0ICAgIFwiNzEwMTA0XCI6IFwi5p2+5bGx5Yy6XCIsXG5cdCAgICBcIjcxMDEwNVwiOiBcIuWkp+WuieWMulwiLFxuXHQgICAgXCI3MTAxMDZcIjogXCLkuIfljY7ljLpcIixcblx0ICAgIFwiNzEwMTA3XCI6IFwi5L+h5LmJ5Yy6XCIsXG5cdCAgICBcIjcxMDEwOFwiOiBcIuWjq+ael+WMulwiLFxuXHQgICAgXCI3MTAxMDlcIjogXCLljJfmipXljLpcIixcblx0ICAgIFwiNzEwMTEwXCI6IFwi5YaF5rmW5Yy6XCIsXG5cdCAgICBcIjcxMDExMVwiOiBcIuWNl+a4r+WMulwiLFxuXHQgICAgXCI3MTAxMTJcIjogXCLmloflsbHljLpcIixcblx0ICAgIFwiNzEwMTEzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjcxMDIwMFwiOiBcIumrmOmbhOW4glwiLFxuXHQgICAgXCI3MTAyMDFcIjogXCLmlrDlhbTljLpcIixcblx0ICAgIFwiNzEwMjAyXCI6IFwi5YmN6YeR5Yy6XCIsXG5cdCAgICBcIjcxMDIwM1wiOiBcIuiKqembheWMulwiLFxuXHQgICAgXCI3MTAyMDRcIjogXCLnm5Dln5XljLpcIixcblx0ICAgIFwiNzEwMjA1XCI6IFwi6byT5bGx5Yy6XCIsXG5cdCAgICBcIjcxMDIwNlwiOiBcIuaXl+a0peWMulwiLFxuXHQgICAgXCI3MTAyMDdcIjogXCLliY3plYfljLpcIixcblx0ICAgIFwiNzEwMjA4XCI6IFwi5LiJ5rCR5Yy6XCIsXG5cdCAgICBcIjcxMDIwOVwiOiBcIuW3puiQpeWMulwiLFxuXHQgICAgXCI3MTAyMTBcIjogXCLmpaDmopPljLpcIixcblx0ICAgIFwiNzEwMjExXCI6IFwi5bCP5riv5Yy6XCIsXG5cdCAgICBcIjcxMDIxMlwiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI3MTAyNDFcIjogXCLoi5Ppm4XljLpcIixcblx0ICAgIFwiNzEwMjQyXCI6IFwi5LuB5q2m5Yy6XCIsXG5cdCAgICBcIjcxMDI0M1wiOiBcIuWkp+ekvuWMulwiLFxuXHQgICAgXCI3MTAyNDRcIjogXCLlhojlsbHljLpcIixcblx0ICAgIFwiNzEwMjQ1XCI6IFwi6Lev56u55Yy6XCIsXG5cdCAgICBcIjcxMDI0NlwiOiBcIumYv+iOsuWMulwiLFxuXHQgICAgXCI3MTAyNDdcIjogXCLnlLDlr67ljLpcIixcblx0ICAgIFwiNzEwMjQ4XCI6IFwi54eV5bei5Yy6XCIsXG5cdCAgICBcIjcxMDI0OVwiOiBcIuahpeWktOWMulwiLFxuXHQgICAgXCI3MTAyNTBcIjogXCLmopPlrpjljLpcIixcblx0ICAgIFwiNzEwMjUxXCI6IFwi5byl6ZmA5Yy6XCIsXG5cdCAgICBcIjcxMDI1MlwiOiBcIuawuOWuieWMulwiLFxuXHQgICAgXCI3MTAyNTNcIjogXCLmuZblhoXljLpcIixcblx0ICAgIFwiNzEwMjU0XCI6IFwi5Yek5bGx5Yy6XCIsXG5cdCAgICBcIjcxMDI1NVwiOiBcIuWkp+WvruWMulwiLFxuXHQgICAgXCI3MTAyNTZcIjogXCLmnpflm63ljLpcIixcblx0ICAgIFwiNzEwMjU3XCI6IFwi6bif5p2+5Yy6XCIsXG5cdCAgICBcIjcxMDI1OFwiOiBcIuWkp+agkeWMulwiLFxuXHQgICAgXCI3MTAyNTlcIjogXCLml5flsbHljLpcIixcblx0ICAgIFwiNzEwMjYwXCI6IFwi576O5rWT5Yy6XCIsXG5cdCAgICBcIjcxMDI2MVwiOiBcIuWFrem+n+WMulwiLFxuXHQgICAgXCI3MTAyNjJcIjogXCLlhoXpl6jljLpcIixcblx0ICAgIFwiNzEwMjYzXCI6IFwi5p2J5p6X5Yy6XCIsXG5cdCAgICBcIjcxMDI2NFwiOiBcIueUsuS7meWMulwiLFxuXHQgICAgXCI3MTAyNjVcIjogXCLmoYPmupDljLpcIixcblx0ICAgIFwiNzEwMjY2XCI6IFwi6YKj546b5aSP5Yy6XCIsXG5cdCAgICBcIjcxMDI2N1wiOiBcIuiMguael+WMulwiLFxuXHQgICAgXCI3MTAyNjhcIjogXCLojITokKPljLpcIixcblx0ICAgIFwiNzEwMzAwXCI6IFwi5Y+w5Y2X5biCXCIsXG5cdCAgICBcIjcxMDMwMVwiOiBcIuS4reilv+WMulwiLFxuXHQgICAgXCI3MTAzMDJcIjogXCLkuJzljLpcIixcblx0ICAgIFwiNzEwMzAzXCI6IFwi5Y2X5Yy6XCIsXG5cdCAgICBcIjcxMDMwNFwiOiBcIuWMl+WMulwiLFxuXHQgICAgXCI3MTAzMDVcIjogXCLlronlubPljLpcIixcblx0ICAgIFwiNzEwMzA2XCI6IFwi5a6J5Y2X5Yy6XCIsXG5cdCAgICBcIjcxMDMwN1wiOiBcIuWFtuWug+WMulwiLFxuXHQgICAgXCI3MTAzMzlcIjogXCLmsLjlurfljLpcIixcblx0ICAgIFwiNzEwMzQwXCI6IFwi5b2S5LuB5Yy6XCIsXG5cdCAgICBcIjcxMDM0MVwiOiBcIuaWsOWMluWMulwiLFxuXHQgICAgXCI3MTAzNDJcIjogXCLlt6bplYfljLpcIixcblx0ICAgIFwiNzEwMzQzXCI6IFwi546J5LqV5Yy6XCIsXG5cdCAgICBcIjcxMDM0NFwiOiBcIualoOilv+WMulwiLFxuXHQgICAgXCI3MTAzNDVcIjogXCLljZfljJbljLpcIixcblx0ICAgIFwiNzEwMzQ2XCI6IFwi5LuB5b635Yy6XCIsXG5cdCAgICBcIjcxMDM0N1wiOiBcIuWFs+W6meWMulwiLFxuXHQgICAgXCI3MTAzNDhcIjogXCLpvpnltI7ljLpcIixcblx0ICAgIFwiNzEwMzQ5XCI6IFwi5a6Y55Sw5Yy6XCIsXG5cdCAgICBcIjcxMDM1MFwiOiBcIum6u+ixhuWMulwiLFxuXHQgICAgXCI3MTAzNTFcIjogXCLkvbPph4zljLpcIixcblx0ICAgIFwiNzEwMzUyXCI6IFwi6KW/5riv5Yy6XCIsXG5cdCAgICBcIjcxMDM1M1wiOiBcIuS4g+iCoeWMulwiLFxuXHQgICAgXCI3MTAzNTRcIjogXCLlsIblhpvljLpcIixcblx0ICAgIFwiNzEwMzU1XCI6IFwi5a2m55Sy5Yy6XCIsXG5cdCAgICBcIjcxMDM1NlwiOiBcIuWMl+mXqOWMulwiLFxuXHQgICAgXCI3MTAzNTdcIjogXCLmlrDokKXljLpcIixcblx0ICAgIFwiNzEwMzU4XCI6IFwi5ZCO5aOB5Yy6XCIsXG5cdCAgICBcIjcxMDM1OVwiOiBcIueZveays+WMulwiLFxuXHQgICAgXCI3MTAzNjBcIjogXCLkuJzlsbHljLpcIixcblx0ICAgIFwiNzEwMzYxXCI6IFwi5YWt55Sy5Yy6XCIsXG5cdCAgICBcIjcxMDM2MlwiOiBcIuS4i+iQpeWMulwiLFxuXHQgICAgXCI3MTAzNjNcIjogXCLmn7PokKXljLpcIixcblx0ICAgIFwiNzEwMzY0XCI6IFwi55uQ5rC05Yy6XCIsXG5cdCAgICBcIjcxMDM2NVwiOiBcIuWWhOWMluWMulwiLFxuXHQgICAgXCI3MTAzNjZcIjogXCLlpKflhoXljLpcIixcblx0ICAgIFwiNzEwMzY3XCI6IFwi5bGx5LiK5Yy6XCIsXG5cdCAgICBcIjcxMDM2OFwiOiBcIuaWsOW4guWMulwiLFxuXHQgICAgXCI3MTAzNjlcIjogXCLlronlrprljLpcIixcblx0ICAgIFwiNzEwNDAwXCI6IFwi5Y+w5Lit5biCXCIsXG5cdCAgICBcIjcxMDQwMVwiOiBcIuS4reWMulwiLFxuXHQgICAgXCI3MTA0MDJcIjogXCLkuJzljLpcIixcblx0ICAgIFwiNzEwNDAzXCI6IFwi5Y2X5Yy6XCIsXG5cdCAgICBcIjcxMDQwNFwiOiBcIuilv+WMulwiLFxuXHQgICAgXCI3MTA0MDVcIjogXCLljJfljLpcIixcblx0ICAgIFwiNzEwNDA2XCI6IFwi5YyX5bGv5Yy6XCIsXG5cdCAgICBcIjcxMDQwN1wiOiBcIuilv+Wxr+WMulwiLFxuXHQgICAgXCI3MTA0MDhcIjogXCLljZflsa/ljLpcIixcblx0ICAgIFwiNzEwNDA5XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjcxMDQzMVwiOiBcIuWkquW5s+WMulwiLFxuXHQgICAgXCI3MTA0MzJcIjogXCLlpKfph4zljLpcIixcblx0ICAgIFwiNzEwNDMzXCI6IFwi6Zu+5bOw5Yy6XCIsXG5cdCAgICBcIjcxMDQzNFwiOiBcIuS5jOaXpeWMulwiLFxuXHQgICAgXCI3MTA0MzVcIjogXCLkuLDljp/ljLpcIixcblx0ICAgIFwiNzEwNDM2XCI6IFwi5ZCO6YeM5Yy6XCIsXG5cdCAgICBcIjcxMDQzN1wiOiBcIuefs+WGiOWMulwiLFxuXHQgICAgXCI3MTA0MzhcIjogXCLkuJzlir/ljLpcIixcblx0ICAgIFwiNzEwNDM5XCI6IFwi5ZKM5bmz5Yy6XCIsXG5cdCAgICBcIjcxMDQ0MFwiOiBcIuaWsOekvuWMulwiLFxuXHQgICAgXCI3MTA0NDFcIjogXCLmva3lrZDljLpcIixcblx0ICAgIFwiNzEwNDQyXCI6IFwi5aSn6ZuF5Yy6XCIsXG5cdCAgICBcIjcxMDQ0M1wiOiBcIuelnuWGiOWMulwiLFxuXHQgICAgXCI3MTA0NDRcIjogXCLlpKfogprljLpcIixcblx0ICAgIFwiNzEwNDQ1XCI6IFwi5rKZ6bm/5Yy6XCIsXG5cdCAgICBcIjcxMDQ0NlwiOiBcIum+meS6leWMulwiLFxuXHQgICAgXCI3MTA0NDdcIjogXCLmoqfmoJbljLpcIixcblx0ICAgIFwiNzEwNDQ4XCI6IFwi5riF5rC05Yy6XCIsXG5cdCAgICBcIjcxMDQ0OVwiOiBcIuWkp+eUsuWMulwiLFxuXHQgICAgXCI3MTA0NTBcIjogXCLlpJbln5TljLpcIixcblx0ICAgIFwiNzEwNDUxXCI6IFwi5aSn5a6J5Yy6XCIsXG5cdCAgICBcIjcxMDUwMFwiOiBcIumHkemXqOWOv1wiLFxuXHQgICAgXCI3MTA1MDdcIjogXCLph5HmspnplYdcIixcblx0ICAgIFwiNzEwNTA4XCI6IFwi6YeR5rmW6ZWHXCIsXG5cdCAgICBcIjcxMDUwOVwiOiBcIumHkeWugeS5oVwiLFxuXHQgICAgXCI3MTA1MTBcIjogXCLph5Hln47plYdcIixcblx0ICAgIFwiNzEwNTExXCI6IFwi54OI5bG/5LmhXCIsXG5cdCAgICBcIjcxMDUxMlwiOiBcIuS5jOWdteS5oVwiLFxuXHQgICAgXCI3MTA2MDBcIjogXCLljZfmipXljr9cIixcblx0ICAgIFwiNzEwNjE0XCI6IFwi5Y2X5oqV5biCXCIsXG5cdCAgICBcIjcxMDYxNVwiOiBcIuS4reWvruS5oVwiLFxuXHQgICAgXCI3MTA2MTZcIjogXCLojYnlsa/plYdcIixcblx0ICAgIFwiNzEwNjE3XCI6IFwi5Zu95aeT5LmhXCIsXG5cdCAgICBcIjcxMDYxOFwiOiBcIuWflOmHjOmVh1wiLFxuXHQgICAgXCI3MTA2MTlcIjogXCLku4HniLHkuaFcIixcblx0ICAgIFwiNzEwNjIwXCI6IFwi5ZCN6Ze05LmhXCIsXG5cdCAgICBcIjcxMDYyMVwiOiBcIumbhumbhumVh1wiLFxuXHQgICAgXCI3MTA2MjJcIjogXCLmsLTph4zkuaFcIixcblx0ICAgIFwiNzEwNjIzXCI6IFwi6bG85rGg5LmhXCIsXG5cdCAgICBcIjcxMDYyNFwiOiBcIuS/oeS5ieS5oVwiLFxuXHQgICAgXCI3MTA2MjVcIjogXCLnq7nlsbHplYdcIixcblx0ICAgIFwiNzEwNjI2XCI6IFwi6bm/6LC35LmhXCIsXG5cdCAgICBcIjcxMDcwMFwiOiBcIuWfuumahuW4glwiLFxuXHQgICAgXCI3MTA3MDFcIjogXCLku4HniLHljLpcIixcblx0ICAgIFwiNzEwNzAyXCI6IFwi5L+h5LmJ5Yy6XCIsXG5cdCAgICBcIjcxMDcwM1wiOiBcIuS4reato+WMulwiLFxuXHQgICAgXCI3MTA3MDRcIjogXCLkuK3lsbHljLpcIixcblx0ICAgIFwiNzEwNzA1XCI6IFwi5a6J5LmQ5Yy6XCIsXG5cdCAgICBcIjcxMDcwNlwiOiBcIuaaluaaluWMulwiLFxuXHQgICAgXCI3MTA3MDdcIjogXCLkuIPloLXljLpcIixcblx0ICAgIFwiNzEwNzA4XCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjcxMDgwMFwiOiBcIuaWsOerueW4glwiLFxuXHQgICAgXCI3MTA4MDFcIjogXCLkuJzljLpcIixcblx0ICAgIFwiNzEwODAyXCI6IFwi5YyX5Yy6XCIsXG5cdCAgICBcIjcxMDgwM1wiOiBcIummmeWxseWMulwiLFxuXHQgICAgXCI3MTA4MDRcIjogXCLlhbblroPljLpcIixcblx0ICAgIFwiNzEwOTAwXCI6IFwi5ZiJ5LmJ5biCXCIsXG5cdCAgICBcIjcxMDkwMVwiOiBcIuS4nOWMulwiLFxuXHQgICAgXCI3MTA5MDJcIjogXCLopb/ljLpcIixcblx0ICAgIFwiNzEwOTAzXCI6IFwi5YW25a6D5Yy6XCIsXG5cdCAgICBcIjcxMTEwMFwiOiBcIuaWsOWMl+W4glwiLFxuXHQgICAgXCI3MTExMzBcIjogXCLkuIfph4zljLpcIixcblx0ICAgIFwiNzExMTMxXCI6IFwi6YeR5bGx5Yy6XCIsXG5cdCAgICBcIjcxMTEzMlwiOiBcIuadv+ahpeWMulwiLFxuXHQgICAgXCI3MTExMzNcIjogXCLmsZDmraLljLpcIixcblx0ICAgIFwiNzExMTM0XCI6IFwi5rex5Z2R5Yy6XCIsXG5cdCAgICBcIjcxMTEzNVwiOiBcIuefs+eih+WMulwiLFxuXHQgICAgXCI3MTExMzZcIjogXCLnkZ7oirPljLpcIixcblx0ICAgIFwiNzExMTM3XCI6IFwi5bmz5rqq5Yy6XCIsXG5cdCAgICBcIjcxMTEzOFwiOiBcIuWPjOa6quWMulwiLFxuXHQgICAgXCI3MTExMzlcIjogXCLotKHlr67ljLpcIixcblx0ICAgIFwiNzExMTQwXCI6IFwi5paw5bqX5Yy6XCIsXG5cdCAgICBcIjcxMTE0MVwiOiBcIuWdquael+WMulwiLFxuXHQgICAgXCI3MTExNDJcIjogXCLkuYzmnaXljLpcIixcblx0ICAgIFwiNzExMTQzXCI6IFwi5rC45ZKM5Yy6XCIsXG5cdCAgICBcIjcxMTE0NFwiOiBcIuS4reWSjOWMulwiLFxuXHQgICAgXCI3MTExNDVcIjogXCLlnJ/ln47ljLpcIixcblx0ICAgIFwiNzExMTQ2XCI6IFwi5LiJ5bOh5Yy6XCIsXG5cdCAgICBcIjcxMTE0N1wiOiBcIuagkeael+WMulwiLFxuXHQgICAgXCI3MTExNDhcIjogXCLojrrmrYzljLpcIixcblx0ICAgIFwiNzExMTQ5XCI6IFwi5LiJ6YeN5Yy6XCIsXG5cdCAgICBcIjcxMTE1MFwiOiBcIuaWsOW6hOWMulwiLFxuXHQgICAgXCI3MTExNTFcIjogXCLms7DlsbHljLpcIixcblx0ICAgIFwiNzExMTUyXCI6IFwi5p6X5Y+j5Yy6XCIsXG5cdCAgICBcIjcxMTE1M1wiOiBcIuiKpua0suWMulwiLFxuXHQgICAgXCI3MTExNTRcIjogXCLkupTogqHljLpcIixcblx0ICAgIFwiNzExMTU1XCI6IFwi5YWr6YeM5Yy6XCIsXG5cdCAgICBcIjcxMTE1NlwiOiBcIua3oeawtOWMulwiLFxuXHQgICAgXCI3MTExNTdcIjogXCLkuInoip3ljLpcIixcblx0ICAgIFwiNzExMTU4XCI6IFwi55+z6Zeo5Yy6XCIsXG5cdCAgICBcIjcxMTIwMFwiOiBcIuWunOWFsOWOv1wiLFxuXHQgICAgXCI3MTEyMTRcIjogXCLlrpzlhbDluIJcIixcblx0ICAgIFwiNzExMjE1XCI6IFwi5aS05Z+O6ZWHXCIsXG5cdCAgICBcIjcxMTIxNlwiOiBcIuekgea6quS5oVwiLFxuXHQgICAgXCI3MTEyMTdcIjogXCLlo67lm7TkuaFcIixcblx0ICAgIFwiNzExMjE4XCI6IFwi5ZGY5bGx5LmhXCIsXG5cdCAgICBcIjcxMTIxOVwiOiBcIue9l+S4nOmVh1wiLFxuXHQgICAgXCI3MTEyMjBcIjogXCLkuInmmJ/kuaFcIixcblx0ICAgIFwiNzExMjIxXCI6IFwi5aSn5ZCM5LmhXCIsXG5cdCAgICBcIjcxMTIyMlwiOiBcIuS6lOe7k+S5oVwiLFxuXHQgICAgXCI3MTEyMjNcIjogXCLlhqzlsbHkuaFcIixcblx0ICAgIFwiNzExMjI0XCI6IFwi6IuP5r6z6ZWHXCIsXG5cdCAgICBcIjcxMTIyNVwiOiBcIuWNl+a+s+S5oVwiLFxuXHQgICAgXCI3MTEyMjZcIjogXCLpkpPpsbzlj7BcIixcblx0ICAgIFwiNzExMzAwXCI6IFwi5paw56u55Y6/XCIsXG5cdCAgICBcIjcxMTMxNFwiOiBcIuerueWMl+W4glwiLFxuXHQgICAgXCI3MTEzMTVcIjogXCLmuZblj6PkuaFcIixcblx0ICAgIFwiNzExMzE2XCI6IFwi5paw5Liw5LmhXCIsXG5cdCAgICBcIjcxMTMxN1wiOiBcIuaWsOWflOmVh1wiLFxuXHQgICAgXCI3MTEzMThcIjogXCLlhbPopb/plYdcIixcblx0ICAgIFwiNzExMzE5XCI6IFwi6IqO5p6X5LmhXCIsXG5cdCAgICBcIjcxMTMyMFwiOiBcIuWuneWxseS5oVwiLFxuXHQgICAgXCI3MTEzMjFcIjogXCLnq7nkuJzplYdcIixcblx0ICAgIFwiNzExMzIyXCI6IFwi5LqU5bOw5LmhXCIsXG5cdCAgICBcIjcxMTMyM1wiOiBcIuaoquWxseS5oVwiLFxuXHQgICAgXCI3MTEzMjRcIjogXCLlsJbnn7PkuaFcIixcblx0ICAgIFwiNzExMzI1XCI6IFwi5YyX5Z+U5LmhXCIsXG5cdCAgICBcIjcxMTMyNlwiOiBcIuWzqOecieS5oVwiLFxuXHQgICAgXCI3MTE0MDBcIjogXCLmoYPlm63ljr9cIixcblx0ICAgIFwiNzExNDE0XCI6IFwi5Lit5Z2c5biCXCIsXG5cdCAgICBcIjcxMTQxNVwiOiBcIuW5s+mVh+W4glwiLFxuXHQgICAgXCI3MTE0MTZcIjogXCLpvpnmva3kuaFcIixcblx0ICAgIFwiNzExNDE3XCI6IFwi5p2o5qKF5biCXCIsXG5cdCAgICBcIjcxMTQxOFwiOiBcIuaWsOWxi+S5oVwiLFxuXHQgICAgXCI3MTE0MTlcIjogXCLop4Lpn7PkuaFcIixcblx0ICAgIFwiNzExNDIwXCI6IFwi5qGD5Zut5biCXCIsXG5cdCAgICBcIjcxMTQyMVwiOiBcIum+n+WxseS5oVwiLFxuXHQgICAgXCI3MTE0MjJcIjogXCLlhavlvrfluIJcIixcblx0ICAgIFwiNzExNDIzXCI6IFwi5aSn5rqq6ZWHXCIsXG5cdCAgICBcIjcxMTQyNFwiOiBcIuWkjeWFtOS5oVwiLFxuXHQgICAgXCI3MTE0MjVcIjogXCLlpKflm63kuaFcIixcblx0ICAgIFwiNzExNDI2XCI6IFwi6Iqm56u55LmhXCIsXG5cdCAgICBcIjcxMTUwMFwiOiBcIuiLl+agl+WOv1wiLFxuXHQgICAgXCI3MTE1MTlcIjogXCLnq7nljZfplYdcIixcblx0ICAgIFwiNzExNTIwXCI6IFwi5aS05Lu96ZWHXCIsXG5cdCAgICBcIjcxMTUyMVwiOiBcIuS4iea5vuS5oVwiLFxuXHQgICAgXCI3MTE1MjJcIjogXCLljZfluoTkuaFcIixcblx0ICAgIFwiNzExNTIzXCI6IFwi54uu5r2t5LmhXCIsXG5cdCAgICBcIjcxMTUyNFwiOiBcIuWQjum+memVh1wiLFxuXHQgICAgXCI3MTE1MjVcIjogXCLpgJrpnITplYdcIixcblx0ICAgIFwiNzExNTI2XCI6IFwi6IuR6YeM6ZWHXCIsXG5cdCAgICBcIjcxMTUyN1wiOiBcIuiLl+agl+W4glwiLFxuXHQgICAgXCI3MTE1MjhcIjogXCLpgKDmoaXkuaFcIixcblx0ICAgIFwiNzExNTI5XCI6IFwi5aS05bGL5LmhXCIsXG5cdCAgICBcIjcxMTUzMFwiOiBcIuWFrOmmhuS5oVwiLFxuXHQgICAgXCI3MTE1MzFcIjogXCLlpKfmuZbkuaFcIixcblx0ICAgIFwiNzExNTMyXCI6IFwi5rOw5a6J5LmhXCIsXG5cdCAgICBcIjcxMTUzM1wiOiBcIumTnOmUo+S5oVwiLFxuXHQgICAgXCI3MTE1MzRcIjogXCLkuInkuYnkuaFcIixcblx0ICAgIFwiNzExNTM1XCI6IFwi6KW/5rmW5LmhXCIsXG5cdCAgICBcIjcxMTUzNlwiOiBcIuWNk+WFsOmVh1wiLFxuXHQgICAgXCI3MTE3MDBcIjogXCLlvbDljJbljr9cIixcblx0ICAgIFwiNzExNzI3XCI6IFwi5b2w5YyW5biCXCIsXG5cdCAgICBcIjcxMTcyOFwiOiBcIuiKrOWbreS5oVwiLFxuXHQgICAgXCI3MTE3MjlcIjogXCLoirHlnZvkuaFcIixcblx0ICAgIFwiNzExNzMwXCI6IFwi56eA5rC05LmhXCIsXG5cdCAgICBcIjcxMTczMVwiOiBcIum5v+a4r+mVh1wiLFxuXHQgICAgXCI3MTE3MzJcIjogXCLnpo/lhbTkuaFcIixcblx0ICAgIFwiNzExNzMzXCI6IFwi57q/6KW/5LmhXCIsXG5cdCAgICBcIjcxMTczNFwiOiBcIuWSjOe+jumVh1wiLFxuXHQgICAgXCI3MTE3MzVcIjogXCLkvLjmuK/kuaFcIixcblx0ICAgIFwiNzExNzM2XCI6IFwi5ZGY5p6X6ZWHXCIsXG5cdCAgICBcIjcxMTczN1wiOiBcIuekvuWktOS5oVwiLFxuXHQgICAgXCI3MTE3MzhcIjogXCLmsLjpnZbkuaFcIixcblx0ICAgIFwiNzExNzM5XCI6IFwi5Z+U5b+D5LmhXCIsXG5cdCAgICBcIjcxMTc0MFwiOiBcIua6qua5lumVh1wiLFxuXHQgICAgXCI3MTE3NDFcIjogXCLlpKfmnZHkuaFcIixcblx0ICAgIFwiNzExNzQyXCI6IFwi5Z+U55uQ5LmhXCIsXG5cdCAgICBcIjcxMTc0M1wiOiBcIueUsOS4remVh1wiLFxuXHQgICAgXCI3MTE3NDRcIjogXCLljJfmlpfplYdcIixcblx0ICAgIFwiNzExNzQ1XCI6IFwi55Sw5bC+5LmhXCIsXG5cdCAgICBcIjcxMTc0NlwiOiBcIuWfpOWktOS5oVwiLFxuXHQgICAgXCI3MTE3NDdcIjogXCLmuqrlt57kuaFcIixcblx0ICAgIFwiNzExNzQ4XCI6IFwi56u55aGY5LmhXCIsXG5cdCAgICBcIjcxMTc0OVwiOiBcIuS6jOael+mVh1wiLFxuXHQgICAgXCI3MTE3NTBcIjogXCLlpKfln47kuaFcIixcblx0ICAgIFwiNzExNzUxXCI6IFwi6Iqz6IuR5LmhXCIsXG5cdCAgICBcIjcxMTc1MlwiOiBcIuS6jOawtOS5oVwiLFxuXHQgICAgXCI3MTE5MDBcIjogXCLlmInkuYnljr9cIixcblx0ICAgIFwiNzExOTE5XCI6IFwi55Wq6Lev5LmhXCIsXG5cdCAgICBcIjcxMTkyMFwiOiBcIuaiheWxseS5oVwiLFxuXHQgICAgXCI3MTE5MjFcIjogXCLnq7nltI7kuaFcIixcblx0ICAgIFwiNzExOTIyXCI6IFwi6Zi/6YeM5bGx5LmhXCIsXG5cdCAgICBcIjcxMTkyM1wiOiBcIuS4reWflOS5oVwiLFxuXHQgICAgXCI3MTE5MjRcIjogXCLlpKfln5TkuaFcIixcblx0ICAgIFwiNzExOTI1XCI6IFwi5rC05LiK5LmhXCIsXG5cdCAgICBcIjcxMTkyNlwiOiBcIum5v+iNieS5oVwiLFxuXHQgICAgXCI3MTE5MjdcIjogXCLlpKrkv53luIJcIixcblx0ICAgIFwiNzExOTI4XCI6IFwi5py05a2Q5biCXCIsXG5cdCAgICBcIjcxMTkyOVwiOiBcIuS4nOefs+S5oVwiLFxuXHQgICAgXCI3MTE5MzBcIjogXCLlha3ohJrkuaFcIixcblx0ICAgIFwiNzExOTMxXCI6IFwi5paw5riv5LmhXCIsXG5cdCAgICBcIjcxMTkzMlwiOiBcIuawkembhOS5oVwiLFxuXHQgICAgXCI3MTE5MzNcIjogXCLlpKfmnpfplYdcIixcblx0ICAgIFwiNzExOTM0XCI6IFwi5rqq5Y+j5LmhXCIsXG5cdCAgICBcIjcxMTkzNVwiOiBcIuS5ieerueS5oVwiLFxuXHQgICAgXCI3MTE5MzZcIjogXCLluIPooovplYdcIixcblx0ICAgIFwiNzEyMTAwXCI6IFwi5LqR5p6X5Y6/XCIsXG5cdCAgICBcIjcxMjEyMVwiOiBcIuaWl+WNl+mVh1wiLFxuXHQgICAgXCI3MTIxMjJcIjogXCLlpKfln6TkuaFcIixcblx0ICAgIFwiNzEyMTIzXCI6IFwi6JmO5bC+6ZWHXCIsXG5cdCAgICBcIjcxMjEyNFwiOiBcIuWcn+W6k+mVh1wiLFxuXHQgICAgXCI3MTIxMjVcIjogXCLopJLlv6DkuaFcIixcblx0ICAgIFwiNzEyMTI2XCI6IFwi5Lic5Yq/5LmhXCIsXG5cdCAgICBcIjcxMjEyN1wiOiBcIuWPsOilv+S5oVwiLFxuXHQgICAgXCI3MTIxMjhcIjogXCLku5Hog4zkuaFcIixcblx0ICAgIFwiNzEyMTI5XCI6IFwi6bqm5a+u5LmhXCIsXG5cdCAgICBcIjcxMjEzMFwiOiBcIuaWl+WFreW4glwiLFxuXHQgICAgXCI3MTIxMzFcIjogXCLmnpflhoXkuaFcIixcblx0ICAgIFwiNzEyMTMyXCI6IFwi5Y+k5Z2R5LmhXCIsXG5cdCAgICBcIjcxMjEzM1wiOiBcIuiOv+ahkOS5oVwiLFxuXHQgICAgXCI3MTIxMzRcIjogXCLopb/onrrplYdcIixcblx0ICAgIFwiNzEyMTM1XCI6IFwi5LqM5LuR5LmhXCIsXG5cdCAgICBcIjcxMjEzNlwiOiBcIuWMl+a4r+mVh1wiLFxuXHQgICAgXCI3MTIxMzdcIjogXCLmsLTmnpfkuaFcIixcblx0ICAgIFwiNzEyMTM4XCI6IFwi5Y+j5rmW5LmhXCIsXG5cdCAgICBcIjcxMjEzOVwiOiBcIuWbm+a5luS5oVwiLFxuXHQgICAgXCI3MTIxNDBcIjogXCLlhYPplb/kuaFcIixcblx0ICAgIFwiNzEyNDAwXCI6IFwi5bGP5Lic5Y6/XCIsXG5cdCAgICBcIjcxMjQzNFwiOiBcIuWxj+S4nOW4glwiLFxuXHQgICAgXCI3MTI0MzVcIjogXCLkuInlnLDpl6jkuaFcIixcblx0ICAgIFwiNzEyNDM2XCI6IFwi6Zu+5Y+w5LmhXCIsXG5cdCAgICBcIjcxMjQzN1wiOiBcIueOm+WutuS5oVwiLFxuXHQgICAgXCI3MTI0MzhcIjogXCLkuZ3lpoLkuaFcIixcblx0ICAgIFwiNzEyNDM5XCI6IFwi6YeM5riv5LmhXCIsXG5cdCAgICBcIjcxMjQ0MFwiOiBcIumrmOagkeS5oVwiLFxuXHQgICAgXCI3MTI0NDFcIjogXCLnm5Dln5TkuaFcIixcblx0ICAgIFwiNzEyNDQyXCI6IFwi6ZW/5rK75LmhXCIsXG5cdCAgICBcIjcxMjQ0M1wiOiBcIum6n+a0m+S5oVwiLFxuXHQgICAgXCI3MTI0NDRcIjogXCLnq7nnlLDkuaFcIixcblx0ICAgIFwiNzEyNDQ1XCI6IFwi5YaF5Z+U5LmhXCIsXG5cdCAgICBcIjcxMjQ0NlwiOiBcIuS4h+S4ueS5oVwiLFxuXHQgICAgXCI3MTI0NDdcIjogXCLmva7lt57plYdcIixcblx0ICAgIFwiNzEyNDQ4XCI6IFwi5rOw5q2m5LmhXCIsXG5cdCAgICBcIjcxMjQ0OVwiOiBcIuadpeS5ieS5oVwiLFxuXHQgICAgXCI3MTI0NTBcIjogXCLkuIfls6bkuaFcIixcblx0ICAgIFwiNzEyNDUxXCI6IFwi5bSB6aG25LmhXCIsXG5cdCAgICBcIjcxMjQ1MlwiOiBcIuaWsOWfpOS5oVwiLFxuXHQgICAgXCI3MTI0NTNcIjogXCLljZflt57kuaFcIixcblx0ICAgIFwiNzEyNDU0XCI6IFwi5p6X6L655LmhXCIsXG5cdCAgICBcIjcxMjQ1NVwiOiBcIuS4nOa4r+mVh1wiLFxuXHQgICAgXCI3MTI0NTZcIjogXCLnkInnkIPkuaFcIixcblx0ICAgIFwiNzEyNDU3XCI6IFwi5L2z5Yas5LmhXCIsXG5cdCAgICBcIjcxMjQ1OFwiOiBcIuaWsOWbreS5oVwiLFxuXHQgICAgXCI3MTI0NTlcIjogXCLmnovlr67kuaFcIixcblx0ICAgIFwiNzEyNDYwXCI6IFwi5p6L5bGx5LmhXCIsXG5cdCAgICBcIjcxMjQ2MVwiOiBcIuaYpeaXpeS5oVwiLFxuXHQgICAgXCI3MTI0NjJcIjogXCLni67lrZDkuaFcIixcblx0ICAgIFwiNzEyNDYzXCI6IFwi6L2m5Z+O5LmhXCIsXG5cdCAgICBcIjcxMjQ2NFwiOiBcIueJoeS4ueS5oVwiLFxuXHQgICAgXCI3MTI0NjVcIjogXCLmgZLmmKXplYdcIixcblx0ICAgIFwiNzEyNDY2XCI6IFwi5ruh5bee5LmhXCIsXG5cdCAgICBcIjcxMjUwMFwiOiBcIuWPsOS4nOWOv1wiLFxuXHQgICAgXCI3MTI1MTdcIjogXCLlj7DkuJzluIJcIixcblx0ICAgIFwiNzEyNTE4XCI6IFwi57u/5bKb5LmhXCIsXG5cdCAgICBcIjcxMjUxOVwiOiBcIuWFsOWxv+S5oVwiLFxuXHQgICAgXCI3MTI1MjBcIjogXCLlu7blubPkuaFcIixcblx0ICAgIFwiNzEyNTIxXCI6IFwi5Y2R5Y2X5LmhXCIsXG5cdCAgICBcIjcxMjUyMlwiOiBcIum5v+mHjuS5oVwiLFxuXHQgICAgXCI3MTI1MjNcIjogXCLlhbPlsbHplYdcIixcblx0ICAgIFwiNzEyNTI0XCI6IFwi5rW356uv5LmhXCIsXG5cdCAgICBcIjcxMjUyNVwiOiBcIuaxoOS4iuS5oVwiLFxuXHQgICAgXCI3MTI1MjZcIjogXCLkuJzmsrPkuaFcIixcblx0ICAgIFwiNzEyNTI3XCI6IFwi5oiQ5Yqf6ZWHXCIsXG5cdCAgICBcIjcxMjUyOFwiOiBcIumVv+a7qOS5oVwiLFxuXHQgICAgXCI3MTI1MjlcIjogXCLph5Hls7DkuaFcIixcblx0ICAgIFwiNzEyNTMwXCI6IFwi5aSn5q2m5LmhXCIsXG5cdCAgICBcIjcxMjUzMVwiOiBcIui+vuS7geS5oVwiLFxuXHQgICAgXCI3MTI1MzJcIjogXCLlpKrpurvph4zkuaFcIixcblx0ICAgIFwiNzEyNjAwXCI6IFwi6Iqx6I6y5Y6/XCIsXG5cdCAgICBcIjcxMjYxNVwiOiBcIuiKseiOsuW4glwiLFxuXHQgICAgXCI3MTI2MTZcIjogXCLmlrDln47kuaFcIixcblx0ICAgIFwiNzEyNjE3XCI6IFwi5aSq6bKB6ZiBXCIsXG5cdCAgICBcIjcxMjYxOFwiOiBcIuengOael+S5oVwiLFxuXHQgICAgXCI3MTI2MTlcIjogXCLlkInlronkuaFcIixcblx0ICAgIFwiNzEyNjIwXCI6IFwi5a+/5Liw5LmhXCIsXG5cdCAgICBcIjcxMjYyMVwiOiBcIuWHpOael+mVh1wiLFxuXHQgICAgXCI3MTI2MjJcIjogXCLlhYnlpI3kuaFcIixcblx0ICAgIFwiNzEyNjIzXCI6IFwi5Liw5ruo5LmhXCIsXG5cdCAgICBcIjcxMjYyNFwiOiBcIueRnuepl+S5oVwiLFxuXHQgICAgXCI3MTI2MjVcIjogXCLkuIfojaPkuaFcIixcblx0ICAgIFwiNzEyNjI2XCI6IFwi546J6YeM6ZWHXCIsXG5cdCAgICBcIjcxMjYyN1wiOiBcIuWNk+a6quS5oVwiLFxuXHQgICAgXCI3MTI2MjhcIjogXCLlr4zph4zkuaFcIixcblx0ICAgIFwiNzEyNzAwXCI6IFwi5r6O5rmW5Y6/XCIsXG5cdCAgICBcIjcxMjcwN1wiOiBcIumprOWFrOW4glwiLFxuXHQgICAgXCI3MTI3MDhcIjogXCLopb/lsb/kuaFcIixcblx0ICAgIFwiNzEyNzA5XCI6IFwi5pyb5a6J5LmhXCIsXG5cdCAgICBcIjcxMjcxMFwiOiBcIuS4g+e+juS5oVwiLFxuXHQgICAgXCI3MTI3MTFcIjogXCLnmb3mspnkuaFcIixcblx0ICAgIFwiNzEyNzEyXCI6IFwi5rmW6KW/5LmhXCIsXG5cdCAgICBcIjcxMjgwMFwiOiBcIui/nuaxn+WOv1wiLFxuXHQgICAgXCI3MTI4MDVcIjogXCLljZfnq7/kuaFcIixcblx0ICAgIFwiNzEyODA2XCI6IFwi5YyX56u/5LmhXCIsXG5cdCAgICBcIjcxMjgwN1wiOiBcIuiOkuWFieS5oVwiLFxuXHQgICAgXCI3MTI4MDhcIjogXCLkuJzlvJXkuaFcIixcblx0ICAgIFwiODEwMDAwXCI6IFwi6aaZ5riv54m55Yir6KGM5pS/5Yy6XCIsXG5cdCAgICBcIjgxMDEwMFwiOiBcIummmea4r+Wym1wiLFxuXHQgICAgXCI4MTAxMDFcIjogXCLkuK3opb/ljLpcIixcblx0ICAgIFwiODEwMTAyXCI6IFwi5rm+5LuUXCIsXG5cdCAgICBcIjgxMDEwM1wiOiBcIuS4nOWMulwiLFxuXHQgICAgXCI4MTAxMDRcIjogXCLljZfljLpcIixcblx0ICAgIFwiODEwMjAwXCI6IFwi5Lmd6b6ZXCIsXG5cdCAgICBcIjgxMDIwMVwiOiBcIuS5nem+meWfjuWMulwiLFxuXHQgICAgXCI4MTAyMDJcIjogXCLmsrnlsJbml7rljLpcIixcblx0ICAgIFwiODEwMjAzXCI6IFwi5rex5rC05Z+X5Yy6XCIsXG5cdCAgICBcIjgxMDIwNFwiOiBcIum7hOWkp+S7meWMulwiLFxuXHQgICAgXCI4MTAyMDVcIjogXCLop4LloZjljLpcIixcblx0ICAgIFwiODEwMzAwXCI6IFwi5paw55WMXCIsXG5cdCAgICBcIjgxMDMwMVwiOiBcIuWMl+WMulwiLFxuXHQgICAgXCI4MTAzMDJcIjogXCLlpKfln5TljLpcIixcblx0ICAgIFwiODEwMzAzXCI6IFwi5rKZ55Sw5Yy6XCIsXG5cdCAgICBcIjgxMDMwNFwiOiBcIuilv+i0oeWMulwiLFxuXHQgICAgXCI4MTAzMDVcIjogXCLlhYPmnJfljLpcIixcblx0ICAgIFwiODEwMzA2XCI6IFwi5bGv6Zeo5Yy6XCIsXG5cdCAgICBcIjgxMDMwN1wiOiBcIuiNg+a5vuWMulwiLFxuXHQgICAgXCI4MTAzMDhcIjogXCLokbXpnZLljLpcIixcblx0ICAgIFwiODEwMzA5XCI6IFwi56a75bKb5Yy6XCIsXG5cdCAgICBcIjgyMDAwMFwiOiBcIua+s+mXqOeJueWIq+ihjOaUv+WMulwiLFxuXHQgICAgXCI4MjAxMDBcIjogXCLmvrPpl6jljYrlsptcIixcblx0ICAgIFwiODIwMjAwXCI6IFwi56a75bKbXCIsXG5cdCAgICBcIjk5MDAwMFwiOiBcIua1t+WkllwiLFxuXHQgICAgXCI5OTAxMDBcIjogXCLmtbflpJZcIlxuXHR9XG5cblx0Ly8gaWQgcGlkL3BhcmVudElkIG5hbWUgY2hpbGRyZW5cblx0ZnVuY3Rpb24gdHJlZShsaXN0KSB7XG5cdCAgICB2YXIgbWFwcGVkID0ge31cblx0ICAgIGZvciAodmFyIGkgPSAwLCBpdGVtOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuXHQgICAgICAgIGl0ZW0gPSBsaXN0W2ldXG5cdCAgICAgICAgaWYgKCFpdGVtIHx8ICFpdGVtLmlkKSBjb250aW51ZVxuXHQgICAgICAgIG1hcHBlZFtpdGVtLmlkXSA9IGl0ZW1cblx0ICAgIH1cblxuXHQgICAgdmFyIHJlc3VsdCA9IFtdXG5cdCAgICBmb3IgKHZhciBpaSA9IDA7IGlpIDwgbGlzdC5sZW5ndGg7IGlpKyspIHtcblx0ICAgICAgICBpdGVtID0gbGlzdFtpaV1cblxuXHQgICAgICAgIGlmICghaXRlbSkgY29udGludWVcblx0ICAgICAgICAgICAgLyoganNoaW50IC1XMDQxICovXG5cdCAgICAgICAgaWYgKGl0ZW0ucGlkID09IHVuZGVmaW5lZCAmJiBpdGVtLnBhcmVudElkID09IHVuZGVmaW5lZCkge1xuXHQgICAgICAgICAgICByZXN1bHQucHVzaChpdGVtKVxuXHQgICAgICAgICAgICBjb250aW51ZVxuXHQgICAgICAgIH1cblx0ICAgICAgICB2YXIgcGFyZW50ID0gbWFwcGVkW2l0ZW0ucGlkXSB8fCBtYXBwZWRbaXRlbS5wYXJlbnRJZF1cblx0ICAgICAgICBpZiAoIXBhcmVudCkgY29udGludWVcblx0ICAgICAgICBpZiAoIXBhcmVudC5jaGlsZHJlbikgcGFyZW50LmNoaWxkcmVuID0gW11cblx0ICAgICAgICBwYXJlbnQuY2hpbGRyZW4ucHVzaChpdGVtKVxuXHQgICAgfVxuXHQgICAgcmV0dXJuIHJlc3VsdFxuXHR9XG5cblx0dmFyIERJQ1RfRklYRUQgPSBmdW5jdGlvbigpIHtcblx0ICAgIHZhciBmaXhlZCA9IFtdXG5cdCAgICBmb3IgKHZhciBpZCBpbiBESUNUKSB7XG5cdCAgICAgICAgdmFyIHBpZCA9IGlkLnNsaWNlKDIsIDYpID09PSAnMDAwMCcgPyB1bmRlZmluZWQgOlxuXHQgICAgICAgICAgICBpZC5zbGljZSg0LCA2KSA9PSAnMDAnID8gKGlkLnNsaWNlKDAsIDIpICsgJzAwMDAnKSA6XG5cdCAgICAgICAgICAgIGlkLnNsaWNlKDAsIDQpICsgJzAwJ1xuXHQgICAgICAgIGZpeGVkLnB1c2goe1xuXHQgICAgICAgICAgICBpZDogaWQsXG5cdCAgICAgICAgICAgIHBpZDogcGlkLFxuXHQgICAgICAgICAgICBuYW1lOiBESUNUW2lkXVxuXHQgICAgICAgIH0pXG5cdCAgICB9XG5cdCAgICByZXR1cm4gdHJlZShmaXhlZClcblx0fSgpXG5cblx0bW9kdWxlLmV4cG9ydHMgPSBESUNUX0ZJWEVEXG5cbi8qKiovIH0pLFxuLyogMTkgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXHQvKlxuXHQgICAgIyMgTWlzY2VsbGFuZW91c1xuXHQqL1xuXHR2YXIgRElDVCA9IF9fd2VicGFja19yZXF1aXJlX18oMTgpXG5cdG1vZHVsZS5leHBvcnRzID0ge1xuXHRcdC8vIERpY2Vcblx0XHRkNDogZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5uYXR1cmFsKDEsIDQpXG5cdFx0fSxcblx0XHRkNjogZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5uYXR1cmFsKDEsIDYpXG5cdFx0fSxcblx0XHRkODogZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5uYXR1cmFsKDEsIDgpXG5cdFx0fSxcblx0XHRkMTI6IGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIHRoaXMubmF0dXJhbCgxLCAxMilcblx0XHR9LFxuXHRcdGQyMDogZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5uYXR1cmFsKDEsIDIwKVxuXHRcdH0sXG5cdFx0ZDEwMDogZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5uYXR1cmFsKDEsIDEwMClcblx0XHR9LFxuXHRcdC8qXG5cdFx0ICAgIOmaj+acuueUn+aIkOS4gOS4qiBHVUlE44CCXG5cblx0XHQgICAgaHR0cDovL3d3dy5icm9vZmEuY29tLzIwMDgvMDkvamF2YXNjcmlwdC11dWlkLWZ1bmN0aW9uL1xuXHRcdCAgICBbVVVJRCDop4TojINdKGh0dHA6Ly93d3cuaWV0Zi5vcmcvcmZjL3JmYzQxMjIudHh0KVxuXHRcdCAgICAgICAgVVVJRHMgKFVuaXZlcnNhbGx5IFVuaXF1ZSBJRGVudGlmaWVyKVxuXHRcdCAgICAgICAgR1VJRHMgKEdsb2JhbGx5IFVuaXF1ZSBJRGVudGlmaWVyKVxuXHRcdCAgICAgICAgVGhlIGZvcm1hbCBkZWZpbml0aW9uIG9mIHRoZSBVVUlEIHN0cmluZyByZXByZXNlbnRhdGlvbiBpcyBwcm92aWRlZCBieSB0aGUgZm9sbG93aW5nIEFCTkYgWzddOlxuXHRcdCAgICAgICAgICAgIFVVSUQgICAgICAgICAgICAgICAgICAgPSB0aW1lLWxvdyBcIi1cIiB0aW1lLW1pZCBcIi1cIlxuXHRcdCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZS1oaWdoLWFuZC12ZXJzaW9uIFwiLVwiXG5cdFx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbG9jay1zZXEtYW5kLXJlc2VydmVkXG5cdFx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbG9jay1zZXEtbG93IFwiLVwiIG5vZGVcblx0XHQgICAgICAgICAgICB0aW1lLWxvdyAgICAgICAgICAgICAgID0gNGhleE9jdGV0XG5cdFx0ICAgICAgICAgICAgdGltZS1taWQgICAgICAgICAgICAgICA9IDJoZXhPY3RldFxuXHRcdCAgICAgICAgICAgIHRpbWUtaGlnaC1hbmQtdmVyc2lvbiAgPSAyaGV4T2N0ZXRcblx0XHQgICAgICAgICAgICBjbG9jay1zZXEtYW5kLXJlc2VydmVkID0gaGV4T2N0ZXRcblx0XHQgICAgICAgICAgICBjbG9jay1zZXEtbG93ICAgICAgICAgID0gaGV4T2N0ZXRcblx0XHQgICAgICAgICAgICBub2RlICAgICAgICAgICAgICAgICAgID0gNmhleE9jdGV0XG5cdFx0ICAgICAgICAgICAgaGV4T2N0ZXQgICAgICAgICAgICAgICA9IGhleERpZ2l0IGhleERpZ2l0XG5cdFx0ICAgICAgICAgICAgaGV4RGlnaXQgPVxuXHRcdCAgICAgICAgICAgICAgICBcIjBcIiAvIFwiMVwiIC8gXCIyXCIgLyBcIjNcIiAvIFwiNFwiIC8gXCI1XCIgLyBcIjZcIiAvIFwiN1wiIC8gXCI4XCIgLyBcIjlcIiAvXG5cdFx0ICAgICAgICAgICAgICAgIFwiYVwiIC8gXCJiXCIgLyBcImNcIiAvIFwiZFwiIC8gXCJlXCIgLyBcImZcIiAvXG5cdFx0ICAgICAgICAgICAgICAgIFwiQVwiIC8gXCJCXCIgLyBcIkNcIiAvIFwiRFwiIC8gXCJFXCIgLyBcIkZcIlxuXHRcdCAgICBcblx0XHQgICAgaHR0cHM6Ly9naXRodWIuY29tL3ZpY3RvcnF1aW5uL2NoYW5jZWpzL2Jsb2IvZGV2ZWxvcC9jaGFuY2UuanMjTDEzNDlcblx0XHQqL1xuXHRcdGd1aWQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHBvb2wgPSBcImFiY2RlZkFCQ0RFRjEyMzQ1Njc4OTBcIixcblx0XHRcdFx0Z3VpZCA9IHRoaXMuc3RyaW5nKHBvb2wsIDgpICsgJy0nICtcblx0XHRcdFx0dGhpcy5zdHJpbmcocG9vbCwgNCkgKyAnLScgK1xuXHRcdFx0XHR0aGlzLnN0cmluZyhwb29sLCA0KSArICctJyArXG5cdFx0XHRcdHRoaXMuc3RyaW5nKHBvb2wsIDQpICsgJy0nICtcblx0XHRcdFx0dGhpcy5zdHJpbmcocG9vbCwgMTIpO1xuXHRcdFx0cmV0dXJuIGd1aWRcblx0XHR9LFxuXHRcdHV1aWQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZ3VpZCgpXG5cdFx0fSxcblx0XHQvKlxuXHRcdCAgICDpmo/mnLrnlJ/miJDkuIDkuKogMTgg5L2N6Lqr5Lu96K+B44CCXG5cblx0XHQgICAgW+i6q+S7veivgV0oaHR0cDovL2JhaWtlLmJhaWR1LmNvbS92aWV3LzE2OTcuaHRtIzQpXG5cdFx0ICAgICAgICDlnLDlnYDnoIEgNiArIOWHuueUn+aXpeacn+eggSA4ICsg6aG65bqP56CBIDMgKyDmoKHpqoznoIEgMVxuXHRcdCAgICBb44CK5Lit5Y2O5Lq65rCR5YWx5ZKM5Zu96KGM5pS/5Yy65YiS5Luj56CB44CL5Zu95a625qCH5YeGKEdCL1QyMjYwKV0oaHR0cDovL3poaWRhby5iYWlkdS5jb20vcXVlc3Rpb24vMTk1NDU2MS5odG1sKVxuXHRcdCovXG5cdFx0aWQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGlkLFxuXHRcdFx0XHRzdW0gPSAwLFxuXHRcdFx0XHRyYW5rID0gW1xuXHRcdFx0XHRcdFwiN1wiLCBcIjlcIiwgXCIxMFwiLCBcIjVcIiwgXCI4XCIsIFwiNFwiLCBcIjJcIiwgXCIxXCIsIFwiNlwiLCBcIjNcIiwgXCI3XCIsIFwiOVwiLCBcIjEwXCIsIFwiNVwiLCBcIjhcIiwgXCI0XCIsIFwiMlwiXG5cdFx0XHRcdF0sXG5cdFx0XHRcdGxhc3QgPSBbXG5cdFx0XHRcdFx0XCIxXCIsIFwiMFwiLCBcIlhcIiwgXCI5XCIsIFwiOFwiLCBcIjdcIiwgXCI2XCIsIFwiNVwiLCBcIjRcIiwgXCIzXCIsIFwiMlwiXG5cdFx0XHRcdF1cblxuXHRcdFx0aWQgPSB0aGlzLnBpY2soRElDVCkuaWQgK1xuXHRcdFx0XHR0aGlzLmRhdGUoJ3l5eXlNTWRkJykgK1xuXHRcdFx0XHR0aGlzLnN0cmluZygnbnVtYmVyJywgMylcblxuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBpZC5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRzdW0gKz0gaWRbaV0gKiByYW5rW2ldO1xuXHRcdFx0fVxuXHRcdFx0aWQgKz0gbGFzdFtzdW0gJSAxMV07XG5cblx0XHRcdHJldHVybiBpZFxuXHRcdH0sXG5cblx0XHQvKlxuXHRcdCAgICDnlJ/miJDkuIDkuKrlhajlsYDnmoToh6rlop7mlbTmlbDjgIJcblx0XHQgICAg57G75Ly86Ieq5aKe5Li76ZSu77yIYXV0byBpbmNyZW1lbnQgcHJpbWFyeSBrZXnvvInjgIJcblx0XHQqL1xuXHRcdGluY3JlbWVudDogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIga2V5ID0gMFxuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKHN0ZXApIHtcblx0XHRcdFx0cmV0dXJuIGtleSArPSAoK3N0ZXAgfHwgMSkgLy8gc3RlcD9cblx0XHRcdH1cblx0XHR9KCksXG5cdFx0aW5jOiBmdW5jdGlvbihzdGVwKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5pbmNyZW1lbnQoc3RlcClcblx0XHR9XG5cdH1cblxuLyoqKi8gfSksXG4vKiAyMCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cdHZhciBQYXJzZXIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIxKVxuXHR2YXIgSGFuZGxlciA9IF9fd2VicGFja19yZXF1aXJlX18oMjIpXG5cdG1vZHVsZS5leHBvcnRzID0ge1xuXHRcdFBhcnNlcjogUGFyc2VyLFxuXHRcdEhhbmRsZXI6IEhhbmRsZXJcblx0fVxuXG4vKioqLyB9KSxcbi8qIDIxICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cblx0Ly8gaHR0cHM6Ly9naXRodWIuY29tL251eXNvZnQvcmVnZXhwXG5cdC8vIGZvcmtlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9Gb3JiZXNMaW5kZXNheS9yZWdleHBcblxuXHRmdW5jdGlvbiBwYXJzZShuKSB7XG5cdCAgICBpZiAoXCJzdHJpbmdcIiAhPSB0eXBlb2Ygbikge1xuXHQgICAgICAgIHZhciBsID0gbmV3IFR5cGVFcnJvcihcIlRoZSByZWdleHAgdG8gcGFyc2UgbXVzdCBiZSByZXByZXNlbnRlZCBhcyBhIHN0cmluZy5cIik7XG5cdCAgICAgICAgdGhyb3cgbDtcblx0ICAgIH1cblx0ICAgIHJldHVybiBpbmRleCA9IDEsIGNncyA9IHt9LCBwYXJzZXIucGFyc2Uobik7XG5cdH1cblxuXHRmdW5jdGlvbiBUb2tlbihuKSB7XG5cdCAgICB0aGlzLnR5cGUgPSBuLCB0aGlzLm9mZnNldCA9IFRva2VuLm9mZnNldCgpLCB0aGlzLnRleHQgPSBUb2tlbi50ZXh0KCk7XG5cdH1cblxuXHRmdW5jdGlvbiBBbHRlcm5hdGUobiwgbCkge1xuXHQgICAgVG9rZW4uY2FsbCh0aGlzLCBcImFsdGVybmF0ZVwiKSwgdGhpcy5sZWZ0ID0gbiwgdGhpcy5yaWdodCA9IGw7XG5cdH1cblxuXHRmdW5jdGlvbiBNYXRjaChuKSB7XG5cdCAgICBUb2tlbi5jYWxsKHRoaXMsIFwibWF0Y2hcIiksIHRoaXMuYm9keSA9IG4uZmlsdGVyKEJvb2xlYW4pO1xuXHR9XG5cblx0ZnVuY3Rpb24gR3JvdXAobiwgbCkge1xuXHQgICAgVG9rZW4uY2FsbCh0aGlzLCBuKSwgdGhpcy5ib2R5ID0gbDtcblx0fVxuXG5cdGZ1bmN0aW9uIENhcHR1cmVHcm91cChuKSB7XG5cdCAgICBHcm91cC5jYWxsKHRoaXMsIFwiY2FwdHVyZS1ncm91cFwiKSwgdGhpcy5pbmRleCA9IGNnc1t0aGlzLm9mZnNldF0gfHwgKGNnc1t0aGlzLm9mZnNldF0gPSBpbmRleCsrKSwgXG5cdCAgICB0aGlzLmJvZHkgPSBuO1xuXHR9XG5cblx0ZnVuY3Rpb24gUXVhbnRpZmllZChuLCBsKSB7XG5cdCAgICBUb2tlbi5jYWxsKHRoaXMsIFwicXVhbnRpZmllZFwiKSwgdGhpcy5ib2R5ID0gbiwgdGhpcy5xdWFudGlmaWVyID0gbDtcblx0fVxuXG5cdGZ1bmN0aW9uIFF1YW50aWZpZXIobiwgbCkge1xuXHQgICAgVG9rZW4uY2FsbCh0aGlzLCBcInF1YW50aWZpZXJcIiksIHRoaXMubWluID0gbiwgdGhpcy5tYXggPSBsLCB0aGlzLmdyZWVkeSA9ICEwO1xuXHR9XG5cblx0ZnVuY3Rpb24gQ2hhclNldChuLCBsKSB7XG5cdCAgICBUb2tlbi5jYWxsKHRoaXMsIFwiY2hhcnNldFwiKSwgdGhpcy5pbnZlcnQgPSBuLCB0aGlzLmJvZHkgPSBsO1xuXHR9XG5cblx0ZnVuY3Rpb24gQ2hhcmFjdGVyUmFuZ2UobiwgbCkge1xuXHQgICAgVG9rZW4uY2FsbCh0aGlzLCBcInJhbmdlXCIpLCB0aGlzLnN0YXJ0ID0gbiwgdGhpcy5lbmQgPSBsO1xuXHR9XG5cblx0ZnVuY3Rpb24gTGl0ZXJhbChuKSB7XG5cdCAgICBUb2tlbi5jYWxsKHRoaXMsIFwibGl0ZXJhbFwiKSwgdGhpcy5ib2R5ID0gbiwgdGhpcy5lc2NhcGVkID0gdGhpcy5ib2R5ICE9IHRoaXMudGV4dDtcblx0fVxuXG5cdGZ1bmN0aW9uIFVuaWNvZGUobikge1xuXHQgICAgVG9rZW4uY2FsbCh0aGlzLCBcInVuaWNvZGVcIiksIHRoaXMuY29kZSA9IG4udG9VcHBlckNhc2UoKTtcblx0fVxuXG5cdGZ1bmN0aW9uIEhleChuKSB7XG5cdCAgICBUb2tlbi5jYWxsKHRoaXMsIFwiaGV4XCIpLCB0aGlzLmNvZGUgPSBuLnRvVXBwZXJDYXNlKCk7XG5cdH1cblxuXHRmdW5jdGlvbiBPY3RhbChuKSB7XG5cdCAgICBUb2tlbi5jYWxsKHRoaXMsIFwib2N0YWxcIiksIHRoaXMuY29kZSA9IG4udG9VcHBlckNhc2UoKTtcblx0fVxuXG5cdGZ1bmN0aW9uIEJhY2tSZWZlcmVuY2Uobikge1xuXHQgICAgVG9rZW4uY2FsbCh0aGlzLCBcImJhY2stcmVmZXJlbmNlXCIpLCB0aGlzLmNvZGUgPSBuLnRvVXBwZXJDYXNlKCk7XG5cdH1cblxuXHRmdW5jdGlvbiBDb250cm9sQ2hhcmFjdGVyKG4pIHtcblx0ICAgIFRva2VuLmNhbGwodGhpcywgXCJjb250cm9sLWNoYXJhY3RlclwiKSwgdGhpcy5jb2RlID0gbi50b1VwcGVyQ2FzZSgpO1xuXHR9XG5cblx0dmFyIHBhcnNlciA9IGZ1bmN0aW9uKCkge1xuXHQgICAgZnVuY3Rpb24gbihuLCBsKSB7XG5cdCAgICAgICAgZnVuY3Rpb24gdSgpIHtcblx0ICAgICAgICAgICAgdGhpcy5jb25zdHJ1Y3RvciA9IG47XG5cdCAgICAgICAgfVxuXHQgICAgICAgIHUucHJvdG90eXBlID0gbC5wcm90b3R5cGUsIG4ucHJvdG90eXBlID0gbmV3IHUoKTtcblx0ICAgIH1cblx0ICAgIGZ1bmN0aW9uIGwobiwgbCwgdSwgdCwgcikge1xuXHQgICAgICAgIGZ1bmN0aW9uIGUobiwgbCkge1xuXHQgICAgICAgICAgICBmdW5jdGlvbiB1KG4pIHtcblx0ICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGwobikge1xuXHQgICAgICAgICAgICAgICAgICAgIHJldHVybiBuLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKCk7XG5cdCAgICAgICAgICAgICAgICB9XG5cdCAgICAgICAgICAgICAgICByZXR1cm4gbi5yZXBsYWNlKC9cXFxcL2csIFwiXFxcXFxcXFxcIikucmVwbGFjZSgvXCIvZywgJ1xcXFxcIicpLnJlcGxhY2UoL1xceDA4L2csIFwiXFxcXGJcIikucmVwbGFjZSgvXFx0L2csIFwiXFxcXHRcIikucmVwbGFjZSgvXFxuL2csIFwiXFxcXG5cIikucmVwbGFjZSgvXFxmL2csIFwiXFxcXGZcIikucmVwbGFjZSgvXFxyL2csIFwiXFxcXHJcIikucmVwbGFjZSgvW1xceDAwLVxceDA3XFx4MEJcXHgwRVxceDBGXS9nLCBmdW5jdGlvbihuKSB7XG5cdCAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFwiXFxcXHgwXCIgKyBsKG4pO1xuXHQgICAgICAgICAgICAgICAgfSkucmVwbGFjZSgvW1xceDEwLVxceDFGXFx4ODAtXFx4RkZdL2csIGZ1bmN0aW9uKG4pIHtcblx0ICAgICAgICAgICAgICAgICAgICByZXR1cm4gXCJcXFxceFwiICsgbChuKTtcblx0ICAgICAgICAgICAgICAgIH0pLnJlcGxhY2UoL1tcXHUwMTgwLVxcdTBGRkZdL2csIGZ1bmN0aW9uKG4pIHtcblx0ICAgICAgICAgICAgICAgICAgICByZXR1cm4gXCJcXFxcdTBcIiArIGwobik7XG5cdCAgICAgICAgICAgICAgICB9KS5yZXBsYWNlKC9bXFx1MTA4MC1cXHVGRkZGXS9nLCBmdW5jdGlvbihuKSB7XG5cdCAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFwiXFxcXHVcIiArIGwobik7XG5cdCAgICAgICAgICAgICAgICB9KTtcblx0ICAgICAgICAgICAgfVxuXHQgICAgICAgICAgICB2YXIgdCwgcjtcblx0ICAgICAgICAgICAgc3dpdGNoIChuLmxlbmd0aCkge1xuXHQgICAgICAgICAgICAgIGNhc2UgMDpcblx0ICAgICAgICAgICAgICAgIHQgPSBcImVuZCBvZiBpbnB1dFwiO1xuXHQgICAgICAgICAgICAgICAgYnJlYWs7XG5cblx0ICAgICAgICAgICAgICBjYXNlIDE6XG5cdCAgICAgICAgICAgICAgICB0ID0gblswXTtcblx0ICAgICAgICAgICAgICAgIGJyZWFrO1xuXG5cdCAgICAgICAgICAgICAgZGVmYXVsdDpcblx0ICAgICAgICAgICAgICAgIHQgPSBuLnNsaWNlKDAsIC0xKS5qb2luKFwiLCBcIikgKyBcIiBvciBcIiArIG5bbi5sZW5ndGggLSAxXTtcblx0ICAgICAgICAgICAgfVxuXHQgICAgICAgICAgICByZXR1cm4gciA9IGwgPyAnXCInICsgdShsKSArICdcIicgOiBcImVuZCBvZiBpbnB1dFwiLCBcIkV4cGVjdGVkIFwiICsgdCArIFwiIGJ1dCBcIiArIHIgKyBcIiBmb3VuZC5cIjtcblx0ICAgICAgICB9XG5cdCAgICAgICAgdGhpcy5leHBlY3RlZCA9IG4sIHRoaXMuZm91bmQgPSBsLCB0aGlzLm9mZnNldCA9IHUsIHRoaXMubGluZSA9IHQsIHRoaXMuY29sdW1uID0gciwgXG5cdCAgICAgICAgdGhpcy5uYW1lID0gXCJTeW50YXhFcnJvclwiLCB0aGlzLm1lc3NhZ2UgPSBlKG4sIGwpO1xuXHQgICAgfVxuXHQgICAgZnVuY3Rpb24gdShuKSB7XG5cdCAgICAgICAgZnVuY3Rpb24gdSgpIHtcblx0ICAgICAgICAgICAgcmV0dXJuIG4uc3Vic3RyaW5nKEx0LCBxdCk7XG5cdCAgICAgICAgfVxuXHQgICAgICAgIGZ1bmN0aW9uIHQoKSB7XG5cdCAgICAgICAgICAgIHJldHVybiBMdDtcblx0ICAgICAgICB9XG5cdCAgICAgICAgZnVuY3Rpb24gcihsKSB7XG5cdCAgICAgICAgICAgIGZ1bmN0aW9uIHUobCwgdSwgdCkge1xuXHQgICAgICAgICAgICAgICAgdmFyIHIsIGU7XG5cdCAgICAgICAgICAgICAgICBmb3IgKHIgPSB1OyB0ID4gcjsgcisrKSBlID0gbi5jaGFyQXQociksIFwiXFxuXCIgPT09IGUgPyAobC5zZWVuQ1IgfHwgbC5saW5lKyssIGwuY29sdW1uID0gMSwgXG5cdCAgICAgICAgICAgICAgICBsLnNlZW5DUiA9ICExKSA6IFwiXFxyXCIgPT09IGUgfHwgXCJcXHUyMDI4XCIgPT09IGUgfHwgXCJcXHUyMDI5XCIgPT09IGUgPyAobC5saW5lKyssIGwuY29sdW1uID0gMSwgXG5cdCAgICAgICAgICAgICAgICBsLnNlZW5DUiA9ICEwKSA6IChsLmNvbHVtbisrLCBsLnNlZW5DUiA9ICExKTtcblx0ICAgICAgICAgICAgfVxuXHQgICAgICAgICAgICByZXR1cm4gTXQgIT09IGwgJiYgKE10ID4gbCAmJiAoTXQgPSAwLCBEdCA9IHtcblx0ICAgICAgICAgICAgICAgIGxpbmU6IDEsXG5cdCAgICAgICAgICAgICAgICBjb2x1bW46IDEsXG5cdCAgICAgICAgICAgICAgICBzZWVuQ1I6ICExXG5cdCAgICAgICAgICAgIH0pLCB1KER0LCBNdCwgbCksIE10ID0gbCksIER0O1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBlKG4pIHtcblx0ICAgICAgICAgICAgSHQgPiBxdCB8fCAocXQgPiBIdCAmJiAoSHQgPSBxdCwgT3QgPSBbXSksIE90LnB1c2gobikpO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBvKG4pIHtcblx0ICAgICAgICAgICAgdmFyIGwgPSAwO1xuXHQgICAgICAgICAgICBmb3IgKG4uc29ydCgpOyBsIDwgbi5sZW5ndGg7ICkgbltsIC0gMV0gPT09IG5bbF0gPyBuLnNwbGljZShsLCAxKSA6IGwrKztcblx0ICAgICAgICB9XG5cdCAgICAgICAgZnVuY3Rpb24gYygpIHtcblx0ICAgICAgICAgICAgdmFyIGwsIHUsIHQsIHIsIG87XG5cdCAgICAgICAgICAgIHJldHVybiBsID0gcXQsIHUgPSBpKCksIG51bGwgIT09IHUgPyAodCA9IHF0LCAxMjQgPT09IG4uY2hhckNvZGVBdChxdCkgPyAociA9IGZsLCBcblx0ICAgICAgICAgICAgcXQrKykgOiAociA9IG51bGwsIDAgPT09IFd0ICYmIGUoc2wpKSwgbnVsbCAhPT0gciA/IChvID0gYygpLCBudWxsICE9PSBvID8gKHIgPSBbIHIsIG8gXSwgXG5cdCAgICAgICAgICAgIHQgPSByKSA6IChxdCA9IHQsIHQgPSBpbCkpIDogKHF0ID0gdCwgdCA9IGlsKSwgbnVsbCA9PT0gdCAmJiAodCA9IGFsKSwgbnVsbCAhPT0gdCA/IChMdCA9IGwsIFxuXHQgICAgICAgICAgICB1ID0gaGwodSwgdCksIG51bGwgPT09IHUgPyAocXQgPSBsLCBsID0gdSkgOiBsID0gdSkgOiAocXQgPSBsLCBsID0gaWwpKSA6IChxdCA9IGwsIFxuXHQgICAgICAgICAgICBsID0gaWwpLCBsO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBpKCkge1xuXHQgICAgICAgICAgICB2YXIgbiwgbCwgdSwgdCwgcjtcblx0ICAgICAgICAgICAgaWYgKG4gPSBxdCwgbCA9IGYoKSwgbnVsbCA9PT0gbCAmJiAobCA9IGFsKSwgbnVsbCAhPT0gbCkgaWYgKHUgPSBxdCwgV3QrKywgdCA9IGQoKSwgXG5cdCAgICAgICAgICAgIFd0LS0sIG51bGwgPT09IHQgPyB1ID0gYWwgOiAocXQgPSB1LCB1ID0gaWwpLCBudWxsICE9PSB1KSB7XG5cdCAgICAgICAgICAgICAgICBmb3IgKHQgPSBbXSwgciA9IGgoKSwgbnVsbCA9PT0gciAmJiAociA9IGEoKSk7IG51bGwgIT09IHI7ICkgdC5wdXNoKHIpLCByID0gaCgpLCBcblx0ICAgICAgICAgICAgICAgIG51bGwgPT09IHIgJiYgKHIgPSBhKCkpO1xuXHQgICAgICAgICAgICAgICAgbnVsbCAhPT0gdCA/IChyID0gcygpLCBudWxsID09PSByICYmIChyID0gYWwpLCBudWxsICE9PSByID8gKEx0ID0gbiwgbCA9IGRsKGwsIHQsIHIpLCBcblx0ICAgICAgICAgICAgICAgIG51bGwgPT09IGwgPyAocXQgPSBuLCBuID0gbCkgOiBuID0gbCkgOiAocXQgPSBuLCBuID0gaWwpKSA6IChxdCA9IG4sIG4gPSBpbCk7XG5cdCAgICAgICAgICAgIH0gZWxzZSBxdCA9IG4sIG4gPSBpbDsgZWxzZSBxdCA9IG4sIG4gPSBpbDtcblx0ICAgICAgICAgICAgcmV0dXJuIG47XG5cdCAgICAgICAgfVxuXHQgICAgICAgIGZ1bmN0aW9uIGEoKSB7XG5cdCAgICAgICAgICAgIHZhciBuO1xuXHQgICAgICAgICAgICByZXR1cm4gbiA9IHgoKSwgbnVsbCA9PT0gbiAmJiAobiA9IFEoKSwgbnVsbCA9PT0gbiAmJiAobiA9IEIoKSkpLCBuO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBmKCkge1xuXHQgICAgICAgICAgICB2YXIgbCwgdTtcblx0ICAgICAgICAgICAgcmV0dXJuIGwgPSBxdCwgOTQgPT09IG4uY2hhckNvZGVBdChxdCkgPyAodSA9IHBsLCBxdCsrKSA6ICh1ID0gbnVsbCwgMCA9PT0gV3QgJiYgZSh2bCkpLCBcblx0ICAgICAgICAgICAgbnVsbCAhPT0gdSAmJiAoTHQgPSBsLCB1ID0gd2woKSksIG51bGwgPT09IHUgPyAocXQgPSBsLCBsID0gdSkgOiBsID0gdSwgbDtcblx0ICAgICAgICB9XG5cdCAgICAgICAgZnVuY3Rpb24gcygpIHtcblx0ICAgICAgICAgICAgdmFyIGwsIHU7XG5cdCAgICAgICAgICAgIHJldHVybiBsID0gcXQsIDM2ID09PSBuLmNoYXJDb2RlQXQocXQpID8gKHUgPSBBbCwgcXQrKykgOiAodSA9IG51bGwsIDAgPT09IFd0ICYmIGUoQ2wpKSwgXG5cdCAgICAgICAgICAgIG51bGwgIT09IHUgJiYgKEx0ID0gbCwgdSA9IGdsKCkpLCBudWxsID09PSB1ID8gKHF0ID0gbCwgbCA9IHUpIDogbCA9IHUsIGw7XG5cdCAgICAgICAgfVxuXHQgICAgICAgIGZ1bmN0aW9uIGgoKSB7XG5cdCAgICAgICAgICAgIHZhciBuLCBsLCB1O1xuXHQgICAgICAgICAgICByZXR1cm4gbiA9IHF0LCBsID0gYSgpLCBudWxsICE9PSBsID8gKHUgPSBkKCksIG51bGwgIT09IHUgPyAoTHQgPSBuLCBsID0gYmwobCwgdSksIFxuXHQgICAgICAgICAgICBudWxsID09PSBsID8gKHF0ID0gbiwgbiA9IGwpIDogbiA9IGwpIDogKHF0ID0gbiwgbiA9IGlsKSkgOiAocXQgPSBuLCBuID0gaWwpLCBuO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBkKCkge1xuXHQgICAgICAgICAgICB2YXIgbiwgbCwgdTtcblx0ICAgICAgICAgICAgcmV0dXJuIFd0KyssIG4gPSBxdCwgbCA9IHAoKSwgbnVsbCAhPT0gbCA/ICh1ID0gaygpLCBudWxsID09PSB1ICYmICh1ID0gYWwpLCBudWxsICE9PSB1ID8gKEx0ID0gbiwgXG5cdCAgICAgICAgICAgIGwgPSBUbChsLCB1KSwgbnVsbCA9PT0gbCA/IChxdCA9IG4sIG4gPSBsKSA6IG4gPSBsKSA6IChxdCA9IG4sIG4gPSBpbCkpIDogKHF0ID0gbiwgXG5cdCAgICAgICAgICAgIG4gPSBpbCksIFd0LS0sIG51bGwgPT09IG4gJiYgKGwgPSBudWxsLCAwID09PSBXdCAmJiBlKGtsKSksIG47XG5cdCAgICAgICAgfVxuXHQgICAgICAgIGZ1bmN0aW9uIHAoKSB7XG5cdCAgICAgICAgICAgIHZhciBuO1xuXHQgICAgICAgICAgICByZXR1cm4gbiA9IHYoKSwgbnVsbCA9PT0gbiAmJiAobiA9IHcoKSwgbnVsbCA9PT0gbiAmJiAobiA9IEEoKSwgbnVsbCA9PT0gbiAmJiAobiA9IEMoKSwgXG5cdCAgICAgICAgICAgIG51bGwgPT09IG4gJiYgKG4gPSBnKCksIG51bGwgPT09IG4gJiYgKG4gPSBiKCkpKSkpKSwgbjtcblx0ICAgICAgICB9XG5cdCAgICAgICAgZnVuY3Rpb24gdigpIHtcblx0ICAgICAgICAgICAgdmFyIGwsIHUsIHQsIHIsIG8sIGM7XG5cdCAgICAgICAgICAgIHJldHVybiBsID0gcXQsIDEyMyA9PT0gbi5jaGFyQ29kZUF0KHF0KSA/ICh1ID0geGwsIHF0KyspIDogKHUgPSBudWxsLCAwID09PSBXdCAmJiBlKHlsKSksIFxuXHQgICAgICAgICAgICBudWxsICE9PSB1ID8gKHQgPSBUKCksIG51bGwgIT09IHQgPyAoNDQgPT09IG4uY2hhckNvZGVBdChxdCkgPyAociA9IG1sLCBxdCsrKSA6IChyID0gbnVsbCwgXG5cdCAgICAgICAgICAgIDAgPT09IFd0ICYmIGUoUmwpKSwgbnVsbCAhPT0gciA/IChvID0gVCgpLCBudWxsICE9PSBvID8gKDEyNSA9PT0gbi5jaGFyQ29kZUF0KHF0KSA/IChjID0gRmwsIFxuXHQgICAgICAgICAgICBxdCsrKSA6IChjID0gbnVsbCwgMCA9PT0gV3QgJiYgZShRbCkpLCBudWxsICE9PSBjID8gKEx0ID0gbCwgdSA9IFNsKHQsIG8pLCBudWxsID09PSB1ID8gKHF0ID0gbCwgXG5cdCAgICAgICAgICAgIGwgPSB1KSA6IGwgPSB1KSA6IChxdCA9IGwsIGwgPSBpbCkpIDogKHF0ID0gbCwgbCA9IGlsKSkgOiAocXQgPSBsLCBsID0gaWwpKSA6IChxdCA9IGwsIFxuXHQgICAgICAgICAgICBsID0gaWwpKSA6IChxdCA9IGwsIGwgPSBpbCksIGw7XG5cdCAgICAgICAgfVxuXHQgICAgICAgIGZ1bmN0aW9uIHcoKSB7XG5cdCAgICAgICAgICAgIHZhciBsLCB1LCB0LCByO1xuXHQgICAgICAgICAgICByZXR1cm4gbCA9IHF0LCAxMjMgPT09IG4uY2hhckNvZGVBdChxdCkgPyAodSA9IHhsLCBxdCsrKSA6ICh1ID0gbnVsbCwgMCA9PT0gV3QgJiYgZSh5bCkpLCBcblx0ICAgICAgICAgICAgbnVsbCAhPT0gdSA/ICh0ID0gVCgpLCBudWxsICE9PSB0ID8gKG4uc3Vic3RyKHF0LCAyKSA9PT0gVWwgPyAociA9IFVsLCBxdCArPSAyKSA6IChyID0gbnVsbCwgXG5cdCAgICAgICAgICAgIDAgPT09IFd0ICYmIGUoRWwpKSwgbnVsbCAhPT0gciA/IChMdCA9IGwsIHUgPSBHbCh0KSwgbnVsbCA9PT0gdSA/IChxdCA9IGwsIGwgPSB1KSA6IGwgPSB1KSA6IChxdCA9IGwsIFxuXHQgICAgICAgICAgICBsID0gaWwpKSA6IChxdCA9IGwsIGwgPSBpbCkpIDogKHF0ID0gbCwgbCA9IGlsKSwgbDtcblx0ICAgICAgICB9XG5cdCAgICAgICAgZnVuY3Rpb24gQSgpIHtcblx0ICAgICAgICAgICAgdmFyIGwsIHUsIHQsIHI7XG5cdCAgICAgICAgICAgIHJldHVybiBsID0gcXQsIDEyMyA9PT0gbi5jaGFyQ29kZUF0KHF0KSA/ICh1ID0geGwsIHF0KyspIDogKHUgPSBudWxsLCAwID09PSBXdCAmJiBlKHlsKSksIFxuXHQgICAgICAgICAgICBudWxsICE9PSB1ID8gKHQgPSBUKCksIG51bGwgIT09IHQgPyAoMTI1ID09PSBuLmNoYXJDb2RlQXQocXQpID8gKHIgPSBGbCwgcXQrKykgOiAociA9IG51bGwsIFxuXHQgICAgICAgICAgICAwID09PSBXdCAmJiBlKFFsKSksIG51bGwgIT09IHIgPyAoTHQgPSBsLCB1ID0gQmwodCksIG51bGwgPT09IHUgPyAocXQgPSBsLCBsID0gdSkgOiBsID0gdSkgOiAocXQgPSBsLCBcblx0ICAgICAgICAgICAgbCA9IGlsKSkgOiAocXQgPSBsLCBsID0gaWwpKSA6IChxdCA9IGwsIGwgPSBpbCksIGw7XG5cdCAgICAgICAgfVxuXHQgICAgICAgIGZ1bmN0aW9uIEMoKSB7XG5cdCAgICAgICAgICAgIHZhciBsLCB1O1xuXHQgICAgICAgICAgICByZXR1cm4gbCA9IHF0LCA0MyA9PT0gbi5jaGFyQ29kZUF0KHF0KSA/ICh1ID0gamwsIHF0KyspIDogKHUgPSBudWxsLCAwID09PSBXdCAmJiBlKCRsKSksIFxuXHQgICAgICAgICAgICBudWxsICE9PSB1ICYmIChMdCA9IGwsIHUgPSBxbCgpKSwgbnVsbCA9PT0gdSA/IChxdCA9IGwsIGwgPSB1KSA6IGwgPSB1LCBsO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBnKCkge1xuXHQgICAgICAgICAgICB2YXIgbCwgdTtcblx0ICAgICAgICAgICAgcmV0dXJuIGwgPSBxdCwgNDIgPT09IG4uY2hhckNvZGVBdChxdCkgPyAodSA9IExsLCBxdCsrKSA6ICh1ID0gbnVsbCwgMCA9PT0gV3QgJiYgZShNbCkpLCBcblx0ICAgICAgICAgICAgbnVsbCAhPT0gdSAmJiAoTHQgPSBsLCB1ID0gRGwoKSksIG51bGwgPT09IHUgPyAocXQgPSBsLCBsID0gdSkgOiBsID0gdSwgbDtcblx0ICAgICAgICB9XG5cdCAgICAgICAgZnVuY3Rpb24gYigpIHtcblx0ICAgICAgICAgICAgdmFyIGwsIHU7XG5cdCAgICAgICAgICAgIHJldHVybiBsID0gcXQsIDYzID09PSBuLmNoYXJDb2RlQXQocXQpID8gKHUgPSBIbCwgcXQrKykgOiAodSA9IG51bGwsIDAgPT09IFd0ICYmIGUoT2wpKSwgXG5cdCAgICAgICAgICAgIG51bGwgIT09IHUgJiYgKEx0ID0gbCwgdSA9IFdsKCkpLCBudWxsID09PSB1ID8gKHF0ID0gbCwgbCA9IHUpIDogbCA9IHUsIGw7XG5cdCAgICAgICAgfVxuXHQgICAgICAgIGZ1bmN0aW9uIGsoKSB7XG5cdCAgICAgICAgICAgIHZhciBsO1xuXHQgICAgICAgICAgICByZXR1cm4gNjMgPT09IG4uY2hhckNvZGVBdChxdCkgPyAobCA9IEhsLCBxdCsrKSA6IChsID0gbnVsbCwgMCA9PT0gV3QgJiYgZShPbCkpLCBcblx0ICAgICAgICAgICAgbDtcblx0ICAgICAgICB9XG5cdCAgICAgICAgZnVuY3Rpb24gVCgpIHtcblx0ICAgICAgICAgICAgdmFyIGwsIHUsIHQ7XG5cdCAgICAgICAgICAgIGlmIChsID0gcXQsIHUgPSBbXSwgemwudGVzdChuLmNoYXJBdChxdCkpID8gKHQgPSBuLmNoYXJBdChxdCksIHF0KyspIDogKHQgPSBudWxsLCBcblx0ICAgICAgICAgICAgMCA9PT0gV3QgJiYgZShJbCkpLCBudWxsICE9PSB0KSBmb3IgKDtudWxsICE9PSB0OyApIHUucHVzaCh0KSwgemwudGVzdChuLmNoYXJBdChxdCkpID8gKHQgPSBuLmNoYXJBdChxdCksIFxuXHQgICAgICAgICAgICBxdCsrKSA6ICh0ID0gbnVsbCwgMCA9PT0gV3QgJiYgZShJbCkpOyBlbHNlIHUgPSBpbDtcblx0ICAgICAgICAgICAgcmV0dXJuIG51bGwgIT09IHUgJiYgKEx0ID0gbCwgdSA9IEpsKHUpKSwgbnVsbCA9PT0gdSA/IChxdCA9IGwsIGwgPSB1KSA6IGwgPSB1LCBcblx0ICAgICAgICAgICAgbDtcblx0ICAgICAgICB9XG5cdCAgICAgICAgZnVuY3Rpb24geCgpIHtcblx0ICAgICAgICAgICAgdmFyIGwsIHUsIHQsIHI7XG5cdCAgICAgICAgICAgIHJldHVybiBsID0gcXQsIDQwID09PSBuLmNoYXJDb2RlQXQocXQpID8gKHUgPSBLbCwgcXQrKykgOiAodSA9IG51bGwsIDAgPT09IFd0ICYmIGUoTmwpKSwgXG5cdCAgICAgICAgICAgIG51bGwgIT09IHUgPyAodCA9IFIoKSwgbnVsbCA9PT0gdCAmJiAodCA9IEYoKSwgbnVsbCA9PT0gdCAmJiAodCA9IG0oKSwgbnVsbCA9PT0gdCAmJiAodCA9IHkoKSkpKSwgXG5cdCAgICAgICAgICAgIG51bGwgIT09IHQgPyAoNDEgPT09IG4uY2hhckNvZGVBdChxdCkgPyAociA9IFBsLCBxdCsrKSA6IChyID0gbnVsbCwgMCA9PT0gV3QgJiYgZShWbCkpLCBcblx0ICAgICAgICAgICAgbnVsbCAhPT0gciA/IChMdCA9IGwsIHUgPSBYbCh0KSwgbnVsbCA9PT0gdSA/IChxdCA9IGwsIGwgPSB1KSA6IGwgPSB1KSA6IChxdCA9IGwsIFxuXHQgICAgICAgICAgICBsID0gaWwpKSA6IChxdCA9IGwsIGwgPSBpbCkpIDogKHF0ID0gbCwgbCA9IGlsKSwgbDtcblx0ICAgICAgICB9XG5cdCAgICAgICAgZnVuY3Rpb24geSgpIHtcblx0ICAgICAgICAgICAgdmFyIG4sIGw7XG5cdCAgICAgICAgICAgIHJldHVybiBuID0gcXQsIGwgPSBjKCksIG51bGwgIT09IGwgJiYgKEx0ID0gbiwgbCA9IFlsKGwpKSwgbnVsbCA9PT0gbCA/IChxdCA9IG4sIFxuXHQgICAgICAgICAgICBuID0gbCkgOiBuID0gbCwgbjtcblx0ICAgICAgICB9XG5cdCAgICAgICAgZnVuY3Rpb24gbSgpIHtcblx0ICAgICAgICAgICAgdmFyIGwsIHUsIHQ7XG5cdCAgICAgICAgICAgIHJldHVybiBsID0gcXQsIG4uc3Vic3RyKHF0LCAyKSA9PT0gWmwgPyAodSA9IFpsLCBxdCArPSAyKSA6ICh1ID0gbnVsbCwgMCA9PT0gV3QgJiYgZShfbCkpLCBcblx0ICAgICAgICAgICAgbnVsbCAhPT0gdSA/ICh0ID0gYygpLCBudWxsICE9PSB0ID8gKEx0ID0gbCwgdSA9IG51KHQpLCBudWxsID09PSB1ID8gKHF0ID0gbCwgbCA9IHUpIDogbCA9IHUpIDogKHF0ID0gbCwgXG5cdCAgICAgICAgICAgIGwgPSBpbCkpIDogKHF0ID0gbCwgbCA9IGlsKSwgbDtcblx0ICAgICAgICB9XG5cdCAgICAgICAgZnVuY3Rpb24gUigpIHtcblx0ICAgICAgICAgICAgdmFyIGwsIHUsIHQ7XG5cdCAgICAgICAgICAgIHJldHVybiBsID0gcXQsIG4uc3Vic3RyKHF0LCAyKSA9PT0gbHUgPyAodSA9IGx1LCBxdCArPSAyKSA6ICh1ID0gbnVsbCwgMCA9PT0gV3QgJiYgZSh1dSkpLCBcblx0ICAgICAgICAgICAgbnVsbCAhPT0gdSA/ICh0ID0gYygpLCBudWxsICE9PSB0ID8gKEx0ID0gbCwgdSA9IHR1KHQpLCBudWxsID09PSB1ID8gKHF0ID0gbCwgbCA9IHUpIDogbCA9IHUpIDogKHF0ID0gbCwgXG5cdCAgICAgICAgICAgIGwgPSBpbCkpIDogKHF0ID0gbCwgbCA9IGlsKSwgbDtcblx0ICAgICAgICB9XG5cdCAgICAgICAgZnVuY3Rpb24gRigpIHtcblx0ICAgICAgICAgICAgdmFyIGwsIHUsIHQ7XG5cdCAgICAgICAgICAgIHJldHVybiBsID0gcXQsIG4uc3Vic3RyKHF0LCAyKSA9PT0gcnUgPyAodSA9IHJ1LCBxdCArPSAyKSA6ICh1ID0gbnVsbCwgMCA9PT0gV3QgJiYgZShldSkpLCBcblx0ICAgICAgICAgICAgbnVsbCAhPT0gdSA/ICh0ID0gYygpLCBudWxsICE9PSB0ID8gKEx0ID0gbCwgdSA9IG91KHQpLCBudWxsID09PSB1ID8gKHF0ID0gbCwgbCA9IHUpIDogbCA9IHUpIDogKHF0ID0gbCwgXG5cdCAgICAgICAgICAgIGwgPSBpbCkpIDogKHF0ID0gbCwgbCA9IGlsKSwgbDtcblx0ICAgICAgICB9XG5cdCAgICAgICAgZnVuY3Rpb24gUSgpIHtcblx0ICAgICAgICAgICAgdmFyIGwsIHUsIHQsIHIsIG87XG5cdCAgICAgICAgICAgIGlmIChXdCsrLCBsID0gcXQsIDkxID09PSBuLmNoYXJDb2RlQXQocXQpID8gKHUgPSBpdSwgcXQrKykgOiAodSA9IG51bGwsIDAgPT09IFd0ICYmIGUoYXUpKSwgXG5cdCAgICAgICAgICAgIG51bGwgIT09IHUpIGlmICg5NCA9PT0gbi5jaGFyQ29kZUF0KHF0KSA/ICh0ID0gcGwsIHF0KyspIDogKHQgPSBudWxsLCAwID09PSBXdCAmJiBlKHZsKSksIFxuXHQgICAgICAgICAgICBudWxsID09PSB0ICYmICh0ID0gYWwpLCBudWxsICE9PSB0KSB7XG5cdCAgICAgICAgICAgICAgICBmb3IgKHIgPSBbXSwgbyA9IFMoKSwgbnVsbCA9PT0gbyAmJiAobyA9IFUoKSk7IG51bGwgIT09IG87ICkgci5wdXNoKG8pLCBvID0gUygpLCBcblx0ICAgICAgICAgICAgICAgIG51bGwgPT09IG8gJiYgKG8gPSBVKCkpO1xuXHQgICAgICAgICAgICAgICAgbnVsbCAhPT0gciA/ICg5MyA9PT0gbi5jaGFyQ29kZUF0KHF0KSA/IChvID0gZnUsIHF0KyspIDogKG8gPSBudWxsLCAwID09PSBXdCAmJiBlKHN1KSksIFxuXHQgICAgICAgICAgICAgICAgbnVsbCAhPT0gbyA/IChMdCA9IGwsIHUgPSBodSh0LCByKSwgbnVsbCA9PT0gdSA/IChxdCA9IGwsIGwgPSB1KSA6IGwgPSB1KSA6IChxdCA9IGwsIFxuXHQgICAgICAgICAgICAgICAgbCA9IGlsKSkgOiAocXQgPSBsLCBsID0gaWwpO1xuXHQgICAgICAgICAgICB9IGVsc2UgcXQgPSBsLCBsID0gaWw7IGVsc2UgcXQgPSBsLCBsID0gaWw7XG5cdCAgICAgICAgICAgIHJldHVybiBXdC0tLCBudWxsID09PSBsICYmICh1ID0gbnVsbCwgMCA9PT0gV3QgJiYgZShjdSkpLCBsO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBTKCkge1xuXHQgICAgICAgICAgICB2YXIgbCwgdSwgdCwgcjtcblx0ICAgICAgICAgICAgcmV0dXJuIFd0KyssIGwgPSBxdCwgdSA9IFUoKSwgbnVsbCAhPT0gdSA/ICg0NSA9PT0gbi5jaGFyQ29kZUF0KHF0KSA/ICh0ID0gcHUsIHF0KyspIDogKHQgPSBudWxsLCBcblx0ICAgICAgICAgICAgMCA9PT0gV3QgJiYgZSh2dSkpLCBudWxsICE9PSB0ID8gKHIgPSBVKCksIG51bGwgIT09IHIgPyAoTHQgPSBsLCB1ID0gd3UodSwgciksIG51bGwgPT09IHUgPyAocXQgPSBsLCBcblx0ICAgICAgICAgICAgbCA9IHUpIDogbCA9IHUpIDogKHF0ID0gbCwgbCA9IGlsKSkgOiAocXQgPSBsLCBsID0gaWwpKSA6IChxdCA9IGwsIGwgPSBpbCksIFd0LS0sIFxuXHQgICAgICAgICAgICBudWxsID09PSBsICYmICh1ID0gbnVsbCwgMCA9PT0gV3QgJiYgZShkdSkpLCBsO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBVKCkge1xuXHQgICAgICAgICAgICB2YXIgbiwgbDtcblx0ICAgICAgICAgICAgcmV0dXJuIFd0KyssIG4gPSBHKCksIG51bGwgPT09IG4gJiYgKG4gPSBFKCkpLCBXdC0tLCBudWxsID09PSBuICYmIChsID0gbnVsbCwgMCA9PT0gV3QgJiYgZShBdSkpLCBcblx0ICAgICAgICAgICAgbjtcblx0ICAgICAgICB9XG5cdCAgICAgICAgZnVuY3Rpb24gRSgpIHtcblx0ICAgICAgICAgICAgdmFyIGwsIHU7XG5cdCAgICAgICAgICAgIHJldHVybiBsID0gcXQsIEN1LnRlc3Qobi5jaGFyQXQocXQpKSA/ICh1ID0gbi5jaGFyQXQocXQpLCBxdCsrKSA6ICh1ID0gbnVsbCwgMCA9PT0gV3QgJiYgZShndSkpLCBcblx0ICAgICAgICAgICAgbnVsbCAhPT0gdSAmJiAoTHQgPSBsLCB1ID0gYnUodSkpLCBudWxsID09PSB1ID8gKHF0ID0gbCwgbCA9IHUpIDogbCA9IHUsIGw7XG5cdCAgICAgICAgfVxuXHQgICAgICAgIGZ1bmN0aW9uIEcoKSB7XG5cdCAgICAgICAgICAgIHZhciBuO1xuXHQgICAgICAgICAgICByZXR1cm4gbiA9IEwoKSwgbnVsbCA9PT0gbiAmJiAobiA9IFkoKSwgbnVsbCA9PT0gbiAmJiAobiA9IEgoKSwgbnVsbCA9PT0gbiAmJiAobiA9IE8oKSwgXG5cdCAgICAgICAgICAgIG51bGwgPT09IG4gJiYgKG4gPSBXKCksIG51bGwgPT09IG4gJiYgKG4gPSB6KCksIG51bGwgPT09IG4gJiYgKG4gPSBJKCksIG51bGwgPT09IG4gJiYgKG4gPSBKKCksIFxuXHQgICAgICAgICAgICBudWxsID09PSBuICYmIChuID0gSygpLCBudWxsID09PSBuICYmIChuID0gTigpLCBudWxsID09PSBuICYmIChuID0gUCgpLCBudWxsID09PSBuICYmIChuID0gVigpLCBcblx0ICAgICAgICAgICAgbnVsbCA9PT0gbiAmJiAobiA9IFgoKSwgbnVsbCA9PT0gbiAmJiAobiA9IF8oKSwgbnVsbCA9PT0gbiAmJiAobiA9IG5sKCksIG51bGwgPT09IG4gJiYgKG4gPSBsbCgpLCBcblx0ICAgICAgICAgICAgbnVsbCA9PT0gbiAmJiAobiA9IHVsKCksIG51bGwgPT09IG4gJiYgKG4gPSB0bCgpKSkpKSkpKSkpKSkpKSkpKSksIG47XG5cdCAgICAgICAgfVxuXHQgICAgICAgIGZ1bmN0aW9uIEIoKSB7XG5cdCAgICAgICAgICAgIHZhciBuO1xuXHQgICAgICAgICAgICByZXR1cm4gbiA9IGooKSwgbnVsbCA9PT0gbiAmJiAobiA9IHEoKSwgbnVsbCA9PT0gbiAmJiAobiA9ICQoKSkpLCBuO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBqKCkge1xuXHQgICAgICAgICAgICB2YXIgbCwgdTtcblx0ICAgICAgICAgICAgcmV0dXJuIGwgPSBxdCwgNDYgPT09IG4uY2hhckNvZGVBdChxdCkgPyAodSA9IGt1LCBxdCsrKSA6ICh1ID0gbnVsbCwgMCA9PT0gV3QgJiYgZShUdSkpLCBcblx0ICAgICAgICAgICAgbnVsbCAhPT0gdSAmJiAoTHQgPSBsLCB1ID0geHUoKSksIG51bGwgPT09IHUgPyAocXQgPSBsLCBsID0gdSkgOiBsID0gdSwgbDtcblx0ICAgICAgICB9XG5cdCAgICAgICAgZnVuY3Rpb24gJCgpIHtcblx0ICAgICAgICAgICAgdmFyIGwsIHU7XG5cdCAgICAgICAgICAgIHJldHVybiBXdCsrLCBsID0gcXQsIG11LnRlc3Qobi5jaGFyQXQocXQpKSA/ICh1ID0gbi5jaGFyQXQocXQpLCBxdCsrKSA6ICh1ID0gbnVsbCwgXG5cdCAgICAgICAgICAgIDAgPT09IFd0ICYmIGUoUnUpKSwgbnVsbCAhPT0gdSAmJiAoTHQgPSBsLCB1ID0gYnUodSkpLCBudWxsID09PSB1ID8gKHF0ID0gbCwgbCA9IHUpIDogbCA9IHUsIFxuXHQgICAgICAgICAgICBXdC0tLCBudWxsID09PSBsICYmICh1ID0gbnVsbCwgMCA9PT0gV3QgJiYgZSh5dSkpLCBsO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBxKCkge1xuXHQgICAgICAgICAgICB2YXIgbjtcblx0ICAgICAgICAgICAgcmV0dXJuIG4gPSBNKCksIG51bGwgPT09IG4gJiYgKG4gPSBEKCksIG51bGwgPT09IG4gJiYgKG4gPSBZKCksIG51bGwgPT09IG4gJiYgKG4gPSBIKCksIFxuXHQgICAgICAgICAgICBudWxsID09PSBuICYmIChuID0gTygpLCBudWxsID09PSBuICYmIChuID0gVygpLCBudWxsID09PSBuICYmIChuID0geigpLCBudWxsID09PSBuICYmIChuID0gSSgpLCBcblx0ICAgICAgICAgICAgbnVsbCA9PT0gbiAmJiAobiA9IEooKSwgbnVsbCA9PT0gbiAmJiAobiA9IEsoKSwgbnVsbCA9PT0gbiAmJiAobiA9IE4oKSwgbnVsbCA9PT0gbiAmJiAobiA9IFAoKSwgXG5cdCAgICAgICAgICAgIG51bGwgPT09IG4gJiYgKG4gPSBWKCksIG51bGwgPT09IG4gJiYgKG4gPSBYKCksIG51bGwgPT09IG4gJiYgKG4gPSBaKCksIG51bGwgPT09IG4gJiYgKG4gPSBfKCksIFxuXHQgICAgICAgICAgICBudWxsID09PSBuICYmIChuID0gbmwoKSwgbnVsbCA9PT0gbiAmJiAobiA9IGxsKCksIG51bGwgPT09IG4gJiYgKG4gPSB1bCgpLCBudWxsID09PSBuICYmIChuID0gdGwoKSkpKSkpKSkpKSkpKSkpKSkpKSksIFxuXHQgICAgICAgICAgICBuO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBMKCkge1xuXHQgICAgICAgICAgICB2YXIgbCwgdTtcblx0ICAgICAgICAgICAgcmV0dXJuIGwgPSBxdCwgbi5zdWJzdHIocXQsIDIpID09PSBGdSA/ICh1ID0gRnUsIHF0ICs9IDIpIDogKHUgPSBudWxsLCAwID09PSBXdCAmJiBlKFF1KSksIFxuXHQgICAgICAgICAgICBudWxsICE9PSB1ICYmIChMdCA9IGwsIHUgPSBTdSgpKSwgbnVsbCA9PT0gdSA/IChxdCA9IGwsIGwgPSB1KSA6IGwgPSB1LCBsO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBNKCkge1xuXHQgICAgICAgICAgICB2YXIgbCwgdTtcblx0ICAgICAgICAgICAgcmV0dXJuIGwgPSBxdCwgbi5zdWJzdHIocXQsIDIpID09PSBGdSA/ICh1ID0gRnUsIHF0ICs9IDIpIDogKHUgPSBudWxsLCAwID09PSBXdCAmJiBlKFF1KSksIFxuXHQgICAgICAgICAgICBudWxsICE9PSB1ICYmIChMdCA9IGwsIHUgPSBVdSgpKSwgbnVsbCA9PT0gdSA/IChxdCA9IGwsIGwgPSB1KSA6IGwgPSB1LCBsO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBEKCkge1xuXHQgICAgICAgICAgICB2YXIgbCwgdTtcblx0ICAgICAgICAgICAgcmV0dXJuIGwgPSBxdCwgbi5zdWJzdHIocXQsIDIpID09PSBFdSA/ICh1ID0gRXUsIHF0ICs9IDIpIDogKHUgPSBudWxsLCAwID09PSBXdCAmJiBlKEd1KSksIFxuXHQgICAgICAgICAgICBudWxsICE9PSB1ICYmIChMdCA9IGwsIHUgPSBCdSgpKSwgbnVsbCA9PT0gdSA/IChxdCA9IGwsIGwgPSB1KSA6IGwgPSB1LCBsO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBIKCkge1xuXHQgICAgICAgICAgICB2YXIgbCwgdTtcblx0ICAgICAgICAgICAgcmV0dXJuIGwgPSBxdCwgbi5zdWJzdHIocXQsIDIpID09PSBqdSA/ICh1ID0ganUsIHF0ICs9IDIpIDogKHUgPSBudWxsLCAwID09PSBXdCAmJiBlKCR1KSksIFxuXHQgICAgICAgICAgICBudWxsICE9PSB1ICYmIChMdCA9IGwsIHUgPSBxdSgpKSwgbnVsbCA9PT0gdSA/IChxdCA9IGwsIGwgPSB1KSA6IGwgPSB1LCBsO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBPKCkge1xuXHQgICAgICAgICAgICB2YXIgbCwgdTtcblx0ICAgICAgICAgICAgcmV0dXJuIGwgPSBxdCwgbi5zdWJzdHIocXQsIDIpID09PSBMdSA/ICh1ID0gTHUsIHF0ICs9IDIpIDogKHUgPSBudWxsLCAwID09PSBXdCAmJiBlKE11KSksIFxuXHQgICAgICAgICAgICBudWxsICE9PSB1ICYmIChMdCA9IGwsIHUgPSBEdSgpKSwgbnVsbCA9PT0gdSA/IChxdCA9IGwsIGwgPSB1KSA6IGwgPSB1LCBsO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBXKCkge1xuXHQgICAgICAgICAgICB2YXIgbCwgdTtcblx0ICAgICAgICAgICAgcmV0dXJuIGwgPSBxdCwgbi5zdWJzdHIocXQsIDIpID09PSBIdSA/ICh1ID0gSHUsIHF0ICs9IDIpIDogKHUgPSBudWxsLCAwID09PSBXdCAmJiBlKE91KSksIFxuXHQgICAgICAgICAgICBudWxsICE9PSB1ICYmIChMdCA9IGwsIHUgPSBXdSgpKSwgbnVsbCA9PT0gdSA/IChxdCA9IGwsIGwgPSB1KSA6IGwgPSB1LCBsO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiB6KCkge1xuXHQgICAgICAgICAgICB2YXIgbCwgdTtcblx0ICAgICAgICAgICAgcmV0dXJuIGwgPSBxdCwgbi5zdWJzdHIocXQsIDIpID09PSB6dSA/ICh1ID0genUsIHF0ICs9IDIpIDogKHUgPSBudWxsLCAwID09PSBXdCAmJiBlKEl1KSksIFxuXHQgICAgICAgICAgICBudWxsICE9PSB1ICYmIChMdCA9IGwsIHUgPSBKdSgpKSwgbnVsbCA9PT0gdSA/IChxdCA9IGwsIGwgPSB1KSA6IGwgPSB1LCBsO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBJKCkge1xuXHQgICAgICAgICAgICB2YXIgbCwgdTtcblx0ICAgICAgICAgICAgcmV0dXJuIGwgPSBxdCwgbi5zdWJzdHIocXQsIDIpID09PSBLdSA/ICh1ID0gS3UsIHF0ICs9IDIpIDogKHUgPSBudWxsLCAwID09PSBXdCAmJiBlKE51KSksIFxuXHQgICAgICAgICAgICBudWxsICE9PSB1ICYmIChMdCA9IGwsIHUgPSBQdSgpKSwgbnVsbCA9PT0gdSA/IChxdCA9IGwsIGwgPSB1KSA6IGwgPSB1LCBsO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBKKCkge1xuXHQgICAgICAgICAgICB2YXIgbCwgdTtcblx0ICAgICAgICAgICAgcmV0dXJuIGwgPSBxdCwgbi5zdWJzdHIocXQsIDIpID09PSBWdSA/ICh1ID0gVnUsIHF0ICs9IDIpIDogKHUgPSBudWxsLCAwID09PSBXdCAmJiBlKFh1KSksIFxuXHQgICAgICAgICAgICBudWxsICE9PSB1ICYmIChMdCA9IGwsIHUgPSBZdSgpKSwgbnVsbCA9PT0gdSA/IChxdCA9IGwsIGwgPSB1KSA6IGwgPSB1LCBsO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBLKCkge1xuXHQgICAgICAgICAgICB2YXIgbCwgdTtcblx0ICAgICAgICAgICAgcmV0dXJuIGwgPSBxdCwgbi5zdWJzdHIocXQsIDIpID09PSBadSA/ICh1ID0gWnUsIHF0ICs9IDIpIDogKHUgPSBudWxsLCAwID09PSBXdCAmJiBlKF91KSksIFxuXHQgICAgICAgICAgICBudWxsICE9PSB1ICYmIChMdCA9IGwsIHUgPSBudCgpKSwgbnVsbCA9PT0gdSA/IChxdCA9IGwsIGwgPSB1KSA6IGwgPSB1LCBsO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBOKCkge1xuXHQgICAgICAgICAgICB2YXIgbCwgdTtcblx0ICAgICAgICAgICAgcmV0dXJuIGwgPSBxdCwgbi5zdWJzdHIocXQsIDIpID09PSBsdCA/ICh1ID0gbHQsIHF0ICs9IDIpIDogKHUgPSBudWxsLCAwID09PSBXdCAmJiBlKHV0KSksIFxuXHQgICAgICAgICAgICBudWxsICE9PSB1ICYmIChMdCA9IGwsIHUgPSB0dCgpKSwgbnVsbCA9PT0gdSA/IChxdCA9IGwsIGwgPSB1KSA6IGwgPSB1LCBsO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBQKCkge1xuXHQgICAgICAgICAgICB2YXIgbCwgdTtcblx0ICAgICAgICAgICAgcmV0dXJuIGwgPSBxdCwgbi5zdWJzdHIocXQsIDIpID09PSBydCA/ICh1ID0gcnQsIHF0ICs9IDIpIDogKHUgPSBudWxsLCAwID09PSBXdCAmJiBlKGV0KSksIFxuXHQgICAgICAgICAgICBudWxsICE9PSB1ICYmIChMdCA9IGwsIHUgPSBvdCgpKSwgbnVsbCA9PT0gdSA/IChxdCA9IGwsIGwgPSB1KSA6IGwgPSB1LCBsO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBWKCkge1xuXHQgICAgICAgICAgICB2YXIgbCwgdTtcblx0ICAgICAgICAgICAgcmV0dXJuIGwgPSBxdCwgbi5zdWJzdHIocXQsIDIpID09PSBjdCA/ICh1ID0gY3QsIHF0ICs9IDIpIDogKHUgPSBudWxsLCAwID09PSBXdCAmJiBlKGl0KSksIFxuXHQgICAgICAgICAgICBudWxsICE9PSB1ICYmIChMdCA9IGwsIHUgPSBhdCgpKSwgbnVsbCA9PT0gdSA/IChxdCA9IGwsIGwgPSB1KSA6IGwgPSB1LCBsO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBYKCkge1xuXHQgICAgICAgICAgICB2YXIgbCwgdTtcblx0ICAgICAgICAgICAgcmV0dXJuIGwgPSBxdCwgbi5zdWJzdHIocXQsIDIpID09PSBmdCA/ICh1ID0gZnQsIHF0ICs9IDIpIDogKHUgPSBudWxsLCAwID09PSBXdCAmJiBlKHN0KSksIFxuXHQgICAgICAgICAgICBudWxsICE9PSB1ICYmIChMdCA9IGwsIHUgPSBodCgpKSwgbnVsbCA9PT0gdSA/IChxdCA9IGwsIGwgPSB1KSA6IGwgPSB1LCBsO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBZKCkge1xuXHQgICAgICAgICAgICB2YXIgbCwgdSwgdDtcblx0ICAgICAgICAgICAgcmV0dXJuIGwgPSBxdCwgbi5zdWJzdHIocXQsIDIpID09PSBkdCA/ICh1ID0gZHQsIHF0ICs9IDIpIDogKHUgPSBudWxsLCAwID09PSBXdCAmJiBlKHB0KSksIFxuXHQgICAgICAgICAgICBudWxsICE9PSB1ID8gKG4ubGVuZ3RoID4gcXQgPyAodCA9IG4uY2hhckF0KHF0KSwgcXQrKykgOiAodCA9IG51bGwsIDAgPT09IFd0ICYmIGUodnQpKSwgXG5cdCAgICAgICAgICAgIG51bGwgIT09IHQgPyAoTHQgPSBsLCB1ID0gd3QodCksIG51bGwgPT09IHUgPyAocXQgPSBsLCBsID0gdSkgOiBsID0gdSkgOiAocXQgPSBsLCBcblx0ICAgICAgICAgICAgbCA9IGlsKSkgOiAocXQgPSBsLCBsID0gaWwpLCBsO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBaKCkge1xuXHQgICAgICAgICAgICB2YXIgbCwgdSwgdDtcblx0ICAgICAgICAgICAgcmV0dXJuIGwgPSBxdCwgOTIgPT09IG4uY2hhckNvZGVBdChxdCkgPyAodSA9IEF0LCBxdCsrKSA6ICh1ID0gbnVsbCwgMCA9PT0gV3QgJiYgZShDdCkpLCBcblx0ICAgICAgICAgICAgbnVsbCAhPT0gdSA/IChndC50ZXN0KG4uY2hhckF0KHF0KSkgPyAodCA9IG4uY2hhckF0KHF0KSwgcXQrKykgOiAodCA9IG51bGwsIDAgPT09IFd0ICYmIGUoYnQpKSwgXG5cdCAgICAgICAgICAgIG51bGwgIT09IHQgPyAoTHQgPSBsLCB1ID0ga3QodCksIG51bGwgPT09IHUgPyAocXQgPSBsLCBsID0gdSkgOiBsID0gdSkgOiAocXQgPSBsLCBcblx0ICAgICAgICAgICAgbCA9IGlsKSkgOiAocXQgPSBsLCBsID0gaWwpLCBsO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBfKCkge1xuXHQgICAgICAgICAgICB2YXIgbCwgdSwgdCwgcjtcblx0ICAgICAgICAgICAgaWYgKGwgPSBxdCwgbi5zdWJzdHIocXQsIDIpID09PSBUdCA/ICh1ID0gVHQsIHF0ICs9IDIpIDogKHUgPSBudWxsLCAwID09PSBXdCAmJiBlKHh0KSksIFxuXHQgICAgICAgICAgICBudWxsICE9PSB1KSB7XG5cdCAgICAgICAgICAgICAgICBpZiAodCA9IFtdLCB5dC50ZXN0KG4uY2hhckF0KHF0KSkgPyAociA9IG4uY2hhckF0KHF0KSwgcXQrKykgOiAociA9IG51bGwsIDAgPT09IFd0ICYmIGUobXQpKSwgXG5cdCAgICAgICAgICAgICAgICBudWxsICE9PSByKSBmb3IgKDtudWxsICE9PSByOyApIHQucHVzaChyKSwgeXQudGVzdChuLmNoYXJBdChxdCkpID8gKHIgPSBuLmNoYXJBdChxdCksIFxuXHQgICAgICAgICAgICAgICAgcXQrKykgOiAociA9IG51bGwsIDAgPT09IFd0ICYmIGUobXQpKTsgZWxzZSB0ID0gaWw7XG5cdCAgICAgICAgICAgICAgICBudWxsICE9PSB0ID8gKEx0ID0gbCwgdSA9IFJ0KHQpLCBudWxsID09PSB1ID8gKHF0ID0gbCwgbCA9IHUpIDogbCA9IHUpIDogKHF0ID0gbCwgXG5cdCAgICAgICAgICAgICAgICBsID0gaWwpO1xuXHQgICAgICAgICAgICB9IGVsc2UgcXQgPSBsLCBsID0gaWw7XG5cdCAgICAgICAgICAgIHJldHVybiBsO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiBubCgpIHtcblx0ICAgICAgICAgICAgdmFyIGwsIHUsIHQsIHI7XG5cdCAgICAgICAgICAgIGlmIChsID0gcXQsIG4uc3Vic3RyKHF0LCAyKSA9PT0gRnQgPyAodSA9IEZ0LCBxdCArPSAyKSA6ICh1ID0gbnVsbCwgMCA9PT0gV3QgJiYgZShRdCkpLCBcblx0ICAgICAgICAgICAgbnVsbCAhPT0gdSkge1xuXHQgICAgICAgICAgICAgICAgaWYgKHQgPSBbXSwgU3QudGVzdChuLmNoYXJBdChxdCkpID8gKHIgPSBuLmNoYXJBdChxdCksIHF0KyspIDogKHIgPSBudWxsLCAwID09PSBXdCAmJiBlKFV0KSksIFxuXHQgICAgICAgICAgICAgICAgbnVsbCAhPT0gcikgZm9yICg7bnVsbCAhPT0gcjsgKSB0LnB1c2gociksIFN0LnRlc3Qobi5jaGFyQXQocXQpKSA/IChyID0gbi5jaGFyQXQocXQpLCBcblx0ICAgICAgICAgICAgICAgIHF0KyspIDogKHIgPSBudWxsLCAwID09PSBXdCAmJiBlKFV0KSk7IGVsc2UgdCA9IGlsO1xuXHQgICAgICAgICAgICAgICAgbnVsbCAhPT0gdCA/IChMdCA9IGwsIHUgPSBFdCh0KSwgbnVsbCA9PT0gdSA/IChxdCA9IGwsIGwgPSB1KSA6IGwgPSB1KSA6IChxdCA9IGwsIFxuXHQgICAgICAgICAgICAgICAgbCA9IGlsKTtcblx0ICAgICAgICAgICAgfSBlbHNlIHF0ID0gbCwgbCA9IGlsO1xuXHQgICAgICAgICAgICByZXR1cm4gbDtcblx0ICAgICAgICB9XG5cdCAgICAgICAgZnVuY3Rpb24gbGwoKSB7XG5cdCAgICAgICAgICAgIHZhciBsLCB1LCB0LCByO1xuXHQgICAgICAgICAgICBpZiAobCA9IHF0LCBuLnN1YnN0cihxdCwgMikgPT09IEd0ID8gKHUgPSBHdCwgcXQgKz0gMikgOiAodSA9IG51bGwsIDAgPT09IFd0ICYmIGUoQnQpKSwgXG5cdCAgICAgICAgICAgIG51bGwgIT09IHUpIHtcblx0ICAgICAgICAgICAgICAgIGlmICh0ID0gW10sIFN0LnRlc3Qobi5jaGFyQXQocXQpKSA/IChyID0gbi5jaGFyQXQocXQpLCBxdCsrKSA6IChyID0gbnVsbCwgMCA9PT0gV3QgJiYgZShVdCkpLCBcblx0ICAgICAgICAgICAgICAgIG51bGwgIT09IHIpIGZvciAoO251bGwgIT09IHI7ICkgdC5wdXNoKHIpLCBTdC50ZXN0KG4uY2hhckF0KHF0KSkgPyAociA9IG4uY2hhckF0KHF0KSwgXG5cdCAgICAgICAgICAgICAgICBxdCsrKSA6IChyID0gbnVsbCwgMCA9PT0gV3QgJiYgZShVdCkpOyBlbHNlIHQgPSBpbDtcblx0ICAgICAgICAgICAgICAgIG51bGwgIT09IHQgPyAoTHQgPSBsLCB1ID0ganQodCksIG51bGwgPT09IHUgPyAocXQgPSBsLCBsID0gdSkgOiBsID0gdSkgOiAocXQgPSBsLCBcblx0ICAgICAgICAgICAgICAgIGwgPSBpbCk7XG5cdCAgICAgICAgICAgIH0gZWxzZSBxdCA9IGwsIGwgPSBpbDtcblx0ICAgICAgICAgICAgcmV0dXJuIGw7XG5cdCAgICAgICAgfVxuXHQgICAgICAgIGZ1bmN0aW9uIHVsKCkge1xuXHQgICAgICAgICAgICB2YXIgbCwgdTtcblx0ICAgICAgICAgICAgcmV0dXJuIGwgPSBxdCwgbi5zdWJzdHIocXQsIDIpID09PSBUdCA/ICh1ID0gVHQsIHF0ICs9IDIpIDogKHUgPSBudWxsLCAwID09PSBXdCAmJiBlKHh0KSksIFxuXHQgICAgICAgICAgICBudWxsICE9PSB1ICYmIChMdCA9IGwsIHUgPSAkdCgpKSwgbnVsbCA9PT0gdSA/IChxdCA9IGwsIGwgPSB1KSA6IGwgPSB1LCBsO1xuXHQgICAgICAgIH1cblx0ICAgICAgICBmdW5jdGlvbiB0bCgpIHtcblx0ICAgICAgICAgICAgdmFyIGwsIHUsIHQ7XG5cdCAgICAgICAgICAgIHJldHVybiBsID0gcXQsIDkyID09PSBuLmNoYXJDb2RlQXQocXQpID8gKHUgPSBBdCwgcXQrKykgOiAodSA9IG51bGwsIDAgPT09IFd0ICYmIGUoQ3QpKSwgXG5cdCAgICAgICAgICAgIG51bGwgIT09IHUgPyAobi5sZW5ndGggPiBxdCA/ICh0ID0gbi5jaGFyQXQocXQpLCBxdCsrKSA6ICh0ID0gbnVsbCwgMCA9PT0gV3QgJiYgZSh2dCkpLCBcblx0ICAgICAgICAgICAgbnVsbCAhPT0gdCA/IChMdCA9IGwsIHUgPSBidSh0KSwgbnVsbCA9PT0gdSA/IChxdCA9IGwsIGwgPSB1KSA6IGwgPSB1KSA6IChxdCA9IGwsIFxuXHQgICAgICAgICAgICBsID0gaWwpKSA6IChxdCA9IGwsIGwgPSBpbCksIGw7XG5cdCAgICAgICAgfVxuXHQgICAgICAgIHZhciBybCwgZWwgPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHt9LCBvbCA9IHtcblx0ICAgICAgICAgICAgcmVnZXhwOiBjXG5cdCAgICAgICAgfSwgY2wgPSBjLCBpbCA9IG51bGwsIGFsID0gXCJcIiwgZmwgPSBcInxcIiwgc2wgPSAnXCJ8XCInLCBobCA9IGZ1bmN0aW9uKG4sIGwpIHtcblx0ICAgICAgICAgICAgcmV0dXJuIGwgPyBuZXcgQWx0ZXJuYXRlKG4sIGxbMV0pIDogbjtcblx0ICAgICAgICB9LCBkbCA9IGZ1bmN0aW9uKG4sIGwsIHUpIHtcblx0ICAgICAgICAgICAgcmV0dXJuIG5ldyBNYXRjaChbIG4gXS5jb25jYXQobCkuY29uY2F0KFsgdSBdKSk7XG5cdCAgICAgICAgfSwgcGwgPSBcIl5cIiwgdmwgPSAnXCJeXCInLCB3bCA9IGZ1bmN0aW9uKCkge1xuXHQgICAgICAgICAgICByZXR1cm4gbmV3IFRva2VuKFwic3RhcnRcIik7XG5cdCAgICAgICAgfSwgQWwgPSBcIiRcIiwgQ2wgPSAnXCIkXCInLCBnbCA9IGZ1bmN0aW9uKCkge1xuXHQgICAgICAgICAgICByZXR1cm4gbmV3IFRva2VuKFwiZW5kXCIpO1xuXHQgICAgICAgIH0sIGJsID0gZnVuY3Rpb24obiwgbCkge1xuXHQgICAgICAgICAgICByZXR1cm4gbmV3IFF1YW50aWZpZWQobiwgbCk7XG5cdCAgICAgICAgfSwga2wgPSBcIlF1YW50aWZpZXJcIiwgVGwgPSBmdW5jdGlvbihuLCBsKSB7XG5cdCAgICAgICAgICAgIHJldHVybiBsICYmIChuLmdyZWVkeSA9ICExKSwgbjtcblx0ICAgICAgICB9LCB4bCA9IFwie1wiLCB5bCA9ICdcIntcIicsIG1sID0gXCIsXCIsIFJsID0gJ1wiLFwiJywgRmwgPSBcIn1cIiwgUWwgPSAnXCJ9XCInLCBTbCA9IGZ1bmN0aW9uKG4sIGwpIHtcblx0ICAgICAgICAgICAgcmV0dXJuIG5ldyBRdWFudGlmaWVyKG4sIGwpO1xuXHQgICAgICAgIH0sIFVsID0gXCIsfVwiLCBFbCA9ICdcIix9XCInLCBHbCA9IGZ1bmN0aW9uKG4pIHtcblx0ICAgICAgICAgICAgcmV0dXJuIG5ldyBRdWFudGlmaWVyKG4sIDEvMCk7XG5cdCAgICAgICAgfSwgQmwgPSBmdW5jdGlvbihuKSB7XG5cdCAgICAgICAgICAgIHJldHVybiBuZXcgUXVhbnRpZmllcihuLCBuKTtcblx0ICAgICAgICB9LCBqbCA9IFwiK1wiLCAkbCA9ICdcIitcIicsIHFsID0gZnVuY3Rpb24oKSB7XG5cdCAgICAgICAgICAgIHJldHVybiBuZXcgUXVhbnRpZmllcigxLCAxLzApO1xuXHQgICAgICAgIH0sIExsID0gXCIqXCIsIE1sID0gJ1wiKlwiJywgRGwgPSBmdW5jdGlvbigpIHtcblx0ICAgICAgICAgICAgcmV0dXJuIG5ldyBRdWFudGlmaWVyKDAsIDEvMCk7XG5cdCAgICAgICAgfSwgSGwgPSBcIj9cIiwgT2wgPSAnXCI/XCInLCBXbCA9IGZ1bmN0aW9uKCkge1xuXHQgICAgICAgICAgICByZXR1cm4gbmV3IFF1YW50aWZpZXIoMCwgMSk7XG5cdCAgICAgICAgfSwgemwgPSAvXlswLTldLywgSWwgPSBcIlswLTldXCIsIEpsID0gZnVuY3Rpb24obikge1xuXHQgICAgICAgICAgICByZXR1cm4gK24uam9pbihcIlwiKTtcblx0ICAgICAgICB9LCBLbCA9IFwiKFwiLCBObCA9ICdcIihcIicsIFBsID0gXCIpXCIsIFZsID0gJ1wiKVwiJywgWGwgPSBmdW5jdGlvbihuKSB7XG5cdCAgICAgICAgICAgIHJldHVybiBuO1xuXHQgICAgICAgIH0sIFlsID0gZnVuY3Rpb24obikge1xuXHQgICAgICAgICAgICByZXR1cm4gbmV3IENhcHR1cmVHcm91cChuKTtcblx0ICAgICAgICB9LCBabCA9IFwiPzpcIiwgX2wgPSAnXCI/OlwiJywgbnUgPSBmdW5jdGlvbihuKSB7XG5cdCAgICAgICAgICAgIHJldHVybiBuZXcgR3JvdXAoXCJub24tY2FwdHVyZS1ncm91cFwiLCBuKTtcblx0ICAgICAgICB9LCBsdSA9IFwiPz1cIiwgdXUgPSAnXCI/PVwiJywgdHUgPSBmdW5jdGlvbihuKSB7XG5cdCAgICAgICAgICAgIHJldHVybiBuZXcgR3JvdXAoXCJwb3NpdGl2ZS1sb29rYWhlYWRcIiwgbik7XG5cdCAgICAgICAgfSwgcnUgPSBcIj8hXCIsIGV1ID0gJ1wiPyFcIicsIG91ID0gZnVuY3Rpb24obikge1xuXHQgICAgICAgICAgICByZXR1cm4gbmV3IEdyb3VwKFwibmVnYXRpdmUtbG9va2FoZWFkXCIsIG4pO1xuXHQgICAgICAgIH0sIGN1ID0gXCJDaGFyYWN0ZXJTZXRcIiwgaXUgPSBcIltcIiwgYXUgPSAnXCJbXCInLCBmdSA9IFwiXVwiLCBzdSA9ICdcIl1cIicsIGh1ID0gZnVuY3Rpb24obiwgbCkge1xuXHQgICAgICAgICAgICByZXR1cm4gbmV3IENoYXJTZXQoISFuLCBsKTtcblx0ICAgICAgICB9LCBkdSA9IFwiQ2hhcmFjdGVyUmFuZ2VcIiwgcHUgPSBcIi1cIiwgdnUgPSAnXCItXCInLCB3dSA9IGZ1bmN0aW9uKG4sIGwpIHtcblx0ICAgICAgICAgICAgcmV0dXJuIG5ldyBDaGFyYWN0ZXJSYW5nZShuLCBsKTtcblx0ICAgICAgICB9LCBBdSA9IFwiQ2hhcmFjdGVyXCIsIEN1ID0gL15bXlxcXFxcXF1dLywgZ3UgPSBcIlteXFxcXFxcXFxcXFxcXV1cIiwgYnUgPSBmdW5jdGlvbihuKSB7XG5cdCAgICAgICAgICAgIHJldHVybiBuZXcgTGl0ZXJhbChuKTtcblx0ICAgICAgICB9LCBrdSA9IFwiLlwiLCBUdSA9ICdcIi5cIicsIHh1ID0gZnVuY3Rpb24oKSB7XG5cdCAgICAgICAgICAgIHJldHVybiBuZXcgVG9rZW4oXCJhbnktY2hhcmFjdGVyXCIpO1xuXHQgICAgICAgIH0sIHl1ID0gXCJMaXRlcmFsXCIsIG11ID0gL15bXnxcXFxcXFwvLlsoKT8rKiRcXF5dLywgUnUgPSBcIltefFxcXFxcXFxcXFxcXC8uWygpPysqJFxcXFxeXVwiLCBGdSA9IFwiXFxcXGJcIiwgUXUgPSAnXCJcXFxcXFxcXGJcIicsIFN1ID0gZnVuY3Rpb24oKSB7XG5cdCAgICAgICAgICAgIHJldHVybiBuZXcgVG9rZW4oXCJiYWNrc3BhY2VcIik7XG5cdCAgICAgICAgfSwgVXUgPSBmdW5jdGlvbigpIHtcblx0ICAgICAgICAgICAgcmV0dXJuIG5ldyBUb2tlbihcIndvcmQtYm91bmRhcnlcIik7XG5cdCAgICAgICAgfSwgRXUgPSBcIlxcXFxCXCIsIEd1ID0gJ1wiXFxcXFxcXFxCXCInLCBCdSA9IGZ1bmN0aW9uKCkge1xuXHQgICAgICAgICAgICByZXR1cm4gbmV3IFRva2VuKFwibm9uLXdvcmQtYm91bmRhcnlcIik7XG5cdCAgICAgICAgfSwganUgPSBcIlxcXFxkXCIsICR1ID0gJ1wiXFxcXFxcXFxkXCInLCBxdSA9IGZ1bmN0aW9uKCkge1xuXHQgICAgICAgICAgICByZXR1cm4gbmV3IFRva2VuKFwiZGlnaXRcIik7XG5cdCAgICAgICAgfSwgTHUgPSBcIlxcXFxEXCIsIE11ID0gJ1wiXFxcXFxcXFxEXCInLCBEdSA9IGZ1bmN0aW9uKCkge1xuXHQgICAgICAgICAgICByZXR1cm4gbmV3IFRva2VuKFwibm9uLWRpZ2l0XCIpO1xuXHQgICAgICAgIH0sIEh1ID0gXCJcXFxcZlwiLCBPdSA9ICdcIlxcXFxcXFxcZlwiJywgV3UgPSBmdW5jdGlvbigpIHtcblx0ICAgICAgICAgICAgcmV0dXJuIG5ldyBUb2tlbihcImZvcm0tZmVlZFwiKTtcblx0ICAgICAgICB9LCB6dSA9IFwiXFxcXG5cIiwgSXUgPSAnXCJcXFxcXFxcXG5cIicsIEp1ID0gZnVuY3Rpb24oKSB7XG5cdCAgICAgICAgICAgIHJldHVybiBuZXcgVG9rZW4oXCJsaW5lLWZlZWRcIik7XG5cdCAgICAgICAgfSwgS3UgPSBcIlxcXFxyXCIsIE51ID0gJ1wiXFxcXFxcXFxyXCInLCBQdSA9IGZ1bmN0aW9uKCkge1xuXHQgICAgICAgICAgICByZXR1cm4gbmV3IFRva2VuKFwiY2FycmlhZ2UtcmV0dXJuXCIpO1xuXHQgICAgICAgIH0sIFZ1ID0gXCJcXFxcc1wiLCBYdSA9ICdcIlxcXFxcXFxcc1wiJywgWXUgPSBmdW5jdGlvbigpIHtcblx0ICAgICAgICAgICAgcmV0dXJuIG5ldyBUb2tlbihcIndoaXRlLXNwYWNlXCIpO1xuXHQgICAgICAgIH0sIFp1ID0gXCJcXFxcU1wiLCBfdSA9ICdcIlxcXFxcXFxcU1wiJywgbnQgPSBmdW5jdGlvbigpIHtcblx0ICAgICAgICAgICAgcmV0dXJuIG5ldyBUb2tlbihcIm5vbi13aGl0ZS1zcGFjZVwiKTtcblx0ICAgICAgICB9LCBsdCA9IFwiXFxcXHRcIiwgdXQgPSAnXCJcXFxcXFxcXHRcIicsIHR0ID0gZnVuY3Rpb24oKSB7XG5cdCAgICAgICAgICAgIHJldHVybiBuZXcgVG9rZW4oXCJ0YWJcIik7XG5cdCAgICAgICAgfSwgcnQgPSBcIlxcXFx2XCIsIGV0ID0gJ1wiXFxcXFxcXFx2XCInLCBvdCA9IGZ1bmN0aW9uKCkge1xuXHQgICAgICAgICAgICByZXR1cm4gbmV3IFRva2VuKFwidmVydGljYWwtdGFiXCIpO1xuXHQgICAgICAgIH0sIGN0ID0gXCJcXFxcd1wiLCBpdCA9ICdcIlxcXFxcXFxcd1wiJywgYXQgPSBmdW5jdGlvbigpIHtcblx0ICAgICAgICAgICAgcmV0dXJuIG5ldyBUb2tlbihcIndvcmRcIik7XG5cdCAgICAgICAgfSwgZnQgPSBcIlxcXFxXXCIsIHN0ID0gJ1wiXFxcXFxcXFxXXCInLCBodCA9IGZ1bmN0aW9uKCkge1xuXHQgICAgICAgICAgICByZXR1cm4gbmV3IFRva2VuKFwibm9uLXdvcmRcIik7XG5cdCAgICAgICAgfSwgZHQgPSBcIlxcXFxjXCIsIHB0ID0gJ1wiXFxcXFxcXFxjXCInLCB2dCA9IFwiYW55IGNoYXJhY3RlclwiLCB3dCA9IGZ1bmN0aW9uKG4pIHtcblx0ICAgICAgICAgICAgcmV0dXJuIG5ldyBDb250cm9sQ2hhcmFjdGVyKG4pO1xuXHQgICAgICAgIH0sIEF0ID0gXCJcXFxcXCIsIEN0ID0gJ1wiXFxcXFxcXFxcIicsIGd0ID0gL15bMS05XS8sIGJ0ID0gXCJbMS05XVwiLCBrdCA9IGZ1bmN0aW9uKG4pIHtcblx0ICAgICAgICAgICAgcmV0dXJuIG5ldyBCYWNrUmVmZXJlbmNlKG4pO1xuXHQgICAgICAgIH0sIFR0ID0gXCJcXFxcMFwiLCB4dCA9ICdcIlxcXFxcXFxcMFwiJywgeXQgPSAvXlswLTddLywgbXQgPSBcIlswLTddXCIsIFJ0ID0gZnVuY3Rpb24obikge1xuXHQgICAgICAgICAgICByZXR1cm4gbmV3IE9jdGFsKG4uam9pbihcIlwiKSk7XG5cdCAgICAgICAgfSwgRnQgPSBcIlxcXFx4XCIsIFF0ID0gJ1wiXFxcXFxcXFx4XCInLCBTdCA9IC9eWzAtOWEtZkEtRl0vLCBVdCA9IFwiWzAtOWEtZkEtRl1cIiwgRXQgPSBmdW5jdGlvbihuKSB7XG5cdCAgICAgICAgICAgIHJldHVybiBuZXcgSGV4KG4uam9pbihcIlwiKSk7XG5cdCAgICAgICAgfSwgR3QgPSBcIlxcXFx1XCIsIEJ0ID0gJ1wiXFxcXFxcXFx1XCInLCBqdCA9IGZ1bmN0aW9uKG4pIHtcblx0ICAgICAgICAgICAgcmV0dXJuIG5ldyBVbmljb2RlKG4uam9pbihcIlwiKSk7XG5cdCAgICAgICAgfSwgJHQgPSBmdW5jdGlvbigpIHtcblx0ICAgICAgICAgICAgcmV0dXJuIG5ldyBUb2tlbihcIm51bGwtY2hhcmFjdGVyXCIpO1xuXHQgICAgICAgIH0sIHF0ID0gMCwgTHQgPSAwLCBNdCA9IDAsIER0ID0ge1xuXHQgICAgICAgICAgICBsaW5lOiAxLFxuXHQgICAgICAgICAgICBjb2x1bW46IDEsXG5cdCAgICAgICAgICAgIHNlZW5DUjogITFcblx0ICAgICAgICB9LCBIdCA9IDAsIE90ID0gW10sIFd0ID0gMDtcblx0ICAgICAgICBpZiAoXCJzdGFydFJ1bGVcIiBpbiBlbCkge1xuXHQgICAgICAgICAgICBpZiAoIShlbC5zdGFydFJ1bGUgaW4gb2wpKSB0aHJvdyBuZXcgRXJyb3IoXCJDYW4ndCBzdGFydCBwYXJzaW5nIGZyb20gcnVsZSBcXFwiXCIgKyBlbC5zdGFydFJ1bGUgKyAnXCIuJyk7XG5cdCAgICAgICAgICAgIGNsID0gb2xbZWwuc3RhcnRSdWxlXTtcblx0ICAgICAgICB9XG5cdCAgICAgICAgaWYgKFRva2VuLm9mZnNldCA9IHQsIFRva2VuLnRleHQgPSB1LCBybCA9IGNsKCksIG51bGwgIT09IHJsICYmIHF0ID09PSBuLmxlbmd0aCkgcmV0dXJuIHJsO1xuXHQgICAgICAgIHRocm93IG8oT3QpLCBMdCA9IE1hdGgubWF4KHF0LCBIdCksIG5ldyBsKE90LCBMdCA8IG4ubGVuZ3RoID8gbi5jaGFyQXQoTHQpIDogbnVsbCwgTHQsIHIoTHQpLmxpbmUsIHIoTHQpLmNvbHVtbik7XG5cdCAgICB9XG5cdCAgICByZXR1cm4gbihsLCBFcnJvciksIHtcblx0ICAgICAgICBTeW50YXhFcnJvcjogbCxcblx0ICAgICAgICBwYXJzZTogdVxuXHQgICAgfTtcblx0fSgpLCBpbmRleCA9IDEsIGNncyA9IHt9O1xuXG5cdG1vZHVsZS5leHBvcnRzID0gcGFyc2VyXG5cbi8qKiovIH0pLFxuLyogMjIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXHQvKlxuXHQgICAgIyMgUmVnRXhwIEhhbmRsZXJcblxuXHQgICAgaHR0cHM6Ly9naXRodWIuY29tL0ZvcmJlc0xpbmRlc2F5L3JlZ2V4cFxuXHQgICAgaHR0cHM6Ly9naXRodWIuY29tL2RtYWpkYS9wZWdqc1xuXHQgICAgaHR0cDovL3d3dy5yZWdleHBlci5jb20vXG5cblx0ICAgIOavj+S4quiKgueCueeahOe7k+aehFxuXHQgICAgICAgIHtcblx0ICAgICAgICAgICAgdHlwZTogJycsXG5cdCAgICAgICAgICAgIG9mZnNldDogbnVtYmVyLFxuXHQgICAgICAgICAgICB0ZXh0OiAnJyxcblx0ICAgICAgICAgICAgYm9keToge30sXG5cdCAgICAgICAgICAgIGVzY2FwZWQ6IHRydWUvZmFsc2Vcblx0ICAgICAgICB9XG5cblx0ICAgIHR5cGUg5Y+v6YCJ5YC8XG5cdCAgICAgICAgYWx0ZXJuYXRlICAgICAgICAgICAgIHwgICAgICAgICDpgInmi6lcblx0ICAgICAgICBtYXRjaCAgICAgICAgICAgICAgICAg5Yy56YWNXG5cdCAgICAgICAgY2FwdHVyZS1ncm91cCAgICAgICAgICgpICAgICAgICDmjZXojrfnu4Rcblx0ICAgICAgICBub24tY2FwdHVyZS1ncm91cCAgICAgKD86Li4uKSAgIOmdnuaNleiOt+e7hFxuXHQgICAgICAgIHBvc2l0aXZlLWxvb2thaGVhZCAgICAoPz1wKSAgICAg6Zu25a695q2j5ZCR5YWI6KGM5pat6KiAXG5cdCAgICAgICAgbmVnYXRpdmUtbG9va2FoZWFkICAgICg/IXApICAgICDpm7blrr3otJ/lkJHlhYjooYzmlq3oqIBcblx0ICAgICAgICBxdWFudGlmaWVkICAgICAgICAgICAgYSogICAgICAgIOmHjeWkjeiKgueCuVxuXHQgICAgICAgIHF1YW50aWZpZXIgICAgICAgICAgICAqICAgICAgICAg6YeP6K+NXG5cdCAgICAgICAgY2hhcnNldCAgICAgICAgICAgICAgIFtdICAgICAgICDlrZfnrKbpm4Zcblx0ICAgICAgICByYW5nZSAgICAgICAgICAgICAgICAge20sIG59ICAgIOiMg+WbtFxuXHQgICAgICAgIGxpdGVyYWwgICAgICAgICAgICAgICBhICAgICAgICAg55u05o6l6YeP5a2X56ymXG5cdCAgICAgICAgdW5pY29kZSAgICAgICAgICAgICAgIFxcdXh4eHggICAgVW5pY29kZVxuXHQgICAgICAgIGhleCAgICAgICAgICAgICAgICAgICBcXHggICAgICAgIOWNgeWFrei/m+WItlxuXHQgICAgICAgIG9jdGFsICAgICAgICAgICAgICAgICDlhavov5vliLZcblx0ICAgICAgICBiYWNrLXJlZmVyZW5jZSAgICAgICAgXFxuICAgICAgICDlj43lkJHlvJXnlKhcblx0ICAgICAgICBjb250cm9sLWNoYXJhY3RlciAgICAgXFxjWCAgICAgICDmjqfliLblrZfnrKZcblxuXHQgICAgICAgIC8vIFRva2VuXG5cdCAgICAgICAgc3RhcnQgICAgICAgICAgICAgICBeICAgICAgIOW8gOWktFxuXHQgICAgICAgIGVuZCAgICAgICAgICAgICAgICAgJCAgICAgICDnu5PlsL5cblx0ICAgICAgICBhbnktY2hhcmFjdGVyICAgICAgIC4gICAgICAg5Lu75oSP5a2X56ymXG5cdCAgICAgICAgYmFja3NwYWNlICAgICAgICAgICBbXFxiXSAgICDpgIDmoLznm7TmjqXph49cblx0ICAgICAgICB3b3JkLWJvdW5kYXJ5ICAgICAgIFxcYiAgICAgIOWNleivjei+ueeVjFxuXHQgICAgICAgIG5vbi13b3JkLWJvdW5kYXJ5ICAgXFxCICAgICAg6Z2e5Y2V6K+N6L6555WMXG5cdCAgICAgICAgZGlnaXQgICAgICAgICAgICAgICBcXGQgICAgICBBU0NJSSDmlbDlrZfvvIxbMC05XVxuXHQgICAgICAgIG5vbi1kaWdpdCAgICAgICAgICAgXFxEICAgICAg6Z2eIEFTQ0lJIOaVsOWtl++8jFteMC05XVxuXHQgICAgICAgIGZvcm0tZmVlZCAgICAgICAgICAgXFxmICAgICAg5o2i6aG156ymXG5cdCAgICAgICAgbGluZS1mZWVkICAgICAgICAgICBcXG4gICAgICDmjaLooYznrKZcblx0ICAgICAgICBjYXJyaWFnZS1yZXR1cm4gICAgIFxcciAgICAgIOWbnui9puesplxuXHQgICAgICAgIHdoaXRlLXNwYWNlICAgICAgICAgXFxzICAgICAg56m655m956ymXG5cdCAgICAgICAgbm9uLXdoaXRlLXNwYWNlICAgICBcXFMgICAgICDpnZ7nqbrnmb3nrKZcblx0ICAgICAgICB0YWIgICAgICAgICAgICAgICAgIFxcdCAgICAgIOWItuihqOesplxuXHQgICAgICAgIHZlcnRpY2FsLXRhYiAgICAgICAgXFx2ICAgICAg5Z6C55u05Yi26KGo56ymXG5cdCAgICAgICAgd29yZCAgICAgICAgICAgICAgICBcXHcgICAgICBBU0NJSSDlrZfnrKbvvIxbYS16QS1aMC05XVxuXHQgICAgICAgIG5vbi13b3JkICAgICAgICAgICAgXFxXICAgICAg6Z2eIEFTQ0lJIOWtl+espu+8jFteYS16QS1aMC05XVxuXHQgICAgICAgIG51bGwtY2hhcmFjdGVyICAgICAgXFxvICAgICAgTlVMIOWtl+esplxuXHQgKi9cblxuXHR2YXIgVXRpbCA9IF9fd2VicGFja19yZXF1aXJlX18oMylcblx0dmFyIFJhbmRvbSA9IF9fd2VicGFja19yZXF1aXJlX18oNSlcblx0ICAgIC8qXG5cdCAgICAgICAgXG5cdCAgICAqL1xuXHR2YXIgSGFuZGxlciA9IHtcblx0ICAgIGV4dGVuZDogVXRpbC5leHRlbmRcblx0fVxuXG5cdC8vIGh0dHA6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQVNDSUkjQVNDSUlfcHJpbnRhYmxlX2NvZGVfY2hhcnRcblx0Lyp2YXIgQVNDSUlfQ09OVFJPTF9DT0RFX0NIQVJUID0ge1xuXHQgICAgJ0AnOiBbJ1xcdTAwMDAnXSxcblx0ICAgIEE6IFsnXFx1MDAwMSddLFxuXHQgICAgQjogWydcXHUwMDAyJ10sXG5cdCAgICBDOiBbJ1xcdTAwMDMnXSxcblx0ICAgIEQ6IFsnXFx1MDAwNCddLFxuXHQgICAgRTogWydcXHUwMDA1J10sXG5cdCAgICBGOiBbJ1xcdTAwMDYnXSxcblx0ICAgIEc6IFsnXFx1MDAwNycsICdcXGEnXSxcblx0ICAgIEg6IFsnXFx1MDAwOCcsICdcXGInXSxcblx0ICAgIEk6IFsnXFx1MDAwOScsICdcXHQnXSxcblx0ICAgIEo6IFsnXFx1MDAwQScsICdcXG4nXSxcblx0ICAgIEs6IFsnXFx1MDAwQicsICdcXHYnXSxcblx0ICAgIEw6IFsnXFx1MDAwQycsICdcXGYnXSxcblx0ICAgIE06IFsnXFx1MDAwRCcsICdcXHInXSxcblx0ICAgIE46IFsnXFx1MDAwRSddLFxuXHQgICAgTzogWydcXHUwMDBGJ10sXG5cdCAgICBQOiBbJ1xcdTAwMTAnXSxcblx0ICAgIFE6IFsnXFx1MDAxMSddLFxuXHQgICAgUjogWydcXHUwMDEyJ10sXG5cdCAgICBTOiBbJ1xcdTAwMTMnXSxcblx0ICAgIFQ6IFsnXFx1MDAxNCddLFxuXHQgICAgVTogWydcXHUwMDE1J10sXG5cdCAgICBWOiBbJ1xcdTAwMTYnXSxcblx0ICAgIFc6IFsnXFx1MDAxNyddLFxuXHQgICAgWDogWydcXHUwMDE4J10sXG5cdCAgICBZOiBbJ1xcdTAwMTknXSxcblx0ICAgIFo6IFsnXFx1MDAxQSddLFxuXHQgICAgJ1snOiBbJ1xcdTAwMUInLCAnXFxlJ10sXG5cdCAgICAnXFxcXCc6IFsnXFx1MDAxQyddLFxuXHQgICAgJ10nOiBbJ1xcdTAwMUQnXSxcblx0ICAgICdeJzogWydcXHUwMDFFJ10sXG5cdCAgICAnXyc6IFsnXFx1MDAxRiddXG5cdH0qL1xuXG5cdC8vIEFTQ0lJIHByaW50YWJsZSBjb2RlIGNoYXJ0XG5cdC8vIHZhciBMT1dFUiA9ICdhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eidcblx0Ly8gdmFyIFVQUEVSID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaJ1xuXHQvLyB2YXIgTlVNQkVSID0gJzAxMjM0NTY3ODknXG5cdC8vIHZhciBTWU1CT0wgPSAnICFcIiMkJSZcXCcoKSorLC0uLycgKyAnOjs8PT4/QCcgKyAnW1xcXFxdXl9gJyArICd7fH1+J1xuXHR2YXIgTE9XRVIgPSBhc2NpaSg5NywgMTIyKVxuXHR2YXIgVVBQRVIgPSBhc2NpaSg2NSwgOTApXG5cdHZhciBOVU1CRVIgPSBhc2NpaSg0OCwgNTcpXG5cdHZhciBPVEhFUiA9IGFzY2lpKDMyLCA0NykgKyBhc2NpaSg1OCwgNjQpICsgYXNjaWkoOTEsIDk2KSArIGFzY2lpKDEyMywgMTI2KSAvLyDmjpLpmaQgOTUgXyBhc2NpaSg5MSwgOTQpICsgYXNjaWkoOTYsIDk2KVxuXHR2YXIgUFJJTlRBQkxFID0gYXNjaWkoMzIsIDEyNilcblx0dmFyIFNQQUNFID0gJyBcXGZcXG5cXHJcXHRcXHZcXHUwMEEwXFx1MjAyOFxcdTIwMjknXG5cdHZhciBDSEFSQUNURVJfQ0xBU1NFUyA9IHtcblx0ICAgICdcXFxcdyc6IExPV0VSICsgVVBQRVIgKyBOVU1CRVIgKyAnXycsIC8vIGFzY2lpKDk1LCA5NSlcblx0ICAgICdcXFxcVyc6IE9USEVSLnJlcGxhY2UoJ18nLCAnJyksXG5cdCAgICAnXFxcXHMnOiBTUEFDRSxcblx0ICAgICdcXFxcUyc6IGZ1bmN0aW9uKCkge1xuXHQgICAgICAgIHZhciByZXN1bHQgPSBQUklOVEFCTEVcblx0ICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IFNQQUNFLmxlbmd0aDsgaSsrKSB7XG5cdCAgICAgICAgICAgIHJlc3VsdCA9IHJlc3VsdC5yZXBsYWNlKFNQQUNFW2ldLCAnJylcblx0ICAgICAgICB9XG5cdCAgICAgICAgcmV0dXJuIHJlc3VsdFxuXHQgICAgfSgpLFxuXHQgICAgJ1xcXFxkJzogTlVNQkVSLFxuXHQgICAgJ1xcXFxEJzogTE9XRVIgKyBVUFBFUiArIE9USEVSXG5cdH1cblxuXHRmdW5jdGlvbiBhc2NpaShmcm9tLCB0bykge1xuXHQgICAgdmFyIHJlc3VsdCA9ICcnXG5cdCAgICBmb3IgKHZhciBpID0gZnJvbTsgaSA8PSB0bzsgaSsrKSB7XG5cdCAgICAgICAgcmVzdWx0ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoaSlcblx0ICAgIH1cblx0ICAgIHJldHVybiByZXN1bHRcblx0fVxuXG5cdC8vIHZhciBhc3QgPSBSZWdFeHBQYXJzZXIucGFyc2UocmVnZXhwLnNvdXJjZSlcblx0SGFuZGxlci5nZW4gPSBmdW5jdGlvbihub2RlLCByZXN1bHQsIGNhY2hlKSB7XG5cdCAgICBjYWNoZSA9IGNhY2hlIHx8IHtcblx0ICAgICAgICBndWlkOiAxXG5cdCAgICB9XG5cdCAgICByZXR1cm4gSGFuZGxlcltub2RlLnR5cGVdID8gSGFuZGxlcltub2RlLnR5cGVdKG5vZGUsIHJlc3VsdCwgY2FjaGUpIDpcblx0ICAgICAgICBIYW5kbGVyLnRva2VuKG5vZGUsIHJlc3VsdCwgY2FjaGUpXG5cdH1cblxuXHRIYW5kbGVyLmV4dGVuZCh7XG5cdCAgICAvKiBqc2hpbnQgdW51c2VkOmZhbHNlICovXG5cdCAgICB0b2tlbjogZnVuY3Rpb24obm9kZSwgcmVzdWx0LCBjYWNoZSkge1xuXHQgICAgICAgIHN3aXRjaCAobm9kZS50eXBlKSB7XG5cdCAgICAgICAgICAgIGNhc2UgJ3N0YXJ0Jzpcblx0ICAgICAgICAgICAgY2FzZSAnZW5kJzpcblx0ICAgICAgICAgICAgICAgIHJldHVybiAnJ1xuXHQgICAgICAgICAgICBjYXNlICdhbnktY2hhcmFjdGVyJzpcblx0ICAgICAgICAgICAgICAgIHJldHVybiBSYW5kb20uY2hhcmFjdGVyKClcblx0ICAgICAgICAgICAgY2FzZSAnYmFja3NwYWNlJzpcblx0ICAgICAgICAgICAgICAgIHJldHVybiAnJ1xuXHQgICAgICAgICAgICBjYXNlICd3b3JkLWJvdW5kYXJ5JzogLy8gVE9ET1xuXHQgICAgICAgICAgICAgICAgcmV0dXJuICcnXG5cdCAgICAgICAgICAgIGNhc2UgJ25vbi13b3JkLWJvdW5kYXJ5JzogLy8gVE9ET1xuXHQgICAgICAgICAgICAgICAgYnJlYWtcblx0ICAgICAgICAgICAgY2FzZSAnZGlnaXQnOlxuXHQgICAgICAgICAgICAgICAgcmV0dXJuIFJhbmRvbS5waWNrKFxuXHQgICAgICAgICAgICAgICAgICAgIE5VTUJFUi5zcGxpdCgnJylcblx0ICAgICAgICAgICAgICAgIClcblx0ICAgICAgICAgICAgY2FzZSAnbm9uLWRpZ2l0Jzpcblx0ICAgICAgICAgICAgICAgIHJldHVybiBSYW5kb20ucGljayhcblx0ICAgICAgICAgICAgICAgICAgICAoTE9XRVIgKyBVUFBFUiArIE9USEVSKS5zcGxpdCgnJylcblx0ICAgICAgICAgICAgICAgIClcblx0ICAgICAgICAgICAgY2FzZSAnZm9ybS1mZWVkJzpcblx0ICAgICAgICAgICAgICAgIGJyZWFrXG5cdCAgICAgICAgICAgIGNhc2UgJ2xpbmUtZmVlZCc6XG5cdCAgICAgICAgICAgICAgICByZXR1cm4gbm9kZS5ib2R5IHx8IG5vZGUudGV4dFxuXHQgICAgICAgICAgICBjYXNlICdjYXJyaWFnZS1yZXR1cm4nOlxuXHQgICAgICAgICAgICAgICAgYnJlYWtcblx0ICAgICAgICAgICAgY2FzZSAnd2hpdGUtc3BhY2UnOlxuXHQgICAgICAgICAgICAgICAgcmV0dXJuIFJhbmRvbS5waWNrKFxuXHQgICAgICAgICAgICAgICAgICAgIFNQQUNFLnNwbGl0KCcnKVxuXHQgICAgICAgICAgICAgICAgKVxuXHQgICAgICAgICAgICBjYXNlICdub24td2hpdGUtc3BhY2UnOlxuXHQgICAgICAgICAgICAgICAgcmV0dXJuIFJhbmRvbS5waWNrKFxuXHQgICAgICAgICAgICAgICAgICAgIChMT1dFUiArIFVQUEVSICsgTlVNQkVSKS5zcGxpdCgnJylcblx0ICAgICAgICAgICAgICAgIClcblx0ICAgICAgICAgICAgY2FzZSAndGFiJzpcblx0ICAgICAgICAgICAgICAgIGJyZWFrXG5cdCAgICAgICAgICAgIGNhc2UgJ3ZlcnRpY2FsLXRhYic6XG5cdCAgICAgICAgICAgICAgICBicmVha1xuXHQgICAgICAgICAgICBjYXNlICd3b3JkJzogLy8gXFx3IFthLXpBLVowLTldXG5cdCAgICAgICAgICAgICAgICByZXR1cm4gUmFuZG9tLnBpY2soXG5cdCAgICAgICAgICAgICAgICAgICAgKExPV0VSICsgVVBQRVIgKyBOVU1CRVIpLnNwbGl0KCcnKVxuXHQgICAgICAgICAgICAgICAgKVxuXHQgICAgICAgICAgICBjYXNlICdub24td29yZCc6IC8vIFxcVyBbXmEtekEtWjAtOV1cblx0ICAgICAgICAgICAgICAgIHJldHVybiBSYW5kb20ucGljayhcblx0ICAgICAgICAgICAgICAgICAgICBPVEhFUi5yZXBsYWNlKCdfJywgJycpLnNwbGl0KCcnKVxuXHQgICAgICAgICAgICAgICAgKVxuXHQgICAgICAgICAgICBjYXNlICdudWxsLWNoYXJhY3Rlcic6XG5cdCAgICAgICAgICAgICAgICBicmVha1xuXHQgICAgICAgIH1cblx0ICAgICAgICByZXR1cm4gbm9kZS5ib2R5IHx8IG5vZGUudGV4dFxuXHQgICAgfSxcblx0ICAgIC8qXG5cdCAgICAgICAge1xuXHQgICAgICAgICAgICB0eXBlOiAnYWx0ZXJuYXRlJyxcblx0ICAgICAgICAgICAgb2Zmc2V0OiAwLFxuXHQgICAgICAgICAgICB0ZXh0OiAnJyxcblx0ICAgICAgICAgICAgbGVmdDoge1xuXHQgICAgICAgICAgICAgICAgYm95ZDogW11cblx0ICAgICAgICAgICAgfSxcblx0ICAgICAgICAgICAgcmlnaHQ6IHtcblx0ICAgICAgICAgICAgICAgIGJveWQ6IFtdXG5cdCAgICAgICAgICAgIH1cblx0ICAgICAgICB9XG5cdCAgICAqL1xuXHQgICAgYWx0ZXJuYXRlOiBmdW5jdGlvbihub2RlLCByZXN1bHQsIGNhY2hlKSB7XG5cdCAgICAgICAgLy8gbm9kZS5sZWZ0L3JpZ2h0IHt9XG5cdCAgICAgICAgcmV0dXJuIHRoaXMuZ2VuKFxuXHQgICAgICAgICAgICBSYW5kb20uYm9vbGVhbigpID8gbm9kZS5sZWZ0IDogbm9kZS5yaWdodCxcblx0ICAgICAgICAgICAgcmVzdWx0LFxuXHQgICAgICAgICAgICBjYWNoZVxuXHQgICAgICAgIClcblx0ICAgIH0sXG5cdCAgICAvKlxuXHQgICAgICAgIHtcblx0ICAgICAgICAgICAgdHlwZTogJ21hdGNoJyxcblx0ICAgICAgICAgICAgb2Zmc2V0OiAwLFxuXHQgICAgICAgICAgICB0ZXh0OiAnJyxcblx0ICAgICAgICAgICAgYm9keTogW11cblx0ICAgICAgICB9XG5cdCAgICAqL1xuXHQgICAgbWF0Y2g6IGZ1bmN0aW9uKG5vZGUsIHJlc3VsdCwgY2FjaGUpIHtcblx0ICAgICAgICByZXN1bHQgPSAnJ1xuXHQgICAgICAgICAgICAvLyBub2RlLmJvZHkgW11cblx0ICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG5vZGUuYm9keS5sZW5ndGg7IGkrKykge1xuXHQgICAgICAgICAgICByZXN1bHQgKz0gdGhpcy5nZW4obm9kZS5ib2R5W2ldLCByZXN1bHQsIGNhY2hlKVxuXHQgICAgICAgIH1cblx0ICAgICAgICByZXR1cm4gcmVzdWx0XG5cdCAgICB9LFxuXHQgICAgLy8gKClcblx0ICAgICdjYXB0dXJlLWdyb3VwJzogZnVuY3Rpb24obm9kZSwgcmVzdWx0LCBjYWNoZSkge1xuXHQgICAgICAgIC8vIG5vZGUuYm9keSB7fVxuXHQgICAgICAgIHJlc3VsdCA9IHRoaXMuZ2VuKG5vZGUuYm9keSwgcmVzdWx0LCBjYWNoZSlcblx0ICAgICAgICBjYWNoZVtjYWNoZS5ndWlkKytdID0gcmVzdWx0XG5cdCAgICAgICAgcmV0dXJuIHJlc3VsdFxuXHQgICAgfSxcblx0ICAgIC8vICg/Oi4uLilcblx0ICAgICdub24tY2FwdHVyZS1ncm91cCc6IGZ1bmN0aW9uKG5vZGUsIHJlc3VsdCwgY2FjaGUpIHtcblx0ICAgICAgICAvLyBub2RlLmJvZHkge31cblx0ICAgICAgICByZXR1cm4gdGhpcy5nZW4obm9kZS5ib2R5LCByZXN1bHQsIGNhY2hlKVxuXHQgICAgfSxcblx0ICAgIC8vICg/PXApXG5cdCAgICAncG9zaXRpdmUtbG9va2FoZWFkJzogZnVuY3Rpb24obm9kZSwgcmVzdWx0LCBjYWNoZSkge1xuXHQgICAgICAgIC8vIG5vZGUuYm9keVxuXHQgICAgICAgIHJldHVybiB0aGlzLmdlbihub2RlLmJvZHksIHJlc3VsdCwgY2FjaGUpXG5cdCAgICB9LFxuXHQgICAgLy8gKD8hcClcblx0ICAgICduZWdhdGl2ZS1sb29rYWhlYWQnOiBmdW5jdGlvbihub2RlLCByZXN1bHQsIGNhY2hlKSB7XG5cdCAgICAgICAgLy8gbm9kZS5ib2R5XG5cdCAgICAgICAgcmV0dXJuICcnXG5cdCAgICB9LFxuXHQgICAgLypcblx0ICAgICAgICB7XG5cdCAgICAgICAgICAgIHR5cGU6ICdxdWFudGlmaWVkJyxcblx0ICAgICAgICAgICAgb2Zmc2V0OiAzLFxuXHQgICAgICAgICAgICB0ZXh0OiAnYyonLFxuXHQgICAgICAgICAgICBib2R5OiB7XG5cdCAgICAgICAgICAgICAgICB0eXBlOiAnbGl0ZXJhbCcsXG5cdCAgICAgICAgICAgICAgICBvZmZzZXQ6IDMsXG5cdCAgICAgICAgICAgICAgICB0ZXh0OiAnYycsXG5cdCAgICAgICAgICAgICAgICBib2R5OiAnYycsXG5cdCAgICAgICAgICAgICAgICBlc2NhcGVkOiBmYWxzZVxuXHQgICAgICAgICAgICB9LFxuXHQgICAgICAgICAgICBxdWFudGlmaWVyOiB7XG5cdCAgICAgICAgICAgICAgICB0eXBlOiAncXVhbnRpZmllcicsXG5cdCAgICAgICAgICAgICAgICBvZmZzZXQ6IDQsXG5cdCAgICAgICAgICAgICAgICB0ZXh0OiAnKicsXG5cdCAgICAgICAgICAgICAgICBtaW46IDAsXG5cdCAgICAgICAgICAgICAgICBtYXg6IEluZmluaXR5LFxuXHQgICAgICAgICAgICAgICAgZ3JlZWR5OiB0cnVlXG5cdCAgICAgICAgICAgIH1cblx0ICAgICAgICB9XG5cdCAgICAqL1xuXHQgICAgcXVhbnRpZmllZDogZnVuY3Rpb24obm9kZSwgcmVzdWx0LCBjYWNoZSkge1xuXHQgICAgICAgIHJlc3VsdCA9ICcnXG5cdCAgICAgICAgICAgIC8vIG5vZGUucXVhbnRpZmllciB7fVxuXHQgICAgICAgIHZhciBjb3VudCA9IHRoaXMucXVhbnRpZmllcihub2RlLnF1YW50aWZpZXIpO1xuXHQgICAgICAgIC8vIG5vZGUuYm9keSB7fVxuXHQgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY291bnQ7IGkrKykge1xuXHQgICAgICAgICAgICByZXN1bHQgKz0gdGhpcy5nZW4obm9kZS5ib2R5LCByZXN1bHQsIGNhY2hlKVxuXHQgICAgICAgIH1cblx0ICAgICAgICByZXR1cm4gcmVzdWx0XG5cdCAgICB9LFxuXHQgICAgLypcblx0ICAgICAgICBxdWFudGlmaWVyOiB7XG5cdCAgICAgICAgICAgIHR5cGU6ICdxdWFudGlmaWVyJyxcblx0ICAgICAgICAgICAgb2Zmc2V0OiA0LFxuXHQgICAgICAgICAgICB0ZXh0OiAnKicsXG5cdCAgICAgICAgICAgIG1pbjogMCxcblx0ICAgICAgICAgICAgbWF4OiBJbmZpbml0eSxcblx0ICAgICAgICAgICAgZ3JlZWR5OiB0cnVlXG5cdCAgICAgICAgfVxuXHQgICAgKi9cblx0ICAgIHF1YW50aWZpZXI6IGZ1bmN0aW9uKG5vZGUsIHJlc3VsdCwgY2FjaGUpIHtcblx0ICAgICAgICB2YXIgbWluID0gTWF0aC5tYXgobm9kZS5taW4sIDApXG5cdCAgICAgICAgdmFyIG1heCA9IGlzRmluaXRlKG5vZGUubWF4KSA/IG5vZGUubWF4IDpcblx0ICAgICAgICAgICAgbWluICsgUmFuZG9tLmludGVnZXIoMywgNylcblx0ICAgICAgICByZXR1cm4gUmFuZG9tLmludGVnZXIobWluLCBtYXgpXG5cdCAgICB9LFxuXHQgICAgLypcblx0ICAgICAgICBcblx0ICAgICovXG5cdCAgICBjaGFyc2V0OiBmdW5jdGlvbihub2RlLCByZXN1bHQsIGNhY2hlKSB7XG5cdCAgICAgICAgLy8gbm9kZS5pbnZlcnRcblx0ICAgICAgICBpZiAobm9kZS5pbnZlcnQpIHJldHVybiB0aGlzWydpbnZlcnQtY2hhcnNldCddKG5vZGUsIHJlc3VsdCwgY2FjaGUpXG5cblx0ICAgICAgICAvLyBub2RlLmJvZHkgW11cblx0ICAgICAgICB2YXIgbGl0ZXJhbCA9IFJhbmRvbS5waWNrKG5vZGUuYm9keSlcblx0ICAgICAgICByZXR1cm4gdGhpcy5nZW4obGl0ZXJhbCwgcmVzdWx0LCBjYWNoZSlcblx0ICAgIH0sXG5cdCAgICAnaW52ZXJ0LWNoYXJzZXQnOiBmdW5jdGlvbihub2RlLCByZXN1bHQsIGNhY2hlKSB7XG5cdCAgICAgICAgdmFyIHBvb2wgPSBQUklOVEFCTEVcblx0ICAgICAgICBmb3IgKHZhciBpID0gMCwgaXRlbTsgaSA8IG5vZGUuYm9keS5sZW5ndGg7IGkrKykge1xuXHQgICAgICAgICAgICBpdGVtID0gbm9kZS5ib2R5W2ldXG5cdCAgICAgICAgICAgIHN3aXRjaCAoaXRlbS50eXBlKSB7XG5cdCAgICAgICAgICAgICAgICBjYXNlICdsaXRlcmFsJzpcblx0ICAgICAgICAgICAgICAgICAgICBwb29sID0gcG9vbC5yZXBsYWNlKGl0ZW0uYm9keSwgJycpXG5cdCAgICAgICAgICAgICAgICAgICAgYnJlYWtcblx0ICAgICAgICAgICAgICAgIGNhc2UgJ3JhbmdlJzpcblx0ICAgICAgICAgICAgICAgICAgICB2YXIgbWluID0gdGhpcy5nZW4oaXRlbS5zdGFydCwgcmVzdWx0LCBjYWNoZSkuY2hhckNvZGVBdCgpXG5cdCAgICAgICAgICAgICAgICAgICAgdmFyIG1heCA9IHRoaXMuZ2VuKGl0ZW0uZW5kLCByZXN1bHQsIGNhY2hlKS5jaGFyQ29kZUF0KClcblx0ICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpaSA9IG1pbjsgaWkgPD0gbWF4OyBpaSsrKSB7XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIHBvb2wgPSBwb29sLnJlcGxhY2UoU3RyaW5nLmZyb21DaGFyQ29kZShpaSksICcnKVxuXHQgICAgICAgICAgICAgICAgICAgIH1cblx0ICAgICAgICAgICAgICAgICAgICAvKiBmYWxscyB0aHJvdWdoICovXG5cdCAgICAgICAgICAgICAgICBkZWZhdWx0OlxuXHQgICAgICAgICAgICAgICAgICAgIHZhciBjaGFyYWN0ZXJzID0gQ0hBUkFDVEVSX0NMQVNTRVNbaXRlbS50ZXh0XVxuXHQgICAgICAgICAgICAgICAgICAgIGlmIChjaGFyYWN0ZXJzKSB7XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGlpaSA9IDA7IGlpaSA8PSBjaGFyYWN0ZXJzLmxlbmd0aDsgaWlpKyspIHtcblx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvb2wgPSBwb29sLnJlcGxhY2UoY2hhcmFjdGVyc1tpaWldLCAnJylcblx0ICAgICAgICAgICAgICAgICAgICAgICAgfVxuXHQgICAgICAgICAgICAgICAgICAgIH1cblx0ICAgICAgICAgICAgfVxuXHQgICAgICAgIH1cblx0ICAgICAgICByZXR1cm4gUmFuZG9tLnBpY2socG9vbC5zcGxpdCgnJykpXG5cdCAgICB9LFxuXHQgICAgcmFuZ2U6IGZ1bmN0aW9uKG5vZGUsIHJlc3VsdCwgY2FjaGUpIHtcblx0ICAgICAgICAvLyBub2RlLnN0YXJ0LCBub2RlLmVuZFxuXHQgICAgICAgIHZhciBtaW4gPSB0aGlzLmdlbihub2RlLnN0YXJ0LCByZXN1bHQsIGNhY2hlKS5jaGFyQ29kZUF0KClcblx0ICAgICAgICB2YXIgbWF4ID0gdGhpcy5nZW4obm9kZS5lbmQsIHJlc3VsdCwgY2FjaGUpLmNoYXJDb2RlQXQoKVxuXHQgICAgICAgIHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKFxuXHQgICAgICAgICAgICBSYW5kb20uaW50ZWdlcihtaW4sIG1heClcblx0ICAgICAgICApXG5cdCAgICB9LFxuXHQgICAgbGl0ZXJhbDogZnVuY3Rpb24obm9kZSwgcmVzdWx0LCBjYWNoZSkge1xuXHQgICAgICAgIHJldHVybiBub2RlLmVzY2FwZWQgPyBub2RlLmJvZHkgOiBub2RlLnRleHRcblx0ICAgIH0sXG5cdCAgICAvLyBVbmljb2RlIFxcdVxuXHQgICAgdW5pY29kZTogZnVuY3Rpb24obm9kZSwgcmVzdWx0LCBjYWNoZSkge1xuXHQgICAgICAgIHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKFxuXHQgICAgICAgICAgICBwYXJzZUludChub2RlLmNvZGUsIDE2KVxuXHQgICAgICAgIClcblx0ICAgIH0sXG5cdCAgICAvLyDljYHlha3ov5vliLYgXFx4RkZcblx0ICAgIGhleDogZnVuY3Rpb24obm9kZSwgcmVzdWx0LCBjYWNoZSkge1xuXHQgICAgICAgIHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKFxuXHQgICAgICAgICAgICBwYXJzZUludChub2RlLmNvZGUsIDE2KVxuXHQgICAgICAgIClcblx0ICAgIH0sXG5cdCAgICAvLyDlhavov5vliLYgXFwwXG5cdCAgICBvY3RhbDogZnVuY3Rpb24obm9kZSwgcmVzdWx0LCBjYWNoZSkge1xuXHQgICAgICAgIHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKFxuXHQgICAgICAgICAgICBwYXJzZUludChub2RlLmNvZGUsIDgpXG5cdCAgICAgICAgKVxuXHQgICAgfSxcblx0ICAgIC8vIOWPjeWQkeW8leeUqFxuXHQgICAgJ2JhY2stcmVmZXJlbmNlJzogZnVuY3Rpb24obm9kZSwgcmVzdWx0LCBjYWNoZSkge1xuXHQgICAgICAgIHJldHVybiBjYWNoZVtub2RlLmNvZGVdIHx8ICcnXG5cdCAgICB9LFxuXHQgICAgLypcblx0ICAgICAgICBodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0MwX2FuZF9DMV9jb250cm9sX2NvZGVzXG5cdCAgICAqL1xuXHQgICAgQ09OVFJPTF9DSEFSQUNURVJfTUFQOiBmdW5jdGlvbigpIHtcblx0ICAgICAgICB2YXIgQ09OVFJPTF9DSEFSQUNURVIgPSAnQCBBIEIgQyBEIEUgRiBHIEggSSBKIEsgTCBNIE4gTyBQIFEgUiBTIFQgVSBWIFcgWCBZIFogWyBcXFxcIF0gXiBfJy5zcGxpdCgnICcpXG5cdCAgICAgICAgdmFyIENPTlRST0xfQ0hBUkFDVEVSX1VOSUNPREUgPSAnXFx1MDAwMCBcXHUwMDAxIFxcdTAwMDIgXFx1MDAwMyBcXHUwMDA0IFxcdTAwMDUgXFx1MDAwNiBcXHUwMDA3IFxcdTAwMDggXFx1MDAwOSBcXHUwMDBBIFxcdTAwMEIgXFx1MDAwQyBcXHUwMDBEIFxcdTAwMEUgXFx1MDAwRiBcXHUwMDEwIFxcdTAwMTEgXFx1MDAxMiBcXHUwMDEzIFxcdTAwMTQgXFx1MDAxNSBcXHUwMDE2IFxcdTAwMTcgXFx1MDAxOCBcXHUwMDE5IFxcdTAwMUEgXFx1MDAxQiBcXHUwMDFDIFxcdTAwMUQgXFx1MDAxRSBcXHUwMDFGJy5zcGxpdCgnICcpXG5cdCAgICAgICAgdmFyIG1hcCA9IHt9XG5cdCAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBDT05UUk9MX0NIQVJBQ1RFUi5sZW5ndGg7IGkrKykge1xuXHQgICAgICAgICAgICBtYXBbQ09OVFJPTF9DSEFSQUNURVJbaV1dID0gQ09OVFJPTF9DSEFSQUNURVJfVU5JQ09ERVtpXVxuXHQgICAgICAgIH1cblx0ICAgICAgICByZXR1cm4gbWFwXG5cdCAgICB9KCksXG5cdCAgICAnY29udHJvbC1jaGFyYWN0ZXInOiBmdW5jdGlvbihub2RlLCByZXN1bHQsIGNhY2hlKSB7XG5cdCAgICAgICAgcmV0dXJuIHRoaXMuQ09OVFJPTF9DSEFSQUNURVJfTUFQW25vZGUuY29kZV1cblx0ICAgIH1cblx0fSlcblxuXHRtb2R1bGUuZXhwb3J0cyA9IEhhbmRsZXJcblxuLyoqKi8gfSksXG4vKiAyMyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cdG1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3JlcXVpcmVfXygyNClcblxuLyoqKi8gfSksXG4vKiAyNCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cdC8qXG5cdCAgICAjIyB0b0pTT05TY2hlbWFcblxuXHQgICAg5oqKIE1vY2suanMg6aOO5qC855qE5pWw5o2u5qih5p2/6L2s5o2i5oiQIEpTT04gU2NoZW1h44CCXG5cblx0ICAgID4gW0pTT04gU2NoZW1hXShodHRwOi8vanNvbi1zY2hlbWEub3JnLylcblx0ICovXG5cdHZhciBDb25zdGFudCA9IF9fd2VicGFja19yZXF1aXJlX18oMilcblx0dmFyIFV0aWwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpXG5cdHZhciBQYXJzZXIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQpXG5cblx0ZnVuY3Rpb24gdG9KU09OU2NoZW1hKHRlbXBsYXRlLCBuYW1lLCBwYXRoIC8qIEludGVybmFsIFVzZSBPbmx5ICovICkge1xuXHQgICAgLy8gdHlwZSBydWxlIHByb3BlcnRpZXMgaXRlbXNcblx0ICAgIHBhdGggPSBwYXRoIHx8IFtdXG5cdCAgICB2YXIgcmVzdWx0ID0ge1xuXHQgICAgICAgIG5hbWU6IHR5cGVvZiBuYW1lID09PSAnc3RyaW5nJyA/IG5hbWUucmVwbGFjZShDb25zdGFudC5SRV9LRVksICckMScpIDogbmFtZSxcblx0ICAgICAgICB0ZW1wbGF0ZTogdGVtcGxhdGUsXG5cdCAgICAgICAgdHlwZTogVXRpbC50eXBlKHRlbXBsYXRlKSwgLy8g5Y+v6IO95LiN5YeG56Gu77yM5L6L5aaCIHsgJ25hbWV8MSc6IFt7fSwge30gLi4uXSB9XG5cdCAgICAgICAgcnVsZTogUGFyc2VyLnBhcnNlKG5hbWUpXG5cdCAgICB9XG5cdCAgICByZXN1bHQucGF0aCA9IHBhdGguc2xpY2UoMClcblx0ICAgIHJlc3VsdC5wYXRoLnB1c2gobmFtZSA9PT0gdW5kZWZpbmVkID8gJ1JPT1QnIDogcmVzdWx0Lm5hbWUpXG5cblx0ICAgIHN3aXRjaCAocmVzdWx0LnR5cGUpIHtcblx0ICAgICAgICBjYXNlICdhcnJheSc6XG5cdCAgICAgICAgICAgIHJlc3VsdC5pdGVtcyA9IFtdXG5cdCAgICAgICAgICAgIFV0aWwuZWFjaCh0ZW1wbGF0ZSwgZnVuY3Rpb24odmFsdWUsIGluZGV4KSB7XG5cdCAgICAgICAgICAgICAgICByZXN1bHQuaXRlbXMucHVzaChcblx0ICAgICAgICAgICAgICAgICAgICB0b0pTT05TY2hlbWEodmFsdWUsIGluZGV4LCByZXN1bHQucGF0aClcblx0ICAgICAgICAgICAgICAgIClcblx0ICAgICAgICAgICAgfSlcblx0ICAgICAgICAgICAgYnJlYWtcblx0ICAgICAgICBjYXNlICdvYmplY3QnOlxuXHQgICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyA9IFtdXG5cdCAgICAgICAgICAgIFV0aWwuZWFjaCh0ZW1wbGF0ZSwgZnVuY3Rpb24odmFsdWUsIG5hbWUpIHtcblx0ICAgICAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLnB1c2goXG5cdCAgICAgICAgICAgICAgICAgICAgdG9KU09OU2NoZW1hKHZhbHVlLCBuYW1lLCByZXN1bHQucGF0aClcblx0ICAgICAgICAgICAgICAgIClcblx0ICAgICAgICAgICAgfSlcblx0ICAgICAgICAgICAgYnJlYWtcblx0ICAgIH1cblxuXHQgICAgcmV0dXJuIHJlc3VsdFxuXG5cdH1cblxuXHRtb2R1bGUuZXhwb3J0cyA9IHRvSlNPTlNjaGVtYVxuXG5cbi8qKiovIH0pLFxuLyogMjUgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXHRtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19yZXF1aXJlX18oMjYpXG5cbi8qKiovIH0pLFxuLyogMjYgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXHQvKlxuXHQgICAgIyMgdmFsaWQodGVtcGxhdGUsIGRhdGEpXG5cblx0ICAgIOagoemqjOecn+WunuaVsOaNriBkYXRhIOaYr+WQpuS4juaVsOaNruaooeadvyB0ZW1wbGF0ZSDljLnphY3jgIJcblx0ICAgIFxuXHQgICAg5a6e546w5oCd6Lev77yaXG5cdCAgICAxLiDop6PmnpDop4TliJnjgIJcblx0ICAgICAgICDlhYjmiormlbDmja7mqKHmnb8gdGVtcGxhdGUg6Kej5p6Q5Li65pu05pa55L6/5py65Zmo6Kej5p6Q55qEIEpTT04tU2NoYW1lXG5cdCAgICAgICAgbmFtZSAgICAgICAgICAgICAgIOWxnuaAp+WQjSBcblx0ICAgICAgICB0eXBlICAgICAgICAgICAgICAg5bGe5oCn5YC857G75Z6LXG5cdCAgICAgICAgdGVtcGxhdGUgICAgICAgICAgIOWxnuaAp+WAvOaooeadv1xuXHQgICAgICAgIHByb3BlcnRpZXMgICAgICAgICDlr7nosaHlsZ7mgKfmlbDnu4Rcblx0ICAgICAgICBpdGVtcyAgICAgICAgICAgICAg5pWw57uE5YWD57Sg5pWw57uEXG5cdCAgICAgICAgcnVsZSAgICAgICAgICAgICAgIOWxnuaAp+WAvOeUn+aIkOinhOWImVxuXHQgICAgMi4g6YCS5b2S6aqM6K+B6KeE5YiZ44CCXG5cdCAgICAgICAg54S25ZCO55SoIEpTT04tU2NoZW1hIOagoemqjOecn+WunuaVsOaNru+8jOagoemqjOmhueWMheaLrOWxnuaAp+WQjeOAgeWAvOexu+Wei+OAgeWAvOOAgeWAvOeUn+aIkOinhOWImeOAglxuXG5cdCAgICDmj5DnpLrkv6Hmga8gXG5cdCAgICBodHRwczovL2dpdGh1Yi5jb20vZmdlL2pzb24tc2NoZW1hLXZhbGlkYXRvci9ibG9iL21hc3Rlci9zcmMvbWFpbi9yZXNvdXJjZXMvY29tL2dpdGh1Yi9mZ2UvanNvbnNjaGVtYS92YWxpZGF0b3IvdmFsaWRhdGlvbi5wcm9wZXJ0aWVzXG5cdCAgICBbSlNPTi1TY2hhbWEgdmFsaWRhdG9yXShodHRwOi8vanNvbi1zY2hlbWEtdmFsaWRhdG9yLmhlcm9rdWFwcC5jb20vKVxuXHQgICAgW1JlZ2V4cCBEZW1vXShodHRwOi8vZGVtb3MuZm9yYmVzbGluZGVzYXkuY28udWsvcmVnZXhwLylcblx0Ki9cblx0dmFyIENvbnN0YW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKVxuXHR2YXIgVXRpbCA9IF9fd2VicGFja19yZXF1aXJlX18oMylcblx0dmFyIHRvSlNPTlNjaGVtYSA9IF9fd2VicGFja19yZXF1aXJlX18oMjMpXG5cblx0ZnVuY3Rpb24gdmFsaWQodGVtcGxhdGUsIGRhdGEpIHtcblx0ICAgIHZhciBzY2hlbWEgPSB0b0pTT05TY2hlbWEodGVtcGxhdGUpXG5cdCAgICB2YXIgcmVzdWx0ID0gRGlmZi5kaWZmKHNjaGVtYSwgZGF0YSlcblx0ICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVzdWx0Lmxlbmd0aDsgaSsrKSB7XG5cdCAgICAgICAgLy8gY29uc29sZS5sb2codGVtcGxhdGUsIGRhdGEpXG5cdCAgICAgICAgLy8gY29uc29sZS53YXJuKEFzc2VydC5tZXNzYWdlKHJlc3VsdFtpXSkpXG5cdCAgICB9XG5cdCAgICByZXR1cm4gcmVzdWx0XG5cdH1cblxuXHQvKlxuXHQgICAgIyMgbmFtZVxuXHQgICAgICAgIOacieeUn+aIkOinhOWIme+8muavlOi+g+ino+aekOWQjueahCBuYW1lXG5cdCAgICAgICAg5peg55Sf5oiQ6KeE5YiZ77ya55u05o6l5q+U6L6DXG5cdCAgICAjIyB0eXBlXG5cdCAgICAgICAg5peg57G75Z6L6L2s5o2i77ya55u05o6l5q+U6L6DXG5cdCAgICAgICAg5pyJ57G75Z6L6L2s5o2i77ya5YWI6K+V552A6Kej5p6QIHRlbXBsYXRl77yM54S25ZCO5YaN5qOA5p+l77yfXG5cdCAgICAjIyB2YWx1ZSB2cy4gdGVtcGxhdGVcblx0ICAgICAgICDln7rmnKznsbvlnotcblx0ICAgICAgICAgICAg5peg55Sf5oiQ6KeE5YiZ77ya55u05o6l5q+U6L6DXG5cdCAgICAgICAgICAgIOacieeUn+aIkOinhOWIme+8mlxuXHQgICAgICAgICAgICAgICAgbnVtYmVyXG5cdCAgICAgICAgICAgICAgICAgICAgbWluLW1heC5kbWluLWRtYXhcblx0ICAgICAgICAgICAgICAgICAgICBtaW4tbWF4LmRjb3VudFxuXHQgICAgICAgICAgICAgICAgICAgIGNvdW50LmRtaW4tZG1heFxuXHQgICAgICAgICAgICAgICAgICAgIGNvdW50LmRjb3VudFxuXHQgICAgICAgICAgICAgICAgICAgICtzdGVwXG5cdCAgICAgICAgICAgICAgICAgICAg5pW05pWw6YOo5YiGXG5cdCAgICAgICAgICAgICAgICAgICAg5bCP5pWw6YOo5YiGXG5cdCAgICAgICAgICAgICAgICBib29sZWFuIFxuXHQgICAgICAgICAgICAgICAgc3RyaW5nICBcblx0ICAgICAgICAgICAgICAgICAgICBtaW4tbWF4XG5cdCAgICAgICAgICAgICAgICAgICAgY291bnRcblx0ICAgICMjIHByb3BlcnRpZXNcblx0ICAgICAgICDlr7nosaFcblx0ICAgICAgICAgICAg5pyJ55Sf5oiQ6KeE5YiZ77ya5qOA5rWL5pyf5pyb55qE5bGe5oCn5Liq5pWw77yM57un57ut6YCS5b2SXG5cdCAgICAgICAgICAgIOaXoOeUn+aIkOinhOWIme+8muajgOa1i+WFqOmDqOeahOWxnuaAp+S4quaVsO+8jOe7p+e7remAkuW9klxuXHQgICAgIyMgaXRlbXNcblx0ICAgICAgICDmlbDnu4Rcblx0ICAgICAgICAgICAg5pyJ55Sf5oiQ6KeE5YiZ77yaXG5cdCAgICAgICAgICAgICAgICBgJ25hbWV8MSc6IFt7fSwge30gLi4uXWAgICAgICAgICAgICDlhbbkuK3kuYvkuIDvvIznu6fnu63pgJLlvZJcblx0ICAgICAgICAgICAgICAgIGAnbmFtZXwrMSc6IFt7fSwge30gLi4uXWAgICAgICAgICAgIOmhuuW6j+ajgOa1i++8jOe7p+e7remAkuW9klxuXHQgICAgICAgICAgICAgICAgYCduYW1lfG1pbi1tYXgnOiBbe30sIHt9IC4uLl1gICAgICAg5qOA5rWL5Liq5pWw77yM57un57ut6YCS5b2SXG5cdCAgICAgICAgICAgICAgICBgJ25hbWV8Y291bnQnOiBbe30sIHt9IC4uLl1gICAgICAgICDmo4DmtYvkuKrmlbDvvIznu6fnu63pgJLlvZJcblx0ICAgICAgICAgICAg5peg55Sf5oiQ6KeE5YiZ77ya5qOA5rWL5YWo6YOo55qE5YWD57Sg5Liq5pWw77yM57un57ut6YCS5b2SXG5cdCovXG5cdHZhciBEaWZmID0ge1xuXHQgICAgZGlmZjogZnVuY3Rpb24gZGlmZihzY2hlbWEsIGRhdGEsIG5hbWUgLyogSW50ZXJuYWwgVXNlIE9ubHkgKi8gKSB7XG5cdCAgICAgICAgdmFyIHJlc3VsdCA9IFtdXG5cblx0ICAgICAgICAvLyDlhYjmo4DmtYvlkI3np7AgbmFtZSDlkoznsbvlnosgdHlwZe+8jOWmguaenOWMuemFje+8jOaJjeacieW/heimgee7p+e7reajgOa1i1xuXHQgICAgICAgIGlmIChcblx0ICAgICAgICAgICAgdGhpcy5uYW1lKHNjaGVtYSwgZGF0YSwgbmFtZSwgcmVzdWx0KSAmJlxuXHQgICAgICAgICAgICB0aGlzLnR5cGUoc2NoZW1hLCBkYXRhLCBuYW1lLCByZXN1bHQpXG5cdCAgICAgICAgKSB7XG5cdCAgICAgICAgICAgIHRoaXMudmFsdWUoc2NoZW1hLCBkYXRhLCBuYW1lLCByZXN1bHQpXG5cdCAgICAgICAgICAgIHRoaXMucHJvcGVydGllcyhzY2hlbWEsIGRhdGEsIG5hbWUsIHJlc3VsdClcblx0ICAgICAgICAgICAgdGhpcy5pdGVtcyhzY2hlbWEsIGRhdGEsIG5hbWUsIHJlc3VsdClcblx0ICAgICAgICB9XG5cblx0ICAgICAgICByZXR1cm4gcmVzdWx0XG5cdCAgICB9LFxuXHQgICAgLyoganNoaW50IHVudXNlZDpmYWxzZSAqL1xuXHQgICAgbmFtZTogZnVuY3Rpb24oc2NoZW1hLCBkYXRhLCBuYW1lLCByZXN1bHQpIHtcblx0ICAgICAgICB2YXIgbGVuZ3RoID0gcmVzdWx0Lmxlbmd0aFxuXG5cdCAgICAgICAgQXNzZXJ0LmVxdWFsKCduYW1lJywgc2NoZW1hLnBhdGgsIG5hbWUgKyAnJywgc2NoZW1hLm5hbWUgKyAnJywgcmVzdWx0KVxuXG5cdCAgICAgICAgcmV0dXJuIHJlc3VsdC5sZW5ndGggPT09IGxlbmd0aFxuXHQgICAgfSxcblx0ICAgIHR5cGU6IGZ1bmN0aW9uKHNjaGVtYSwgZGF0YSwgbmFtZSwgcmVzdWx0KSB7XG5cdCAgICAgICAgdmFyIGxlbmd0aCA9IHJlc3VsdC5sZW5ndGhcblxuXHQgICAgICAgIHN3aXRjaCAoc2NoZW1hLnR5cGUpIHtcblx0ICAgICAgICAgICAgY2FzZSAnc3RyaW5nJzpcblx0ICAgICAgICAgICAgICAgIC8vIOi3s+i/h+WQq+acieOAjuWNoOS9jeespuOAj+eahOWxnuaAp+WAvO+8jOWboOS4uuOAjuWNoOS9jeespuOAj+i/lOWbnuWAvOeahOexu+Wei+WPr+iDveWSjOaooeadv+S4jeS4gOiHtO+8jOS+i+WmgiAnQGludCcg5Lya6L+U5Zue5LiA5Liq5pW05b2i5YC8XG5cdCAgICAgICAgICAgICAgICBpZiAoc2NoZW1hLnRlbXBsYXRlLm1hdGNoKENvbnN0YW50LlJFX1BMQUNFSE9MREVSKSkgcmV0dXJuIHRydWVcblx0ICAgICAgICAgICAgICAgIGJyZWFrXG5cdCAgICAgICAgICAgIGNhc2UgJ2FycmF5Jzpcblx0ICAgICAgICAgICAgICAgIGlmIChzY2hlbWEucnVsZS5wYXJhbWV0ZXJzKSB7XG5cdCAgICAgICAgICAgICAgICAgICAgLy8gbmFtZXxjb3VudDogYXJyYXlcblx0ICAgICAgICAgICAgICAgICAgICBpZiAoc2NoZW1hLnJ1bGUubWluICE9PSB1bmRlZmluZWQgJiYgc2NoZW1hLnJ1bGUubWF4ID09PSB1bmRlZmluZWQpIHtcblx0ICAgICAgICAgICAgICAgICAgICAgICAgLy8g6Lez6L+HIG5hbWV8MTogYXJyYXnvvIzlm6DkuLrmnIDnu4jlgLznmoTnsbvlnovvvIjlvojlj6/og73vvInkuI3mmK/mlbDnu4TvvIzkuZ/kuI3kuIDlrprkuI4gYGFycmF5YCDkuK3nmoTnsbvlnovkuIDoh7Rcblx0ICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNjaGVtYS5ydWxlLmNvdW50ID09PSAxKSByZXR1cm4gdHJ1ZVxuXHQgICAgICAgICAgICAgICAgICAgIH1cblx0ICAgICAgICAgICAgICAgICAgICAvLyDot7Pov4cgbmFtZXwraW5jOiBhcnJheVxuXHQgICAgICAgICAgICAgICAgICAgIGlmIChzY2hlbWEucnVsZS5wYXJhbWV0ZXJzWzJdKSByZXR1cm4gdHJ1ZVxuXHQgICAgICAgICAgICAgICAgfVxuXHQgICAgICAgICAgICAgICAgYnJlYWtcblx0ICAgICAgICAgICAgY2FzZSAnZnVuY3Rpb24nOlxuXHQgICAgICAgICAgICAgICAgLy8g6Lez6L+HIGAnbmFtZSc6IGZ1bmN0aW9uYO+8jOWboOS4uuWHveaVsOWPr+S7pei/lOWbnuS7u+S9leexu+Wei+eahOWAvOOAglxuXHQgICAgICAgICAgICAgICAgcmV0dXJuIHRydWVcblx0ICAgICAgICB9XG5cblx0ICAgICAgICBBc3NlcnQuZXF1YWwoJ3R5cGUnLCBzY2hlbWEucGF0aCwgVXRpbC50eXBlKGRhdGEpLCBzY2hlbWEudHlwZSwgcmVzdWx0KVxuXG5cdCAgICAgICAgcmV0dXJuIHJlc3VsdC5sZW5ndGggPT09IGxlbmd0aFxuXHQgICAgfSxcblx0ICAgIHZhbHVlOiBmdW5jdGlvbihzY2hlbWEsIGRhdGEsIG5hbWUsIHJlc3VsdCkge1xuXHQgICAgICAgIHZhciBsZW5ndGggPSByZXN1bHQubGVuZ3RoXG5cblx0ICAgICAgICB2YXIgcnVsZSA9IHNjaGVtYS5ydWxlXG5cdCAgICAgICAgdmFyIHRlbXBsYXRlVHlwZSA9IHNjaGVtYS50eXBlXG5cdCAgICAgICAgaWYgKHRlbXBsYXRlVHlwZSA9PT0gJ29iamVjdCcgfHwgdGVtcGxhdGVUeXBlID09PSAnYXJyYXknIHx8IHRlbXBsYXRlVHlwZSA9PT0gJ2Z1bmN0aW9uJykgcmV0dXJuIHRydWVcblxuXHQgICAgICAgIC8vIOaXoOeUn+aIkOinhOWImVxuXHQgICAgICAgIGlmICghcnVsZS5wYXJhbWV0ZXJzKSB7XG5cdCAgICAgICAgICAgIHN3aXRjaCAodGVtcGxhdGVUeXBlKSB7XG5cdCAgICAgICAgICAgICAgICBjYXNlICdyZWdleHAnOlxuXHQgICAgICAgICAgICAgICAgICAgIEFzc2VydC5tYXRjaCgndmFsdWUnLCBzY2hlbWEucGF0aCwgZGF0YSwgc2NoZW1hLnRlbXBsYXRlLCByZXN1bHQpXG5cdCAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC5sZW5ndGggPT09IGxlbmd0aFxuXHQgICAgICAgICAgICAgICAgY2FzZSAnc3RyaW5nJzpcblx0ICAgICAgICAgICAgICAgICAgICAvLyDlkIzmoLfot7Pov4flkKvmnInjgI7ljaDkvY3nrKbjgI/nmoTlsZ7mgKflgLzvvIzlm6DkuLrjgI7ljaDkvY3nrKbjgI/nmoTov5Tlm57lgLzkvJrpgJrluLjkvJrkuI7mqKHmnb/kuI3kuIDoh7Rcblx0ICAgICAgICAgICAgICAgICAgICBpZiAoc2NoZW1hLnRlbXBsYXRlLm1hdGNoKENvbnN0YW50LlJFX1BMQUNFSE9MREVSKSkgcmV0dXJuIHJlc3VsdC5sZW5ndGggPT09IGxlbmd0aFxuXHQgICAgICAgICAgICAgICAgICAgIGJyZWFrXG5cdCAgICAgICAgICAgIH1cblx0ICAgICAgICAgICAgQXNzZXJ0LmVxdWFsKCd2YWx1ZScsIHNjaGVtYS5wYXRoLCBkYXRhLCBzY2hlbWEudGVtcGxhdGUsIHJlc3VsdClcblx0ICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC5sZW5ndGggPT09IGxlbmd0aFxuXHQgICAgICAgIH1cblxuXHQgICAgICAgIC8vIOacieeUn+aIkOinhOWImVxuXHQgICAgICAgIHZhciBhY3R1YWxSZXBlYXRDb3VudFxuXHQgICAgICAgIHN3aXRjaCAodGVtcGxhdGVUeXBlKSB7XG5cdCAgICAgICAgICAgIGNhc2UgJ251bWJlcic6XG5cdCAgICAgICAgICAgICAgICB2YXIgcGFydHMgPSAoZGF0YSArICcnKS5zcGxpdCgnLicpXG5cdCAgICAgICAgICAgICAgICBwYXJ0c1swXSA9ICtwYXJ0c1swXVxuXG5cdCAgICAgICAgICAgICAgICAvLyDmlbTmlbDpg6jliIZcblx0ICAgICAgICAgICAgICAgIC8vIHxtaW4tbWF4XG5cdCAgICAgICAgICAgICAgICBpZiAocnVsZS5taW4gIT09IHVuZGVmaW5lZCAmJiBydWxlLm1heCAhPT0gdW5kZWZpbmVkKSB7XG5cdCAgICAgICAgICAgICAgICAgICAgQXNzZXJ0LmdyZWF0ZXJUaGFuT3JFcXVhbFRvKCd2YWx1ZScsIHNjaGVtYS5wYXRoLCBwYXJ0c1swXSwgTWF0aC5taW4ocnVsZS5taW4sIHJ1bGUubWF4KSwgcmVzdWx0KVxuXHQgICAgICAgICAgICAgICAgICAgICAgICAvLyAsICdudW1lcmljIGluc3RhbmNlIGlzIGxvd2VyIHRoYW4gdGhlIHJlcXVpcmVkIG1pbmltdW0gKG1pbmltdW06IHtleHBlY3RlZH0sIGZvdW5kOiB7YWN0dWFsfSknKVxuXHQgICAgICAgICAgICAgICAgICAgIEFzc2VydC5sZXNzVGhhbk9yRXF1YWxUbygndmFsdWUnLCBzY2hlbWEucGF0aCwgcGFydHNbMF0sIE1hdGgubWF4KHJ1bGUubWluLCBydWxlLm1heCksIHJlc3VsdClcblx0ICAgICAgICAgICAgICAgIH1cblx0ICAgICAgICAgICAgICAgIC8vIHxjb3VudFxuXHQgICAgICAgICAgICAgICAgaWYgKHJ1bGUubWluICE9PSB1bmRlZmluZWQgJiYgcnVsZS5tYXggPT09IHVuZGVmaW5lZCkge1xuXHQgICAgICAgICAgICAgICAgICAgIEFzc2VydC5lcXVhbCgndmFsdWUnLCBzY2hlbWEucGF0aCwgcGFydHNbMF0sIHJ1bGUubWluLCByZXN1bHQsICdbdmFsdWVdICcgKyBuYW1lKVxuXHQgICAgICAgICAgICAgICAgfVxuXG5cdCAgICAgICAgICAgICAgICAvLyDlsI/mlbDpg6jliIZcblx0ICAgICAgICAgICAgICAgIGlmIChydWxlLmRlY2ltYWwpIHtcblx0ICAgICAgICAgICAgICAgICAgICAvLyB8ZG1pbi1kbWF4XG5cdCAgICAgICAgICAgICAgICAgICAgaWYgKHJ1bGUuZG1pbiAhPT0gdW5kZWZpbmVkICYmIHJ1bGUuZG1heCAhPT0gdW5kZWZpbmVkKSB7XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIEFzc2VydC5ncmVhdGVyVGhhbk9yRXF1YWxUbygndmFsdWUnLCBzY2hlbWEucGF0aCwgcGFydHNbMV0ubGVuZ3RoLCBydWxlLmRtaW4sIHJlc3VsdClcblx0ICAgICAgICAgICAgICAgICAgICAgICAgQXNzZXJ0Lmxlc3NUaGFuT3JFcXVhbFRvKCd2YWx1ZScsIHNjaGVtYS5wYXRoLCBwYXJ0c1sxXS5sZW5ndGgsIHJ1bGUuZG1heCwgcmVzdWx0KVxuXHQgICAgICAgICAgICAgICAgICAgIH1cblx0ICAgICAgICAgICAgICAgICAgICAvLyB8ZGNvdW50XG5cdCAgICAgICAgICAgICAgICAgICAgaWYgKHJ1bGUuZG1pbiAhPT0gdW5kZWZpbmVkICYmIHJ1bGUuZG1heCA9PT0gdW5kZWZpbmVkKSB7XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIEFzc2VydC5lcXVhbCgndmFsdWUnLCBzY2hlbWEucGF0aCwgcGFydHNbMV0ubGVuZ3RoLCBydWxlLmRtaW4sIHJlc3VsdClcblx0ICAgICAgICAgICAgICAgICAgICB9XG5cdCAgICAgICAgICAgICAgICB9XG5cblx0ICAgICAgICAgICAgICAgIGJyZWFrXG5cblx0ICAgICAgICAgICAgY2FzZSAnYm9vbGVhbic6XG5cdCAgICAgICAgICAgICAgICBicmVha1xuXG5cdCAgICAgICAgICAgIGNhc2UgJ3N0cmluZyc6XG5cdCAgICAgICAgICAgICAgICAvLyAnYWFhJy5tYXRjaCgvYS9nKVxuXHQgICAgICAgICAgICAgICAgYWN0dWFsUmVwZWF0Q291bnQgPSBkYXRhLm1hdGNoKG5ldyBSZWdFeHAoc2NoZW1hLnRlbXBsYXRlLCAnZycpKVxuXHQgICAgICAgICAgICAgICAgYWN0dWFsUmVwZWF0Q291bnQgPSBhY3R1YWxSZXBlYXRDb3VudCA/IGFjdHVhbFJlcGVhdENvdW50Lmxlbmd0aCA6IDBcblxuXHQgICAgICAgICAgICAgICAgLy8gfG1pbi1tYXhcblx0ICAgICAgICAgICAgICAgIGlmIChydWxlLm1pbiAhPT0gdW5kZWZpbmVkICYmIHJ1bGUubWF4ICE9PSB1bmRlZmluZWQpIHtcblx0ICAgICAgICAgICAgICAgICAgICBBc3NlcnQuZ3JlYXRlclRoYW5PckVxdWFsVG8oJ3JlcGVhdCBjb3VudCcsIHNjaGVtYS5wYXRoLCBhY3R1YWxSZXBlYXRDb3VudCwgcnVsZS5taW4sIHJlc3VsdClcblx0ICAgICAgICAgICAgICAgICAgICBBc3NlcnQubGVzc1RoYW5PckVxdWFsVG8oJ3JlcGVhdCBjb3VudCcsIHNjaGVtYS5wYXRoLCBhY3R1YWxSZXBlYXRDb3VudCwgcnVsZS5tYXgsIHJlc3VsdClcblx0ICAgICAgICAgICAgICAgIH1cblx0ICAgICAgICAgICAgICAgIC8vIHxjb3VudFxuXHQgICAgICAgICAgICAgICAgaWYgKHJ1bGUubWluICE9PSB1bmRlZmluZWQgJiYgcnVsZS5tYXggPT09IHVuZGVmaW5lZCkge1xuXHQgICAgICAgICAgICAgICAgICAgIEFzc2VydC5lcXVhbCgncmVwZWF0IGNvdW50Jywgc2NoZW1hLnBhdGgsIGFjdHVhbFJlcGVhdENvdW50LCBydWxlLm1pbiwgcmVzdWx0KVxuXHQgICAgICAgICAgICAgICAgfVxuXG5cdCAgICAgICAgICAgICAgICBicmVha1xuXG5cdCAgICAgICAgICAgIGNhc2UgJ3JlZ2V4cCc6XG5cdCAgICAgICAgICAgICAgICBhY3R1YWxSZXBlYXRDb3VudCA9IGRhdGEubWF0Y2gobmV3IFJlZ0V4cChzY2hlbWEudGVtcGxhdGUuc291cmNlLnJlcGxhY2UoL15cXF58XFwkJC9nLCAnJyksICdnJykpXG5cdCAgICAgICAgICAgICAgICBhY3R1YWxSZXBlYXRDb3VudCA9IGFjdHVhbFJlcGVhdENvdW50ID8gYWN0dWFsUmVwZWF0Q291bnQubGVuZ3RoIDogMFxuXG5cdCAgICAgICAgICAgICAgICAvLyB8bWluLW1heFxuXHQgICAgICAgICAgICAgICAgaWYgKHJ1bGUubWluICE9PSB1bmRlZmluZWQgJiYgcnVsZS5tYXggIT09IHVuZGVmaW5lZCkge1xuXHQgICAgICAgICAgICAgICAgICAgIEFzc2VydC5ncmVhdGVyVGhhbk9yRXF1YWxUbygncmVwZWF0IGNvdW50Jywgc2NoZW1hLnBhdGgsIGFjdHVhbFJlcGVhdENvdW50LCBydWxlLm1pbiwgcmVzdWx0KVxuXHQgICAgICAgICAgICAgICAgICAgIEFzc2VydC5sZXNzVGhhbk9yRXF1YWxUbygncmVwZWF0IGNvdW50Jywgc2NoZW1hLnBhdGgsIGFjdHVhbFJlcGVhdENvdW50LCBydWxlLm1heCwgcmVzdWx0KVxuXHQgICAgICAgICAgICAgICAgfVxuXHQgICAgICAgICAgICAgICAgLy8gfGNvdW50XG5cdCAgICAgICAgICAgICAgICBpZiAocnVsZS5taW4gIT09IHVuZGVmaW5lZCAmJiBydWxlLm1heCA9PT0gdW5kZWZpbmVkKSB7XG5cdCAgICAgICAgICAgICAgICAgICAgQXNzZXJ0LmVxdWFsKCdyZXBlYXQgY291bnQnLCBzY2hlbWEucGF0aCwgYWN0dWFsUmVwZWF0Q291bnQsIHJ1bGUubWluLCByZXN1bHQpXG5cdCAgICAgICAgICAgICAgICB9XG5cdCAgICAgICAgICAgICAgICBicmVha1xuXHQgICAgICAgIH1cblxuXHQgICAgICAgIHJldHVybiByZXN1bHQubGVuZ3RoID09PSBsZW5ndGhcblx0ICAgIH0sXG5cdCAgICBwcm9wZXJ0aWVzOiBmdW5jdGlvbihzY2hlbWEsIGRhdGEsIG5hbWUsIHJlc3VsdCkge1xuXHQgICAgICAgIHZhciBsZW5ndGggPSByZXN1bHQubGVuZ3RoXG5cblx0ICAgICAgICB2YXIgcnVsZSA9IHNjaGVtYS5ydWxlXG5cdCAgICAgICAgdmFyIGtleXMgPSBVdGlsLmtleXMoZGF0YSlcblx0ICAgICAgICBpZiAoIXNjaGVtYS5wcm9wZXJ0aWVzKSByZXR1cm5cblxuXHQgICAgICAgIC8vIOaXoOeUn+aIkOinhOWImVxuXHQgICAgICAgIGlmICghc2NoZW1hLnJ1bGUucGFyYW1ldGVycykge1xuXHQgICAgICAgICAgICBBc3NlcnQuZXF1YWwoJ3Byb3BlcnRpZXMgbGVuZ3RoJywgc2NoZW1hLnBhdGgsIGtleXMubGVuZ3RoLCBzY2hlbWEucHJvcGVydGllcy5sZW5ndGgsIHJlc3VsdClcblx0ICAgICAgICB9IGVsc2Uge1xuXHQgICAgICAgICAgICAvLyDmnInnlJ/miJDop4TliJlcblx0ICAgICAgICAgICAgLy8gfG1pbi1tYXhcblx0ICAgICAgICAgICAgaWYgKHJ1bGUubWluICE9PSB1bmRlZmluZWQgJiYgcnVsZS5tYXggIT09IHVuZGVmaW5lZCkge1xuXHQgICAgICAgICAgICAgICAgQXNzZXJ0LmdyZWF0ZXJUaGFuT3JFcXVhbFRvKCdwcm9wZXJ0aWVzIGxlbmd0aCcsIHNjaGVtYS5wYXRoLCBrZXlzLmxlbmd0aCwgTWF0aC5taW4ocnVsZS5taW4sIHJ1bGUubWF4KSwgcmVzdWx0KVxuXHQgICAgICAgICAgICAgICAgQXNzZXJ0Lmxlc3NUaGFuT3JFcXVhbFRvKCdwcm9wZXJ0aWVzIGxlbmd0aCcsIHNjaGVtYS5wYXRoLCBrZXlzLmxlbmd0aCwgTWF0aC5tYXgocnVsZS5taW4sIHJ1bGUubWF4KSwgcmVzdWx0KVxuXHQgICAgICAgICAgICB9XG5cdCAgICAgICAgICAgIC8vIHxjb3VudFxuXHQgICAgICAgICAgICBpZiAocnVsZS5taW4gIT09IHVuZGVmaW5lZCAmJiBydWxlLm1heCA9PT0gdW5kZWZpbmVkKSB7XG5cdCAgICAgICAgICAgICAgICAvLyB8MSwgfD4xXG5cdCAgICAgICAgICAgICAgICBpZiAocnVsZS5jb3VudCAhPT0gMSkgQXNzZXJ0LmVxdWFsKCdwcm9wZXJ0aWVzIGxlbmd0aCcsIHNjaGVtYS5wYXRoLCBrZXlzLmxlbmd0aCwgcnVsZS5taW4sIHJlc3VsdClcblx0ICAgICAgICAgICAgfVxuXHQgICAgICAgIH1cblxuXHQgICAgICAgIGlmIChyZXN1bHQubGVuZ3RoICE9PSBsZW5ndGgpIHJldHVybiBmYWxzZVxuXG5cdCAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG5cdCAgICAgICAgICAgIHJlc3VsdC5wdXNoLmFwcGx5KFxuXHQgICAgICAgICAgICAgICAgcmVzdWx0LFxuXHQgICAgICAgICAgICAgICAgdGhpcy5kaWZmKFxuXHQgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCkge1xuXHQgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcHJvcGVydHlcblx0ICAgICAgICAgICAgICAgICAgICAgICAgVXRpbC5lYWNoKHNjaGVtYS5wcm9wZXJ0aWVzLCBmdW5jdGlvbihpdGVtIC8qLCBpbmRleCovICkge1xuXHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0ubmFtZSA9PT0ga2V5c1tpXSkgcHJvcGVydHkgPSBpdGVtXG5cdCAgICAgICAgICAgICAgICAgICAgICAgIH0pXG5cdCAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wZXJ0eSB8fCBzY2hlbWEucHJvcGVydGllc1tpXVxuXHQgICAgICAgICAgICAgICAgICAgIH0oKSxcblx0ICAgICAgICAgICAgICAgICAgICBkYXRhW2tleXNbaV1dLFxuXHQgICAgICAgICAgICAgICAgICAgIGtleXNbaV1cblx0ICAgICAgICAgICAgICAgIClcblx0ICAgICAgICAgICAgKVxuXHQgICAgICAgIH1cblxuXHQgICAgICAgIHJldHVybiByZXN1bHQubGVuZ3RoID09PSBsZW5ndGhcblx0ICAgIH0sXG5cdCAgICBpdGVtczogZnVuY3Rpb24oc2NoZW1hLCBkYXRhLCBuYW1lLCByZXN1bHQpIHtcblx0ICAgICAgICB2YXIgbGVuZ3RoID0gcmVzdWx0Lmxlbmd0aFxuXG5cdCAgICAgICAgaWYgKCFzY2hlbWEuaXRlbXMpIHJldHVyblxuXG5cdCAgICAgICAgdmFyIHJ1bGUgPSBzY2hlbWEucnVsZVxuXG5cdCAgICAgICAgLy8g5peg55Sf5oiQ6KeE5YiZXG5cdCAgICAgICAgaWYgKCFzY2hlbWEucnVsZS5wYXJhbWV0ZXJzKSB7XG5cdCAgICAgICAgICAgIEFzc2VydC5lcXVhbCgnaXRlbXMgbGVuZ3RoJywgc2NoZW1hLnBhdGgsIGRhdGEubGVuZ3RoLCBzY2hlbWEuaXRlbXMubGVuZ3RoLCByZXN1bHQpXG5cdCAgICAgICAgfSBlbHNlIHtcblx0ICAgICAgICAgICAgLy8g5pyJ55Sf5oiQ6KeE5YiZXG5cdCAgICAgICAgICAgIC8vIHxtaW4tbWF4XG5cdCAgICAgICAgICAgIGlmIChydWxlLm1pbiAhPT0gdW5kZWZpbmVkICYmIHJ1bGUubWF4ICE9PSB1bmRlZmluZWQpIHtcblx0ICAgICAgICAgICAgICAgIEFzc2VydC5ncmVhdGVyVGhhbk9yRXF1YWxUbygnaXRlbXMnLCBzY2hlbWEucGF0aCwgZGF0YS5sZW5ndGgsIChNYXRoLm1pbihydWxlLm1pbiwgcnVsZS5tYXgpICogc2NoZW1hLml0ZW1zLmxlbmd0aCksIHJlc3VsdCxcblx0ICAgICAgICAgICAgICAgICAgICAnW3t1dHlwZX1dIGFycmF5IGlzIHRvbyBzaG9ydDoge3BhdGh9IG11c3QgaGF2ZSBhdCBsZWFzdCB7ZXhwZWN0ZWR9IGVsZW1lbnRzIGJ1dCBpbnN0YW5jZSBoYXMge2FjdHVhbH0gZWxlbWVudHMnKVxuXHQgICAgICAgICAgICAgICAgQXNzZXJ0Lmxlc3NUaGFuT3JFcXVhbFRvKCdpdGVtcycsIHNjaGVtYS5wYXRoLCBkYXRhLmxlbmd0aCwgKE1hdGgubWF4KHJ1bGUubWluLCBydWxlLm1heCkgKiBzY2hlbWEuaXRlbXMubGVuZ3RoKSwgcmVzdWx0LFxuXHQgICAgICAgICAgICAgICAgICAgICdbe3V0eXBlfV0gYXJyYXkgaXMgdG9vIGxvbmc6IHtwYXRofSBtdXN0IGhhdmUgYXQgbW9zdCB7ZXhwZWN0ZWR9IGVsZW1lbnRzIGJ1dCBpbnN0YW5jZSBoYXMge2FjdHVhbH0gZWxlbWVudHMnKVxuXHQgICAgICAgICAgICB9XG5cdCAgICAgICAgICAgIC8vIHxjb3VudFxuXHQgICAgICAgICAgICBpZiAocnVsZS5taW4gIT09IHVuZGVmaW5lZCAmJiBydWxlLm1heCA9PT0gdW5kZWZpbmVkKSB7XG5cdCAgICAgICAgICAgICAgICAvLyB8MSwgfD4xXG5cdCAgICAgICAgICAgICAgICBpZiAocnVsZS5jb3VudCA9PT0gMSkgcmV0dXJuIHJlc3VsdC5sZW5ndGggPT09IGxlbmd0aFxuXHQgICAgICAgICAgICAgICAgZWxzZSBBc3NlcnQuZXF1YWwoJ2l0ZW1zIGxlbmd0aCcsIHNjaGVtYS5wYXRoLCBkYXRhLmxlbmd0aCwgKHJ1bGUubWluICogc2NoZW1hLml0ZW1zLmxlbmd0aCksIHJlc3VsdClcblx0ICAgICAgICAgICAgfVxuXHQgICAgICAgICAgICAvLyB8K2luY1xuXHQgICAgICAgICAgICBpZiAocnVsZS5wYXJhbWV0ZXJzWzJdKSByZXR1cm4gcmVzdWx0Lmxlbmd0aCA9PT0gbGVuZ3RoXG5cdCAgICAgICAgfVxuXG5cdCAgICAgICAgaWYgKHJlc3VsdC5sZW5ndGggIT09IGxlbmd0aCkgcmV0dXJuIGZhbHNlXG5cblx0ICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHtcblx0ICAgICAgICAgICAgcmVzdWx0LnB1c2guYXBwbHkoXG5cdCAgICAgICAgICAgICAgICByZXN1bHQsXG5cdCAgICAgICAgICAgICAgICB0aGlzLmRpZmYoXG5cdCAgICAgICAgICAgICAgICAgICAgc2NoZW1hLml0ZW1zW2kgJSBzY2hlbWEuaXRlbXMubGVuZ3RoXSxcblx0ICAgICAgICAgICAgICAgICAgICBkYXRhW2ldLFxuXHQgICAgICAgICAgICAgICAgICAgIGkgJSBzY2hlbWEuaXRlbXMubGVuZ3RoXG5cdCAgICAgICAgICAgICAgICApXG5cdCAgICAgICAgICAgIClcblx0ICAgICAgICB9XG5cblx0ICAgICAgICByZXR1cm4gcmVzdWx0Lmxlbmd0aCA9PT0gbGVuZ3RoXG5cdCAgICB9XG5cdH1cblxuXHQvKlxuXHQgICAg5a6M5ZaE44CB5Y+L5aW955qE5o+Q56S65L+h5oGvXG5cdCAgICBcblx0ICAgIEVxdWFsLCBub3QgZXF1YWwgdG8sIGdyZWF0ZXIgdGhhbiwgbGVzcyB0aGFuLCBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8sIGxlc3MgdGhhbiBvciBlcXVhbCB0b1xuXHQgICAg6Lev5b6EIOmqjOivgeexu+WeiyDmj4/ov7AgXG5cblx0ICAgIEV4cGVjdCBwYXRoLm5hbWUgaXMgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIGV4cGVjdGVkLCBidXQgcGF0aC5uYW1lIGlzIGFjdHVhbC5cblxuXHQgICAgRXhwZWN0IHBhdGgubmFtZSBpcyBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gZXhwZWN0ZWQsIGJ1dCBwYXRoLm5hbWUgaXMgYWN0dWFsLlxuXHQgICAgRXhwZWN0IHBhdGgubmFtZSBpcyBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gZXhwZWN0ZWQsIGJ1dCBwYXRoLm5hbWUgaXMgYWN0dWFsLlxuXG5cdCovXG5cdHZhciBBc3NlcnQgPSB7XG5cdCAgICBtZXNzYWdlOiBmdW5jdGlvbihpdGVtKSB7XG5cdCAgICAgICAgcmV0dXJuIChpdGVtLm1lc3NhZ2UgfHxcblx0ICAgICAgICAgICAgICAgICdbe3V0eXBlfV0gRXhwZWN0IHtwYXRofVxcJ3tsdHlwZX0ge2FjdGlvbn0ge2V4cGVjdGVkfSwgYnV0IGlzIHthY3R1YWx9Jylcblx0ICAgICAgICAgICAgLnJlcGxhY2UoJ3t1dHlwZX0nLCBpdGVtLnR5cGUudG9VcHBlckNhc2UoKSlcblx0ICAgICAgICAgICAgLnJlcGxhY2UoJ3tsdHlwZX0nLCBpdGVtLnR5cGUudG9Mb3dlckNhc2UoKSlcblx0ICAgICAgICAgICAgLnJlcGxhY2UoJ3twYXRofScsIFV0aWwuaXNBcnJheShpdGVtLnBhdGgpICYmIGl0ZW0ucGF0aC5qb2luKCcuJykgfHwgaXRlbS5wYXRoKVxuXHQgICAgICAgICAgICAucmVwbGFjZSgne2FjdGlvbn0nLCBpdGVtLmFjdGlvbilcblx0ICAgICAgICAgICAgLnJlcGxhY2UoJ3tleHBlY3RlZH0nLCBpdGVtLmV4cGVjdGVkKVxuXHQgICAgICAgICAgICAucmVwbGFjZSgne2FjdHVhbH0nLCBpdGVtLmFjdHVhbClcblx0ICAgIH0sXG5cdCAgICBlcXVhbDogZnVuY3Rpb24odHlwZSwgcGF0aCwgYWN0dWFsLCBleHBlY3RlZCwgcmVzdWx0LCBtZXNzYWdlKSB7XG5cdCAgICAgICAgaWYgKGFjdHVhbCA9PT0gZXhwZWN0ZWQpIHJldHVybiB0cnVlXG5cdCAgICAgICAgc3dpdGNoICh0eXBlKSB7XG5cdCAgICAgICAgICAgIGNhc2UgJ3R5cGUnOlxuXHQgICAgICAgICAgICAgICAgLy8g5q2j5YiZ5qih5p2/ID09PSDlrZfnrKbkuLLmnIDnu4jlgLxcblx0ICAgICAgICAgICAgICAgIGlmIChleHBlY3RlZCA9PT0gJ3JlZ2V4cCcgJiYgYWN0dWFsID09PSAnc3RyaW5nJykgcmV0dXJuIHRydWVcblx0ICAgICAgICAgICAgICAgIGJyZWFrXG5cdCAgICAgICAgfVxuXG5cdCAgICAgICAgdmFyIGl0ZW0gPSB7XG5cdCAgICAgICAgICAgIHBhdGg6IHBhdGgsXG5cdCAgICAgICAgICAgIHR5cGU6IHR5cGUsXG5cdCAgICAgICAgICAgIGFjdHVhbDogYWN0dWFsLFxuXHQgICAgICAgICAgICBleHBlY3RlZDogZXhwZWN0ZWQsXG5cdCAgICAgICAgICAgIGFjdGlvbjogJ2lzIGVxdWFsIHRvJyxcblx0ICAgICAgICAgICAgbWVzc2FnZTogbWVzc2FnZVxuXHQgICAgICAgIH1cblx0ICAgICAgICBpdGVtLm1lc3NhZ2UgPSBBc3NlcnQubWVzc2FnZShpdGVtKVxuXHQgICAgICAgIHJlc3VsdC5wdXNoKGl0ZW0pXG5cdCAgICAgICAgcmV0dXJuIGZhbHNlXG5cdCAgICB9LFxuXHQgICAgLy8gYWN0dWFsIG1hdGNoZXMgZXhwZWN0ZWRcblx0ICAgIG1hdGNoOiBmdW5jdGlvbih0eXBlLCBwYXRoLCBhY3R1YWwsIGV4cGVjdGVkLCByZXN1bHQsIG1lc3NhZ2UpIHtcblx0ICAgICAgICBpZiAoZXhwZWN0ZWQudGVzdChhY3R1YWwpKSByZXR1cm4gdHJ1ZVxuXG5cdCAgICAgICAgdmFyIGl0ZW0gPSB7XG5cdCAgICAgICAgICAgIHBhdGg6IHBhdGgsXG5cdCAgICAgICAgICAgIHR5cGU6IHR5cGUsXG5cdCAgICAgICAgICAgIGFjdHVhbDogYWN0dWFsLFxuXHQgICAgICAgICAgICBleHBlY3RlZDogZXhwZWN0ZWQsXG5cdCAgICAgICAgICAgIGFjdGlvbjogJ21hdGNoZXMnLFxuXHQgICAgICAgICAgICBtZXNzYWdlOiBtZXNzYWdlXG5cdCAgICAgICAgfVxuXHQgICAgICAgIGl0ZW0ubWVzc2FnZSA9IEFzc2VydC5tZXNzYWdlKGl0ZW0pXG5cdCAgICAgICAgcmVzdWx0LnB1c2goaXRlbSlcblx0ICAgICAgICByZXR1cm4gZmFsc2Vcblx0ICAgIH0sXG5cdCAgICBub3RFcXVhbDogZnVuY3Rpb24odHlwZSwgcGF0aCwgYWN0dWFsLCBleHBlY3RlZCwgcmVzdWx0LCBtZXNzYWdlKSB7XG5cdCAgICAgICAgaWYgKGFjdHVhbCAhPT0gZXhwZWN0ZWQpIHJldHVybiB0cnVlXG5cdCAgICAgICAgdmFyIGl0ZW0gPSB7XG5cdCAgICAgICAgICAgIHBhdGg6IHBhdGgsXG5cdCAgICAgICAgICAgIHR5cGU6IHR5cGUsXG5cdCAgICAgICAgICAgIGFjdHVhbDogYWN0dWFsLFxuXHQgICAgICAgICAgICBleHBlY3RlZDogZXhwZWN0ZWQsXG5cdCAgICAgICAgICAgIGFjdGlvbjogJ2lzIG5vdCBlcXVhbCB0bycsXG5cdCAgICAgICAgICAgIG1lc3NhZ2U6IG1lc3NhZ2Vcblx0ICAgICAgICB9XG5cdCAgICAgICAgaXRlbS5tZXNzYWdlID0gQXNzZXJ0Lm1lc3NhZ2UoaXRlbSlcblx0ICAgICAgICByZXN1bHQucHVzaChpdGVtKVxuXHQgICAgICAgIHJldHVybiBmYWxzZVxuXHQgICAgfSxcblx0ICAgIGdyZWF0ZXJUaGFuOiBmdW5jdGlvbih0eXBlLCBwYXRoLCBhY3R1YWwsIGV4cGVjdGVkLCByZXN1bHQsIG1lc3NhZ2UpIHtcblx0ICAgICAgICBpZiAoYWN0dWFsID4gZXhwZWN0ZWQpIHJldHVybiB0cnVlXG5cdCAgICAgICAgdmFyIGl0ZW0gPSB7XG5cdCAgICAgICAgICAgIHBhdGg6IHBhdGgsXG5cdCAgICAgICAgICAgIHR5cGU6IHR5cGUsXG5cdCAgICAgICAgICAgIGFjdHVhbDogYWN0dWFsLFxuXHQgICAgICAgICAgICBleHBlY3RlZDogZXhwZWN0ZWQsXG5cdCAgICAgICAgICAgIGFjdGlvbjogJ2lzIGdyZWF0ZXIgdGhhbicsXG5cdCAgICAgICAgICAgIG1lc3NhZ2U6IG1lc3NhZ2Vcblx0ICAgICAgICB9XG5cdCAgICAgICAgaXRlbS5tZXNzYWdlID0gQXNzZXJ0Lm1lc3NhZ2UoaXRlbSlcblx0ICAgICAgICByZXN1bHQucHVzaChpdGVtKVxuXHQgICAgICAgIHJldHVybiBmYWxzZVxuXHQgICAgfSxcblx0ICAgIGxlc3NUaGFuOiBmdW5jdGlvbih0eXBlLCBwYXRoLCBhY3R1YWwsIGV4cGVjdGVkLCByZXN1bHQsIG1lc3NhZ2UpIHtcblx0ICAgICAgICBpZiAoYWN0dWFsIDwgZXhwZWN0ZWQpIHJldHVybiB0cnVlXG5cdCAgICAgICAgdmFyIGl0ZW0gPSB7XG5cdCAgICAgICAgICAgIHBhdGg6IHBhdGgsXG5cdCAgICAgICAgICAgIHR5cGU6IHR5cGUsXG5cdCAgICAgICAgICAgIGFjdHVhbDogYWN0dWFsLFxuXHQgICAgICAgICAgICBleHBlY3RlZDogZXhwZWN0ZWQsXG5cdCAgICAgICAgICAgIGFjdGlvbjogJ2lzIGxlc3MgdG8nLFxuXHQgICAgICAgICAgICBtZXNzYWdlOiBtZXNzYWdlXG5cdCAgICAgICAgfVxuXHQgICAgICAgIGl0ZW0ubWVzc2FnZSA9IEFzc2VydC5tZXNzYWdlKGl0ZW0pXG5cdCAgICAgICAgcmVzdWx0LnB1c2goaXRlbSlcblx0ICAgICAgICByZXR1cm4gZmFsc2Vcblx0ICAgIH0sXG5cdCAgICBncmVhdGVyVGhhbk9yRXF1YWxUbzogZnVuY3Rpb24odHlwZSwgcGF0aCwgYWN0dWFsLCBleHBlY3RlZCwgcmVzdWx0LCBtZXNzYWdlKSB7XG5cdCAgICAgICAgaWYgKGFjdHVhbCA+PSBleHBlY3RlZCkgcmV0dXJuIHRydWVcblx0ICAgICAgICB2YXIgaXRlbSA9IHtcblx0ICAgICAgICAgICAgcGF0aDogcGF0aCxcblx0ICAgICAgICAgICAgdHlwZTogdHlwZSxcblx0ICAgICAgICAgICAgYWN0dWFsOiBhY3R1YWwsXG5cdCAgICAgICAgICAgIGV4cGVjdGVkOiBleHBlY3RlZCxcblx0ICAgICAgICAgICAgYWN0aW9uOiAnaXMgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvJyxcblx0ICAgICAgICAgICAgbWVzc2FnZTogbWVzc2FnZVxuXHQgICAgICAgIH1cblx0ICAgICAgICBpdGVtLm1lc3NhZ2UgPSBBc3NlcnQubWVzc2FnZShpdGVtKVxuXHQgICAgICAgIHJlc3VsdC5wdXNoKGl0ZW0pXG5cdCAgICAgICAgcmV0dXJuIGZhbHNlXG5cdCAgICB9LFxuXHQgICAgbGVzc1RoYW5PckVxdWFsVG86IGZ1bmN0aW9uKHR5cGUsIHBhdGgsIGFjdHVhbCwgZXhwZWN0ZWQsIHJlc3VsdCwgbWVzc2FnZSkge1xuXHQgICAgICAgIGlmIChhY3R1YWwgPD0gZXhwZWN0ZWQpIHJldHVybiB0cnVlXG5cdCAgICAgICAgdmFyIGl0ZW0gPSB7XG5cdCAgICAgICAgICAgIHBhdGg6IHBhdGgsXG5cdCAgICAgICAgICAgIHR5cGU6IHR5cGUsXG5cdCAgICAgICAgICAgIGFjdHVhbDogYWN0dWFsLFxuXHQgICAgICAgICAgICBleHBlY3RlZDogZXhwZWN0ZWQsXG5cdCAgICAgICAgICAgIGFjdGlvbjogJ2lzIGxlc3MgdGhhbiBvciBlcXVhbCB0bycsXG5cdCAgICAgICAgICAgIG1lc3NhZ2U6IG1lc3NhZ2Vcblx0ICAgICAgICB9XG5cdCAgICAgICAgaXRlbS5tZXNzYWdlID0gQXNzZXJ0Lm1lc3NhZ2UoaXRlbSlcblx0ICAgICAgICByZXN1bHQucHVzaChpdGVtKVxuXHQgICAgICAgIHJldHVybiBmYWxzZVxuXHQgICAgfVxuXHR9XG5cblx0dmFsaWQuRGlmZiA9IERpZmZcblx0dmFsaWQuQXNzZXJ0ID0gQXNzZXJ0XG5cblx0bW9kdWxlLmV4cG9ydHMgPSB2YWxpZFxuXG4vKioqLyB9KSxcbi8qIDI3ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblx0bW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDI4KVxuXG4vKioqLyB9KSxcbi8qIDI4ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblx0LyogZ2xvYmFsIHdpbmRvdywgZG9jdW1lbnQsIGxvY2F0aW9uLCBFdmVudCwgc2V0VGltZW91dCAqL1xuXHQvKlxuXHQgICAgIyMgTW9ja1hNTEh0dHBSZXF1ZXN0XG5cblx0ICAgIOacn+acm+eahOWKn+iDve+8mlxuXHQgICAgMS4g5a6M5pW05Zyw6KaG55uW5Y6f55SfIFhIUiDnmoTooYzkuLpcblx0ICAgIDIuIOWujOaVtOWcsOaooeaLn+WOn+eUnyBYSFIg55qE6KGM5Li6XG5cdCAgICAzLiDlnKjlj5Hotbfor7fmsYLml7bvvIzoh6rliqjmo4DmtYvmmK/lkKbpnIDopoHmi6bmiKpcblx0ICAgIDQuIOWmguaenOS4jeW/heaLpuaIqu+8jOWImeaJp+ihjOWOn+eUnyBYSFIg55qE6KGM5Li6XG5cdCAgICA1LiDlpoLmnpzpnIDopoHmi6bmiKrvvIzliJnmiafooYzomZrmi58gWEhSIOeahOihjOS4ulxuXHQgICAgNi4g5YW85a65IFhNTEh0dHBSZXF1ZXN0IOWSjCBBY3RpdmVYT2JqZWN0XG5cdCAgICAgICAgbmV3IHdpbmRvdy5YTUxIdHRwUmVxdWVzdCgpXG5cdCAgICAgICAgbmV3IHdpbmRvdy5BY3RpdmVYT2JqZWN0KFwiTWljcm9zb2Z0LlhNTEhUVFBcIilcblxuXHQgICAg5YWz6ZSu5pa55rOV55qE6YC76L6R77yaXG5cdCAgICAqIG5ldyAgIOatpOaXtuWwmuaXoOazleehruWumuaYr+WQpumcgOimgeaLpuaIqu+8jOaJgOS7peWIm+W7uuWOn+eUnyBYSFIg5a+56LGh5piv5b+F6aG755qE44CCXG5cdCAgICAqIG9wZW4gIOatpOaXtuWPr+S7peWPluWIsCBVUkzvvIzlj6/ku6XlhrPlrprmmK/lkKbov5vooYzmi6bmiKrjgIJcblx0ICAgICogc2VuZCAg5q2k5pe25bey57uP56Gu5a6a5LqG6K+35rGC5pa55byP44CCXG5cblx0ICAgIOinhOiMg++8mlxuXHQgICAgaHR0cDovL3hoci5zcGVjLndoYXR3Zy5vcmcvXG5cdCAgICBodHRwOi8vd3d3LnczLm9yZy9UUi9YTUxIdHRwUmVxdWVzdDIvXG5cblx0ICAgIOWPguiAg+WunueOsO+8mlxuXHQgICAgaHR0cHM6Ly9naXRodWIuY29tL3BoaWxpa29uL01vY2tIdHRwUmVxdWVzdC9ibG9iL21hc3Rlci9saWIvbW9jay5qc1xuXHQgICAgaHR0cHM6Ly9naXRodWIuY29tL3RyZWsvRmFrZVhNTEh0dHBSZXF1ZXN0L2Jsb2IvbWFzdGVyL2Zha2VfeG1sX2h0dHBfcmVxdWVzdC5qc1xuXHQgICAgaHR0cHM6Ly9naXRodWIuY29tL2lsaW5za3kveG1saHR0cHJlcXVlc3QvYmxvYi9tYXN0ZXIvWE1MSHR0cFJlcXVlc3QuanNcblx0ICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9maXJlYnVnL2ZpcmVidWctbGl0ZS9ibG9iL21hc3Rlci9jb250ZW50L2xpdGUveGhyLmpzXG5cdCAgICBodHRwczovL2dpdGh1Yi5jb20vdGh4L1JBUC9ibG9iL21hc3Rlci9sYWIvcmFwLnBsdWdpbi54aW5nbGllLmpzXG5cblx0ICAgICoq6ZyA5LiN6ZyA6KaB5YWo6Z2i6YeN5YaZIFhNTEh0dHBSZXF1ZXN077yfKipcblx0ICAgICAgICBodHRwOi8veGhyLnNwZWMud2hhdHdnLm9yZy8jaW50ZXJmYWNlLXhtbGh0dHByZXF1ZXN0XG5cdCAgICAgICAg5YWz6ZSu5bGe5oCnIHJlYWR5U3RhdGXjgIFzdGF0dXPjgIFzdGF0dXNUZXh044CBcmVzcG9uc2XjgIFyZXNwb25zZVRleHTjgIFyZXNwb25zZVhNTCDmmK8gcmVhZG9ubHnvvIzmiYDku6XvvIzor5Xlm77pgJrov4fkv67mlLnov5nkupvnirbmgIHvvIzmnaXmqKHmi5/lk43lupTmmK/kuI3lj6/ooYznmoTjgIJcblx0ICAgICAgICDlm6DmraTvvIzllK/kuIDnmoTlip7ms5XmmK/mqKHmi5/mlbTkuKogWE1MSHR0cFJlcXVlc3TvvIzlsLHlg48galF1ZXJ5IOWvueS6i+S7tuaooeWei+eahOWwgeijheOAglxuXG5cdCAgICAvLyBFdmVudCBoYW5kbGVyc1xuXHQgICAgb25sb2Fkc3RhcnQgICAgICAgICBsb2Fkc3RhcnRcblx0ICAgIG9ucHJvZ3Jlc3MgICAgICAgICAgcHJvZ3Jlc3Ncblx0ICAgIG9uYWJvcnQgICAgICAgICAgICAgYWJvcnRcblx0ICAgIG9uZXJyb3IgICAgICAgICAgICAgZXJyb3Jcblx0ICAgIG9ubG9hZCAgICAgICAgICAgICAgbG9hZFxuXHQgICAgb250aW1lb3V0ICAgICAgICAgICB0aW1lb3V0XG5cdCAgICBvbmxvYWRlbmQgICAgICAgICAgIGxvYWRlbmRcblx0ICAgIG9ucmVhZHlzdGF0ZWNoYW5nZSAgcmVhZHlzdGF0ZWNoYW5nZVxuXHQgKi9cblxuXHR2YXIgVXRpbCA9IF9fd2VicGFja19yZXF1aXJlX18oMylcblxuXHQvLyDlpIfku73ljp/nlJ8gWE1MSHR0cFJlcXVlc3Rcblx0d2luZG93Ll9YTUxIdHRwUmVxdWVzdCA9IHdpbmRvdy5YTUxIdHRwUmVxdWVzdFxuXHR3aW5kb3cuX0FjdGl2ZVhPYmplY3QgPSB3aW5kb3cuQWN0aXZlWE9iamVjdFxuXG5cdC8qXG5cdCAgICBQaGFudG9tSlNcblx0ICAgIFR5cGVFcnJvcjogJ1tvYmplY3QgRXZlbnRDb25zdHJ1Y3Rvcl0nIGlzIG5vdCBhIGNvbnN0cnVjdG9yIChldmFsdWF0aW5nICduZXcgRXZlbnQoXCJyZWFkeXN0YXRlY2hhbmdlXCIpJylcblxuXHQgICAgaHR0cHM6Ly9naXRodWIuY29tL2JsdWVyYWlsL3R3aXR0ZXItYm9vdHN0cmFwLXJhaWxzLWNvbmZpcm0vaXNzdWVzLzE4XG5cdCAgICBodHRwczovL2dpdGh1Yi5jb20vYXJpeWEvcGhhbnRvbWpzL2lzc3Vlcy8xMTI4OVxuXHQqL1xuXHR0cnkge1xuXHQgICAgbmV3IHdpbmRvdy5FdmVudCgnY3VzdG9tJylcblx0fSBjYXRjaCAoZXhjZXB0aW9uKSB7XG5cdCAgICB3aW5kb3cuRXZlbnQgPSBmdW5jdGlvbih0eXBlLCBidWJibGVzLCBjYW5jZWxhYmxlLCBkZXRhaWwpIHtcblx0ICAgICAgICB2YXIgZXZlbnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnQ3VzdG9tRXZlbnQnKSAvLyBNVVNUIGJlICdDdXN0b21FdmVudCdcblx0ICAgICAgICBldmVudC5pbml0Q3VzdG9tRXZlbnQodHlwZSwgYnViYmxlcywgY2FuY2VsYWJsZSwgZGV0YWlsKVxuXHQgICAgICAgIHJldHVybiBldmVudFxuXHQgICAgfVxuXHR9XG5cblx0dmFyIFhIUl9TVEFURVMgPSB7XG5cdCAgICAvLyBUaGUgb2JqZWN0IGhhcyBiZWVuIGNvbnN0cnVjdGVkLlxuXHQgICAgVU5TRU5UOiAwLFxuXHQgICAgLy8gVGhlIG9wZW4oKSBtZXRob2QgaGFzIGJlZW4gc3VjY2Vzc2Z1bGx5IGludm9rZWQuXG5cdCAgICBPUEVORUQ6IDEsXG5cdCAgICAvLyBBbGwgcmVkaXJlY3RzIChpZiBhbnkpIGhhdmUgYmVlbiBmb2xsb3dlZCBhbmQgYWxsIEhUVFAgaGVhZGVycyBvZiB0aGUgcmVzcG9uc2UgaGF2ZSBiZWVuIHJlY2VpdmVkLlxuXHQgICAgSEVBREVSU19SRUNFSVZFRDogMixcblx0ICAgIC8vIFRoZSByZXNwb25zZSdzIGJvZHkgaXMgYmVpbmcgcmVjZWl2ZWQuXG5cdCAgICBMT0FESU5HOiAzLFxuXHQgICAgLy8gVGhlIGRhdGEgdHJhbnNmZXIgaGFzIGJlZW4gY29tcGxldGVkIG9yIHNvbWV0aGluZyB3ZW50IHdyb25nIGR1cmluZyB0aGUgdHJhbnNmZXIgKGUuZy4gaW5maW5pdGUgcmVkaXJlY3RzKS5cblx0ICAgIERPTkU6IDRcblx0fVxuXG5cdHZhciBYSFJfRVZFTlRTID0gJ3JlYWR5c3RhdGVjaGFuZ2UgbG9hZHN0YXJ0IHByb2dyZXNzIGFib3J0IGVycm9yIGxvYWQgdGltZW91dCBsb2FkZW5kJy5zcGxpdCgnICcpXG5cdHZhciBYSFJfUkVRVUVTVF9QUk9QRVJUSUVTID0gJ3RpbWVvdXQgd2l0aENyZWRlbnRpYWxzJy5zcGxpdCgnICcpXG5cdHZhciBYSFJfUkVTUE9OU0VfUFJPUEVSVElFUyA9ICdyZWFkeVN0YXRlIHJlc3BvbnNlVVJMIHN0YXR1cyBzdGF0dXNUZXh0IHJlc3BvbnNlVHlwZSByZXNwb25zZSByZXNwb25zZVRleHQgcmVzcG9uc2VYTUwnLnNwbGl0KCcgJylcblxuXHQvLyBodHRwczovL2dpdGh1Yi5jb20vdHJlay9GYWtlWE1MSHR0cFJlcXVlc3QvYmxvYi9tYXN0ZXIvZmFrZV94bWxfaHR0cF9yZXF1ZXN0LmpzI0wzMlxuXHR2YXIgSFRUUF9TVEFUVVNfQ09ERVMgPSB7XG5cdCAgICAxMDA6IFwiQ29udGludWVcIixcblx0ICAgIDEwMTogXCJTd2l0Y2hpbmcgUHJvdG9jb2xzXCIsXG5cdCAgICAyMDA6IFwiT0tcIixcblx0ICAgIDIwMTogXCJDcmVhdGVkXCIsXG5cdCAgICAyMDI6IFwiQWNjZXB0ZWRcIixcblx0ICAgIDIwMzogXCJOb24tQXV0aG9yaXRhdGl2ZSBJbmZvcm1hdGlvblwiLFxuXHQgICAgMjA0OiBcIk5vIENvbnRlbnRcIixcblx0ICAgIDIwNTogXCJSZXNldCBDb250ZW50XCIsXG5cdCAgICAyMDY6IFwiUGFydGlhbCBDb250ZW50XCIsXG5cdCAgICAzMDA6IFwiTXVsdGlwbGUgQ2hvaWNlXCIsXG5cdCAgICAzMDE6IFwiTW92ZWQgUGVybWFuZW50bHlcIixcblx0ICAgIDMwMjogXCJGb3VuZFwiLFxuXHQgICAgMzAzOiBcIlNlZSBPdGhlclwiLFxuXHQgICAgMzA0OiBcIk5vdCBNb2RpZmllZFwiLFxuXHQgICAgMzA1OiBcIlVzZSBQcm94eVwiLFxuXHQgICAgMzA3OiBcIlRlbXBvcmFyeSBSZWRpcmVjdFwiLFxuXHQgICAgNDAwOiBcIkJhZCBSZXF1ZXN0XCIsXG5cdCAgICA0MDE6IFwiVW5hdXRob3JpemVkXCIsXG5cdCAgICA0MDI6IFwiUGF5bWVudCBSZXF1aXJlZFwiLFxuXHQgICAgNDAzOiBcIkZvcmJpZGRlblwiLFxuXHQgICAgNDA0OiBcIk5vdCBGb3VuZFwiLFxuXHQgICAgNDA1OiBcIk1ldGhvZCBOb3QgQWxsb3dlZFwiLFxuXHQgICAgNDA2OiBcIk5vdCBBY2NlcHRhYmxlXCIsXG5cdCAgICA0MDc6IFwiUHJveHkgQXV0aGVudGljYXRpb24gUmVxdWlyZWRcIixcblx0ICAgIDQwODogXCJSZXF1ZXN0IFRpbWVvdXRcIixcblx0ICAgIDQwOTogXCJDb25mbGljdFwiLFxuXHQgICAgNDEwOiBcIkdvbmVcIixcblx0ICAgIDQxMTogXCJMZW5ndGggUmVxdWlyZWRcIixcblx0ICAgIDQxMjogXCJQcmVjb25kaXRpb24gRmFpbGVkXCIsXG5cdCAgICA0MTM6IFwiUmVxdWVzdCBFbnRpdHkgVG9vIExhcmdlXCIsXG5cdCAgICA0MTQ6IFwiUmVxdWVzdC1VUkkgVG9vIExvbmdcIixcblx0ICAgIDQxNTogXCJVbnN1cHBvcnRlZCBNZWRpYSBUeXBlXCIsXG5cdCAgICA0MTY6IFwiUmVxdWVzdGVkIFJhbmdlIE5vdCBTYXRpc2ZpYWJsZVwiLFxuXHQgICAgNDE3OiBcIkV4cGVjdGF0aW9uIEZhaWxlZFwiLFxuXHQgICAgNDIyOiBcIlVucHJvY2Vzc2FibGUgRW50aXR5XCIsXG5cdCAgICA1MDA6IFwiSW50ZXJuYWwgU2VydmVyIEVycm9yXCIsXG5cdCAgICA1MDE6IFwiTm90IEltcGxlbWVudGVkXCIsXG5cdCAgICA1MDI6IFwiQmFkIEdhdGV3YXlcIixcblx0ICAgIDUwMzogXCJTZXJ2aWNlIFVuYXZhaWxhYmxlXCIsXG5cdCAgICA1MDQ6IFwiR2F0ZXdheSBUaW1lb3V0XCIsXG5cdCAgICA1MDU6IFwiSFRUUCBWZXJzaW9uIE5vdCBTdXBwb3J0ZWRcIlxuXHR9XG5cblx0Lypcblx0ICAgIE1vY2tYTUxIdHRwUmVxdWVzdFxuXHQqL1xuXG5cdGZ1bmN0aW9uIE1vY2tYTUxIdHRwUmVxdWVzdCgpIHtcblx0ICAgIC8vIOWIneWni+WMliBjdXN0b20g5a+56LGh77yM55So5LqO5a2Y5YKo6Ieq5a6a5LmJ5bGe5oCnXG5cdCAgICB0aGlzLmN1c3RvbSA9IHtcblx0ICAgICAgICBldmVudHM6IHt9LFxuXHQgICAgICAgIHJlcXVlc3RIZWFkZXJzOiB7fSxcblx0ICAgICAgICByZXNwb25zZUhlYWRlcnM6IHt9XG5cdCAgICB9XG5cdH1cblxuXHRNb2NrWE1MSHR0cFJlcXVlc3QuX3NldHRpbmdzID0ge1xuXHQgICAgdGltZW91dDogJzEwLTEwMCcsXG5cdCAgICAvKlxuXHQgICAgICAgIHRpbWVvdXQ6IDUwLFxuXHQgICAgICAgIHRpbWVvdXQ6ICcxMC0xMDAnLFxuXHQgICAgICovXG5cdH1cblxuXHRNb2NrWE1MSHR0cFJlcXVlc3Quc2V0dXAgPSBmdW5jdGlvbihzZXR0aW5ncykge1xuXHQgICAgVXRpbC5leHRlbmQoTW9ja1hNTEh0dHBSZXF1ZXN0Ll9zZXR0aW5ncywgc2V0dGluZ3MpXG5cdCAgICByZXR1cm4gTW9ja1hNTEh0dHBSZXF1ZXN0Ll9zZXR0aW5nc1xuXHR9XG5cblx0VXRpbC5leHRlbmQoTW9ja1hNTEh0dHBSZXF1ZXN0LCBYSFJfU1RBVEVTKVxuXHRVdGlsLmV4dGVuZChNb2NrWE1MSHR0cFJlcXVlc3QucHJvdG90eXBlLCBYSFJfU1RBVEVTKVxuXG5cdC8vIOagh+iusOW9k+WJjeWvueixoeS4uiBNb2NrWE1MSHR0cFJlcXVlc3Rcblx0TW9ja1hNTEh0dHBSZXF1ZXN0LnByb3RvdHlwZS5tb2NrID0gdHJ1ZVxuXG5cdC8vIOaYr+WQpuaLpuaIqiBBamF4IOivt+axglxuXHRNb2NrWE1MSHR0cFJlcXVlc3QucHJvdG90eXBlLm1hdGNoID0gZmFsc2VcblxuXHQvLyDliJ3lp4vljJYgUmVxdWVzdCDnm7jlhbPnmoTlsZ7mgKflkozmlrnms5Vcblx0VXRpbC5leHRlbmQoTW9ja1hNTEh0dHBSZXF1ZXN0LnByb3RvdHlwZSwge1xuXHQgICAgLy8gaHR0cHM6Ly94aHIuc3BlYy53aGF0d2cub3JnLyN0aGUtb3BlbigpLW1ldGhvZFxuXHQgICAgLy8gU2V0cyB0aGUgcmVxdWVzdCBtZXRob2QsIHJlcXVlc3QgVVJMLCBhbmQgc3luY2hyb25vdXMgZmxhZy5cblx0ICAgIG9wZW46IGZ1bmN0aW9uKG1ldGhvZCwgdXJsLCBhc3luYywgdXNlcm5hbWUsIHBhc3N3b3JkKSB7XG5cdCAgICAgICAgdmFyIHRoYXQgPSB0aGlzXG5cblx0ICAgICAgICBVdGlsLmV4dGVuZCh0aGlzLmN1c3RvbSwge1xuXHQgICAgICAgICAgICBtZXRob2Q6IG1ldGhvZCxcblx0ICAgICAgICAgICAgdXJsOiB1cmwsXG5cdCAgICAgICAgICAgIGFzeW5jOiB0eXBlb2YgYXN5bmMgPT09ICdib29sZWFuJyA/IGFzeW5jIDogdHJ1ZSxcblx0ICAgICAgICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lLFxuXHQgICAgICAgICAgICBwYXNzd29yZDogcGFzc3dvcmQsXG5cdCAgICAgICAgICAgIG9wdGlvbnM6IHtcblx0ICAgICAgICAgICAgICAgIHVybDogdXJsLFxuXHQgICAgICAgICAgICAgICAgdHlwZTogbWV0aG9kXG5cdCAgICAgICAgICAgIH1cblx0ICAgICAgICB9KVxuXG5cdCAgICAgICAgdGhpcy5jdXN0b20udGltZW91dCA9IGZ1bmN0aW9uKHRpbWVvdXQpIHtcblx0ICAgICAgICAgICAgaWYgKHR5cGVvZiB0aW1lb3V0ID09PSAnbnVtYmVyJykgcmV0dXJuIHRpbWVvdXRcblx0ICAgICAgICAgICAgaWYgKHR5cGVvZiB0aW1lb3V0ID09PSAnc3RyaW5nJyAmJiAhfnRpbWVvdXQuaW5kZXhPZignLScpKSByZXR1cm4gcGFyc2VJbnQodGltZW91dCwgMTApXG5cdCAgICAgICAgICAgIGlmICh0eXBlb2YgdGltZW91dCA9PT0gJ3N0cmluZycgJiYgfnRpbWVvdXQuaW5kZXhPZignLScpKSB7XG5cdCAgICAgICAgICAgICAgICB2YXIgdG1wID0gdGltZW91dC5zcGxpdCgnLScpXG5cdCAgICAgICAgICAgICAgICB2YXIgbWluID0gcGFyc2VJbnQodG1wWzBdLCAxMClcblx0ICAgICAgICAgICAgICAgIHZhciBtYXggPSBwYXJzZUludCh0bXBbMV0sIDEwKVxuXHQgICAgICAgICAgICAgICAgcmV0dXJuIE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4pKSArIG1pblxuXHQgICAgICAgICAgICB9XG5cdCAgICAgICAgfShNb2NrWE1MSHR0cFJlcXVlc3QuX3NldHRpbmdzLnRpbWVvdXQpXG5cblx0ICAgICAgICAvLyDmn6Xmib7kuI7or7fmsYLlj4LmlbDljLnphY3nmoTmlbDmja7mqKHmnb9cblx0ICAgICAgICB2YXIgaXRlbSA9IGZpbmQodGhpcy5jdXN0b20ub3B0aW9ucylcblxuXHQgICAgICAgIGZ1bmN0aW9uIGhhbmRsZShldmVudCkge1xuXHQgICAgICAgICAgICAvLyDlkIzmraXlsZ7mgKcgTmF0aXZlWE1MSHR0cFJlcXVlc3QgPT4gTW9ja1hNTEh0dHBSZXF1ZXN0XG5cdCAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgWEhSX1JFU1BPTlNFX1BST1BFUlRJRVMubGVuZ3RoOyBpKyspIHtcblx0ICAgICAgICAgICAgICAgIHRyeSB7XG5cdCAgICAgICAgICAgICAgICAgICAgdGhhdFtYSFJfUkVTUE9OU0VfUFJPUEVSVElFU1tpXV0gPSB4aHJbWEhSX1JFU1BPTlNFX1BST1BFUlRJRVNbaV1dXG5cdCAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7fVxuXHQgICAgICAgICAgICB9XG5cdCAgICAgICAgICAgIC8vIOinpuWPkSBNb2NrWE1MSHR0cFJlcXVlc3Qg5LiK55qE5ZCM5ZCN5LqL5Lu2XG5cdCAgICAgICAgICAgIHRoYXQuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoZXZlbnQudHlwZSAvKiwgZmFsc2UsIGZhbHNlLCB0aGF0Ki8gKSlcblx0ICAgICAgICB9XG5cblx0ICAgICAgICAvLyDlpoLmnpzmnKrmib7liLDljLnphY3nmoTmlbDmja7mqKHmnb/vvIzliJnph4fnlKjljp/nlJ8gWEhSIOWPkemAgeivt+axguOAglxuXHQgICAgICAgIGlmICghaXRlbSkge1xuXHQgICAgICAgICAgICAvLyDliJvlu7rljp/nlJ8gWEhSIOWvueixoe+8jOiwg+eUqOWOn+eUnyBvcGVuKCnvvIznm5HlkKzmiYDmnInljp/nlJ/kuovku7Zcblx0ICAgICAgICAgICAgdmFyIHhociA9IGNyZWF0ZU5hdGl2ZVhNTEh0dHBSZXF1ZXN0KClcblx0ICAgICAgICAgICAgdGhpcy5jdXN0b20ueGhyID0geGhyXG5cblx0ICAgICAgICAgICAgLy8g5Yid5aeL5YyW5omA5pyJ5LqL5Lu277yM55So5LqO55uR5ZCs5Y6f55SfIFhIUiDlr7nosaHnmoTkuovku7Zcblx0ICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBYSFJfRVZFTlRTLmxlbmd0aDsgaSsrKSB7XG5cdCAgICAgICAgICAgICAgICB4aHIuYWRkRXZlbnRMaXN0ZW5lcihYSFJfRVZFTlRTW2ldLCBoYW5kbGUpXG5cdCAgICAgICAgICAgIH1cblxuXHQgICAgICAgICAgICAvLyB4aHIub3BlbigpXG5cdCAgICAgICAgICAgIGlmICh1c2VybmFtZSkgeGhyLm9wZW4obWV0aG9kLCB1cmwsIGFzeW5jLCB1c2VybmFtZSwgcGFzc3dvcmQpXG5cdCAgICAgICAgICAgIGVsc2UgeGhyLm9wZW4obWV0aG9kLCB1cmwsIGFzeW5jKVxuXG5cdCAgICAgICAgICAgIC8vIOWQjOatpeWxnuaApyBNb2NrWE1MSHR0cFJlcXVlc3QgPT4gTmF0aXZlWE1MSHR0cFJlcXVlc3Rcblx0ICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBYSFJfUkVRVUVTVF9QUk9QRVJUSUVTLmxlbmd0aDsgaisrKSB7XG5cdCAgICAgICAgICAgICAgICB0cnkge1xuXHQgICAgICAgICAgICAgICAgICAgIHhocltYSFJfUkVRVUVTVF9QUk9QRVJUSUVTW2pdXSA9IHRoYXRbWEhSX1JFUVVFU1RfUFJPUEVSVElFU1tqXV1cblx0ICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHt9XG5cdCAgICAgICAgICAgIH1cblxuXHQgICAgICAgICAgICByZXR1cm5cblx0ICAgICAgICB9XG5cblx0ICAgICAgICAvLyDmib7liLDkuobljLnphY3nmoTmlbDmja7mqKHmnb/vvIzlvIDlp4vmi6bmiKogWEhSIOivt+axglxuXHQgICAgICAgIHRoaXMubWF0Y2ggPSB0cnVlXG5cdCAgICAgICAgdGhpcy5jdXN0b20udGVtcGxhdGUgPSBpdGVtXG5cdCAgICAgICAgdGhpcy5yZWFkeVN0YXRlID0gTW9ja1hNTEh0dHBSZXF1ZXN0Lk9QRU5FRFxuXHQgICAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ3JlYWR5c3RhdGVjaGFuZ2UnIC8qLCBmYWxzZSwgZmFsc2UsIHRoaXMqLyApKVxuXHQgICAgfSxcblx0ICAgIC8vIGh0dHBzOi8veGhyLnNwZWMud2hhdHdnLm9yZy8jdGhlLXNldHJlcXVlc3RoZWFkZXIoKS1tZXRob2Rcblx0ICAgIC8vIENvbWJpbmVzIGEgaGVhZGVyIGluIGF1dGhvciByZXF1ZXN0IGhlYWRlcnMuXG5cdCAgICBzZXRSZXF1ZXN0SGVhZGVyOiBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuXHQgICAgICAgIC8vIOWOn+eUnyBYSFJcblx0ICAgICAgICBpZiAoIXRoaXMubWF0Y2gpIHtcblx0ICAgICAgICAgICAgdGhpcy5jdXN0b20ueGhyLnNldFJlcXVlc3RIZWFkZXIobmFtZSwgdmFsdWUpXG5cdCAgICAgICAgICAgIHJldHVyblxuXHQgICAgICAgIH1cblxuXHQgICAgICAgIC8vIOaLpuaIqiBYSFJcblx0ICAgICAgICB2YXIgcmVxdWVzdEhlYWRlcnMgPSB0aGlzLmN1c3RvbS5yZXF1ZXN0SGVhZGVyc1xuXHQgICAgICAgIGlmIChyZXF1ZXN0SGVhZGVyc1tuYW1lXSkgcmVxdWVzdEhlYWRlcnNbbmFtZV0gKz0gJywnICsgdmFsdWVcblx0ICAgICAgICBlbHNlIHJlcXVlc3RIZWFkZXJzW25hbWVdID0gdmFsdWVcblx0ICAgIH0sXG5cdCAgICB0aW1lb3V0OiAwLFxuXHQgICAgd2l0aENyZWRlbnRpYWxzOiBmYWxzZSxcblx0ICAgIHVwbG9hZDoge30sXG5cdCAgICAvLyBodHRwczovL3hoci5zcGVjLndoYXR3Zy5vcmcvI3RoZS1zZW5kKCktbWV0aG9kXG5cdCAgICAvLyBJbml0aWF0ZXMgdGhlIHJlcXVlc3QuXG5cdCAgICBzZW5kOiBmdW5jdGlvbiBzZW5kKGRhdGEpIHtcblx0ICAgICAgICB2YXIgdGhhdCA9IHRoaXNcblx0ICAgICAgICB0aGlzLmN1c3RvbS5vcHRpb25zLmJvZHkgPSBkYXRhXG5cblx0ICAgICAgICAvLyDljp/nlJ8gWEhSXG5cdCAgICAgICAgaWYgKCF0aGlzLm1hdGNoKSB7XG5cdCAgICAgICAgICAgIHRoaXMuY3VzdG9tLnhoci5zZW5kKGRhdGEpXG5cdCAgICAgICAgICAgIHJldHVyblxuXHQgICAgICAgIH1cblxuXHQgICAgICAgIC8vIOaLpuaIqiBYSFJcblxuXHQgICAgICAgIC8vIFgtUmVxdWVzdGVkLVdpdGggaGVhZGVyXG5cdCAgICAgICAgdGhpcy5zZXRSZXF1ZXN0SGVhZGVyKCdYLVJlcXVlc3RlZC1XaXRoJywgJ01vY2tYTUxIdHRwUmVxdWVzdCcpXG5cblx0ICAgICAgICAvLyBsb2Fkc3RhcnQgVGhlIGZldGNoIGluaXRpYXRlcy5cblx0ICAgICAgICB0aGlzLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdsb2Fkc3RhcnQnIC8qLCBmYWxzZSwgZmFsc2UsIHRoaXMqLyApKVxuXG5cdCAgICAgICAgaWYgKHRoaXMuY3VzdG9tLmFzeW5jKSBzZXRUaW1lb3V0KGRvbmUsIHRoaXMuY3VzdG9tLnRpbWVvdXQpIC8vIOW8guatpVxuXHQgICAgICAgIGVsc2UgZG9uZSgpIC8vIOWQjOatpVxuXG5cdCAgICAgICAgZnVuY3Rpb24gZG9uZSgpIHtcblx0ICAgICAgICAgICAgdGhhdC5yZWFkeVN0YXRlID0gTW9ja1hNTEh0dHBSZXF1ZXN0LkhFQURFUlNfUkVDRUlWRURcblx0ICAgICAgICAgICAgdGhhdC5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgncmVhZHlzdGF0ZWNoYW5nZScgLyosIGZhbHNlLCBmYWxzZSwgdGhhdCovICkpXG5cdCAgICAgICAgICAgIHRoYXQucmVhZHlTdGF0ZSA9IE1vY2tYTUxIdHRwUmVxdWVzdC5MT0FESU5HXG5cdCAgICAgICAgICAgIHRoYXQuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ3JlYWR5c3RhdGVjaGFuZ2UnIC8qLCBmYWxzZSwgZmFsc2UsIHRoYXQqLyApKVxuXG5cdCAgICAgICAgICAgIHRoYXQuc3RhdHVzID0gMjAwXG5cdCAgICAgICAgICAgIHRoYXQuc3RhdHVzVGV4dCA9IEhUVFBfU1RBVFVTX0NPREVTWzIwMF1cblxuXHQgICAgICAgICAgICAvLyBmaXggIzkyICM5MyBieSBAcWRkZWd0eWFcblx0ICAgICAgICAgICAgdGhhdC5yZXNwb25zZSA9IHRoYXQucmVzcG9uc2VUZXh0ID0gSlNPTi5zdHJpbmdpZnkoXG5cdCAgICAgICAgICAgICAgICBjb252ZXJ0KHRoYXQuY3VzdG9tLnRlbXBsYXRlLCB0aGF0LmN1c3RvbS5vcHRpb25zKSxcblx0ICAgICAgICAgICAgICAgIG51bGwsIDRcblx0ICAgICAgICAgICAgKVxuXG5cdCAgICAgICAgICAgIHRoYXQucmVhZHlTdGF0ZSA9IE1vY2tYTUxIdHRwUmVxdWVzdC5ET05FXG5cdCAgICAgICAgICAgIHRoYXQuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ3JlYWR5c3RhdGVjaGFuZ2UnIC8qLCBmYWxzZSwgZmFsc2UsIHRoYXQqLyApKVxuXHQgICAgICAgICAgICB0aGF0LmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdsb2FkJyAvKiwgZmFsc2UsIGZhbHNlLCB0aGF0Ki8gKSk7XG5cdCAgICAgICAgICAgIHRoYXQuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ2xvYWRlbmQnIC8qLCBmYWxzZSwgZmFsc2UsIHRoYXQqLyApKTtcblx0ICAgICAgICB9XG5cdCAgICB9LFxuXHQgICAgLy8gaHR0cHM6Ly94aHIuc3BlYy53aGF0d2cub3JnLyN0aGUtYWJvcnQoKS1tZXRob2Rcblx0ICAgIC8vIENhbmNlbHMgYW55IG5ldHdvcmsgYWN0aXZpdHkuXG5cdCAgICBhYm9ydDogZnVuY3Rpb24gYWJvcnQoKSB7XG5cdCAgICAgICAgLy8g5Y6f55SfIFhIUlxuXHQgICAgICAgIGlmICghdGhpcy5tYXRjaCkge1xuXHQgICAgICAgICAgICB0aGlzLmN1c3RvbS54aHIuYWJvcnQoKVxuXHQgICAgICAgICAgICByZXR1cm5cblx0ICAgICAgICB9XG5cblx0ICAgICAgICAvLyDmi6bmiKogWEhSXG5cdCAgICAgICAgdGhpcy5yZWFkeVN0YXRlID0gTW9ja1hNTEh0dHBSZXF1ZXN0LlVOU0VOVFxuXHQgICAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ2Fib3J0JywgZmFsc2UsIGZhbHNlLCB0aGlzKSlcblx0ICAgICAgICB0aGlzLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdlcnJvcicsIGZhbHNlLCBmYWxzZSwgdGhpcykpXG5cdCAgICB9XG5cdH0pXG5cblx0Ly8g5Yid5aeL5YyWIFJlc3BvbnNlIOebuOWFs+eahOWxnuaAp+WSjOaWueazlVxuXHRVdGlsLmV4dGVuZChNb2NrWE1MSHR0cFJlcXVlc3QucHJvdG90eXBlLCB7XG5cdCAgICByZXNwb25zZVVSTDogJycsXG5cdCAgICBzdGF0dXM6IE1vY2tYTUxIdHRwUmVxdWVzdC5VTlNFTlQsXG5cdCAgICBzdGF0dXNUZXh0OiAnJyxcblx0ICAgIC8vIGh0dHBzOi8veGhyLnNwZWMud2hhdHdnLm9yZy8jdGhlLWdldHJlc3BvbnNlaGVhZGVyKCktbWV0aG9kXG5cdCAgICBnZXRSZXNwb25zZUhlYWRlcjogZnVuY3Rpb24obmFtZSkge1xuXHQgICAgICAgIC8vIOWOn+eUnyBYSFJcblx0ICAgICAgICBpZiAoIXRoaXMubWF0Y2gpIHtcblx0ICAgICAgICAgICAgcmV0dXJuIHRoaXMuY3VzdG9tLnhoci5nZXRSZXNwb25zZUhlYWRlcihuYW1lKVxuXHQgICAgICAgIH1cblxuXHQgICAgICAgIC8vIOaLpuaIqiBYSFJcblx0ICAgICAgICByZXR1cm4gdGhpcy5jdXN0b20ucmVzcG9uc2VIZWFkZXJzW25hbWUudG9Mb3dlckNhc2UoKV1cblx0ICAgIH0sXG5cdCAgICAvLyBodHRwczovL3hoci5zcGVjLndoYXR3Zy5vcmcvI3RoZS1nZXRhbGxyZXNwb25zZWhlYWRlcnMoKS1tZXRob2Rcblx0ICAgIC8vIGh0dHA6Ly93d3cudXRmOC1jaGFydGFibGUuZGUvXG5cdCAgICBnZXRBbGxSZXNwb25zZUhlYWRlcnM6IGZ1bmN0aW9uKCkge1xuXHQgICAgICAgIC8vIOWOn+eUnyBYSFJcblx0ICAgICAgICBpZiAoIXRoaXMubWF0Y2gpIHtcblx0ICAgICAgICAgICAgcmV0dXJuIHRoaXMuY3VzdG9tLnhoci5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKVxuXHQgICAgICAgIH1cblxuXHQgICAgICAgIC8vIOaLpuaIqiBYSFJcblx0ICAgICAgICB2YXIgcmVzcG9uc2VIZWFkZXJzID0gdGhpcy5jdXN0b20ucmVzcG9uc2VIZWFkZXJzXG5cdCAgICAgICAgdmFyIGhlYWRlcnMgPSAnJ1xuXHQgICAgICAgIGZvciAodmFyIGggaW4gcmVzcG9uc2VIZWFkZXJzKSB7XG5cdCAgICAgICAgICAgIGlmICghcmVzcG9uc2VIZWFkZXJzLmhhc093blByb3BlcnR5KGgpKSBjb250aW51ZVxuXHQgICAgICAgICAgICBoZWFkZXJzICs9IGggKyAnOiAnICsgcmVzcG9uc2VIZWFkZXJzW2hdICsgJ1xcclxcbidcblx0ICAgICAgICB9XG5cdCAgICAgICAgcmV0dXJuIGhlYWRlcnNcblx0ICAgIH0sXG5cdCAgICBvdmVycmlkZU1pbWVUeXBlOiBmdW5jdGlvbiggLyptaW1lKi8gKSB7fSxcblx0ICAgIHJlc3BvbnNlVHlwZTogJycsIC8vICcnLCAndGV4dCcsICdhcnJheWJ1ZmZlcicsICdibG9iJywgJ2RvY3VtZW50JywgJ2pzb24nXG5cdCAgICByZXNwb25zZTogbnVsbCxcblx0ICAgIHJlc3BvbnNlVGV4dDogJycsXG5cdCAgICByZXNwb25zZVhNTDogbnVsbFxuXHR9KVxuXG5cdC8vIEV2ZW50VGFyZ2V0XG5cdFV0aWwuZXh0ZW5kKE1vY2tYTUxIdHRwUmVxdWVzdC5wcm90b3R5cGUsIHtcblx0ICAgIGFkZEV2ZW50TGlzdGVuZXI6IGZ1bmN0aW9uIGFkZEV2ZW50TGlzdGVuZXIodHlwZSwgaGFuZGxlKSB7XG5cdCAgICAgICAgdmFyIGV2ZW50cyA9IHRoaXMuY3VzdG9tLmV2ZW50c1xuXHQgICAgICAgIGlmICghZXZlbnRzW3R5cGVdKSBldmVudHNbdHlwZV0gPSBbXVxuXHQgICAgICAgIGV2ZW50c1t0eXBlXS5wdXNoKGhhbmRsZSlcblx0ICAgIH0sXG5cdCAgICByZW1vdmVFdmVudExpc3RlbmVyOiBmdW5jdGlvbiByZW1vdmVFdmVudExpc3RlbmVyKHR5cGUsIGhhbmRsZSkge1xuXHQgICAgICAgIHZhciBoYW5kbGVzID0gdGhpcy5jdXN0b20uZXZlbnRzW3R5cGVdIHx8IFtdXG5cdCAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBoYW5kbGVzLmxlbmd0aDsgaSsrKSB7XG5cdCAgICAgICAgICAgIGlmIChoYW5kbGVzW2ldID09PSBoYW5kbGUpIHtcblx0ICAgICAgICAgICAgICAgIGhhbmRsZXMuc3BsaWNlKGktLSwgMSlcblx0ICAgICAgICAgICAgfVxuXHQgICAgICAgIH1cblx0ICAgIH0sXG5cdCAgICBkaXNwYXRjaEV2ZW50OiBmdW5jdGlvbiBkaXNwYXRjaEV2ZW50KGV2ZW50KSB7XG5cdCAgICAgICAgdmFyIGhhbmRsZXMgPSB0aGlzLmN1c3RvbS5ldmVudHNbZXZlbnQudHlwZV0gfHwgW11cblx0ICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGhhbmRsZXMubGVuZ3RoOyBpKyspIHtcblx0ICAgICAgICAgICAgaGFuZGxlc1tpXS5jYWxsKHRoaXMsIGV2ZW50KVxuXHQgICAgICAgIH1cblxuXHQgICAgICAgIHZhciBvbnR5cGUgPSAnb24nICsgZXZlbnQudHlwZVxuXHQgICAgICAgIGlmICh0aGlzW29udHlwZV0pIHRoaXNbb250eXBlXShldmVudClcblx0ICAgIH1cblx0fSlcblxuXHQvLyBJbnNwaXJlZCBieSBqUXVlcnlcblx0ZnVuY3Rpb24gY3JlYXRlTmF0aXZlWE1MSHR0cFJlcXVlc3QoKSB7XG5cdCAgICB2YXIgaXNMb2NhbCA9IGZ1bmN0aW9uKCkge1xuXHQgICAgICAgIHZhciBybG9jYWxQcm90b2NvbCA9IC9eKD86YWJvdXR8YXBwfGFwcC1zdG9yYWdlfC4rLWV4dGVuc2lvbnxmaWxlfHJlc3x3aWRnZXQpOiQvXG5cdCAgICAgICAgdmFyIHJ1cmwgPSAvXihbXFx3ListXSs6KSg/OlxcL1xcLyhbXlxcLz8jOl0qKSg/OjooXFxkKyl8KXwpL1xuXHQgICAgICAgIHZhciBhamF4TG9jYXRpb24gPSBsb2NhdGlvbi5ocmVmXG5cdCAgICAgICAgdmFyIGFqYXhMb2NQYXJ0cyA9IHJ1cmwuZXhlYyhhamF4TG9jYXRpb24udG9Mb3dlckNhc2UoKSkgfHwgW11cblx0ICAgICAgICByZXR1cm4gcmxvY2FsUHJvdG9jb2wudGVzdChhamF4TG9jUGFydHNbMV0pXG5cdCAgICB9KClcblxuXHQgICAgcmV0dXJuIHdpbmRvdy5BY3RpdmVYT2JqZWN0ID9cblx0ICAgICAgICAoIWlzTG9jYWwgJiYgY3JlYXRlU3RhbmRhcmRYSFIoKSB8fCBjcmVhdGVBY3RpdmVYSFIoKSkgOiBjcmVhdGVTdGFuZGFyZFhIUigpXG5cblx0ICAgIGZ1bmN0aW9uIGNyZWF0ZVN0YW5kYXJkWEhSKCkge1xuXHQgICAgICAgIHRyeSB7XG5cdCAgICAgICAgICAgIHJldHVybiBuZXcgd2luZG93Ll9YTUxIdHRwUmVxdWVzdCgpO1xuXHQgICAgICAgIH0gY2F0Y2ggKGUpIHt9XG5cdCAgICB9XG5cblx0ICAgIGZ1bmN0aW9uIGNyZWF0ZUFjdGl2ZVhIUigpIHtcblx0ICAgICAgICB0cnkge1xuXHQgICAgICAgICAgICByZXR1cm4gbmV3IHdpbmRvdy5fQWN0aXZlWE9iamVjdChcIk1pY3Jvc29mdC5YTUxIVFRQXCIpO1xuXHQgICAgICAgIH0gY2F0Y2ggKGUpIHt9XG5cdCAgICB9XG5cdH1cblxuXG5cdC8vIOafpeaJvuS4juivt+axguWPguaVsOWMuemFjeeahOaVsOaNruaooeadv++8mlVSTO+8jFR5cGVcblx0ZnVuY3Rpb24gZmluZChvcHRpb25zKSB7XG5cblx0ICAgIGZvciAodmFyIHNVcmxUeXBlIGluIE1vY2tYTUxIdHRwUmVxdWVzdC5Nb2NrLl9tb2NrZWQpIHtcblx0ICAgICAgICB2YXIgaXRlbSA9IE1vY2tYTUxIdHRwUmVxdWVzdC5Nb2NrLl9tb2NrZWRbc1VybFR5cGVdXG5cdCAgICAgICAgaWYgKFxuXHQgICAgICAgICAgICAoIWl0ZW0ucnVybCB8fCBtYXRjaChpdGVtLnJ1cmwsIG9wdGlvbnMudXJsKSkgJiZcblx0ICAgICAgICAgICAgKCFpdGVtLnJ0eXBlIHx8IG1hdGNoKGl0ZW0ucnR5cGUsIG9wdGlvbnMudHlwZS50b0xvd2VyQ2FzZSgpKSlcblx0ICAgICAgICApIHtcblx0ICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ1ttb2NrXScsIG9wdGlvbnMudXJsLCAnPicsIGl0ZW0ucnVybClcblx0ICAgICAgICAgICAgcmV0dXJuIGl0ZW1cblx0ICAgICAgICB9XG5cdCAgICB9XG5cblx0ICAgIGZ1bmN0aW9uIG1hdGNoKGV4cGVjdGVkLCBhY3R1YWwpIHtcblx0ICAgICAgICBpZiAoVXRpbC50eXBlKGV4cGVjdGVkKSA9PT0gJ3N0cmluZycpIHtcblx0ICAgICAgICAgICAgcmV0dXJuIGV4cGVjdGVkID09PSBhY3R1YWxcblx0ICAgICAgICB9XG5cdCAgICAgICAgaWYgKFV0aWwudHlwZShleHBlY3RlZCkgPT09ICdyZWdleHAnKSB7XG5cdCAgICAgICAgICAgIHJldHVybiBleHBlY3RlZC50ZXN0KGFjdHVhbClcblx0ICAgICAgICB9XG5cdCAgICB9XG5cblx0fVxuXG5cdC8vIOaVsOaNruaooeadvyDvvJ0+IOWTjeW6lOaVsOaNrlxuXHRmdW5jdGlvbiBjb252ZXJ0KGl0ZW0sIG9wdGlvbnMpIHtcblx0ICAgIHJldHVybiBVdGlsLmlzRnVuY3Rpb24oaXRlbS50ZW1wbGF0ZSkgP1xuXHQgICAgICAgIGl0ZW0udGVtcGxhdGUob3B0aW9ucykgOiBNb2NrWE1MSHR0cFJlcXVlc3QuTW9jay5tb2NrKGl0ZW0udGVtcGxhdGUpXG5cdH1cblxuXHRtb2R1bGUuZXhwb3J0cyA9IE1vY2tYTUxIdHRwUmVxdWVzdFxuXG4vKioqLyB9KVxuLyoqKioqKi8gXSlcbn0pO1xuOyIsIi8vIHNoaW0gZm9yIHVzaW5nIHByb2Nlc3MgaW4gYnJvd3NlclxudmFyIHByb2Nlc3MgPSBtb2R1bGUuZXhwb3J0cyA9IHt9O1xuXG4vLyBjYWNoZWQgZnJvbSB3aGF0ZXZlciBnbG9iYWwgaXMgcHJlc2VudCBzbyB0aGF0IHRlc3QgcnVubmVycyB0aGF0IHN0dWIgaXRcbi8vIGRvbid0IGJyZWFrIHRoaW5ncy4gIEJ1dCB3ZSBuZWVkIHRvIHdyYXAgaXQgaW4gYSB0cnkgY2F0Y2ggaW4gY2FzZSBpdCBpc1xuLy8gd3JhcHBlZCBpbiBzdHJpY3QgbW9kZSBjb2RlIHdoaWNoIGRvZXNuJ3QgZGVmaW5lIGFueSBnbG9iYWxzLiAgSXQncyBpbnNpZGUgYVxuLy8gZnVuY3Rpb24gYmVjYXVzZSB0cnkvY2F0Y2hlcyBkZW9wdGltaXplIGluIGNlcnRhaW4gZW5naW5lcy5cblxudmFyIGNhY2hlZFNldFRpbWVvdXQ7XG52YXIgY2FjaGVkQ2xlYXJUaW1lb3V0O1xuXG5mdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCkge1xuICAgIHRocm93IG5ldyBFcnJvcignc2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuZnVuY3Rpb24gZGVmYXVsdENsZWFyVGltZW91dCAoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbihmdW5jdGlvbiAoKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBzZXRUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBjbGVhclRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgfVxufSAoKSlcbmZ1bmN0aW9uIHJ1blRpbWVvdXQoZnVuKSB7XG4gICAgaWYgKGNhY2hlZFNldFRpbWVvdXQgPT09IHNldFRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIC8vIGlmIHNldFRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRTZXRUaW1lb3V0ID09PSBkZWZhdWx0U2V0VGltb3V0IHx8ICFjYWNoZWRTZXRUaW1lb3V0KSAmJiBzZXRUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfSBjYXRjaChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbChudWxsLCBmdW4sIDApO1xuICAgICAgICB9IGNhdGNoKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3JcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwodGhpcywgZnVuLCAwKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG59XG5mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQobWFya2VyKSB7XG4gICAgaWYgKGNhY2hlZENsZWFyVGltZW91dCA9PT0gY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIC8vIGlmIGNsZWFyVGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZENsZWFyVGltZW91dCA9PT0gZGVmYXVsdENsZWFyVGltZW91dCB8fCAhY2FjaGVkQ2xlYXJUaW1lb3V0KSAmJiBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0ICB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKG51bGwsIG1hcmtlcik7XG4gICAgICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3IuXG4gICAgICAgICAgICAvLyBTb21lIHZlcnNpb25zIG9mIEkuRS4gaGF2ZSBkaWZmZXJlbnQgcnVsZXMgZm9yIGNsZWFyVGltZW91dCB2cyBzZXRUaW1lb3V0XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwodGhpcywgbWFya2VyKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG5cbn1cbnZhciBxdWV1ZSA9IFtdO1xudmFyIGRyYWluaW5nID0gZmFsc2U7XG52YXIgY3VycmVudFF1ZXVlO1xudmFyIHF1ZXVlSW5kZXggPSAtMTtcblxuZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCkge1xuICAgIGlmICghZHJhaW5pbmcgfHwgIWN1cnJlbnRRdWV1ZSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgaWYgKGN1cnJlbnRRdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgcXVldWUgPSBjdXJyZW50UXVldWUuY29uY2F0KHF1ZXVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgfVxuICAgIGlmIChxdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgZHJhaW5RdWV1ZSgpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZHJhaW5RdWV1ZSgpIHtcbiAgICBpZiAoZHJhaW5pbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgdGltZW91dCA9IHJ1blRpbWVvdXQoY2xlYW5VcE5leHRUaWNrKTtcbiAgICBkcmFpbmluZyA9IHRydWU7XG5cbiAgICB2YXIgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIHdoaWxlKGxlbikge1xuICAgICAgICBjdXJyZW50UXVldWUgPSBxdWV1ZTtcbiAgICAgICAgcXVldWUgPSBbXTtcbiAgICAgICAgd2hpbGUgKCsrcXVldWVJbmRleCA8IGxlbikge1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRRdWV1ZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRRdWV1ZVtxdWV1ZUluZGV4XS5ydW4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgICAgIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB9XG4gICAgY3VycmVudFF1ZXVlID0gbnVsbDtcbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIHJ1bkNsZWFyVGltZW91dCh0aW1lb3V0KTtcbn1cblxucHJvY2Vzcy5uZXh0VGljayA9IGZ1bmN0aW9uIChmdW4pIHtcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoIC0gMSk7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBhcmdzW2kgLSAxXSA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBxdWV1ZS5wdXNoKG5ldyBJdGVtKGZ1biwgYXJncykpO1xuICAgIGlmIChxdWV1ZS5sZW5ndGggPT09IDEgJiYgIWRyYWluaW5nKSB7XG4gICAgICAgIHJ1blRpbWVvdXQoZHJhaW5RdWV1ZSk7XG4gICAgfVxufTtcblxuLy8gdjggbGlrZXMgcHJlZGljdGlibGUgb2JqZWN0c1xuZnVuY3Rpb24gSXRlbShmdW4sIGFycmF5KSB7XG4gICAgdGhpcy5mdW4gPSBmdW47XG4gICAgdGhpcy5hcnJheSA9IGFycmF5O1xufVxuSXRlbS5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZnVuLmFwcGx5KG51bGwsIHRoaXMuYXJyYXkpO1xufTtcbnByb2Nlc3MudGl0bGUgPSAnYnJvd3Nlcic7XG5wcm9jZXNzLmJyb3dzZXIgPSB0cnVlO1xucHJvY2Vzcy5lbnYgPSB7fTtcbnByb2Nlc3MuYXJndiA9IFtdO1xucHJvY2Vzcy52ZXJzaW9uID0gJyc7IC8vIGVtcHR5IHN0cmluZyB0byBhdm9pZCByZWdleHAgaXNzdWVzXG5wcm9jZXNzLnZlcnNpb25zID0ge307XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG5wcm9jZXNzLm9uID0gbm9vcDtcbnByb2Nlc3MuYWRkTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5vbmNlID0gbm9vcDtcbnByb2Nlc3Mub2ZmID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBub29wO1xucHJvY2Vzcy5lbWl0ID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZE9uY2VMaXN0ZW5lciA9IG5vb3A7XG5cbnByb2Nlc3MubGlzdGVuZXJzID0gZnVuY3Rpb24gKG5hbWUpIHsgcmV0dXJuIFtdIH1cblxucHJvY2Vzcy5iaW5kaW5nID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xuXG5wcm9jZXNzLmN3ZCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICcvJyB9O1xucHJvY2Vzcy5jaGRpciA9IGZ1bmN0aW9uIChkaXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcbnByb2Nlc3MudW1hc2sgPSBmdW5jdGlvbigpIHsgcmV0dXJuIDA7IH07XG4iLCJ2YXIgc2NvcGUgPSAodHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBnbG9iYWwpIHx8XG4gICAgICAgICAgICAodHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgJiYgc2VsZikgfHxcbiAgICAgICAgICAgIHdpbmRvdztcbnZhciBhcHBseSA9IEZ1bmN0aW9uLnByb3RvdHlwZS5hcHBseTtcblxuLy8gRE9NIEFQSXMsIGZvciBjb21wbGV0ZW5lc3NcblxuZXhwb3J0cy5zZXRUaW1lb3V0ID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgVGltZW91dChhcHBseS5jYWxsKHNldFRpbWVvdXQsIHNjb3BlLCBhcmd1bWVudHMpLCBjbGVhclRpbWVvdXQpO1xufTtcbmV4cG9ydHMuc2V0SW50ZXJ2YWwgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBUaW1lb3V0KGFwcGx5LmNhbGwoc2V0SW50ZXJ2YWwsIHNjb3BlLCBhcmd1bWVudHMpLCBjbGVhckludGVydmFsKTtcbn07XG5leHBvcnRzLmNsZWFyVGltZW91dCA9XG5leHBvcnRzLmNsZWFySW50ZXJ2YWwgPSBmdW5jdGlvbih0aW1lb3V0KSB7XG4gIGlmICh0aW1lb3V0KSB7XG4gICAgdGltZW91dC5jbG9zZSgpO1xuICB9XG59O1xuXG5mdW5jdGlvbiBUaW1lb3V0KGlkLCBjbGVhckZuKSB7XG4gIHRoaXMuX2lkID0gaWQ7XG4gIHRoaXMuX2NsZWFyRm4gPSBjbGVhckZuO1xufVxuVGltZW91dC5wcm90b3R5cGUudW5yZWYgPSBUaW1lb3V0LnByb3RvdHlwZS5yZWYgPSBmdW5jdGlvbigpIHt9O1xuVGltZW91dC5wcm90b3R5cGUuY2xvc2UgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5fY2xlYXJGbi5jYWxsKHNjb3BlLCB0aGlzLl9pZCk7XG59O1xuXG4vLyBEb2VzIG5vdCBzdGFydCB0aGUgdGltZSwganVzdCBzZXRzIHVwIHRoZSBtZW1iZXJzIG5lZWRlZC5cbmV4cG9ydHMuZW5yb2xsID0gZnVuY3Rpb24oaXRlbSwgbXNlY3MpIHtcbiAgY2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO1xuICBpdGVtLl9pZGxlVGltZW91dCA9IG1zZWNzO1xufTtcblxuZXhwb3J0cy51bmVucm9sbCA9IGZ1bmN0aW9uKGl0ZW0pIHtcbiAgY2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO1xuICBpdGVtLl9pZGxlVGltZW91dCA9IC0xO1xufTtcblxuZXhwb3J0cy5fdW5yZWZBY3RpdmUgPSBleHBvcnRzLmFjdGl2ZSA9IGZ1bmN0aW9uKGl0ZW0pIHtcbiAgY2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO1xuXG4gIHZhciBtc2VjcyA9IGl0ZW0uX2lkbGVUaW1lb3V0O1xuICBpZiAobXNlY3MgPj0gMCkge1xuICAgIGl0ZW0uX2lkbGVUaW1lb3V0SWQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uIG9uVGltZW91dCgpIHtcbiAgICAgIGlmIChpdGVtLl9vblRpbWVvdXQpXG4gICAgICAgIGl0ZW0uX29uVGltZW91dCgpO1xuICAgIH0sIG1zZWNzKTtcbiAgfVxufTtcblxuLy8gc2V0aW1tZWRpYXRlIGF0dGFjaGVzIGl0c2VsZiB0byB0aGUgZ2xvYmFsIG9iamVjdFxucmVxdWlyZShcInNldGltbWVkaWF0ZVwiKTtcbi8vIE9uIHNvbWUgZXhvdGljIGVudmlyb25tZW50cywgaXQncyBub3QgY2xlYXIgd2hpY2ggb2JqZWN0IGBzZXRpbW1lZGlhdGVgIHdhc1xuLy8gYWJsZSB0byBpbnN0YWxsIG9udG8uICBTZWFyY2ggZWFjaCBwb3NzaWJpbGl0eSBpbiB0aGUgc2FtZSBvcmRlciBhcyB0aGVcbi8vIGBzZXRpbW1lZGlhdGVgIGxpYnJhcnkuXG5leHBvcnRzLnNldEltbWVkaWF0ZSA9ICh0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiAmJiBzZWxmLnNldEltbWVkaWF0ZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgZ2xvYmFsLnNldEltbWVkaWF0ZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgKHRoaXMgJiYgdGhpcy5zZXRJbW1lZGlhdGUpO1xuZXhwb3J0cy5jbGVhckltbWVkaWF0ZSA9ICh0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiAmJiBzZWxmLmNsZWFySW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiICYmIGdsb2JhbC5jbGVhckltbWVkaWF0ZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAodGhpcyAmJiB0aGlzLmNsZWFySW1tZWRpYXRlKTtcbiIsIihmdW5jdGlvbiAoZ2xvYmFsLCB1bmRlZmluZWQpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgIGlmIChnbG9iYWwuc2V0SW1tZWRpYXRlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgbmV4dEhhbmRsZSA9IDE7IC8vIFNwZWMgc2F5cyBncmVhdGVyIHRoYW4gemVyb1xuICAgIHZhciB0YXNrc0J5SGFuZGxlID0ge307XG4gICAgdmFyIGN1cnJlbnRseVJ1bm5pbmdBVGFzayA9IGZhbHNlO1xuICAgIHZhciBkb2MgPSBnbG9iYWwuZG9jdW1lbnQ7XG4gICAgdmFyIHJlZ2lzdGVySW1tZWRpYXRlO1xuXG4gICAgZnVuY3Rpb24gc2V0SW1tZWRpYXRlKGNhbGxiYWNrKSB7XG4gICAgICAvLyBDYWxsYmFjayBjYW4gZWl0aGVyIGJlIGEgZnVuY3Rpb24gb3IgYSBzdHJpbmdcbiAgICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgIT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICBjYWxsYmFjayA9IG5ldyBGdW5jdGlvbihcIlwiICsgY2FsbGJhY2spO1xuICAgICAgfVxuICAgICAgLy8gQ29weSBmdW5jdGlvbiBhcmd1bWVudHNcbiAgICAgIHZhciBhcmdzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGggLSAxKTtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJncy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGFyZ3NbaV0gPSBhcmd1bWVudHNbaSArIDFdO1xuICAgICAgfVxuICAgICAgLy8gU3RvcmUgYW5kIHJlZ2lzdGVyIHRoZSB0YXNrXG4gICAgICB2YXIgdGFzayA9IHsgY2FsbGJhY2s6IGNhbGxiYWNrLCBhcmdzOiBhcmdzIH07XG4gICAgICB0YXNrc0J5SGFuZGxlW25leHRIYW5kbGVdID0gdGFzaztcbiAgICAgIHJlZ2lzdGVySW1tZWRpYXRlKG5leHRIYW5kbGUpO1xuICAgICAgcmV0dXJuIG5leHRIYW5kbGUrKztcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjbGVhckltbWVkaWF0ZShoYW5kbGUpIHtcbiAgICAgICAgZGVsZXRlIHRhc2tzQnlIYW5kbGVbaGFuZGxlXTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBydW4odGFzaykge1xuICAgICAgICB2YXIgY2FsbGJhY2sgPSB0YXNrLmNhbGxiYWNrO1xuICAgICAgICB2YXIgYXJncyA9IHRhc2suYXJncztcbiAgICAgICAgc3dpdGNoIChhcmdzLmxlbmd0aCkge1xuICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgIGNhbGxiYWNrKGFyZ3NbMF0pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgIGNhbGxiYWNrKGFyZ3NbMF0sIGFyZ3NbMV0pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgIGNhbGxiYWNrKGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBjYWxsYmFjay5hcHBseSh1bmRlZmluZWQsIGFyZ3MpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBydW5JZlByZXNlbnQoaGFuZGxlKSB7XG4gICAgICAgIC8vIEZyb20gdGhlIHNwZWM6IFwiV2FpdCB1bnRpbCBhbnkgaW52b2NhdGlvbnMgb2YgdGhpcyBhbGdvcml0aG0gc3RhcnRlZCBiZWZvcmUgdGhpcyBvbmUgaGF2ZSBjb21wbGV0ZWQuXCJcbiAgICAgICAgLy8gU28gaWYgd2UncmUgY3VycmVudGx5IHJ1bm5pbmcgYSB0YXNrLCB3ZSdsbCBuZWVkIHRvIGRlbGF5IHRoaXMgaW52b2NhdGlvbi5cbiAgICAgICAgaWYgKGN1cnJlbnRseVJ1bm5pbmdBVGFzaykge1xuICAgICAgICAgICAgLy8gRGVsYXkgYnkgZG9pbmcgYSBzZXRUaW1lb3V0LiBzZXRJbW1lZGlhdGUgd2FzIHRyaWVkIGluc3RlYWQsIGJ1dCBpbiBGaXJlZm94IDcgaXQgZ2VuZXJhdGVkIGFcbiAgICAgICAgICAgIC8vIFwidG9vIG11Y2ggcmVjdXJzaW9uXCIgZXJyb3IuXG4gICAgICAgICAgICBzZXRUaW1lb3V0KHJ1bklmUHJlc2VudCwgMCwgaGFuZGxlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZhciB0YXNrID0gdGFza3NCeUhhbmRsZVtoYW5kbGVdO1xuICAgICAgICAgICAgaWYgKHRhc2spIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50bHlSdW5uaW5nQVRhc2sgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHJ1bih0YXNrKTtcbiAgICAgICAgICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgICAgICAgICBjbGVhckltbWVkaWF0ZShoYW5kbGUpO1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50bHlSdW5uaW5nQVRhc2sgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbnN0YWxsTmV4dFRpY2tJbXBsZW1lbnRhdGlvbigpIHtcbiAgICAgICAgcmVnaXN0ZXJJbW1lZGlhdGUgPSBmdW5jdGlvbihoYW5kbGUpIHtcbiAgICAgICAgICAgIHByb2Nlc3MubmV4dFRpY2soZnVuY3Rpb24gKCkgeyBydW5JZlByZXNlbnQoaGFuZGxlKTsgfSk7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY2FuVXNlUG9zdE1lc3NhZ2UoKSB7XG4gICAgICAgIC8vIFRoZSB0ZXN0IGFnYWluc3QgYGltcG9ydFNjcmlwdHNgIHByZXZlbnRzIHRoaXMgaW1wbGVtZW50YXRpb24gZnJvbSBiZWluZyBpbnN0YWxsZWQgaW5zaWRlIGEgd2ViIHdvcmtlcixcbiAgICAgICAgLy8gd2hlcmUgYGdsb2JhbC5wb3N0TWVzc2FnZWAgbWVhbnMgc29tZXRoaW5nIGNvbXBsZXRlbHkgZGlmZmVyZW50IGFuZCBjYW4ndCBiZSB1c2VkIGZvciB0aGlzIHB1cnBvc2UuXG4gICAgICAgIGlmIChnbG9iYWwucG9zdE1lc3NhZ2UgJiYgIWdsb2JhbC5pbXBvcnRTY3JpcHRzKSB7XG4gICAgICAgICAgICB2YXIgcG9zdE1lc3NhZ2VJc0FzeW5jaHJvbm91cyA9IHRydWU7XG4gICAgICAgICAgICB2YXIgb2xkT25NZXNzYWdlID0gZ2xvYmFsLm9ubWVzc2FnZTtcbiAgICAgICAgICAgIGdsb2JhbC5vbm1lc3NhZ2UgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBwb3N0TWVzc2FnZUlzQXN5bmNocm9ub3VzID0gZmFsc2U7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgZ2xvYmFsLnBvc3RNZXNzYWdlKFwiXCIsIFwiKlwiKTtcbiAgICAgICAgICAgIGdsb2JhbC5vbm1lc3NhZ2UgPSBvbGRPbk1lc3NhZ2U7XG4gICAgICAgICAgICByZXR1cm4gcG9zdE1lc3NhZ2VJc0FzeW5jaHJvbm91cztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGluc3RhbGxQb3N0TWVzc2FnZUltcGxlbWVudGF0aW9uKCkge1xuICAgICAgICAvLyBJbnN0YWxscyBhbiBldmVudCBoYW5kbGVyIG9uIGBnbG9iYWxgIGZvciB0aGUgYG1lc3NhZ2VgIGV2ZW50OiBzZWVcbiAgICAgICAgLy8gKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi9ET00vd2luZG93LnBvc3RNZXNzYWdlXG4gICAgICAgIC8vICogaHR0cDovL3d3dy53aGF0d2cub3JnL3NwZWNzL3dlYi1hcHBzL2N1cnJlbnQtd29yay9tdWx0aXBhZ2UvY29tbXMuaHRtbCNjcm9zc0RvY3VtZW50TWVzc2FnZXNcblxuICAgICAgICB2YXIgbWVzc2FnZVByZWZpeCA9IFwic2V0SW1tZWRpYXRlJFwiICsgTWF0aC5yYW5kb20oKSArIFwiJFwiO1xuICAgICAgICB2YXIgb25HbG9iYWxNZXNzYWdlID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICAgIGlmIChldmVudC5zb3VyY2UgPT09IGdsb2JhbCAmJlxuICAgICAgICAgICAgICAgIHR5cGVvZiBldmVudC5kYXRhID09PSBcInN0cmluZ1wiICYmXG4gICAgICAgICAgICAgICAgZXZlbnQuZGF0YS5pbmRleE9mKG1lc3NhZ2VQcmVmaXgpID09PSAwKSB7XG4gICAgICAgICAgICAgICAgcnVuSWZQcmVzZW50KCtldmVudC5kYXRhLnNsaWNlKG1lc3NhZ2VQcmVmaXgubGVuZ3RoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgaWYgKGdsb2JhbC5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICAgICAgICBnbG9iYWwuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIiwgb25HbG9iYWxNZXNzYWdlLCBmYWxzZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBnbG9iYWwuYXR0YWNoRXZlbnQoXCJvbm1lc3NhZ2VcIiwgb25HbG9iYWxNZXNzYWdlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJlZ2lzdGVySW1tZWRpYXRlID0gZnVuY3Rpb24oaGFuZGxlKSB7XG4gICAgICAgICAgICBnbG9iYWwucG9zdE1lc3NhZ2UobWVzc2FnZVByZWZpeCArIGhhbmRsZSwgXCIqXCIpO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGluc3RhbGxNZXNzYWdlQ2hhbm5lbEltcGxlbWVudGF0aW9uKCkge1xuICAgICAgICB2YXIgY2hhbm5lbCA9IG5ldyBNZXNzYWdlQ2hhbm5lbCgpO1xuICAgICAgICBjaGFubmVsLnBvcnQxLm9ubWVzc2FnZSA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgICAgICB2YXIgaGFuZGxlID0gZXZlbnQuZGF0YTtcbiAgICAgICAgICAgIHJ1bklmUHJlc2VudChoYW5kbGUpO1xuICAgICAgICB9O1xuXG4gICAgICAgIHJlZ2lzdGVySW1tZWRpYXRlID0gZnVuY3Rpb24oaGFuZGxlKSB7XG4gICAgICAgICAgICBjaGFubmVsLnBvcnQyLnBvc3RNZXNzYWdlKGhhbmRsZSk7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaW5zdGFsbFJlYWR5U3RhdGVDaGFuZ2VJbXBsZW1lbnRhdGlvbigpIHtcbiAgICAgICAgdmFyIGh0bWwgPSBkb2MuZG9jdW1lbnRFbGVtZW50O1xuICAgICAgICByZWdpc3RlckltbWVkaWF0ZSA9IGZ1bmN0aW9uKGhhbmRsZSkge1xuICAgICAgICAgICAgLy8gQ3JlYXRlIGEgPHNjcmlwdD4gZWxlbWVudDsgaXRzIHJlYWR5c3RhdGVjaGFuZ2UgZXZlbnQgd2lsbCBiZSBmaXJlZCBhc3luY2hyb25vdXNseSBvbmNlIGl0IGlzIGluc2VydGVkXG4gICAgICAgICAgICAvLyBpbnRvIHRoZSBkb2N1bWVudC4gRG8gc28sIHRodXMgcXVldWluZyB1cCB0aGUgdGFzay4gUmVtZW1iZXIgdG8gY2xlYW4gdXAgb25jZSBpdCdzIGJlZW4gY2FsbGVkLlxuICAgICAgICAgICAgdmFyIHNjcmlwdCA9IGRvYy5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO1xuICAgICAgICAgICAgc2NyaXB0Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBydW5JZlByZXNlbnQoaGFuZGxlKTtcbiAgICAgICAgICAgICAgICBzY3JpcHQub25yZWFkeXN0YXRlY2hhbmdlID0gbnVsbDtcbiAgICAgICAgICAgICAgICBodG1sLnJlbW92ZUNoaWxkKHNjcmlwdCk7XG4gICAgICAgICAgICAgICAgc2NyaXB0ID0gbnVsbDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBodG1sLmFwcGVuZENoaWxkKHNjcmlwdCk7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaW5zdGFsbFNldFRpbWVvdXRJbXBsZW1lbnRhdGlvbigpIHtcbiAgICAgICAgcmVnaXN0ZXJJbW1lZGlhdGUgPSBmdW5jdGlvbihoYW5kbGUpIHtcbiAgICAgICAgICAgIHNldFRpbWVvdXQocnVuSWZQcmVzZW50LCAwLCBoYW5kbGUpO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIC8vIElmIHN1cHBvcnRlZCwgd2Ugc2hvdWxkIGF0dGFjaCB0byB0aGUgcHJvdG90eXBlIG9mIGdsb2JhbCwgc2luY2UgdGhhdCBpcyB3aGVyZSBzZXRUaW1lb3V0IGV0IGFsLiBsaXZlLlxuICAgIHZhciBhdHRhY2hUbyA9IE9iamVjdC5nZXRQcm90b3R5cGVPZiAmJiBPYmplY3QuZ2V0UHJvdG90eXBlT2YoZ2xvYmFsKTtcbiAgICBhdHRhY2hUbyA9IGF0dGFjaFRvICYmIGF0dGFjaFRvLnNldFRpbWVvdXQgPyBhdHRhY2hUbyA6IGdsb2JhbDtcblxuICAgIC8vIERvbid0IGdldCBmb29sZWQgYnkgZS5nLiBicm93c2VyaWZ5IGVudmlyb25tZW50cy5cbiAgICBpZiAoe30udG9TdHJpbmcuY2FsbChnbG9iYWwucHJvY2VzcykgPT09IFwiW29iamVjdCBwcm9jZXNzXVwiKSB7XG4gICAgICAgIC8vIEZvciBOb2RlLmpzIGJlZm9yZSAwLjlcbiAgICAgICAgaW5zdGFsbE5leHRUaWNrSW1wbGVtZW50YXRpb24oKTtcblxuICAgIH0gZWxzZSBpZiAoY2FuVXNlUG9zdE1lc3NhZ2UoKSkge1xuICAgICAgICAvLyBGb3Igbm9uLUlFMTAgbW9kZXJuIGJyb3dzZXJzXG4gICAgICAgIGluc3RhbGxQb3N0TWVzc2FnZUltcGxlbWVudGF0aW9uKCk7XG5cbiAgICB9IGVsc2UgaWYgKGdsb2JhbC5NZXNzYWdlQ2hhbm5lbCkge1xuICAgICAgICAvLyBGb3Igd2ViIHdvcmtlcnMsIHdoZXJlIHN1cHBvcnRlZFxuICAgICAgICBpbnN0YWxsTWVzc2FnZUNoYW5uZWxJbXBsZW1lbnRhdGlvbigpO1xuXG4gICAgfSBlbHNlIGlmIChkb2MgJiYgXCJvbnJlYWR5c3RhdGVjaGFuZ2VcIiBpbiBkb2MuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKSkge1xuICAgICAgICAvLyBGb3IgSUUgNuKAkzhcbiAgICAgICAgaW5zdGFsbFJlYWR5U3RhdGVDaGFuZ2VJbXBsZW1lbnRhdGlvbigpO1xuXG4gICAgfSBlbHNlIHtcbiAgICAgICAgLy8gRm9yIG9sZGVyIGJyb3dzZXJzXG4gICAgICAgIGluc3RhbGxTZXRUaW1lb3V0SW1wbGVtZW50YXRpb24oKTtcbiAgICB9XG5cbiAgICBhdHRhY2hUby5zZXRJbW1lZGlhdGUgPSBzZXRJbW1lZGlhdGU7XG4gICAgYXR0YWNoVG8uY2xlYXJJbW1lZGlhdGUgPSBjbGVhckltbWVkaWF0ZTtcbn0odHlwZW9mIHNlbGYgPT09IFwidW5kZWZpbmVkXCIgPyB0eXBlb2YgZ2xvYmFsID09PSBcInVuZGVmaW5lZFwiID8gdGhpcyA6IGdsb2JhbCA6IHNlbGYpKTtcbiIsIi8qISBlcnVkYSB2Mi4yLjEgaHR0cHM6Ly9lcnVkYS5saXJpbGlyaS5pby8gKi9cbiFmdW5jdGlvbih0LGUpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPWUoKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtdLGUpOlwib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzP2V4cG9ydHMuZXJ1ZGE9ZSgpOnQuZXJ1ZGE9ZSgpfSh3aW5kb3csKGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBlPXt9O2Z1bmN0aW9uIG4oaSl7aWYoZVtpXSlyZXR1cm4gZVtpXS5leHBvcnRzO3ZhciByPWVbaV09e2k6aSxsOiExLGV4cG9ydHM6e319O3JldHVybiB0W2ldLmNhbGwoci5leHBvcnRzLHIsci5leHBvcnRzLG4pLHIubD0hMCxyLmV4cG9ydHN9cmV0dXJuIG4ubT10LG4uYz1lLG4uZD1mdW5jdGlvbih0LGUsaSl7bi5vKHQsZSl8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUse2VudW1lcmFibGU6ITAsZ2V0Oml9KX0sbi5yPWZ1bmN0aW9uKHQpe1widW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbC50b1N0cmluZ1RhZyYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsU3ltYm9sLnRvU3RyaW5nVGFnLHt2YWx1ZTpcIk1vZHVsZVwifSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSl9LG4udD1mdW5jdGlvbih0LGUpe2lmKDEmZSYmKHQ9bih0KSksOCZlKXJldHVybiB0O2lmKDQmZSYmXCJvYmplY3RcIj09dHlwZW9mIHQmJnQmJnQuX19lc01vZHVsZSlyZXR1cm4gdDt2YXIgaT1PYmplY3QuY3JlYXRlKG51bGwpO2lmKG4ucihpKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoaSxcImRlZmF1bHRcIix7ZW51bWVyYWJsZTohMCx2YWx1ZTp0fSksMiZlJiZcInN0cmluZ1wiIT10eXBlb2YgdClmb3IodmFyIHIgaW4gdCluLmQoaSxyLGZ1bmN0aW9uKGUpe3JldHVybiB0W2VdfS5iaW5kKG51bGwscikpO3JldHVybiBpfSxuLm49ZnVuY3Rpb24odCl7dmFyIGU9dCYmdC5fX2VzTW9kdWxlP2Z1bmN0aW9uKCl7cmV0dXJuIHQuZGVmYXVsdH06ZnVuY3Rpb24oKXtyZXR1cm4gdH07cmV0dXJuIG4uZChlLFwiYVwiLGUpLGV9LG4ubz1mdW5jdGlvbih0LGUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKX0sbi5wPVwiL2Fzc2V0cy9cIixuKG4ucz0zMCl9KFtmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7KGZ1bmN0aW9uKHQsaSxyKXtuLmQoZSxcImJiXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIGp9KSksbi5kKGUsXCJZXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIEF9KSksbi5kKGUsXCJVXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIFN9KSksbi5kKGUsXCJpYlwiLChmdW5jdGlvbigpe3JldHVybiBSfSkpLG4uZChlLFwiWlwiLChmdW5jdGlvbigpe3JldHVybiBGfSkpLG4uZChlLFwiemJcIiwoZnVuY3Rpb24oKXtyZXR1cm4gVX0pKSxuLmQoZSxcImFiXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIFh9KSksbi5kKGUsXCJ0XCIsKGZ1bmN0aW9uKCl7cmV0dXJuIEp9KSksbi5kKGUsXCJ2XCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHR0fSkpLG4uZChlLFwid1wiLChmdW5jdGlvbigpe3JldHVybiBldH0pKSxuLmQoZSxcInhcIiwoZnVuY3Rpb24oKXtyZXR1cm4gaXR9KSksbi5kKGUsXCJ5XCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHJ0fSkpLG4uZChlLFwiQVwiLChmdW5jdGlvbigpe3JldHVybiBhdH0pKSxuLmQoZSxcIkNcIiwoZnVuY3Rpb24oKXtyZXR1cm4gb3R9KSksbi5kKGUsXCJFYlwiLChmdW5jdGlvbigpe3JldHVybiBzdH0pKSxuLmQoZSxcIkVcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdXR9KSksbi5kKGUsXCJHXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIGh0fSkpLG4uZChlLFwicWJcIiwoZnVuY3Rpb24oKXtyZXR1cm4gZHR9KSksbi5kKGUsXCJOXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIGd0fSkpLG4uZChlLFwiVFwiLChmdW5jdGlvbigpe3JldHVybiB5dH0pKSxuLmQoZSxcInVcIiwoZnVuY3Rpb24oKXtyZXR1cm4geHR9KSksbi5kKGUsXCJYXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIEV0fSkpLG4uZChlLFwibVwiLChmdW5jdGlvbigpe3JldHVybiBqdH0pKSxuLmQoZSxcIkxcIiwoZnVuY3Rpb24oKXtyZXR1cm4gQXR9KSksbi5kKGUsXCJIXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIFN0fSkpLG4uZChlLFwidGJcIiwoZnVuY3Rpb24oKXtyZXR1cm4gVHR9KSksbi5kKGUsXCJJXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIEN0fSkpLG4uZChlLFwiS1wiLChmdW5jdGlvbigpe3JldHVybiBQdH0pKSxuLmQoZSxcIk1cIiwoZnVuY3Rpb24oKXtyZXR1cm4gRHR9KSksbi5kKGUsXCJPXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIFJ0fSkpLG4uZChlLFwiUFwiLChmdW5jdGlvbigpe3JldHVybiBNdH0pKSxuLmQoZSxcIlFcIiwoZnVuY3Rpb24oKXtyZXR1cm4genR9KSksbi5kKGUsXCJSXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIEh0fSkpLG4uZChlLFwiU1wiLChmdW5jdGlvbigpe3JldHVybiBVdH0pKSxuLmQoZSxcIlZcIiwoZnVuY3Rpb24oKXtyZXR1cm4gR3R9KSksbi5kKGUsXCJXXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIFd0fSkpLG4uZChlLFwiZGJcIiwoZnVuY3Rpb24oKXtyZXR1cm4gVnR9KSksbi5kKGUsXCJlYlwiLChmdW5jdGlvbigpe3JldHVybiBYdH0pKSxuLmQoZSxcIm9cIiwoZnVuY3Rpb24oKXtyZXR1cm4gUXR9KSksbi5kKGUsXCJCXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIG5lfSkpLG4uZChlLFwiRGJcIiwoZnVuY3Rpb24oKXtyZXR1cm4gcmV9KSksbi5kKGUsXCJyXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIG9lfSkpLG4uZChlLFwiRlwiLChmdW5jdGlvbigpe3JldHVybiBzZX0pKSxuLmQoZSxcInpcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdWV9KSksbi5kKGUsXCJqXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIGxlfSkpLG4uZChlLFwiblwiLChmdW5jdGlvbigpe3JldHVybiBjZX0pKSxuLmQoZSxcImZiXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIF9lfSkpLG4uZChlLFwicFwiLChmdW5jdGlvbigpe3JldHVybiBoZX0pKSxuLmQoZSxcIndiXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIGRlfSkpLG4uZChlLFwiYlwiLChmdW5jdGlvbigpe3JldHVybiBmZX0pKSxuLmQoZSxcImZcIiwoZnVuY3Rpb24oKXtyZXR1cm4gZ2V9KSksbi5kKGUsXCJnXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIEFlfSkpLG4uZChlLFwibFwiLChmdW5jdGlvbigpe3JldHVybiBDZX0pKSxuLmQoZSxcImtcIiwoZnVuY3Rpb24oKXtyZXR1cm4gRGV9KSksbi5kKGUsXCJhXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIE5lfSkpLG4uZChlLFwicmJcIiwoZnVuY3Rpb24oKXtyZXR1cm4gRmV9KSksbi5kKGUsXCJ5YlwiLChmdW5jdGlvbigpe3JldHVybiBJZX0pKSxuLmQoZSxcImdiXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIEJlfSkpLG4uZChlLFwieGJcIiwoZnVuY3Rpb24oKXtyZXR1cm4gSGV9KSksbi5kKGUsXCJzXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIFVlfSkpLG4uZChlLFwiaGJcIiwoZnVuY3Rpb24oKXtyZXR1cm4gR2V9KSksbi5kKGUsXCJqYlwiLChmdW5jdGlvbigpe3JldHVybiBxZX0pKSxuLmQoZSxcImNcIiwoZnVuY3Rpb24oKXtyZXR1cm4gVmV9KSksbi5kKGUsXCJlXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIFhlfSkpLG4uZChlLFwiSlwiLChmdW5jdGlvbigpe3JldHVybiBKZX0pKSxuLmQoZSxcImtiXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIFplfSkpLG4uZChlLFwibGJcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdG59KSksbi5kKGUsXCJtYlwiLChmdW5jdGlvbigpe3JldHVybiBlbn0pKSxuLmQoZSxcIm5iXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIG5ufSkpLG4uZChlLFwib2JcIiwoZnVuY3Rpb24oKXtyZXR1cm4gcm59KSksbi5kKGUsXCJwYlwiLChmdW5jdGlvbigpe3JldHVybiBhbn0pKSxuLmQoZSxcIkFiXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHNufSkpLG4uZChlLFwiY2JcIiwoZnVuY3Rpb24oKXtyZXR1cm4gbG59KSksbi5kKGUsXCJoXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIF9ufSkpLG4uZChlLFwiRFwiLChmdW5jdGlvbigpe3JldHVybiBobn0pKSxuLmQoZSxcImlcIiwoZnVuY3Rpb24oKXtyZXR1cm4gcG59KSksbi5kKGUsXCJzYlwiLChmdW5jdGlvbigpe3JldHVybiBkbn0pKSxuLmQoZSxcImRcIiwoZnVuY3Rpb24oKXtyZXR1cm4gZ259KSksbi5kKGUsXCJ1YlwiLChmdW5jdGlvbigpe3JldHVybiBtbn0pKSxuLmQoZSxcInZiXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIGJufSkpLG4uZChlLFwiQmJcIiwoZnVuY3Rpb24oKXtyZXR1cm4geW59KSksbi5kKGUsXCJDYlwiLChmdW5jdGlvbigpe3JldHVybiB3bn0pKSxuLmQoZSxcIkZiXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHhufSkpLG4uZChlLFwiR2JcIiwoZnVuY3Rpb24oKXtyZXR1cm4ga259KSksbi5kKGUsXCJIYlwiLChmdW5jdGlvbigpe3JldHVybiAkbn0pKTt2YXIgYSxvLHMsdSxsLGMsXyxoLHAsZCxmLHYsZyxtLGIseSx3LHgsaywkPW4oMTIpLE89bi5uKCQpLEU9e30saj1FLmxhc3Q9ZnVuY3Rpb24odCl7dmFyIGU9dD90Lmxlbmd0aDowO2lmKGUpcmV0dXJuIHRbZS0xXX0sQT1FLmlzVW5kZWY9ZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMD09PXR9LFM9RS5pc09iaj1mdW5jdGlvbih0KXt2YXIgZT1PKCkodCk7cmV0dXJuISF0JiYoXCJmdW5jdGlvblwiPT09ZXx8XCJvYmplY3RcIj09PWUpfSxUPUUuaGFzPShhPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksZnVuY3Rpb24odCxlKXtyZXR1cm4gYS5jYWxsKHQsZSl9KSxDPUUuc2xpY2U9ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXQubGVuZ3RoO2U9bnVsbD09ZT8wOmU8MD9NYXRoLm1heChpK2UsMCk6TWF0aC5taW4oZSxpKSxuPW51bGw9PW4/aTpuPDA/TWF0aC5tYXgoaStuLDApOk1hdGgubWluKG4saSk7Zm9yKHZhciByPVtdO2U8bjspci5wdXNoKHRbZSsrXSk7cmV0dXJuIHJ9LFA9RS5yZXZlcnNlPWZ1bmN0aW9uKHQpe3ZhciBlPXQubGVuZ3RoLG49QXJyYXkoZSk7ZS0tO2Zvcih2YXIgaT0wO2k8PWU7aSsrKW5bZS1pXT10W2ldO3JldHVybiBufSxEPUUuaXNCcm93c2VyPVwib2JqZWN0XCI9PT0oXCJ1bmRlZmluZWRcIj09dHlwZW9mIHdpbmRvdz9cInVuZGVmaW5lZFwiOk8oKSh3aW5kb3cpKSYmXCJvYmplY3RcIj09PShcInVuZGVmaW5lZFwiPT10eXBlb2YgZG9jdW1lbnQ/XCJ1bmRlZmluZWRcIjpPKCkoZG9jdW1lbnQpKSYmOT09PWRvY3VtZW50Lm5vZGVUeXBlLFI9RS5ub29wPWZ1bmN0aW9uKCl7fSxMPUUuYmVmb3JlPWZ1bmN0aW9uKHQsZSl7dmFyIG47cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuLS10PjAmJihuPWUuYXBwbHkodGhpcyxhcmd1bWVudHMpKSx0PD0xJiYoZT1udWxsKSxufX0sTj1FLnNwbGl0Q2FzZT0obz0vKFtBLVpdKS9nLHM9L1tfLlxcLSBdKy9nLHU9LyheLSl8KC0kKS9nLGZ1bmN0aW9uKHQpe3JldHVybih0PXQucmVwbGFjZShvLFwiLSQxXCIpLnRvTG93ZXJDYXNlKCkucmVwbGFjZShzLFwiLVwiKS5yZXBsYWNlKHUsXCJcIikpLnNwbGl0KFwiLVwiKX0pLE09RS5jYW1lbENhc2U9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSh0LGUpe3RoaXNbZV09dC5yZXBsYWNlKC9cXHcvLChmdW5jdGlvbih0KXtyZXR1cm4gdC50b1VwcGVyQ2FzZSgpfSkpfXJldHVybiBmdW5jdGlvbih0KXt2YXIgbj1OKHQpLGk9blswXTtyZXR1cm4gbi5zaGlmdCgpLG4uZm9yRWFjaChlLG4pLGkrPW4uam9pbihcIlwiKX19KCksRj1FLmtlYmFiQ2FzZT1mdW5jdGlvbih0KXtyZXR1cm4gTih0KS5qb2luKFwiLVwiKX0sej1FLmNsYW1wPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gQShuKSYmKG49ZSxlPXZvaWQgMCksIUEoZSkmJnQ8ZT9lOnQ+bj9uOnR9LEk9RS5pZHhPZj1mdW5jdGlvbih0LGUsbil7cmV0dXJuIEFycmF5LnByb3RvdHlwZS5pbmRleE9mLmNhbGwodCxlLG4pfSxCPUUuY3JlYXRlPWZ1bmN0aW9uKHQpe3Q9ZnVuY3Rpb24odCl7aWYoIVModCkpcmV0dXJue307aWYoZSlyZXR1cm4gZSh0KTtmdW5jdGlvbiBuKCl7fXJldHVybiBuLnByb3RvdHlwZT10LG5ldyBufTt2YXIgZT1PYmplY3QuY3JlYXRlO3JldHVybiB0fSh7fSksSD1FLmluaGVyaXRzPWZ1bmN0aW9uKHQsZSl7dC5wcm90b3R5cGU9QihlLnByb3RvdHlwZSl9LFU9RS50b1N0cj1mdW5jdGlvbih0KXtyZXR1cm4gbnVsbD09dD9cIlwiOnQudG9TdHJpbmcoKX0sRz1FLmRlYm91bmNlPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaTtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgcj10aGlzLGE9YXJndW1lbnRzLG89ZnVuY3Rpb24oKXtpPW51bGwsdC5hcHBseShyLGEpfTtufHxjbGVhclRpbWVvdXQoaSksbiYmaXx8KGk9c2V0VGltZW91dChvLGUpKX19LHE9RS51Y3MyPXtlbmNvZGU6ZnVuY3Rpb24odCl7cmV0dXJuIFN0cmluZy5mcm9tQ29kZVBvaW50LmFwcGx5KFN0cmluZyx0KX0sZGVjb2RlOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxuPTAsaT10Lmxlbmd0aDtuPGk7KXt2YXIgcj10LmNoYXJDb2RlQXQobisrKTtpZihyPj01NTI5NiYmcjw9NTYzMTkmJm48aSl7dmFyIGE9dC5jaGFyQ29kZUF0KG4rKyk7NTYzMjA9PSg2NDUxMiZhKT9lLnB1c2goKCgxMDIzJnIpPDwxMCkrKDEwMjMmYSkrNjU1MzYpOihlLnB1c2gociksbi0tKX1lbHNlIGUucHVzaChyKX1yZXR1cm4gZX19LFc9RS51dGY4PWZ1bmN0aW9uKHQpe3Q9e2VuY29kZTpmdW5jdGlvbih0KXtmb3IodmFyIGU9cS5kZWNvZGUodCksbj1cIlwiLGk9MCxyPWUubGVuZ3RoO2k8cjtpKyspbis9YyhlW2ldKTtyZXR1cm4gbn0sZGVjb2RlOmZ1bmN0aW9uKHQsbCl7ZT1xLmRlY29kZSh0KSxuPTAsaT1lLmxlbmd0aCxyPTAsYT0wLG89MCxzPTEyOCx1PTE5MTtmb3IodmFyIGMsaD1bXTshMSE9PShjPV8obCkpOyloLnB1c2goYyk7cmV0dXJuIHEuZW5jb2RlKGgpfX07dmFyIGUsbixpLHIsYSxvLHMsdSxsPVN0cmluZy5mcm9tQ2hhckNvZGU7ZnVuY3Rpb24gYyh0KXtpZigwPT0oNDI5NDk2NzE2OCZ0KSlyZXR1cm4gbCh0KTt2YXIgZSxuLGk9XCJcIjtmb3IoMD09KDQyOTQ5NjUyNDgmdCk/KGU9MSxuPTE5Mik6MD09KDQyOTQ5MDE3NjAmdCk/KGU9MixuPTIyNCk6MD09KDQyOTI4NzAxNDQmdCkmJihlPTMsbj0yNDApLGkrPWwoKHQ+PjYqZSkrbik7ZT4wOyl7aSs9bCgxMjh8NjMmdD4+NiooZS0xKSksZS0tfXJldHVybiBpfWZ1bmN0aW9uIF8odCl7Zm9yKDs7KXtpZihuPj1pJiZvKXtpZih0KXJldHVybiBoKCk7dGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBieXRlIGluZGV4XCIpfWlmKG49PT1pKXJldHVybiExO3ZhciBsPWVbbl07aWYobisrLG8pe2lmKGw8c3x8bD51KXtpZih0KXJldHVybiBuLS0saCgpO3Rocm93IG5ldyBFcnJvcihcIkludmFsaWQgY29udGludWF0aW9uIGJ5dGVcIil9aWYocz0xMjgsdT0xOTEscj1yPDw2fDYzJmwsKythPT09byl7dmFyIGM9cjtyZXR1cm4gcj0wLG89MCxhPTAsY319ZWxzZXtpZigwPT0oMTI4JmwpKXJldHVybiBsO2lmKDE5Mj09KDIyNCZsKSlvPTEscj0zMSZsO2Vsc2UgaWYoMjI0PT0oMjQwJmwpKTIyND09PWwmJihzPTE2MCksMjM3PT09bCYmKHU9MTU5KSxvPTIscj0xNSZsO2Vsc2V7aWYoMjQwIT0oMjQ4JmwpKXtpZih0KXJldHVybiBoKCk7dGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBVVEYtOCBkZXRlY3RlZFwiKX0yNDA9PT1sJiYocz0xNDQpLDI0ND09PWwmJih1PTE0Myksbz0zLHI9NyZsfX19fWZ1bmN0aW9uIGgoKXt2YXIgdD1uLWEtMTtyZXR1cm4gbj10KzEscj0wLG89MCxhPTAscz0xMjgsdT0xOTEsZVt0XX1yZXR1cm4gdH0oe30pLEs9RS5yb290PUQ/d2luZG93OnQsVj1FLmRldGVjdE1vY2hhPWZ1bmN0aW9uKHQpe3Q9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9MCxuPWUubGVuZ3RoO3Q8bjt0Kyspe3ZhciBpPWVbdF07aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgS1tpXSlyZXR1cm4hMX1yZXR1cm4hMH07dmFyIGU9W1wiYWZ0ZXJFYWNoXCIsXCJhZnRlclwiLFwiYmVmb3JlRWFjaFwiLFwiYmVmb3JlXCIsXCJkZXNjcmliZVwiLFwiaXRcIl07cmV0dXJuIHR9KHt9KSxYPUUua2V5cz1PYmplY3Qua2V5cyYmIVYoKT9PYmplY3Qua2V5czpmdW5jdGlvbih0KXt2YXIgZT1bXTtmb3IodmFyIG4gaW4gdClUKHQsbikmJmUucHVzaChuKTtyZXR1cm4gZX0sWT1FLmZyZWV6ZT1mdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0LmZyZWV6ZT9PYmplY3QuZnJlZXplKHQpOihYKHQpLmZvckVhY2goKGZ1bmN0aW9uKGUpe09iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCxlKS5jb25maWd1cmFibGUmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUse3dyaXRhYmxlOiExLGNvbmZpZ3VyYWJsZTohMX0pfSkpLHQpfSxKPUUuZGV0ZWN0T3M9ZnVuY3Rpb24odCl7aWYodD0odD10fHwoRD9uYXZpZ2F0b3IudXNlckFnZW50OlwiXCIpKS50b0xvd2VyQ2FzZSgpLGUoXCJ3aW5kb3dzIHBob25lXCIpKXJldHVyblwid2luZG93cyBwaG9uZVwiO2lmKGUoXCJ3aW5cIikpcmV0dXJuXCJ3aW5kb3dzXCI7aWYoZShcImFuZHJvaWRcIikpcmV0dXJuXCJhbmRyb2lkXCI7aWYoZShcImlwYWRcIil8fGUoXCJpcGhvbmVcIil8fGUoXCJpcG9kXCIpKXJldHVyblwiaW9zXCI7aWYoZShcIm1hY1wiKSlyZXR1cm5cIm9zIHhcIjtpZihlKFwibGludXhcIikpcmV0dXJuXCJsaW51eFwiO2Z1bmN0aW9uIGUoZSl7cmV0dXJuIHQuaW5kZXhPZihlKT4tMX1yZXR1cm5cInVua25vd25cIn0sUT1FLnJlc3RBcmdzPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGU9bnVsbD09ZT90Lmxlbmd0aC0xOitlLGZ1bmN0aW9uKCl7dmFyIG4saT1NYXRoLm1heChhcmd1bWVudHMubGVuZ3RoLWUsMCkscj1uZXcgQXJyYXkoaSk7Zm9yKG49MDtuPGk7bisrKXJbbl09YXJndW1lbnRzW24rZV07c3dpdGNoKGUpe2Nhc2UgMDpyZXR1cm4gdC5jYWxsKHRoaXMscik7Y2FzZSAxOnJldHVybiB0LmNhbGwodGhpcyxhcmd1bWVudHNbMF0scik7Y2FzZSAyOnJldHVybiB0LmNhbGwodGhpcyxhcmd1bWVudHNbMF0sYXJndW1lbnRzWzFdLHIpfXZhciBhPW5ldyBBcnJheShlKzEpO2ZvcihuPTA7bjxlO24rKylhW25dPWFyZ3VtZW50c1tuXTtyZXR1cm4gYVtlXT1yLHQuYXBwbHkodGhpcyxhKX19LFo9RS5vcHRpbWl6ZUNiPWZ1bmN0aW9uKHQsZSxuKXtpZihBKGUpKXJldHVybiB0O3N3aXRjaChudWxsPT1uPzM6bil7Y2FzZSAxOnJldHVybiBmdW5jdGlvbihuKXtyZXR1cm4gdC5jYWxsKGUsbil9O2Nhc2UgMzpyZXR1cm4gZnVuY3Rpb24obixpLHIpe3JldHVybiB0LmNhbGwoZSxuLGkscil9O2Nhc2UgNDpyZXR1cm4gZnVuY3Rpb24obixpLHIsYSl7cmV0dXJuIHQuY2FsbChlLG4saSxyLGEpfX1yZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdC5hcHBseShlLGFyZ3VtZW50cyl9fSx0dD0oRS50eXBlcz17fSxFLmVuZFdpdGg9ZnVuY3Rpb24odCxlKXt2YXIgbj10Lmxlbmd0aC1lLmxlbmd0aDtyZXR1cm4gbj49MCYmdC5pbmRleE9mKGUsbik9PT1ufSksZXQ9RS5lc2NhcGU9ZnVuY3Rpb24odCl7dmFyIGU9KHQ9ZnVuY3Rpb24odCl7cmV0dXJuIGkudGVzdCh0KT90LnJlcGxhY2UocixhKTp0fSkubWFwPXtcIiZcIjpcIiZhbXA7XCIsXCI8XCI6XCImbHQ7XCIsXCI+XCI6XCImZ3Q7XCIsJ1wiJzpcIiZxdW90O1wiLFwiJ1wiOlwiJiN4Mjc7XCIsXCJgXCI6XCImI3g2MDtcIn0sbj1cIig/OlwiK1goZSkuam9pbihcInxcIikrXCIpXCIsaT1uZXcgUmVnRXhwKG4pLHI9bmV3IFJlZ0V4cChuLFwiZ1wiKSxhPWZ1bmN0aW9uKHQpe3JldHVybiBlW3RdfTtyZXR1cm4gdH0oe30pLG50PUUuZXNjYXBlSnNTdHI9ZnVuY3Rpb24odCl7dD1mdW5jdGlvbih0KXtyZXR1cm4gVSh0KS5yZXBsYWNlKGUsKGZ1bmN0aW9uKHQpe3N3aXRjaCh0KXtjYXNlJ1wiJzpjYXNlXCInXCI6Y2FzZVwiXFxcXFwiOnJldHVyblwiXFxcXFwiK3Q7Y2FzZVwiXFxuXCI6cmV0dXJuXCJcXFxcblwiO2Nhc2VcIlxcclwiOnJldHVyblwiXFxcXHJcIjtjYXNlXCJcXHUyMDI4XCI6cmV0dXJuXCJcXFxcdTIwMjhcIjtjYXNlXCJcXHUyMDI5XCI6cmV0dXJuXCJcXFxcdTIwMjlcIn19KSl9O3ZhciBlPS9bXCInXFxcXFxcblxcclxcdTIwMjhcXHUyMDI5XS9nO3JldHVybiB0fSh7fSksaXQ9RS5lc2NhcGVKc29uU3RyPWZ1bmN0aW9uKHQpe3JldHVybiBudCh0KS5yZXBsYWNlKC9cXFxcJy9nLFwiJ1wiKS5yZXBsYWNlKC9cXHQvZyxcIlxcXFx0XCIpfSxydD1FLmVzY2FwZVJlZ0V4cD1mdW5jdGlvbih0KXtyZXR1cm4gdC5yZXBsYWNlKC9cXFcvZyxcIlxcXFwkJlwiKX0sYXQ9RS5maWxlU2l6ZT1mdW5jdGlvbih0KXt0PWZ1bmN0aW9uKHQpe2lmKHQ8PTApcmV0dXJuXCIwXCI7dmFyIG49TWF0aC5mbG9vcihNYXRoLmxvZyh0KS9NYXRoLmxvZygxMDI0KSk7cmV0dXJuKyh0L01hdGgucG93KDIsMTAqbikpLnRvRml4ZWQoMikrZVtuXX07dmFyIGU9W1wiXCIsXCJLXCIsXCJNXCIsXCJHXCIsXCJUXCJdO3JldHVybiB0fSh7fSksb3Q9RS5mdWxsVXJsPShsPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpLGZ1bmN0aW9uKHQpe3JldHVybiBsLmhyZWY9dCxsLnByb3RvY29sK1wiLy9cIitsLmhvc3QrbC5wYXRobmFtZStsLnNlYXJjaCtsLmhhc2h9KSxzdD1FLnVwcGVyRmlyc3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHQubGVuZ3RoPDE/dDp0WzBdLnRvVXBwZXJDYXNlKCkrdC5zbGljZSgxKX0sdXQ9RS5nZXRPYmpUeXBlPWZ1bmN0aW9uKHQpe3JldHVybiB0LmNvbnN0cnVjdG9yJiZ0LmNvbnN0cnVjdG9yLm5hbWU/dC5jb25zdHJ1Y3Rvci5uYW1lOnN0KHt9LnRvU3RyaW5nLmNhbGwodCkucmVwbGFjZSgvKFxcW29iamVjdCApfF0vZyxcIlwiKSl9LGx0PUUuaWRlbnRpdHk9ZnVuY3Rpb24odCl7cmV0dXJuIHR9LGN0PUUub2JqVG9TdHI9KGM9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZyxmdW5jdGlvbih0KXtyZXR1cm4gYy5jYWxsKHQpfSksX3Q9RS5pc0FyZ3M9ZnVuY3Rpb24odCl7cmV0dXJuXCJbb2JqZWN0IEFyZ3VtZW50c11cIj09PWN0KHQpfSxodD1FLmlzQXJyPUFycmF5LmlzQXJyYXl8fGZ1bmN0aW9uKHQpe3JldHVyblwiW29iamVjdCBBcnJheV1cIj09PWN0KHQpfSxwdD1FLmNhc3RQYXRoPWZ1bmN0aW9uKHQpe3Q9ZnVuY3Rpb24odCxpKXtpZihodCh0KSlyZXR1cm4gdDtpZihpJiZUKGksdCkpcmV0dXJuW3RdO3ZhciByPVtdO3JldHVybiB0LnJlcGxhY2UoZSwoZnVuY3Rpb24odCxlLGksYSl7ci5wdXNoKGk/YS5yZXBsYWNlKG4sXCIkMVwiKTplfHx0KX0pKSxyfTt2YXIgZT0vW14uW1xcXV0rfFxcWyg/OigtP1xcZCsoPzpcXC5cXGQrKT8pfChbXCInXSkoKD86KD8hXFwyKVteXFxcXF18XFxcXC4pKj8pXFwyKVxcXXwoPz0oPzpcXC58XFxbXFxdKSg/OlxcLnxcXFtcXF18JCkpL2csbj0vXFxcXChcXFxcKT8vZztyZXR1cm4gdH0oe30pLGR0PUUuc2FmZUdldD1mdW5jdGlvbih0LGUpe3ZhciBuO2ZvcihuPShlPXB0KGUsdCkpLnNoaWZ0KCk7IUEobik7KXtpZihudWxsPT0odD10W25dKSlyZXR1cm47bj1lLnNoaWZ0KCl9cmV0dXJuIHR9LGZ0PUUuZmxhdHRlbj1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24gdChlLG4pe2Zvcih2YXIgaSxyPWUubGVuZ3RoLGE9LTE7ci0tOylpPWVbKythXSxodChpKT90KGksbik6bi5wdXNoKGkpO3JldHVybiBufSh0LFtdKX0sdnQ9RS5pc0RhdGU9ZnVuY3Rpb24odCl7cmV0dXJuXCJbb2JqZWN0IERhdGVdXCI9PT1jdCh0KX0sZ3Q9RS5pc0ZuPWZ1bmN0aW9uKHQpe3ZhciBlPWN0KHQpO3JldHVyblwiW29iamVjdCBGdW5jdGlvbl1cIj09PWV8fFwiW29iamVjdCBHZW5lcmF0b3JGdW5jdGlvbl1cIj09PWV8fFwiW29iamVjdCBBc3luY0Z1bmN0aW9uXVwiPT09ZX0sbXQ9RS5nZXRQcm90bz0oXz1PYmplY3QuZ2V0UHJvdG90eXBlT2YsaD17fS5jb25zdHJ1Y3RvcixmdW5jdGlvbih0KXtpZihTKHQpKXtpZihfKXJldHVybiBfKHQpO3ZhciBlPXQuX19wcm90b19fO3JldHVybiBlfHxudWxsPT09ZT9lOmd0KHQuY29uc3RydWN0b3IpP3QuY29uc3RydWN0b3IucHJvdG90eXBlOnQgaW5zdGFuY2VvZiBoP2gucHJvdG90eXBlOnZvaWQgMH19KSxidD1FLmlzTWluaVByb2dyYW09XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHd4JiZndCh3eC5vcGVuTG9jYXRpb24pLHl0PUUuaXNOdW09ZnVuY3Rpb24odCl7cmV0dXJuXCJbb2JqZWN0IE51bWJlcl1cIj09PWN0KHQpfSx3dD1FLmlzQXJyTGlrZT0ocD1NYXRoLnBvdygyLDUzKS0xLGZ1bmN0aW9uKHQpe2lmKCF0KXJldHVybiExO3ZhciBlPXQubGVuZ3RoO3JldHVybiB5dChlKSYmZT49MCYmZTw9cCYmIWd0KHQpfSkseHQ9RS5lYWNoPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2lmKGU9WihlLG4pLHd0KHQpKWZvcihpPTAscj10Lmxlbmd0aDtpPHI7aSsrKWUodFtpXSxpLHQpO2Vsc2V7dmFyIGE9WCh0KTtmb3IoaT0wLHI9YS5sZW5ndGg7aTxyO2krKyllKHRbYVtpXV0sYVtpXSx0KX1yZXR1cm4gdH0sa3Q9RS5jcmVhdGVBc3NpZ25lcj1mdW5jdGlvbih0LGUpe3JldHVybiBmdW5jdGlvbihuKXtyZXR1cm4geHQoYXJndW1lbnRzLChmdW5jdGlvbihpLHIpe2lmKDAhPT1yKXt2YXIgYT10KGkpO3h0KGEsKGZ1bmN0aW9uKHQpe2UmJiFBKG5bdF0pfHwoblt0XT1pW3RdKX0pKX19KSksbn19LCR0PUUuZXh0ZW5kT3duPWt0KFgpLE90PUUudmFsdWVzPWZ1bmN0aW9uKHQpe3ZhciBlPVtdO3JldHVybiB4dCh0LChmdW5jdGlvbih0KXtlLnB1c2godCl9KSksZX0sRXQ9RS5pc1N0cj1mdW5jdGlvbih0KXtyZXR1cm5cIltvYmplY3QgU3RyaW5nXVwiPT09Y3QodCl9LGp0PUUuY29udGFpbj1mdW5jdGlvbih0LGUpe3JldHVybiBFdCh0KT90LmluZGV4T2YoZSk+LTE6KHd0KHQpfHwodD1PdCh0KSksSSh0LGUpPj0wKX0sQXQ9RS5pc0VtcHR5PWZ1bmN0aW9uKHQpe3JldHVybiBudWxsPT10fHwod3QodCkmJihodCh0KXx8RXQodCl8fF90KHQpKT8wPT09dC5sZW5ndGg6MD09PVgodCkubGVuZ3RoKX0sU3Q9RS5pc0Jvb2w9ZnVuY3Rpb24odCl7cmV0dXJuITA9PT10fHwhMT09PXR9LFR0PUUuc3RhcnRXaXRoPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIDA9PT10LmluZGV4T2YoZSl9LEN0PUUuaXNDcm9zc09yaWc9KGQ9d2luZG93LmxvY2F0aW9uLm9yaWdpbixmdW5jdGlvbih0KXtyZXR1cm4hVHQodCxkKX0pLFB0PUUuaXNFbD1mdW5jdGlvbih0KXtyZXR1cm4hKCF0fHwxIT09dC5ub2RlVHlwZSl9LER0PUUuaXNFcnI9ZnVuY3Rpb24odCl7cmV0dXJuXCJbb2JqZWN0IEVycm9yXVwiPT09Y3QodCl9LFJ0PUUuaXNIaWRkZW49ZnVuY3Rpb24odCl7dmFyIGU9Sy5nZXRDb21wdXRlZFN0eWxlLG49Sy5kb2N1bWVudDtmdW5jdGlvbiBpKHQsZSl7cmV0dXJuIHQucmlnaHQ8ZS5sZWZ0fHx0LmxlZnQ+ZS5yaWdodHx8dC5ib3R0b208ZS50b3B8fHQudG9wPmUuYm90dG9tfXJldHVybiBmdW5jdGlvbih0KXt2YXIgcj1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e30sYT1yLmRpc3BsYXksbz12b2lkIDA9PT1hfHxhLHM9ci52aXNpYmlsaXR5LHU9dm9pZCAwIT09cyYmcyxsPXIub3BhY2l0eSxjPXZvaWQgMCE9PWwmJmwsXz1yLnNpemUsaD12b2lkIDAhPT1fJiZfLHA9ci52aWV3cG9ydCxkPXZvaWQgMCE9PXAmJnAsZj1yLm92ZXJmbG93LHY9dm9pZCAwIT09ZiYmZjtpZihvKXJldHVybiBudWxsPT09dC5vZmZzZXRQYXJlbnQ7dmFyIGc9ZSh0KTtpZih1JiZcImhpZGRlblwiPT09Zy52aXNpYmlsaXR5KXJldHVybiEwO2lmKGMpe2lmKFwiMFwiPT09Zy5vcGFjaXR5KXJldHVybiEwO2Zvcih2YXIgbT10O209bS5wYXJlbnRFbGVtZW50Oyl7dmFyIGI9ZShtKTtpZihcIjBcIj09PWIub3BhY2l0eSlyZXR1cm4hMH19dmFyIHk9dC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtpZihoJiYoMD09PXkud2lkdGh8fDA9PT15LmhlaWdodCkpcmV0dXJuITA7aWYoZCl7dmFyIHc9e3RvcDowLGxlZnQ6MCxyaWdodDpuLmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCxib3R0b206bi5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0fTtyZXR1cm4gaSh5LHcpfWlmKHYpZm9yKHZhciB4PXQ7eD14LnBhcmVudEVsZW1lbnQ7KXt2YXIgaz1lKHgpLCQ9ay5vdmVyZmxvdztpZihcInNjcm9sbFwiPT09JHx8XCJoaWRkZW5cIj09PSQpe3ZhciBPPXguZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7aWYoaSh5LE8pKXJldHVybiEwfX1yZXR1cm4hMX19KCksTHQ9RS5pc01hdGNoPWZ1bmN0aW9uKHQsZSl7dmFyIG49WChlKSxpPW4ubGVuZ3RoO2lmKG51bGw9PXQpcmV0dXJuIWk7dD1PYmplY3QodCk7Zm9yKHZhciByPTA7cjxpO3IrKyl7dmFyIGE9bltyXTtpZihlW2FdIT09dFthXXx8IShhIGluIHQpKXJldHVybiExfXJldHVybiEwfSxOdD1FLm1lbW9pemU9ZnVuY3Rpb24odCxlKXt2YXIgbj1mdW5jdGlvbiBuKGkpe3ZhciByPW4uY2FjaGUsYT1cIlwiKyhlP2UuYXBwbHkodGhpcyxhcmd1bWVudHMpOmkpO3JldHVybiBUKHIsYSl8fChyW2FdPXQuYXBwbHkodGhpcyxhcmd1bWVudHMpKSxyW2FdfTtyZXR1cm4gbi5jYWNoZT17fSxufSxNdD1FLmlzTW9iaWxlPShmPS8oYW5kcm9pZHxiYlxcZCt8bWVlZ28pLittb2JpbGV8YXZhbnRnb3xiYWRhXFwvfGJsYWNrYmVycnl8YmxhemVyfGNvbXBhbHxlbGFpbmV8ZmVubmVjfGhpcHRvcHxpZW1vYmlsZXxpcChob25lfG9kKXxpcmlzfGtpbmRsZXxsZ2UgfG1hZW1vfG1pZHB8bW1wfG1vYmlsZS4rZmlyZWZveHxuZXRmcm9udHxvcGVyYSBtKG9ifGluKWl8cGFsbSggb3MpP3xwaG9uZXxwKGl4aXxyZSlcXC98cGx1Y2tlcnxwb2NrZXR8cHNwfHNlcmllcyg0fDYpMHxzeW1iaWFufHRyZW98dXBcXC4oYnJvd3NlcnxsaW5rKXx2b2RhZm9uZXx3YXB8d2luZG93cyBjZXx4ZGF8eGlpbm8vaSx2PS8xMjA3fDYzMTB8NjU5MHwzZ3NvfDR0aHB8NTBbMS02XWl8Nzcwc3w4MDJzfGEgd2F8YWJhY3xhYyhlcnxvb3xzLSl8YWkoa298cm4pfGFsKGF2fGNhfGNvKXxhbW9pfGFuKGV4fG55fHl3KXxhcHR1fGFyKGNofGdvKXxhcyh0ZXx1cyl8YXR0d3xhdShkaXwtbXxyIHxzICl8YXZhbnxiZShja3xsbHxucSl8YmkobGJ8cmQpfGJsKGFjfGF6KXxicihlfHYpd3xidW1ifGJ3LShufHUpfGM1NVxcL3xjYXBpfGNjd2F8Y2RtLXxjZWxsfGNodG18Y2xkY3xjbWQtfGNvKG1wfG5kKXxjcmF3fGRhKGl0fGxsfG5nKXxkYnRlfGRjLXN8ZGV2aXxkaWNhfGRtb2J8ZG8oY3xwKW98ZHMoMTJ8LWQpfGVsKDQ5fGFpKXxlbShsMnx1bCl8ZXIoaWN8azApfGVzbDh8ZXooWzQtN10wfG9zfHdhfHplKXxmZXRjfGZseSgtfF8pfGcxIHV8ZzU2MHxnZW5lfGdmLTV8Zy1tb3xnbyhcXC53fG9kKXxncihhZHx1bil8aGFpZXxoY2l0fGhkLShtfHB8dCl8aGVpLXxoaShwdHx0YSl8aHAoIGl8aXApfGhzLWN8aHQoYygtfCB8X3xhfGd8cHxzfHQpfHRwKXxodShhd3x0Yyl8aS0oMjB8Z298bWEpfGkyMzB8aWFjKCB8LXxcXC8pfGlicm98aWRlYXxpZzAxfGlrb218aW0xa3xpbm5vfGlwYXF8aXJpc3xqYSh0fHYpYXxqYnJvfGplbXV8amlnc3xrZGRpfGtlaml8a2d0KCB8XFwvKXxrbG9ufGtwdCB8a3djLXxreW8oY3xrKXxsZShub3x4aSl8bGcoIGd8XFwvKGt8bHx1KXw1MHw1NHwtW2Etd10pfGxpYnd8bHlueHxtMS13fG0zZ2F8bTUwXFwvfG1hKHRlfHVpfHhvKXxtYygwMXwyMXxjYSl8bS1jcnxtZShyY3xyaSl8bWkobzh8b2F8dHMpfG1tZWZ8bW8oMDF8MDJ8Yml8ZGV8ZG98dCgtfCB8b3x2KXx6eil8bXQoNTB8cDF8diApfG13YnB8bXl3YXxuMTBbMC0yXXxuMjBbMi0zXXxuMzAoMHwyKXxuNTAoMHwyfDUpfG43KDAoMHwxKXwxMCl8bmUoKGN8bSktfG9ufHRmfHdmfHdnfHd0KXxub2soNnxpKXxuenBofG8yaW18b3AodGl8d3YpfG9yYW58b3dnMXxwODAwfHBhbihhfGR8dCl8cGR4Z3xwZygxM3wtKFsxLThdfGMpKXxwaGlsfHBpcmV8cGwoYXl8dWMpfHBuLTJ8cG8oY2t8cnR8c2UpfHByb3h8cHNpb3xwdC1nfHFhLWF8cWMoMDd8MTJ8MjF8MzJ8NjB8LVsyLTddfGktKXxxdGVrfHIzODB8cjYwMHxyYWtzfHJpbTl8cm8odmV8em8pfHM1NVxcL3xzYShnZXxtYXxtbXxtc3xueXx2YSl8c2MoMDF8aC18b298cC0pfHNka1xcL3xzZShjKC18MHwxKXw0N3xtY3xuZHxyaSl8c2doLXxzaGFyfHNpZSgtfG0pfHNrLTB8c2woNDV8aWQpfHNtKGFsfGFyfGIzfGl0fHQ1KXxzbyhmdHxueSl8c3AoMDF8aC18di18diApfHN5KDAxfG1iKXx0MigxOHw1MCl8dDYoMDB8MTB8MTgpfHRhKGd0fGxrKXx0Y2wtfHRkZy18dGVsKGl8bSl8dGltLXx0LW1vfHRvKHBsfHNoKXx0cyg3MHxtLXxtM3xtNSl8dHgtOXx1cChcXC5ifGcxfHNpKXx1dHN0fHY0MDB8djc1MHx2ZXJpfHZpKHJnfHRlKXx2ayg0MHw1WzAtM118LXYpfHZtNDB8dm9kYXx2dWxjfHZ4KDUyfDUzfDYwfDYxfDcwfDgwfDgxfDgzfDg1fDk4KXx3M2MoLXwgKXx3ZWJjfHdoaXR8d2koZyB8bmN8bncpfHdtbGJ8d29udXx4NzAwfHlhcy18eW91cnx6ZXRvfHp0ZS0vaSxOdCgoZnVuY3Rpb24odCl7cmV0dXJuIHQ9dHx8KEQ/bmF2aWdhdG9yLnVzZXJBZ2VudDpcIlwiKSxmLnRlc3QodCl8fHYudGVzdCh0LnN1YnN0cigwLDQpKX0pKSksRnQ9RS5wcmVmaXg9ZnVuY3Rpb24odCl7KHQ9TnQoKGZ1bmN0aW9uKHQpe2lmKHQ9dC5yZXBsYWNlKG4sXCJcIiksdD1NKHQpLFQoaSx0KSlyZXR1cm4gdDtmb3IodmFyIHI9ZS5sZW5ndGg7ci0tOyl7dmFyIGE9ZVtyXStzdCh0KTtpZihUKGksYSkpcmV0dXJuIGF9cmV0dXJuIHR9KSkpLmRhc2g9TnQoKGZ1bmN0aW9uKGUpe3ZhciBpPXQoZSk7cmV0dXJuKG4udGVzdChpKT9cIi1cIjpcIlwiKStGKGkpfSkpO3ZhciBlPVtcIk9cIixcIm1zXCIsXCJNb3pcIixcIldlYmtpdFwiXSxuPS9eKE8pfChtcyl8KE1veil8KFdlYmtpdCl8KC1vLSl8KC1tcy0pfCgtbW96LSl8KC13ZWJraXQtKS9nLGk9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIikuc3R5bGU7cmV0dXJuIHR9KHt9KSx6dD1FLmlzTmFOPWZ1bmN0aW9uKHQpe3JldHVybiB5dCh0KSYmdCE9PSt0fSxJdD1FLmlzTmlsPWZ1bmN0aW9uKHQpe3JldHVybiBudWxsPT10fSxCdD1FLnRvU3JjPWZ1bmN0aW9uKHQpe3Q9ZnVuY3Rpb24odCl7aWYoSXQodCkpcmV0dXJuXCJcIjt0cnl7cmV0dXJuIGUuY2FsbCh0KX1jYXRjaCh0KXt9dHJ5e3JldHVybiB0K1wiXCJ9Y2F0Y2godCl7fXJldHVyblwiXCJ9O3ZhciBlPUZ1bmN0aW9uLnByb3RvdHlwZS50b1N0cmluZztyZXR1cm4gdH0oe30pLEh0PUUuaXNOYXRpdmU9ZnVuY3Rpb24odCl7dD1mdW5jdGlvbih0KXtyZXR1cm4hIVModCkmJihndCh0KT9uLnRlc3QoQnQodCkpOmkudGVzdChCdCh0KSkpfTt2YXIgZT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LG49bmV3IFJlZ0V4cChcIl5cIitCdChlKS5yZXBsYWNlKC9bXFxcXF4kLiorPygpW1xcXXt9fF0vZyxcIlxcXFwkJlwiKS5yZXBsYWNlKC9oYXNPd25Qcm9wZXJ0eXwoZnVuY3Rpb24pLio/KD89XFxcXFxcKCl8IGZvciAuKz8oPz1cXFxcXFxdKS9nLFwiJDEuKj9cIikrXCIkXCIpLGk9L15cXFtvYmplY3QgLis/Q29uc3RydWN0b3JcXF0kLztyZXR1cm4gdH0oe30pLFV0PUUuaXNOdWxsPWZ1bmN0aW9uKHQpe3JldHVybiBudWxsPT09dH0sR3Q9RS5pc1ByaW1pdGl2ZT1mdW5jdGlvbih0KXt2YXIgZT1PKCkodCk7cmV0dXJuIG51bGw9PXR8fFwiZnVuY3Rpb25cIiE9PWUmJlwib2JqZWN0XCIhPT1lfSxxdD1FLmlzUHJvbWlzZT1mdW5jdGlvbih0KXtyZXR1cm4gUyh0KSYmZ3QodC50aGVuKX0sV3Q9RS5pc1JlZ0V4cD1mdW5jdGlvbih0KXtyZXR1cm5cIltvYmplY3QgUmVnRXhwXVwiPT09Y3QodCl9LEt0PUUuaXNTb3J0ZWQ9KGc9e30sKGc9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTpnLmRlZkNvbXBhcmF0b3Isbj0wLGk9dC5sZW5ndGg7bjxpLTE7bisrKWlmKGUodFtuXSx0W24rMV0pPjApcmV0dXJuITE7cmV0dXJuITB9KS5kZWZDb21wYXJhdG9yPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ8ZT8tMTp0PmU/MTowfSxnKSxWdD1FLmxvYWRKcz1mdW5jdGlvbih0LGUpe3ZhciBuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7bi5zcmM9dCxuLm9ubG9hZD1mdW5jdGlvbigpe3ZhciB0PW4ucmVhZHlTdGF0ZSYmXCJjb21wbGV0ZVwiIT1uLnJlYWR5U3RhdGUmJlwibG9hZGVkXCIhPW4ucmVhZHlTdGF0ZTtlJiZlKCF0KX0sZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChuKX0sWHQ9RS5sb3dlckNhc2U9ZnVuY3Rpb24odCl7cmV0dXJuIFUodCkudG9Mb2NhbGVMb3dlckNhc2UoKX0sWXQ9RS5yZXBlYXQ9ZnVuY3Rpb24odCxlKXt2YXIgbj1cIlwiO2lmKGU8MSlyZXR1cm5cIlwiO2Zvcig7ZT4wOykxJmUmJihuKz10KSxlPj49MSx0Kz10O3JldHVybiBufSxKdD1FLmxwYWQ9ZnVuY3Rpb24odCxlLG4pe3ZhciBpPSh0PVUodCkpLmxlbmd0aDtyZXR1cm4gbj1ufHxcIiBcIixpPGUmJih0PShZdChuLGUtaSkrdCkuc2xpY2UoLWUpKSx0fSxRdD1FLmRhdGVGb3JtYXQ9ZnVuY3Rpb24odCl7dD1mdW5jdGlvbihvLHMsdSxsKXsxPT09YXJndW1lbnRzLmxlbmd0aCYmRXQobykmJiFyLnRlc3QobykmJihzPW8sbz12b2lkIDApLG89b3x8bmV3IERhdGUsdnQobyl8fChvPW5ldyBEYXRlKG8pKTt2YXIgYz0ocz1VKHQubWFza3Nbc118fHN8fHQubWFza3MuZGVmYXVsdCkpLnNsaWNlKDAsNCk7XCJVVEM6XCIhPT1jJiZcIkdNVDpcIiE9PWN8fChzPXMuc2xpY2UoNCksdT0hMCxcIkdNVDpcIj09PWMmJihsPSEwKSk7dmFyIF89dT9cImdldFVUQ1wiOlwiZ2V0XCIsaD1vW18rXCJEYXRlXCJdKCkscD1vW18rXCJEYXlcIl0oKSxkPW9bXytcIk1vbnRoXCJdKCksZj1vW18rXCJGdWxsWWVhclwiXSgpLHY9b1tfK1wiSG91cnNcIl0oKSxnPW9bXytcIk1pbnV0ZXNcIl0oKSxtPW9bXytcIlNlY29uZHNcIl0oKSxiPW9bXytcIk1pbGxpc2Vjb25kc1wiXSgpLHk9dT8wOm8uZ2V0VGltZXpvbmVPZmZzZXQoKSx3PXtkOmgsZGQ6ZShoKSxkZGQ6dC5pMThuLmRheU5hbWVzW3BdLGRkZGQ6dC5pMThuLmRheU5hbWVzW3ArN10sbTpkKzEsbW06ZShkKzEpLG1tbTp0LmkxOG4ubW9udGhOYW1lc1tkXSxtbW1tOnQuaTE4bi5tb250aE5hbWVzW2QrMTJdLHl5OlUoZikuc2xpY2UoMikseXl5eTpmLGg6diUxMnx8MTIsaGg6ZSh2JTEyfHwxMiksSDp2LEhIOmUodiksTTpnLE1NOmUoZyksczptLHNzOmUobSksbDplKGIsMyksTDplKE1hdGgucm91bmQoYi8xMCkpLHQ6djwxMj9cImFcIjpcInBcIix0dDp2PDEyP1wiYW1cIjpcInBtXCIsVDp2PDEyP1wiQVwiOlwiUFwiLFRUOnY8MTI/XCJBTVwiOlwiUE1cIixaOmw/XCJHTVRcIjp1P1wiVVRDXCI6KFUobykubWF0Y2goaSl8fFtcIlwiXSkucG9wKCkucmVwbGFjZShhLFwiXCIpLG86KHk+MD9cIi1cIjpcIitcIikrZSgxMDAqTWF0aC5mbG9vcihNYXRoLmFicyh5KS82MCkrTWF0aC5hYnMoeSklNjAsNCksUzpbXCJ0aFwiLFwic3RcIixcIm5kXCIsXCJyZFwiXVtoJTEwPjM/MDooaCUxMDAtaCUxMCE9MTApKmglMTBdfTtyZXR1cm4gcy5yZXBsYWNlKG4sKGZ1bmN0aW9uKHQpe3JldHVybiB0IGluIHc/d1t0XTp0LnNsaWNlKDEsdC5sZW5ndGgtMSl9KSl9O3ZhciBlPWZ1bmN0aW9uKHQpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXToyO3JldHVybiBKdChVKHQpLGUsXCIwXCIpfSxuPS9kezEsNH18bXsxLDR9fHl5KD86eXkpP3woW0hoTXNUdF0pXFwxP3xbTGxvU1pXTl18XCJbXlwiXSpcInwnW14nXSonL2csaT0vXFxiKD86W1BNQ0VBXVtTRFBdVHwoPzpQYWNpZmljfE1vdW50YWlufENlbnRyYWx8RWFzdGVybnxBdGxhbnRpYykgKD86U3RhbmRhcmR8RGF5bGlnaHR8UHJldmFpbGluZykgVGltZXwoPzpHTVR8VVRDKSg/OlstK11cXGR7NH0pPylcXGIvZyxyPS9cXGQvLGE9L1teLStcXGRBLVpdL2c7cmV0dXJuIHQubWFza3M9e2RlZmF1bHQ6XCJkZGQgbW1tIGRkIHl5eXkgSEg6TU06c3NcIixzaG9ydERhdGU6XCJtL2QveXlcIixtZWRpdW1EYXRlOlwibW1tIGQsIHl5eXlcIixsb25nRGF0ZTpcIm1tbW0gZCwgeXl5eVwiLGZ1bGxEYXRlOlwiZGRkZCwgbW1tbSBkLCB5eXl5XCIsc2hvcnRUaW1lOlwiaDpNTSBUVFwiLG1lZGl1bVRpbWU6XCJoOk1NOnNzIFRUXCIsbG9uZ1RpbWU6XCJoOk1NOnNzIFRUIFpcIixpc29EYXRlOlwieXl5eS1tbS1kZFwiLGlzb1RpbWU6XCJISDpNTTpzc1wiLGlzb0RhdGVUaW1lOlwieXl5eS1tbS1kZCdUJ0hIOk1NOnNzb1wiLGlzb1V0Y0RhdGVUaW1lOlwiVVRDOnl5eXktbW0tZGQnVCdISDpNTTpzcydaJ1wiLGV4cGlyZXNIZWFkZXJGb3JtYXQ6XCJkZGQsIGRkIG1tbSB5eXl5IEhIOk1NOnNzIFpcIn0sdC5pMThuPXtkYXlOYW1lczpbXCJTdW5cIixcIk1vblwiLFwiVHVlXCIsXCJXZWRcIixcIlRodVwiLFwiRnJpXCIsXCJTYXRcIixcIlN1bmRheVwiLFwiTW9uZGF5XCIsXCJUdWVzZGF5XCIsXCJXZWRuZXNkYXlcIixcIlRodXJzZGF5XCIsXCJGcmlkYXlcIixcIlNhdHVyZGF5XCJdLG1vbnRoTmFtZXM6W1wiSmFuXCIsXCJGZWJcIixcIk1hclwiLFwiQXByXCIsXCJNYXlcIixcIkp1blwiLFwiSnVsXCIsXCJBdWdcIixcIlNlcFwiLFwiT2N0XCIsXCJOb3ZcIixcIkRlY1wiLFwiSmFudWFyeVwiLFwiRmVicnVhcnlcIixcIk1hcmNoXCIsXCJBcHJpbFwiLFwiTWF5XCIsXCJKdW5lXCIsXCJKdWx5XCIsXCJBdWd1c3RcIixcIlNlcHRlbWJlclwiLFwiT2N0b2JlclwiLFwiTm92ZW1iZXJcIixcIkRlY2VtYmVyXCJdfSx0fSh7fSksWnQ9RS5sdHJpbT0obT0vXlxccysvLGZ1bmN0aW9uKHQsZSl7aWYobnVsbD09ZSlyZXR1cm4gdC5yZXBsYWNlKG0sXCJcIik7Zm9yKHZhciBuLGkscj0wLGE9dC5sZW5ndGgsbz1lLmxlbmd0aCxzPSEwO3MmJnI8YTspZm9yKHM9ITEsbj0tMSxpPXQuY2hhckF0KHIpOysrbjxvOylpZihpPT09ZVtuXSl7cz0hMCxyKys7YnJlYWt9cmV0dXJuIHI+PWE/XCJcIjp0LnN1YnN0cihyLGEpfSksdGU9RS5tYXRjaGVyPWZ1bmN0aW9uKHQpe3JldHVybiB0PSR0KHt9LHQpLGZ1bmN0aW9uKGUpe3JldHVybiBMdChlLHQpfX0sZWU9RS5zYWZlQ2I9ZnVuY3Rpb24odCxlLG4pe3JldHVybiBudWxsPT10P2x0Omd0KHQpP1oodCxlLG4pOlModCk/dGUodCk6ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBudWxsPT1lP3ZvaWQgMDplW3RdfX19LG5lPUUuZmlsdGVyPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1bXTtyZXR1cm4gZT1lZShlLG4pLHh0KHQsKGZ1bmN0aW9uKHQsbixyKXtlKHQsbixyKSYmaS5wdXNoKHQpfSkpLGl9LGllPUUuZGlmZmVyZW5jZT1RKChmdW5jdGlvbih0LGUpe3JldHVybiBlPWZ0KGUpLG5lKHQsKGZ1bmN0aW9uKHQpe3JldHVybiFqdChlLHQpfSkpfSkpLHJlPUUudW5pcXVlPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUodCxlKXtyZXR1cm4gdD09PWV9cmV0dXJuIGZ1bmN0aW9uKHQsbil7cmV0dXJuIG49bnx8ZSxuZSh0LChmdW5jdGlvbih0LGUsaSl7Zm9yKHZhciByPWkubGVuZ3RoOysrZTxyOylpZihuKHQsaVtlXSkpcmV0dXJuITE7cmV0dXJuITB9KSl9fSgpLGFlPUUuYWxsS2V5cz0oYj1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyx5PU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMsZnVuY3Rpb24odCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnt9LG49ZS5wcm90b3R5cGUsaT12b2lkIDA9PT1ufHxuLHI9ZS51bmVudW1lcmFibGUsYT12b2lkIDAhPT1yJiZyLG89ZS5zeW1ib2wscz12b2lkIDAhPT1vJiZvLHU9W107aWYoKGF8fHMpJiZiKXt2YXIgbD1YO2EmJmImJihsPWIpO2Rve3U9dS5jb25jYXQobCh0KSkscyYmeSYmKHU9dS5jb25jYXQoeSh0KSkpfXdoaWxlKGkmJih0PW10KHQpKSYmdCE9PU9iamVjdC5wcm90b3R5cGUpO3U9cmUodSl9ZWxzZSBpZihpKWZvcih2YXIgYyBpbiB0KXUucHVzaChjKTtlbHNlIHU9WCh0KTtyZXR1cm4gdX0pLG9lPUUuZGVmYXVsdHM9a3QoYWUsITApLHNlPUUuaGlnaGxpZ2h0PWZ1bmN0aW9uKHQpe3Q9ZnVuY3Rpb24oaSl7dmFyIHI9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOlwianNcIixhPWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTp7fTtvZShhLGUpLGk9aS5yZXBsYWNlKC88L2csXCImbHQ7XCIpLnJlcGxhY2UoLz4vZyxcIiZndDtcIikscj1uW3JdO3ZhciBvPTAscz1bXTt4dChyLChmdW5jdGlvbihlKXtlLmxhbmd1YWdlJiYoaT1pLnJlcGxhY2UoZS5yZSwoZnVuY3Rpb24obixpKXtyZXR1cm4gc1tvKytdPXQoaSxlLmxhbmd1YWdlLGEpLG4ucmVwbGFjZShpLFwiX19fc3VidG1wbFwiKyhvLTEpK1wiX19fXCIpfSkpKX0pKSx4dChyLChmdW5jdGlvbih0LGUpe25bdC5sYW5ndWFnZV18fChpPWkucmVwbGFjZSh0LnJlLFwiX19fXCIrZStcIl9fXyQxX19fZW5kXCIrZStcIl9fX1wiKSl9KSk7dmFyIHU9W107cmV0dXJuIGk9aS5yZXBsYWNlKC9fX18oPyFzdWJ0bXBsKVxcdys/X19fL2csKGZ1bmN0aW9uKHQpe3ZhciBlPVwiZW5kXCI9PT10LnN1YnN0cigzLDMpLG49KGU/dC5zdWJzdHIoNik6dC5zdWJzdHIoMykpLnJlcGxhY2UoL18vZyxcIlwiKSxpPXUubGVuZ3RoPjA/dVt1Lmxlbmd0aC0xXTpudWxsO3JldHVybiFlJiYobnVsbD09aXx8bj09aXx8bnVsbCE9aSYmcltpXSYmbnVsbCE9cltpXS5lbWJlZCYmcltpXS5lbWJlZC5pbmRleE9mKG4pPi0xKT8odS5wdXNoKG4pLHQpOmUmJm49PWk/KHUucG9wKCksdCk6XCJcIn0pKSx4dChyLChmdW5jdGlvbih0LGUpe2k9aS5yZXBsYWNlKG5ldyBSZWdFeHAoXCJfX19lbmRcIitlK1wiX19fXCIsXCJnXCIpLFwiPC9zcGFuPlwiKS5yZXBsYWNlKG5ldyBSZWdFeHAoXCJfX19cIitlK1wiX19fXCIsXCJnXCIpLCc8c3BhbiBzdHlsZT1cIicrYVt0LnN0eWxlXSsnXCI+Jyl9KSkseHQociwoZnVuY3Rpb24odCl7dC5sYW5ndWFnZSYmKGk9aS5yZXBsYWNlKC9fX19zdWJ0bXBsXFxkK19fXy9nLChmdW5jdGlvbih0KXt2YXIgZT1wYXJzZUludCh0LnJlcGxhY2UoL19fX3N1YnRtcGwoXFxkKylfX18vLFwiJDFcIiksMTApO3JldHVybiBzW2VdfSkpKX0pKSxpfTt2YXIgZT17Y29tbWVudDpcImNvbG9yOiM2M2EzNWM7XCIsc3RyaW5nOlwiY29sb3I6IzE4MzY5MTtcIixudW1iZXI6XCJjb2xvcjojMDA4NmIzO1wiLGtleXdvcmQ6XCJjb2xvcjojYTcxZDVkO1wiLG9wZXJhdG9yOlwiY29sb3I6Izk5NDUwMDtcIn0sbj17anM6e2NvbW1lbnQ6e3JlOi8oXFwvXFwvLip8XFwvXFwqKFtcXHNcXFNdKj8pXFwqXFwvKS9nLHN0eWxlOlwiY29tbWVudFwifSxzdHJpbmc6e3JlOi8oKCcuKj8nKXwoXCIuKj9cIikpL2csc3R5bGU6XCJzdHJpbmdcIn0sbnVtYmVyczp7cmU6LygtPyhcXGQrfFxcZCtcXC5cXGQrfFxcLlxcZCspKS9nLHN0eWxlOlwibnVtYmVyXCJ9LGtleXdvcmRzOntyZTovKD86XFxiKShmdW5jdGlvbnxmb3J8Zm9yZWFjaHx3aGlsZXxpZnxlbHNlfGVsc2VpZnxzd2l0Y2h8YnJlYWt8YXN8cmV0dXJufHRoaXN8Y2xhc3N8c2VsZnxkZWZhdWx0fHZhcnxjb25zdHxsZXR8ZmFsc2V8dHJ1ZXxudWxsfHVuZGVmaW5lZCkoPzpcXGIpL2dpLHN0eWxlOlwia2V5d29yZFwifSxvcGVyYXRvcjp7cmU6LyhcXCt8LXxcXC98XFwqfCV8PXwmbHQ7fCZndDt8XFx8fFxcP3xcXC4pL2csc3R5bGU6XCJvcGVyYXRvclwifX19O3JldHVybiBuLmh0bWw9e2NvbW1lbnQ6e3JlOi8oJmx0OyEtLShbXFxzXFxTXSo/KS0tJmd0OykvZyxzdHlsZTpcImNvbW1lbnRcIn0sdGFnOntyZTovKCZsdDtcXC8/XFx3KC58XFxuKSo/XFwvPyZndDspL2csc3R5bGU6XCJrZXl3b3JkXCIsZW1iZWQ6W1wic3RyaW5nXCJdfSxzdHJpbmc6bi5qcy5zdHJpbmcsY3NzOntyZTovKD86Jmx0O3N0eWxlLio/Jmd0OykoW1xcc1xcU10qKT8oPzombHQ7XFwvc3R5bGUmZ3Q7KS9naSxsYW5ndWFnZTpcImNzc1wifSxzY3JpcHQ6e3JlOi8oPzombHQ7c2NyaXB0Lio/Jmd0OykoW1xcc1xcU10qPykoPzombHQ7XFwvc2NyaXB0Jmd0OykvZ2ksbGFuZ3VhZ2U6XCJqc1wifX0sbi5jc3M9e2NvbW1lbnQ6bi5qcy5jb21tZW50LHN0cmluZzpuLmpzLnN0cmluZyxudW1iZXJzOntyZTovKCgtPyhcXGQrfFxcZCtcXC5cXGQrfFxcLlxcZCspKCV8cHh8ZW18cHR8aW4pPyl8I1swLTlhLWZBLUZdezN9WzAtOWEtZkEtRl17M30pL2csc3R5bGU6XCJudW1iZXJcIn0sa2V5d29yZHM6e3JlOi8oQFxcdyt8Oj86XFx3K3xbYS16LV0rOikvZyxzdHlsZTpcImtleXdvcmRcIn19LHR9KHt9KSx1ZT1FLmV4dGVuZD1rdChhZSksbGU9RS5jbG9uZT1mdW5jdGlvbih0KXtyZXR1cm4gUyh0KT9odCh0KT90LnNsaWNlKCk6dWUoe30sdCk6dH0sY2U9RS5jb3B5PWZ1bmN0aW9uKHQsZSl7ZT1lfHxSO3ZhciBuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0ZXh0YXJlYVwiKSxpPWRvY3VtZW50LmJvZHk7dWUobi5zdHlsZSx7Zm9udFNpemU6XCIxMnB0XCIsYm9yZGVyOlwiMFwiLHBhZGRpbmc6XCIwXCIsbWFyZ2luOlwiMFwiLHBvc2l0aW9uOlwiYWJzb2x1dGVcIixsZWZ0OlwiLTk5OTlweFwifSksbi52YWx1ZT10LGkuYXBwZW5kQ2hpbGQobiksbi5zZXRBdHRyaWJ1dGUoXCJyZWFkb25seVwiLFwiXCIpLG4uc2VsZWN0KCksbi5zZXRTZWxlY3Rpb25SYW5nZSgwLHQubGVuZ3RoKTt0cnl7ZG9jdW1lbnQuZXhlY0NvbW1hbmQoXCJjb3B5XCIpLGUoKX1jYXRjaCh0KXtlKHQpfWZpbmFsbHl7aS5yZW1vdmVDaGlsZChuKX19LF9lPUUubWFwPWZ1bmN0aW9uKHQsZSxuKXtlPWVlKGUsbik7Zm9yKHZhciBpPSF3dCh0KSYmWCh0KSxyPShpfHx0KS5sZW5ndGgsYT1BcnJheShyKSxvPTA7bzxyO28rKyl7dmFyIHM9aT9pW29dOm87YVtvXT1lKHRbc10scyx0KX1yZXR1cm4gYX0saGU9RS5kZWNvZGVVcmlDb21wb25lbnQ9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSh0KXtyZXR1cm4rKFwiMHhcIit0KX10PWZ1bmN0aW9uKHQpe3RyeXtyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHQpfWNhdGNoKHIpe3ZhciBpPXQubWF0Y2gobik7cmV0dXJuIGk/KHh0KGksKGZ1bmN0aW9uKG4pe3Q9dC5yZXBsYWNlKG4sZnVuY3Rpb24odCl7dD10LnNwbGl0KFwiJVwiKS5zbGljZSgxKTt2YXIgbj1fZSh0LGUpO3JldHVybiB0PXEuZW5jb2RlKG4pLHQ9Vy5kZWNvZGUodCwhMCl9KG4pKX0pKSx0KTp0fX07dmFyIG49LyglW2EtZjAtOV17Mn0pKy9naTtyZXR1cm4gdH0oe30pLHBlPUUuY29va2llPWZ1bmN0aW9uKHQpe3ZhciBlPXtwYXRoOlwiL1wifTtmdW5jdGlvbiBuKG4saSxyKXtpZighQShpKSl7aWYocj1vZShyPXJ8fHt9LGUpLHl0KHIuZXhwaXJlcykpe3ZhciBhPW5ldyBEYXRlO2Euc2V0TWlsbGlzZWNvbmRzKGEuZ2V0TWlsbGlzZWNvbmRzKCkrODY0ZTUqci5leHBpcmVzKSxyLmV4cGlyZXM9YX1yZXR1cm4gaT1lbmNvZGVVUklDb21wb25lbnQoaSksbj1lbmNvZGVVUklDb21wb25lbnQobiksZG9jdW1lbnQuY29va2llPVtuLFwiPVwiLGksci5leHBpcmVzJiZcIjsgZXhwaXJlcz1cIityLmV4cGlyZXMudG9VVENTdHJpbmcoKSxyLnBhdGgmJlwiOyBwYXRoPVwiK3IucGF0aCxyLmRvbWFpbiYmXCI7IGRvbWFpbj1cIityLmRvbWFpbixyLnNlY3VyZT9cIjsgc2VjdXJlXCI6XCJcIl0uam9pbihcIlwiKSx0fWZvcih2YXIgbz1kb2N1bWVudC5jb29raWU/ZG9jdW1lbnQuY29va2llLnNwbGl0KFwiOyBcIik6W10scz1uP3ZvaWQgMDp7fSx1PTAsbD1vLmxlbmd0aDt1PGw7dSsrKXt2YXIgYz1vW3VdLF89Yy5zcGxpdChcIj1cIiksaD1oZShfLnNoaWZ0KCkpO2lmKGM9Xy5qb2luKFwiPVwiKSxjPWhlKGMpLG49PT1oKXtzPWM7YnJlYWt9bnx8KHNbaF09Yyl9cmV0dXJuIHN9cmV0dXJuIHQ9e2dldDpuLHNldDpuLHJlbW92ZTpmdW5jdGlvbih0LGUpe3JldHVybihlPWV8fHt9KS5leHBpcmVzPS0xLG4odCxcIlwiLGUpfX19KHt9KSxkZT1FLnRvQXJyPWZ1bmN0aW9uKHQpe3JldHVybiB0P2h0KHQpP3Q6d3QodCkmJiFFdCh0KT9fZSh0KTpbdF06W119LGZlPUUuQ2xhc3M9ZnVuY3Rpb24odCl7dmFyIGU9KHQ9ZnVuY3Rpb24odCxuKXtyZXR1cm4gZS5leHRlbmQodCxuKX0pLkJhc2U9ZnVuY3Rpb24gdChlLG4saSl7aT1pfHx7fTt2YXIgcixhPW4uY2xhc3NOYW1lfHxkdChuLFwiaW5pdGlhbGl6ZS5uYW1lXCIpfHxcIlwiO3JldHVybiBkZWxldGUgbi5jbGFzc05hbWUscj1idD9mdW5jdGlvbigpe3ZhciB0PWRlKGFyZ3VtZW50cyk7cmV0dXJuIHRoaXMuaW5pdGlhbGl6ZSYmdGhpcy5pbml0aWFsaXplLmFwcGx5KHRoaXMsdCl8fHRoaXN9Om5ldyBGdW5jdGlvbihcInRvQXJyXCIsXCJyZXR1cm4gZnVuY3Rpb24gXCIrYStcIigpe3ZhciBhcmdzID0gdG9BcnIoYXJndW1lbnRzKTtyZXR1cm4gdGhpcy5pbml0aWFsaXplID8gdGhpcy5pbml0aWFsaXplLmFwcGx5KHRoaXMsIGFyZ3MpIHx8IHRoaXMgOiB0aGlzO307XCIpKGRlKSxIKHIsZSksci5wcm90b3R5cGUuY29uc3RydWN0b3I9cixyLmV4dGVuZD1mdW5jdGlvbihlLG4pe3JldHVybiB0KHIsZSxuKX0sci5pbmhlcml0cz1mdW5jdGlvbih0KXtIKHIsdCl9LHIubWV0aG9kcz1mdW5jdGlvbih0KXtyZXR1cm4gdWUoci5wcm90b3R5cGUsdCkscn0sci5zdGF0aWNzPWZ1bmN0aW9uKHQpe3JldHVybiB1ZShyLHQpLHJ9LHIubWV0aG9kcyhuKS5zdGF0aWNzKGkpLHJ9KE9iamVjdCx7Y2xhc3NOYW1lOlwiQmFzZVwiLGNhbGxTdXBlcjpmdW5jdGlvbih0LGUsbil7cmV0dXJuIHQucHJvdG90eXBlW2VdLmFwcGx5KHRoaXMsbil9LHRvU3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY29uc3RydWN0b3IubmFtZX19KTtyZXR1cm4gdH0oe30pLHZlPUUuRW51bT1mZSh7aW5pdGlhbGl6ZTpmdW5jdGlvbih0KXtodCh0KT8odGhpcy5zaXplPXQubGVuZ3RoLHh0KHQsKGZ1bmN0aW9uKHQsZSl7dGhpc1t0XT1lfSksdGhpcykpOih0aGlzLnNpemU9WCh0KS5sZW5ndGgseHQodCwoZnVuY3Rpb24odCxlKXt0aGlzW2VdPXR9KSx0aGlzKSksWSh0aGlzKX19KSxnZT1FLk11dGF0aW9uT2JzZXJ2ZXI9ZnVuY3Rpb24odCl7cmV0dXJuKHQ9d2luZG93Lk11dGF0aW9uT2JzZXJ2ZXJ8fHdpbmRvdy5XZWJLaXRNdXRhdGlvbk9ic2VydmVyfHx3aW5kb3cuTW96TXV0YXRpb25PYnNlcnZlcil8fCh0PWZlKHtpbml0aWFsaXplOmZ1bmN0aW9uKCl7fSxvYnNlcnZlOmZ1bmN0aW9uKCl7fSxkaXNjb25uZWN0OmZ1bmN0aW9uKCl7fSx0YWtlUmVjb3JkczpmdW5jdGlvbigpe319KSksdH0oe30pLG1lPUUuU2VsZWN0PWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyh0PWZlKHtjbGFzc05hbWU6XCJTZWxlY3RcIixpbml0aWFsaXplOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmxlbmd0aD0wLHQ/RXQodCk/ZS5maW5kKHQpOnZvaWQodC5ub2RlVHlwZSYmKHRoaXNbMF09dCx0aGlzLmxlbmd0aD0xKSk6dGhpc30sZmluZDpmdW5jdGlvbihlKXt2YXIgbj1uZXcgdDtyZXR1cm4gdGhpcy5lYWNoKChmdW5jdGlvbigpeyFmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj1lLmxlbmd0aCxpPXQubGVuZ3RoLHI9MDtyPG47cisrKXRbaSsrXT1lW3JdO3QubGVuZ3RoPWl9KG4sdGhpcy5xdWVyeVNlbGVjdG9yQWxsKGUpKX0pKSxufSxlYWNoOmZ1bmN0aW9uKHQpe3JldHVybiB4dCh0aGlzLChmdW5jdGlvbihlLG4pe3QuY2FsbChlLG4sZSl9KSksdGhpc319KSkoZG9jdW1lbnQpO3JldHVybiB0fSh7fSksYmU9RS4kc2FmZUVscz1mdW5jdGlvbih0KXtyZXR1cm4gZGUoRXQodCk/bmV3IG1lKHQpOnQpfSx5ZT1FLiRhdHRyPWZ1bmN0aW9uKHQpe3JldHVybih0PWZ1bmN0aW9uKHQsZSxuKXtpZih0PWJlKHQpLEEobikmJkV0KGUpKXJldHVybiBmdW5jdGlvbih0LGUpe3JldHVybiB0LmdldEF0dHJpYnV0ZShlKX0odFswXSxlKTt2YXIgaT1lO1MoaSl8fCgoaT17fSlbZV09biksZnVuY3Rpb24odCxlKXt4dCh0LChmdW5jdGlvbih0KXt4dChlLChmdW5jdGlvbihlLG4pe3Quc2V0QXR0cmlidXRlKG4sZSl9KSl9KSl9KHQsaSl9KS5yZW1vdmU9ZnVuY3Rpb24odCxlKXt0PWJlKHQpLGU9ZGUoZSkseHQodCwoZnVuY3Rpb24odCl7eHQoZSwoZnVuY3Rpb24oZSl7dC5yZW1vdmVBdHRyaWJ1dGUoZSl9KSl9KSl9LHR9KHt9KSx3ZT1FLiRjc3M9ZnVuY3Rpb24odCl7dD1mdW5jdGlvbih0LG4saSl7aWYodD1iZSh0KSxBKGkpJiZFdChuKSlyZXR1cm4gZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5zdHlsZVtGdChlKV18fGdldENvbXB1dGVkU3R5bGUodCxcIlwiKS5nZXRQcm9wZXJ0eVZhbHVlKGUpfSh0WzBdLG4pO3ZhciByPW47UyhyKXx8KChyPXt9KVtuXT1pKSxmdW5jdGlvbih0LG4pe3h0KHQsKGZ1bmN0aW9uKHQpe3ZhciBpPVwiO1wiO3h0KG4sKGZ1bmN0aW9uKHQsbil7bj1GdC5kYXNoKG4pLGkrPW4rXCI6XCIrZnVuY3Rpb24odCxuKXtyZXR1cm4geXQobikmJiFqdChlLEYodCkpP24rXCJweFwiOm59KG4sdCkrXCI7XCJ9KSksdC5zdHlsZS5jc3NUZXh0Kz1pfSkpfSh0LHIpfTt2YXIgZT1bXCJjb2x1bW4tY291bnRcIixcImNvbHVtbnNcIixcImZvbnQtd2VpZ2h0XCIsXCJsaW5lLXdlaWdodFwiLFwib3BhY2l0eVwiLFwiei1pbmRleFwiLFwiem9vbVwiXTtyZXR1cm4gdH0oe30pLHhlPUUuJGRhdGE9ZnVuY3Rpb24odCxlLG4pe3ZhciBpPWU7cmV0dXJuIEV0KGUpJiYoaT1cImRhdGEtXCIrZSksUyhlKSYmKGk9e30seHQoZSwoZnVuY3Rpb24odCxlKXtpW1wiZGF0YS1cIitlXT10fSkpKSx5ZSh0LGksbil9LGtlPUUuJGluc2VydD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKHQpe3JldHVybiBmdW5jdGlvbihlLG4pe2U9YmUoZSkseHQoZSwoZnVuY3Rpb24oZSl7ZS5pbnNlcnRBZGphY2VudEhUTUwodCxuKX0pKX19cmV0dXJue2JlZm9yZTplKFwiYmVmb3JlYmVnaW5cIiksYWZ0ZXI6ZShcImFmdGVyZW5kXCIpLGFwcGVuZDplKFwiYmVmb3JlZW5kXCIpLHByZXBlbmQ6ZShcImFmdGVyYmVnaW5cIil9fSgpLCRlPUUuJG9mZnNldD1mdW5jdGlvbih0KXt2YXIgZT0odD1iZSh0KSlbMF0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7cmV0dXJue2xlZnQ6ZS5sZWZ0K3dpbmRvdy5wYWdlWE9mZnNldCx0b3A6ZS50b3Ard2luZG93LnBhZ2VZT2Zmc2V0LHdpZHRoOk1hdGgucm91bmQoZS53aWR0aCksaGVpZ2h0Ok1hdGgucm91bmQoZS5oZWlnaHQpfX0sT2U9RS4kcHJvcGVydHk9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSh0KXtyZXR1cm4gZnVuY3Rpb24oZSxuKXt2YXIgaT0oZT1iZShlKSlbMF07aWYoQShuKSlyZXR1cm4gaT9pW3RdOlwiXCI7aSYmeHQoZSwoZnVuY3Rpb24oZSl7ZVt0XT1ufSkpfX1yZXR1cm57aHRtbDplKFwiaW5uZXJIVE1MXCIpLHRleHQ6ZShcInRleHRDb250ZW50XCIpLHZhbDplKFwidmFsdWVcIil9fSgpLEVlPUUuJHJlbW92ZT1mdW5jdGlvbih0KXt0PWJlKHQpLHh0KHQsKGZ1bmN0aW9uKHQpe3ZhciBlPXQucGFyZW50Tm9kZTtlJiZlLnJlbW92ZUNoaWxkKHQpfSkpfSxqZT1FLiRzaG93PWZ1bmN0aW9uKHQpe3Q9ZnVuY3Rpb24odCl7dD1iZSh0KSx4dCh0LChmdW5jdGlvbih0KXsoZnVuY3Rpb24odCl7cmV0dXJuXCJub25lXCI9PWdldENvbXB1dGVkU3R5bGUodCxcIlwiKS5nZXRQcm9wZXJ0eVZhbHVlKFwiZGlzcGxheVwiKX0pKHQpJiYodC5zdHlsZS5kaXNwbGF5PWZ1bmN0aW9uKHQpe3ZhciBuLGk7ZVt0XXx8KG49ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0KSxkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuYXBwZW5kQ2hpbGQobiksaT1nZXRDb21wdXRlZFN0eWxlKG4sXCJcIikuZ2V0UHJvcGVydHlWYWx1ZShcImRpc3BsYXlcIiksbi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG4pLFwibm9uZVwiPT1pJiYoaT1cImJsb2NrXCIpLGVbdF09aSk7cmV0dXJuIGVbdF19KHQubm9kZU5hbWUpKX0pKX07dmFyIGU9e307cmV0dXJuIHR9KHt9KSxBZT1FLlN0YWNrPWZlKHtpbml0aWFsaXplOmZ1bmN0aW9uKCl7dGhpcy5jbGVhcigpfSxjbGVhcjpmdW5jdGlvbigpe3RoaXMuX2l0ZW1zPVtdLHRoaXMuc2l6ZT0wfSxwdXNoOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9pdGVtcy5wdXNoKHQpLCsrdGhpcy5zaXplfSxwb3A6ZnVuY3Rpb24oKXtpZih0aGlzLnNpemUpcmV0dXJuIHRoaXMuc2l6ZS0tLHRoaXMuX2l0ZW1zLnBvcCgpfSxwZWVrOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2l0ZW1zW3RoaXMuc2l6ZS0xXX0sZm9yRWFjaDpmdW5jdGlvbih0LGUpe2U9YXJndW1lbnRzLmxlbmd0aD4xP2U6dGhpcztmb3IodmFyIG49dGhpcy5faXRlbXMsaT10aGlzLnNpemUtMSxyPTA7aT49MDtpLS0scisrKXQuY2FsbChlLG5baV0scix0aGlzKX0sdG9BcnI6ZnVuY3Rpb24oKXtyZXR1cm4gUCh0aGlzLl9pdGVtcyl9fSksU2U9RS5kZWxlZ2F0ZT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7cmV0dXJuITB9ZnVuY3Rpb24gbigpe3JldHVybiExfWZ1bmN0aW9uIGkoZSl7dmFyIG4saT10aGlzLmV2ZW50c1tlLnR5cGVdLGE9ci5jYWxsKHRoaXMsZSxpKTtlPW5ldyB0LkV2ZW50KGUpO2Zvcih2YXIgbyxzLHU9MDsocz1hW3UrK10pJiYhZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpOylmb3IoZS5jdXJUYXJnZXQ9cy5lbCxvPTA7KG49cy5oYW5kbGVyc1tvKytdKSYmIWUuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQoKTspITE9PT1uLmhhbmRsZXIuYXBwbHkocy5lbCxbZV0pJiYoZS5wcmV2ZW50RGVmYXVsdCgpLGUuc3RvcFByb3BhZ2F0aW9uKCkpfWZ1bmN0aW9uIHIodCxlKXt2YXIgbixpLHIsYSxvPXQudGFyZ2V0LHM9W10sdT1lLmRlbGVnYXRlQ291bnQ7aWYoby5ub2RlVHlwZSlmb3IoO28hPT10aGlzO289by5wYXJlbnROb2RlfHx0aGlzKXtmb3IoaT1bXSxhPTA7YTx1O2ErKyl2b2lkIDA9PT1pW249KHI9ZVthXSkuc2VsZWN0b3IrXCIgXCJdJiYoaVtuXT1qdCh0aGlzLnF1ZXJ5U2VsZWN0b3JBbGwobiksbykpLGlbbl0mJmkucHVzaChyKTtpLmxlbmd0aCYmcy5wdXNoKHtlbDpvLGhhbmRsZXJzOml9KX1yZXR1cm4gdTxlLmxlbmd0aCYmcy5wdXNoKHtlbDp0aGlzLGhhbmRsZXJzOmUuc2xpY2UodSl9KSxzfXJldHVybiB0PXthZGQ6ZnVuY3Rpb24odCxlLG4scil7dmFyIGEsbz17c2VsZWN0b3I6bixoYW5kbGVyOnJ9O3QuZXZlbnRzfHwodC5ldmVudHM9e30pLChhPXQuZXZlbnRzW2VdKXx8KChhPXQuZXZlbnRzW2VdPVtdKS5kZWxlZ2F0ZUNvdW50PTAsdC5hZGRFdmVudExpc3RlbmVyKGUsKGZ1bmN0aW9uKCl7aS5hcHBseSh0LGFyZ3VtZW50cyl9KSwhMSkpLG4/YS5zcGxpY2UoYS5kZWxlZ2F0ZUNvdW50KyssMCxvKTphLnB1c2gobyl9LHJlbW92ZTpmdW5jdGlvbih0LGUsbixpKXt2YXIgcj10LmV2ZW50cztpZihyJiZyW2VdKWZvcih2YXIgYSxvPXJbZV0scz1vLmxlbmd0aDtzLS07KWE9b1tzXSxuJiZhLnNlbGVjdG9yIT1ufHxhLmhhbmRsZXIhPWl8fChvLnNwbGljZShzLDEpLGEuc2VsZWN0b3ImJm8uZGVsZWdhdGVDb3VudC0tKX0sRXZlbnQ6ZmUoe2NsYXNzTmFtZTpcIkV2ZW50XCIsaW5pdGlhbGl6ZTpmdW5jdGlvbih0KXt0aGlzLm9yaWdFdmVudD10fSxpc0RlZmF1bHRQcmV2ZW50ZWQ6bixpc1Byb3BhZ2F0aW9uU3RvcHBlZDpuLGlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkOm4scHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm9yaWdFdmVudDt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1lLHQmJnQucHJldmVudERlZmF1bHQmJnQucHJldmVudERlZmF1bHQoKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcmlnRXZlbnQ7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1lLHQmJnQuc3RvcFByb3BhZ2F0aW9uJiZ0LnN0b3BQcm9wYWdhdGlvbigpfSxzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm9yaWdFdmVudDt0aGlzLmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkPWUsdCYmdC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24mJnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCksdGhpcy5zdG9wUHJvcGFnYXRpb24oKX19KX19KHt9KSxUZT1FLiRldmVudD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKHQpe3JldHVybiBmdW5jdGlvbihlLG4saSxyKXtlPWJlKGUpLEEocikmJihyPWksaT12b2lkIDApLHh0KGUsKGZ1bmN0aW9uKGUpe1NlW3RdKGUsbixpLHIpfSkpfX1yZXR1cm57b246ZShcImFkZFwiKSxvZmY6ZShcInJlbW92ZVwiKX19KCksQ2U9RS5jb25jYXQ9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9ZGUoYXJndW1lbnRzKSxlPVtdLG49MCxpPXQubGVuZ3RoO248aTtuKyspZT1lLmNvbmNhdChkZSh0W25dKSk7cmV0dXJuIGV9LFBlPUUubWFwT2JqPWZ1bmN0aW9uKHQsZSxuKXtlPWVlKGUsbik7Zm9yKHZhciBpPVgodCkscj1pLmxlbmd0aCxhPXt9LG89MDtvPHI7bysrKXt2YXIgcz1pW29dO2Fbc109ZSh0W3NdLHMsdCl9cmV0dXJuIGF9LERlPUUuY2xvbmVEZWVwPSh3PXt9LHc9ZnVuY3Rpb24odCl7cmV0dXJuIGh0KHQpP3QubWFwKChmdW5jdGlvbih0KXtyZXR1cm4gdyh0KX0pKTpTKHQpJiYhZ3QodCk/UGUodCwoZnVuY3Rpb24odCl7cmV0dXJuIHcodCl9KSk6dH0pLFJlPUUuc29tZT1mdW5jdGlvbih0LGUsbil7ZT1lZShlLG4pO2Zvcih2YXIgaT0hd3QodCkmJlgodCkscj0oaXx8dCkubGVuZ3RoLGE9MDthPHI7YSsrKXt2YXIgbz1pP2lbYV06YTtpZihlKHRbb10sbyx0KSlyZXR1cm4hMH1yZXR1cm4hMX0sTGU9RS4kY2xhc3M9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSh0KXtyZXR1cm4gRXQodCk/dC5zcGxpdCgvXFxzKy8pOmRlKHQpfXJldHVybih0PXthZGQ6ZnVuY3Rpb24obixpKXtuPWJlKG4pO3ZhciByPWUoaSk7eHQobiwoZnVuY3Rpb24oZSl7dmFyIG49W107eHQociwoZnVuY3Rpb24oaSl7dC5oYXMoZSxpKXx8bi5wdXNoKGkpfSkpLDAhPT1uLmxlbmd0aCYmKGUuY2xhc3NOYW1lKz0oZS5jbGFzc05hbWU/XCIgXCI6XCJcIikrbi5qb2luKFwiIFwiKSl9KSl9LGhhczpmdW5jdGlvbih0LGUpe3Q9YmUodCk7dmFyIG49bmV3IFJlZ0V4cChcIihefFxcXFxzKVwiK2UrXCIoXFxcXHN8JClcIik7cmV0dXJuIFJlKHQsKGZ1bmN0aW9uKHQpe3JldHVybiBuLnRlc3QodC5jbGFzc05hbWUpfSkpfSx0b2dnbGU6ZnVuY3Rpb24oZSxuKXtlPWJlKGUpLHh0KGUsKGZ1bmN0aW9uKGUpe2lmKCF0LmhhcyhlLG4pKXJldHVybiB0LmFkZChlLG4pO3QucmVtb3ZlKGUsbil9KSl9LHJlbW92ZTpmdW5jdGlvbih0LG4pe3Q9YmUodCk7dmFyIGk9ZShuKTt4dCh0LChmdW5jdGlvbih0KXt4dChpLChmdW5jdGlvbihlKXt0LmNsYXNzTGlzdC5yZW1vdmUoZSl9KSl9KSl9fSl9KHt9KSxOZT1FLiQ9ZnVuY3Rpb24odCl7dD1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IG1lKHQpfSxtZS5tZXRob2RzKHtvZmZzZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gJGUodGhpcyl9LGhpZGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jc3MoXCJkaXNwbGF5XCIsXCJub25lXCIpfSxzaG93OmZ1bmN0aW9uKCl7cmV0dXJuIGplKHRoaXMpLHRoaXN9LGZpcnN0OmZ1bmN0aW9uKCl7cmV0dXJuIHQodGhpc1swXSl9LGxhc3Q6ZnVuY3Rpb24oKXtyZXR1cm4gdChqKHRoaXMpKX0sZ2V0OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzW3RdfSxlcTpmdW5jdGlvbihlKXtyZXR1cm4gdCh0aGlzW2VdKX0sb246ZnVuY3Rpb24odCxlLG4pe3JldHVybiBUZS5vbih0aGlzLHQsZSxuKSx0aGlzfSxvZmY6ZnVuY3Rpb24odCxlLG4pe3JldHVybiBUZS5vZmYodGhpcyx0LGUsbiksdGhpc30saHRtbDpmdW5jdGlvbih0KXt2YXIgZT1PZS5odG1sKHRoaXMsdCk7cmV0dXJuIEEodCk/ZTp0aGlzfSx0ZXh0OmZ1bmN0aW9uKHQpe3ZhciBlPU9lLnRleHQodGhpcyx0KTtyZXR1cm4gQSh0KT9lOnRoaXN9LHZhbDpmdW5jdGlvbih0KXt2YXIgZT1PZS52YWwodGhpcyx0KTtyZXR1cm4gQSh0KT9lOnRoaXN9LGNzczpmdW5jdGlvbih0LG4pe3ZhciBpPXdlKHRoaXMsdCxuKTtyZXR1cm4gZSh0LG4pP2k6dGhpc30sYXR0cjpmdW5jdGlvbih0LG4pe3ZhciBpPXllKHRoaXMsdCxuKTtyZXR1cm4gZSh0LG4pP2k6dGhpc30sZGF0YTpmdW5jdGlvbih0LG4pe3ZhciBpPXhlKHRoaXMsdCxuKTtyZXR1cm4gZSh0LG4pP2k6dGhpc30scm1BdHRyOmZ1bmN0aW9uKHQpe3JldHVybiB5ZS5yZW1vdmUodGhpcyx0KSx0aGlzfSxyZW1vdmU6ZnVuY3Rpb24oKXtyZXR1cm4gRWUodGhpcyksdGhpc30sYWRkQ2xhc3M6ZnVuY3Rpb24odCl7cmV0dXJuIExlLmFkZCh0aGlzLHQpLHRoaXN9LHJtQ2xhc3M6ZnVuY3Rpb24odCl7cmV0dXJuIExlLnJlbW92ZSh0aGlzLHQpLHRoaXN9LHRvZ2dsZUNsYXNzOmZ1bmN0aW9uKHQpe3JldHVybiBMZS50b2dnbGUodGhpcyx0KSx0aGlzfSxoYXNDbGFzczpmdW5jdGlvbih0KXtyZXR1cm4gTGUuaGFzKHRoaXMsdCl9LHBhcmVudDpmdW5jdGlvbigpe3JldHVybiB0KHRoaXNbMF0ucGFyZW50Tm9kZSl9LGFwcGVuZDpmdW5jdGlvbih0KXtyZXR1cm4ga2UuYXBwZW5kKHRoaXMsdCksdGhpc30scHJlcGVuZDpmdW5jdGlvbih0KXtyZXR1cm4ga2UucHJlcGVuZCh0aGlzLHQpLHRoaXN9LGJlZm9yZTpmdW5jdGlvbih0KXtyZXR1cm4ga2UuYmVmb3JlKHRoaXMsdCksdGhpc30sYWZ0ZXI6ZnVuY3Rpb24odCl7cmV0dXJuIGtlLmFmdGVyKHRoaXMsdCksdGhpc319KTt2YXIgZT1mdW5jdGlvbih0LGUpe3JldHVybiBBKGUpJiZFdCh0KX07cmV0dXJuIHR9KHt9KSxNZT1FLm1lbVN0b3JhZ2U9ZnVuY3Rpb24odCl7dD17Z2V0SXRlbTpmdW5jdGlvbih0KXtyZXR1cm4oblt0XT9lW3RdOnRoaXNbdF0pfHxudWxsfSxzZXRJdGVtOmZ1bmN0aW9uKHQsaSl7blt0XT9lW3RdPWk6dGhpc1t0XT1pfSxyZW1vdmVJdGVtOmZ1bmN0aW9uKHQpe25bdF0/ZGVsZXRlIGVbdF06ZGVsZXRlIHRoaXNbdF19LGtleTpmdW5jdGlvbih0KXt2YXIgZT1pKCk7cmV0dXJuIHQ+PTAmJnQ8ZS5sZW5ndGg/ZVt0XTpudWxsfSxjbGVhcjpmdW5jdGlvbigpe2Zvcih2YXIgdCxuPXIoKSxpPTA7dD1uW2ldO2krKylkZWxldGUgdGhpc1t0XTtuPWEoKTtmb3IodmFyIG8scz0wO289bltzXTtzKyspZGVsZXRlIGVbb119fSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcImxlbmd0aFwiLHtlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gaSgpLmxlbmd0aH19KTt2YXIgZT17fSxuPXtnZXRJdGVtOjEsc2V0SXRlbToxLHJlbW92ZUl0ZW06MSxrZXk6MSxjbGVhcjoxLGxlbmd0aDoxfTtmdW5jdGlvbiBpKCl7cmV0dXJuIHIoKS5jb25jYXQoYSgpKX1mdW5jdGlvbiByKCl7cmV0dXJuIFgodCkuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4hblt0XX0pKX1mdW5jdGlvbiBhKCl7cmV0dXJuIFgoZSl9cmV0dXJuIHR9KHt9KSxGZT1FLnNhZmVTdG9yYWdlPWZ1bmN0aW9uKHQpe3ZhciBlO3N3aXRjaCh0PXR8fFwibG9jYWxcIil7Y2FzZVwibG9jYWxcIjplPXdpbmRvdy5sb2NhbFN0b3JhZ2U7YnJlYWs7Y2FzZVwic2Vzc2lvblwiOmU9d2luZG93LnNlc3Npb25TdG9yYWdlfXRyeXt2YXIgbj1cInRlc3QtbG9jYWxTdG9yYWdlLVwiK0RhdGUubm93KCk7ZS5zZXRJdGVtKG4sbik7dmFyIGk9ZS5nZXRJdGVtKG4pO2lmKGUucmVtb3ZlSXRlbShuKSxpIT09bil0aHJvdyBuZXcgRXJyb3J9Y2F0Y2godCl7cmV0dXJuIE1lfXJldHVybiBlfSx6ZT1FLm1ldGE9ZnVuY3Rpb24odCl7KHQ9ZnVuY3Rpb24odCxyKXtpZihBKHQpKXJldHVybiBhPXt9LG4oKGZ1bmN0aW9uKHQsZSl7YVt0XT1lfSkpLGE7dmFyIGE7aWYoRXQodCkmJkEocil8fGh0KHQpKXJldHVybiBmdW5jdGlvbih0KXtpZighRXQodCkpe3ZhciBlPXt9O3JldHVybiBuKChmdW5jdGlvbihuLGkpe2p0KHQsbikmJihlW25dPWkpfSkpLGV9dmFyIHI9aSh0KTtpZihyKXJldHVybiByLmdldEF0dHJpYnV0ZShcImNvbnRlbnRcIil9KHQpO3ZhciBvPXQ7UyhvKXx8KChvPXt9KVt0XT1yKSxmdW5jdGlvbih0KXt4dCh0LChmdW5jdGlvbih0LG4pe3ZhciByPWkobik7aWYocilyZXR1cm4gci5zZXRBdHRyaWJ1dGUoXCJjb250ZW50XCIsdCk7KHI9ZS5jcmVhdGVFbGVtZW50KFwibWV0YVwiKSkuc2V0QXR0cmlidXRlKFwibmFtZVwiLG4pLHIuc2V0QXR0cmlidXRlKFwiY29udGVudFwiLHQpLGUuaGVhZC5hcHBlbmRDaGlsZChyKX0pKX0obyl9KS5yZW1vdmU9ZnVuY3Rpb24odCl7dD1kZSh0KSx4dCh0LChmdW5jdGlvbih0KXt2YXIgbj1pKHQpO24mJmUuaGVhZC5yZW1vdmVDaGlsZChuKX0pKX07dmFyIGU9ZG9jdW1lbnQ7ZnVuY3Rpb24gbih0KXt2YXIgbj1lLnF1ZXJ5U2VsZWN0b3JBbGwoXCJtZXRhXCIpO3h0KG4sKGZ1bmN0aW9uKGUpe3ZhciBuPWUuZ2V0QXR0cmlidXRlKFwibmFtZVwiKSxpPWUuZ2V0QXR0cmlidXRlKFwiY29udGVudFwiKTtuJiZpJiZ0KG4saSl9KSl9ZnVuY3Rpb24gaSh0KXtyZXR1cm4gZS5xdWVyeVNlbGVjdG9yKCdtZXRhW25hbWU9XCInK3QrJ1wiXScpfXJldHVybiB0fSh7fSksSWU9RS50b051bT1mdW5jdGlvbih0KXtpZih5dCh0KSlyZXR1cm4gdDtpZihTKHQpKXt2YXIgZT1ndCh0LnZhbHVlT2YpP3QudmFsdWVPZigpOnQ7dD1TKGUpP2UrXCJcIjplfXJldHVybiBFdCh0KT8rdDowPT09dD90Oit0fSxCZT1FLm1zPWZ1bmN0aW9uKHQpe3Q9ZnVuY3Rpb24odCl7aWYoRXQodCkpe3ZhciByPXQubWF0Y2goaSk7cmV0dXJuIHI/SWUoclsxXSkqZVtyWzJdfHxcIm1zXCJdOjB9Zm9yKHZhciBhPXQsbz1cIm1zXCIscz0wLHU9bi5sZW5ndGg7czx1O3MrKylpZihhPj1lW25bc11dKXtvPW5bc107YnJlYWt9cmV0dXJuKyhhL2Vbb10pLnRvRml4ZWQoMikrb307dmFyIGU9e21zOjEsczoxZTN9O2UubT02MCplLnMsZS5oPTYwKmUubSxlLmQ9MjQqZS5oLGUueT0zNjUuMjUqZS5kO3ZhciBuPVtcInlcIixcImRcIixcImhcIixcIm1cIixcInNcIl0saT0vXigoPzpcXGQrKT9cXC4/XFxkKykgKihzfG18aHxkfHkpPyQvO3JldHVybiB0fSh7fSksSGU9RS50b0ludD1mdW5jdGlvbih0KXtyZXR1cm4gdD8odD1JZSh0KSktdCUxOjA9PT10P3Q6MH0sVWU9RS5kZXRlY3RCcm93c2VyPWZ1bmN0aW9uKHQpe3Q9ZnVuY3Rpb24odCl7dmFyIGE9cih0PSh0PXR8fChEP25hdmlnYXRvci51c2VyQWdlbnQ6XCJcIikpLnRvTG93ZXJDYXNlKCksXCJtc2llIFwiKTtpZihhKXJldHVybnt2ZXJzaW9uOmEsbmFtZTpcImllXCJ9O2lmKG4udGVzdCh0KSlyZXR1cm57dmVyc2lvbjoxMSxuYW1lOlwiaWVcIn07Zm9yKHZhciBvPTAscz1pLmxlbmd0aDtvPHM7bysrKXt2YXIgdT1pW29dLGw9dC5tYXRjaChlW3VdKTtpZihudWxsIT1sKXt2YXIgYz1IZShsWzFdLnNwbGl0KFwiLlwiKVswXSk7cmV0dXJuXCJvcGVyYVwiPT09dSYmKGM9cih0LFwidmVyc2lvbi9cIil8fGMpLHtuYW1lOnUsdmVyc2lvbjpjfX19cmV0dXJue25hbWU6XCJ1bmtub3duXCIsdmVyc2lvbjotMX19O3ZhciBlPXtlZGdlOi9lZGdlXFwvKFswLTkuX10rKS8sZmlyZWZveDovZmlyZWZveFxcLyhbMC05Ll0rKSg/Olxcc3wkKS8sb3BlcmE6L29wZXJhXFwvKFswLTkuXSspKD86XFxzfCQpLyxhbmRyb2lkOi9hbmRyb2lkXFxzKFswLTkuXSspLyxpb3M6L3ZlcnNpb25cXC8oWzAtOS5fXSspLiptb2JpbGUuKnNhZmFyaS4qLyxzYWZhcmk6L3ZlcnNpb25cXC8oWzAtOS5fXSspLipzYWZhcmkvLGNocm9tZTovKD8hY2hyb20uKm9wciljaHJvbSg/OmV8aXVtKVxcLyhbMC05Ll0rKSg6P1xcc3wkKS99LG49L3RyaWRlbnRcXC83XFwuLyxpPVgoZSk7ZnVuY3Rpb24gcih0LGUpe3ZhciBuPXQuaW5kZXhPZihlKTtpZihuPi0xKXJldHVybiBIZSh0LnN1YnN0cmluZyhuK2UubGVuZ3RoLHQuaW5kZXhPZihcIi5cIixuKSkpfXJldHVybiB0fSh7fSksR2U9RS5uZXh0VGljaz1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcih0K1wiIGlzIG5vdCBhIGZ1bmN0aW9uXCIpO3JldHVybiB0fXJldHVybihcIm9iamVjdFwiPT09KHZvaWQgMD09PWk/XCJ1bmRlZmluZWRcIjpPKCkoaSkpJiZpLm5leHRUaWNrP2kubmV4dFRpY2s6XCJmdW5jdGlvblwiPT10eXBlb2Ygcj9mdW5jdGlvbih0KXtyKGUodCkpfTpmdW5jdGlvbih0KXtzZXRUaW1lb3V0KGUodCksMCl9KX0oKSxxZT1FLm5vdz1EYXRlLm5vd3x8ZnVuY3Rpb24oKXtyZXR1cm4obmV3IERhdGUpLmdldFRpbWUoKX0sV2U9RS5wYXJ0aWFsPVEoKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIG49W107cmV0dXJuIG49KG49bi5jb25jYXQoZSkpLmNvbmNhdChkZShhcmd1bWVudHMpKSx0LmFwcGx5KHRoaXMsbil9fSkpLEtlPUUub25jZT1XZShMLDIpLFZlPUUuRW1pdHRlcj1mdW5jdGlvbih0KXtyZXR1cm4gdD1mZSh7aW5pdGlhbGl6ZTpmdW5jdGlvbigpe3RoaXMuX2V2ZW50cz10aGlzLl9ldmVudHN8fHt9fSxvbjpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLl9ldmVudHNbdF09dGhpcy5fZXZlbnRzW3RdfHxbXSx0aGlzLl9ldmVudHNbdF0ucHVzaChlKSx0aGlzfSxvZmY6ZnVuY3Rpb24odCxlKXtpZihUKHRoaXMuX2V2ZW50cyx0KSlyZXR1cm4gdGhpcy5fZXZlbnRzW3RdLnNwbGljZSh0aGlzLl9ldmVudHNbdF0uaW5kZXhPZihlKSwxKSx0aGlzfSxvbmNlOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMub24odCxLZShlKSksdGhpc30sZW1pdDpmdW5jdGlvbih0KXtpZihUKHRoaXMuX2V2ZW50cyx0KSl7dmFyIGU9Qyhhcmd1bWVudHMsMSk7cmV0dXJuIHh0KHRoaXMuX2V2ZW50c1t0XSwoZnVuY3Rpb24odCl7dC5hcHBseSh0aGlzLGUpfSksdGhpcyksdGhpc319fSx7bWl4aW46ZnVuY3Rpb24oZSl7eHQoW1wib25cIixcIm9mZlwiLFwib25jZVwiLFwiZW1pdFwiXSwoZnVuY3Rpb24obil7ZVtuXT10LnByb3RvdHlwZVtuXX0pKSxlLl9ldmVudHM9ZS5fZXZlbnRzfHx7fX19KX0oe30pLFhlPUUuTG9nZ2VyPWZ1bmN0aW9uKHQpe3JldHVybiB0PVZlLmV4dGVuZCh7aW5pdGlhbGl6ZTpmdW5jdGlvbihlLG4pe3RoaXMubmFtZT1lLHRoaXMuc2V0TGV2ZWwoQShuKT90LmxldmVsLkRFQlVHOm4pLHRoaXMuY2FsbFN1cGVyKFZlLFwiaW5pdGlhbGl6ZVwiLGFyZ3VtZW50cyl9LHNldExldmVsOmZ1bmN0aW9uKGUpe3JldHVybiBFdChlKT8oKGU9dC5sZXZlbFtlLnRvVXBwZXJDYXNlKCldKSYmKHRoaXMuX2xldmVsPWUpLHRoaXMpOih5dChlKSYmKHRoaXMuX2xldmVsPWUpLHRoaXMpfSxnZXRMZXZlbDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9sZXZlbH0sZm9ybWF0dGVyOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGV9LHRyYWNlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2xvZyhcInRyYWNlXCIsYXJndW1lbnRzKX0sZGVidWc6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbG9nKFwiZGVidWdcIixhcmd1bWVudHMpfSxpbmZvOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2xvZyhcImluZm9cIixhcmd1bWVudHMpfSx3YXJuOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2xvZyhcIndhcm5cIixhcmd1bWVudHMpfSxlcnJvcjpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9sb2coXCJlcnJvclwiLGFyZ3VtZW50cyl9LF9sb2c6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gMD09PShuPWRlKG4pKS5sZW5ndGg/dGhpczoodGhpcy5lbWl0KFwiYWxsXCIsZSxsZShuKSksdC5sZXZlbFtlLnRvVXBwZXJDYXNlKCldPHRoaXMuX2xldmVsfHwodGhpcy5lbWl0KGUsbGUobikpLChcImRlYnVnXCI9PT1lP2NvbnNvbGUubG9nOmNvbnNvbGVbZV0pLmFwcGx5KGNvbnNvbGUsdGhpcy5mb3JtYXR0ZXIoZSxuKSkpLHRoaXMpfX0se2xldmVsOm5ldyB2ZSh7VFJBQ0U6MCxERUJVRzoxLElORk86MixXQVJOOjMsRVJST1I6NCxTSUxFTlQ6NX0pfSl9KHt9KSxZZT1FLk1lZGlhUXVlcnk9VmUuZXh0ZW5kKHtjbGFzc05hbWU6XCJNZWRpYVF1ZXJ5XCIsaW5pdGlhbGl6ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzO3RoaXMuY2FsbFN1cGVyKFZlLFwiaW5pdGlhbGl6ZVwiKSx0aGlzLl9tcWw9d2luZG93Lm1hdGNoTWVkaWEodCksdGhpcy5fbXFsLmFkZExpc3RlbmVyKChmdW5jdGlvbigpe2UuZW1pdChlLmlzTWF0Y2goKT9cIm1hdGNoXCI6XCJ1bm1hdGNoXCIpfSkpfSxpc01hdGNoOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21xbC5tYXRjaGVzfX0pLEplPUUuaXNEYXJrTW9kZT0oeD1uZXcgWWUoXCIocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspXCIpLGZ1bmN0aW9uKCl7cmV0dXJuIHguaXNNYXRjaCgpfSksUWU9RS5TdG9yZT1WZS5leHRlbmQoe2luaXRpYWxpemU6ZnVuY3Rpb24odCl7dGhpcy5jYWxsU3VwZXIoVmUsXCJpbml0aWFsaXplXCIsYXJndW1lbnRzKSx0aGlzLl9kYXRhPXR8fHt9LHRoaXMuc2F2ZSh0aGlzLl9kYXRhKX0sc2V0OmZ1bmN0aW9uKHQsZSl7dmFyIG47RXQodCk/KG49e30pW3RdPWU6Uyh0KSYmKG49dCk7dmFyIGk9dGhpczt4dChuLChmdW5jdGlvbih0LGUpe3ZhciBuPWkuX2RhdGFbZV07aS5fZGF0YVtlXT10LGkuZW1pdChcImNoYW5nZVwiLGUsdCxuKX0pKSx0aGlzLnNhdmUodGhpcy5fZGF0YSl9LGdldDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9kYXRhO2lmKEV0KHQpKXJldHVybiBlW3RdO3ZhciBuPXt9O3JldHVybiB4dCh0LChmdW5jdGlvbih0KXtuW3RdPWVbdF19KSksbn0scmVtb3ZlOmZ1bmN0aW9uKHQpe3Q9ZGUodCk7dmFyIGU9dGhpcy5fZGF0YTt4dCh0LChmdW5jdGlvbih0KXtkZWxldGUgZVt0XX0pKSx0aGlzLnNhdmUoZSl9LGNsZWFyOmZ1bmN0aW9uKCl7dGhpcy5fZGF0YT17fSx0aGlzLnNhdmUodGhpcy5fZGF0YSl9LGVhY2g6ZnVuY3Rpb24odCl7eHQodGhpcy5fZGF0YSx0KX0sc2F2ZTpmdW5jdGlvbih0KXt0aGlzLl9kYXRhPXR9fSksWmU9RS5vcmllbnRhdGlvbj1mdW5jdGlvbih0KXt2YXIgZT13aW5kb3cuc2NyZWVuO3JldHVybiB0PXtnZXQ6ZnVuY3Rpb24oKXtpZihlKXt2YXIgdD1kdChlLFwib3JpZW50YXRpb24udHlwZVwiKTtpZih0KXJldHVybiB0LnNwbGl0KFwiLVwiKS5zaGlmdCgpfXJldHVybiB3aW5kb3cuaW5uZXJXaWR0aD53aW5kb3cuaW5uZXJIZWlnaHQ/XCJsYW5kc2NhcGVcIjpcInBvcnRyYWl0XCJ9fSxWZS5taXhpbih0KSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm9yaWVudGF0aW9uY2hhbmdlXCIsKGZ1bmN0aW9uKCl7c2V0VGltZW91dCgoZnVuY3Rpb24oKXt0LmVtaXQoXCJjaGFuZ2VcIix0LmdldCgpKX0pLDIwMCl9KSwhMSksdH0oe30pLHRuPUUucGVyZk5vdz1mdW5jdGlvbih0KXt2YXIgZSxuPUsucGVyZm9ybWFuY2UsaT1LLnByb2Nlc3M7aWYobiYmbi5ub3cpdD1mdW5jdGlvbigpe3JldHVybiBuLm5vdygpfTtlbHNlIGlmKGkmJmkuaHJ0aW1lKXt2YXIgcj1mdW5jdGlvbigpe3ZhciB0PWkuaHJ0aW1lKCk7cmV0dXJuIDFlOSp0WzBdK3RbMV19O2U9cigpLTFlOSppLnVwdGltZSgpLHQ9ZnVuY3Rpb24oKXtyZXR1cm4ocigpLWUpLzFlNn19ZWxzZSBlPXFlKCksdD1mdW5jdGlvbigpe3JldHVybiBxZSgpLWV9O3JldHVybiB0fSh7fSksZW49RS5waWNrPWZ1bmN0aW9uKHQsZSxuKXtpZihFdChlKSYmKGU9W2VdKSxodChlKSl7dmFyIGk9ZTtlPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGp0KGksZSl9fXZhciByPXt9LGE9ZnVuY3Rpb24odCxuKXtlKHQsbikmJihyW25dPXQpfTtyZXR1cm4gbiYmKGE9ZnVuY3Rpb24odCxuKXtlKHQsbil8fChyW25dPXQpfSkseHQodCxhKSxyfSxubj1FLnB4VG9OdW09ZnVuY3Rpb24odCl7cmV0dXJuIEllKHQucmVwbGFjZShcInB4XCIsXCJcIikpfSxybj1FLnJhZj1mdW5jdGlvbih0KXt2YXIgZSxuLGk9MDtpZihEKXtlPXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUsbj13aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWU7Zm9yKHZhciByPVtcIm1zXCIsXCJtb3pcIixcIndlYmtpdFwiLFwib1wiXSxhPTAsbz1yLmxlbmd0aDthPG8mJiFlO2ErKyllPXdpbmRvd1tyW2FdK1wiUmVxdWVzdEFuaW1hdGlvbkZyYW1lXCJdLG49d2luZG93W3JbYV0rXCJDYW5jZWxBbmltYXRpb25GcmFtZVwiXXx8d2luZG93W3JbYV0rXCJDYW5jZWxSZXF1ZXN0QW5pbWF0aW9uRnJhbWVcIl19cmV0dXJuIG49bnx8ZnVuY3Rpb24odCl7Y2xlYXJUaW1lb3V0KHQpfSwoZT1lfHxmdW5jdGlvbih0KXt2YXIgZT1xZSgpLG49TWF0aC5tYXgoMCwxNi0oZS1pKSkscj1zZXRUaW1lb3V0KChmdW5jdGlvbigpe3QoZStuKX0pLG4pO3JldHVybiBpPWUrbixyfSkuY2FuY2VsPW4sZX0oKSxhbj1FLnJtQ29va2llPWZ1bmN0aW9uKHQpe3ZhciBlLG49d2luZG93LmxvY2F0aW9uLGk9bi5ob3N0bmFtZSxyPW4ucGF0aG5hbWUsYT1pLnNwbGl0KFwiLlwiKSxvPXIuc3BsaXQoXCIvXCIpLHM9XCJcIix1PW8ubGVuZ3RoO2lmKCFwKCkpZm9yKHZhciBsPWEubGVuZ3RoLTE7bD49MDtsLS0pe3ZhciBjPWFbbF07aWYoXCJcIiE9PWMpe2lmKHAoe2RvbWFpbjpzPVwiXCI9PT1zP2M6YytcIi5cIitzLHBhdGg6ZT1cIi9cIn0pfHxwKHtkb21haW46c30pKXJldHVybjtmb3IodmFyIF89MDtfPHU7XysrKXt2YXIgaD1vW19dO2lmKFwiXCIhPT1oKXtpZihwKHtkb21haW46cyxwYXRoOmUrPWh9KXx8cCh7cGF0aDplfSkpcmV0dXJuO2lmKHAoe2RvbWFpbjpzLHBhdGg6ZSs9XCIvXCJ9KXx8cCh7cGF0aDplfSkpcmV0dXJufX19fWZ1bmN0aW9uIHAoZSl7cmV0dXJuIGU9ZXx8e30scGUucmVtb3ZlKHQsZSksIXBlLmdldCh0KX19LG9uPUUucnRyaW09ZnVuY3Rpb24odCl7dmFyIGU9L1xccyskLztyZXR1cm4gZnVuY3Rpb24odCxuKXtpZihudWxsPT1uKXJldHVybiB0LnJlcGxhY2UoZSxcIlwiKTtmb3IodmFyIGkscixhPXQubGVuZ3RoLTEsbz1uLmxlbmd0aCxzPSEwO3MmJmE+PTA7KWZvcihzPSExLGk9LTEscj10LmNoYXJBdChhKTsrK2k8bzspaWYocj09PW5baV0pe3M9ITAsYS0tO2JyZWFrfXJldHVybiBhPj0wP3Quc3Vic3RyaW5nKDAsYSsxKTpcIlwifX0oKSxzbj1FLnRyaW09ZnVuY3Rpb24odCl7dmFyIGU9L15cXHMrfFxccyskL2c7cmV0dXJuIGZ1bmN0aW9uKHQsbil7cmV0dXJuIG51bGw9PW4/dC5yZXBsYWNlKGUsXCJcIik6WnQob24odCxuKSxuKX19KCksdW49RS5leHRyYWN0VXJscz1mdW5jdGlvbih0KXt0PWZ1bmN0aW9uKHQpe3ZhciBuPWRlKHQubWF0Y2goZSkpO3JldHVybiByZShfZShuLChmdW5jdGlvbih0KXtyZXR1cm4gc24odCl9KSkpfTt2YXIgZT0vKChodHRwcz8pfChmdHApKTpcXC9cXC9bXFx3Ll0rW14gXFxmXFxuXFxyXFx0XFx2XCJcXFxcPD5bXFxdXFx1MjEwMC1cXHVGRkZGKCksXSovZ2k7cmV0dXJuIHR9KHt9KSxsbj1FLmxpbmtpZnk9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSh0KXtyZXR1cm4nPGEgaHJlZj1cIicrdCsnXCI+Jyt0K1wiPC9hPlwifXJldHVybiBmdW5jdGlvbih0LG4pe249bnx8ZTt2YXIgaT11bih0KTtyZXR1cm4geHQoaSwoZnVuY3Rpb24oZSl7dD10LnJlcGxhY2UobmV3IFJlZ0V4cChydChlKSxcImdcIiksbil9KSksdH19KCksY249RS5xdWVyeT1mdW5jdGlvbih0KXt0PXtwYXJzZTpmdW5jdGlvbih0KXt2YXIgbj17fTtyZXR1cm4gdD1zbih0KS5yZXBsYWNlKGUsXCJcIikseHQodC5zcGxpdChcIiZcIiksKGZ1bmN0aW9uKHQpe3ZhciBlPXQuc3BsaXQoXCI9XCIpLGk9ZS5zaGlmdCgpLHI9ZS5sZW5ndGg+MD9lLmpvaW4oXCI9XCIpOm51bGw7aT1kZWNvZGVVUklDb21wb25lbnQoaSkscj1kZWNvZGVVUklDb21wb25lbnQociksQShuW2ldKT9uW2ldPXI6aHQobltpXSk/bltpXS5wdXNoKHIpOm5baV09W25baV0scl19KSksbn0sc3RyaW5naWZ5OmZ1bmN0aW9uKGUsbil7cmV0dXJuIG5lKF9lKGUsKGZ1bmN0aW9uKGUsaSl7cmV0dXJuIFMoZSkmJkF0KGUpP1wiXCI6aHQoZSk/dC5zdHJpbmdpZnkoZSxpKToobj9lbmNvZGVVUklDb21wb25lbnQobik6ZW5jb2RlVVJJQ29tcG9uZW50KGkpKStcIj1cIitlbmNvZGVVUklDb21wb25lbnQoZSl9KSksKGZ1bmN0aW9uKHQpe3JldHVybiB0Lmxlbmd0aD4wfSkpLmpvaW4oXCImXCIpfX07dmFyIGU9L14oXFw/fCN8JikvZztyZXR1cm4gdH0oe30pLF9uPUUuVXJsPWZ1bmN0aW9uKHQpe3Q9ZmUoe2NsYXNzTmFtZTpcIlVybFwiLGluaXRpYWxpemU6ZnVuY3Rpb24oZSl7IWUmJkQmJihlPXdpbmRvdy5sb2NhdGlvbi5ocmVmKSx1ZSh0aGlzLHQucGFyc2UoZXx8XCJcIikpfSxzZXRRdWVyeTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMucXVlcnk7cmV0dXJuIFModCk/eHQodCwoZnVuY3Rpb24odCxlKXtuW2VdPXR9KSk6blt0XT1lLHRoaXN9LHJtUXVlcnk6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5xdWVyeTtyZXR1cm4gaHQodCl8fCh0PWRlKHQpKSx4dCh0LChmdW5jdGlvbih0KXtkZWxldGUgZVt0XX0pKSx0aGlzfSx0b1N0cmluZzpmdW5jdGlvbigpe3JldHVybiB0LnN0cmluZ2lmeSh0aGlzKX19LHtwYXJzZTpmdW5jdGlvbih0KXt2YXIgcj17cHJvdG9jb2w6XCJcIixhdXRoOlwiXCIsaG9zdG5hbWU6XCJcIixoYXNoOlwiXCIscXVlcnk6e30scG9ydDpcIlwiLHBhdGhuYW1lOlwiXCIsc2xhc2hlczohMX0sYT1zbih0KSxvPSExLHM9YS5tYXRjaChlKTtpZihzJiYocz1zWzBdLHIucHJvdG9jb2w9cy50b0xvd2VyQ2FzZSgpLGE9YS5zdWJzdHIocy5sZW5ndGgpKSxzJiYobz1cIi8vXCI9PT1hLnN1YnN0cigwLDIpKSYmKGE9YS5zbGljZSgyKSxyLnNsYXNoZXM9ITApLG8pe2Zvcih2YXIgdT1hLGw9LTEsYz0wLF89aS5sZW5ndGg7YzxfO2MrKyl7dmFyIGg9YS5pbmRleE9mKGlbY10pOy0xIT09aCYmKC0xPT09bHx8aDxsKSYmKGw9aCl9bD4tMSYmKHU9YS5zbGljZSgwLGwpLGE9YS5zbGljZShsKSk7dmFyIHA9dS5sYXN0SW5kZXhPZihcIkBcIik7LTEhPT1wJiYoci5hdXRoPWRlY29kZVVSSUNvbXBvbmVudCh1LnNsaWNlKDAscCkpLHU9dS5zbGljZShwKzEpKSxyLmhvc3RuYW1lPXU7dmFyIGQ9dS5tYXRjaChuKTtkJiYoXCI6XCIhPT0oZD1kWzBdKSYmKHIucG9ydD1kLnN1YnN0cigxKSksci5ob3N0bmFtZT11LnN1YnN0cigwLHUubGVuZ3RoLWQubGVuZ3RoKSl9dmFyIGY9YS5pbmRleE9mKFwiI1wiKTstMSE9PWYmJihyLmhhc2g9YS5zdWJzdHIoZiksYT1hLnNsaWNlKDAsZikpO3ZhciB2PWEuaW5kZXhPZihcIj9cIik7cmV0dXJuLTEhPT12JiYoci5xdWVyeT1jbi5wYXJzZShhLnN1YnN0cih2KzEpKSxhPWEuc2xpY2UoMCx2KSksci5wYXRobmFtZT1hfHxcIi9cIixyfSxzdHJpbmdpZnk6ZnVuY3Rpb24odCl7dmFyIGU9dC5wcm90b2NvbCsodC5zbGFzaGVzP1wiLy9cIjpcIlwiKSsodC5hdXRoP2VuY29kZVVSSUNvbXBvbmVudCh0LmF1dGgpK1wiQFwiOlwiXCIpK3QuaG9zdG5hbWUrKHQucG9ydD9cIjpcIit0LnBvcnQ6XCJcIikrdC5wYXRobmFtZTtyZXR1cm4gQXQodC5xdWVyeSl8fChlKz1cIj9cIitjbi5zdHJpbmdpZnkodC5xdWVyeSkpLHQuaGFzaCYmKGUrPXQuaGFzaCksZX19KTt2YXIgZT0vXihbYS16MC05ListXSs6KS9pLG49LzpbMC05XSokLyxpPVtcIi9cIixcIj9cIixcIiNcIl07cmV0dXJuIHR9KHt9KSxobj1FLmdldEZpbGVOYW1lPWZ1bmN0aW9uKHQpe3ZhciBlPWoodC5zcGxpdChcIi9cIikpO3JldHVybiBlLmluZGV4T2YoXCI/XCIpPi0xJiYoZT1zbihlLnNwbGl0KFwiP1wiKVswXSkpLFwiXCI9PT1lJiYoZT0odD1uZXcgX24odCkpLmhvc3RuYW1lKSxlfSxwbj1FLmFqYXg9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSh0LGUsbixpKXtyZXR1cm4gZ3QoZSkmJihpPW4sbj1lLGU9e30pLHt1cmw6dCxkYXRhOmUsc3VjY2VzczpuLGRhdGFUeXBlOml9fXJldHVybigodD1mdW5jdGlvbihlKXtvZShlLHQuc2V0dGluZyk7dmFyIG4saT1lLnR5cGUscj1lLnVybCxhPWUuZGF0YSxvPWUuZGF0YVR5cGUscz1lLnN1Y2Nlc3MsdT1lLmVycm9yLGw9ZS50aW1lb3V0LGM9ZS5jb21wbGV0ZSxfPWUueGhyKCk7cmV0dXJuIF8ub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7aWYoND09PV8ucmVhZHlTdGF0ZSl7dmFyIHQ7Y2xlYXJUaW1lb3V0KG4pO3ZhciBlPV8uc3RhdHVzO2lmKGU+PTIwMCYmZTwzMDB8fDMwND09PWUpe3Q9Xy5yZXNwb25zZVRleHQsXCJ4bWxcIj09PW8mJih0PV8ucmVzcG9uc2VYTUwpO3RyeXtcImpzb25cIj09PW8mJih0PUpTT04ucGFyc2UodCkpfWNhdGNoKHQpe31zKHQsXyl9ZWxzZSB1KF8pO2MoXyl9fSxcIkdFVFwiPT09aT8oYT1jbi5zdHJpbmdpZnkoYSkscis9ci5pbmRleE9mKFwiP1wiKT4tMT9cIiZcIithOlwiP1wiK2EpOlwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCI9PT1lLmNvbnRlbnRUeXBlP1MoYSkmJihhPWNuLnN0cmluZ2lmeShhKSk6XCJhcHBsaWNhdGlvbi9qc29uXCI9PT1lLmNvbnRlbnRUeXBlJiZTKGEpJiYoYT1KU09OLnN0cmluZ2lmeShhKSksXy5vcGVuKGksciwhMCksXy5zZXRSZXF1ZXN0SGVhZGVyKFwiQ29udGVudC1UeXBlXCIsZS5jb250ZW50VHlwZSksbD4wJiYobj1zZXRUaW1lb3V0KChmdW5jdGlvbigpe18ub25yZWFkeXN0YXRlY2hhbmdlPVIsXy5hYm9ydCgpLHUoXyxcInRpbWVvdXRcIiksYyhfKX0pLGwpKSxfLnNlbmQoXCJHRVRcIj09PWk/bnVsbDphKSxffSkuc2V0dGluZz17dHlwZTpcIkdFVFwiLHN1Y2Nlc3M6UixlcnJvcjpSLGNvbXBsZXRlOlIsZGF0YVR5cGU6XCJqc29uXCIsY29udGVudFR5cGU6XCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIixkYXRhOnt9LHhocjpmdW5jdGlvbigpe3JldHVybiBuZXcgWE1MSHR0cFJlcXVlc3R9LHRpbWVvdXQ6MH0sdC5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdChlLmFwcGx5KG51bGwsYXJndW1lbnRzKSl9LHQucG9zdD1mdW5jdGlvbigpe3ZhciBuPWUuYXBwbHkobnVsbCxhcmd1bWVudHMpO3JldHVybiBuLnR5cGU9XCJQT1NUXCIsdChuKX0sdCl9KHt9KSxkbj1FLnNvcnRLZXlzPWZ1bmN0aW9uKHQpe3Q9ZnVuY3Rpb24odCl7dmFyIG49YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnt9O29lKG4sZSk7dmFyIGk9bi5kZWVwLHI9bi5jb21wYXJhdG9yLGE9W10sbz1bXTtmdW5jdGlvbiBzKHQpe3ZhciBlLG49YS5pbmRleE9mKHQpO2lmKG4+LTEpcmV0dXJuIG9bbl07aWYoaHQodCkpe2U9W10sYS5wdXNoKHQpLG8ucHVzaChlKTtmb3IodmFyIHU9MCxsPXQubGVuZ3RoO3U8bDt1Kyspe3ZhciBjPXRbdV07aSYmUyhjKT9lW3VdPXMoYyk6ZVt1XT1jfX1lbHNle2U9e30sYS5wdXNoKHQpLG8ucHVzaChlKTtmb3IodmFyIF89WCh0KS5zb3J0KHIpLGg9MCxwPV8ubGVuZ3RoO2g8cDtoKyspe3ZhciBkPV9baF0sZj10W2RdO2kmJlMoZik/ZVtkXT1zKGYpOmVbZF09Zn19cmV0dXJuIGV9cmV0dXJuIHModCl9O3ZhciBlPXtkZWVwOiExLGNvbXBhcmF0b3I6S3QuZGVmQ29tcGFyYXRvcn07cmV0dXJuIHR9KHt9KSxmbj1FLnR5cGU9ZnVuY3Rpb24odCl7dD1mdW5jdGlvbih0KXt2YXIgbj0hKGFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdKXx8YXJndW1lbnRzWzFdO2lmKG51bGw9PT10KXJldHVybiBuP1wibnVsbFwiOlwiTnVsbFwiO2lmKHZvaWQgMD09PXQpcmV0dXJuIG4/XCJ1bmRlZmluZWRcIjpcIlVuZGVmaW5lZFwiO2lmKHp0KHQpKXJldHVybiBuP1wibmFuXCI6XCJOYU5cIjt2YXIgaT1jdCh0KS5tYXRjaChlKTtyZXR1cm4gaT9uP2lbMV0udG9Mb3dlckNhc2UoKTppWzFdOlwiXCJ9O3ZhciBlPS9eXFxbb2JqZWN0XFxzKyguKj8pXSQvO3JldHVybiB0fSh7fSksdm49RS5zdHJpbmdpZnk9ZnVuY3Rpb24odCxlKXtyZXR1cm4gSlNPTi5zdHJpbmdpZnkodCxmdW5jdGlvbigpe3ZhciB0PVtdLGU9W107cmV0dXJuIGZ1bmN0aW9uKG4saSl7aWYodC5sZW5ndGg+MCl7dmFyIHI9dC5pbmRleE9mKHRoaXMpO3I+LTE/KHQuc3BsaWNlKHIrMSksZS5zcGxpY2UociwxLzAsbikpOih0LnB1c2godGhpcyksZS5wdXNoKG4pKTt2YXIgYT10LmluZGV4T2YoaSk7YT4tMSYmKGk9dFswXT09PWk/XCJbQ2lyY3VsYXIgfl1cIjpcIltDaXJjdWxhciB+LlwiK2Uuc2xpY2UoMCxhKS5qb2luKFwiLlwiKStcIl1cIil9ZWxzZSB0LnB1c2goaSk7cmV0dXJuIFd0KGkpfHxndChpKT9pPVwiW1wiK3N0KGZuKGkpKStcIiBcIitVKGkpK1wiXVwiOkEoaSkmJihpPW51bGwpLGl9fSgpLGUpfSxnbj1FLkxvY2FsU3RvcmU9ZnVuY3Rpb24odCl7dmFyIGU9RmUoXCJsb2NhbFwiKTtyZXR1cm4gUWUuZXh0ZW5kKHtpbml0aWFsaXplOmZ1bmN0aW9uKHQsbil7dGhpcy5fbmFtZT10LG49bnx8e307dmFyIGk9ZS5nZXRJdGVtKHQpO3RyeXtpPUpTT04ucGFyc2UoaSl9Y2F0Y2godCl7aT17fX1TKGkpfHwoaT17fSksbj1vZShpLG4pLHRoaXMuY2FsbFN1cGVyKFFlLFwiaW5pdGlhbGl6ZVwiLFtuXSl9LHNhdmU6ZnVuY3Rpb24odCl7aWYoQXQodCkpcmV0dXJuIGUucmVtb3ZlSXRlbSh0aGlzLl9uYW1lKTtlLnNldEl0ZW0odGhpcy5fbmFtZSx2bih0KSl9fSl9KCksbW49RS5zdHJpbmdpZnlBbGw9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlLGkscixhKXt2YXIgbz1bXTtyZXR1cm4geHQoaSwoZnVuY3Rpb24oZSl7dmFyIGkscz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHIsZSksdT1zJiZzLmdldCxsPXMmJnMuc2V0O2lmKCFhLmFjY2Vzc0dldHRlciYmdSlpPVwiKC4uLilcIjtlbHNlIHRyeXtpZihpPXJbZV0sanQoYS5pZ25vcmUsaSkpcmV0dXJuO3F0KGkpJiZpLmNhdGNoKChmdW5jdGlvbigpe30pKX1jYXRjaCh0KXtpPXQubWVzc2FnZX1vLnB1c2goXCJcIi5jb25jYXQobihlKSxcIjpcIikuY29uY2F0KHQoaSxhKSkpLHUmJm8ucHVzaChcIlwiLmNvbmNhdChuKFwiZ2V0IFwiK1UoZSkpLFwiOlwiKS5jb25jYXQodChzLmdldCxhKSkpLGwmJm8ucHVzaChcIlwiLmNvbmNhdChuKFwic2V0IFwiK1UoZSkpLFwiOlwiKS5jb25jYXQodChzLnNldCxhKSkpfSkpLCdcIicuY29uY2F0KGUsJ1wiOnsnKStvLmpvaW4oXCIsXCIpK1wifVwifWZ1bmN0aW9uIG4odCl7cmV0dXJuJ1wiJy5jb25jYXQocih0KSwnXCInKX1mdW5jdGlvbiBpKHQpe3JldHVybidcIicuY29uY2F0KHIoVSh0KSksJ1wiJyl9ZnVuY3Rpb24gcih0KXtyZXR1cm4gbnQodCkucmVwbGFjZSgvXFxcXCcvZyxcIidcIikucmVwbGFjZSgvXFx0L2csXCJcXFxcdFwiKX10PWZ1bmN0aW9uKG4pe3ZhciByPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTp7fSxvPXIuc2VsZixzPXIuc3RhcnRUaW1lLHU9dm9pZCAwPT09cz9xZSgpOnMsbD1yLnRpbWVvdXQsYz12b2lkIDA9PT1sPzA6bCxfPXIuZGVwdGgsaD12b2lkIDA9PT1fPzA6XyxwPXIuY3VyRGVwdGgsZD12b2lkIDA9PT1wPzE6cCxmPXIudmlzaXRvcix2PXZvaWQgMD09PWY/bmV3IGE6ZixnPXIudW5lbnVtZXJhYmxlLG09dm9pZCAwIT09ZyYmZyxiPXIuc3ltYm9sLHk9dm9pZCAwIT09YiYmYix3PXIuYWNjZXNzR2V0dGVyLHg9dm9pZCAwIT09dyYmdyxrPXIuaWdub3JlLCQ9dm9pZCAwPT09az9bXTprLEU9XCJcIixqPXt2aXNpdG9yOnYsdW5lbnVtZXJhYmxlOm0sc3ltYm9sOnksYWNjZXNzR2V0dGVyOngsZGVwdGg6aCxjdXJEZXB0aDpkKzEsdGltZW91dDpjLHN0YXJ0VGltZTp1LGlnbm9yZTokfSxBPWZuKG4sITEpO2lmKFwiU3RyaW5nXCI9PT1BKUU9aShuKTtlbHNlIGlmKFwiTnVtYmVyXCI9PT1BKUU9VShuKSx0dChFLFwiSW5maW5pdHlcIikmJihFPSd7XCJ2YWx1ZVwiOlwiJy5jb25jYXQoRSwnXCIsXCJ0eXBlXCI6XCJOdW1iZXJcIn0nKSk7ZWxzZSBpZihcIk5hTlwiPT09QSlFPSd7XCJ2YWx1ZVwiOlwiTmFOXCIsXCJ0eXBlXCI6XCJOdW1iZXJcIn0nO2Vsc2UgaWYoXCJCb29sZWFuXCI9PT1BKUU9bj9cInRydWVcIjpcImZhbHNlXCI7ZWxzZSBpZihcIk51bGxcIj09PUEpRT1cIm51bGxcIjtlbHNlIGlmKFwiVW5kZWZpbmVkXCI9PT1BKUU9J3tcInR5cGVcIjpcIlVuZGVmaW5lZFwifSc7ZWxzZSBpZihcIlN5bWJvbFwiPT09QSl7dmFyIFM9XCJTeW1ib2xcIjt0cnl7Uz1VKG4pfWNhdGNoKHQpe31FPSd7XCJ2YWx1ZVwiOicuY29uY2F0KGkoUyksJyxcInR5cGVcIjpcIlN5bWJvbFwifScpfWVsc2V7aWYoYyYmcWUoKS11PmMpcmV0dXJuIGkoXCJUaW1lb3V0XCIpO2lmKGgmJmQ+aClyZXR1cm4gaShcInsuLi59XCIpO0U9XCJ7XCI7dmFyIFQsQz1bXSxQPXYuZ2V0KG4pO2lmKFA/KFQ9UC5pZCxDLnB1c2goJ1wicmVmZXJlbmNlXCI6Jy5jb25jYXQoVCkpKTooVD12LnNldChuKSxDLnB1c2goJ1wiaWRcIjonLmNvbmNhdChUKSkpLEMucHVzaCgnXCJ0eXBlXCI6XCInLmNvbmNhdChBLCdcIicpKSx0dChBLFwiRnVuY3Rpb25cIik/Qy5wdXNoKCdcInZhbHVlXCI6Jy5jb25jYXQoaShCdChuKSkpKTpcIlJlZ0V4cFwiPT09QSYmQy5wdXNoKCdcInZhbHVlXCI6Jy5jb25jYXQoaShuKSkpLCFQKXt2YXIgRD1YKG4pO2lmKEQubGVuZ3RoJiZDLnB1c2goZShcImVudW1lcmFibGVcIixELG98fG4saikpLG0pe3ZhciBSPWllKGFlKG4se3Byb3RvdHlwZTohMSx1bmVudW1lcmFibGU6ITB9KSxEKTtSLmxlbmd0aCYmQy5wdXNoKGUoXCJ1bmVudW1lcmFibGVcIixSLG98fG4saikpfWlmKHkpe3ZhciBMPW5lKGFlKG4se3Byb3RvdHlwZTohMSxzeW1ib2w6ITB9KSwoZnVuY3Rpb24odCl7cmV0dXJuXCJzeW1ib2xcIj09PU8oKSh0KX0pKTtMLmxlbmd0aCYmQy5wdXNoKGUoXCJzeW1ib2xcIixMLG98fG4saikpfXZhciBOPW10KG4pO2lmKE4mJiFqdCgkLE4pKXt2YXIgTT0nXCJwcm90b1wiOicuY29uY2F0KHQoTix1ZShqLHtzZWxmOm98fG59KSkpO0MucHVzaChNKX19RSs9Qy5qb2luKFwiLFwiKStcIn1cIn1yZXR1cm4gRX07dmFyIGE9ZmUoe2luaXRpYWxpemU6ZnVuY3Rpb24oKXt0aGlzLmlkPTAsdGhpcy52aXNpdGVkPVtdfSxzZXQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy52aXNpdGVkLG49dGhpcy5pZCxpPXtpZDpuLHZhbDp0fTtyZXR1cm4gZS5wdXNoKGkpLHRoaXMuaWQrKyxufSxnZXQ6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMudmlzaXRlZCxuPTAsaT1lLmxlbmd0aDtuPGk7bisrKXt2YXIgcj1lW25dO2lmKHQ9PT1yLnZhbClyZXR1cm4gcn1yZXR1cm4hMX19KTtyZXR1cm4gdH0oe30pLGJuPUUudGhyb3R0bGU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gRyh0LGUsITApfSx5bj1FLnVuY2F1Z2h0PWZ1bmN0aW9uKHQpe3ZhciBlPVtdLG49ITE7ZnVuY3Rpb24gcih0KXtpZihuKWZvcih2YXIgaT0wLHI9ZS5sZW5ndGg7aTxyO2krKyllW2ldKHQpfXJldHVybiB0PXtzdGFydDpmdW5jdGlvbigpe249ITB9LHN0b3A6ZnVuY3Rpb24oKXtuPSExfSxhZGRMaXN0ZW5lcjpmdW5jdGlvbih0KXtlLnB1c2godCl9LHJtTGlzdGVuZXI6ZnVuY3Rpb24odCl7dmFyIG49ZS5pbmRleE9mKHQpO24+LTEmJmUuc3BsaWNlKG4sMSl9LHJtQWxsTGlzdGVuZXJzOmZ1bmN0aW9uKCl7ZT1bXX19LEQ/KHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwiZXJyb3JcIiwoZnVuY3Rpb24odCl7cih0LmVycm9yKX0pKSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInVuaGFuZGxlZHJlamVjdGlvblwiLChmdW5jdGlvbih0KXtyKHQucmVhc29uKX0pKSk6KGkub24oXCJ1bmNhdWdodEV4Y2VwdGlvblwiLHIpLGkub24oXCJ1bmhhbmRsZWRSZWplY3Rpb25cIixyKSksdH0oe30pLHduPUUudW5pcUlkPShrPTAsZnVuY3Rpb24odCl7dmFyIGU9KytrK1wiXCI7cmV0dXJuIHQ/dCtlOmV9KSx4bj1FLnZpZXdwb3J0U2NhbGU9ZnVuY3Rpb24oKXt2YXIgdD16ZShcInZpZXdwb3J0XCIpO2lmKCF0KXJldHVybiAxO3Q9X2UodC5zcGxpdChcIixcIiksKGZ1bmN0aW9uKHQpe3JldHVybiBzbih0KX0pKTt2YXIgZT0uMjUsbj01LGk9MTt4dCh0LChmdW5jdGlvbih0KXt2YXIgcj0odD10LnNwbGl0KFwiPVwiKSlbMF07dD10WzFdLFwiaW5pdGlhbC1zY2FsZVwiPT09ciYmKGk9K3QpLFwibWF4aW11bS1zY2FsZVwiPT09ciYmKG49K3QpLFwibWluaW11bS1zY2FsZVwiPT09ciYmKGU9K3QpfSkpO3ZhciByPXooaSxlLG4pO3JldHVybiB6dChyKT8xOnJ9LGtuPUUud3JhcD1mdW5jdGlvbih0LGUpe3JldHVybiBXZShlLHQpfSwkbj1FLnhwYXRoPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxuPWRvY3VtZW50LmV2YWx1YXRlKHQsZG9jdW1lbnQsbnVsbCxYUGF0aFJlc3VsdC5PUkRFUkVEX05PREVfU05BUFNIT1RfVFlQRSxudWxsKSxpPTA7aTxuLnNuYXBzaG90TGVuZ3RoO2krKyllLnB1c2gobi5zbmFwc2hvdEl0ZW0oaSkpO3JldHVybiBlfTtlLnE9RX0pLmNhbGwodGhpcyxuKDE2KSxuKDIxKSxuKDM1KS5zZXRJbW1lZGlhdGUpfSxmdW5jdGlvbih0LGUpe2Z1bmN0aW9uIG4oZSl7cmV0dXJuIHQuZXhwb3J0cz1uPU9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3QuZ2V0UHJvdG90eXBlT2Y6ZnVuY3Rpb24odCl7cmV0dXJuIHQuX19wcm90b19ffHxPYmplY3QuZ2V0UHJvdG90eXBlT2YodCl9LG4oZSl9dC5leHBvcnRzPW59LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX19LGZ1bmN0aW9uKHQsZSl7ZnVuY3Rpb24gbih0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgaT1lW25dO2kuZW51bWVyYWJsZT1pLmVudW1lcmFibGV8fCExLGkuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIGkmJihpLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxpLmtleSxpKX19dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gZSYmbih0LnByb3RvdHlwZSxlKSxpJiZuKHQsaSksdH19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDEyKSxyPW4oOSk7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIWV8fFwib2JqZWN0XCIhPT1pKGUpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlP3IodCk6ZX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDIwKTt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlJiZudWxsIT09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7dC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlJiZlLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnQsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLGUmJmkodCxlKX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDM3KTtmdW5jdGlvbiByKGUsbixhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgUmVmbGVjdCYmUmVmbGVjdC5nZXQ/dC5leHBvcnRzPXI9UmVmbGVjdC5nZXQ6dC5leHBvcnRzPXI9ZnVuY3Rpb24odCxlLG4pe3ZhciByPWkodCxlKTtpZihyKXt2YXIgYT1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHIsZSk7cmV0dXJuIGEuZ2V0P2EuZ2V0LmNhbGwobik6YS52YWx1ZX19LHIoZSxuLGF8fGUpfXQuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big0MCk7aS5yZWdpc3RlckhlbHBlcihcInJlcGVhdFwiLChmdW5jdGlvbigpe3ZhciB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTowLGU9YXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTp2b2lkIDA7aWYodDwxKXJldHVybiBlLmludmVyc2UodGhpcyk7dmFyIG49MSxpPTAscj10Km4raSxhPWksbz1cIlwiO2Rve3ZhciBzPXtpbmRleDphLGNvdW50OnQsc3RhcnQ6aSxzdGVwOm4sZmlyc3Q6YT09PWksbGFzdDphPj1yLW59LHU9W2Esc107bys9ZS5mbih0aGlzLHtkYXRhOnMsYmxvY2tQYXJhbXM6dX0pLGErPXMuc3RlcH13aGlsZShhPHIpO3JldHVybiBvfSkpLGkucmVnaXN0ZXJIZWxwZXIoXCJjbGFzc1wiLChmdW5jdGlvbih0KXt2YXIgZT10LnNwbGl0KC9cXHMrLyk7cmV0dXJuIGU9ZS5tYXAoKGZ1bmN0aW9uKHQpe3JldHVyblwiZXJ1ZGEtXCIuY29uY2F0KHQpfSkpLCdjbGFzcz1cIicuY29uY2F0KGUuam9pbihcIiBcIiksJ1wiJyl9KSksaS5yZWdpc3RlckhlbHBlcihcImNvbmNhdFwiLChmdW5jdGlvbigpe2Zvcih2YXIgdD1cIlwiLGU9MCxuPWFyZ3VtZW50cy5sZW5ndGg7ZTxuO2UrKyl7dmFyIGk9YXJndW1lbnRzW2VdO1wic3RyaW5nXCI9PXR5cGVvZiBpJiYodCs9aSl9cmV0dXJuIHR9KSksdC5leHBvcnRzPWl9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7dmFyIGU9W107cmV0dXJuIGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tYXAoKGZ1bmN0aW9uKGUpe3ZhciBuPWZ1bmN0aW9uKHQsZSl7dmFyIG49dFsxXXx8XCJcIixpPXRbM107aWYoIWkpcmV0dXJuIG47aWYoZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgYnRvYSl7dmFyIHI9KG89aSxzPWJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KG8pKSkpLHU9XCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQocyksXCIvKiMgXCIuY29uY2F0KHUsXCIgKi9cIikpLGE9aS5zb3VyY2VzLm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChpLnNvdXJjZVJvb3R8fFwiXCIpLmNvbmNhdCh0LFwiICovXCIpfSkpO3JldHVybltuXS5jb25jYXQoYSkuY29uY2F0KFtyXSkuam9pbihcIlxcblwiKX12YXIgbyxzLHU7cmV0dXJuW25dLmpvaW4oXCJcXG5cIil9KGUsdCk7cmV0dXJuIGVbMl0/XCJAbWVkaWEgXCIuY29uY2F0KGVbMl0sXCIge1wiKS5jb25jYXQobixcIn1cIik6bn0pKS5qb2luKFwiXCIpfSxlLmk9ZnVuY3Rpb24odCxuLGkpe1wic3RyaW5nXCI9PXR5cGVvZiB0JiYodD1bW251bGwsdCxcIlwiXV0pO3ZhciByPXt9O2lmKGkpZm9yKHZhciBhPTA7YTx0aGlzLmxlbmd0aDthKyspe3ZhciBvPXRoaXNbYV1bMF07bnVsbCE9byYmKHJbb109ITApfWZvcih2YXIgcz0wO3M8dC5sZW5ndGg7cysrKXt2YXIgdT1bXS5jb25jYXQodFtzXSk7aSYmclt1WzBdXXx8KG4mJih1WzJdP3VbMl09XCJcIi5jb25jYXQobixcIiBhbmQgXCIpLmNvbmNhdCh1WzJdKTp1WzJdPW4pLGUucHVzaCh1KSl9fSxlfX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7aWYodm9pZCAwPT09dCl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIHR9fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZS5fX2VzTW9kdWxlPSEwLGUuZXh0ZW5kPXMsZS5pbmRleE9mPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPTAsaT10Lmxlbmd0aDtuPGk7bisrKWlmKHRbbl09PT1lKXJldHVybiBuO3JldHVybi0xfSxlLmVzY2FwZUV4cHJlc3Npb249ZnVuY3Rpb24odCl7aWYoXCJzdHJpbmdcIiE9dHlwZW9mIHQpe2lmKHQmJnQudG9IVE1MKXJldHVybiB0LnRvSFRNTCgpO2lmKG51bGw9PXQpcmV0dXJuXCJcIjtpZighdClyZXR1cm4gdCtcIlwiO3Q9XCJcIit0fWlmKCFhLnRlc3QodCkpcmV0dXJuIHQ7cmV0dXJuIHQucmVwbGFjZShyLG8pfSxlLmlzRW1wdHk9ZnVuY3Rpb24odCl7cmV0dXJuIXQmJjAhPT10fHwhKCFjKHQpfHwwIT09dC5sZW5ndGgpfSxlLmNyZWF0ZUZyYW1lPWZ1bmN0aW9uKHQpe3ZhciBlPXMoe30sdCk7cmV0dXJuIGUuX3BhcmVudD10LGV9LGUuYmxvY2tQYXJhbXM9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5wYXRoPWUsdH0sZS5hcHBlbmRDb250ZXh0UGF0aD1mdW5jdGlvbih0LGUpe3JldHVybih0P3QrXCIuXCI6XCJcIikrZX07dmFyIGk9e1wiJlwiOlwiJmFtcDtcIixcIjxcIjpcIiZsdDtcIixcIj5cIjpcIiZndDtcIiwnXCInOlwiJnF1b3Q7XCIsXCInXCI6XCImI3gyNztcIixcImBcIjpcIiYjeDYwO1wiLFwiPVwiOlwiJiN4M0Q7XCJ9LHI9L1smPD5cIidgPV0vZyxhPS9bJjw+XCInYD1dLztmdW5jdGlvbiBvKHQpe3JldHVybiBpW3RdfWZ1bmN0aW9uIHModCl7Zm9yKHZhciBlPTE7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKylmb3IodmFyIG4gaW4gYXJndW1lbnRzW2VdKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhcmd1bWVudHNbZV0sbikmJih0W25dPWFyZ3VtZW50c1tlXVtuXSk7cmV0dXJuIHR9dmFyIHU9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztlLnRvU3RyaW5nPXU7dmFyIGw9ZnVuY3Rpb24odCl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgdH07bCgveC8pJiYoZS5pc0Z1bmN0aW9uPWw9ZnVuY3Rpb24odCl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgdCYmXCJbb2JqZWN0IEZ1bmN0aW9uXVwiPT09dS5jYWxsKHQpfSksZS5pc0Z1bmN0aW9uPWw7dmFyIGM9QXJyYXkuaXNBcnJheXx8ZnVuY3Rpb24odCl7cmV0dXJuISghdHx8XCJvYmplY3RcIiE9dHlwZW9mIHQpJiZcIltvYmplY3QgQXJyYXldXCI9PT11LmNhbGwodCl9O2UuaXNBcnJheT1jfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGkscjtpPVtuKDE4KSxuKDE5KSxuKDY3KV0sdm9pZCAwPT09KHI9ZnVuY3Rpb24odCxlLG4pe3JldHVybiBmdW5jdGlvbih0LGUsbil7dmFyIGk9ZnVuY3Rpb24oZSxuKXtyZXR1cm4gdC5qc19iZWF1dGlmeShlLG4pfTtyZXR1cm4gaS5qcz10LmpzX2JlYXV0aWZ5LGkuY3NzPWUuY3NzX2JlYXV0aWZ5LGkuaHRtbD1uLmh0bWxfYmVhdXRpZnksaS5qc19iZWF1dGlmeT10LmpzX2JlYXV0aWZ5LGkuY3NzX2JlYXV0aWZ5PWUuY3NzX2JlYXV0aWZ5LGkuaHRtbF9iZWF1dGlmeT1uLmh0bWxfYmVhdXRpZnksaX0odCxlLG4pfS5hcHBseShlLGkpKXx8KHQuZXhwb3J0cz1yKX0sZnVuY3Rpb24odCxlKXtmdW5jdGlvbiBuKGUpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj90LmV4cG9ydHM9bj1mdW5jdGlvbih0KXtyZXR1cm4gdHlwZW9mIHR9OnQuZXhwb3J0cz1uPWZ1bmN0aW9uKHQpe3JldHVybiB0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJnQuY29uc3RydWN0b3I9PT1TeW1ib2wmJnQhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIHR9LG4oZSl9dC5leHBvcnRzPW59LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtlLl9fZXNNb2R1bGU9ITA7dmFyIGk9W1wiZGVzY3JpcHRpb25cIixcImZpbGVOYW1lXCIsXCJsaW5lTnVtYmVyXCIsXCJlbmRMaW5lTnVtYmVyXCIsXCJtZXNzYWdlXCIsXCJuYW1lXCIsXCJudW1iZXJcIixcInN0YWNrXCJdO2Z1bmN0aW9uIHIodCxlKXt2YXIgbj1lJiZlLmxvYyxhPXZvaWQgMCxvPXZvaWQgMCxzPXZvaWQgMCx1PXZvaWQgMDtuJiYoYT1uLnN0YXJ0LmxpbmUsbz1uLmVuZC5saW5lLHM9bi5zdGFydC5jb2x1bW4sdT1uLmVuZC5jb2x1bW4sdCs9XCIgLSBcIithK1wiOlwiK3MpO2Zvcih2YXIgbD1FcnJvci5wcm90b3R5cGUuY29uc3RydWN0b3IuY2FsbCh0aGlzLHQpLGM9MDtjPGkubGVuZ3RoO2MrKyl0aGlzW2lbY11dPWxbaVtjXV07RXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UmJkVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMscik7dHJ5e24mJih0aGlzLmxpbmVOdW1iZXI9YSx0aGlzLmVuZExpbmVOdW1iZXI9byxPYmplY3QuZGVmaW5lUHJvcGVydHk/KE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiY29sdW1uXCIse3ZhbHVlOnMsZW51bWVyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiZW5kQ29sdW1uXCIse3ZhbHVlOnUsZW51bWVyYWJsZTohMH0pKToodGhpcy5jb2x1bW49cyx0aGlzLmVuZENvbHVtbj11KSl9Y2F0Y2godCl7fX1yLnByb3RvdHlwZT1uZXcgRXJyb3IsZS5kZWZhdWx0PXIsdC5leHBvcnRzPWUuZGVmYXVsdH0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlLG4pe3JldHVybiBlIGluIHQ/T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsZSx7dmFsdWU6bixlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pOnRbZV09bix0fX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNjMpLHI9big2NCksYT1uKDY1KTt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXtyZXR1cm4gaSh0KXx8cih0LGUpfHxhKCl9fSxmdW5jdGlvbih0LGUpe3ZhciBuO249ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30oKTt0cnl7bj1ufHxuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpfWNhdGNoKHQpe1wib2JqZWN0XCI9PXR5cGVvZiB3aW5kb3cmJihuPXdpbmRvdyl9dC5leHBvcnRzPW59LGZ1bmN0aW9uKHQsZSxuKXt3aW5kb3csdC5leHBvcnRzPWZ1bmN0aW9uKHQpe3ZhciBlPXt9O2Z1bmN0aW9uIG4oaSl7aWYoZVtpXSlyZXR1cm4gZVtpXS5leHBvcnRzO3ZhciByPWVbaV09e2k6aSxsOiExLGV4cG9ydHM6e319O3JldHVybiB0W2ldLmNhbGwoci5leHBvcnRzLHIsci5leHBvcnRzLG4pLHIubD0hMCxyLmV4cG9ydHN9cmV0dXJuIG4ubT10LG4uYz1lLG4uZD1mdW5jdGlvbih0LGUsaSl7bi5vKHQsZSl8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUse2VudW1lcmFibGU6ITAsZ2V0Oml9KX0sbi5yPWZ1bmN0aW9uKHQpe1widW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbC50b1N0cmluZ1RhZyYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsU3ltYm9sLnRvU3RyaW5nVGFnLHt2YWx1ZTpcIk1vZHVsZVwifSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSl9LG4udD1mdW5jdGlvbih0LGUpe2lmKDEmZSYmKHQ9bih0KSksOCZlKXJldHVybiB0O2lmKDQmZSYmXCJvYmplY3RcIj09dHlwZW9mIHQmJnQmJnQuX19lc01vZHVsZSlyZXR1cm4gdDt2YXIgaT1PYmplY3QuY3JlYXRlKG51bGwpO2lmKG4ucihpKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoaSxcImRlZmF1bHRcIix7ZW51bWVyYWJsZTohMCx2YWx1ZTp0fSksMiZlJiZcInN0cmluZ1wiIT10eXBlb2YgdClmb3IodmFyIHIgaW4gdCluLmQoaSxyLGZ1bmN0aW9uKGUpe3JldHVybiB0W2VdfS5iaW5kKG51bGwscikpO3JldHVybiBpfSxuLm49ZnVuY3Rpb24odCl7dmFyIGU9dCYmdC5fX2VzTW9kdWxlP2Z1bmN0aW9uKCl7cmV0dXJuIHQuZGVmYXVsdH06ZnVuY3Rpb24oKXtyZXR1cm4gdH07cmV0dXJuIG4uZChlLFwiYVwiLGUpLGV9LG4ubz1mdW5jdGlvbih0LGUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKX0sbi5wPVwiL2Fzc2V0cy9cIixuKG4ucz0zOSl9KFtmdW5jdGlvbih0LGUsbil7dmFyIGk9big4KSxyPW4oNCksYT1uKDIzKTtuKDEyKSxlPWZ1bmN0aW9uKHQsZSxuKXt2YXIgbyxzO2lmKGU9YShlLG4pLGkodCkpZm9yKG89MCxzPXQubGVuZ3RoO288cztvKyspZSh0W29dLG8sdCk7ZWxzZXt2YXIgdT1yKHQpO2ZvcihvPTAscz11Lmxlbmd0aDtvPHM7bysrKWUodFt1W29dXSx1W29dLHQpfXJldHVybiB0fSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oOSk7ZT1mdW5jdGlvbih0KXtyZXR1cm5cIltvYmplY3QgU3RyaW5nXVwiPT09aSh0KX0sdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSl7ZT1mdW5jdGlvbih0KXt2YXIgZT10eXBlb2YgdDtyZXR1cm4hIXQmJihcImZ1bmN0aW9uXCI9PT1lfHxcIm9iamVjdFwiPT09ZSl9LHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigxKSxyPW4oMTEpLGE9bigzMSk7ZT1mdW5jdGlvbih0KXtyZXR1cm4gcihpKHQpP25ldyBhKHQpOnQpfSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTApLHI9big0MCk7ZT1PYmplY3Qua2V5cyYmIXIoKT9PYmplY3Qua2V5czpmdW5jdGlvbih0KXt2YXIgZT1bXTtmb3IodmFyIG4gaW4gdClpKHQsbikmJmUucHVzaChuKTtyZXR1cm4gZX0sdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSl7ZT1mdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09dH0sdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDkpO2U9ZnVuY3Rpb24odCl7cmV0dXJuXCJbb2JqZWN0IE51bWJlcl1cIj09PWkodCl9LHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big5KTtlPWZ1bmN0aW9uKHQpe3ZhciBlPWkodCk7cmV0dXJuXCJbb2JqZWN0IEZ1bmN0aW9uXVwiPT09ZXx8XCJbb2JqZWN0IEdlbmVyYXRvckZ1bmN0aW9uXVwiPT09ZXx8XCJbb2JqZWN0IEFzeW5jRnVuY3Rpb25dXCI9PT1lfSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNikscj1uKDcpLGE9TWF0aC5wb3coMiw1MyktMTtlPWZ1bmN0aW9uKHQpe2lmKCF0KXJldHVybiExO3ZhciBlPXQubGVuZ3RoO3JldHVybiBpKGUpJiZlPj0wJiZlPD1hJiYhcih0KX0sdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSl7dmFyIG49T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztlPWZ1bmN0aW9uKHQpe3JldHVybiBuLmNhbGwodCl9LHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUpe3ZhciBuPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7ZT1mdW5jdGlvbih0LGUpe3JldHVybiBuLmNhbGwodCxlKX0sdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDgpLHI9big0OSksYT1uKDEzKSxvPW4oMSk7ZT1mdW5jdGlvbih0KXtyZXR1cm4gdD9hKHQpP3Q6aSh0KSYmIW8odCk/cih0KTpbdF06W119LHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUpe2U9e30sdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDkpO2U9QXJyYXkuaXNBcnJheXx8ZnVuY3Rpb24odCl7cmV0dXJuXCJbb2JqZWN0IEFycmF5XVwiPT09aSh0KX0sdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDIxKSxyPW4oMTEpLGE9big1MCksbz1uKDUyKSxzPW4oNTQpLHU9KGU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdS5leHRlbmQodCxlKX0pLkJhc2U9ZnVuY3Rpb24gdChlLG4sdSl7dT11fHx7fTt2YXIgbCxjPW4uY2xhc3NOYW1lfHxvKG4sXCJpbml0aWFsaXplLm5hbWVcIil8fFwiXCI7cmV0dXJuIGRlbGV0ZSBuLmNsYXNzTmFtZSxsPXM/ZnVuY3Rpb24oKXt2YXIgdD1yKGFyZ3VtZW50cyk7cmV0dXJuIHRoaXMuaW5pdGlhbGl6ZSYmdGhpcy5pbml0aWFsaXplLmFwcGx5KHRoaXMsdCl8fHRoaXN9Om5ldyBGdW5jdGlvbihcInRvQXJyXCIsXCJyZXR1cm4gZnVuY3Rpb24gXCIrYytcIigpe3ZhciBhcmdzID0gdG9BcnIoYXJndW1lbnRzKTtyZXR1cm4gdGhpcy5pbml0aWFsaXplID8gdGhpcy5pbml0aWFsaXplLmFwcGx5KHRoaXMsIGFyZ3MpIHx8IHRoaXMgOiB0aGlzO307XCIpKHIpLGEobCxlKSxsLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1sLGwuZXh0ZW5kPWZ1bmN0aW9uKGUsbil7cmV0dXJuIHQobCxlLG4pfSxsLmluaGVyaXRzPWZ1bmN0aW9uKHQpe2EobCx0KX0sbC5tZXRob2RzPWZ1bmN0aW9uKHQpe3JldHVybiBpKGwucHJvdG90eXBlLHQpLGx9LGwuc3RhdGljcz1mdW5jdGlvbih0KXtyZXR1cm4gaShsLHQpLGx9LGwubWV0aG9kcyhuKS5zdGF0aWNzKHUpLGx9KE9iamVjdCx7Y2xhc3NOYW1lOlwiQmFzZVwiLGNhbGxTdXBlcjpmdW5jdGlvbih0LGUsbil7cmV0dXJuIHQucHJvdG90eXBlW2VdLmFwcGx5KHRoaXMsbil9LHRvU3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY29uc3RydWN0b3IubmFtZX19KTt0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTYpLHI9bigwKTtuKDEyKSxlPWZ1bmN0aW9uKHQsZSxuKXt2YXIgYT1bXTtyZXR1cm4gZT1pKGUsbikscih0LChmdW5jdGlvbih0LG4saSl7ZSh0LG4saSkmJmEucHVzaCh0KX0pKSxhfSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNykscj1uKDIpLGE9bigyMyksbz1uKDQ1KSxzPW4oNDgpO2U9ZnVuY3Rpb24odCxlLG4pe3JldHVybiBudWxsPT10P3M6aSh0KT9hKHQsZSxuKTpyKHQpP28odCk6ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBudWxsPT1lP3ZvaWQgMDplW3RdfX19LHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUpe2U9ZnVuY3Rpb24odCl7cmV0dXJuIG51bGw9PXQ/XCJcIjp0LnRvU3RyaW5nKCl9LHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUpe2U9ZnVuY3Rpb24odCl7cmV0dXJuIHQubGVuZ3RoPDE/dDp0WzBdLnRvVXBwZXJDYXNlKCkrdC5zbGljZSgxKX0sdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDY2KSxyPW4oMSksYT1uKDgpLG89big2Nyk7ZT1mdW5jdGlvbih0LGUpe3JldHVybiByKHQpP3QuaW5kZXhPZihlKT4tMTooYSh0KXx8KHQ9byh0KSksaSh0LGUpPj0wKX0sdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDE0KSxyPW4oMTApLGE9bigwKSxvPW4oNTUpLHM9big1Nik7ZT1pKHtpbml0aWFsaXplOmZ1bmN0aW9uKCl7dGhpcy5fZXZlbnRzPXRoaXMuX2V2ZW50c3x8e319LG9uOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuX2V2ZW50c1t0XT10aGlzLl9ldmVudHNbdF18fFtdLHRoaXMuX2V2ZW50c1t0XS5wdXNoKGUpLHRoaXN9LG9mZjpmdW5jdGlvbih0LGUpe2lmKHIodGhpcy5fZXZlbnRzLHQpKXJldHVybiB0aGlzLl9ldmVudHNbdF0uc3BsaWNlKHRoaXMuX2V2ZW50c1t0XS5pbmRleE9mKGUpLDEpLHRoaXN9LG9uY2U6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5vbih0LHMoZSkpLHRoaXN9LGVtaXQ6ZnVuY3Rpb24odCl7aWYocih0aGlzLl9ldmVudHMsdCkpe3ZhciBlPW8oYXJndW1lbnRzLDEpO3JldHVybiBhKHRoaXMuX2V2ZW50c1t0XSwoZnVuY3Rpb24odCl7dC5hcHBseSh0aGlzLGUpfSksdGhpcyksdGhpc319fSx7bWl4aW46ZnVuY3Rpb24odCl7YShbXCJvblwiLFwib2ZmXCIsXCJvbmNlXCIsXCJlbWl0XCJdLChmdW5jdGlvbihuKXt0W25dPWUucHJvdG90eXBlW25dfSkpLHQuX2V2ZW50cz10Ll9ldmVudHN8fHt9fX0pLHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7ZT1uKDIyKShuKDI0KSksdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDUpLHI9bigwKTtlPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGZ1bmN0aW9uKG4pe3JldHVybiByKGFyZ3VtZW50cywoZnVuY3Rpb24oYSxvKXtpZigwIT09byl7dmFyIHM9dChhKTtyKHMsKGZ1bmN0aW9uKHQpe2UmJiFpKG5bdF0pfHwoblt0XT1hW3RdKX0pKX19KSksbn19LHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big1KTtlPWZ1bmN0aW9uKHQsZSxuKXtpZihpKGUpKXJldHVybiB0O3N3aXRjaChudWxsPT1uPzM6bil7Y2FzZSAxOnJldHVybiBmdW5jdGlvbihuKXtyZXR1cm4gdC5jYWxsKGUsbil9O2Nhc2UgMzpyZXR1cm4gZnVuY3Rpb24obixpLHIpe3JldHVybiB0LmNhbGwoZSxuLGkscil9O2Nhc2UgNDpyZXR1cm4gZnVuY3Rpb24obixpLHIsYSl7cmV0dXJuIHQuY2FsbChlLG4saSxyLGEpfX1yZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdC5hcHBseShlLGFyZ3VtZW50cyl9fSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNCkscj1uKDI1KSxhPW4oNDQpLG89T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMscz1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO2U9ZnVuY3Rpb24odCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnt9LG49ZS5wcm90b3R5cGUsdT12b2lkIDA9PT1ufHxuLGw9ZS51bmVudW1lcmFibGUsYz12b2lkIDAhPT1sJiZsLF89ZS5zeW1ib2wsaD12b2lkIDAhPT1fJiZfLHA9W107aWYoKGN8fGgpJiZvKXt2YXIgZD1pO2MmJm8mJihkPW8pO2Rve3A9cC5jb25jYXQoZCh0KSksaCYmcyYmKHA9cC5jb25jYXQocyh0KSkpfXdoaWxlKHUmJih0PXIodCkpJiZ0IT09T2JqZWN0LnByb3RvdHlwZSk7cD1hKHApfWVsc2UgaWYodSlmb3IodmFyIGYgaW4gdClwLnB1c2goZik7ZWxzZSBwPWkodCk7cmV0dXJuIHB9LHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigyKSxyPW4oNyksYT1PYmplY3QuZ2V0UHJvdG90eXBlT2Ysbz17fS5jb25zdHJ1Y3RvcjtlPWZ1bmN0aW9uKHQpe2lmKGkodCkpe2lmKGEpcmV0dXJuIGEodCk7dmFyIGU9dC5fX3Byb3RvX187cmV0dXJuIGV8fG51bGw9PT1lP2U6cih0LmNvbnN0cnVjdG9yKT90LmNvbnN0cnVjdG9yLnByb3RvdHlwZTp0IGluc3RhbmNlb2Ygbz9vLnByb3RvdHlwZTp2b2lkIDB9fSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlKXtlPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGU9bnVsbD09ZT90Lmxlbmd0aC0xOitlLGZ1bmN0aW9uKCl7dmFyIG4saT1NYXRoLm1heChhcmd1bWVudHMubGVuZ3RoLWUsMCkscj1uZXcgQXJyYXkoaSk7Zm9yKG49MDtuPGk7bisrKXJbbl09YXJndW1lbnRzW24rZV07c3dpdGNoKGUpe2Nhc2UgMDpyZXR1cm4gdC5jYWxsKHRoaXMscik7Y2FzZSAxOnJldHVybiB0LmNhbGwodGhpcyxhcmd1bWVudHNbMF0scik7Y2FzZSAyOnJldHVybiB0LmNhbGwodGhpcyxhcmd1bWVudHNbMF0sYXJndW1lbnRzWzFdLHIpfXZhciBhPW5ldyBBcnJheShlKzEpO2ZvcihuPTA7bjxlO24rKylhW25dPWFyZ3VtZW50c1tuXTtyZXR1cm4gYVtlXT1yLHQuYXBwbHkodGhpcyxhKX19LHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUpe2U9ZnVuY3Rpb24odCl7cmV0dXJuITA9PT10fHwhMT09PXR9LHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigxNyk7ZT1mdW5jdGlvbih0KXtyZXR1cm4gaSh0KS50b0xvY2FsZUxvd2VyQ2FzZSgpfSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNik7ZT1mdW5jdGlvbih0KXtyZXR1cm4gaSh0KSYmdCE9PSt0fSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMzEpLHI9big2MyksYT1uKDY0KSxvPW4oNjUpLHM9bigzNCksdT1uKDcxKSxsPW4oNzIpLGM9big3MyksXz1uKDc0KSxoPW4oNzUpLHA9big3NyksZD1uKDc5KSxmPW4oNSksdj1uKDEpO2U9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBpKHQpfSxpLm1ldGhvZHMoe29mZnNldDpmdW5jdGlvbigpe3JldHVybiByKHRoaXMpfSxoaWRlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY3NzKFwiZGlzcGxheVwiLFwibm9uZVwiKX0sc2hvdzpmdW5jdGlvbigpe3JldHVybiBhKHRoaXMpLHRoaXN9LGZpcnN0OmZ1bmN0aW9uKCl7cmV0dXJuIGUodGhpc1swXSl9LGxhc3Q6ZnVuY3Rpb24oKXtyZXR1cm4gZShsKHRoaXMpKX0sZ2V0OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzW3RdfSxlcTpmdW5jdGlvbih0KXtyZXR1cm4gZSh0aGlzW3RdKX0sb246ZnVuY3Rpb24odCxlLG4pe3JldHVybiBoLm9uKHRoaXMsdCxlLG4pLHRoaXN9LG9mZjpmdW5jdGlvbih0LGUsbil7cmV0dXJuIGgub2ZmKHRoaXMsdCxlLG4pLHRoaXN9LGh0bWw6ZnVuY3Rpb24odCl7dmFyIGU9dS5odG1sKHRoaXMsdCk7cmV0dXJuIGYodCk/ZTp0aGlzfSx0ZXh0OmZ1bmN0aW9uKHQpe3ZhciBlPXUudGV4dCh0aGlzLHQpO3JldHVybiBmKHQpP2U6dGhpc30sdmFsOmZ1bmN0aW9uKHQpe3ZhciBlPXUudmFsKHRoaXMsdCk7cmV0dXJuIGYodCk/ZTp0aGlzfSxjc3M6ZnVuY3Rpb24odCxlKXt2YXIgbj1vKHRoaXMsdCxlKTtyZXR1cm4gZyh0LGUpP246dGhpc30sYXR0cjpmdW5jdGlvbih0LGUpe3ZhciBuPXModGhpcyx0LGUpO3JldHVybiBnKHQsZSk/bjp0aGlzfSxkYXRhOmZ1bmN0aW9uKHQsZSl7dmFyIG49Xyh0aGlzLHQsZSk7cmV0dXJuIGcodCxlKT9uOnRoaXN9LHJtQXR0cjpmdW5jdGlvbih0KXtyZXR1cm4gcy5yZW1vdmUodGhpcyx0KSx0aGlzfSxyZW1vdmU6ZnVuY3Rpb24oKXtyZXR1cm4gYyh0aGlzKSx0aGlzfSxhZGRDbGFzczpmdW5jdGlvbih0KXtyZXR1cm4gcC5hZGQodGhpcyx0KSx0aGlzfSxybUNsYXNzOmZ1bmN0aW9uKHQpe3JldHVybiBwLnJlbW92ZSh0aGlzLHQpLHRoaXN9LHRvZ2dsZUNsYXNzOmZ1bmN0aW9uKHQpe3JldHVybiBwLnRvZ2dsZSh0aGlzLHQpLHRoaXN9LGhhc0NsYXNzOmZ1bmN0aW9uKHQpe3JldHVybiBwLmhhcyh0aGlzLHQpfSxwYXJlbnQ6ZnVuY3Rpb24oKXtyZXR1cm4gZSh0aGlzWzBdLnBhcmVudE5vZGUpfSxhcHBlbmQ6ZnVuY3Rpb24odCl7cmV0dXJuIGQuYXBwZW5kKHRoaXMsdCksdGhpc30scHJlcGVuZDpmdW5jdGlvbih0KXtyZXR1cm4gZC5wcmVwZW5kKHRoaXMsdCksdGhpc30sYmVmb3JlOmZ1bmN0aW9uKHQpe3JldHVybiBkLmJlZm9yZSh0aGlzLHQpLHRoaXN9LGFmdGVyOmZ1bmN0aW9uKHQpe3JldHVybiBkLmFmdGVyKHRoaXMsdCksdGhpc319KTt2YXIgZz1mdW5jdGlvbih0LGUpe3JldHVybiBmKGUpJiZ2KHQpfTt0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTQpLHI9bigxKSxhPW4oMCksbz1uZXcoZT1pKHtjbGFzc05hbWU6XCJTZWxlY3RcIixpbml0aWFsaXplOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmxlbmd0aD0wLHQ/cih0KT9vLmZpbmQodCk6dm9pZCh0Lm5vZGVUeXBlJiYodGhpc1swXT10LHRoaXMubGVuZ3RoPTEpKTp0aGlzfSxmaW5kOmZ1bmN0aW9uKHQpe3ZhciBuPW5ldyBlO3JldHVybiB0aGlzLmVhY2goKGZ1bmN0aW9uKCl7IWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPWUubGVuZ3RoLGk9dC5sZW5ndGgscj0wO3I8bjtyKyspdFtpKytdPWVbcl07dC5sZW5ndGg9aX0obix0aGlzLnF1ZXJ5U2VsZWN0b3JBbGwodCkpfSkpLG59LGVhY2g6ZnVuY3Rpb24odCl7cmV0dXJuIGEodGhpcywoZnVuY3Rpb24oZSxuKXt0LmNhbGwoZSxuLGUpfSkpLHRoaXN9fSkpKGRvY3VtZW50KTt0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMzMpO2U9ZnVuY3Rpb24odCl7cmV0dXJuIGkodCkuam9pbihcIi1cIil9LHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUpe3ZhciBuPS8oW0EtWl0pL2csaT0vW18uXFwtIF0rL2cscj0vKF4tKXwoLSQpL2c7ZT1mdW5jdGlvbih0KXtyZXR1cm4odD10LnJlcGxhY2UobixcIi0kMVwiKS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoaSxcIi1cIikucmVwbGFjZShyLFwiXCIpKS5zcGxpdChcIi1cIil9LHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigxMSkscj1uKDIpLGE9bigxKSxvPW4oMCkscz1uKDUpLHU9bigzKTsoZT1mdW5jdGlvbih0LGUsbil7aWYodD11KHQpLHMobikmJmEoZSkpcmV0dXJuIGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuZ2V0QXR0cmlidXRlKGUpfSh0WzBdLGUpO3ZhciBpPWU7cihpKXx8KChpPXt9KVtlXT1uKSxmdW5jdGlvbih0LGUpe28odCwoZnVuY3Rpb24odCl7byhlLChmdW5jdGlvbihlLG4pe3Quc2V0QXR0cmlidXRlKG4sZSl9KSl9KSl9KHQsaSl9KS5yZW1vdmU9ZnVuY3Rpb24odCxlKXt0PXUodCksZT1pKGUpLG8odCwoZnVuY3Rpb24odCl7byhlLChmdW5jdGlvbihlKXt0LnJlbW92ZUF0dHJpYnV0ZShlKX0pKX0pKX0sdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSl7ZT1mdW5jdGlvbih0LGUpe3ZhciBuPVtdO2U9ZXx8MTtmb3IodmFyIGk9MCxyPU1hdGguY2VpbCh0Lmxlbmd0aC9lKTtpPHI7aSsrKXt2YXIgYT1pKmUsbz1hK2U7bi5wdXNoKHQuc2xpY2UoYSxvKSl9cmV0dXJuIG59LHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9dGhpcyYmdGhpcy5fX2ltcG9ydERlZmF1bHR8fGZ1bmN0aW9uKHQpe3JldHVybiB0JiZ0Ll9fZXNNb2R1bGU/dDp7ZGVmYXVsdDp0fX07T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIHI9aShuKDE3KSksYT1pKG4oODQpKSxvPWkobigzNykpLHM9aShuKDM4KSksdT1pKG4oODcpKTtlLmVuY29kZT1mdW5jdGlvbih0KXtyZXR1cm4gdS5kZWZhdWx0KHIuZGVmYXVsdCh0KSkucmVwbGFjZSgvXFxuL2csXCLihrVcIikucmVwbGFjZSgvXFxmfFxccnxcXHQvZyxcIlwiKX0sZS5nZXRGbkFic3RyYWN0PWZ1bmN0aW9uKHQpe3JldHVybiB0Lmxlbmd0aD41MDAmJih0PXQuc2xpY2UoMCw1MDApK1wiLi4uXCIpLFwixpIgXCIrYS5kZWZhdWx0KGZ1bmN0aW9uKHQpe3ZhciBlPXQubWF0Y2gobCk7cmV0dXJuIGU/ZVswXTp0fSh0KS5yZXBsYWNlKFwiZnVuY3Rpb25cIixcIlwiKSl9O3ZhciBsPS9mdW5jdGlvbiguKj8pXFwoKC4qPylcXCkvO2Z1bmN0aW9uIGModCxlKXtyZXR1cm4odD1fKHQpKT4oZT1fKGUpKT8xOnQ8ZT8tMTowfWZ1bmN0aW9uIF8odCl7cmV0dXJuIDk1PT09dD8xMjM6dH1lLnNvcnRPYmpOYW1lPWZ1bmN0aW9uKHQsZSl7dD1yLmRlZmF1bHQodCksZT1yLmRlZmF1bHQoZSk7dmFyIG49by5kZWZhdWx0KHQpLGk9by5kZWZhdWx0KGUpO2lmKCFpc05hTihuKSYmIWlzTmFOKGkpKXJldHVybiBuPmk/MTpuPGk/LTE6MDsocy5kZWZhdWx0KHQsXCJnZXQgXCIpfHxzLmRlZmF1bHQodCxcInNldCBcIikpJiYodD10LnNsaWNlKDQpKSwocy5kZWZhdWx0KGUsXCJnZXQgXCIpfHxzLmRlZmF1bHQoZSxcInNldCBcIikpJiYoZT1lLnNsaWNlKDQpKTtmb3IodmFyIGE9dC5sZW5ndGgsdT1lLmxlbmd0aCxsPWE+dT91OmEsXz0wO188bDtfKyspe3ZhciBoPWModC5jaGFyQ29kZUF0KF8pLGUuY2hhckNvZGVBdChfKSk7aWYoMCE9PWgpcmV0dXJuIGh9cmV0dXJuIGE+dT8xOmE8dT8tMTowfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNikscj1uKDIpLGE9big3KSxvPW4oMSk7ZT1mdW5jdGlvbih0KXtpZihpKHQpKXJldHVybiB0O2lmKHIodCkpe3ZhciBlPWEodC52YWx1ZU9mKT90LnZhbHVlT2YoKTp0O3Q9cihlKT9lK1wiXCI6ZX1yZXR1cm4gbyh0KT8rdDowPT09dD90Oit0fSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlKXtlPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIDA9PT10LmluZGV4T2YoZSl9LHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGkscixhPXRoaXMmJnRoaXMuX19leHRlbmRzfHwoaT1mdW5jdGlvbih0LGUpe3JldHVybihpPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbih0LGUpe3QuX19wcm90b19fPWV9fHxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbiBpbiBlKWUuaGFzT3duUHJvcGVydHkobikmJih0W25dPWVbbl0pfSkodCxlKX0sZnVuY3Rpb24odCxlKXtmdW5jdGlvbiBuKCl7dGhpcy5jb25zdHJ1Y3Rvcj10fWkodCxlKSx0LnByb3RvdHlwZT1udWxsPT09ZT9PYmplY3QuY3JlYXRlKGUpOihuLnByb3RvdHlwZT1lLnByb3RvdHlwZSxuZXcgbil9KSxvPXRoaXMmJnRoaXMuX19pbXBvcnREZWZhdWx0fHxmdW5jdGlvbih0KXtyZXR1cm4gdCYmdC5fX2VzTW9kdWxlP3Q6e2RlZmF1bHQ6dH19O09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBzPW8obigyMCkpLHU9byhuKDI1KSksbD1vKG4oNikpLGM9byhuKDI3KSksXz1vKG4oMjgpKSxoPW8obigyKSkscD1vKG4oMTMpKSxkPW8obigxOCkpLGY9byhuKDQpKSx2PW8obigwKSksZz1vKG4oNTkpKSxtPW8obig2MSkpLGI9byhuKDYyKSkseT1vKG4oMzApKSx3PW8obig4MCkpLHg9byhuKDI0KSksaz1vKG4oMTUpKSwkPW8obigzNSkpLE89byhuKDE3KSksRT1vKG4oODIpKSxqPW8obig4MykpLEE9bigzNiksUz1vKG4oODgpKTtuKDkwKTt2YXIgVD1cImx1bmEtb2JqZWN0LXZpZXdlci1cIjt0LmV4cG9ydHM9KChyPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSxuKXt2YXIgaT12b2lkIDA9PT1uP3t9Om4scj1pLnVuZW51bWVyYWJsZSxhPXZvaWQgMCE9PXImJnIsbz1pLmFjY2Vzc0dldHRlcixzPXZvaWQgMCE9PW8mJm8sdT10LmNhbGwodGhpcyl8fHRoaXM7cmV0dXJuIHUuJGNvbnRhaW5lcj15LmRlZmF1bHQoZSksdS4kY29udGFpbmVyLmFkZENsYXNzKFwibHVuYS1vYmplY3Qtdmlld2VyXCIpLHUudW5lbnVtZXJhYmxlPWEsdS5hY2Nlc3NHZXR0ZXI9cyx1LmJpbmRFdmVudCgpLHV9cmV0dXJuIGEoZSx0KSxlLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24odCl7dGhpcy5kYXRhPVt0XSx0aGlzLnZpc2l0b3I9bmV3IGouZGVmYXVsdCx0aGlzLm1hcD17fSx0aGlzLmFwcGVuZFRwbCgpfSxlLnByb3RvdHlwZS5vYmpUb0h0bWw9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLGk9dGhpcy52aXNpdG9yLHI9dCxhPSExLG89aS5nZXQodCk7byYmby5zZWxmJiYocj1vLnNlbGYpO3ZhciBzPVwiXCIsbD1bXCJlbnVtZXJhYmxlXCJdLGM9Zi5kZWZhdWx0KHQpLF89W10saD1bXSxkPVtdLGc9e307aWYodGhpcy51bmVudW1lcmFibGUmJiFlJiYobC5wdXNoKFwidW5lbnVtZXJhYmxlXCIpLGwucHVzaChcInN5bWJvbFwiKSxfPXcuZGVmYXVsdCh4LmRlZmF1bHQodCx7cHJvdG90eXBlOiExLHVuZW51bWVyYWJsZTohMH0pLGMpLGg9ay5kZWZhdWx0KHguZGVmYXVsdCh0LHtwcm90b3R5cGU6ITEsc3ltYm9sOiEwfSksKGZ1bmN0aW9uKHQpe3JldHVyblwic3ltYm9sXCI9PXR5cGVvZiB0fSkpKSxwLmRlZmF1bHQodCkmJnQubGVuZ3RoPjEwMCl7bC51bnNoaWZ0KFwidmlydHVhbFwiKSxhPSEwO3ZhciBiPTAseT17fTt2LmRlZmF1bHQoJC5kZWZhdWx0KHQsMTAwKSwoZnVuY3Rpb24odCl7dmFyIGU9T2JqZWN0LmNyZWF0ZShudWxsKSxuPWIsaT1cIltcIituO3YuZGVmYXVsdCh0LChmdW5jdGlvbih0KXtlW2JdPXQseVtiXT0hMCxiKyt9KSk7dmFyIHI9Yi0xO2dbaSs9KHItbj4wP1wiIOKApiBcIityOlwiXCIpK1wiXVwiXT1lfSkpLGQ9Zi5kZWZhdWx0KGcpLGM9ay5kZWZhdWx0KGMsKGZ1bmN0aW9uKHQpe3JldHVybiF5W3RdfSkpfXYuZGVmYXVsdChsLChmdW5jdGlvbihpKXt2YXIgbz1bXTtvPVwic3ltYm9sXCI9PT1pP2g6XCJ1bmVudW1lcmFibGVcIj09PWk/XzpcInZpcnR1YWxcIj09PWk/ZDpjLGF8fG8uc29ydChBLnNvcnRPYmpOYW1lKTtmb3IodmFyIHU9MCxsPW8ubGVuZ3RoO3U8bDt1Kyspe3ZhciBwPU8uZGVmYXVsdChvW3VdKSxmPVwiXCIsdj1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQscCksYj12JiZ2LmdldCx5PXYmJnYuc2V0O2lmKGImJiFuLmFjY2Vzc0dldHRlcilmPVwiKC4uLilcIjtlbHNlIHRyeXtmPVwidmlydHVhbFwiPT09aT9nW3BdOnJbcF0sbS5kZWZhdWx0KGYpJiZmLmNhdGNoKEUuZGVmYXVsdCl9Y2F0Y2godCl7Zj10Lm1lc3NhZ2V9cys9bi5jcmVhdGVFbChwLHQsZixpLGUpLGImJihzKz1uLmNyZWF0ZUVsKFwiZ2V0IFwiK3AsdCx2LmdldCxpLGUpKSx5JiYocys9bi5jcmVhdGVFbChcInNldCBcIitwLHQsdi5zZXQsaSxlKSl9fSkpO3ZhciBqPXUuZGVmYXVsdCh0KTtpZighZSYmailpZihcIlwiPT09cyl7dmFyIFM9aS5zZXQoaix7c2VsZjp0fSk7dGhpcy5tYXBbU109aixzPXRoaXMub2JqVG9IdG1sKGopfWVsc2Ugcys9dGhpcy5jcmVhdGVFbChcIl9fcHJvdG9fX1wiLHJ8fHQsaixcInByb3RvXCIpO3JldHVybiBzfSxlLnByb3RvdHlwZS5jcmVhdGVFbD1mdW5jdGlvbih0LGUsbixpLHIpe3ZvaWQgMD09PXImJihyPSExKTt2YXIgYT10aGlzLnZpc2l0b3Isbz10eXBlb2YgbixzPWIuZGVmYXVsdChuLCExKTtpZihcInZpcnR1YWxcIj09PWkmJihzPXQpLG51bGw9PT1uKXJldHVyblwiPGxpPlwiK3kodCkrJzxzcGFuIGNsYXNzPVwiJytUKydudWxsXCI+bnVsbDwvc3Bhbj48L2xpPic7aWYobC5kZWZhdWx0KG4pfHxjLmRlZmF1bHQobikpcmV0dXJuXCI8bGk+XCIreSh0KSsnPHNwYW4gY2xhc3M9XCInKyhUK28pKydcIj4nK0EuZW5jb2RlKG4pK1wiPC9zcGFuPjwvbGk+XCI7aWYoXCJSZWdFeHBcIj09PXMmJihvPVwicmVnZXhwXCIpLFwiTnVtYmVyXCI9PT1zJiYobz1cIm51bWJlclwiKSxcIk51bWJlclwiPT09c3x8XCJSZWdFeHBcIj09PXMpcmV0dXJuXCI8bGk+XCIreSh0KSsnPHNwYW4gY2xhc3M9XCInKyhUK28pKydcIj4nK0EuZW5jb2RlKG4udmFsdWUpK1wiPC9zcGFuPjwvbGk+XCI7aWYoXCJVbmRlZmluZWRcIj09PXN8fFwiU3ltYm9sXCI9PT1zKXJldHVyblwiPGxpPlwiK3kodCkrJzxzcGFuIGNsYXNzPVwiJytUKydzcGVjaWFsXCI+JytfLmRlZmF1bHQocykrXCI8L3NwYW4+PC9saT5cIjtpZihcIiguLi4pXCI9PT1uKXJldHVyblwiPGxpPlwiK3kodCkrJzxzcGFuIGNsYXNzPVwiJytUKydzcGVjaWFsXCI+JytuK1wiPC9zcGFuPjwvbGk+XCI7aWYoaC5kZWZhdWx0KG4pKXt2YXIgdT1hLmdldChuKSxwPXZvaWQgMDtpZih1KXA9dS5pZDtlbHNle3ZhciBmPXt9O1wicHJvdG9cIj09PWkmJihmLnNlbGY9ZSkscD1hLnNldChuLGYpLHRoaXMubWFwW3BdPW59dmFyIHY9ZnVuY3Rpb24odCxlKXtpZihlKXJldHVyblwiRnVuY3Rpb25cIj09PWU/QS5nZXRGbkFic3RyYWN0KGcuZGVmYXVsdCh0KSk6XCJBcnJheVwiPT09ZT9cIkFycmF5KFwiK3QubGVuZ3RoK1wiKVwiOmV9KG4scyl8fGQuZGVmYXVsdChvKSxtPVwiPGxpIFwiKyhyPydkYXRhLWZpcnN0LWxldmVsPVwidHJ1ZVwiJzpcIlwiKSsnIGRhdGEtb2JqZWN0LWlkPVwiJytwKydcIj48c3BhbiBjbGFzcz1cIicrKHI/XCJcIjpUK1wiZXhwYW5kZWQgXCIrVCtcImNvbGxhcHNlZFwiKSsnXCI+PC9zcGFuPicreSh0KSsnPHNwYW4gY2xhc3M9XCInK1QrJ29wZW5cIj4nKyhyP1wiXCI6dikrJzwvc3Bhbj48dWwgY2xhc3M9XCInKyhUK28pKydcIiAnKyhyP1wiXCI6J3N0eWxlPVwiZGlzcGxheTpub25lXCInKStcIj5cIjtyZXR1cm4gciYmKG0rPXRoaXMub2JqVG9IdG1sKG4pKSxtKyc8L3VsPjxzcGFuIGNsYXNzPVwiJytUKydjbG9zZVwiPjwvc3Bhbj48L2xpPid9ZnVuY3Rpb24geSh0KXtpZihyKXJldHVyblwiXCI7aWYoaC5kZWZhdWx0KG4pJiZcInZpcnR1YWxcIj09PWkpcmV0dXJuXCJcIjt2YXIgZT1UK1wia2V5XCI7cmV0dXJuXCJ1bmVudW1lcmFibGVcIiE9PWkmJlwicHJvdG9cIiE9PWkmJlwic3ltYm9sXCIhPT1pfHwoZT1UK1wia2V5LWxpZ2h0ZXJcIiksJzxzcGFuIGNsYXNzPVwiJytlKydcIj4nK0EuZW5jb2RlKHQpK1wiPC9zcGFuPjogXCJ9cmV0dXJuXCI8bGk+XCIreSh0KSsnPHNwYW4gY2xhc3M9XCInK1QrdHlwZW9mIG4rJ1wiPlwiJytBLmVuY29kZShuKSsnXCI8L3NwYW4+PC9saT4nfSxlLnByb3RvdHlwZS5hcHBlbmRUcGw9ZnVuY3Rpb24oKXt0aGlzLiRjb250YWluZXIuaHRtbCh0aGlzLm9ialRvSHRtbCh0aGlzLmRhdGEsITApKX0sZS5wcm90b3R5cGUuYmluZEV2ZW50PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLiRjb250YWluZXIub24oXCJjbGlja1wiLFwibGlcIiwoZnVuY3Rpb24oZSl7dmFyIG49dC5tYXAsaT15LmRlZmF1bHQodGhpcykscj1pLmRhdGEoXCJvYmplY3QtaWRcIiksYT15LmRlZmF1bHQodGhpcykuZmluZChcInNwYW5cIikuZXEoMCk7aWYoIWkuZGF0YShcImZpcnN0LWxldmVsXCIpJiYociYmKGkuZmluZChcInVsXCIpLmh0bWwodC5vYmpUb0h0bWwobltyXSwhMSkpLGkucm1BdHRyKFwiZGF0YS1vYmplY3QtaWRcIikpLGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCksYS5oYXNDbGFzcyhUK1wiZXhwYW5kZWRcIikpKXt2YXIgbz1pLmZpbmQoXCJ1bFwiKS5lcSgwKTthLmhhc0NsYXNzKFQrXCJjb2xsYXBzZWRcIik/KGEucm1DbGFzcyhUK1wiY29sbGFwc2VkXCIpLG8uc2hvdygpKTooYS5hZGRDbGFzcyhUK1wiY29sbGFwc2VkXCIpLG8uaGlkZSgpKSx0LmVtaXQoXCJjaGFuZ2VcIil9fSkpfSxlfShzLmRlZmF1bHQpKS5TdGF0aWM9Uy5kZWZhdWx0LHIpfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big0MSk7ZT1mdW5jdGlvbigpe2Zvcih2YXIgdD0wLGU9ci5sZW5ndGg7dDxlO3QrKyl7dmFyIG49clt0XTtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBpW25dKXJldHVybiExfXJldHVybiEwfTt2YXIgcj1bXCJhZnRlckVhY2hcIixcImFmdGVyXCIsXCJiZWZvcmVFYWNoXCIsXCJiZWZvcmVcIixcImRlc2NyaWJlXCIsXCJpdFwiXTt0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihpKXt2YXIgcj1uKDQzKTtlPXI/d2luZG93OmksdC5leHBvcnRzPWV9KS5jYWxsKHRoaXMsbig0MikpfSxmdW5jdGlvbih0LGUpe3ZhciBuO249ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30oKTt0cnl7bj1ufHxuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpfWNhdGNoKHQpe1wib2JqZWN0XCI9PXR5cGVvZiB3aW5kb3cmJihuPXdpbmRvdyl9dC5leHBvcnRzPW59LGZ1bmN0aW9uKHQsZSl7ZT1cIm9iamVjdFwiPT10eXBlb2Ygd2luZG93JiZcIm9iamVjdFwiPT10eXBlb2YgZG9jdW1lbnQmJjk9PT1kb2N1bWVudC5ub2RlVHlwZSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTUpO2Z1bmN0aW9uIHIodCxlKXtyZXR1cm4gdD09PWV9ZT1mdW5jdGlvbih0LGUpe3JldHVybiBlPWV8fHIsaSh0LChmdW5jdGlvbih0LG4saSl7Zm9yKHZhciByPWkubGVuZ3RoOysrbjxyOylpZihlKHQsaVtuXSkpcmV0dXJuITE7cmV0dXJuITB9KSl9LHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big0Nikscj1uKDQ3KTtlPWZ1bmN0aW9uKHQpe3JldHVybiB0PWkoe30sdCksZnVuY3Rpb24oZSl7cmV0dXJuIHIoZSx0KX19LHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big0KTtlPW4oMjIpKGkpLHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big0KTtlPWZ1bmN0aW9uKHQsZSl7dmFyIG49aShlKSxyPW4ubGVuZ3RoO2lmKG51bGw9PXQpcmV0dXJuIXI7dD1PYmplY3QodCk7Zm9yKHZhciBhPTA7YTxyO2ErKyl7dmFyIG89blthXTtpZihlW29dIT09dFtvXXx8IShvIGluIHQpKXJldHVybiExfXJldHVybiEwfSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlKXtlPWZ1bmN0aW9uKHQpe3JldHVybiB0fSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTYpLHI9big0KSxhPW4oOCk7bigxMiksZT1mdW5jdGlvbih0LGUsbil7ZT1pKGUsbik7Zm9yKHZhciBvPSFhKHQpJiZyKHQpLHM9KG98fHQpLmxlbmd0aCx1PUFycmF5KHMpLGw9MDtsPHM7bCsrKXt2YXIgYz1vP29bbF06bDt1W2xdPWUodFtjXSxjLHQpfXJldHVybiB1fSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNTEpO2U9ZnVuY3Rpb24odCxlKXt0LnByb3RvdHlwZT1pKGUucHJvdG90eXBlKX0sdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDIpO2U9ZnVuY3Rpb24odCl7aWYoIWkodCkpcmV0dXJue307aWYocilyZXR1cm4gcih0KTtmdW5jdGlvbiBlKCl7fXJldHVybiBlLnByb3RvdHlwZT10LG5ldyBlfTt2YXIgcj1PYmplY3QuY3JlYXRlO3QuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big1KSxyPW4oNTMpO2U9ZnVuY3Rpb24odCxlKXt2YXIgbjtmb3Iobj0oZT1yKGUsdCkpLnNoaWZ0KCk7IWkobik7KXtpZihudWxsPT0odD10W25dKSlyZXR1cm47bj1lLnNoaWZ0KCl9cmV0dXJuIHR9LHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigxMCkscj1uKDEzKTtlPWZ1bmN0aW9uKHQsZSl7aWYocih0KSlyZXR1cm4gdDtpZihlJiZpKGUsdCkpcmV0dXJuW3RdO3ZhciBuPVtdO3JldHVybiB0LnJlcGxhY2UoYSwoZnVuY3Rpb24odCxlLGkscil7bi5wdXNoKGk/ci5yZXBsYWNlKG8sXCIkMVwiKTplfHx0KX0pKSxufTt2YXIgYT0vW14uW1xcXV0rfFxcWyg/OigtP1xcZCsoPzpcXC5cXGQrKT8pfChbXCInXSkoKD86KD8hXFwyKVteXFxcXF18XFxcXC4pKj8pXFwyKVxcXXwoPz0oPzpcXC58XFxbXFxdKSg/OlxcLnxcXFtcXF18JCkpL2csbz0vXFxcXChcXFxcKT8vZzt0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNyk7ZT1cInVuZGVmaW5lZFwiIT10eXBlb2Ygd3gmJmkod3gub3BlbkxvY2F0aW9uKSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlKXtlPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaT10Lmxlbmd0aDtlPW51bGw9PWU/MDplPDA/TWF0aC5tYXgoaStlLDApOk1hdGgubWluKGUsaSksbj1udWxsPT1uP2k6bjwwP01hdGgubWF4KGkrbiwwKTpNYXRoLm1pbihuLGkpO2Zvcih2YXIgcj1bXTtlPG47KXIucHVzaCh0W2UrK10pO3JldHVybiByfSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe2U9big1Nykobig1OCksMiksdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDI2KSxyPW4oMTEpO2U9aSgoZnVuY3Rpb24odCxlKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgbj1bXTtyZXR1cm4gbj0obj1uLmNvbmNhdChlKSkuY29uY2F0KHIoYXJndW1lbnRzKSksdC5hcHBseSh0aGlzLG4pfX0pKSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlKXtlPWZ1bmN0aW9uKHQsZSl7dmFyIG47cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuLS10PjAmJihuPWUuYXBwbHkodGhpcyxhcmd1bWVudHMpKSx0PD0xJiYoZT1udWxsKSxufX0sdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDYwKTtlPWZ1bmN0aW9uKHQpe2lmKGkodCkpcmV0dXJuXCJcIjt0cnl7cmV0dXJuIHIuY2FsbCh0KX1jYXRjaCh0KXt9dHJ5e3JldHVybiB0K1wiXCJ9Y2F0Y2godCl7fXJldHVyblwiXCJ9O3ZhciByPUZ1bmN0aW9uLnByb3RvdHlwZS50b1N0cmluZzt0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlKXtlPWZ1bmN0aW9uKHQpe3JldHVybiBudWxsPT10fSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMikscj1uKDcpO2U9ZnVuY3Rpb24odCl7cmV0dXJuIGkodCkmJnIodC50aGVuKX0sdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDkpLHI9bigyOSk7ZT1mdW5jdGlvbih0KXt2YXIgZT0hKGFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdKXx8YXJndW1lbnRzWzFdO2lmKG51bGw9PT10KXJldHVybiBlP1wibnVsbFwiOlwiTnVsbFwiO2lmKHZvaWQgMD09PXQpcmV0dXJuIGU/XCJ1bmRlZmluZWRcIjpcIlVuZGVmaW5lZFwiO2lmKHIodCkpcmV0dXJuIGU/XCJuYW5cIjpcIk5hTlwiO3ZhciBuPWkodCkubWF0Y2goYSk7cmV0dXJuIG4/ZT9uWzFdLnRvTG93ZXJDYXNlKCk6blsxXTpcIlwifTt2YXIgYT0vXlxcW29iamVjdFxccysoLio/KV0kLzt0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMyk7ZT1mdW5jdGlvbih0KXt2YXIgZT0odD1pKHQpKVswXS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtyZXR1cm57bGVmdDplLmxlZnQrd2luZG93LnBhZ2VYT2Zmc2V0LHRvcDplLnRvcCt3aW5kb3cucGFnZVlPZmZzZXQsd2lkdGg6TWF0aC5yb3VuZChlLndpZHRoKSxoZWlnaHQ6TWF0aC5yb3VuZChlLmhlaWdodCl9fSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMCkscj1uKDMpO2U9ZnVuY3Rpb24odCl7dD1yKHQpLGkodCwoZnVuY3Rpb24odCl7KGZ1bmN0aW9uKHQpe3JldHVyblwibm9uZVwiPT1nZXRDb21wdXRlZFN0eWxlKHQsXCJcIikuZ2V0UHJvcGVydHlWYWx1ZShcImRpc3BsYXlcIil9KSh0KSYmKHQuc3R5bGUuZGlzcGxheT1mdW5jdGlvbih0KXt2YXIgZSxuO3JldHVybiBhW3RdfHwoZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KHQpLGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5hcHBlbmRDaGlsZChlKSxuPWdldENvbXB1dGVkU3R5bGUoZSxcIlwiKS5nZXRQcm9wZXJ0eVZhbHVlKFwiZGlzcGxheVwiKSxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZSksXCJub25lXCI9PW4mJihuPVwiYmxvY2tcIiksYVt0XT1uKSxhW3RdfSh0Lm5vZGVOYW1lKSl9KSl9O3ZhciBhPXt9O3QuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigxKSxyPW4oMiksYT1uKDMyKSxvPW4oNSkscz1uKDE5KSx1PW4oNiksbD1uKDMpLGM9big2OCksXz1uKDApO2U9ZnVuY3Rpb24odCxlLG4pe2lmKHQ9bCh0KSxvKG4pJiZpKGUpKXJldHVybiBmdW5jdGlvbih0LGUpe3JldHVybiB0LnN0eWxlW2MoZSldfHxnZXRDb21wdXRlZFN0eWxlKHQsXCJcIikuZ2V0UHJvcGVydHlWYWx1ZShlKX0odFswXSxlKTt2YXIgcD1lO3IocCl8fCgocD17fSlbZV09biksZnVuY3Rpb24odCxlKXtfKHQsKGZ1bmN0aW9uKHQpe3ZhciBuPVwiO1wiO18oZSwoZnVuY3Rpb24odCxlKXtlPWMuZGFzaChlKSxuKz1lK1wiOlwiK2Z1bmN0aW9uKHQsZSl7cmV0dXJuIHUoZSkmJiFzKGgsYSh0KSk/ZStcInB4XCI6ZX0oZSx0KStcIjtcIn0pKSx0LnN0eWxlLmNzc1RleHQrPW59KSl9KHQscCl9O3ZhciBoPVtcImNvbHVtbi1jb3VudFwiLFwiY29sdW1uc1wiLFwiZm9udC13ZWlnaHRcIixcImxpbmUtd2VpZ2h0XCIsXCJvcGFjaXR5XCIsXCJ6LWluZGV4XCIsXCJ6b29tXCJdO3QuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUpe2U9ZnVuY3Rpb24odCxlLG4pe3JldHVybiBBcnJheS5wcm90b3R5cGUuaW5kZXhPZi5jYWxsKHQsZSxuKX0sdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDApO2U9ZnVuY3Rpb24odCl7dmFyIGU9W107cmV0dXJuIGkodCwoZnVuY3Rpb24odCl7ZS5wdXNoKHQpfSkpLGV9LHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big2OSkscj1uKDcwKSxhPW4oMTgpLG89bigxMCkscz1uKDMyKTsoZT1pKChmdW5jdGlvbih0KXtpZih0PXQucmVwbGFjZShsLFwiXCIpLHQ9cih0KSxvKGMsdCkpcmV0dXJuIHQ7Zm9yKHZhciBlPXUubGVuZ3RoO2UtLTspe3ZhciBuPXVbZV0rYSh0KTtpZihvKGMsbikpcmV0dXJuIG59cmV0dXJuIHR9KSkpLmRhc2g9aSgoZnVuY3Rpb24odCl7dmFyIG49ZSh0KTtyZXR1cm4obC50ZXN0KG4pP1wiLVwiOlwiXCIpK3Mobil9KSk7dmFyIHU9W1wiT1wiLFwibXNcIixcIk1velwiLFwiV2Via2l0XCJdLGw9L14oTyl8KG1zKXwoTW96KXwoV2Via2l0KXwoLW8tKXwoLW1zLSl8KC1tb3otKXwoLXdlYmtpdC0pL2csYz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKS5zdHlsZTt0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTApO2U9ZnVuY3Rpb24odCxlKXt2YXIgbj1mdW5jdGlvbihyKXt2YXIgYT1uLmNhY2hlLG89XCJcIisoZT9lLmFwcGx5KHRoaXMsYXJndW1lbnRzKTpyKTtyZXR1cm4gaShhLG8pfHwoYVtvXT10LmFwcGx5KHRoaXMsYXJndW1lbnRzKSksYVtvXX07cmV0dXJuIG4uY2FjaGU9e30sbn0sdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDMzKTtmdW5jdGlvbiByKHQsZSl7dGhpc1tlXT10LnJlcGxhY2UoL1xcdy8sKGZ1bmN0aW9uKHQpe3JldHVybiB0LnRvVXBwZXJDYXNlKCl9KSl9ZT1mdW5jdGlvbih0KXt2YXIgZT1pKHQpLG49ZVswXTtyZXR1cm4gZS5zaGlmdCgpLGUuZm9yRWFjaChyLGUpLG4rZS5qb2luKFwiXCIpfSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNSkscj1uKDApLGE9bigzKTtmdW5jdGlvbiBvKHQpe3JldHVybiBmdW5jdGlvbihlLG4pe3ZhciBvPShlPWEoZSkpWzBdO2lmKGkobikpcmV0dXJuIG8/b1t0XTpcIlwiO28mJnIoZSwoZnVuY3Rpb24oZSl7ZVt0XT1ufSkpfX1lPXtodG1sOm8oXCJpbm5lckhUTUxcIiksdGV4dDpvKFwidGV4dENvbnRlbnRcIiksdmFsOm8oXCJ2YWx1ZVwiKX0sdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSl7ZT1mdW5jdGlvbih0KXt2YXIgZT10P3QubGVuZ3RoOjA7aWYoZSlyZXR1cm4gdFtlLTFdfSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMCkscj1uKDMpO2U9ZnVuY3Rpb24odCl7dD1yKHQpLGkodCwoZnVuY3Rpb24odCl7dmFyIGU9dC5wYXJlbnROb2RlO2UmJmUucmVtb3ZlQ2hpbGQodCl9KSl9LHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigzNCkscj1uKDEpLGE9bigyKSxvPW4oMCk7bigzKSxlPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcz1lO3JldHVybiByKGUpJiYocz1cImRhdGEtXCIrZSksYShlKSYmKHM9e30sbyhlLChmdW5jdGlvbih0LGUpe3NbXCJkYXRhLVwiK2VdPXR9KSkpLGkodCxzLG4pfSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNzYpLHI9big1KSxhPW4oMyksbz1uKDApO2Z1bmN0aW9uIHModCl7cmV0dXJuIGZ1bmN0aW9uKGUsbixzLHUpe2U9YShlKSxyKHUpJiYodT1zLHM9dm9pZCAwKSxvKGUsKGZ1bmN0aW9uKGUpe2lbdF0oZSxuLHMsdSl9KSl9fWU9e29uOnMoXCJhZGRcIiksb2ZmOnMoXCJyZW1vdmVcIil9LHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigxNCkscj1uKDE5KTtmdW5jdGlvbiBhKCl7cmV0dXJuITB9ZnVuY3Rpb24gbygpe3JldHVybiExfWZ1bmN0aW9uIHModCl7dmFyIG4saT10aGlzLmV2ZW50c1t0LnR5cGVdLHI9dS5jYWxsKHRoaXMsdCxpKTt0PW5ldyBlLkV2ZW50KHQpO2Zvcih2YXIgYSxvLHM9MDsobz1yW3MrK10pJiYhdC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpOylmb3IodC5jdXJUYXJnZXQ9by5lbCxhPTA7KG49by5oYW5kbGVyc1thKytdKSYmIXQuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQoKTspITE9PT1uLmhhbmRsZXIuYXBwbHkoby5lbCxbdF0pJiYodC5wcmV2ZW50RGVmYXVsdCgpLHQuc3RvcFByb3BhZ2F0aW9uKCkpfWZ1bmN0aW9uIHUodCxlKXt2YXIgbixpLGEsbyxzPXQudGFyZ2V0LHU9W10sbD1lLmRlbGVnYXRlQ291bnQ7aWYocy5ub2RlVHlwZSlmb3IoO3MhPT10aGlzO3M9cy5wYXJlbnROb2RlfHx0aGlzKXtmb3IoaT1bXSxvPTA7bzxsO28rKyl2b2lkIDA9PT1pW249KGE9ZVtvXSkuc2VsZWN0b3IrXCIgXCJdJiYoaVtuXT1yKHRoaXMucXVlcnlTZWxlY3RvckFsbChuKSxzKSksaVtuXSYmaS5wdXNoKGEpO2kubGVuZ3RoJiZ1LnB1c2goe2VsOnMsaGFuZGxlcnM6aX0pfXJldHVybiBsPGUubGVuZ3RoJiZ1LnB1c2goe2VsOnRoaXMsaGFuZGxlcnM6ZS5zbGljZShsKX0pLHV9ZT17YWRkOmZ1bmN0aW9uKHQsZSxuLGkpe3ZhciByLGE9e3NlbGVjdG9yOm4saGFuZGxlcjppfTt0LmV2ZW50c3x8KHQuZXZlbnRzPXt9KSwocj10LmV2ZW50c1tlXSl8fCgocj10LmV2ZW50c1tlXT1bXSkuZGVsZWdhdGVDb3VudD0wLHQuYWRkRXZlbnRMaXN0ZW5lcihlLChmdW5jdGlvbigpe3MuYXBwbHkodCxhcmd1bWVudHMpfSksITEpKSxuP3Iuc3BsaWNlKHIuZGVsZWdhdGVDb3VudCsrLDAsYSk6ci5wdXNoKGEpfSxyZW1vdmU6ZnVuY3Rpb24odCxlLG4saSl7dmFyIHI9dC5ldmVudHM7aWYociYmcltlXSlmb3IodmFyIGEsbz1yW2VdLHM9by5sZW5ndGg7cy0tOylhPW9bc10sbiYmYS5zZWxlY3RvciE9bnx8YS5oYW5kbGVyIT1pfHwoby5zcGxpY2UocywxKSxhLnNlbGVjdG9yJiZvLmRlbGVnYXRlQ291bnQtLSl9LEV2ZW50Omkoe2NsYXNzTmFtZTpcIkV2ZW50XCIsaW5pdGlhbGl6ZTpmdW5jdGlvbih0KXt0aGlzLm9yaWdFdmVudD10fSxpc0RlZmF1bHRQcmV2ZW50ZWQ6byxpc1Byb3BhZ2F0aW9uU3RvcHBlZDpvLGlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkOm8scHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm9yaWdFdmVudDt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1hLHQmJnQucHJldmVudERlZmF1bHQmJnQucHJldmVudERlZmF1bHQoKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcmlnRXZlbnQ7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1hLHQmJnQuc3RvcFByb3BhZ2F0aW9uJiZ0LnN0b3BQcm9wYWdhdGlvbigpfSxzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm9yaWdFdmVudDt0aGlzLmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkPWEsdCYmdC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24mJnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCksdGhpcy5zdG9wUHJvcGFnYXRpb24oKX19KX0sdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDExKSxyPW4oNzgpLGE9bigzKSxvPW4oMSkscz1uKDApO2Z1bmN0aW9uIHUodCl7cmV0dXJuIG8odCk/dC5zcGxpdCgvXFxzKy8pOmkodCl9ZT17YWRkOmZ1bmN0aW9uKHQsbil7dD1hKHQpO3ZhciBpPXUobik7cyh0LChmdW5jdGlvbih0KXt2YXIgbj1bXTtzKGksKGZ1bmN0aW9uKGkpe2UuaGFzKHQsaSl8fG4ucHVzaChpKX0pKSwwIT09bi5sZW5ndGgmJih0LmNsYXNzTmFtZSs9KHQuY2xhc3NOYW1lP1wiIFwiOlwiXCIpK24uam9pbihcIiBcIikpfSkpfSxoYXM6ZnVuY3Rpb24odCxlKXt0PWEodCk7dmFyIG49bmV3IFJlZ0V4cChcIihefFxcXFxzKVwiK2UrXCIoXFxcXHN8JClcIik7cmV0dXJuIHIodCwoZnVuY3Rpb24odCl7cmV0dXJuIG4udGVzdCh0LmNsYXNzTmFtZSl9KSl9LHRvZ2dsZTpmdW5jdGlvbih0LG4pe3Q9YSh0KSxzKHQsKGZ1bmN0aW9uKHQpe2lmKCFlLmhhcyh0LG4pKXJldHVybiBlLmFkZCh0LG4pO2UucmVtb3ZlKHQsbil9KSl9LHJlbW92ZTpmdW5jdGlvbih0LGUpe3Q9YSh0KTt2YXIgbj11KGUpO3ModCwoZnVuY3Rpb24odCl7cyhuLChmdW5jdGlvbihlKXt0LmNsYXNzTGlzdC5yZW1vdmUoZSl9KSl9KSl9fSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTYpLHI9big4KSxhPW4oNCk7bigxMiksZT1mdW5jdGlvbih0LGUsbil7ZT1pKGUsbik7Zm9yKHZhciBvPSFyKHQpJiZhKHQpLHM9KG98fHQpLmxlbmd0aCx1PTA7dTxzO3UrKyl7dmFyIGw9bz9vW3VdOnU7aWYoZSh0W2xdLGwsdCkpcmV0dXJuITB9cmV0dXJuITF9LHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigwKSxyPW4oMyk7ZnVuY3Rpb24gYSh0KXtyZXR1cm4gZnVuY3Rpb24oZSxuKXtlPXIoZSksaShlLChmdW5jdGlvbihlKXtlLmluc2VydEFkamFjZW50SFRNTCh0LG4pfSkpfX1lPXtiZWZvcmU6YShcImJlZm9yZWJlZ2luXCIpLGFmdGVyOmEoXCJhZnRlcmVuZFwiKSxhcHBlbmQ6YShcImJlZm9yZWVuZFwiKSxwcmVwZW5kOmEoXCJhZnRlcmJlZ2luXCIpfSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMjYpLHI9big4MSksYT1uKDE1KSxvPW4oMTkpO2U9aSgoZnVuY3Rpb24odCxlKXtyZXR1cm4gZT1yKGUpLGEodCwoZnVuY3Rpb24odCl7cmV0dXJuIW8oZSx0KX0pKX0pKSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTMpO2U9ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uIHQoZSxuKXtmb3IodmFyIHIsYT1lLmxlbmd0aCxvPS0xO2EtLTspcj1lWysrb10saShyKT90KHIsbik6bi5wdXNoKHIpO3JldHVybiBufSh0LFtdKX0sdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSl7ZT1mdW5jdGlvbigpe30sdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT10aGlzJiZ0aGlzLl9faW1wb3J0RGVmYXVsdHx8ZnVuY3Rpb24odCl7cmV0dXJuIHQmJnQuX19lc01vZHVsZT90OntkZWZhdWx0OnR9fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcj1pKG4oMjEpKSxhPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe3RoaXMuaWQ9MCx0aGlzLnZpc2l0ZWQ9W119cmV0dXJuIHQucHJvdG90eXBlLnNldD1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMudmlzaXRlZCxpPXRoaXMuaWQsYT17aWQ6aSx2YWw6dH07cmV0dXJuIHIuZGVmYXVsdChhLGUpLG4ucHVzaChhKSx0aGlzLmlkKyssaX0sdC5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLnZpc2l0ZWQsbj0wLGk9ZS5sZW5ndGg7bjxpO24rKyl7dmFyIHI9ZVtuXTtpZih0PT09ci52YWwpcmV0dXJuIHJ9cmV0dXJuITF9LHR9KCk7ZS5kZWZhdWx0PWF9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDg1KSxyPW4oODYpLGE9L15cXHMrfFxccyskL2c7ZT1mdW5jdGlvbih0LGUpe3JldHVybiBudWxsPT1lP3QucmVwbGFjZShhLFwiXCIpOmkocih0LGUpLGUpfSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlKXt2YXIgbj0vXlxccysvO2U9ZnVuY3Rpb24odCxlKXtpZihudWxsPT1lKXJldHVybiB0LnJlcGxhY2UobixcIlwiKTtmb3IodmFyIGkscixhPTAsbz10Lmxlbmd0aCxzPWUubGVuZ3RoLHU9ITA7dSYmYTxvOylmb3IodT0hMSxpPS0xLHI9dC5jaGFyQXQoYSk7KytpPHM7KWlmKHI9PT1lW2ldKXt1PSEwLGErKzticmVha31yZXR1cm4gYT49bz9cIlwiOnQuc3Vic3RyKGEsbyl9LHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUpe3ZhciBuPS9cXHMrJC87ZT1mdW5jdGlvbih0LGUpe2lmKG51bGw9PWUpcmV0dXJuIHQucmVwbGFjZShuLFwiXCIpO2Zvcih2YXIgaSxyLGE9dC5sZW5ndGgtMSxvPWUubGVuZ3RoLHM9ITA7cyYmYT49MDspZm9yKHM9ITEsaT0tMSxyPXQuY2hhckF0KGEpOysraTxvOylpZihyPT09ZVtpXSl7cz0hMCxhLS07YnJlYWt9cmV0dXJuIGE+PTA/dC5zdWJzdHJpbmcoMCxhKzEpOlwiXCJ9LHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big0KSxyPShlPWZ1bmN0aW9uKHQpe3JldHVybiBvLnRlc3QodCk/dC5yZXBsYWNlKHMsdSk6dH0pLm1hcD17XCImXCI6XCImYW1wO1wiLFwiPFwiOlwiJmx0O1wiLFwiPlwiOlwiJmd0O1wiLCdcIic6XCImcXVvdDtcIixcIidcIjpcIiYjeDI3O1wiLFwiYFwiOlwiJiN4NjA7XCJ9LGE9XCIoPzpcIitpKHIpLmpvaW4oXCJ8XCIpK1wiKVwiLG89bmV3IFJlZ0V4cChhKSxzPW5ldyBSZWdFeHAoYSxcImdcIiksdT1mdW5jdGlvbih0KXtyZXR1cm4gclt0XX07dC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaSxyPXRoaXMmJnRoaXMuX19leHRlbmRzfHwoaT1mdW5jdGlvbih0LGUpe3JldHVybihpPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbih0LGUpe3QuX19wcm90b19fPWV9fHxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbiBpbiBlKWUuaGFzT3duUHJvcGVydHkobikmJih0W25dPWVbbl0pfSkodCxlKX0sZnVuY3Rpb24odCxlKXtmdW5jdGlvbiBuKCl7dGhpcy5jb25zdHJ1Y3Rvcj10fWkodCxlKSx0LnByb3RvdHlwZT1udWxsPT09ZT9PYmplY3QuY3JlYXRlKGUpOihuLnByb3RvdHlwZT1lLnByb3RvdHlwZSxuZXcgbil9KSxhPXRoaXMmJnRoaXMuX19pbXBvcnREZWZhdWx0fHxmdW5jdGlvbih0KXtyZXR1cm4gdCYmdC5fX2VzTW9kdWxlP3Q6e2RlZmF1bHQ6dH19O09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBvPWEobigzMCkpLHM9YShuKDM4KSksdT1hKG4oMikpLGw9YShuKDg5KSksYz1hKG4oMTgpKSxfPWEobigzNykpLGg9YShuKDM1KSkscD1hKG4oMCkpLGQ9YShuKDI5KSksZj1hKG4oNikpLHY9YShuKDI3KSksZz1hKG4oMSkpLG09YShuKDQpKSxiPWEobigyOCkpLHk9YShuKDIwKSksdz1uKDM2KSx4PVwibHVuYS1vYmplY3Qtdmlld2VyLVwiLGs9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShlKXt2YXIgbj10LmNhbGwodGhpcyl8fHRoaXM7cmV0dXJuIG4uJGNvbnRhaW5lcj1vLmRlZmF1bHQoZSksbi4kY29udGFpbmVyLmFkZENsYXNzKFwibHVuYS1vYmplY3Qtdmlld2VyXCIpLG4uYmluZEV2ZW50KCksbn1yZXR1cm4gcihlLHQpLGUucHJvdG90eXBlLnNldD1mdW5jdGlvbih0KXtnLmRlZmF1bHQodCkmJih0PUpTT04ucGFyc2UodCkpLHRoaXMuZGF0YT17aWQ6bC5kZWZhdWx0KFwianNvblwiKSxlbnVtZXJhYmxlOnswOnR9fSx0aGlzLm1hcD17fSxmdW5jdGlvbiB0KGUsbil7dmFyIGk9bi5pZDtpZihpfHwwPT09aSl7aWYobi50eXBlJiZzLmRlZmF1bHQobi50eXBlLFwiQXJyYXlcIikmJm4uZW51bWVyYWJsZSl7dmFyIHI9ZnVuY3Rpb24odCxlLG4pe3ZhciBpPVtdLHI9e307cmV0dXJuIHAuZGVmYXVsdCh0LmVudW1lcmFibGUsKGZ1bmN0aW9uKHQsZSl7dmFyIG49Xy5kZWZhdWx0KGUpO2QuZGVmYXVsdChuKT9yW2VdPXQ6aVtuXT10fSkpLGkuZW51bWVyYWJsZT1yLGkudHlwZT1uLGkuaWQ9ZSx0LnVuZW51bWVyYWJsZSYmKGkudW5lbnVtZXJhYmxlPXQudW5lbnVtZXJhYmxlKSx0LnN5bWJvbCYmKGkuc3ltYm9sPXQuc3ltYm9sKSx0LnByb3RvJiYoaS5wcm90bz10LnByb3RvKSxpfShuLGksbi50eXBlKTtyLmxlbmd0aD4xMDAmJihuPWZ1bmN0aW9uKHQpe3ZhciBlPTAsbj17fTtwLmRlZmF1bHQoaC5kZWZhdWx0KHQsMTAwKSwoZnVuY3Rpb24odCl7dmFyIGk9e30scj1lO2kudHlwZT1cIltcIityLGkuZW51bWVyYWJsZT17fSxwLmRlZmF1bHQodCwoZnVuY3Rpb24odCl7aS5lbnVtZXJhYmxlW2VdPXQsZSs9MX0pKTt2YXIgYT1lLTE7aS50eXBlKz0oYS1yPjA/XCIg4oCmIFwiK2E6XCJcIikrXCJdXCIsaS5pZD1sLmRlZmF1bHQoXCJqc29uXCIpLGkuanNvblNwbGl0QXJyPSEwLG5bZV09aX0pKTt2YXIgaT17fTtyZXR1cm4gaS5lbnVtZXJhYmxlPW4saS5pZD10LmlkLGkudHlwZT10LnR5cGUsdC51bmVudW1lcmFibGUmJihpLnVuZW51bWVyYWJsZT10LnVuZW51bWVyYWJsZSksdC5zeW1ib2wmJihpLnN5bWJvbD10LnN5bWJvbCksdC5wcm90byYmKGkucHJvdG89dC5wcm90byksaX0ocikpfWVbaV09bjt2YXIgYT1bXTtwLmRlZmF1bHQoW1wiZW51bWVyYWJsZVwiLFwidW5lbnVtZXJhYmxlXCIsXCJzeW1ib2xcIl0sKGZ1bmN0aW9uKHQpe2lmKG5bdF0pZm9yKHZhciBlIGluIG5bdF0pYS5wdXNoKG5bdF1bZV0pfSkpLG4ucHJvdG8mJmEucHVzaChuLnByb3RvKTtmb3IodmFyIG89MCxjPWEubGVuZ3RoO288YztvKyspe3ZhciBmPWFbb107dS5kZWZhdWx0KGYpJiZ0KGUsZil9fX0odGhpcy5tYXAsdGhpcy5kYXRhKSx0aGlzLmFwcGVuZFRwbCgpfSxlLnByb3RvdHlwZS5vYmpUb0h0bWw9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLGk9XCJcIjtyZXR1cm4gcC5kZWZhdWx0KFtcImVudW1lcmFibGVcIixcInVuZW51bWVyYWJsZVwiLFwic3ltYm9sXCJdLChmdW5jdGlvbihyKXtpZih0W3JdKXt2YXIgYT1tLmRlZmF1bHQodFtyXSk7YS5zb3J0KHcuc29ydE9iak5hbWUpO2Zvcih2YXIgbz0wLHM9YS5sZW5ndGg7bzxzO28rKyl7dmFyIHU9YVtvXTtpKz1uLmNyZWF0ZUVsKHUsdFtyXVt1XSxyLGUpfX19KSksdC5wcm90byYmKFwiXCI9PT1pP2k9dGhpcy5vYmpUb0h0bWwodC5wcm90byk6aSs9dGhpcy5jcmVhdGVFbChcIl9fcHJvdG9fX1wiLHQucHJvdG8sXCJwcm90b1wiKSksaX0sZS5wcm90b3R5cGUuY3JlYXRlRWw9ZnVuY3Rpb24odCxlLG4saSl7dm9pZCAwPT09aSYmKGk9ITEpO3ZhciByPXR5cGVvZiBlO2lmKG51bGw9PT1lKXJldHVyblwiPGxpPlwiK18odCkrJzxzcGFuIGNsYXNzPVwiJyt4KydudWxsXCI+bnVsbDwvc3Bhbj48L2xpPic7aWYoZi5kZWZhdWx0KGUpfHx2LmRlZmF1bHQoZSkpcmV0dXJuXCI8bGk+XCIrXyh0KSsnPHNwYW4gY2xhc3M9XCInKyh4K3IpKydcIj4nK3cuZW5jb2RlKGUpK1wiPC9zcGFuPjwvbGk+XCI7aWYoXCJSZWdFeHBcIj09PWUudHlwZSYmKHI9XCJyZWdleHBcIiksXCJOdW1iZXJcIj09PWUudHlwZSYmKHI9XCJudW1iZXJcIiksXCJOdW1iZXJcIj09PWUudHlwZXx8XCJSZWdFeHBcIj09PWUudHlwZSlyZXR1cm5cIjxsaT5cIitfKHQpKyc8c3BhbiBjbGFzcz1cIicrKHgrcikrJ1wiPicrdy5lbmNvZGUoZS52YWx1ZSkrXCI8L3NwYW4+PC9saT5cIjtpZihcIlVuZGVmaW5lZFwiPT09ZS50eXBlfHxcIlN5bWJvbFwiPT09ZS50eXBlKXJldHVyblwiPGxpPlwiK18odCkrJzxzcGFuIGNsYXNzPVwiJyt4KydzcGVjaWFsXCI+JytiLmRlZmF1bHQoZS50eXBlKStcIjwvc3Bhbj48L2xpPlwiO2lmKFwiKC4uLilcIj09PWUpcmV0dXJuXCI8bGk+XCIrXyh0KSsnPHNwYW4gY2xhc3M9XCInK3grJ3NwZWNpYWxcIj4nK2UrXCI8L3NwYW4+PC9saT5cIjtpZih1LmRlZmF1bHQoZSkpe3ZhciBhPWUuaWQsbz1lLnJlZmVyZW5jZSxzPSQoZSl8fGMuZGVmYXVsdChyKSxsPVwiPGxpIFwiKyhpPydkYXRhLWZpcnN0LWxldmVsPVwidHJ1ZVwiJzpcIlwiKSsnIGRhdGEtb2JqZWN0LWlkPVwiJysob3x8YSkrJ1wiPjxzcGFuIGNsYXNzPVwiJysoaT9cIlwiOngrXCJleHBhbmRlZCBcIit4K1wiY29sbGFwc2VkXCIpKydcIj48L3NwYW4+JytfKHQpKyc8c3BhbiBjbGFzcz1cIicreCsnb3BlblwiPicrKGk/XCJcIjpzKSsnPC9zcGFuPjx1bCBjbGFzcz1cIicrKHgrcikrJ1wiICcrKGk/XCJcIjonc3R5bGU9XCJkaXNwbGF5Om5vbmVcIicpK1wiPlwiO3JldHVybiBpJiYobCs9dGhpcy5vYmpUb0h0bWwodGhpcy5tYXBbYV0pKSxsKyc8L3VsPjxzcGFuIGNsYXNzPVwiJyt4KydjbG9zZVwiPjwvc3Bhbj48L2xpPid9ZnVuY3Rpb24gXyh0KXtpZihpKXJldHVyblwiXCI7aWYodS5kZWZhdWx0KGUpJiZlLmpzb25TcGxpdEFycilyZXR1cm5cIlwiO3ZhciByPXgrXCJrZXlcIjtyZXR1cm5cInVuZW51bWVyYWJsZVwiIT09biYmXCJwcm90b1wiIT09biYmXCJzeW1ib2xcIiE9PW58fChyPXgrXCJrZXktbGlnaHRlclwiKSwnPHNwYW4gY2xhc3M9XCInK3IrJ1wiPicrdy5lbmNvZGUodCkrXCI8L3NwYW4+OiBcIn1yZXR1cm5cIjxsaT5cIitfKHQpKyc8c3BhbiBjbGFzcz1cIicreCt0eXBlb2YgZSsnXCI+XCInK3cuZW5jb2RlKGUpKydcIjwvc3Bhbj48L2xpPid9LGUucHJvdG90eXBlLmFwcGVuZFRwbD1mdW5jdGlvbigpe3ZhciB0PXRoaXMubWFwW3RoaXMuZGF0YS5pZF07dGhpcy4kY29udGFpbmVyLmh0bWwodGhpcy5vYmpUb0h0bWwodCwhMCkpfSxlLnByb3RvdHlwZS5iaW5kRXZlbnQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuJGNvbnRhaW5lci5vbihcImNsaWNrXCIsXCJsaVwiLChmdW5jdGlvbihlKXt2YXIgbj10Lm1hcCxpPW8uZGVmYXVsdCh0aGlzKSxyPWkuZGF0YShcIm9iamVjdC1pZFwiKSxhPW8uZGVmYXVsdCh0aGlzKS5maW5kKFwic3BhblwiKS5lcSgwKTtpZighaS5kYXRhKFwiZmlyc3QtbGV2ZWxcIikmJihyJiYoaS5maW5kKFwidWxcIikuaHRtbCh0Lm9ialRvSHRtbChuW3JdLCExKSksaS5ybUF0dHIoXCJkYXRhLW9iamVjdC1pZFwiKSksZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKSxhLmhhc0NsYXNzKHgrXCJleHBhbmRlZFwiKSkpe3ZhciBzPWkuZmluZChcInVsXCIpLmVxKDApO2EuaGFzQ2xhc3MoeCtcImNvbGxhcHNlZFwiKT8oYS5ybUNsYXNzKHgrXCJjb2xsYXBzZWRcIikscy5zaG93KCkpOihhLmFkZENsYXNzKHgrXCJjb2xsYXBzZWRcIikscy5oaWRlKCkpLHQuZW1pdChcImNoYW5nZVwiKX19KSl9LGV9KHkuZGVmYXVsdCk7ZnVuY3Rpb24gJCh0KXt2YXIgZT10LnR5cGUsbj10LnZhbHVlO2lmKGUpcmV0dXJuXCJGdW5jdGlvblwiPT09ZT93LmdldEZuQWJzdHJhY3Qobik6XCJBcnJheVwiPT09ZSYmdC51bmVudW1lcmFibGU/XCJBcnJheShcIit0LnVuZW51bWVyYWJsZS5sZW5ndGgrXCIpXCI6dC50eXBlfWUuZGVmYXVsdD1rLGUuZ2V0T2JqQWJzdHJhY3Q9JH0sZnVuY3Rpb24odCxlKXt2YXIgbj0wO2U9ZnVuY3Rpb24odCl7dmFyIGU9KytuK1wiXCI7cmV0dXJuIHQ/dCtlOmV9LHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7fV0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGkscjtyPWZ1bmN0aW9uKHQpe3ZhciBlPXt9O2Z1bmN0aW9uIG4oaSl7aWYoZVtpXSlyZXR1cm4gZVtpXS5leHBvcnRzO3ZhciByPWVbaV09e2k6aSxsOiExLGV4cG9ydHM6e319O3JldHVybiB0W2ldLmNhbGwoci5leHBvcnRzLHIsci5leHBvcnRzLG4pLHIubD0hMCxyLmV4cG9ydHN9cmV0dXJuIG4ubT10LG4uYz1lLG4uZD1mdW5jdGlvbih0LGUsaSl7bi5vKHQsZSl8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUse2VudW1lcmFibGU6ITAsZ2V0Oml9KX0sbi5yPWZ1bmN0aW9uKHQpe1widW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbC50b1N0cmluZ1RhZyYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsU3ltYm9sLnRvU3RyaW5nVGFnLHt2YWx1ZTpcIk1vZHVsZVwifSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSl9LG4udD1mdW5jdGlvbih0LGUpe2lmKDEmZSYmKHQ9bih0KSksOCZlKXJldHVybiB0O2lmKDQmZSYmXCJvYmplY3RcIj09dHlwZW9mIHQmJnQmJnQuX19lc01vZHVsZSlyZXR1cm4gdDt2YXIgaT1PYmplY3QuY3JlYXRlKG51bGwpO2lmKG4ucihpKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoaSxcImRlZmF1bHRcIix7ZW51bWVyYWJsZTohMCx2YWx1ZTp0fSksMiZlJiZcInN0cmluZ1wiIT10eXBlb2YgdClmb3IodmFyIHIgaW4gdCluLmQoaSxyLGZ1bmN0aW9uKGUpe3JldHVybiB0W2VdfS5iaW5kKG51bGwscikpO3JldHVybiBpfSxuLm49ZnVuY3Rpb24odCl7dmFyIGU9dCYmdC5fX2VzTW9kdWxlP2Z1bmN0aW9uKCl7cmV0dXJuIHQuZGVmYXVsdH06ZnVuY3Rpb24oKXtyZXR1cm4gdH07cmV0dXJuIG4uZChlLFwiYVwiLGUpLGV9LG4ubz1mdW5jdGlvbih0LGUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKX0sbi5wPVwiXCIsbihuLnM9MCl9KFtmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9bigxKS5CZWF1dGlmaWVyLHI9big1KS5PcHRpb25zO3QuZXhwb3J0cz1mdW5jdGlvbih0LGUpe3JldHVybiBuZXcgaSh0LGUpLmJlYXV0aWZ5KCl9LHQuZXhwb3J0cy5kZWZhdWx0T3B0aW9ucz1mdW5jdGlvbigpe3JldHVybiBuZXcgcn19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1uKDIpLk91dHB1dCxyPW4oMykuVG9rZW4sYT1uKDQpLG89big1KS5PcHRpb25zLHM9big3KS5Ub2tlbml6ZXIsdT1uKDcpLmxpbmVfc3RhcnRlcnMsbD1uKDcpLnBvc2l0aW9uYWJsZV9vcGVyYXRvcnMsYz1uKDcpLlRPS0VOO2Z1bmN0aW9uIF8odCxlKXtyZXR1cm4tMSE9PWUuaW5kZXhPZih0KX1mdW5jdGlvbiBoKHQsZSl7cmV0dXJuIHQmJnQudHlwZT09PWMuUkVTRVJWRUQmJnQudGV4dD09PWV9ZnVuY3Rpb24gcCh0LGUpe3JldHVybiB0JiZ0LnR5cGU9PT1jLlJFU0VSVkVEJiZfKHQudGV4dCxlKX12YXIgZD1bXCJjYXNlXCIsXCJyZXR1cm5cIixcImRvXCIsXCJpZlwiLFwidGhyb3dcIixcImVsc2VcIixcImF3YWl0XCIsXCJicmVha1wiLFwiY29udGludWVcIixcImFzeW5jXCJdLGY9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXt9LG49MDtuPHQubGVuZ3RoO24rKyllW3Rbbl0ucmVwbGFjZSgvLS9nLFwiX1wiKV09dFtuXTtyZXR1cm4gZX0oW1wiYmVmb3JlLW5ld2xpbmVcIixcImFmdGVyLW5ld2xpbmVcIixcInByZXNlcnZlLW5ld2xpbmVcIl0pLHY9W2YuYmVmb3JlX25ld2xpbmUsZi5wcmVzZXJ2ZV9uZXdsaW5lXSxnPVwiQmxvY2tTdGF0ZW1lbnRcIixtPVwiU3RhdGVtZW50XCIsYj1cIk9iamVjdExpdGVyYWxcIix5PVwiQXJyYXlMaXRlcmFsXCIsdz1cIkZvckluaXRpYWxpemVyXCIseD1cIkNvbmRpdGlvbmFsXCIsaz1cIkV4cHJlc3Npb25cIjtmdW5jdGlvbiAkKHQsZSl7ZS5tdWx0aWxpbmVfZnJhbWV8fGUubW9kZT09PXd8fGUubW9kZT09PXh8fHQucmVtb3ZlX2luZGVudChlLnN0YXJ0X2xpbmVfaW5kZXgpfWZ1bmN0aW9uIE8odCl7cmV0dXJuIHQ9PT15fWZ1bmN0aW9uIEUodCl7cmV0dXJuIF8odCxbayx3LHhdKX1mdW5jdGlvbiBqKHQsZSl7ZT1lfHx7fSx0aGlzLl9zb3VyY2VfdGV4dD10fHxcIlwiLHRoaXMuX291dHB1dD1udWxsLHRoaXMuX3Rva2Vucz1udWxsLHRoaXMuX2xhc3RfbGFzdF90ZXh0PW51bGwsdGhpcy5fZmxhZ3M9bnVsbCx0aGlzLl9wcmV2aW91c19mbGFncz1udWxsLHRoaXMuX2ZsYWdfc3RvcmU9bnVsbCx0aGlzLl9vcHRpb25zPW5ldyBvKGUpfWoucHJvdG90eXBlLmNyZWF0ZV9mbGFncz1mdW5jdGlvbih0LGUpe3ZhciBuPTA7cmV0dXJuIHQmJihuPXQuaW5kZW50YXRpb25fbGV2ZWwsIXRoaXMuX291dHB1dC5qdXN0X2FkZGVkX25ld2xpbmUoKSYmdC5saW5lX2luZGVudF9sZXZlbD5uJiYobj10LmxpbmVfaW5kZW50X2xldmVsKSkse21vZGU6ZSxwYXJlbnQ6dCxsYXN0X3Rva2VuOnQ/dC5sYXN0X3Rva2VuOm5ldyByKGMuU1RBUlRfQkxPQ0ssXCJcIiksbGFzdF93b3JkOnQ/dC5sYXN0X3dvcmQ6XCJcIixkZWNsYXJhdGlvbl9zdGF0ZW1lbnQ6ITEsZGVjbGFyYXRpb25fYXNzaWdubWVudDohMSxtdWx0aWxpbmVfZnJhbWU6ITEsaW5saW5lX2ZyYW1lOiExLGlmX2Jsb2NrOiExLGVsc2VfYmxvY2s6ITEsZG9fYmxvY2s6ITEsZG9fd2hpbGU6ITEsaW1wb3J0X2Jsb2NrOiExLGluX2Nhc2Vfc3RhdGVtZW50OiExLGluX2Nhc2U6ITEsY2FzZV9ib2R5OiExLGluZGVudGF0aW9uX2xldmVsOm4sYWxpZ25tZW50OjAsbGluZV9pbmRlbnRfbGV2ZWw6dD90LmxpbmVfaW5kZW50X2xldmVsOm4sc3RhcnRfbGluZV9pbmRleDp0aGlzLl9vdXRwdXQuZ2V0X2xpbmVfbnVtYmVyKCksdGVybmFyeV9kZXB0aDowfX0sai5wcm90b3R5cGUuX3Jlc2V0PWZ1bmN0aW9uKHQpe3ZhciBlPXQubWF0Y2goL15bXFx0IF0qLylbMF07dGhpcy5fbGFzdF9sYXN0X3RleHQ9XCJcIix0aGlzLl9vdXRwdXQ9bmV3IGkodGhpcy5fb3B0aW9ucyxlKSx0aGlzLl9vdXRwdXQucmF3PXRoaXMuX29wdGlvbnMudGVzdF9vdXRwdXRfcmF3LHRoaXMuX2ZsYWdfc3RvcmU9W10sdGhpcy5zZXRfbW9kZShnKTt2YXIgbj1uZXcgcyh0LHRoaXMuX29wdGlvbnMpO3JldHVybiB0aGlzLl90b2tlbnM9bi50b2tlbml6ZSgpLHR9LGoucHJvdG90eXBlLmJlYXV0aWZ5PWZ1bmN0aW9uKCl7aWYodGhpcy5fb3B0aW9ucy5kaXNhYmxlZClyZXR1cm4gdGhpcy5fc291cmNlX3RleHQ7dmFyIHQ9dGhpcy5fcmVzZXQodGhpcy5fc291cmNlX3RleHQpLGU9dGhpcy5fb3B0aW9ucy5lb2w7XCJhdXRvXCI9PT10aGlzLl9vcHRpb25zLmVvbCYmKGU9XCJcXG5cIix0JiZhLmxpbmVCcmVhay50ZXN0KHR8fFwiXCIpJiYoZT10Lm1hdGNoKGEubGluZUJyZWFrKVswXSkpO2Zvcih2YXIgbj10aGlzLl90b2tlbnMubmV4dCgpO247KXRoaXMuaGFuZGxlX3Rva2VuKG4pLHRoaXMuX2xhc3RfbGFzdF90ZXh0PXRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udGV4dCx0aGlzLl9mbGFncy5sYXN0X3Rva2VuPW4sbj10aGlzLl90b2tlbnMubmV4dCgpO3JldHVybiB0aGlzLl9vdXRwdXQuZ2V0X2NvZGUoZSl9LGoucHJvdG90eXBlLmhhbmRsZV90b2tlbj1mdW5jdGlvbih0LGUpe3QudHlwZT09PWMuU1RBUlRfRVhQUj90aGlzLmhhbmRsZV9zdGFydF9leHByKHQpOnQudHlwZT09PWMuRU5EX0VYUFI/dGhpcy5oYW5kbGVfZW5kX2V4cHIodCk6dC50eXBlPT09Yy5TVEFSVF9CTE9DSz90aGlzLmhhbmRsZV9zdGFydF9ibG9jayh0KTp0LnR5cGU9PT1jLkVORF9CTE9DSz90aGlzLmhhbmRsZV9lbmRfYmxvY2sodCk6dC50eXBlPT09Yy5XT1JEfHx0LnR5cGU9PT1jLlJFU0VSVkVEP3RoaXMuaGFuZGxlX3dvcmQodCk6dC50eXBlPT09Yy5TRU1JQ09MT04/dGhpcy5oYW5kbGVfc2VtaWNvbG9uKHQpOnQudHlwZT09PWMuU1RSSU5HP3RoaXMuaGFuZGxlX3N0cmluZyh0KTp0LnR5cGU9PT1jLkVRVUFMUz90aGlzLmhhbmRsZV9lcXVhbHModCk6dC50eXBlPT09Yy5PUEVSQVRPUj90aGlzLmhhbmRsZV9vcGVyYXRvcih0KTp0LnR5cGU9PT1jLkNPTU1BP3RoaXMuaGFuZGxlX2NvbW1hKHQpOnQudHlwZT09PWMuQkxPQ0tfQ09NTUVOVD90aGlzLmhhbmRsZV9ibG9ja19jb21tZW50KHQsZSk6dC50eXBlPT09Yy5DT01NRU5UP3RoaXMuaGFuZGxlX2NvbW1lbnQodCxlKTp0LnR5cGU9PT1jLkRPVD90aGlzLmhhbmRsZV9kb3QodCk6dC50eXBlPT09Yy5FT0Y/dGhpcy5oYW5kbGVfZW9mKHQpOih0LnR5cGUsYy5VTktOT1dOLHRoaXMuaGFuZGxlX3Vua25vd24odCxlKSl9LGoucHJvdG90eXBlLmhhbmRsZV93aGl0ZXNwYWNlX2FuZF9jb21tZW50cz1mdW5jdGlvbih0LGUpe3ZhciBuPXQubmV3bGluZXMsaT10aGlzLl9vcHRpb25zLmtlZXBfYXJyYXlfaW5kZW50YXRpb24mJk8odGhpcy5fZmxhZ3MubW9kZSk7aWYodC5jb21tZW50c19iZWZvcmUpZm9yKHZhciByPXQuY29tbWVudHNfYmVmb3JlLm5leHQoKTtyOyl0aGlzLmhhbmRsZV93aGl0ZXNwYWNlX2FuZF9jb21tZW50cyhyLGUpLHRoaXMuaGFuZGxlX3Rva2VuKHIsZSkscj10LmNvbW1lbnRzX2JlZm9yZS5uZXh0KCk7aWYoaSlmb3IodmFyIGE9MDthPG47YSs9MSl0aGlzLnByaW50X25ld2xpbmUoYT4wLGUpO2Vsc2UgaWYodGhpcy5fb3B0aW9ucy5tYXhfcHJlc2VydmVfbmV3bGluZXMmJm4+dGhpcy5fb3B0aW9ucy5tYXhfcHJlc2VydmVfbmV3bGluZXMmJihuPXRoaXMuX29wdGlvbnMubWF4X3ByZXNlcnZlX25ld2xpbmVzKSx0aGlzLl9vcHRpb25zLnByZXNlcnZlX25ld2xpbmVzJiZuPjEpe3RoaXMucHJpbnRfbmV3bGluZSghMSxlKTtmb3IodmFyIG89MTtvPG47bys9MSl0aGlzLnByaW50X25ld2xpbmUoITAsZSl9fTt2YXIgQT1bXCJhc3luY1wiLFwiYnJlYWtcIixcImNvbnRpbnVlXCIsXCJyZXR1cm5cIixcInRocm93XCIsXCJ5aWVsZFwiXTtqLnByb3RvdHlwZS5hbGxvd193cmFwX29yX3ByZXNlcnZlZF9uZXdsaW5lPWZ1bmN0aW9uKHQsZSl7aWYoZT12b2lkIDAhPT1lJiZlLCF0aGlzLl9vdXRwdXQuanVzdF9hZGRlZF9uZXdsaW5lKCkpe3ZhciBuPXRoaXMuX29wdGlvbnMucHJlc2VydmVfbmV3bGluZXMmJnQubmV3bGluZXN8fGU7aWYoXyh0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnRleHQsbCl8fF8odC50ZXh0LGwpKXt2YXIgaT1fKHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udGV4dCxsKSYmXyh0aGlzLl9vcHRpb25zLm9wZXJhdG9yX3Bvc2l0aW9uLHYpfHxfKHQudGV4dCxsKTtuPW4mJml9aWYobil0aGlzLnByaW50X25ld2xpbmUoITEsITApO2Vsc2UgaWYodGhpcy5fb3B0aW9ucy53cmFwX2xpbmVfbGVuZ3RoKXtpZihwKHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4sQSkpcmV0dXJuO3RoaXMuX291dHB1dC5zZXRfd3JhcF9wb2ludCgpfX19LGoucHJvdG90eXBlLnByaW50X25ld2xpbmU9ZnVuY3Rpb24odCxlKXtpZighZSYmXCI7XCIhPT10aGlzLl9mbGFncy5sYXN0X3Rva2VuLnRleHQmJlwiLFwiIT09dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50ZXh0JiZcIj1cIiE9PXRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udGV4dCYmKHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udHlwZSE9PWMuT1BFUkFUT1J8fFwiLS1cIj09PXRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udGV4dHx8XCIrK1wiPT09dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50ZXh0KSlmb3IodmFyIG49dGhpcy5fdG9rZW5zLnBlZWsoKTshKHRoaXMuX2ZsYWdzLm1vZGUhPT1tfHx0aGlzLl9mbGFncy5pZl9ibG9jayYmaChuLFwiZWxzZVwiKXx8dGhpcy5fZmxhZ3MuZG9fYmxvY2spOyl0aGlzLnJlc3RvcmVfbW9kZSgpO3RoaXMuX291dHB1dC5hZGRfbmV3X2xpbmUodCkmJih0aGlzLl9mbGFncy5tdWx0aWxpbmVfZnJhbWU9ITApfSxqLnByb3RvdHlwZS5wcmludF90b2tlbl9saW5lX2luZGVudGF0aW9uPWZ1bmN0aW9uKHQpe3RoaXMuX291dHB1dC5qdXN0X2FkZGVkX25ld2xpbmUoKSYmKHRoaXMuX29wdGlvbnMua2VlcF9hcnJheV9pbmRlbnRhdGlvbiYmdC5uZXdsaW5lcyYmKFwiW1wiPT09dC50ZXh0fHxPKHRoaXMuX2ZsYWdzLm1vZGUpKT8odGhpcy5fb3V0cHV0LmN1cnJlbnRfbGluZS5zZXRfaW5kZW50KC0xKSx0aGlzLl9vdXRwdXQuY3VycmVudF9saW5lLnB1c2godC53aGl0ZXNwYWNlX2JlZm9yZSksdGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj0hMSk6dGhpcy5fb3V0cHV0LnNldF9pbmRlbnQodGhpcy5fZmxhZ3MuaW5kZW50YXRpb25fbGV2ZWwsdGhpcy5fZmxhZ3MuYWxpZ25tZW50KSYmKHRoaXMuX2ZsYWdzLmxpbmVfaW5kZW50X2xldmVsPXRoaXMuX2ZsYWdzLmluZGVudGF0aW9uX2xldmVsKSl9LGoucHJvdG90eXBlLnByaW50X3Rva2VuPWZ1bmN0aW9uKHQpe2lmKHRoaXMuX291dHB1dC5yYXcpdGhpcy5fb3V0cHV0LmFkZF9yYXdfdG9rZW4odCk7ZWxzZXtpZih0aGlzLl9vcHRpb25zLmNvbW1hX2ZpcnN0JiZ0LnByZXZpb3VzJiZ0LnByZXZpb3VzLnR5cGU9PT1jLkNPTU1BJiZ0aGlzLl9vdXRwdXQuanVzdF9hZGRlZF9uZXdsaW5lKCkmJlwiLFwiPT09dGhpcy5fb3V0cHV0LnByZXZpb3VzX2xpbmUubGFzdCgpKXt2YXIgZT10aGlzLl9vdXRwdXQucHJldmlvdXNfbGluZS5wb3AoKTt0aGlzLl9vdXRwdXQucHJldmlvdXNfbGluZS5pc19lbXB0eSgpJiYodGhpcy5fb3V0cHV0LnByZXZpb3VzX2xpbmUucHVzaChlKSx0aGlzLl9vdXRwdXQudHJpbSghMCksdGhpcy5fb3V0cHV0LmN1cnJlbnRfbGluZS5wb3AoKSx0aGlzLl9vdXRwdXQudHJpbSgpKSx0aGlzLnByaW50X3Rva2VuX2xpbmVfaW5kZW50YXRpb24odCksdGhpcy5fb3V0cHV0LmFkZF90b2tlbihcIixcIiksdGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj0hMH10aGlzLnByaW50X3Rva2VuX2xpbmVfaW5kZW50YXRpb24odCksdGhpcy5fb3V0cHV0Lm5vbl9icmVha2luZ19zcGFjZT0hMCx0aGlzLl9vdXRwdXQuYWRkX3Rva2VuKHQudGV4dCksdGhpcy5fb3V0cHV0LnByZXZpb3VzX3Rva2VuX3dyYXBwZWQmJih0aGlzLl9mbGFncy5tdWx0aWxpbmVfZnJhbWU9ITApfX0sai5wcm90b3R5cGUuaW5kZW50PWZ1bmN0aW9uKCl7dGhpcy5fZmxhZ3MuaW5kZW50YXRpb25fbGV2ZWwrPTEsdGhpcy5fb3V0cHV0LnNldF9pbmRlbnQodGhpcy5fZmxhZ3MuaW5kZW50YXRpb25fbGV2ZWwsdGhpcy5fZmxhZ3MuYWxpZ25tZW50KX0sai5wcm90b3R5cGUuZGVpbmRlbnQ9ZnVuY3Rpb24oKXt0aGlzLl9mbGFncy5pbmRlbnRhdGlvbl9sZXZlbD4wJiYoIXRoaXMuX2ZsYWdzLnBhcmVudHx8dGhpcy5fZmxhZ3MuaW5kZW50YXRpb25fbGV2ZWw+dGhpcy5fZmxhZ3MucGFyZW50LmluZGVudGF0aW9uX2xldmVsKSYmKHRoaXMuX2ZsYWdzLmluZGVudGF0aW9uX2xldmVsLT0xLHRoaXMuX291dHB1dC5zZXRfaW5kZW50KHRoaXMuX2ZsYWdzLmluZGVudGF0aW9uX2xldmVsLHRoaXMuX2ZsYWdzLmFsaWdubWVudCkpfSxqLnByb3RvdHlwZS5zZXRfbW9kZT1mdW5jdGlvbih0KXt0aGlzLl9mbGFncz8odGhpcy5fZmxhZ19zdG9yZS5wdXNoKHRoaXMuX2ZsYWdzKSx0aGlzLl9wcmV2aW91c19mbGFncz10aGlzLl9mbGFncyk6dGhpcy5fcHJldmlvdXNfZmxhZ3M9dGhpcy5jcmVhdGVfZmxhZ3MobnVsbCx0KSx0aGlzLl9mbGFncz10aGlzLmNyZWF0ZV9mbGFncyh0aGlzLl9wcmV2aW91c19mbGFncyx0KSx0aGlzLl9vdXRwdXQuc2V0X2luZGVudCh0aGlzLl9mbGFncy5pbmRlbnRhdGlvbl9sZXZlbCx0aGlzLl9mbGFncy5hbGlnbm1lbnQpfSxqLnByb3RvdHlwZS5yZXN0b3JlX21vZGU9ZnVuY3Rpb24oKXt0aGlzLl9mbGFnX3N0b3JlLmxlbmd0aD4wJiYodGhpcy5fcHJldmlvdXNfZmxhZ3M9dGhpcy5fZmxhZ3MsdGhpcy5fZmxhZ3M9dGhpcy5fZmxhZ19zdG9yZS5wb3AoKSx0aGlzLl9wcmV2aW91c19mbGFncy5tb2RlPT09bSYmJCh0aGlzLl9vdXRwdXQsdGhpcy5fcHJldmlvdXNfZmxhZ3MpLHRoaXMuX291dHB1dC5zZXRfaW5kZW50KHRoaXMuX2ZsYWdzLmluZGVudGF0aW9uX2xldmVsLHRoaXMuX2ZsYWdzLmFsaWdubWVudCkpfSxqLnByb3RvdHlwZS5zdGFydF9vZl9vYmplY3RfcHJvcGVydHk9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZmxhZ3MucGFyZW50Lm1vZGU9PT1iJiZ0aGlzLl9mbGFncy5tb2RlPT09bSYmKFwiOlwiPT09dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50ZXh0JiYwPT09dGhpcy5fZmxhZ3MudGVybmFyeV9kZXB0aHx8cCh0aGlzLl9mbGFncy5sYXN0X3Rva2VuLFtcImdldFwiLFwic2V0XCJdKSl9LGoucHJvdG90eXBlLnN0YXJ0X29mX3N0YXRlbWVudD1mdW5jdGlvbih0KXt2YXIgZT0hMTtyZXR1cm4hIShlPShlPShlPShlPShlPShlPShlPWV8fHAodGhpcy5fZmxhZ3MubGFzdF90b2tlbixbXCJ2YXJcIixcImxldFwiLFwiY29uc3RcIl0pJiZ0LnR5cGU9PT1jLldPUkQpfHxoKHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4sXCJkb1wiKSl8fCEodGhpcy5fZmxhZ3MucGFyZW50Lm1vZGU9PT1iJiZ0aGlzLl9mbGFncy5tb2RlPT09bSkmJnAodGhpcy5fZmxhZ3MubGFzdF90b2tlbixBKSYmIXQubmV3bGluZXMpfHxoKHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4sXCJlbHNlXCIpJiYhKGgodCxcImlmXCIpJiYhdC5jb21tZW50c19iZWZvcmUpKXx8dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlPT09Yy5FTkRfRVhQUiYmKHRoaXMuX3ByZXZpb3VzX2ZsYWdzLm1vZGU9PT13fHx0aGlzLl9wcmV2aW91c19mbGFncy5tb2RlPT09eCkpfHx0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnR5cGU9PT1jLldPUkQmJnRoaXMuX2ZsYWdzLm1vZGU9PT1nJiYhdGhpcy5fZmxhZ3MuaW5fY2FzZSYmIShcIi0tXCI9PT10LnRleHR8fFwiKytcIj09PXQudGV4dCkmJlwiZnVuY3Rpb25cIiE9PXRoaXMuX2xhc3RfbGFzdF90ZXh0JiZ0LnR5cGUhPT1jLldPUkQmJnQudHlwZSE9PWMuUkVTRVJWRUQpfHx0aGlzLl9mbGFncy5tb2RlPT09YiYmKFwiOlwiPT09dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50ZXh0JiYwPT09dGhpcy5fZmxhZ3MudGVybmFyeV9kZXB0aHx8cCh0aGlzLl9mbGFncy5sYXN0X3Rva2VuLFtcImdldFwiLFwic2V0XCJdKSkpJiYodGhpcy5zZXRfbW9kZShtKSx0aGlzLmluZGVudCgpLHRoaXMuaGFuZGxlX3doaXRlc3BhY2VfYW5kX2NvbW1lbnRzKHQsITApLHRoaXMuc3RhcnRfb2Zfb2JqZWN0X3Byb3BlcnR5KCl8fHRoaXMuYWxsb3dfd3JhcF9vcl9wcmVzZXJ2ZWRfbmV3bGluZSh0LHAodCxbXCJkb1wiLFwiZm9yXCIsXCJpZlwiLFwid2hpbGVcIl0pKSwhMCl9LGoucHJvdG90eXBlLmhhbmRsZV9zdGFydF9leHByPWZ1bmN0aW9uKHQpe3RoaXMuc3RhcnRfb2Zfc3RhdGVtZW50KHQpfHx0aGlzLmhhbmRsZV93aGl0ZXNwYWNlX2FuZF9jb21tZW50cyh0KTt2YXIgZT1rO2lmKFwiW1wiPT09dC50ZXh0KXtpZih0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnR5cGU9PT1jLldPUkR8fFwiKVwiPT09dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50ZXh0KXJldHVybiBwKHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4sdSkmJih0aGlzLl9vdXRwdXQuc3BhY2VfYmVmb3JlX3Rva2VuPSEwKSx0aGlzLnByaW50X3Rva2VuKHQpLHRoaXMuc2V0X21vZGUoZSksdGhpcy5pbmRlbnQoKSx2b2lkKHRoaXMuX29wdGlvbnMuc3BhY2VfaW5fcGFyZW4mJih0aGlzLl9vdXRwdXQuc3BhY2VfYmVmb3JlX3Rva2VuPSEwKSk7ZT15LE8odGhpcy5fZmxhZ3MubW9kZSkmJihcIltcIiE9PXRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udGV4dCYmKFwiLFwiIT09dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50ZXh0fHxcIl1cIiE9PXRoaXMuX2xhc3RfbGFzdF90ZXh0JiZcIn1cIiE9PXRoaXMuX2xhc3RfbGFzdF90ZXh0KXx8dGhpcy5fb3B0aW9ucy5rZWVwX2FycmF5X2luZGVudGF0aW9ufHx0aGlzLnByaW50X25ld2xpbmUoKSksXyh0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnR5cGUsW2MuU1RBUlRfRVhQUixjLkVORF9FWFBSLGMuV09SRCxjLk9QRVJBVE9SXSl8fCh0aGlzLl9vdXRwdXQuc3BhY2VfYmVmb3JlX3Rva2VuPSEwKX1lbHNle2lmKHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udHlwZT09PWMuUkVTRVJWRUQpXCJmb3JcIj09PXRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udGV4dD8odGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj10aGlzLl9vcHRpb25zLnNwYWNlX2JlZm9yZV9jb25kaXRpb25hbCxlPXcpOl8odGhpcy5fZmxhZ3MubGFzdF90b2tlbi50ZXh0LFtcImlmXCIsXCJ3aGlsZVwiXSk/KHRoaXMuX291dHB1dC5zcGFjZV9iZWZvcmVfdG9rZW49dGhpcy5fb3B0aW9ucy5zcGFjZV9iZWZvcmVfY29uZGl0aW9uYWwsZT14KTpfKHRoaXMuX2ZsYWdzLmxhc3Rfd29yZCxbXCJhd2FpdFwiLFwiYXN5bmNcIl0pP3RoaXMuX291dHB1dC5zcGFjZV9iZWZvcmVfdG9rZW49ITA6XCJpbXBvcnRcIj09PXRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udGV4dCYmXCJcIj09PXQud2hpdGVzcGFjZV9iZWZvcmU/dGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj0hMTooXyh0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnRleHQsdSl8fFwiY2F0Y2hcIj09PXRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udGV4dCkmJih0aGlzLl9vdXRwdXQuc3BhY2VfYmVmb3JlX3Rva2VuPSEwKTtlbHNlIGlmKHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udHlwZT09PWMuRVFVQUxTfHx0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnR5cGU9PT1jLk9QRVJBVE9SKXRoaXMuc3RhcnRfb2Zfb2JqZWN0X3Byb3BlcnR5KCl8fHRoaXMuYWxsb3dfd3JhcF9vcl9wcmVzZXJ2ZWRfbmV3bGluZSh0KTtlbHNlIGlmKHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udHlwZT09PWMuV09SRCl7dGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj0hMTt2YXIgbj10aGlzLl90b2tlbnMucGVlaygtMyk7aWYodGhpcy5fb3B0aW9ucy5zcGFjZV9hZnRlcl9uYW1lZF9mdW5jdGlvbiYmbil7dmFyIGk9dGhpcy5fdG9rZW5zLnBlZWsoLTQpO3AobixbXCJhc3luY1wiLFwiZnVuY3Rpb25cIl0pfHxcIipcIj09PW4udGV4dCYmcChpLFtcImFzeW5jXCIsXCJmdW5jdGlvblwiXSk/dGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj0hMDp0aGlzLl9mbGFncy5tb2RlPT09YiYmKFwie1wiIT09bi50ZXh0JiZcIixcIiE9PW4udGV4dCYmKFwiKlwiIT09bi50ZXh0fHxcIntcIiE9PWkudGV4dCYmXCIsXCIhPT1pLnRleHQpfHwodGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj0hMCkpfX1lbHNlIHRoaXMuYWxsb3dfd3JhcF9vcl9wcmVzZXJ2ZWRfbmV3bGluZSh0KTsodGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlPT09Yy5SRVNFUlZFRCYmKFwiZnVuY3Rpb25cIj09PXRoaXMuX2ZsYWdzLmxhc3Rfd29yZHx8XCJ0eXBlb2ZcIj09PXRoaXMuX2ZsYWdzLmxhc3Rfd29yZCl8fFwiKlwiPT09dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50ZXh0JiYoXyh0aGlzLl9sYXN0X2xhc3RfdGV4dCxbXCJmdW5jdGlvblwiLFwieWllbGRcIl0pfHx0aGlzLl9mbGFncy5tb2RlPT09YiYmXyh0aGlzLl9sYXN0X2xhc3RfdGV4dCxbXCJ7XCIsXCIsXCJdKSkpJiYodGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj10aGlzLl9vcHRpb25zLnNwYWNlX2FmdGVyX2Fub25fZnVuY3Rpb24pfVwiO1wiPT09dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50ZXh0fHx0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnR5cGU9PT1jLlNUQVJUX0JMT0NLP3RoaXMucHJpbnRfbmV3bGluZSgpOnRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udHlwZSE9PWMuRU5EX0VYUFImJnRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udHlwZSE9PWMuU1RBUlRfRVhQUiYmdGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlIT09Yy5FTkRfQkxPQ0smJlwiLlwiIT09dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50ZXh0JiZ0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnR5cGUhPT1jLkNPTU1BfHx0aGlzLmFsbG93X3dyYXBfb3JfcHJlc2VydmVkX25ld2xpbmUodCx0Lm5ld2xpbmVzKSx0aGlzLnByaW50X3Rva2VuKHQpLHRoaXMuc2V0X21vZGUoZSksdGhpcy5fb3B0aW9ucy5zcGFjZV9pbl9wYXJlbiYmKHRoaXMuX291dHB1dC5zcGFjZV9iZWZvcmVfdG9rZW49ITApLHRoaXMuaW5kZW50KCl9LGoucHJvdG90eXBlLmhhbmRsZV9lbmRfZXhwcj1mdW5jdGlvbih0KXtmb3IoO3RoaXMuX2ZsYWdzLm1vZGU9PT1tOyl0aGlzLnJlc3RvcmVfbW9kZSgpO3RoaXMuaGFuZGxlX3doaXRlc3BhY2VfYW5kX2NvbW1lbnRzKHQpLHRoaXMuX2ZsYWdzLm11bHRpbGluZV9mcmFtZSYmdGhpcy5hbGxvd193cmFwX29yX3ByZXNlcnZlZF9uZXdsaW5lKHQsXCJdXCI9PT10LnRleHQmJk8odGhpcy5fZmxhZ3MubW9kZSkmJiF0aGlzLl9vcHRpb25zLmtlZXBfYXJyYXlfaW5kZW50YXRpb24pLHRoaXMuX29wdGlvbnMuc3BhY2VfaW5fcGFyZW4mJih0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnR5cGUhPT1jLlNUQVJUX0VYUFJ8fHRoaXMuX29wdGlvbnMuc3BhY2VfaW5fZW1wdHlfcGFyZW4/dGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj0hMDoodGhpcy5fb3V0cHV0LnRyaW0oKSx0aGlzLl9vdXRwdXQuc3BhY2VfYmVmb3JlX3Rva2VuPSExKSksdGhpcy5kZWluZGVudCgpLHRoaXMucHJpbnRfdG9rZW4odCksdGhpcy5yZXN0b3JlX21vZGUoKSwkKHRoaXMuX291dHB1dCx0aGlzLl9wcmV2aW91c19mbGFncyksdGhpcy5fZmxhZ3MuZG9fd2hpbGUmJnRoaXMuX3ByZXZpb3VzX2ZsYWdzLm1vZGU9PT14JiYodGhpcy5fcHJldmlvdXNfZmxhZ3MubW9kZT1rLHRoaXMuX2ZsYWdzLmRvX2Jsb2NrPSExLHRoaXMuX2ZsYWdzLmRvX3doaWxlPSExKX0sai5wcm90b3R5cGUuaGFuZGxlX3N0YXJ0X2Jsb2NrPWZ1bmN0aW9uKHQpe3RoaXMuaGFuZGxlX3doaXRlc3BhY2VfYW5kX2NvbW1lbnRzKHQpO3ZhciBlPXRoaXMuX3Rva2Vucy5wZWVrKCksbj10aGlzLl90b2tlbnMucGVlaygxKTtcInN3aXRjaFwiPT09dGhpcy5fZmxhZ3MubGFzdF93b3JkJiZ0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnR5cGU9PT1jLkVORF9FWFBSPyh0aGlzLnNldF9tb2RlKGcpLHRoaXMuX2ZsYWdzLmluX2Nhc2Vfc3RhdGVtZW50PSEwKTp0aGlzLl9mbGFncy5jYXNlX2JvZHk/dGhpcy5zZXRfbW9kZShnKTpuJiYoXyhuLnRleHQsW1wiOlwiLFwiLFwiXSkmJl8oZS50eXBlLFtjLlNUUklORyxjLldPUkQsYy5SRVNFUlZFRF0pfHxfKGUudGV4dCxbXCJnZXRcIixcInNldFwiLFwiLi4uXCJdKSYmXyhuLnR5cGUsW2MuV09SRCxjLlJFU0VSVkVEXSkpP18odGhpcy5fbGFzdF9sYXN0X3RleHQsW1wiY2xhc3NcIixcImludGVyZmFjZVwiXSk/dGhpcy5zZXRfbW9kZShnKTp0aGlzLnNldF9tb2RlKGIpOnRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udHlwZT09PWMuT1BFUkFUT1ImJlwiPT5cIj09PXRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udGV4dD90aGlzLnNldF9tb2RlKGcpOl8odGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlLFtjLkVRVUFMUyxjLlNUQVJUX0VYUFIsYy5DT01NQSxjLk9QRVJBVE9SXSl8fHAodGhpcy5fZmxhZ3MubGFzdF90b2tlbixbXCJyZXR1cm5cIixcInRocm93XCIsXCJpbXBvcnRcIixcImRlZmF1bHRcIl0pP3RoaXMuc2V0X21vZGUoYik6dGhpcy5zZXRfbW9kZShnKTt2YXIgaT0hZS5jb21tZW50c19iZWZvcmUmJlwifVwiPT09ZS50ZXh0LHI9aSYmXCJmdW5jdGlvblwiPT09dGhpcy5fZmxhZ3MubGFzdF93b3JkJiZ0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnR5cGU9PT1jLkVORF9FWFBSO2lmKHRoaXMuX29wdGlvbnMuYnJhY2VfcHJlc2VydmVfaW5saW5lKXt2YXIgYT0wLG89bnVsbDt0aGlzLl9mbGFncy5pbmxpbmVfZnJhbWU9ITA7ZG97aWYoYSs9MSwobz10aGlzLl90b2tlbnMucGVlayhhLTEpKS5uZXdsaW5lcyl7dGhpcy5fZmxhZ3MuaW5saW5lX2ZyYW1lPSExO2JyZWFrfX13aGlsZShvLnR5cGUhPT1jLkVPRiYmKG8udHlwZSE9PWMuRU5EX0JMT0NLfHxvLm9wZW5lZCE9PXQpKX0oXCJleHBhbmRcIj09PXRoaXMuX29wdGlvbnMuYnJhY2Vfc3R5bGV8fFwibm9uZVwiPT09dGhpcy5fb3B0aW9ucy5icmFjZV9zdHlsZSYmdC5uZXdsaW5lcykmJiF0aGlzLl9mbGFncy5pbmxpbmVfZnJhbWU/dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlIT09Yy5PUEVSQVRPUiYmKHJ8fHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udHlwZT09PWMuRVFVQUxTfHxwKHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4sZCkmJlwiZWxzZVwiIT09dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50ZXh0KT90aGlzLl9vdXRwdXQuc3BhY2VfYmVmb3JlX3Rva2VuPSEwOnRoaXMucHJpbnRfbmV3bGluZSghMSwhMCk6KCFPKHRoaXMuX3ByZXZpb3VzX2ZsYWdzLm1vZGUpfHx0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnR5cGUhPT1jLlNUQVJUX0VYUFImJnRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udHlwZSE9PWMuQ09NTUF8fCgodGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlPT09Yy5DT01NQXx8dGhpcy5fb3B0aW9ucy5zcGFjZV9pbl9wYXJlbikmJih0aGlzLl9vdXRwdXQuc3BhY2VfYmVmb3JlX3Rva2VuPSEwKSwodGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlPT09Yy5DT01NQXx8dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlPT09Yy5TVEFSVF9FWFBSJiZ0aGlzLl9mbGFncy5pbmxpbmVfZnJhbWUpJiYodGhpcy5hbGxvd193cmFwX29yX3ByZXNlcnZlZF9uZXdsaW5lKHQpLHRoaXMuX3ByZXZpb3VzX2ZsYWdzLm11bHRpbGluZV9mcmFtZT10aGlzLl9wcmV2aW91c19mbGFncy5tdWx0aWxpbmVfZnJhbWV8fHRoaXMuX2ZsYWdzLm11bHRpbGluZV9mcmFtZSx0aGlzLl9mbGFncy5tdWx0aWxpbmVfZnJhbWU9ITEpKSx0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnR5cGUhPT1jLk9QRVJBVE9SJiZ0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnR5cGUhPT1jLlNUQVJUX0VYUFImJih0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnR5cGUhPT1jLlNUQVJUX0JMT0NLfHx0aGlzLl9mbGFncy5pbmxpbmVfZnJhbWU/dGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj0hMDp0aGlzLnByaW50X25ld2xpbmUoKSkpLHRoaXMucHJpbnRfdG9rZW4odCksdGhpcy5pbmRlbnQoKSxpfHx0aGlzLl9vcHRpb25zLmJyYWNlX3ByZXNlcnZlX2lubGluZSYmdGhpcy5fZmxhZ3MuaW5saW5lX2ZyYW1lfHx0aGlzLnByaW50X25ld2xpbmUoKX0sai5wcm90b3R5cGUuaGFuZGxlX2VuZF9ibG9jaz1mdW5jdGlvbih0KXtmb3IodGhpcy5oYW5kbGVfd2hpdGVzcGFjZV9hbmRfY29tbWVudHModCk7dGhpcy5fZmxhZ3MubW9kZT09PW07KXRoaXMucmVzdG9yZV9tb2RlKCk7dmFyIGU9dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlPT09Yy5TVEFSVF9CTE9DSzt0aGlzLl9mbGFncy5pbmxpbmVfZnJhbWUmJiFlP3RoaXMuX291dHB1dC5zcGFjZV9iZWZvcmVfdG9rZW49ITA6XCJleHBhbmRcIj09PXRoaXMuX29wdGlvbnMuYnJhY2Vfc3R5bGU/ZXx8dGhpcy5wcmludF9uZXdsaW5lKCk6ZXx8KE8odGhpcy5fZmxhZ3MubW9kZSkmJnRoaXMuX29wdGlvbnMua2VlcF9hcnJheV9pbmRlbnRhdGlvbj8odGhpcy5fb3B0aW9ucy5rZWVwX2FycmF5X2luZGVudGF0aW9uPSExLHRoaXMucHJpbnRfbmV3bGluZSgpLHRoaXMuX29wdGlvbnMua2VlcF9hcnJheV9pbmRlbnRhdGlvbj0hMCk6dGhpcy5wcmludF9uZXdsaW5lKCkpLHRoaXMucmVzdG9yZV9tb2RlKCksdGhpcy5wcmludF90b2tlbih0KX0sai5wcm90b3R5cGUuaGFuZGxlX3dvcmQ9ZnVuY3Rpb24odCl7aWYodC50eXBlPT09Yy5SRVNFUlZFRCYmKF8odC50ZXh0LFtcInNldFwiLFwiZ2V0XCJdKSYmdGhpcy5fZmxhZ3MubW9kZSE9PWJ8fFwiaW1wb3J0XCI9PT10LnRleHQmJlwiKFwiPT09dGhpcy5fdG9rZW5zLnBlZWsoKS50ZXh0fHxfKHQudGV4dCxbXCJhc1wiLFwiZnJvbVwiXSkmJiF0aGlzLl9mbGFncy5pbXBvcnRfYmxvY2t8fHRoaXMuX2ZsYWdzLm1vZGU9PT1iJiZcIjpcIj09PXRoaXMuX3Rva2Vucy5wZWVrKCkudGV4dCkmJih0LnR5cGU9Yy5XT1JEKSx0aGlzLnN0YXJ0X29mX3N0YXRlbWVudCh0KT9wKHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4sW1widmFyXCIsXCJsZXRcIixcImNvbnN0XCJdKSYmdC50eXBlPT09Yy5XT1JEJiYodGhpcy5fZmxhZ3MuZGVjbGFyYXRpb25fc3RhdGVtZW50PSEwKTohdC5uZXdsaW5lc3x8RSh0aGlzLl9mbGFncy5tb2RlKXx8dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlPT09Yy5PUEVSQVRPUiYmXCItLVwiIT09dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50ZXh0JiZcIisrXCIhPT10aGlzLl9mbGFncy5sYXN0X3Rva2VuLnRleHR8fHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udHlwZT09PWMuRVFVQUxTfHwhdGhpcy5fb3B0aW9ucy5wcmVzZXJ2ZV9uZXdsaW5lcyYmcCh0aGlzLl9mbGFncy5sYXN0X3Rva2VuLFtcInZhclwiLFwibGV0XCIsXCJjb25zdFwiLFwic2V0XCIsXCJnZXRcIl0pP3RoaXMuaGFuZGxlX3doaXRlc3BhY2VfYW5kX2NvbW1lbnRzKHQpOih0aGlzLmhhbmRsZV93aGl0ZXNwYWNlX2FuZF9jb21tZW50cyh0KSx0aGlzLnByaW50X25ld2xpbmUoKSksdGhpcy5fZmxhZ3MuZG9fYmxvY2smJiF0aGlzLl9mbGFncy5kb193aGlsZSl7aWYoaCh0LFwid2hpbGVcIikpcmV0dXJuIHRoaXMuX291dHB1dC5zcGFjZV9iZWZvcmVfdG9rZW49ITAsdGhpcy5wcmludF90b2tlbih0KSx0aGlzLl9vdXRwdXQuc3BhY2VfYmVmb3JlX3Rva2VuPSEwLHZvaWQodGhpcy5fZmxhZ3MuZG9fd2hpbGU9ITApO3RoaXMucHJpbnRfbmV3bGluZSgpLHRoaXMuX2ZsYWdzLmRvX2Jsb2NrPSExfWlmKHRoaXMuX2ZsYWdzLmlmX2Jsb2NrKWlmKCF0aGlzLl9mbGFncy5lbHNlX2Jsb2NrJiZoKHQsXCJlbHNlXCIpKXRoaXMuX2ZsYWdzLmVsc2VfYmxvY2s9ITA7ZWxzZXtmb3IoO3RoaXMuX2ZsYWdzLm1vZGU9PT1tOyl0aGlzLnJlc3RvcmVfbW9kZSgpO3RoaXMuX2ZsYWdzLmlmX2Jsb2NrPSExLHRoaXMuX2ZsYWdzLmVsc2VfYmxvY2s9ITF9aWYodGhpcy5fZmxhZ3MuaW5fY2FzZV9zdGF0ZW1lbnQmJnAodCxbXCJjYXNlXCIsXCJkZWZhdWx0XCJdKSlyZXR1cm4gdGhpcy5wcmludF9uZXdsaW5lKCksdGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlIT09Yy5FTkRfQkxPQ0smJih0aGlzLl9mbGFncy5jYXNlX2JvZHl8fHRoaXMuX29wdGlvbnMuanNsaW50X2hhcHB5KSYmdGhpcy5kZWluZGVudCgpLHRoaXMuX2ZsYWdzLmNhc2VfYm9keT0hMSx0aGlzLnByaW50X3Rva2VuKHQpLHZvaWQodGhpcy5fZmxhZ3MuaW5fY2FzZT0hMCk7aWYodGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlIT09Yy5DT01NQSYmdGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlIT09Yy5TVEFSVF9FWFBSJiZ0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnR5cGUhPT1jLkVRVUFMUyYmdGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlIT09Yy5PUEVSQVRPUnx8dGhpcy5zdGFydF9vZl9vYmplY3RfcHJvcGVydHkoKXx8dGhpcy5hbGxvd193cmFwX29yX3ByZXNlcnZlZF9uZXdsaW5lKHQpLGgodCxcImZ1bmN0aW9uXCIpKXJldHVybihfKHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udGV4dCxbXCJ9XCIsXCI7XCJdKXx8dGhpcy5fb3V0cHV0Lmp1c3RfYWRkZWRfbmV3bGluZSgpJiYhXyh0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnRleHQsW1wiKFwiLFwiW1wiLFwie1wiLFwiOlwiLFwiPVwiLFwiLFwiXSkmJnRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udHlwZSE9PWMuT1BFUkFUT1IpJiYodGhpcy5fb3V0cHV0Lmp1c3RfYWRkZWRfYmxhbmtsaW5lKCl8fHQuY29tbWVudHNfYmVmb3JlfHwodGhpcy5wcmludF9uZXdsaW5lKCksdGhpcy5wcmludF9uZXdsaW5lKCEwKSkpLHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udHlwZT09PWMuUkVTRVJWRUR8fHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udHlwZT09PWMuV09SRD9wKHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4sW1wiZ2V0XCIsXCJzZXRcIixcIm5ld1wiLFwiZXhwb3J0XCJdKXx8cCh0aGlzLl9mbGFncy5sYXN0X3Rva2VuLEEpfHxoKHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4sXCJkZWZhdWx0XCIpJiZcImV4cG9ydFwiPT09dGhpcy5fbGFzdF9sYXN0X3RleHR8fFwiZGVjbGFyZVwiPT09dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50ZXh0P3RoaXMuX291dHB1dC5zcGFjZV9iZWZvcmVfdG9rZW49ITA6dGhpcy5wcmludF9uZXdsaW5lKCk6dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlPT09Yy5PUEVSQVRPUnx8XCI9XCI9PT10aGlzLl9mbGFncy5sYXN0X3Rva2VuLnRleHQ/dGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj0hMDoodGhpcy5fZmxhZ3MubXVsdGlsaW5lX2ZyYW1lfHwhRSh0aGlzLl9mbGFncy5tb2RlKSYmIU8odGhpcy5fZmxhZ3MubW9kZSkpJiZ0aGlzLnByaW50X25ld2xpbmUoKSx0aGlzLnByaW50X3Rva2VuKHQpLHZvaWQodGhpcy5fZmxhZ3MubGFzdF93b3JkPXQudGV4dCk7dmFyIGU9XCJOT05FXCI7dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlPT09Yy5FTkRfQkxPQ0s/dGhpcy5fcHJldmlvdXNfZmxhZ3MuaW5saW5lX2ZyYW1lP2U9XCJTUEFDRVwiOnAodCxbXCJlbHNlXCIsXCJjYXRjaFwiLFwiZmluYWxseVwiLFwiZnJvbVwiXSk/XCJleHBhbmRcIj09PXRoaXMuX29wdGlvbnMuYnJhY2Vfc3R5bGV8fFwiZW5kLWV4cGFuZFwiPT09dGhpcy5fb3B0aW9ucy5icmFjZV9zdHlsZXx8XCJub25lXCI9PT10aGlzLl9vcHRpb25zLmJyYWNlX3N0eWxlJiZ0Lm5ld2xpbmVzP2U9XCJORVdMSU5FXCI6KGU9XCJTUEFDRVwiLHRoaXMuX291dHB1dC5zcGFjZV9iZWZvcmVfdG9rZW49ITApOmU9XCJORVdMSU5FXCI6dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlPT09Yy5TRU1JQ09MT04mJnRoaXMuX2ZsYWdzLm1vZGU9PT1nP2U9XCJORVdMSU5FXCI6dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlPT09Yy5TRU1JQ09MT04mJkUodGhpcy5fZmxhZ3MubW9kZSk/ZT1cIlNQQUNFXCI6dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlPT09Yy5TVFJJTkc/ZT1cIk5FV0xJTkVcIjp0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnR5cGU9PT1jLlJFU0VSVkVEfHx0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnR5cGU9PT1jLldPUkR8fFwiKlwiPT09dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50ZXh0JiYoXyh0aGlzLl9sYXN0X2xhc3RfdGV4dCxbXCJmdW5jdGlvblwiLFwieWllbGRcIl0pfHx0aGlzLl9mbGFncy5tb2RlPT09YiYmXyh0aGlzLl9sYXN0X2xhc3RfdGV4dCxbXCJ7XCIsXCIsXCJdKSk/ZT1cIlNQQUNFXCI6dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlPT09Yy5TVEFSVF9CTE9DSz9lPXRoaXMuX2ZsYWdzLmlubGluZV9mcmFtZT9cIlNQQUNFXCI6XCJORVdMSU5FXCI6dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlPT09Yy5FTkRfRVhQUiYmKHRoaXMuX291dHB1dC5zcGFjZV9iZWZvcmVfdG9rZW49ITAsZT1cIk5FV0xJTkVcIikscCh0LHUpJiZcIilcIiE9PXRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udGV4dCYmKGU9dGhpcy5fZmxhZ3MuaW5saW5lX2ZyYW1lfHxcImVsc2VcIj09PXRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udGV4dHx8XCJleHBvcnRcIj09PXRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udGV4dD9cIlNQQUNFXCI6XCJORVdMSU5FXCIpLHAodCxbXCJlbHNlXCIsXCJjYXRjaFwiLFwiZmluYWxseVwiXSk/KHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udHlwZSE9PWMuRU5EX0JMT0NLfHx0aGlzLl9wcmV2aW91c19mbGFncy5tb2RlIT09Z3x8XCJleHBhbmRcIj09PXRoaXMuX29wdGlvbnMuYnJhY2Vfc3R5bGV8fFwiZW5kLWV4cGFuZFwiPT09dGhpcy5fb3B0aW9ucy5icmFjZV9zdHlsZXx8XCJub25lXCI9PT10aGlzLl9vcHRpb25zLmJyYWNlX3N0eWxlJiZ0Lm5ld2xpbmVzKSYmIXRoaXMuX2ZsYWdzLmlubGluZV9mcmFtZT90aGlzLnByaW50X25ld2xpbmUoKToodGhpcy5fb3V0cHV0LnRyaW0oITApLFwifVwiIT09dGhpcy5fb3V0cHV0LmN1cnJlbnRfbGluZS5sYXN0KCkmJnRoaXMucHJpbnRfbmV3bGluZSgpLHRoaXMuX291dHB1dC5zcGFjZV9iZWZvcmVfdG9rZW49ITApOlwiTkVXTElORVwiPT09ZT9wKHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4sZCl8fFwiZGVjbGFyZVwiPT09dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50ZXh0JiZwKHQsW1widmFyXCIsXCJsZXRcIixcImNvbnN0XCJdKT90aGlzLl9vdXRwdXQuc3BhY2VfYmVmb3JlX3Rva2VuPSEwOnRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udHlwZSE9PWMuRU5EX0VYUFI/dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlPT09Yy5TVEFSVF9FWFBSJiZwKHQsW1widmFyXCIsXCJsZXRcIixcImNvbnN0XCJdKXx8XCI6XCI9PT10aGlzLl9mbGFncy5sYXN0X3Rva2VuLnRleHR8fChoKHQsXCJpZlwiKSYmaCh0LnByZXZpb3VzLFwiZWxzZVwiKT90aGlzLl9vdXRwdXQuc3BhY2VfYmVmb3JlX3Rva2VuPSEwOnRoaXMucHJpbnRfbmV3bGluZSgpKTpwKHQsdSkmJlwiKVwiIT09dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50ZXh0JiZ0aGlzLnByaW50X25ld2xpbmUoKTp0aGlzLl9mbGFncy5tdWx0aWxpbmVfZnJhbWUmJk8odGhpcy5fZmxhZ3MubW9kZSkmJlwiLFwiPT09dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50ZXh0JiZcIn1cIj09PXRoaXMuX2xhc3RfbGFzdF90ZXh0P3RoaXMucHJpbnRfbmV3bGluZSgpOlwiU1BBQ0VcIj09PWUmJih0aGlzLl9vdXRwdXQuc3BhY2VfYmVmb3JlX3Rva2VuPSEwKSwhdC5wcmV2aW91c3x8dC5wcmV2aW91cy50eXBlIT09Yy5XT1JEJiZ0LnByZXZpb3VzLnR5cGUhPT1jLlJFU0VSVkVEfHwodGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj0hMCksdGhpcy5wcmludF90b2tlbih0KSx0aGlzLl9mbGFncy5sYXN0X3dvcmQ9dC50ZXh0LHQudHlwZT09PWMuUkVTRVJWRUQmJihcImRvXCI9PT10LnRleHQ/dGhpcy5fZmxhZ3MuZG9fYmxvY2s9ITA6XCJpZlwiPT09dC50ZXh0P3RoaXMuX2ZsYWdzLmlmX2Jsb2NrPSEwOlwiaW1wb3J0XCI9PT10LnRleHQ/dGhpcy5fZmxhZ3MuaW1wb3J0X2Jsb2NrPSEwOnRoaXMuX2ZsYWdzLmltcG9ydF9ibG9jayYmaCh0LFwiZnJvbVwiKSYmKHRoaXMuX2ZsYWdzLmltcG9ydF9ibG9jaz0hMSkpfSxqLnByb3RvdHlwZS5oYW5kbGVfc2VtaWNvbG9uPWZ1bmN0aW9uKHQpe3RoaXMuc3RhcnRfb2Zfc3RhdGVtZW50KHQpP3RoaXMuX291dHB1dC5zcGFjZV9iZWZvcmVfdG9rZW49ITE6dGhpcy5oYW5kbGVfd2hpdGVzcGFjZV9hbmRfY29tbWVudHModCk7Zm9yKHZhciBlPXRoaXMuX3Rva2Vucy5wZWVrKCk7ISh0aGlzLl9mbGFncy5tb2RlIT09bXx8dGhpcy5fZmxhZ3MuaWZfYmxvY2smJmgoZSxcImVsc2VcIil8fHRoaXMuX2ZsYWdzLmRvX2Jsb2NrKTspdGhpcy5yZXN0b3JlX21vZGUoKTt0aGlzLl9mbGFncy5pbXBvcnRfYmxvY2smJih0aGlzLl9mbGFncy5pbXBvcnRfYmxvY2s9ITEpLHRoaXMucHJpbnRfdG9rZW4odCl9LGoucHJvdG90eXBlLmhhbmRsZV9zdHJpbmc9ZnVuY3Rpb24odCl7dGhpcy5zdGFydF9vZl9zdGF0ZW1lbnQodCk/dGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj0hMDoodGhpcy5oYW5kbGVfd2hpdGVzcGFjZV9hbmRfY29tbWVudHModCksdGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlPT09Yy5SRVNFUlZFRHx8dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlPT09Yy5XT1JEfHx0aGlzLl9mbGFncy5pbmxpbmVfZnJhbWU/dGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj0hMDp0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnR5cGU9PT1jLkNPTU1BfHx0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnR5cGU9PT1jLlNUQVJUX0VYUFJ8fHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udHlwZT09PWMuRVFVQUxTfHx0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnR5cGU9PT1jLk9QRVJBVE9SP3RoaXMuc3RhcnRfb2Zfb2JqZWN0X3Byb3BlcnR5KCl8fHRoaXMuYWxsb3dfd3JhcF9vcl9wcmVzZXJ2ZWRfbmV3bGluZSh0KTp0aGlzLnByaW50X25ld2xpbmUoKSksdGhpcy5wcmludF90b2tlbih0KX0sai5wcm90b3R5cGUuaGFuZGxlX2VxdWFscz1mdW5jdGlvbih0KXt0aGlzLnN0YXJ0X29mX3N0YXRlbWVudCh0KXx8dGhpcy5oYW5kbGVfd2hpdGVzcGFjZV9hbmRfY29tbWVudHModCksdGhpcy5fZmxhZ3MuZGVjbGFyYXRpb25fc3RhdGVtZW50JiYodGhpcy5fZmxhZ3MuZGVjbGFyYXRpb25fYXNzaWdubWVudD0hMCksdGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj0hMCx0aGlzLnByaW50X3Rva2VuKHQpLHRoaXMuX291dHB1dC5zcGFjZV9iZWZvcmVfdG9rZW49ITB9LGoucHJvdG90eXBlLmhhbmRsZV9jb21tYT1mdW5jdGlvbih0KXt0aGlzLmhhbmRsZV93aGl0ZXNwYWNlX2FuZF9jb21tZW50cyh0LCEwKSx0aGlzLnByaW50X3Rva2VuKHQpLHRoaXMuX291dHB1dC5zcGFjZV9iZWZvcmVfdG9rZW49ITAsdGhpcy5fZmxhZ3MuZGVjbGFyYXRpb25fc3RhdGVtZW50PyhFKHRoaXMuX2ZsYWdzLnBhcmVudC5tb2RlKSYmKHRoaXMuX2ZsYWdzLmRlY2xhcmF0aW9uX2Fzc2lnbm1lbnQ9ITEpLHRoaXMuX2ZsYWdzLmRlY2xhcmF0aW9uX2Fzc2lnbm1lbnQ/KHRoaXMuX2ZsYWdzLmRlY2xhcmF0aW9uX2Fzc2lnbm1lbnQ9ITEsdGhpcy5wcmludF9uZXdsaW5lKCExLCEwKSk6dGhpcy5fb3B0aW9ucy5jb21tYV9maXJzdCYmdGhpcy5hbGxvd193cmFwX29yX3ByZXNlcnZlZF9uZXdsaW5lKHQpKTp0aGlzLl9mbGFncy5tb2RlPT09Ynx8dGhpcy5fZmxhZ3MubW9kZT09PW0mJnRoaXMuX2ZsYWdzLnBhcmVudC5tb2RlPT09Yj8odGhpcy5fZmxhZ3MubW9kZT09PW0mJnRoaXMucmVzdG9yZV9tb2RlKCksdGhpcy5fZmxhZ3MuaW5saW5lX2ZyYW1lfHx0aGlzLnByaW50X25ld2xpbmUoKSk6dGhpcy5fb3B0aW9ucy5jb21tYV9maXJzdCYmdGhpcy5hbGxvd193cmFwX29yX3ByZXNlcnZlZF9uZXdsaW5lKHQpfSxqLnByb3RvdHlwZS5oYW5kbGVfb3BlcmF0b3I9ZnVuY3Rpb24odCl7dmFyIGU9XCIqXCI9PT10LnRleHQmJihwKHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4sW1wiZnVuY3Rpb25cIixcInlpZWxkXCJdKXx8Xyh0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnR5cGUsW2MuU1RBUlRfQkxPQ0ssYy5DT01NQSxjLkVORF9CTE9DSyxjLlNFTUlDT0xPTl0pKSxuPV8odC50ZXh0LFtcIi1cIixcIitcIl0pJiYoXyh0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnR5cGUsW2MuU1RBUlRfQkxPQ0ssYy5TVEFSVF9FWFBSLGMuRVFVQUxTLGMuT1BFUkFUT1JdKXx8Xyh0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnRleHQsdSl8fFwiLFwiPT09dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50ZXh0KTtpZih0aGlzLnN0YXJ0X29mX3N0YXRlbWVudCh0KSk7ZWxzZXt2YXIgaT0hZTt0aGlzLmhhbmRsZV93aGl0ZXNwYWNlX2FuZF9jb21tZW50cyh0LGkpfWlmKHAodGhpcy5fZmxhZ3MubGFzdF90b2tlbixkKSlyZXR1cm4gdGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj0hMCx2b2lkIHRoaXMucHJpbnRfdG9rZW4odCk7aWYoXCIqXCIhPT10LnRleHR8fHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udHlwZSE9PWMuRE9UKWlmKFwiOjpcIiE9PXQudGV4dCl7aWYodGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlPT09Yy5PUEVSQVRPUiYmXyh0aGlzLl9vcHRpb25zLm9wZXJhdG9yX3Bvc2l0aW9uLHYpJiZ0aGlzLmFsbG93X3dyYXBfb3JfcHJlc2VydmVkX25ld2xpbmUodCksXCI6XCI9PT10LnRleHQmJnRoaXMuX2ZsYWdzLmluX2Nhc2UpcmV0dXJuIHRoaXMucHJpbnRfdG9rZW4odCksdGhpcy5fZmxhZ3MuaW5fY2FzZT0hMSx0aGlzLl9mbGFncy5jYXNlX2JvZHk9ITAsdm9pZCh0aGlzLl90b2tlbnMucGVlaygpLnR5cGUhPT1jLlNUQVJUX0JMT0NLPyh0aGlzLmluZGVudCgpLHRoaXMucHJpbnRfbmV3bGluZSgpKTp0aGlzLl9vdXRwdXQuc3BhY2VfYmVmb3JlX3Rva2VuPSEwKTt2YXIgcj0hMCxhPSEwLG89ITE7aWYoXCI6XCI9PT10LnRleHQ/MD09PXRoaXMuX2ZsYWdzLnRlcm5hcnlfZGVwdGg/cj0hMToodGhpcy5fZmxhZ3MudGVybmFyeV9kZXB0aC09MSxvPSEwKTpcIj9cIj09PXQudGV4dCYmKHRoaXMuX2ZsYWdzLnRlcm5hcnlfZGVwdGgrPTEpLCFuJiYhZSYmdGhpcy5fb3B0aW9ucy5wcmVzZXJ2ZV9uZXdsaW5lcyYmXyh0LnRleHQsbCkpe3ZhciBzPVwiOlwiPT09dC50ZXh0LGg9cyYmbyxiPXMmJiFvO3N3aXRjaCh0aGlzLl9vcHRpb25zLm9wZXJhdG9yX3Bvc2l0aW9uKXtjYXNlIGYuYmVmb3JlX25ld2xpbmU6cmV0dXJuIHRoaXMuX291dHB1dC5zcGFjZV9iZWZvcmVfdG9rZW49IWIsdGhpcy5wcmludF90b2tlbih0KSxzJiYhaHx8dGhpcy5hbGxvd193cmFwX29yX3ByZXNlcnZlZF9uZXdsaW5lKHQpLHZvaWQodGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj0hMCk7Y2FzZSBmLmFmdGVyX25ld2xpbmU6cmV0dXJuIHRoaXMuX291dHB1dC5zcGFjZV9iZWZvcmVfdG9rZW49ITAsIXN8fGg/dGhpcy5fdG9rZW5zLnBlZWsoKS5uZXdsaW5lcz90aGlzLnByaW50X25ld2xpbmUoITEsITApOnRoaXMuYWxsb3dfd3JhcF9vcl9wcmVzZXJ2ZWRfbmV3bGluZSh0KTp0aGlzLl9vdXRwdXQuc3BhY2VfYmVmb3JlX3Rva2VuPSExLHRoaXMucHJpbnRfdG9rZW4odCksdm9pZCh0aGlzLl9vdXRwdXQuc3BhY2VfYmVmb3JlX3Rva2VuPSEwKTtjYXNlIGYucHJlc2VydmVfbmV3bGluZTpyZXR1cm4gYnx8dGhpcy5hbGxvd193cmFwX29yX3ByZXNlcnZlZF9uZXdsaW5lKHQpLHI9ISh0aGlzLl9vdXRwdXQuanVzdF9hZGRlZF9uZXdsaW5lKCl8fGIpLHRoaXMuX291dHB1dC5zcGFjZV9iZWZvcmVfdG9rZW49cix0aGlzLnByaW50X3Rva2VuKHQpLHZvaWQodGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj0hMCl9fWlmKGUpe3RoaXMuYWxsb3dfd3JhcF9vcl9wcmVzZXJ2ZWRfbmV3bGluZSh0KSxyPSExO3ZhciB5PXRoaXMuX3Rva2Vucy5wZWVrKCk7YT15JiZfKHkudHlwZSxbYy5XT1JELGMuUkVTRVJWRURdKX1lbHNlXCIuLi5cIj09PXQudGV4dD8odGhpcy5hbGxvd193cmFwX29yX3ByZXNlcnZlZF9uZXdsaW5lKHQpLHI9dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlPT09Yy5TVEFSVF9CTE9DSyxhPSExKTooXyh0LnRleHQsW1wiLS1cIixcIisrXCIsXCIhXCIsXCJ+XCJdKXx8bikmJih0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnR5cGUhPT1jLkNPTU1BJiZ0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnR5cGUhPT1jLlNUQVJUX0VYUFJ8fHRoaXMuYWxsb3dfd3JhcF9vcl9wcmVzZXJ2ZWRfbmV3bGluZSh0KSxyPSExLGE9ITEsIXQubmV3bGluZXN8fFwiLS1cIiE9PXQudGV4dCYmXCIrK1wiIT09dC50ZXh0fHx0aGlzLnByaW50X25ld2xpbmUoITEsITApLFwiO1wiPT09dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50ZXh0JiZFKHRoaXMuX2ZsYWdzLm1vZGUpJiYocj0hMCksdGhpcy5fZmxhZ3MubGFzdF90b2tlbi50eXBlPT09Yy5SRVNFUlZFRD9yPSEwOnRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udHlwZT09PWMuRU5EX0VYUFI/cj0hKFwiXVwiPT09dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50ZXh0JiYoXCItLVwiPT09dC50ZXh0fHxcIisrXCI9PT10LnRleHQpKTp0aGlzLl9mbGFncy5sYXN0X3Rva2VuLnR5cGU9PT1jLk9QRVJBVE9SJiYocj1fKHQudGV4dCxbXCItLVwiLFwiLVwiLFwiKytcIixcIitcIl0pJiZfKHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udGV4dCxbXCItLVwiLFwiLVwiLFwiKytcIixcIitcIl0pLF8odC50ZXh0LFtcIitcIixcIi1cIl0pJiZfKHRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udGV4dCxbXCItLVwiLFwiKytcIl0pJiYoYT0hMCkpLCh0aGlzLl9mbGFncy5tb2RlIT09Z3x8dGhpcy5fZmxhZ3MuaW5saW5lX2ZyYW1lKSYmdGhpcy5fZmxhZ3MubW9kZSE9PW18fFwie1wiIT09dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50ZXh0JiZcIjtcIiE9PXRoaXMuX2ZsYWdzLmxhc3RfdG9rZW4udGV4dHx8dGhpcy5wcmludF9uZXdsaW5lKCkpO3RoaXMuX291dHB1dC5zcGFjZV9iZWZvcmVfdG9rZW49dGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbnx8cix0aGlzLnByaW50X3Rva2VuKHQpLHRoaXMuX291dHB1dC5zcGFjZV9iZWZvcmVfdG9rZW49YX1lbHNlIHRoaXMucHJpbnRfdG9rZW4odCk7ZWxzZSB0aGlzLnByaW50X3Rva2VuKHQpfSxqLnByb3RvdHlwZS5oYW5kbGVfYmxvY2tfY29tbWVudD1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLl9vdXRwdXQucmF3Pyh0aGlzLl9vdXRwdXQuYWRkX3Jhd190b2tlbih0KSx2b2lkKHQuZGlyZWN0aXZlcyYmXCJlbmRcIj09PXQuZGlyZWN0aXZlcy5wcmVzZXJ2ZSYmKHRoaXMuX291dHB1dC5yYXc9dGhpcy5fb3B0aW9ucy50ZXN0X291dHB1dF9yYXcpKSk6dC5kaXJlY3RpdmVzPyh0aGlzLnByaW50X25ld2xpbmUoITEsZSksdGhpcy5wcmludF90b2tlbih0KSxcInN0YXJ0XCI9PT10LmRpcmVjdGl2ZXMucHJlc2VydmUmJih0aGlzLl9vdXRwdXQucmF3PSEwKSx2b2lkIHRoaXMucHJpbnRfbmV3bGluZSghMSwhMCkpOmEubmV3bGluZS50ZXN0KHQudGV4dCl8fHQubmV3bGluZXM/dm9pZCB0aGlzLnByaW50X2Jsb2NrX2NvbW1tZW50KHQsZSk6KHRoaXMuX291dHB1dC5zcGFjZV9iZWZvcmVfdG9rZW49ITAsdGhpcy5wcmludF90b2tlbih0KSx2b2lkKHRoaXMuX291dHB1dC5zcGFjZV9iZWZvcmVfdG9rZW49ITApKX0sai5wcm90b3R5cGUucHJpbnRfYmxvY2tfY29tbW1lbnQ9ZnVuY3Rpb24odCxlKXt2YXIgbixpPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxuPSh0PXQucmVwbGFjZShhLmFsbExpbmVCcmVha3MsXCJcXG5cIikpLmluZGV4T2YoXCJcXG5cIik7LTEhPT1uOyllLnB1c2godC5zdWJzdHJpbmcoMCxuKSksbj0odD10LnN1YnN0cmluZyhuKzEpKS5pbmRleE9mKFwiXFxuXCIpO3JldHVybiB0Lmxlbmd0aCYmZS5wdXNoKHQpLGV9KHQudGV4dCkscj0hMSxvPSExLHM9dC53aGl0ZXNwYWNlX2JlZm9yZSx1PXMubGVuZ3RoO2lmKHRoaXMucHJpbnRfbmV3bGluZSghMSxlKSx0aGlzLnByaW50X3Rva2VuX2xpbmVfaW5kZW50YXRpb24odCksdGhpcy5fb3V0cHV0LmFkZF90b2tlbihpWzBdKSx0aGlzLnByaW50X25ld2xpbmUoITEsZSksaS5sZW5ndGg+MSl7Zm9yKHI9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKylpZih0W25dLnRyaW0oKS5jaGFyQXQoMCkhPT1lKXJldHVybiExO3JldHVybiEwfShpPWkuc2xpY2UoMSksXCIqXCIpLG89ZnVuY3Rpb24odCxlKXtmb3IodmFyIG4saT0wLHI9dC5sZW5ndGg7aTxyO2krKylpZigobj10W2ldKSYmMCE9PW4uaW5kZXhPZihlKSlyZXR1cm4hMTtyZXR1cm4hMH0oaSxzKSxyJiYodGhpcy5fZmxhZ3MuYWxpZ25tZW50PTEpLG49MDtuPGkubGVuZ3RoO24rKylyPyh0aGlzLnByaW50X3Rva2VuX2xpbmVfaW5kZW50YXRpb24odCksdGhpcy5fb3V0cHV0LmFkZF90b2tlbihpW25dLnJlcGxhY2UoL15cXHMrL2csXCJcIikpKTpvJiZpW25dPyh0aGlzLnByaW50X3Rva2VuX2xpbmVfaW5kZW50YXRpb24odCksdGhpcy5fb3V0cHV0LmFkZF90b2tlbihpW25dLnN1YnN0cmluZyh1KSkpOih0aGlzLl9vdXRwdXQuY3VycmVudF9saW5lLnNldF9pbmRlbnQoLTEpLHRoaXMuX291dHB1dC5hZGRfdG9rZW4oaVtuXSkpLHRoaXMucHJpbnRfbmV3bGluZSghMSxlKTt0aGlzLl9mbGFncy5hbGlnbm1lbnQ9MH19LGoucHJvdG90eXBlLmhhbmRsZV9jb21tZW50PWZ1bmN0aW9uKHQsZSl7dC5uZXdsaW5lcz90aGlzLnByaW50X25ld2xpbmUoITEsZSk6dGhpcy5fb3V0cHV0LnRyaW0oITApLHRoaXMuX291dHB1dC5zcGFjZV9iZWZvcmVfdG9rZW49ITAsdGhpcy5wcmludF90b2tlbih0KSx0aGlzLnByaW50X25ld2xpbmUoITEsZSl9LGoucHJvdG90eXBlLmhhbmRsZV9kb3Q9ZnVuY3Rpb24odCl7dGhpcy5zdGFydF9vZl9zdGF0ZW1lbnQodCl8fHRoaXMuaGFuZGxlX3doaXRlc3BhY2VfYW5kX2NvbW1lbnRzKHQsITApLHAodGhpcy5fZmxhZ3MubGFzdF90b2tlbixkKT90aGlzLl9vdXRwdXQuc3BhY2VfYmVmb3JlX3Rva2VuPSExOnRoaXMuYWxsb3dfd3JhcF9vcl9wcmVzZXJ2ZWRfbmV3bGluZSh0LFwiKVwiPT09dGhpcy5fZmxhZ3MubGFzdF90b2tlbi50ZXh0JiZ0aGlzLl9vcHRpb25zLmJyZWFrX2NoYWluZWRfbWV0aG9kcyksdGhpcy5fb3B0aW9ucy51bmluZGVudF9jaGFpbmVkX21ldGhvZHMmJnRoaXMuX291dHB1dC5qdXN0X2FkZGVkX25ld2xpbmUoKSYmdGhpcy5kZWluZGVudCgpLHRoaXMucHJpbnRfdG9rZW4odCl9LGoucHJvdG90eXBlLmhhbmRsZV91bmtub3duPWZ1bmN0aW9uKHQsZSl7dGhpcy5wcmludF90b2tlbih0KSxcIlxcblwiPT09dC50ZXh0W3QudGV4dC5sZW5ndGgtMV0mJnRoaXMucHJpbnRfbmV3bGluZSghMSxlKX0sai5wcm90b3R5cGUuaGFuZGxlX2VvZj1mdW5jdGlvbih0KXtmb3IoO3RoaXMuX2ZsYWdzLm1vZGU9PT1tOyl0aGlzLnJlc3RvcmVfbW9kZSgpO3RoaXMuaGFuZGxlX3doaXRlc3BhY2VfYW5kX2NvbW1lbnRzKHQpfSx0LmV4cG9ydHMuQmVhdXRpZmllcj1qfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaSh0KXt0aGlzLl9fcGFyZW50PXQsdGhpcy5fX2NoYXJhY3Rlcl9jb3VudD0wLHRoaXMuX19pbmRlbnRfY291bnQ9LTEsdGhpcy5fX2FsaWdubWVudF9jb3VudD0wLHRoaXMuX193cmFwX3BvaW50X2luZGV4PTAsdGhpcy5fX3dyYXBfcG9pbnRfY2hhcmFjdGVyX2NvdW50PTAsdGhpcy5fX3dyYXBfcG9pbnRfaW5kZW50X2NvdW50PS0xLHRoaXMuX193cmFwX3BvaW50X2FsaWdubWVudF9jb3VudD0wLHRoaXMuX19pdGVtcz1bXX1mdW5jdGlvbiByKHQsZSl7dGhpcy5fX2NhY2hlPVtcIlwiXSx0aGlzLl9faW5kZW50X3NpemU9dC5pbmRlbnRfc2l6ZSx0aGlzLl9faW5kZW50X3N0cmluZz10LmluZGVudF9jaGFyLHQuaW5kZW50X3dpdGhfdGFic3x8KHRoaXMuX19pbmRlbnRfc3RyaW5nPW5ldyBBcnJheSh0LmluZGVudF9zaXplKzEpLmpvaW4odC5pbmRlbnRfY2hhcikpLGU9ZXx8XCJcIix0LmluZGVudF9sZXZlbD4wJiYoZT1uZXcgQXJyYXkodC5pbmRlbnRfbGV2ZWwrMSkuam9pbih0aGlzLl9faW5kZW50X3N0cmluZykpLHRoaXMuX19iYXNlX3N0cmluZz1lLHRoaXMuX19iYXNlX3N0cmluZ19sZW5ndGg9ZS5sZW5ndGh9ZnVuY3Rpb24gYSh0LGUpe3RoaXMuX19pbmRlbnRfY2FjaGU9bmV3IHIodCxlKSx0aGlzLnJhdz0hMSx0aGlzLl9lbmRfd2l0aF9uZXdsaW5lPXQuZW5kX3dpdGhfbmV3bGluZSx0aGlzLmluZGVudF9zaXplPXQuaW5kZW50X3NpemUsdGhpcy53cmFwX2xpbmVfbGVuZ3RoPXQud3JhcF9saW5lX2xlbmd0aCx0aGlzLmluZGVudF9lbXB0eV9saW5lcz10LmluZGVudF9lbXB0eV9saW5lcyx0aGlzLl9fbGluZXM9W10sdGhpcy5wcmV2aW91c19saW5lPW51bGwsdGhpcy5jdXJyZW50X2xpbmU9bnVsbCx0aGlzLm5leHRfbGluZT1uZXcgaSh0aGlzKSx0aGlzLnNwYWNlX2JlZm9yZV90b2tlbj0hMSx0aGlzLm5vbl9icmVha2luZ19zcGFjZT0hMSx0aGlzLnByZXZpb3VzX3Rva2VuX3dyYXBwZWQ9ITEsdGhpcy5fX2FkZF9vdXRwdXRsaW5lKCl9aS5wcm90b3R5cGUuY2xvbmVfZW1wdHk9ZnVuY3Rpb24oKXt2YXIgdD1uZXcgaSh0aGlzLl9fcGFyZW50KTtyZXR1cm4gdC5zZXRfaW5kZW50KHRoaXMuX19pbmRlbnRfY291bnQsdGhpcy5fX2FsaWdubWVudF9jb3VudCksdH0saS5wcm90b3R5cGUuaXRlbT1mdW5jdGlvbih0KXtyZXR1cm4gdDwwP3RoaXMuX19pdGVtc1t0aGlzLl9faXRlbXMubGVuZ3RoK3RdOnRoaXMuX19pdGVtc1t0XX0saS5wcm90b3R5cGUuaGFzX21hdGNoPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLl9faXRlbXMubGVuZ3RoLTE7ZT49MDtlLS0paWYodGhpcy5fX2l0ZW1zW2VdLm1hdGNoKHQpKXJldHVybiEwO3JldHVybiExfSxpLnByb3RvdHlwZS5zZXRfaW5kZW50PWZ1bmN0aW9uKHQsZSl7dGhpcy5pc19lbXB0eSgpJiYodGhpcy5fX2luZGVudF9jb3VudD10fHwwLHRoaXMuX19hbGlnbm1lbnRfY291bnQ9ZXx8MCx0aGlzLl9fY2hhcmFjdGVyX2NvdW50PXRoaXMuX19wYXJlbnQuZ2V0X2luZGVudF9zaXplKHRoaXMuX19pbmRlbnRfY291bnQsdGhpcy5fX2FsaWdubWVudF9jb3VudCkpfSxpLnByb3RvdHlwZS5fc2V0X3dyYXBfcG9pbnQ9ZnVuY3Rpb24oKXt0aGlzLl9fcGFyZW50LndyYXBfbGluZV9sZW5ndGgmJih0aGlzLl9fd3JhcF9wb2ludF9pbmRleD10aGlzLl9faXRlbXMubGVuZ3RoLHRoaXMuX193cmFwX3BvaW50X2NoYXJhY3Rlcl9jb3VudD10aGlzLl9fY2hhcmFjdGVyX2NvdW50LHRoaXMuX193cmFwX3BvaW50X2luZGVudF9jb3VudD10aGlzLl9fcGFyZW50Lm5leHRfbGluZS5fX2luZGVudF9jb3VudCx0aGlzLl9fd3JhcF9wb2ludF9hbGlnbm1lbnRfY291bnQ9dGhpcy5fX3BhcmVudC5uZXh0X2xpbmUuX19hbGlnbm1lbnRfY291bnQpfSxpLnByb3RvdHlwZS5fc2hvdWxkX3dyYXA9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fX3dyYXBfcG9pbnRfaW5kZXgmJnRoaXMuX19jaGFyYWN0ZXJfY291bnQ+dGhpcy5fX3BhcmVudC53cmFwX2xpbmVfbGVuZ3RoJiZ0aGlzLl9fd3JhcF9wb2ludF9jaGFyYWN0ZXJfY291bnQ+dGhpcy5fX3BhcmVudC5uZXh0X2xpbmUuX19jaGFyYWN0ZXJfY291bnR9LGkucHJvdG90eXBlLl9hbGxvd193cmFwPWZ1bmN0aW9uKCl7aWYodGhpcy5fc2hvdWxkX3dyYXAoKSl7dGhpcy5fX3BhcmVudC5hZGRfbmV3X2xpbmUoKTt2YXIgdD10aGlzLl9fcGFyZW50LmN1cnJlbnRfbGluZTtyZXR1cm4gdC5zZXRfaW5kZW50KHRoaXMuX193cmFwX3BvaW50X2luZGVudF9jb3VudCx0aGlzLl9fd3JhcF9wb2ludF9hbGlnbm1lbnRfY291bnQpLHQuX19pdGVtcz10aGlzLl9faXRlbXMuc2xpY2UodGhpcy5fX3dyYXBfcG9pbnRfaW5kZXgpLHRoaXMuX19pdGVtcz10aGlzLl9faXRlbXMuc2xpY2UoMCx0aGlzLl9fd3JhcF9wb2ludF9pbmRleCksdC5fX2NoYXJhY3Rlcl9jb3VudCs9dGhpcy5fX2NoYXJhY3Rlcl9jb3VudC10aGlzLl9fd3JhcF9wb2ludF9jaGFyYWN0ZXJfY291bnQsdGhpcy5fX2NoYXJhY3Rlcl9jb3VudD10aGlzLl9fd3JhcF9wb2ludF9jaGFyYWN0ZXJfY291bnQsXCIgXCI9PT10Ll9faXRlbXNbMF0mJih0Ll9faXRlbXMuc3BsaWNlKDAsMSksdC5fX2NoYXJhY3Rlcl9jb3VudC09MSksITB9cmV0dXJuITF9LGkucHJvdG90eXBlLmlzX2VtcHR5PWZ1bmN0aW9uKCl7cmV0dXJuIDA9PT10aGlzLl9faXRlbXMubGVuZ3RofSxpLnByb3RvdHlwZS5sYXN0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXNfZW1wdHkoKT9udWxsOnRoaXMuX19pdGVtc1t0aGlzLl9faXRlbXMubGVuZ3RoLTFdfSxpLnByb3RvdHlwZS5wdXNoPWZ1bmN0aW9uKHQpe3RoaXMuX19pdGVtcy5wdXNoKHQpO3ZhciBlPXQubGFzdEluZGV4T2YoXCJcXG5cIik7LTEhPT1lP3RoaXMuX19jaGFyYWN0ZXJfY291bnQ9dC5sZW5ndGgtZTp0aGlzLl9fY2hhcmFjdGVyX2NvdW50Kz10Lmxlbmd0aH0saS5wcm90b3R5cGUucG9wPWZ1bmN0aW9uKCl7dmFyIHQ9bnVsbDtyZXR1cm4gdGhpcy5pc19lbXB0eSgpfHwodD10aGlzLl9faXRlbXMucG9wKCksdGhpcy5fX2NoYXJhY3Rlcl9jb3VudC09dC5sZW5ndGgpLHR9LGkucHJvdG90eXBlLl9yZW1vdmVfaW5kZW50PWZ1bmN0aW9uKCl7dGhpcy5fX2luZGVudF9jb3VudD4wJiYodGhpcy5fX2luZGVudF9jb3VudC09MSx0aGlzLl9fY2hhcmFjdGVyX2NvdW50LT10aGlzLl9fcGFyZW50LmluZGVudF9zaXplKX0saS5wcm90b3R5cGUuX3JlbW92ZV93cmFwX2luZGVudD1mdW5jdGlvbigpe3RoaXMuX193cmFwX3BvaW50X2luZGVudF9jb3VudD4wJiYodGhpcy5fX3dyYXBfcG9pbnRfaW5kZW50X2NvdW50LT0xKX0saS5wcm90b3R5cGUudHJpbT1mdW5jdGlvbigpe2Zvcig7XCIgXCI9PT10aGlzLmxhc3QoKTspdGhpcy5fX2l0ZW1zLnBvcCgpLHRoaXMuX19jaGFyYWN0ZXJfY291bnQtPTF9LGkucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7dmFyIHQ9XCJcIjtyZXR1cm4gdGhpcy5pc19lbXB0eSgpP3RoaXMuX19wYXJlbnQuaW5kZW50X2VtcHR5X2xpbmVzJiYodD10aGlzLl9fcGFyZW50LmdldF9pbmRlbnRfc3RyaW5nKHRoaXMuX19pbmRlbnRfY291bnQpKToodD10aGlzLl9fcGFyZW50LmdldF9pbmRlbnRfc3RyaW5nKHRoaXMuX19pbmRlbnRfY291bnQsdGhpcy5fX2FsaWdubWVudF9jb3VudCksdCs9dGhpcy5fX2l0ZW1zLmpvaW4oXCJcIikpLHR9LHIucHJvdG90eXBlLmdldF9pbmRlbnRfc2l6ZT1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuX19iYXNlX3N0cmluZ19sZW5ndGg7cmV0dXJuIGU9ZXx8MCx0PDAmJihuPTApLG4rPXQqdGhpcy5fX2luZGVudF9zaXplLG4rPWV9LHIucHJvdG90eXBlLmdldF9pbmRlbnRfc3RyaW5nPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5fX2Jhc2Vfc3RyaW5nO3JldHVybiBlPWV8fDAsdDwwJiYodD0wLG49XCJcIiksZSs9dCp0aGlzLl9faW5kZW50X3NpemUsdGhpcy5fX2Vuc3VyZV9jYWNoZShlKSxuKz10aGlzLl9fY2FjaGVbZV19LHIucHJvdG90eXBlLl9fZW5zdXJlX2NhY2hlPWZ1bmN0aW9uKHQpe2Zvcig7dD49dGhpcy5fX2NhY2hlLmxlbmd0aDspdGhpcy5fX2FkZF9jb2x1bW4oKX0sci5wcm90b3R5cGUuX19hZGRfY29sdW1uPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fX2NhY2hlLmxlbmd0aCxlPTAsbj1cIlwiO3RoaXMuX19pbmRlbnRfc2l6ZSYmdD49dGhpcy5fX2luZGVudF9zaXplJiYodC09KGU9TWF0aC5mbG9vcih0L3RoaXMuX19pbmRlbnRfc2l6ZSkpKnRoaXMuX19pbmRlbnRfc2l6ZSxuPW5ldyBBcnJheShlKzEpLmpvaW4odGhpcy5fX2luZGVudF9zdHJpbmcpKSx0JiYobis9bmV3IEFycmF5KHQrMSkuam9pbihcIiBcIikpLHRoaXMuX19jYWNoZS5wdXNoKG4pfSxhLnByb3RvdHlwZS5fX2FkZF9vdXRwdXRsaW5lPWZ1bmN0aW9uKCl7dGhpcy5wcmV2aW91c19saW5lPXRoaXMuY3VycmVudF9saW5lLHRoaXMuY3VycmVudF9saW5lPXRoaXMubmV4dF9saW5lLmNsb25lX2VtcHR5KCksdGhpcy5fX2xpbmVzLnB1c2godGhpcy5jdXJyZW50X2xpbmUpfSxhLnByb3RvdHlwZS5nZXRfbGluZV9udW1iZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fX2xpbmVzLmxlbmd0aH0sYS5wcm90b3R5cGUuZ2V0X2luZGVudF9zdHJpbmc9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5fX2luZGVudF9jYWNoZS5nZXRfaW5kZW50X3N0cmluZyh0LGUpfSxhLnByb3RvdHlwZS5nZXRfaW5kZW50X3NpemU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5fX2luZGVudF9jYWNoZS5nZXRfaW5kZW50X3NpemUodCxlKX0sYS5wcm90b3R5cGUuaXNfZW1wdHk9ZnVuY3Rpb24oKXtyZXR1cm4hdGhpcy5wcmV2aW91c19saW5lJiZ0aGlzLmN1cnJlbnRfbGluZS5pc19lbXB0eSgpfSxhLnByb3RvdHlwZS5hZGRfbmV3X2xpbmU9ZnVuY3Rpb24odCl7cmV0dXJuISh0aGlzLmlzX2VtcHR5KCl8fCF0JiZ0aGlzLmp1c3RfYWRkZWRfbmV3bGluZSgpfHwodGhpcy5yYXd8fHRoaXMuX19hZGRfb3V0cHV0bGluZSgpLDApKX0sYS5wcm90b3R5cGUuZ2V0X2NvZGU9ZnVuY3Rpb24odCl7dGhpcy50cmltKCEwKTt2YXIgZT10aGlzLmN1cnJlbnRfbGluZS5wb3AoKTtlJiYoXCJcXG5cIj09PWVbZS5sZW5ndGgtMV0mJihlPWUucmVwbGFjZSgvXFxuKyQvZyxcIlwiKSksdGhpcy5jdXJyZW50X2xpbmUucHVzaChlKSksdGhpcy5fZW5kX3dpdGhfbmV3bGluZSYmdGhpcy5fX2FkZF9vdXRwdXRsaW5lKCk7dmFyIG49dGhpcy5fX2xpbmVzLmpvaW4oXCJcXG5cIik7cmV0dXJuXCJcXG5cIiE9PXQmJihuPW4ucmVwbGFjZSgvW1xcbl0vZyx0KSksbn0sYS5wcm90b3R5cGUuc2V0X3dyYXBfcG9pbnQ9ZnVuY3Rpb24oKXt0aGlzLmN1cnJlbnRfbGluZS5fc2V0X3dyYXBfcG9pbnQoKX0sYS5wcm90b3R5cGUuc2V0X2luZGVudD1mdW5jdGlvbih0LGUpe3JldHVybiB0PXR8fDAsZT1lfHwwLHRoaXMubmV4dF9saW5lLnNldF9pbmRlbnQodCxlKSx0aGlzLl9fbGluZXMubGVuZ3RoPjE/KHRoaXMuY3VycmVudF9saW5lLnNldF9pbmRlbnQodCxlKSwhMCk6KHRoaXMuY3VycmVudF9saW5lLnNldF9pbmRlbnQoKSwhMSl9LGEucHJvdG90eXBlLmFkZF9yYXdfdG9rZW49ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTA7ZTx0Lm5ld2xpbmVzO2UrKyl0aGlzLl9fYWRkX291dHB1dGxpbmUoKTt0aGlzLmN1cnJlbnRfbGluZS5zZXRfaW5kZW50KC0xKSx0aGlzLmN1cnJlbnRfbGluZS5wdXNoKHQud2hpdGVzcGFjZV9iZWZvcmUpLHRoaXMuY3VycmVudF9saW5lLnB1c2godC50ZXh0KSx0aGlzLnNwYWNlX2JlZm9yZV90b2tlbj0hMSx0aGlzLm5vbl9icmVha2luZ19zcGFjZT0hMSx0aGlzLnByZXZpb3VzX3Rva2VuX3dyYXBwZWQ9ITF9LGEucHJvdG90eXBlLmFkZF90b2tlbj1mdW5jdGlvbih0KXt0aGlzLl9fYWRkX3NwYWNlX2JlZm9yZV90b2tlbigpLHRoaXMuY3VycmVudF9saW5lLnB1c2godCksdGhpcy5zcGFjZV9iZWZvcmVfdG9rZW49ITEsdGhpcy5ub25fYnJlYWtpbmdfc3BhY2U9ITEsdGhpcy5wcmV2aW91c190b2tlbl93cmFwcGVkPXRoaXMuY3VycmVudF9saW5lLl9hbGxvd193cmFwKCl9LGEucHJvdG90eXBlLl9fYWRkX3NwYWNlX2JlZm9yZV90b2tlbj1mdW5jdGlvbigpe3RoaXMuc3BhY2VfYmVmb3JlX3Rva2VuJiYhdGhpcy5qdXN0X2FkZGVkX25ld2xpbmUoKSYmKHRoaXMubm9uX2JyZWFraW5nX3NwYWNlfHx0aGlzLnNldF93cmFwX3BvaW50KCksdGhpcy5jdXJyZW50X2xpbmUucHVzaChcIiBcIikpfSxhLnByb3RvdHlwZS5yZW1vdmVfaW5kZW50PWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLl9fbGluZXMubGVuZ3RoO3Q8ZTspdGhpcy5fX2xpbmVzW3RdLl9yZW1vdmVfaW5kZW50KCksdCsrO3RoaXMuY3VycmVudF9saW5lLl9yZW1vdmVfd3JhcF9pbmRlbnQoKX0sYS5wcm90b3R5cGUudHJpbT1mdW5jdGlvbih0KXtmb3IodD12b2lkIDAhPT10JiZ0LHRoaXMuY3VycmVudF9saW5lLnRyaW0oKTt0JiZ0aGlzLl9fbGluZXMubGVuZ3RoPjEmJnRoaXMuY3VycmVudF9saW5lLmlzX2VtcHR5KCk7KXRoaXMuX19saW5lcy5wb3AoKSx0aGlzLmN1cnJlbnRfbGluZT10aGlzLl9fbGluZXNbdGhpcy5fX2xpbmVzLmxlbmd0aC0xXSx0aGlzLmN1cnJlbnRfbGluZS50cmltKCk7dGhpcy5wcmV2aW91c19saW5lPXRoaXMuX19saW5lcy5sZW5ndGg+MT90aGlzLl9fbGluZXNbdGhpcy5fX2xpbmVzLmxlbmd0aC0yXTpudWxsfSxhLnByb3RvdHlwZS5qdXN0X2FkZGVkX25ld2xpbmU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jdXJyZW50X2xpbmUuaXNfZW1wdHkoKX0sYS5wcm90b3R5cGUuanVzdF9hZGRlZF9ibGFua2xpbmU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pc19lbXB0eSgpfHx0aGlzLmN1cnJlbnRfbGluZS5pc19lbXB0eSgpJiZ0aGlzLnByZXZpb3VzX2xpbmUuaXNfZW1wdHkoKX0sYS5wcm90b3R5cGUuZW5zdXJlX2VtcHR5X2xpbmVfYWJvdmU9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49dGhpcy5fX2xpbmVzLmxlbmd0aC0yO24+PTA7KXt2YXIgcj10aGlzLl9fbGluZXNbbl07aWYoci5pc19lbXB0eSgpKWJyZWFrO2lmKDAhPT1yLml0ZW0oMCkuaW5kZXhPZih0KSYmci5pdGVtKC0xKSE9PWUpe3RoaXMuX19saW5lcy5zcGxpY2UobisxLDAsbmV3IGkodGhpcykpLHRoaXMucHJldmlvdXNfbGluZT10aGlzLl9fbGluZXNbdGhpcy5fX2xpbmVzLmxlbmd0aC0yXTticmVha31uLS19fSx0LmV4cG9ydHMuT3V0cHV0PWF9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt0LmV4cG9ydHMuVG9rZW49ZnVuY3Rpb24odCxlLG4saSl7dGhpcy50eXBlPXQsdGhpcy50ZXh0PWUsdGhpcy5jb21tZW50c19iZWZvcmU9bnVsbCx0aGlzLm5ld2xpbmVzPW58fDAsdGhpcy53aGl0ZXNwYWNlX2JlZm9yZT1pfHxcIlwiLHRoaXMucGFyZW50PW51bGwsdGhpcy5uZXh0PW51bGwsdGhpcy5wcmV2aW91cz1udWxsLHRoaXMub3BlbmVkPW51bGwsdGhpcy5jbG9zZWQ9bnVsbCx0aGlzLmRpcmVjdGl2ZXM9bnVsbH19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1cIlxcXFx4YWFcXFxceGI1XFxcXHhiYVxcXFx4YzAtXFxcXHhkNlxcXFx4ZDgtXFxcXHhmNlxcXFx4ZjgtXFxcXHUwMmMxXFxcXHUwMmM2LVxcXFx1MDJkMVxcXFx1MDJlMC1cXFxcdTAyZTRcXFxcdTAyZWNcXFxcdTAyZWVcXFxcdTAzNzAtXFxcXHUwMzc0XFxcXHUwMzc2XFxcXHUwMzc3XFxcXHUwMzdhLVxcXFx1MDM3ZFxcXFx1MDM4NlxcXFx1MDM4OC1cXFxcdTAzOGFcXFxcdTAzOGNcXFxcdTAzOGUtXFxcXHUwM2ExXFxcXHUwM2EzLVxcXFx1MDNmNVxcXFx1MDNmNy1cXFxcdTA0ODFcXFxcdTA0OGEtXFxcXHUwNTI3XFxcXHUwNTMxLVxcXFx1MDU1NlxcXFx1MDU1OVxcXFx1MDU2MS1cXFxcdTA1ODdcXFxcdTA1ZDAtXFxcXHUwNWVhXFxcXHUwNWYwLVxcXFx1MDVmMlxcXFx1MDYyMC1cXFxcdTA2NGFcXFxcdTA2NmVcXFxcdTA2NmZcXFxcdTA2NzEtXFxcXHUwNmQzXFxcXHUwNmQ1XFxcXHUwNmU1XFxcXHUwNmU2XFxcXHUwNmVlXFxcXHUwNmVmXFxcXHUwNmZhLVxcXFx1MDZmY1xcXFx1MDZmZlxcXFx1MDcxMFxcXFx1MDcxMi1cXFxcdTA3MmZcXFxcdTA3NGQtXFxcXHUwN2E1XFxcXHUwN2IxXFxcXHUwN2NhLVxcXFx1MDdlYVxcXFx1MDdmNFxcXFx1MDdmNVxcXFx1MDdmYVxcXFx1MDgwMC1cXFxcdTA4MTVcXFxcdTA4MWFcXFxcdTA4MjRcXFxcdTA4MjhcXFxcdTA4NDAtXFxcXHUwODU4XFxcXHUwOGEwXFxcXHUwOGEyLVxcXFx1MDhhY1xcXFx1MDkwNC1cXFxcdTA5MzlcXFxcdTA5M2RcXFxcdTA5NTBcXFxcdTA5NTgtXFxcXHUwOTYxXFxcXHUwOTcxLVxcXFx1MDk3N1xcXFx1MDk3OS1cXFxcdTA5N2ZcXFxcdTA5ODUtXFxcXHUwOThjXFxcXHUwOThmXFxcXHUwOTkwXFxcXHUwOTkzLVxcXFx1MDlhOFxcXFx1MDlhYS1cXFxcdTA5YjBcXFxcdTA5YjJcXFxcdTA5YjYtXFxcXHUwOWI5XFxcXHUwOWJkXFxcXHUwOWNlXFxcXHUwOWRjXFxcXHUwOWRkXFxcXHUwOWRmLVxcXFx1MDllMVxcXFx1MDlmMFxcXFx1MDlmMVxcXFx1MGEwNS1cXFxcdTBhMGFcXFxcdTBhMGZcXFxcdTBhMTBcXFxcdTBhMTMtXFxcXHUwYTI4XFxcXHUwYTJhLVxcXFx1MGEzMFxcXFx1MGEzMlxcXFx1MGEzM1xcXFx1MGEzNVxcXFx1MGEzNlxcXFx1MGEzOFxcXFx1MGEzOVxcXFx1MGE1OS1cXFxcdTBhNWNcXFxcdTBhNWVcXFxcdTBhNzItXFxcXHUwYTc0XFxcXHUwYTg1LVxcXFx1MGE4ZFxcXFx1MGE4Zi1cXFxcdTBhOTFcXFxcdTBhOTMtXFxcXHUwYWE4XFxcXHUwYWFhLVxcXFx1MGFiMFxcXFx1MGFiMlxcXFx1MGFiM1xcXFx1MGFiNS1cXFxcdTBhYjlcXFxcdTBhYmRcXFxcdTBhZDBcXFxcdTBhZTBcXFxcdTBhZTFcXFxcdTBiMDUtXFxcXHUwYjBjXFxcXHUwYjBmXFxcXHUwYjEwXFxcXHUwYjEzLVxcXFx1MGIyOFxcXFx1MGIyYS1cXFxcdTBiMzBcXFxcdTBiMzJcXFxcdTBiMzNcXFxcdTBiMzUtXFxcXHUwYjM5XFxcXHUwYjNkXFxcXHUwYjVjXFxcXHUwYjVkXFxcXHUwYjVmLVxcXFx1MGI2MVxcXFx1MGI3MVxcXFx1MGI4M1xcXFx1MGI4NS1cXFxcdTBiOGFcXFxcdTBiOGUtXFxcXHUwYjkwXFxcXHUwYjkyLVxcXFx1MGI5NVxcXFx1MGI5OVxcXFx1MGI5YVxcXFx1MGI5Y1xcXFx1MGI5ZVxcXFx1MGI5ZlxcXFx1MGJhM1xcXFx1MGJhNFxcXFx1MGJhOC1cXFxcdTBiYWFcXFxcdTBiYWUtXFxcXHUwYmI5XFxcXHUwYmQwXFxcXHUwYzA1LVxcXFx1MGMwY1xcXFx1MGMwZS1cXFxcdTBjMTBcXFxcdTBjMTItXFxcXHUwYzI4XFxcXHUwYzJhLVxcXFx1MGMzM1xcXFx1MGMzNS1cXFxcdTBjMzlcXFxcdTBjM2RcXFxcdTBjNThcXFxcdTBjNTlcXFxcdTBjNjBcXFxcdTBjNjFcXFxcdTBjODUtXFxcXHUwYzhjXFxcXHUwYzhlLVxcXFx1MGM5MFxcXFx1MGM5Mi1cXFxcdTBjYThcXFxcdTBjYWEtXFxcXHUwY2IzXFxcXHUwY2I1LVxcXFx1MGNiOVxcXFx1MGNiZFxcXFx1MGNkZVxcXFx1MGNlMFxcXFx1MGNlMVxcXFx1MGNmMVxcXFx1MGNmMlxcXFx1MGQwNS1cXFxcdTBkMGNcXFxcdTBkMGUtXFxcXHUwZDEwXFxcXHUwZDEyLVxcXFx1MGQzYVxcXFx1MGQzZFxcXFx1MGQ0ZVxcXFx1MGQ2MFxcXFx1MGQ2MVxcXFx1MGQ3YS1cXFxcdTBkN2ZcXFxcdTBkODUtXFxcXHUwZDk2XFxcXHUwZDlhLVxcXFx1MGRiMVxcXFx1MGRiMy1cXFxcdTBkYmJcXFxcdTBkYmRcXFxcdTBkYzAtXFxcXHUwZGM2XFxcXHUwZTAxLVxcXFx1MGUzMFxcXFx1MGUzMlxcXFx1MGUzM1xcXFx1MGU0MC1cXFxcdTBlNDZcXFxcdTBlODFcXFxcdTBlODJcXFxcdTBlODRcXFxcdTBlODdcXFxcdTBlODhcXFxcdTBlOGFcXFxcdTBlOGRcXFxcdTBlOTQtXFxcXHUwZTk3XFxcXHUwZTk5LVxcXFx1MGU5ZlxcXFx1MGVhMS1cXFxcdTBlYTNcXFxcdTBlYTVcXFxcdTBlYTdcXFxcdTBlYWFcXFxcdTBlYWJcXFxcdTBlYWQtXFxcXHUwZWIwXFxcXHUwZWIyXFxcXHUwZWIzXFxcXHUwZWJkXFxcXHUwZWMwLVxcXFx1MGVjNFxcXFx1MGVjNlxcXFx1MGVkYy1cXFxcdTBlZGZcXFxcdTBmMDBcXFxcdTBmNDAtXFxcXHUwZjQ3XFxcXHUwZjQ5LVxcXFx1MGY2Y1xcXFx1MGY4OC1cXFxcdTBmOGNcXFxcdTEwMDAtXFxcXHUxMDJhXFxcXHUxMDNmXFxcXHUxMDUwLVxcXFx1MTA1NVxcXFx1MTA1YS1cXFxcdTEwNWRcXFxcdTEwNjFcXFxcdTEwNjVcXFxcdTEwNjZcXFxcdTEwNmUtXFxcXHUxMDcwXFxcXHUxMDc1LVxcXFx1MTA4MVxcXFx1MTA4ZVxcXFx1MTBhMC1cXFxcdTEwYzVcXFxcdTEwYzdcXFxcdTEwY2RcXFxcdTEwZDAtXFxcXHUxMGZhXFxcXHUxMGZjLVxcXFx1MTI0OFxcXFx1MTI0YS1cXFxcdTEyNGRcXFxcdTEyNTAtXFxcXHUxMjU2XFxcXHUxMjU4XFxcXHUxMjVhLVxcXFx1MTI1ZFxcXFx1MTI2MC1cXFxcdTEyODhcXFxcdTEyOGEtXFxcXHUxMjhkXFxcXHUxMjkwLVxcXFx1MTJiMFxcXFx1MTJiMi1cXFxcdTEyYjVcXFxcdTEyYjgtXFxcXHUxMmJlXFxcXHUxMmMwXFxcXHUxMmMyLVxcXFx1MTJjNVxcXFx1MTJjOC1cXFxcdTEyZDZcXFxcdTEyZDgtXFxcXHUxMzEwXFxcXHUxMzEyLVxcXFx1MTMxNVxcXFx1MTMxOC1cXFxcdTEzNWFcXFxcdTEzODAtXFxcXHUxMzhmXFxcXHUxM2EwLVxcXFx1MTNmNFxcXFx1MTQwMS1cXFxcdTE2NmNcXFxcdTE2NmYtXFxcXHUxNjdmXFxcXHUxNjgxLVxcXFx1MTY5YVxcXFx1MTZhMC1cXFxcdTE2ZWFcXFxcdTE2ZWUtXFxcXHUxNmYwXFxcXHUxNzAwLVxcXFx1MTcwY1xcXFx1MTcwZS1cXFxcdTE3MTFcXFxcdTE3MjAtXFxcXHUxNzMxXFxcXHUxNzQwLVxcXFx1MTc1MVxcXFx1MTc2MC1cXFxcdTE3NmNcXFxcdTE3NmUtXFxcXHUxNzcwXFxcXHUxNzgwLVxcXFx1MTdiM1xcXFx1MTdkN1xcXFx1MTdkY1xcXFx1MTgyMC1cXFxcdTE4NzdcXFxcdTE4ODAtXFxcXHUxOGE4XFxcXHUxOGFhXFxcXHUxOGIwLVxcXFx1MThmNVxcXFx1MTkwMC1cXFxcdTE5MWNcXFxcdTE5NTAtXFxcXHUxOTZkXFxcXHUxOTcwLVxcXFx1MTk3NFxcXFx1MTk4MC1cXFxcdTE5YWJcXFxcdTE5YzEtXFxcXHUxOWM3XFxcXHUxYTAwLVxcXFx1MWExNlxcXFx1MWEyMC1cXFxcdTFhNTRcXFxcdTFhYTdcXFxcdTFiMDUtXFxcXHUxYjMzXFxcXHUxYjQ1LVxcXFx1MWI0YlxcXFx1MWI4My1cXFxcdTFiYTBcXFxcdTFiYWVcXFxcdTFiYWZcXFxcdTFiYmEtXFxcXHUxYmU1XFxcXHUxYzAwLVxcXFx1MWMyM1xcXFx1MWM0ZC1cXFxcdTFjNGZcXFxcdTFjNWEtXFxcXHUxYzdkXFxcXHUxY2U5LVxcXFx1MWNlY1xcXFx1MWNlZS1cXFxcdTFjZjFcXFxcdTFjZjVcXFxcdTFjZjZcXFxcdTFkMDAtXFxcXHUxZGJmXFxcXHUxZTAwLVxcXFx1MWYxNVxcXFx1MWYxOC1cXFxcdTFmMWRcXFxcdTFmMjAtXFxcXHUxZjQ1XFxcXHUxZjQ4LVxcXFx1MWY0ZFxcXFx1MWY1MC1cXFxcdTFmNTdcXFxcdTFmNTlcXFxcdTFmNWJcXFxcdTFmNWRcXFxcdTFmNWYtXFxcXHUxZjdkXFxcXHUxZjgwLVxcXFx1MWZiNFxcXFx1MWZiNi1cXFxcdTFmYmNcXFxcdTFmYmVcXFxcdTFmYzItXFxcXHUxZmM0XFxcXHUxZmM2LVxcXFx1MWZjY1xcXFx1MWZkMC1cXFxcdTFmZDNcXFxcdTFmZDYtXFxcXHUxZmRiXFxcXHUxZmUwLVxcXFx1MWZlY1xcXFx1MWZmMi1cXFxcdTFmZjRcXFxcdTFmZjYtXFxcXHUxZmZjXFxcXHUyMDcxXFxcXHUyMDdmXFxcXHUyMDkwLVxcXFx1MjA5Y1xcXFx1MjEwMlxcXFx1MjEwN1xcXFx1MjEwYS1cXFxcdTIxMTNcXFxcdTIxMTVcXFxcdTIxMTktXFxcXHUyMTFkXFxcXHUyMTI0XFxcXHUyMTI2XFxcXHUyMTI4XFxcXHUyMTJhLVxcXFx1MjEyZFxcXFx1MjEyZi1cXFxcdTIxMzlcXFxcdTIxM2MtXFxcXHUyMTNmXFxcXHUyMTQ1LVxcXFx1MjE0OVxcXFx1MjE0ZVxcXFx1MjE2MC1cXFxcdTIxODhcXFxcdTJjMDAtXFxcXHUyYzJlXFxcXHUyYzMwLVxcXFx1MmM1ZVxcXFx1MmM2MC1cXFxcdTJjZTRcXFxcdTJjZWItXFxcXHUyY2VlXFxcXHUyY2YyXFxcXHUyY2YzXFxcXHUyZDAwLVxcXFx1MmQyNVxcXFx1MmQyN1xcXFx1MmQyZFxcXFx1MmQzMC1cXFxcdTJkNjdcXFxcdTJkNmZcXFxcdTJkODAtXFxcXHUyZDk2XFxcXHUyZGEwLVxcXFx1MmRhNlxcXFx1MmRhOC1cXFxcdTJkYWVcXFxcdTJkYjAtXFxcXHUyZGI2XFxcXHUyZGI4LVxcXFx1MmRiZVxcXFx1MmRjMC1cXFxcdTJkYzZcXFxcdTJkYzgtXFxcXHUyZGNlXFxcXHUyZGQwLVxcXFx1MmRkNlxcXFx1MmRkOC1cXFxcdTJkZGVcXFxcdTJlMmZcXFxcdTMwMDUtXFxcXHUzMDA3XFxcXHUzMDIxLVxcXFx1MzAyOVxcXFx1MzAzMS1cXFxcdTMwMzVcXFxcdTMwMzgtXFxcXHUzMDNjXFxcXHUzMDQxLVxcXFx1MzA5NlxcXFx1MzA5ZC1cXFxcdTMwOWZcXFxcdTMwYTEtXFxcXHUzMGZhXFxcXHUzMGZjLVxcXFx1MzBmZlxcXFx1MzEwNS1cXFxcdTMxMmRcXFxcdTMxMzEtXFxcXHUzMThlXFxcXHUzMWEwLVxcXFx1MzFiYVxcXFx1MzFmMC1cXFxcdTMxZmZcXFxcdTM0MDAtXFxcXHU0ZGI1XFxcXHU0ZTAwLVxcXFx1OWZjY1xcXFx1YTAwMC1cXFxcdWE0OGNcXFxcdWE0ZDAtXFxcXHVhNGZkXFxcXHVhNTAwLVxcXFx1YTYwY1xcXFx1YTYxMC1cXFxcdWE2MWZcXFxcdWE2MmFcXFxcdWE2MmJcXFxcdWE2NDAtXFxcXHVhNjZlXFxcXHVhNjdmLVxcXFx1YTY5N1xcXFx1YTZhMC1cXFxcdWE2ZWZcXFxcdWE3MTctXFxcXHVhNzFmXFxcXHVhNzIyLVxcXFx1YTc4OFxcXFx1YTc4Yi1cXFxcdWE3OGVcXFxcdWE3OTAtXFxcXHVhNzkzXFxcXHVhN2EwLVxcXFx1YTdhYVxcXFx1YTdmOC1cXFxcdWE4MDFcXFxcdWE4MDMtXFxcXHVhODA1XFxcXHVhODA3LVxcXFx1YTgwYVxcXFx1YTgwYy1cXFxcdWE4MjJcXFxcdWE4NDAtXFxcXHVhODczXFxcXHVhODgyLVxcXFx1YThiM1xcXFx1YThmMi1cXFxcdWE4ZjdcXFxcdWE4ZmJcXFxcdWE5MGEtXFxcXHVhOTI1XFxcXHVhOTMwLVxcXFx1YTk0NlxcXFx1YTk2MC1cXFxcdWE5N2NcXFxcdWE5ODQtXFxcXHVhOWIyXFxcXHVhOWNmXFxcXHVhYTAwLVxcXFx1YWEyOFxcXFx1YWE0MC1cXFxcdWFhNDJcXFxcdWFhNDQtXFxcXHVhYTRiXFxcXHVhYTYwLVxcXFx1YWE3NlxcXFx1YWE3YVxcXFx1YWE4MC1cXFxcdWFhYWZcXFxcdWFhYjFcXFxcdWFhYjVcXFxcdWFhYjZcXFxcdWFhYjktXFxcXHVhYWJkXFxcXHVhYWMwXFxcXHVhYWMyXFxcXHVhYWRiLVxcXFx1YWFkZFxcXFx1YWFlMC1cXFxcdWFhZWFcXFxcdWFhZjItXFxcXHVhYWY0XFxcXHVhYjAxLVxcXFx1YWIwNlxcXFx1YWIwOS1cXFxcdWFiMGVcXFxcdWFiMTEtXFxcXHVhYjE2XFxcXHVhYjIwLVxcXFx1YWIyNlxcXFx1YWIyOC1cXFxcdWFiMmVcXFxcdWFiYzAtXFxcXHVhYmUyXFxcXHVhYzAwLVxcXFx1ZDdhM1xcXFx1ZDdiMC1cXFxcdWQ3YzZcXFxcdWQ3Y2ItXFxcXHVkN2ZiXFxcXHVmOTAwLVxcXFx1ZmE2ZFxcXFx1ZmE3MC1cXFxcdWZhZDlcXFxcdWZiMDAtXFxcXHVmYjA2XFxcXHVmYjEzLVxcXFx1ZmIxN1xcXFx1ZmIxZFxcXFx1ZmIxZi1cXFxcdWZiMjhcXFxcdWZiMmEtXFxcXHVmYjM2XFxcXHVmYjM4LVxcXFx1ZmIzY1xcXFx1ZmIzZVxcXFx1ZmI0MFxcXFx1ZmI0MVxcXFx1ZmI0M1xcXFx1ZmI0NFxcXFx1ZmI0Ni1cXFxcdWZiYjFcXFxcdWZiZDMtXFxcXHVmZDNkXFxcXHVmZDUwLVxcXFx1ZmQ4ZlxcXFx1ZmQ5Mi1cXFxcdWZkYzdcXFxcdWZkZjAtXFxcXHVmZGZiXFxcXHVmZTcwLVxcXFx1ZmU3NFxcXFx1ZmU3Ni1cXFxcdWZlZmNcXFxcdWZmMjEtXFxcXHVmZjNhXFxcXHVmZjQxLVxcXFx1ZmY1YVxcXFx1ZmY2Ni1cXFxcdWZmYmVcXFxcdWZmYzItXFxcXHVmZmM3XFxcXHVmZmNhLVxcXFx1ZmZjZlxcXFx1ZmZkMi1cXFxcdWZmZDdcXFxcdWZmZGEtXFxcXHVmZmRjXCIscj1cIlxcXFx1MDMwMC1cXFxcdTAzNmZcXFxcdTA0ODMtXFxcXHUwNDg3XFxcXHUwNTkxLVxcXFx1MDViZFxcXFx1MDViZlxcXFx1MDVjMVxcXFx1MDVjMlxcXFx1MDVjNFxcXFx1MDVjNVxcXFx1MDVjN1xcXFx1MDYxMC1cXFxcdTA2MWFcXFxcdTA2MjAtXFxcXHUwNjQ5XFxcXHUwNjcyLVxcXFx1MDZkM1xcXFx1MDZlNy1cXFxcdTA2ZThcXFxcdTA2ZmItXFxcXHUwNmZjXFxcXHUwNzMwLVxcXFx1MDc0YVxcXFx1MDgwMC1cXFxcdTA4MTRcXFxcdTA4MWItXFxcXHUwODIzXFxcXHUwODI1LVxcXFx1MDgyN1xcXFx1MDgyOS1cXFxcdTA4MmRcXFxcdTA4NDAtXFxcXHUwODU3XFxcXHUwOGU0LVxcXFx1MDhmZVxcXFx1MDkwMC1cXFxcdTA5MDNcXFxcdTA5M2EtXFxcXHUwOTNjXFxcXHUwOTNlLVxcXFx1MDk0ZlxcXFx1MDk1MS1cXFxcdTA5NTdcXFxcdTA5NjItXFxcXHUwOTYzXFxcXHUwOTY2LVxcXFx1MDk2ZlxcXFx1MDk4MS1cXFxcdTA5ODNcXFxcdTA5YmNcXFxcdTA5YmUtXFxcXHUwOWM0XFxcXHUwOWM3XFxcXHUwOWM4XFxcXHUwOWQ3XFxcXHUwOWRmLVxcXFx1MDllMFxcXFx1MGEwMS1cXFxcdTBhMDNcXFxcdTBhM2NcXFxcdTBhM2UtXFxcXHUwYTQyXFxcXHUwYTQ3XFxcXHUwYTQ4XFxcXHUwYTRiLVxcXFx1MGE0ZFxcXFx1MGE1MVxcXFx1MGE2Ni1cXFxcdTBhNzFcXFxcdTBhNzVcXFxcdTBhODEtXFxcXHUwYTgzXFxcXHUwYWJjXFxcXHUwYWJlLVxcXFx1MGFjNVxcXFx1MGFjNy1cXFxcdTBhYzlcXFxcdTBhY2ItXFxcXHUwYWNkXFxcXHUwYWUyLVxcXFx1MGFlM1xcXFx1MGFlNi1cXFxcdTBhZWZcXFxcdTBiMDEtXFxcXHUwYjAzXFxcXHUwYjNjXFxcXHUwYjNlLVxcXFx1MGI0NFxcXFx1MGI0N1xcXFx1MGI0OFxcXFx1MGI0Yi1cXFxcdTBiNGRcXFxcdTBiNTZcXFxcdTBiNTdcXFxcdTBiNWYtXFxcXHUwYjYwXFxcXHUwYjY2LVxcXFx1MGI2ZlxcXFx1MGI4MlxcXFx1MGJiZS1cXFxcdTBiYzJcXFxcdTBiYzYtXFxcXHUwYmM4XFxcXHUwYmNhLVxcXFx1MGJjZFxcXFx1MGJkN1xcXFx1MGJlNi1cXFxcdTBiZWZcXFxcdTBjMDEtXFxcXHUwYzAzXFxcXHUwYzQ2LVxcXFx1MGM0OFxcXFx1MGM0YS1cXFxcdTBjNGRcXFxcdTBjNTVcXFxcdTBjNTZcXFxcdTBjNjItXFxcXHUwYzYzXFxcXHUwYzY2LVxcXFx1MGM2ZlxcXFx1MGM4MlxcXFx1MGM4M1xcXFx1MGNiY1xcXFx1MGNiZS1cXFxcdTBjYzRcXFxcdTBjYzYtXFxcXHUwY2M4XFxcXHUwY2NhLVxcXFx1MGNjZFxcXFx1MGNkNVxcXFx1MGNkNlxcXFx1MGNlMi1cXFxcdTBjZTNcXFxcdTBjZTYtXFxcXHUwY2VmXFxcXHUwZDAyXFxcXHUwZDAzXFxcXHUwZDQ2LVxcXFx1MGQ0OFxcXFx1MGQ1N1xcXFx1MGQ2Mi1cXFxcdTBkNjNcXFxcdTBkNjYtXFxcXHUwZDZmXFxcXHUwZDgyXFxcXHUwZDgzXFxcXHUwZGNhXFxcXHUwZGNmLVxcXFx1MGRkNFxcXFx1MGRkNlxcXFx1MGRkOC1cXFxcdTBkZGZcXFxcdTBkZjJcXFxcdTBkZjNcXFxcdTBlMzQtXFxcXHUwZTNhXFxcXHUwZTQwLVxcXFx1MGU0NVxcXFx1MGU1MC1cXFxcdTBlNTlcXFxcdTBlYjQtXFxcXHUwZWI5XFxcXHUwZWM4LVxcXFx1MGVjZFxcXFx1MGVkMC1cXFxcdTBlZDlcXFxcdTBmMThcXFxcdTBmMTlcXFxcdTBmMjAtXFxcXHUwZjI5XFxcXHUwZjM1XFxcXHUwZjM3XFxcXHUwZjM5XFxcXHUwZjQxLVxcXFx1MGY0N1xcXFx1MGY3MS1cXFxcdTBmODRcXFxcdTBmODYtXFxcXHUwZjg3XFxcXHUwZjhkLVxcXFx1MGY5N1xcXFx1MGY5OS1cXFxcdTBmYmNcXFxcdTBmYzZcXFxcdTEwMDAtXFxcXHUxMDI5XFxcXHUxMDQwLVxcXFx1MTA0OVxcXFx1MTA2Ny1cXFxcdTEwNmRcXFxcdTEwNzEtXFxcXHUxMDc0XFxcXHUxMDgyLVxcXFx1MTA4ZFxcXFx1MTA4Zi1cXFxcdTEwOWRcXFxcdTEzNWQtXFxcXHUxMzVmXFxcXHUxNzBlLVxcXFx1MTcxMFxcXFx1MTcyMC1cXFxcdTE3MzBcXFxcdTE3NDAtXFxcXHUxNzUwXFxcXHUxNzcyXFxcXHUxNzczXFxcXHUxNzgwLVxcXFx1MTdiMlxcXFx1MTdkZFxcXFx1MTdlMC1cXFxcdTE3ZTlcXFxcdTE4MGItXFxcXHUxODBkXFxcXHUxODEwLVxcXFx1MTgxOVxcXFx1MTkyMC1cXFxcdTE5MmJcXFxcdTE5MzAtXFxcXHUxOTNiXFxcXHUxOTUxLVxcXFx1MTk2ZFxcXFx1MTliMC1cXFxcdTE5YzBcXFxcdTE5YzgtXFxcXHUxOWM5XFxcXHUxOWQwLVxcXFx1MTlkOVxcXFx1MWEwMC1cXFxcdTFhMTVcXFxcdTFhMjAtXFxcXHUxYTUzXFxcXHUxYTYwLVxcXFx1MWE3Y1xcXFx1MWE3Zi1cXFxcdTFhODlcXFxcdTFhOTAtXFxcXHUxYTk5XFxcXHUxYjQ2LVxcXFx1MWI0YlxcXFx1MWI1MC1cXFxcdTFiNTlcXFxcdTFiNmItXFxcXHUxYjczXFxcXHUxYmIwLVxcXFx1MWJiOVxcXFx1MWJlNi1cXFxcdTFiZjNcXFxcdTFjMDAtXFxcXHUxYzIyXFxcXHUxYzQwLVxcXFx1MWM0OVxcXFx1MWM1Yi1cXFxcdTFjN2RcXFxcdTFjZDAtXFxcXHUxY2QyXFxcXHUxZDAwLVxcXFx1MWRiZVxcXFx1MWUwMS1cXFxcdTFmMTVcXFxcdTIwMGNcXFxcdTIwMGRcXFxcdTIwM2ZcXFxcdTIwNDBcXFxcdTIwNTRcXFxcdTIwZDAtXFxcXHUyMGRjXFxcXHUyMGUxXFxcXHUyMGU1LVxcXFx1MjBmMFxcXFx1MmQ4MS1cXFxcdTJkOTZcXFxcdTJkZTAtXFxcXHUyZGZmXFxcXHUzMDIxLVxcXFx1MzAyOFxcXFx1MzA5OVxcXFx1MzA5YVxcXFx1YTY0MC1cXFxcdWE2NmRcXFxcdWE2NzQtXFxcXHVhNjdkXFxcXHVhNjlmXFxcXHVhNmYwLVxcXFx1YTZmMVxcXFx1YTdmOC1cXFxcdWE4MDBcXFxcdWE4MDZcXFxcdWE4MGJcXFxcdWE4MjMtXFxcXHVhODI3XFxcXHVhODgwLVxcXFx1YTg4MVxcXFx1YThiNC1cXFxcdWE4YzRcXFxcdWE4ZDAtXFxcXHVhOGQ5XFxcXHVhOGYzLVxcXFx1YThmN1xcXFx1YTkwMC1cXFxcdWE5MDlcXFxcdWE5MjYtXFxcXHVhOTJkXFxcXHVhOTMwLVxcXFx1YTk0NVxcXFx1YTk4MC1cXFxcdWE5ODNcXFxcdWE5YjMtXFxcXHVhOWMwXFxcXHVhYTAwLVxcXFx1YWEyN1xcXFx1YWE0MC1cXFxcdWFhNDFcXFxcdWFhNGMtXFxcXHVhYTRkXFxcXHVhYTUwLVxcXFx1YWE1OVxcXFx1YWE3YlxcXFx1YWFlMC1cXFxcdWFhZTlcXFxcdWFhZjItXFxcXHVhYWYzXFxcXHVhYmMwLVxcXFx1YWJlMVxcXFx1YWJlY1xcXFx1YWJlZFxcXFx1YWJmMC1cXFxcdWFiZjlcXFxcdWZiMjAtXFxcXHVmYjI4XFxcXHVmZTAwLVxcXFx1ZmUwZlxcXFx1ZmUyMC1cXFxcdWZlMjZcXFxcdWZlMzNcXFxcdWZlMzRcXFxcdWZlNGQtXFxcXHVmZTRmXFxcXHVmZjEwLVxcXFx1ZmYxOVxcXFx1ZmYzZlwiLGE9XCIoPzpcXFxcXFxcXHVbMC05YS1mQS1GXXs0fXxbXFxcXHgyM1xcXFx4MjRcXFxceDQwXFxcXHg0MS1cXFxceDVhXFxcXHg1ZlxcXFx4NjEtXFxcXHg3YVwiK2krXCJdKVwiO2UuaWRlbnRpZmllcj1uZXcgUmVnRXhwKGErXCIoPzpcXFxcXFxcXHVbMC05YS1mQS1GXXs0fXxbXFxcXHgyNFxcXFx4MzAtXFxcXHgzOVxcXFx4NDEtXFxcXHg1YVxcXFx4NWZcXFxceDYxLVxcXFx4N2FcXFxceGFhXFxcXHhiNVxcXFx4YmFcXFxceGMwLVxcXFx4ZDZcXFxceGQ4LVxcXFx4ZjZcXFxceGY4LVxcXFx1MDJjMVxcXFx1MDJjNi1cXFxcdTAyZDFcXFxcdTAyZTAtXFxcXHUwMmU0XFxcXHUwMmVjXFxcXHUwMmVlXFxcXHUwMzcwLVxcXFx1MDM3NFxcXFx1MDM3NlxcXFx1MDM3N1xcXFx1MDM3YS1cXFxcdTAzN2RcXFxcdTAzODZcXFxcdTAzODgtXFxcXHUwMzhhXFxcXHUwMzhjXFxcXHUwMzhlLVxcXFx1MDNhMVxcXFx1MDNhMy1cXFxcdTAzZjVcXFxcdTAzZjctXFxcXHUwNDgxXFxcXHUwNDhhLVxcXFx1MDUyN1xcXFx1MDUzMS1cXFxcdTA1NTZcXFxcdTA1NTlcXFxcdTA1NjEtXFxcXHUwNTg3XFxcXHUwNWQwLVxcXFx1MDVlYVxcXFx1MDVmMC1cXFxcdTA1ZjJcXFxcdTA2MjAtXFxcXHUwNjRhXFxcXHUwNjZlXFxcXHUwNjZmXFxcXHUwNjcxLVxcXFx1MDZkM1xcXFx1MDZkNVxcXFx1MDZlNVxcXFx1MDZlNlxcXFx1MDZlZVxcXFx1MDZlZlxcXFx1MDZmYS1cXFxcdTA2ZmNcXFxcdTA2ZmZcXFxcdTA3MTBcXFxcdTA3MTItXFxcXHUwNzJmXFxcXHUwNzRkLVxcXFx1MDdhNVxcXFx1MDdiMVxcXFx1MDdjYS1cXFxcdTA3ZWFcXFxcdTA3ZjRcXFxcdTA3ZjVcXFxcdTA3ZmFcXFxcdTA4MDAtXFxcXHUwODE1XFxcXHUwODFhXFxcXHUwODI0XFxcXHUwODI4XFxcXHUwODQwLVxcXFx1MDg1OFxcXFx1MDhhMFxcXFx1MDhhMi1cXFxcdTA4YWNcXFxcdTA5MDQtXFxcXHUwOTM5XFxcXHUwOTNkXFxcXHUwOTUwXFxcXHUwOTU4LVxcXFx1MDk2MVxcXFx1MDk3MS1cXFxcdTA5NzdcXFxcdTA5NzktXFxcXHUwOTdmXFxcXHUwOTg1LVxcXFx1MDk4Y1xcXFx1MDk4ZlxcXFx1MDk5MFxcXFx1MDk5My1cXFxcdTA5YThcXFxcdTA5YWEtXFxcXHUwOWIwXFxcXHUwOWIyXFxcXHUwOWI2LVxcXFx1MDliOVxcXFx1MDliZFxcXFx1MDljZVxcXFx1MDlkY1xcXFx1MDlkZFxcXFx1MDlkZi1cXFxcdTA5ZTFcXFxcdTA5ZjBcXFxcdTA5ZjFcXFxcdTBhMDUtXFxcXHUwYTBhXFxcXHUwYTBmXFxcXHUwYTEwXFxcXHUwYTEzLVxcXFx1MGEyOFxcXFx1MGEyYS1cXFxcdTBhMzBcXFxcdTBhMzJcXFxcdTBhMzNcXFxcdTBhMzVcXFxcdTBhMzZcXFxcdTBhMzhcXFxcdTBhMzlcXFxcdTBhNTktXFxcXHUwYTVjXFxcXHUwYTVlXFxcXHUwYTcyLVxcXFx1MGE3NFxcXFx1MGE4NS1cXFxcdTBhOGRcXFxcdTBhOGYtXFxcXHUwYTkxXFxcXHUwYTkzLVxcXFx1MGFhOFxcXFx1MGFhYS1cXFxcdTBhYjBcXFxcdTBhYjJcXFxcdTBhYjNcXFxcdTBhYjUtXFxcXHUwYWI5XFxcXHUwYWJkXFxcXHUwYWQwXFxcXHUwYWUwXFxcXHUwYWUxXFxcXHUwYjA1LVxcXFx1MGIwY1xcXFx1MGIwZlxcXFx1MGIxMFxcXFx1MGIxMy1cXFxcdTBiMjhcXFxcdTBiMmEtXFxcXHUwYjMwXFxcXHUwYjMyXFxcXHUwYjMzXFxcXHUwYjM1LVxcXFx1MGIzOVxcXFx1MGIzZFxcXFx1MGI1Y1xcXFx1MGI1ZFxcXFx1MGI1Zi1cXFxcdTBiNjFcXFxcdTBiNzFcXFxcdTBiODNcXFxcdTBiODUtXFxcXHUwYjhhXFxcXHUwYjhlLVxcXFx1MGI5MFxcXFx1MGI5Mi1cXFxcdTBiOTVcXFxcdTBiOTlcXFxcdTBiOWFcXFxcdTBiOWNcXFxcdTBiOWVcXFxcdTBiOWZcXFxcdTBiYTNcXFxcdTBiYTRcXFxcdTBiYTgtXFxcXHUwYmFhXFxcXHUwYmFlLVxcXFx1MGJiOVxcXFx1MGJkMFxcXFx1MGMwNS1cXFxcdTBjMGNcXFxcdTBjMGUtXFxcXHUwYzEwXFxcXHUwYzEyLVxcXFx1MGMyOFxcXFx1MGMyYS1cXFxcdTBjMzNcXFxcdTBjMzUtXFxcXHUwYzM5XFxcXHUwYzNkXFxcXHUwYzU4XFxcXHUwYzU5XFxcXHUwYzYwXFxcXHUwYzYxXFxcXHUwYzg1LVxcXFx1MGM4Y1xcXFx1MGM4ZS1cXFxcdTBjOTBcXFxcdTBjOTItXFxcXHUwY2E4XFxcXHUwY2FhLVxcXFx1MGNiM1xcXFx1MGNiNS1cXFxcdTBjYjlcXFxcdTBjYmRcXFxcdTBjZGVcXFxcdTBjZTBcXFxcdTBjZTFcXFxcdTBjZjFcXFxcdTBjZjJcXFxcdTBkMDUtXFxcXHUwZDBjXFxcXHUwZDBlLVxcXFx1MGQxMFxcXFx1MGQxMi1cXFxcdTBkM2FcXFxcdTBkM2RcXFxcdTBkNGVcXFxcdTBkNjBcXFxcdTBkNjFcXFxcdTBkN2EtXFxcXHUwZDdmXFxcXHUwZDg1LVxcXFx1MGQ5NlxcXFx1MGQ5YS1cXFxcdTBkYjFcXFxcdTBkYjMtXFxcXHUwZGJiXFxcXHUwZGJkXFxcXHUwZGMwLVxcXFx1MGRjNlxcXFx1MGUwMS1cXFxcdTBlMzBcXFxcdTBlMzJcXFxcdTBlMzNcXFxcdTBlNDAtXFxcXHUwZTQ2XFxcXHUwZTgxXFxcXHUwZTgyXFxcXHUwZTg0XFxcXHUwZTg3XFxcXHUwZTg4XFxcXHUwZThhXFxcXHUwZThkXFxcXHUwZTk0LVxcXFx1MGU5N1xcXFx1MGU5OS1cXFxcdTBlOWZcXFxcdTBlYTEtXFxcXHUwZWEzXFxcXHUwZWE1XFxcXHUwZWE3XFxcXHUwZWFhXFxcXHUwZWFiXFxcXHUwZWFkLVxcXFx1MGViMFxcXFx1MGViMlxcXFx1MGViM1xcXFx1MGViZFxcXFx1MGVjMC1cXFxcdTBlYzRcXFxcdTBlYzZcXFxcdTBlZGMtXFxcXHUwZWRmXFxcXHUwZjAwXFxcXHUwZjQwLVxcXFx1MGY0N1xcXFx1MGY0OS1cXFxcdTBmNmNcXFxcdTBmODgtXFxcXHUwZjhjXFxcXHUxMDAwLVxcXFx1MTAyYVxcXFx1MTAzZlxcXFx1MTA1MC1cXFxcdTEwNTVcXFxcdTEwNWEtXFxcXHUxMDVkXFxcXHUxMDYxXFxcXHUxMDY1XFxcXHUxMDY2XFxcXHUxMDZlLVxcXFx1MTA3MFxcXFx1MTA3NS1cXFxcdTEwODFcXFxcdTEwOGVcXFxcdTEwYTAtXFxcXHUxMGM1XFxcXHUxMGM3XFxcXHUxMGNkXFxcXHUxMGQwLVxcXFx1MTBmYVxcXFx1MTBmYy1cXFxcdTEyNDhcXFxcdTEyNGEtXFxcXHUxMjRkXFxcXHUxMjUwLVxcXFx1MTI1NlxcXFx1MTI1OFxcXFx1MTI1YS1cXFxcdTEyNWRcXFxcdTEyNjAtXFxcXHUxMjg4XFxcXHUxMjhhLVxcXFx1MTI4ZFxcXFx1MTI5MC1cXFxcdTEyYjBcXFxcdTEyYjItXFxcXHUxMmI1XFxcXHUxMmI4LVxcXFx1MTJiZVxcXFx1MTJjMFxcXFx1MTJjMi1cXFxcdTEyYzVcXFxcdTEyYzgtXFxcXHUxMmQ2XFxcXHUxMmQ4LVxcXFx1MTMxMFxcXFx1MTMxMi1cXFxcdTEzMTVcXFxcdTEzMTgtXFxcXHUxMzVhXFxcXHUxMzgwLVxcXFx1MTM4ZlxcXFx1MTNhMC1cXFxcdTEzZjRcXFxcdTE0MDEtXFxcXHUxNjZjXFxcXHUxNjZmLVxcXFx1MTY3ZlxcXFx1MTY4MS1cXFxcdTE2OWFcXFxcdTE2YTAtXFxcXHUxNmVhXFxcXHUxNmVlLVxcXFx1MTZmMFxcXFx1MTcwMC1cXFxcdTE3MGNcXFxcdTE3MGUtXFxcXHUxNzExXFxcXHUxNzIwLVxcXFx1MTczMVxcXFx1MTc0MC1cXFxcdTE3NTFcXFxcdTE3NjAtXFxcXHUxNzZjXFxcXHUxNzZlLVxcXFx1MTc3MFxcXFx1MTc4MC1cXFxcdTE3YjNcXFxcdTE3ZDdcXFxcdTE3ZGNcXFxcdTE4MjAtXFxcXHUxODc3XFxcXHUxODgwLVxcXFx1MThhOFxcXFx1MThhYVxcXFx1MThiMC1cXFxcdTE4ZjVcXFxcdTE5MDAtXFxcXHUxOTFjXFxcXHUxOTUwLVxcXFx1MTk2ZFxcXFx1MTk3MC1cXFxcdTE5NzRcXFxcdTE5ODAtXFxcXHUxOWFiXFxcXHUxOWMxLVxcXFx1MTljN1xcXFx1MWEwMC1cXFxcdTFhMTZcXFxcdTFhMjAtXFxcXHUxYTU0XFxcXHUxYWE3XFxcXHUxYjA1LVxcXFx1MWIzM1xcXFx1MWI0NS1cXFxcdTFiNGJcXFxcdTFiODMtXFxcXHUxYmEwXFxcXHUxYmFlXFxcXHUxYmFmXFxcXHUxYmJhLVxcXFx1MWJlNVxcXFx1MWMwMC1cXFxcdTFjMjNcXFxcdTFjNGQtXFxcXHUxYzRmXFxcXHUxYzVhLVxcXFx1MWM3ZFxcXFx1MWNlOS1cXFxcdTFjZWNcXFxcdTFjZWUtXFxcXHUxY2YxXFxcXHUxY2Y1XFxcXHUxY2Y2XFxcXHUxZDAwLVxcXFx1MWRiZlxcXFx1MWUwMC1cXFxcdTFmMTVcXFxcdTFmMTgtXFxcXHUxZjFkXFxcXHUxZjIwLVxcXFx1MWY0NVxcXFx1MWY0OC1cXFxcdTFmNGRcXFxcdTFmNTAtXFxcXHUxZjU3XFxcXHUxZjU5XFxcXHUxZjViXFxcXHUxZjVkXFxcXHUxZjVmLVxcXFx1MWY3ZFxcXFx1MWY4MC1cXFxcdTFmYjRcXFxcdTFmYjYtXFxcXHUxZmJjXFxcXHUxZmJlXFxcXHUxZmMyLVxcXFx1MWZjNFxcXFx1MWZjNi1cXFxcdTFmY2NcXFxcdTFmZDAtXFxcXHUxZmQzXFxcXHUxZmQ2LVxcXFx1MWZkYlxcXFx1MWZlMC1cXFxcdTFmZWNcXFxcdTFmZjItXFxcXHUxZmY0XFxcXHUxZmY2LVxcXFx1MWZmY1xcXFx1MjA3MVxcXFx1MjA3ZlxcXFx1MjA5MC1cXFxcdTIwOWNcXFxcdTIxMDJcXFxcdTIxMDdcXFxcdTIxMGEtXFxcXHUyMTEzXFxcXHUyMTE1XFxcXHUyMTE5LVxcXFx1MjExZFxcXFx1MjEyNFxcXFx1MjEyNlxcXFx1MjEyOFxcXFx1MjEyYS1cXFxcdTIxMmRcXFxcdTIxMmYtXFxcXHUyMTM5XFxcXHUyMTNjLVxcXFx1MjEzZlxcXFx1MjE0NS1cXFxcdTIxNDlcXFxcdTIxNGVcXFxcdTIxNjAtXFxcXHUyMTg4XFxcXHUyYzAwLVxcXFx1MmMyZVxcXFx1MmMzMC1cXFxcdTJjNWVcXFxcdTJjNjAtXFxcXHUyY2U0XFxcXHUyY2ViLVxcXFx1MmNlZVxcXFx1MmNmMlxcXFx1MmNmM1xcXFx1MmQwMC1cXFxcdTJkMjVcXFxcdTJkMjdcXFxcdTJkMmRcXFxcdTJkMzAtXFxcXHUyZDY3XFxcXHUyZDZmXFxcXHUyZDgwLVxcXFx1MmQ5NlxcXFx1MmRhMC1cXFxcdTJkYTZcXFxcdTJkYTgtXFxcXHUyZGFlXFxcXHUyZGIwLVxcXFx1MmRiNlxcXFx1MmRiOC1cXFxcdTJkYmVcXFxcdTJkYzAtXFxcXHUyZGM2XFxcXHUyZGM4LVxcXFx1MmRjZVxcXFx1MmRkMC1cXFxcdTJkZDZcXFxcdTJkZDgtXFxcXHUyZGRlXFxcXHUyZTJmXFxcXHUzMDA1LVxcXFx1MzAwN1xcXFx1MzAyMS1cXFxcdTMwMjlcXFxcdTMwMzEtXFxcXHUzMDM1XFxcXHUzMDM4LVxcXFx1MzAzY1xcXFx1MzA0MS1cXFxcdTMwOTZcXFxcdTMwOWQtXFxcXHUzMDlmXFxcXHUzMGExLVxcXFx1MzBmYVxcXFx1MzBmYy1cXFxcdTMwZmZcXFxcdTMxMDUtXFxcXHUzMTJkXFxcXHUzMTMxLVxcXFx1MzE4ZVxcXFx1MzFhMC1cXFxcdTMxYmFcXFxcdTMxZjAtXFxcXHUzMWZmXFxcXHUzNDAwLVxcXFx1NGRiNVxcXFx1NGUwMC1cXFxcdTlmY2NcXFxcdWEwMDAtXFxcXHVhNDhjXFxcXHVhNGQwLVxcXFx1YTRmZFxcXFx1YTUwMC1cXFxcdWE2MGNcXFxcdWE2MTAtXFxcXHVhNjFmXFxcXHVhNjJhXFxcXHVhNjJiXFxcXHVhNjQwLVxcXFx1YTY2ZVxcXFx1YTY3Zi1cXFxcdWE2OTdcXFxcdWE2YTAtXFxcXHVhNmVmXFxcXHVhNzE3LVxcXFx1YTcxZlxcXFx1YTcyMi1cXFxcdWE3ODhcXFxcdWE3OGItXFxcXHVhNzhlXFxcXHVhNzkwLVxcXFx1YTc5M1xcXFx1YTdhMC1cXFxcdWE3YWFcXFxcdWE3ZjgtXFxcXHVhODAxXFxcXHVhODAzLVxcXFx1YTgwNVxcXFx1YTgwNy1cXFxcdWE4MGFcXFxcdWE4MGMtXFxcXHVhODIyXFxcXHVhODQwLVxcXFx1YTg3M1xcXFx1YTg4Mi1cXFxcdWE4YjNcXFxcdWE4ZjItXFxcXHVhOGY3XFxcXHVhOGZiXFxcXHVhOTBhLVxcXFx1YTkyNVxcXFx1YTkzMC1cXFxcdWE5NDZcXFxcdWE5NjAtXFxcXHVhOTdjXFxcXHVhOTg0LVxcXFx1YTliMlxcXFx1YTljZlxcXFx1YWEwMC1cXFxcdWFhMjhcXFxcdWFhNDAtXFxcXHVhYTQyXFxcXHVhYTQ0LVxcXFx1YWE0YlxcXFx1YWE2MC1cXFxcdWFhNzZcXFxcdWFhN2FcXFxcdWFhODAtXFxcXHVhYWFmXFxcXHVhYWIxXFxcXHVhYWI1XFxcXHVhYWI2XFxcXHVhYWI5LVxcXFx1YWFiZFxcXFx1YWFjMFxcXFx1YWFjMlxcXFx1YWFkYi1cXFxcdWFhZGRcXFxcdWFhZTAtXFxcXHVhYWVhXFxcXHVhYWYyLVxcXFx1YWFmNFxcXFx1YWIwMS1cXFxcdWFiMDZcXFxcdWFiMDktXFxcXHVhYjBlXFxcXHVhYjExLVxcXFx1YWIxNlxcXFx1YWIyMC1cXFxcdWFiMjZcXFxcdWFiMjgtXFxcXHVhYjJlXFxcXHVhYmMwLVxcXFx1YWJlMlxcXFx1YWMwMC1cXFxcdWQ3YTNcXFxcdWQ3YjAtXFxcXHVkN2M2XFxcXHVkN2NiLVxcXFx1ZDdmYlxcXFx1ZjkwMC1cXFxcdWZhNmRcXFxcdWZhNzAtXFxcXHVmYWQ5XFxcXHVmYjAwLVxcXFx1ZmIwNlxcXFx1ZmIxMy1cXFxcdWZiMTdcXFxcdWZiMWRcXFxcdWZiMWYtXFxcXHVmYjI4XFxcXHVmYjJhLVxcXFx1ZmIzNlxcXFx1ZmIzOC1cXFxcdWZiM2NcXFxcdWZiM2VcXFxcdWZiNDBcXFxcdWZiNDFcXFxcdWZiNDNcXFxcdWZiNDRcXFxcdWZiNDYtXFxcXHVmYmIxXFxcXHVmYmQzLVxcXFx1ZmQzZFxcXFx1ZmQ1MC1cXFxcdWZkOGZcXFxcdWZkOTItXFxcXHVmZGM3XFxcXHVmZGYwLVxcXFx1ZmRmYlxcXFx1ZmU3MC1cXFxcdWZlNzRcXFxcdWZlNzYtXFxcXHVmZWZjXFxcXHVmZjIxLVxcXFx1ZmYzYVxcXFx1ZmY0MS1cXFxcdWZmNWFcXFxcdWZmNjYtXFxcXHVmZmJlXFxcXHVmZmMyLVxcXFx1ZmZjN1xcXFx1ZmZjYS1cXFxcdWZmY2ZcXFxcdWZmZDItXFxcXHVmZmQ3XFxcXHVmZmRhLVxcXFx1ZmZkY1xcXFx1MDMwMC1cXFxcdTAzNmZcXFxcdTA0ODMtXFxcXHUwNDg3XFxcXHUwNTkxLVxcXFx1MDViZFxcXFx1MDViZlxcXFx1MDVjMVxcXFx1MDVjMlxcXFx1MDVjNFxcXFx1MDVjNVxcXFx1MDVjN1xcXFx1MDYxMC1cXFxcdTA2MWFcXFxcdTA2MjAtXFxcXHUwNjQ5XFxcXHUwNjcyLVxcXFx1MDZkM1xcXFx1MDZlNy1cXFxcdTA2ZThcXFxcdTA2ZmItXFxcXHUwNmZjXFxcXHUwNzMwLVxcXFx1MDc0YVxcXFx1MDgwMC1cXFxcdTA4MTRcXFxcdTA4MWItXFxcXHUwODIzXFxcXHUwODI1LVxcXFx1MDgyN1xcXFx1MDgyOS1cXFxcdTA4MmRcXFxcdTA4NDAtXFxcXHUwODU3XFxcXHUwOGU0LVxcXFx1MDhmZVxcXFx1MDkwMC1cXFxcdTA5MDNcXFxcdTA5M2EtXFxcXHUwOTNjXFxcXHUwOTNlLVxcXFx1MDk0ZlxcXFx1MDk1MS1cXFxcdTA5NTdcXFxcdTA5NjItXFxcXHUwOTYzXFxcXHUwOTY2LVxcXFx1MDk2ZlxcXFx1MDk4MS1cXFxcdTA5ODNcXFxcdTA5YmNcXFxcdTA5YmUtXFxcXHUwOWM0XFxcXHUwOWM3XFxcXHUwOWM4XFxcXHUwOWQ3XFxcXHUwOWRmLVxcXFx1MDllMFxcXFx1MGEwMS1cXFxcdTBhMDNcXFxcdTBhM2NcXFxcdTBhM2UtXFxcXHUwYTQyXFxcXHUwYTQ3XFxcXHUwYTQ4XFxcXHUwYTRiLVxcXFx1MGE0ZFxcXFx1MGE1MVxcXFx1MGE2Ni1cXFxcdTBhNzFcXFxcdTBhNzVcXFxcdTBhODEtXFxcXHUwYTgzXFxcXHUwYWJjXFxcXHUwYWJlLVxcXFx1MGFjNVxcXFx1MGFjNy1cXFxcdTBhYzlcXFxcdTBhY2ItXFxcXHUwYWNkXFxcXHUwYWUyLVxcXFx1MGFlM1xcXFx1MGFlNi1cXFxcdTBhZWZcXFxcdTBiMDEtXFxcXHUwYjAzXFxcXHUwYjNjXFxcXHUwYjNlLVxcXFx1MGI0NFxcXFx1MGI0N1xcXFx1MGI0OFxcXFx1MGI0Yi1cXFxcdTBiNGRcXFxcdTBiNTZcXFxcdTBiNTdcXFxcdTBiNWYtXFxcXHUwYjYwXFxcXHUwYjY2LVxcXFx1MGI2ZlxcXFx1MGI4MlxcXFx1MGJiZS1cXFxcdTBiYzJcXFxcdTBiYzYtXFxcXHUwYmM4XFxcXHUwYmNhLVxcXFx1MGJjZFxcXFx1MGJkN1xcXFx1MGJlNi1cXFxcdTBiZWZcXFxcdTBjMDEtXFxcXHUwYzAzXFxcXHUwYzQ2LVxcXFx1MGM0OFxcXFx1MGM0YS1cXFxcdTBjNGRcXFxcdTBjNTVcXFxcdTBjNTZcXFxcdTBjNjItXFxcXHUwYzYzXFxcXHUwYzY2LVxcXFx1MGM2ZlxcXFx1MGM4MlxcXFx1MGM4M1xcXFx1MGNiY1xcXFx1MGNiZS1cXFxcdTBjYzRcXFxcdTBjYzYtXFxcXHUwY2M4XFxcXHUwY2NhLVxcXFx1MGNjZFxcXFx1MGNkNVxcXFx1MGNkNlxcXFx1MGNlMi1cXFxcdTBjZTNcXFxcdTBjZTYtXFxcXHUwY2VmXFxcXHUwZDAyXFxcXHUwZDAzXFxcXHUwZDQ2LVxcXFx1MGQ0OFxcXFx1MGQ1N1xcXFx1MGQ2Mi1cXFxcdTBkNjNcXFxcdTBkNjYtXFxcXHUwZDZmXFxcXHUwZDgyXFxcXHUwZDgzXFxcXHUwZGNhXFxcXHUwZGNmLVxcXFx1MGRkNFxcXFx1MGRkNlxcXFx1MGRkOC1cXFxcdTBkZGZcXFxcdTBkZjJcXFxcdTBkZjNcXFxcdTBlMzQtXFxcXHUwZTNhXFxcXHUwZTQwLVxcXFx1MGU0NVxcXFx1MGU1MC1cXFxcdTBlNTlcXFxcdTBlYjQtXFxcXHUwZWI5XFxcXHUwZWM4LVxcXFx1MGVjZFxcXFx1MGVkMC1cXFxcdTBlZDlcXFxcdTBmMThcXFxcdTBmMTlcXFxcdTBmMjAtXFxcXHUwZjI5XFxcXHUwZjM1XFxcXHUwZjM3XFxcXHUwZjM5XFxcXHUwZjQxLVxcXFx1MGY0N1xcXFx1MGY3MS1cXFxcdTBmODRcXFxcdTBmODYtXFxcXHUwZjg3XFxcXHUwZjhkLVxcXFx1MGY5N1xcXFx1MGY5OS1cXFxcdTBmYmNcXFxcdTBmYzZcXFxcdTEwMDAtXFxcXHUxMDI5XFxcXHUxMDQwLVxcXFx1MTA0OVxcXFx1MTA2Ny1cXFxcdTEwNmRcXFxcdTEwNzEtXFxcXHUxMDc0XFxcXHUxMDgyLVxcXFx1MTA4ZFxcXFx1MTA4Zi1cXFxcdTEwOWRcXFxcdTEzNWQtXFxcXHUxMzVmXFxcXHUxNzBlLVxcXFx1MTcxMFxcXFx1MTcyMC1cXFxcdTE3MzBcXFxcdTE3NDAtXFxcXHUxNzUwXFxcXHUxNzcyXFxcXHUxNzczXFxcXHUxNzgwLVxcXFx1MTdiMlxcXFx1MTdkZFxcXFx1MTdlMC1cXFxcdTE3ZTlcXFxcdTE4MGItXFxcXHUxODBkXFxcXHUxODEwLVxcXFx1MTgxOVxcXFx1MTkyMC1cXFxcdTE5MmJcXFxcdTE5MzAtXFxcXHUxOTNiXFxcXHUxOTUxLVxcXFx1MTk2ZFxcXFx1MTliMC1cXFxcdTE5YzBcXFxcdTE5YzgtXFxcXHUxOWM5XFxcXHUxOWQwLVxcXFx1MTlkOVxcXFx1MWEwMC1cXFxcdTFhMTVcXFxcdTFhMjAtXFxcXHUxYTUzXFxcXHUxYTYwLVxcXFx1MWE3Y1xcXFx1MWE3Zi1cXFxcdTFhODlcXFxcdTFhOTAtXFxcXHUxYTk5XFxcXHUxYjQ2LVxcXFx1MWI0YlxcXFx1MWI1MC1cXFxcdTFiNTlcXFxcdTFiNmItXFxcXHUxYjczXFxcXHUxYmIwLVxcXFx1MWJiOVxcXFx1MWJlNi1cXFxcdTFiZjNcXFxcdTFjMDAtXFxcXHUxYzIyXFxcXHUxYzQwLVxcXFx1MWM0OVxcXFx1MWM1Yi1cXFxcdTFjN2RcXFxcdTFjZDAtXFxcXHUxY2QyXFxcXHUxZDAwLVxcXFx1MWRiZVxcXFx1MWUwMS1cXFxcdTFmMTVcXFxcdTIwMGNcXFxcdTIwMGRcXFxcdTIwM2ZcXFxcdTIwNDBcXFxcdTIwNTRcXFxcdTIwZDAtXFxcXHUyMGRjXFxcXHUyMGUxXFxcXHUyMGU1LVxcXFx1MjBmMFxcXFx1MmQ4MS1cXFxcdTJkOTZcXFxcdTJkZTAtXFxcXHUyZGZmXFxcXHUzMDIxLVxcXFx1MzAyOFxcXFx1MzA5OVxcXFx1MzA5YVxcXFx1YTY0MC1cXFxcdWE2NmRcXFxcdWE2NzQtXFxcXHVhNjdkXFxcXHVhNjlmXFxcXHVhNmYwLVxcXFx1YTZmMVxcXFx1YTdmOC1cXFxcdWE4MDBcXFxcdWE4MDZcXFxcdWE4MGJcXFxcdWE4MjMtXFxcXHVhODI3XFxcXHVhODgwLVxcXFx1YTg4MVxcXFx1YThiNC1cXFxcdWE4YzRcXFxcdWE4ZDAtXFxcXHVhOGQ5XFxcXHVhOGYzLVxcXFx1YThmN1xcXFx1YTkwMC1cXFxcdWE5MDlcXFxcdWE5MjYtXFxcXHVhOTJkXFxcXHVhOTMwLVxcXFx1YTk0NVxcXFx1YTk4MC1cXFxcdWE5ODNcXFxcdWE5YjMtXFxcXHVhOWMwXFxcXHVhYTAwLVxcXFx1YWEyN1xcXFx1YWE0MC1cXFxcdWFhNDFcXFxcdWFhNGMtXFxcXHVhYTRkXFxcXHVhYTUwLVxcXFx1YWE1OVxcXFx1YWE3YlxcXFx1YWFlMC1cXFxcdWFhZTlcXFxcdWFhZjItXFxcXHVhYWYzXFxcXHVhYmMwLVxcXFx1YWJlMVxcXFx1YWJlY1xcXFx1YWJlZFxcXFx1YWJmMC1cXFxcdWFiZjlcXFxcdWZiMjAtXFxcXHVmYjI4XFxcXHVmZTAwLVxcXFx1ZmUwZlxcXFx1ZmUyMC1cXFxcdWZlMjZcXFxcdWZlMzNcXFxcdWZlMzRcXFxcdWZlNGQtXFxcXHVmZTRmXFxcXHVmZjEwLVxcXFx1ZmYxOVxcXFx1ZmYzZl0pKlwiLFwiZ1wiKSxlLmlkZW50aWZpZXJTdGFydD1uZXcgUmVnRXhwKGEpLGUuaWRlbnRpZmllck1hdGNoPW5ldyBSZWdFeHAoXCIoPzpcXFxcXFxcXHVbMC05YS1mQS1GXXs0fXxbXFxcXHgyNFxcXFx4MzAtXFxcXHgzOVxcXFx4NDEtXFxcXHg1YVxcXFx4NWZcXFxceDYxLVxcXFx4N2FcIitpK3IrXCJdKStcIiksZS5uZXdsaW5lPS9bXFxuXFxyXFx1MjAyOFxcdTIwMjldLyxlLmxpbmVCcmVhaz1uZXcgUmVnRXhwKFwiXFxyXFxufFwiK2UubmV3bGluZS5zb3VyY2UpLGUuYWxsTGluZUJyZWFrcz1uZXcgUmVnRXhwKGUubGluZUJyZWFrLnNvdXJjZSxcImdcIil9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1uKDYpLk9wdGlvbnMscj1bXCJiZWZvcmUtbmV3bGluZVwiLFwiYWZ0ZXItbmV3bGluZVwiLFwicHJlc2VydmUtbmV3bGluZVwiXTtmdW5jdGlvbiBhKHQpe2kuY2FsbCh0aGlzLHQsXCJqc1wiKTt2YXIgZT10aGlzLnJhd19vcHRpb25zLmJyYWNlX3N0eWxlfHxudWxsO1wiZXhwYW5kLXN0cmljdFwiPT09ZT90aGlzLnJhd19vcHRpb25zLmJyYWNlX3N0eWxlPVwiZXhwYW5kXCI6XCJjb2xsYXBzZS1wcmVzZXJ2ZS1pbmxpbmVcIj09PWU/dGhpcy5yYXdfb3B0aW9ucy5icmFjZV9zdHlsZT1cImNvbGxhcHNlLHByZXNlcnZlLWlubGluZVwiOnZvaWQgMCE9PXRoaXMucmF3X29wdGlvbnMuYnJhY2VzX29uX293bl9saW5lJiYodGhpcy5yYXdfb3B0aW9ucy5icmFjZV9zdHlsZT10aGlzLnJhd19vcHRpb25zLmJyYWNlc19vbl9vd25fbGluZT9cImV4cGFuZFwiOlwiY29sbGFwc2VcIik7dmFyIG49dGhpcy5fZ2V0X3NlbGVjdGlvbl9saXN0KFwiYnJhY2Vfc3R5bGVcIixbXCJjb2xsYXBzZVwiLFwiZXhwYW5kXCIsXCJlbmQtZXhwYW5kXCIsXCJub25lXCIsXCJwcmVzZXJ2ZS1pbmxpbmVcIl0pO3RoaXMuYnJhY2VfcHJlc2VydmVfaW5saW5lPSExLHRoaXMuYnJhY2Vfc3R5bGU9XCJjb2xsYXBzZVwiO2Zvcih2YXIgYT0wO2E8bi5sZW5ndGg7YSsrKVwicHJlc2VydmUtaW5saW5lXCI9PT1uW2FdP3RoaXMuYnJhY2VfcHJlc2VydmVfaW5saW5lPSEwOnRoaXMuYnJhY2Vfc3R5bGU9blthXTt0aGlzLnVuaW5kZW50X2NoYWluZWRfbWV0aG9kcz10aGlzLl9nZXRfYm9vbGVhbihcInVuaW5kZW50X2NoYWluZWRfbWV0aG9kc1wiKSx0aGlzLmJyZWFrX2NoYWluZWRfbWV0aG9kcz10aGlzLl9nZXRfYm9vbGVhbihcImJyZWFrX2NoYWluZWRfbWV0aG9kc1wiKSx0aGlzLnNwYWNlX2luX3BhcmVuPXRoaXMuX2dldF9ib29sZWFuKFwic3BhY2VfaW5fcGFyZW5cIiksdGhpcy5zcGFjZV9pbl9lbXB0eV9wYXJlbj10aGlzLl9nZXRfYm9vbGVhbihcInNwYWNlX2luX2VtcHR5X3BhcmVuXCIpLHRoaXMuanNsaW50X2hhcHB5PXRoaXMuX2dldF9ib29sZWFuKFwianNsaW50X2hhcHB5XCIpLHRoaXMuc3BhY2VfYWZ0ZXJfYW5vbl9mdW5jdGlvbj10aGlzLl9nZXRfYm9vbGVhbihcInNwYWNlX2FmdGVyX2Fub25fZnVuY3Rpb25cIiksdGhpcy5zcGFjZV9hZnRlcl9uYW1lZF9mdW5jdGlvbj10aGlzLl9nZXRfYm9vbGVhbihcInNwYWNlX2FmdGVyX25hbWVkX2Z1bmN0aW9uXCIpLHRoaXMua2VlcF9hcnJheV9pbmRlbnRhdGlvbj10aGlzLl9nZXRfYm9vbGVhbihcImtlZXBfYXJyYXlfaW5kZW50YXRpb25cIiksdGhpcy5zcGFjZV9iZWZvcmVfY29uZGl0aW9uYWw9dGhpcy5fZ2V0X2Jvb2xlYW4oXCJzcGFjZV9iZWZvcmVfY29uZGl0aW9uYWxcIiwhMCksdGhpcy51bmVzY2FwZV9zdHJpbmdzPXRoaXMuX2dldF9ib29sZWFuKFwidW5lc2NhcGVfc3RyaW5nc1wiKSx0aGlzLmU0eD10aGlzLl9nZXRfYm9vbGVhbihcImU0eFwiKSx0aGlzLmNvbW1hX2ZpcnN0PXRoaXMuX2dldF9ib29sZWFuKFwiY29tbWFfZmlyc3RcIiksdGhpcy5vcGVyYXRvcl9wb3NpdGlvbj10aGlzLl9nZXRfc2VsZWN0aW9uKFwib3BlcmF0b3JfcG9zaXRpb25cIixyKSx0aGlzLnRlc3Rfb3V0cHV0X3Jhdz10aGlzLl9nZXRfYm9vbGVhbihcInRlc3Rfb3V0cHV0X3Jhd1wiKSx0aGlzLmpzbGludF9oYXBweSYmKHRoaXMuc3BhY2VfYWZ0ZXJfYW5vbl9mdW5jdGlvbj0hMCl9YS5wcm90b3R5cGU9bmV3IGksdC5leHBvcnRzLk9wdGlvbnM9YX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGkodCxlKXt0aGlzLnJhd19vcHRpb25zPXIodCxlKSx0aGlzLmRpc2FibGVkPXRoaXMuX2dldF9ib29sZWFuKFwiZGlzYWJsZWRcIiksdGhpcy5lb2w9dGhpcy5fZ2V0X2NoYXJhY3RlcnMoXCJlb2xcIixcImF1dG9cIiksdGhpcy5lbmRfd2l0aF9uZXdsaW5lPXRoaXMuX2dldF9ib29sZWFuKFwiZW5kX3dpdGhfbmV3bGluZVwiKSx0aGlzLmluZGVudF9zaXplPXRoaXMuX2dldF9udW1iZXIoXCJpbmRlbnRfc2l6ZVwiLDQpLHRoaXMuaW5kZW50X2NoYXI9dGhpcy5fZ2V0X2NoYXJhY3RlcnMoXCJpbmRlbnRfY2hhclwiLFwiIFwiKSx0aGlzLmluZGVudF9sZXZlbD10aGlzLl9nZXRfbnVtYmVyKFwiaW5kZW50X2xldmVsXCIpLHRoaXMucHJlc2VydmVfbmV3bGluZXM9dGhpcy5fZ2V0X2Jvb2xlYW4oXCJwcmVzZXJ2ZV9uZXdsaW5lc1wiLCEwKSx0aGlzLm1heF9wcmVzZXJ2ZV9uZXdsaW5lcz10aGlzLl9nZXRfbnVtYmVyKFwibWF4X3ByZXNlcnZlX25ld2xpbmVzXCIsMzI3ODYpLHRoaXMucHJlc2VydmVfbmV3bGluZXN8fCh0aGlzLm1heF9wcmVzZXJ2ZV9uZXdsaW5lcz0wKSx0aGlzLmluZGVudF93aXRoX3RhYnM9dGhpcy5fZ2V0X2Jvb2xlYW4oXCJpbmRlbnRfd2l0aF90YWJzXCIsXCJcXHRcIj09PXRoaXMuaW5kZW50X2NoYXIpLHRoaXMuaW5kZW50X3dpdGhfdGFicyYmKHRoaXMuaW5kZW50X2NoYXI9XCJcXHRcIiwxPT09dGhpcy5pbmRlbnRfc2l6ZSYmKHRoaXMuaW5kZW50X3NpemU9NCkpLHRoaXMud3JhcF9saW5lX2xlbmd0aD10aGlzLl9nZXRfbnVtYmVyKFwid3JhcF9saW5lX2xlbmd0aFwiLHRoaXMuX2dldF9udW1iZXIoXCJtYXhfY2hhclwiKSksdGhpcy5pbmRlbnRfZW1wdHlfbGluZXM9dGhpcy5fZ2V0X2Jvb2xlYW4oXCJpbmRlbnRfZW1wdHlfbGluZXNcIiksdGhpcy50ZW1wbGF0aW5nPXRoaXMuX2dldF9zZWxlY3Rpb25fbGlzdChcInRlbXBsYXRpbmdcIixbXCJhdXRvXCIsXCJub25lXCIsXCJkamFuZ29cIixcImVyYlwiLFwiaGFuZGxlYmFyc1wiLFwicGhwXCJdLFtcImF1dG9cIl0pfWZ1bmN0aW9uIHIodCxlKXt2YXIgbixpPXt9O2ZvcihuIGluIHQ9YSh0KSluIT09ZSYmKGlbbl09dFtuXSk7aWYoZSYmdFtlXSlmb3IobiBpbiB0W2VdKWlbbl09dFtlXVtuXTtyZXR1cm4gaX1mdW5jdGlvbiBhKHQpe3ZhciBlLG49e307Zm9yKGUgaW4gdCluW2UucmVwbGFjZSgvLS9nLFwiX1wiKV09dFtlXTtyZXR1cm4gbn1pLnByb3RvdHlwZS5fZ2V0X2FycmF5PWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5yYXdfb3B0aW9uc1t0XSxpPWV8fFtdO3JldHVyblwib2JqZWN0XCI9PXR5cGVvZiBuP251bGwhPT1uJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBuLmNvbmNhdCYmKGk9bi5jb25jYXQoKSk6XCJzdHJpbmdcIj09dHlwZW9mIG4mJihpPW4uc3BsaXQoL1teYS16QS1aMC05X1xcL1xcLV0rLykpLGl9LGkucHJvdG90eXBlLl9nZXRfYm9vbGVhbj1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMucmF3X29wdGlvbnNbdF07cmV0dXJuIHZvaWQgMD09PW4/ISFlOiEhbn0saS5wcm90b3R5cGUuX2dldF9jaGFyYWN0ZXJzPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5yYXdfb3B0aW9uc1t0XSxpPWV8fFwiXCI7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIG4mJihpPW4ucmVwbGFjZSgvXFxcXHIvLFwiXFxyXCIpLnJlcGxhY2UoL1xcXFxuLyxcIlxcblwiKS5yZXBsYWNlKC9cXFxcdC8sXCJcXHRcIikpLGl9LGkucHJvdG90eXBlLl9nZXRfbnVtYmVyPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5yYXdfb3B0aW9uc1t0XTtlPXBhcnNlSW50KGUsMTApLGlzTmFOKGUpJiYoZT0wKTt2YXIgaT1wYXJzZUludChuLDEwKTtyZXR1cm4gaXNOYU4oaSkmJihpPWUpLGl9LGkucHJvdG90eXBlLl9nZXRfc2VsZWN0aW9uPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaT10aGlzLl9nZXRfc2VsZWN0aW9uX2xpc3QodCxlLG4pO2lmKDEhPT1pLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIE9wdGlvbiBWYWx1ZTogVGhlIG9wdGlvbiAnXCIrdCtcIicgY2FuIG9ubHkgYmUgb25lIG9mIHRoZSBmb2xsb3dpbmcgdmFsdWVzOlxcblwiK2UrXCJcXG5Zb3UgcGFzc2VkIGluOiAnXCIrdGhpcy5yYXdfb3B0aW9uc1t0XStcIidcIik7cmV0dXJuIGlbMF19LGkucHJvdG90eXBlLl9nZXRfc2VsZWN0aW9uX2xpc3Q9ZnVuY3Rpb24odCxlLG4pe2lmKCFlfHwwPT09ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiU2VsZWN0aW9uIGxpc3QgY2Fubm90IGJlIGVtcHR5LlwiKTtpZihuPW58fFtlWzBdXSwhdGhpcy5faXNfdmFsaWRfc2VsZWN0aW9uKG4sZSkpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBEZWZhdWx0IFZhbHVlIVwiKTt2YXIgaT10aGlzLl9nZXRfYXJyYXkodCxuKTtpZighdGhpcy5faXNfdmFsaWRfc2VsZWN0aW9uKGksZSkpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBPcHRpb24gVmFsdWU6IFRoZSBvcHRpb24gJ1wiK3QrXCInIGNhbiBjb250YWluIG9ubHkgdGhlIGZvbGxvd2luZyB2YWx1ZXM6XFxuXCIrZStcIlxcbllvdSBwYXNzZWQgaW46ICdcIit0aGlzLnJhd19vcHRpb25zW3RdK1wiJ1wiKTtyZXR1cm4gaX0saS5wcm90b3R5cGUuX2lzX3ZhbGlkX3NlbGVjdGlvbj1mdW5jdGlvbih0LGUpe3JldHVybiB0Lmxlbmd0aCYmZS5sZW5ndGgmJiF0LnNvbWUoKGZ1bmN0aW9uKHQpe3JldHVybi0xPT09ZS5pbmRleE9mKHQpfSkpfSx0LmV4cG9ydHMuT3B0aW9ucz1pLHQuZXhwb3J0cy5ub3JtYWxpemVPcHRzPWEsdC5leHBvcnRzLm1lcmdlT3B0cz1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9big4KS5JbnB1dFNjYW5uZXIscj1uKDkpLlRva2VuaXplcixhPW4oOSkuVE9LRU4sbz1uKDEzKS5EaXJlY3RpdmVzLHM9big0KSx1PW4oMTIpLlBhdHRlcm4sbD1uKDE0KS5UZW1wbGF0YWJsZVBhdHRlcm47ZnVuY3Rpb24gYyh0LGUpe3JldHVybi0xIT09ZS5pbmRleE9mKHQpfXZhciBfPXtTVEFSVF9FWFBSOlwiVEtfU1RBUlRfRVhQUlwiLEVORF9FWFBSOlwiVEtfRU5EX0VYUFJcIixTVEFSVF9CTE9DSzpcIlRLX1NUQVJUX0JMT0NLXCIsRU5EX0JMT0NLOlwiVEtfRU5EX0JMT0NLXCIsV09SRDpcIlRLX1dPUkRcIixSRVNFUlZFRDpcIlRLX1JFU0VSVkVEXCIsU0VNSUNPTE9OOlwiVEtfU0VNSUNPTE9OXCIsU1RSSU5HOlwiVEtfU1RSSU5HXCIsRVFVQUxTOlwiVEtfRVFVQUxTXCIsT1BFUkFUT1I6XCJUS19PUEVSQVRPUlwiLENPTU1BOlwiVEtfQ09NTUFcIixCTE9DS19DT01NRU5UOlwiVEtfQkxPQ0tfQ09NTUVOVFwiLENPTU1FTlQ6XCJUS19DT01NRU5UXCIsRE9UOlwiVEtfRE9UXCIsVU5LTk9XTjpcIlRLX1VOS05PV05cIixTVEFSVDphLlNUQVJULFJBVzphLlJBVyxFT0Y6YS5FT0Z9LGg9bmV3IG8oL1xcL1xcKi8sL1xcKlxcLy8pLHA9LzBbeFhdWzAxMjM0NTY3ODlhYmNkZWZBQkNERUZdKnwwW29PXVswMTIzNDU2N10qfDBbYkJdWzAxXSp8XFxkK258KD86XFwuXFxkK3xcXGQrXFwuP1xcZCopKD86W2VFXVsrLV0/XFxkKyk/LyxkPS9bMC05XS8sZj0vW15cXGRcXC5dLyx2PVwiPj4+ID09PSAhPT0gPDwgJiYgPj0gKiogIT0gPT0gPD0gPj4gfHwgPCAvIC0gKyA+IDogJiAlID8gXiB8ICpcIi5zcGxpdChcIiBcIiksZz1cIj4+Pj0gLi4uID4+PSA8PD0gPT09ID4+PiAhPT0gKio9ID0+IF49IDo6IC89IDw8IDw9ID09ICYmIC09ID49ID4+ICE9IC0tICs9ICoqIHx8ICsrICU9ICY9ICo9IHw9ID0gISA/ID4gPCA6IC8gXiAtICsgKiAmICUgfiB8XCI7Zz0oZz1nLnJlcGxhY2UoL1stW1xcXXt9KCkqKz8uLFxcXFxeJHwjXS9nLFwiXFxcXCQmXCIpKS5yZXBsYWNlKC8gL2csXCJ8XCIpO3ZhciBtLGI9bmV3IFJlZ0V4cChnKSx5PVwiY29udGludWUsdHJ5LHRocm93LHJldHVybix2YXIsbGV0LGNvbnN0LGlmLHN3aXRjaCxjYXNlLGRlZmF1bHQsZm9yLHdoaWxlLGJyZWFrLGZ1bmN0aW9uLGltcG9ydCxleHBvcnRcIi5zcGxpdChcIixcIiksdz15LmNvbmNhdChbXCJkb1wiLFwiaW5cIixcIm9mXCIsXCJlbHNlXCIsXCJnZXRcIixcInNldFwiLFwibmV3XCIsXCJjYXRjaFwiLFwiZmluYWxseVwiLFwidHlwZW9mXCIsXCJ5aWVsZFwiLFwiYXN5bmNcIixcImF3YWl0XCIsXCJmcm9tXCIsXCJhc1wiXSkseD1uZXcgUmVnRXhwKFwiXig/OlwiK3cuam9pbihcInxcIikrXCIpJFwiKSxrPWZ1bmN0aW9uKHQsZSl7ci5jYWxsKHRoaXMsdCxlKSx0aGlzLl9wYXR0ZXJucy53aGl0ZXNwYWNlPXRoaXMuX3BhdHRlcm5zLndoaXRlc3BhY2UubWF0Y2hpbmcoL1xcdTAwQTBcXHUxNjgwXFx1MTgwZVxcdTIwMDAtXFx1MjAwYVxcdTIwMmZcXHUyMDVmXFx1MzAwMFxcdWZlZmYvLnNvdXJjZSwvXFx1MjAyOFxcdTIwMjkvLnNvdXJjZSk7dmFyIG49bmV3IHUodGhpcy5faW5wdXQpLGk9bmV3IGwodGhpcy5faW5wdXQpLnJlYWRfb3B0aW9ucyh0aGlzLl9vcHRpb25zKTt0aGlzLl9fcGF0dGVybnM9e3RlbXBsYXRlOmksaWRlbnRpZmllcjppLnN0YXJ0aW5nX3dpdGgocy5pZGVudGlmaWVyKS5tYXRjaGluZyhzLmlkZW50aWZpZXJNYXRjaCksbnVtYmVyOm4ubWF0Y2hpbmcocCkscHVuY3Q6bi5tYXRjaGluZyhiKSxjb21tZW50Om4uc3RhcnRpbmdfd2l0aCgvXFwvXFwvLykudW50aWwoL1tcXG5cXHJcXHUyMDI4XFx1MjAyOV0vKSxibG9ja19jb21tZW50Om4uc3RhcnRpbmdfd2l0aCgvXFwvXFwqLykudW50aWxfYWZ0ZXIoL1xcKlxcLy8pLGh0bWxfY29tbWVudF9zdGFydDpuLm1hdGNoaW5nKC88IS0tLyksaHRtbF9jb21tZW50X2VuZDpuLm1hdGNoaW5nKC8tLT4vKSxpbmNsdWRlOm4uc3RhcnRpbmdfd2l0aCgvI2luY2x1ZGUvKS51bnRpbF9hZnRlcihzLmxpbmVCcmVhayksc2hlYmFuZzpuLnN0YXJ0aW5nX3dpdGgoLyMhLykudW50aWxfYWZ0ZXIocy5saW5lQnJlYWspLHhtbDpuLm1hdGNoaW5nKC9bXFxzXFxTXSo/PChcXC8/KShbLWEtekEtWjowLTlfLl0rfHtbXFxzXFxTXSs/fXwhXFxbQ0RBVEFcXFtbXFxzXFxTXSo/XFxdXFxdKShcXHMre1tcXHNcXFNdKz99fFxccytbLWEtekEtWjowLTlfLl0rfFxccytbLWEtekEtWjowLTlfLl0rXFxzKj1cXHMqKCdbXiddKid8XCJbXlwiXSpcInx7W1xcc1xcU10rP30pKSpcXHMqKFxcLz8pXFxzKj4vKSxzaW5nbGVfcXVvdGU6aS51bnRpbCgvWydcXFxcXFxuXFxyXFx1MjAyOFxcdTIwMjldLyksZG91YmxlX3F1b3RlOmkudW50aWwoL1tcIlxcXFxcXG5cXHJcXHUyMDI4XFx1MjAyOV0vKSx0ZW1wbGF0ZV90ZXh0OmkudW50aWwoL1tgXFxcXCRdLyksdGVtcGxhdGVfZXhwcmVzc2lvbjppLnVudGlsKC9bYH1cXFxcXS8pfX07KGsucHJvdG90eXBlPW5ldyByKS5faXNfY29tbWVudD1mdW5jdGlvbih0KXtyZXR1cm4gdC50eXBlPT09Xy5DT01NRU5UfHx0LnR5cGU9PT1fLkJMT0NLX0NPTU1FTlR8fHQudHlwZT09PV8uVU5LTk9XTn0say5wcm90b3R5cGUuX2lzX29wZW5pbmc9ZnVuY3Rpb24odCl7cmV0dXJuIHQudHlwZT09PV8uU1RBUlRfQkxPQ0t8fHQudHlwZT09PV8uU1RBUlRfRVhQUn0say5wcm90b3R5cGUuX2lzX2Nsb3Npbmc9ZnVuY3Rpb24odCxlKXtyZXR1cm4odC50eXBlPT09Xy5FTkRfQkxPQ0t8fHQudHlwZT09PV8uRU5EX0VYUFIpJiZlJiYoXCJdXCI9PT10LnRleHQmJlwiW1wiPT09ZS50ZXh0fHxcIilcIj09PXQudGV4dCYmXCIoXCI9PT1lLnRleHR8fFwifVwiPT09dC50ZXh0JiZcIntcIj09PWUudGV4dCl9LGsucHJvdG90eXBlLl9yZXNldD1mdW5jdGlvbigpe209ITF9LGsucHJvdG90eXBlLl9nZXRfbmV4dF90b2tlbj1mdW5jdGlvbih0LGUpe3ZhciBuPW51bGw7dGhpcy5fcmVhZFdoaXRlc3BhY2UoKTt2YXIgaT10aGlzLl9pbnB1dC5wZWVrKCk7cmV0dXJuIG51bGw9PT1pP3RoaXMuX2NyZWF0ZV90b2tlbihfLkVPRixcIlwiKTpuPShuPShuPShuPShuPShuPShuPShuPShuPW58fHRoaXMuX3JlYWRfbm9uX2phdmFzY3JpcHQoaSkpfHx0aGlzLl9yZWFkX3N0cmluZyhpKSl8fHRoaXMuX3JlYWRfd29yZCh0KSl8fHRoaXMuX3JlYWRfc2luZ2xlcyhpKSl8fHRoaXMuX3JlYWRfY29tbWVudChpKSl8fHRoaXMuX3JlYWRfcmVnZXhwKGksdCkpfHx0aGlzLl9yZWFkX3htbChpLHQpKXx8dGhpcy5fcmVhZF9wdW5jdHVhdGlvbigpKXx8dGhpcy5fY3JlYXRlX3Rva2VuKF8uVU5LTk9XTix0aGlzLl9pbnB1dC5uZXh0KCkpfSxrLnByb3RvdHlwZS5fcmVhZF93b3JkPWZ1bmN0aW9uKHQpe3ZhciBlO3JldHVyblwiXCIhPT0oZT10aGlzLl9fcGF0dGVybnMuaWRlbnRpZmllci5yZWFkKCkpPyhlPWUucmVwbGFjZShzLmFsbExpbmVCcmVha3MsXCJcXG5cIiksdC50eXBlIT09Xy5ET1QmJih0LnR5cGUhPT1fLlJFU0VSVkVEfHxcInNldFwiIT09dC50ZXh0JiZcImdldFwiIT09dC50ZXh0KSYmeC50ZXN0KGUpP1wiaW5cIj09PWV8fFwib2ZcIj09PWU/dGhpcy5fY3JlYXRlX3Rva2VuKF8uT1BFUkFUT1IsZSk6dGhpcy5fY3JlYXRlX3Rva2VuKF8uUkVTRVJWRUQsZSk6dGhpcy5fY3JlYXRlX3Rva2VuKF8uV09SRCxlKSk6XCJcIiE9PShlPXRoaXMuX19wYXR0ZXJucy5udW1iZXIucmVhZCgpKT90aGlzLl9jcmVhdGVfdG9rZW4oXy5XT1JELGUpOnZvaWQgMH0say5wcm90b3R5cGUuX3JlYWRfc2luZ2xlcz1mdW5jdGlvbih0KXt2YXIgZT1udWxsO3JldHVyblwiKFwiPT09dHx8XCJbXCI9PT10P2U9dGhpcy5fY3JlYXRlX3Rva2VuKF8uU1RBUlRfRVhQUix0KTpcIilcIj09PXR8fFwiXVwiPT09dD9lPXRoaXMuX2NyZWF0ZV90b2tlbihfLkVORF9FWFBSLHQpOlwie1wiPT09dD9lPXRoaXMuX2NyZWF0ZV90b2tlbihfLlNUQVJUX0JMT0NLLHQpOlwifVwiPT09dD9lPXRoaXMuX2NyZWF0ZV90b2tlbihfLkVORF9CTE9DSyx0KTpcIjtcIj09PXQ/ZT10aGlzLl9jcmVhdGVfdG9rZW4oXy5TRU1JQ09MT04sdCk6XCIuXCI9PT10JiZmLnRlc3QodGhpcy5faW5wdXQucGVlaygxKSk/ZT10aGlzLl9jcmVhdGVfdG9rZW4oXy5ET1QsdCk6XCIsXCI9PT10JiYoZT10aGlzLl9jcmVhdGVfdG9rZW4oXy5DT01NQSx0KSksZSYmdGhpcy5faW5wdXQubmV4dCgpLGV9LGsucHJvdG90eXBlLl9yZWFkX3B1bmN0dWF0aW9uPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fX3BhdHRlcm5zLnB1bmN0LnJlYWQoKTtpZihcIlwiIT09dClyZXR1cm5cIj1cIj09PXQ/dGhpcy5fY3JlYXRlX3Rva2VuKF8uRVFVQUxTLHQpOnRoaXMuX2NyZWF0ZV90b2tlbihfLk9QRVJBVE9SLHQpfSxrLnByb3RvdHlwZS5fcmVhZF9ub25famF2YXNjcmlwdD1mdW5jdGlvbih0KXt2YXIgZT1cIlwiO2lmKFwiI1wiPT09dCl7aWYodGhpcy5faXNfZmlyc3RfdG9rZW4oKSYmKGU9dGhpcy5fX3BhdHRlcm5zLnNoZWJhbmcucmVhZCgpKSlyZXR1cm4gdGhpcy5fY3JlYXRlX3Rva2VuKF8uVU5LTk9XTixlLnRyaW0oKStcIlxcblwiKTtpZihlPXRoaXMuX19wYXR0ZXJucy5pbmNsdWRlLnJlYWQoKSlyZXR1cm4gdGhpcy5fY3JlYXRlX3Rva2VuKF8uVU5LTk9XTixlLnRyaW0oKStcIlxcblwiKTt0PXRoaXMuX2lucHV0Lm5leHQoKTt2YXIgbj1cIiNcIjtpZih0aGlzLl9pbnB1dC5oYXNOZXh0KCkmJnRoaXMuX2lucHV0LnRlc3RDaGFyKGQpKXtkb3tuKz10PXRoaXMuX2lucHV0Lm5leHQoKX13aGlsZSh0aGlzLl9pbnB1dC5oYXNOZXh0KCkmJlwiI1wiIT09dCYmXCI9XCIhPT10KTtyZXR1cm5cIiNcIj09PXR8fChcIltcIj09PXRoaXMuX2lucHV0LnBlZWsoKSYmXCJdXCI9PT10aGlzLl9pbnB1dC5wZWVrKDEpPyhuKz1cIltdXCIsdGhpcy5faW5wdXQubmV4dCgpLHRoaXMuX2lucHV0Lm5leHQoKSk6XCJ7XCI9PT10aGlzLl9pbnB1dC5wZWVrKCkmJlwifVwiPT09dGhpcy5faW5wdXQucGVlaygxKSYmKG4rPVwie31cIix0aGlzLl9pbnB1dC5uZXh0KCksdGhpcy5faW5wdXQubmV4dCgpKSksdGhpcy5fY3JlYXRlX3Rva2VuKF8uV09SRCxuKX10aGlzLl9pbnB1dC5iYWNrKCl9ZWxzZSBpZihcIjxcIj09PXQmJnRoaXMuX2lzX2ZpcnN0X3Rva2VuKCkpe2lmKGU9dGhpcy5fX3BhdHRlcm5zLmh0bWxfY29tbWVudF9zdGFydC5yZWFkKCkpe2Zvcig7dGhpcy5faW5wdXQuaGFzTmV4dCgpJiYhdGhpcy5faW5wdXQudGVzdENoYXIocy5uZXdsaW5lKTspZSs9dGhpcy5faW5wdXQubmV4dCgpO3JldHVybiBtPSEwLHRoaXMuX2NyZWF0ZV90b2tlbihfLkNPTU1FTlQsZSl9fWVsc2UgaWYobSYmXCItXCI9PT10JiYoZT10aGlzLl9fcGF0dGVybnMuaHRtbF9jb21tZW50X2VuZC5yZWFkKCkpKXJldHVybiBtPSExLHRoaXMuX2NyZWF0ZV90b2tlbihfLkNPTU1FTlQsZSk7cmV0dXJuIG51bGx9LGsucHJvdG90eXBlLl9yZWFkX2NvbW1lbnQ9ZnVuY3Rpb24odCl7dmFyIGU9bnVsbDtpZihcIi9cIj09PXQpe3ZhciBuPVwiXCI7aWYoXCIqXCI9PT10aGlzLl9pbnB1dC5wZWVrKDEpKXtuPXRoaXMuX19wYXR0ZXJucy5ibG9ja19jb21tZW50LnJlYWQoKTt2YXIgaT1oLmdldF9kaXJlY3RpdmVzKG4pO2kmJlwic3RhcnRcIj09PWkuaWdub3JlJiYobis9aC5yZWFkSWdub3JlZCh0aGlzLl9pbnB1dCkpLG49bi5yZXBsYWNlKHMuYWxsTGluZUJyZWFrcyxcIlxcblwiKSwoZT10aGlzLl9jcmVhdGVfdG9rZW4oXy5CTE9DS19DT01NRU5ULG4pKS5kaXJlY3RpdmVzPWl9ZWxzZVwiL1wiPT09dGhpcy5faW5wdXQucGVlaygxKSYmKG49dGhpcy5fX3BhdHRlcm5zLmNvbW1lbnQucmVhZCgpLGU9dGhpcy5fY3JlYXRlX3Rva2VuKF8uQ09NTUVOVCxuKSl9cmV0dXJuIGV9LGsucHJvdG90eXBlLl9yZWFkX3N0cmluZz1mdW5jdGlvbih0KXtpZihcImBcIj09PXR8fFwiJ1wiPT09dHx8J1wiJz09PXQpe3ZhciBlPXRoaXMuX2lucHV0Lm5leHQoKTtyZXR1cm4gdGhpcy5oYXNfY2hhcl9lc2NhcGVzPSExLGUrPVwiYFwiPT09dD90aGlzLl9yZWFkX3N0cmluZ19yZWN1cnNpdmUoXCJgXCIsITAsXCIke1wiKTp0aGlzLl9yZWFkX3N0cmluZ19yZWN1cnNpdmUodCksdGhpcy5oYXNfY2hhcl9lc2NhcGVzJiZ0aGlzLl9vcHRpb25zLnVuZXNjYXBlX3N0cmluZ3MmJihlPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1cIlwiLG49MCxyPW5ldyBpKHQpLGE9bnVsbDtyLmhhc05leHQoKTspaWYoKGE9ci5tYXRjaCgvKFtcXHNdfFteXFxcXF18XFxcXFxcXFwpKy9nKSkmJihlKz1hWzBdKSxcIlxcXFxcIj09PXIucGVlaygpKXtpZihyLm5leHQoKSxcInhcIj09PXIucGVlaygpKWE9ci5tYXRjaCgveChbMC05QS1GYS1mXXsyfSkvZyk7ZWxzZXtpZihcInVcIiE9PXIucGVlaygpKXtlKz1cIlxcXFxcIixyLmhhc05leHQoKSYmKGUrPXIubmV4dCgpKTtjb250aW51ZX1hPXIubWF0Y2goL3UoWzAtOUEtRmEtZl17NH0pL2cpfWlmKCFhKXJldHVybiB0O2lmKChuPXBhcnNlSW50KGFbMV0sMTYpKT4xMjYmJm48PTI1NSYmMD09PWFbMF0uaW5kZXhPZihcInhcIikpcmV0dXJuIHQ7aWYobj49MCYmbjwzMil7ZSs9XCJcXFxcXCIrYVswXTtjb250aW51ZX1lKz0zND09PW58fDM5PT09bnx8OTI9PT1uP1wiXFxcXFwiK1N0cmluZy5mcm9tQ2hhckNvZGUobik6U3RyaW5nLmZyb21DaGFyQ29kZShuKX1yZXR1cm4gZX0oZSkpLHRoaXMuX2lucHV0LnBlZWsoKT09PXQmJihlKz10aGlzLl9pbnB1dC5uZXh0KCkpLGU9ZS5yZXBsYWNlKHMuYWxsTGluZUJyZWFrcyxcIlxcblwiKSx0aGlzLl9jcmVhdGVfdG9rZW4oXy5TVFJJTkcsZSl9cmV0dXJuIG51bGx9LGsucHJvdG90eXBlLl9hbGxvd19yZWdleHBfb3JfeG1sPWZ1bmN0aW9uKHQpe3JldHVybiB0LnR5cGU9PT1fLlJFU0VSVkVEJiZjKHQudGV4dCxbXCJyZXR1cm5cIixcImNhc2VcIixcInRocm93XCIsXCJlbHNlXCIsXCJkb1wiLFwidHlwZW9mXCIsXCJ5aWVsZFwiXSl8fHQudHlwZT09PV8uRU5EX0VYUFImJlwiKVwiPT09dC50ZXh0JiZ0Lm9wZW5lZC5wcmV2aW91cy50eXBlPT09Xy5SRVNFUlZFRCYmYyh0Lm9wZW5lZC5wcmV2aW91cy50ZXh0LFtcImlmXCIsXCJ3aGlsZVwiLFwiZm9yXCJdKXx8Yyh0LnR5cGUsW18uQ09NTUVOVCxfLlNUQVJUX0VYUFIsXy5TVEFSVF9CTE9DSyxfLlNUQVJULF8uRU5EX0JMT0NLLF8uT1BFUkFUT1IsXy5FUVVBTFMsXy5FT0YsXy5TRU1JQ09MT04sXy5DT01NQV0pfSxrLnByb3RvdHlwZS5fcmVhZF9yZWdleHA9ZnVuY3Rpb24odCxlKXtpZihcIi9cIj09PXQmJnRoaXMuX2FsbG93X3JlZ2V4cF9vcl94bWwoZSkpe2Zvcih2YXIgbj10aGlzLl9pbnB1dC5uZXh0KCksaT0hMSxyPSExO3RoaXMuX2lucHV0Lmhhc05leHQoKSYmKGl8fHJ8fHRoaXMuX2lucHV0LnBlZWsoKSE9PXQpJiYhdGhpcy5faW5wdXQudGVzdENoYXIocy5uZXdsaW5lKTspbis9dGhpcy5faW5wdXQucGVlaygpLGk/aT0hMTooaT1cIlxcXFxcIj09PXRoaXMuX2lucHV0LnBlZWsoKSxcIltcIj09PXRoaXMuX2lucHV0LnBlZWsoKT9yPSEwOlwiXVwiPT09dGhpcy5faW5wdXQucGVlaygpJiYocj0hMSkpLHRoaXMuX2lucHV0Lm5leHQoKTtyZXR1cm4gdGhpcy5faW5wdXQucGVlaygpPT09dCYmKG4rPXRoaXMuX2lucHV0Lm5leHQoKSxuKz10aGlzLl9pbnB1dC5yZWFkKHMuaWRlbnRpZmllcikpLHRoaXMuX2NyZWF0ZV90b2tlbihfLlNUUklORyxuKX1yZXR1cm4gbnVsbH0say5wcm90b3R5cGUuX3JlYWRfeG1sPWZ1bmN0aW9uKHQsZSl7aWYodGhpcy5fb3B0aW9ucy5lNHgmJlwiPFwiPT09dCYmdGhpcy5fYWxsb3dfcmVnZXhwX29yX3htbChlKSl7dmFyIG49XCJcIixpPXRoaXMuX19wYXR0ZXJucy54bWwucmVhZF9tYXRjaCgpO2lmKGkpe2Zvcih2YXIgcj1pWzJdLnJlcGxhY2UoL157XFxzKy8sXCJ7XCIpLnJlcGxhY2UoL1xccyt9JC8sXCJ9XCIpLGE9MD09PXIuaW5kZXhPZihcIntcIiksbz0wO2k7KXt2YXIgdT0hIWlbMV0sbD1pWzJdO2lmKCEoaVtpLmxlbmd0aC0xXXx8XCIhW0NEQVRBW1wiPT09bC5zbGljZSgwLDgpKSYmKGw9PT1yfHxhJiZsLnJlcGxhY2UoL157XFxzKy8sXCJ7XCIpLnJlcGxhY2UoL1xccyt9JC8sXCJ9XCIpKSYmKHU/LS1vOisrbyksbis9aVswXSxvPD0wKWJyZWFrO2k9dGhpcy5fX3BhdHRlcm5zLnhtbC5yZWFkX21hdGNoKCl9cmV0dXJuIGl8fChuKz10aGlzLl9pbnB1dC5tYXRjaCgvW1xcc1xcU10qL2cpWzBdKSxuPW4ucmVwbGFjZShzLmFsbExpbmVCcmVha3MsXCJcXG5cIiksdGhpcy5fY3JlYXRlX3Rva2VuKF8uU1RSSU5HLG4pfX1yZXR1cm4gbnVsbH0say5wcm90b3R5cGUuX3JlYWRfc3RyaW5nX3JlY3Vyc2l2ZT1mdW5jdGlvbih0LGUsbil7dmFyIGkscjtcIidcIj09PXQ/cj10aGlzLl9fcGF0dGVybnMuc2luZ2xlX3F1b3RlOidcIic9PT10P3I9dGhpcy5fX3BhdHRlcm5zLmRvdWJsZV9xdW90ZTpcImBcIj09PXQ/cj10aGlzLl9fcGF0dGVybnMudGVtcGxhdGVfdGV4dDpcIn1cIj09PXQmJihyPXRoaXMuX19wYXR0ZXJucy50ZW1wbGF0ZV9leHByZXNzaW9uKTtmb3IodmFyIGE9ci5yZWFkKCksbz1cIlwiO3RoaXMuX2lucHV0Lmhhc05leHQoKTspe2lmKChvPXRoaXMuX2lucHV0Lm5leHQoKSk9PT10fHwhZSYmcy5uZXdsaW5lLnRlc3Qobykpe3RoaXMuX2lucHV0LmJhY2soKTticmVha31cIlxcXFxcIj09PW8mJnRoaXMuX2lucHV0Lmhhc05leHQoKT8oXCJ4XCI9PT0oaT10aGlzLl9pbnB1dC5wZWVrKCkpfHxcInVcIj09PWk/dGhpcy5oYXNfY2hhcl9lc2NhcGVzPSEwOlwiXFxyXCI9PT1pJiZcIlxcblwiPT09dGhpcy5faW5wdXQucGVlaygxKSYmdGhpcy5faW5wdXQubmV4dCgpLG8rPXRoaXMuX2lucHV0Lm5leHQoKSk6biYmKFwiJHtcIj09PW4mJlwiJFwiPT09byYmXCJ7XCI9PT10aGlzLl9pbnB1dC5wZWVrKCkmJihvKz10aGlzLl9pbnB1dC5uZXh0KCkpLG49PT1vJiYobys9XCJgXCI9PT10P3RoaXMuX3JlYWRfc3RyaW5nX3JlY3Vyc2l2ZShcIn1cIixlLFwiYFwiKTp0aGlzLl9yZWFkX3N0cmluZ19yZWN1cnNpdmUoXCJgXCIsZSxcIiR7XCIpLHRoaXMuX2lucHV0Lmhhc05leHQoKSYmKG8rPXRoaXMuX2lucHV0Lm5leHQoKSkpKSxhKz1vKz1yLnJlYWQoKX1yZXR1cm4gYX0sdC5leHBvcnRzLlRva2VuaXplcj1rLHQuZXhwb3J0cy5UT0tFTj1fLHQuZXhwb3J0cy5wb3NpdGlvbmFibGVfb3BlcmF0b3JzPXYuc2xpY2UoKSx0LmV4cG9ydHMubGluZV9zdGFydGVycz15LnNsaWNlKCl9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1SZWdFeHAucHJvdG90eXBlLmhhc093blByb3BlcnR5KFwic3RpY2t5XCIpO2Z1bmN0aW9uIHIodCl7dGhpcy5fX2lucHV0PXR8fFwiXCIsdGhpcy5fX2lucHV0X2xlbmd0aD10aGlzLl9faW5wdXQubGVuZ3RoLHRoaXMuX19wb3NpdGlvbj0wfXIucHJvdG90eXBlLnJlc3RhcnQ9ZnVuY3Rpb24oKXt0aGlzLl9fcG9zaXRpb249MH0sci5wcm90b3R5cGUuYmFjaz1mdW5jdGlvbigpe3RoaXMuX19wb3NpdGlvbj4wJiYodGhpcy5fX3Bvc2l0aW9uLT0xKX0sci5wcm90b3R5cGUuaGFzTmV4dD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9fcG9zaXRpb248dGhpcy5fX2lucHV0X2xlbmd0aH0sci5wcm90b3R5cGUubmV4dD1mdW5jdGlvbigpe3ZhciB0PW51bGw7cmV0dXJuIHRoaXMuaGFzTmV4dCgpJiYodD10aGlzLl9faW5wdXQuY2hhckF0KHRoaXMuX19wb3NpdGlvbiksdGhpcy5fX3Bvc2l0aW9uKz0xKSx0fSxyLnByb3RvdHlwZS5wZWVrPWZ1bmN0aW9uKHQpe3ZhciBlPW51bGw7cmV0dXJuIHQ9dHx8MCwodCs9dGhpcy5fX3Bvc2l0aW9uKT49MCYmdDx0aGlzLl9faW5wdXRfbGVuZ3RoJiYoZT10aGlzLl9faW5wdXQuY2hhckF0KHQpKSxlfSxyLnByb3RvdHlwZS5fX21hdGNoPWZ1bmN0aW9uKHQsZSl7dC5sYXN0SW5kZXg9ZTt2YXIgbj10LmV4ZWModGhpcy5fX2lucHV0KTtyZXR1cm4hbnx8aSYmdC5zdGlja3l8fG4uaW5kZXghPT1lJiYobj1udWxsKSxufSxyLnByb3RvdHlwZS50ZXN0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGU9ZXx8MCwoZSs9dGhpcy5fX3Bvc2l0aW9uKT49MCYmZTx0aGlzLl9faW5wdXRfbGVuZ3RoJiYhIXRoaXMuX19tYXRjaCh0LGUpfSxyLnByb3RvdHlwZS50ZXN0Q2hhcj1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMucGVlayhlKTtyZXR1cm4gdC5sYXN0SW5kZXg9MCxudWxsIT09biYmdC50ZXN0KG4pfSxyLnByb3RvdHlwZS5tYXRjaD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9fbWF0Y2godCx0aGlzLl9fcG9zaXRpb24pO3JldHVybiBlP3RoaXMuX19wb3NpdGlvbis9ZVswXS5sZW5ndGg6ZT1udWxsLGV9LHIucHJvdG90eXBlLnJlYWQ9ZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI9XCJcIjtyZXR1cm4gdCYmKGk9dGhpcy5tYXRjaCh0KSkmJihyKz1pWzBdKSwhZXx8IWkmJnR8fChyKz10aGlzLnJlYWRVbnRpbChlLG4pKSxyfSxyLnByb3RvdHlwZS5yZWFkVW50aWw9ZnVuY3Rpb24odCxlKXt2YXIgbixpPXRoaXMuX19wb3NpdGlvbjt0Lmxhc3RJbmRleD10aGlzLl9fcG9zaXRpb247dmFyIHI9dC5leGVjKHRoaXMuX19pbnB1dCk7cmV0dXJuIHI/KGk9ci5pbmRleCxlJiYoaSs9clswXS5sZW5ndGgpKTppPXRoaXMuX19pbnB1dF9sZW5ndGgsbj10aGlzLl9faW5wdXQuc3Vic3RyaW5nKHRoaXMuX19wb3NpdGlvbixpKSx0aGlzLl9fcG9zaXRpb249aSxufSxyLnByb3RvdHlwZS5yZWFkVW50aWxBZnRlcj1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5yZWFkVW50aWwodCwhMCl9LHIucHJvdG90eXBlLmdldF9yZWdleHA9ZnVuY3Rpb24odCxlKXt2YXIgbj1udWxsLHI9XCJnXCI7cmV0dXJuIGUmJmkmJihyPVwieVwiKSxcInN0cmluZ1wiPT10eXBlb2YgdCYmXCJcIiE9PXQ/bj1uZXcgUmVnRXhwKHQscik6dCYmKG49bmV3IFJlZ0V4cCh0LnNvdXJjZSxyKSksbn0sci5wcm90b3R5cGUuZ2V0X2xpdGVyYWxfcmVnZXhwPWZ1bmN0aW9uKHQpe3JldHVybiBSZWdFeHAodC5yZXBsYWNlKC9bLVxcL1xcXFxeJCorPy4oKXxbXFxde31dL2csXCJcXFxcJCZcIikpfSxyLnByb3RvdHlwZS5wZWVrVW50aWxBZnRlcj1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9fcG9zaXRpb24sbj10aGlzLnJlYWRVbnRpbEFmdGVyKHQpO3JldHVybiB0aGlzLl9fcG9zaXRpb249ZSxufSxyLnByb3RvdHlwZS5sb29rQmFjaz1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9fcG9zaXRpb24tMTtyZXR1cm4gZT49dC5sZW5ndGgmJnRoaXMuX19pbnB1dC5zdWJzdHJpbmcoZS10Lmxlbmd0aCxlKS50b0xvd2VyQ2FzZSgpPT09dH0sdC5leHBvcnRzLklucHV0U2Nhbm5lcj1yfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9big4KS5JbnB1dFNjYW5uZXIscj1uKDMpLlRva2VuLGE9bigxMCkuVG9rZW5TdHJlYW0sbz1uKDExKS5XaGl0ZXNwYWNlUGF0dGVybixzPXtTVEFSVDpcIlRLX1NUQVJUXCIsUkFXOlwiVEtfUkFXXCIsRU9GOlwiVEtfRU9GXCJ9LHU9ZnVuY3Rpb24odCxlKXt0aGlzLl9pbnB1dD1uZXcgaSh0KSx0aGlzLl9vcHRpb25zPWV8fHt9LHRoaXMuX190b2tlbnM9bnVsbCx0aGlzLl9wYXR0ZXJucz17fSx0aGlzLl9wYXR0ZXJucy53aGl0ZXNwYWNlPW5ldyBvKHRoaXMuX2lucHV0KX07dS5wcm90b3R5cGUudG9rZW5pemU9ZnVuY3Rpb24oKXt2YXIgdDt0aGlzLl9pbnB1dC5yZXN0YXJ0KCksdGhpcy5fX3Rva2Vucz1uZXcgYSx0aGlzLl9yZXNldCgpO2Zvcih2YXIgZT1uZXcgcihzLlNUQVJULFwiXCIpLG49bnVsbCxpPVtdLG89bmV3IGE7ZS50eXBlIT09cy5FT0Y7KXtmb3IodD10aGlzLl9nZXRfbmV4dF90b2tlbihlLG4pO3RoaXMuX2lzX2NvbW1lbnQodCk7KW8uYWRkKHQpLHQ9dGhpcy5fZ2V0X25leHRfdG9rZW4oZSxuKTtvLmlzRW1wdHkoKXx8KHQuY29tbWVudHNfYmVmb3JlPW8sbz1uZXcgYSksdC5wYXJlbnQ9bix0aGlzLl9pc19vcGVuaW5nKHQpPyhpLnB1c2gobiksbj10KTpuJiZ0aGlzLl9pc19jbG9zaW5nKHQsbikmJih0Lm9wZW5lZD1uLG4uY2xvc2VkPXQsbj1pLnBvcCgpLHQucGFyZW50PW4pLHQucHJldmlvdXM9ZSxlLm5leHQ9dCx0aGlzLl9fdG9rZW5zLmFkZCh0KSxlPXR9cmV0dXJuIHRoaXMuX190b2tlbnN9LHUucHJvdG90eXBlLl9pc19maXJzdF90b2tlbj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9fdG9rZW5zLmlzRW1wdHkoKX0sdS5wcm90b3R5cGUuX3Jlc2V0PWZ1bmN0aW9uKCl7fSx1LnByb3RvdHlwZS5fZ2V0X25leHRfdG9rZW49ZnVuY3Rpb24odCxlKXt0aGlzLl9yZWFkV2hpdGVzcGFjZSgpO3ZhciBuPXRoaXMuX2lucHV0LnJlYWQoLy4rL2cpO3JldHVybiBuP3RoaXMuX2NyZWF0ZV90b2tlbihzLlJBVyxuKTp0aGlzLl9jcmVhdGVfdG9rZW4ocy5FT0YsXCJcIil9LHUucHJvdG90eXBlLl9pc19jb21tZW50PWZ1bmN0aW9uKHQpe3JldHVybiExfSx1LnByb3RvdHlwZS5faXNfb3BlbmluZz1mdW5jdGlvbih0KXtyZXR1cm4hMX0sdS5wcm90b3R5cGUuX2lzX2Nsb3Npbmc9ZnVuY3Rpb24odCxlKXtyZXR1cm4hMX0sdS5wcm90b3R5cGUuX2NyZWF0ZV90b2tlbj1mdW5jdGlvbih0LGUpe3JldHVybiBuZXcgcih0LGUsdGhpcy5fcGF0dGVybnMud2hpdGVzcGFjZS5uZXdsaW5lX2NvdW50LHRoaXMuX3BhdHRlcm5zLndoaXRlc3BhY2Uud2hpdGVzcGFjZV9iZWZvcmVfdG9rZW4pfSx1LnByb3RvdHlwZS5fcmVhZFdoaXRlc3BhY2U9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcGF0dGVybnMud2hpdGVzcGFjZS5yZWFkKCl9LHQuZXhwb3J0cy5Ub2tlbml6ZXI9dSx0LmV4cG9ydHMuVE9LRU49c30sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGkodCl7dGhpcy5fX3Rva2Vucz1bXSx0aGlzLl9fdG9rZW5zX2xlbmd0aD10aGlzLl9fdG9rZW5zLmxlbmd0aCx0aGlzLl9fcG9zaXRpb249MCx0aGlzLl9fcGFyZW50X3Rva2VuPXR9aS5wcm90b3R5cGUucmVzdGFydD1mdW5jdGlvbigpe3RoaXMuX19wb3NpdGlvbj0wfSxpLnByb3RvdHlwZS5pc0VtcHR5PWZ1bmN0aW9uKCl7cmV0dXJuIDA9PT10aGlzLl9fdG9rZW5zX2xlbmd0aH0saS5wcm90b3R5cGUuaGFzTmV4dD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9fcG9zaXRpb248dGhpcy5fX3Rva2Vuc19sZW5ndGh9LGkucHJvdG90eXBlLm5leHQ9ZnVuY3Rpb24oKXt2YXIgdD1udWxsO3JldHVybiB0aGlzLmhhc05leHQoKSYmKHQ9dGhpcy5fX3Rva2Vuc1t0aGlzLl9fcG9zaXRpb25dLHRoaXMuX19wb3NpdGlvbis9MSksdH0saS5wcm90b3R5cGUucGVlaz1mdW5jdGlvbih0KXt2YXIgZT1udWxsO3JldHVybiB0PXR8fDAsKHQrPXRoaXMuX19wb3NpdGlvbik+PTAmJnQ8dGhpcy5fX3Rva2Vuc19sZW5ndGgmJihlPXRoaXMuX190b2tlbnNbdF0pLGV9LGkucHJvdG90eXBlLmFkZD1mdW5jdGlvbih0KXt0aGlzLl9fcGFyZW50X3Rva2VuJiYodC5wYXJlbnQ9dGhpcy5fX3BhcmVudF90b2tlbiksdGhpcy5fX3Rva2Vucy5wdXNoKHQpLHRoaXMuX190b2tlbnNfbGVuZ3RoKz0xfSx0LmV4cG9ydHMuVG9rZW5TdHJlYW09aX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBpPW4oMTIpLlBhdHRlcm47ZnVuY3Rpb24gcih0LGUpe2kuY2FsbCh0aGlzLHQsZSksZT90aGlzLl9saW5lX3JlZ2V4cD10aGlzLl9pbnB1dC5nZXRfcmVnZXhwKGUuX2xpbmVfcmVnZXhwKTp0aGlzLl9fc2V0X3doaXRlc3BhY2VfcGF0dGVybnMoXCJcIixcIlwiKSx0aGlzLm5ld2xpbmVfY291bnQ9MCx0aGlzLndoaXRlc3BhY2VfYmVmb3JlX3Rva2VuPVwiXCJ9ci5wcm90b3R5cGU9bmV3IGksci5wcm90b3R5cGUuX19zZXRfd2hpdGVzcGFjZV9wYXR0ZXJucz1mdW5jdGlvbih0LGUpe3QrPVwiXFxcXHQgXCIsZSs9XCJcXFxcblxcXFxyXCIsdGhpcy5fbWF0Y2hfcGF0dGVybj10aGlzLl9pbnB1dC5nZXRfcmVnZXhwKFwiW1wiK3QrZStcIl0rXCIsITApLHRoaXMuX25ld2xpbmVfcmVnZXhwPXRoaXMuX2lucHV0LmdldF9yZWdleHAoXCJcXFxcclxcXFxufFtcIitlK1wiXVwiKX0sci5wcm90b3R5cGUucmVhZD1mdW5jdGlvbigpe3RoaXMubmV3bGluZV9jb3VudD0wLHRoaXMud2hpdGVzcGFjZV9iZWZvcmVfdG9rZW49XCJcIjt2YXIgdD10aGlzLl9pbnB1dC5yZWFkKHRoaXMuX21hdGNoX3BhdHRlcm4pO2lmKFwiIFwiPT09dCl0aGlzLndoaXRlc3BhY2VfYmVmb3JlX3Rva2VuPVwiIFwiO2Vsc2UgaWYodCl7dmFyIGU9dGhpcy5fX3NwbGl0KHRoaXMuX25ld2xpbmVfcmVnZXhwLHQpO3RoaXMubmV3bGluZV9jb3VudD1lLmxlbmd0aC0xLHRoaXMud2hpdGVzcGFjZV9iZWZvcmVfdG9rZW49ZVt0aGlzLm5ld2xpbmVfY291bnRdfXJldHVybiB0fSxyLnByb3RvdHlwZS5tYXRjaGluZz1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuX2NyZWF0ZSgpO3JldHVybiBuLl9fc2V0X3doaXRlc3BhY2VfcGF0dGVybnModCxlKSxuLl91cGRhdGUoKSxufSxyLnByb3RvdHlwZS5fY3JlYXRlPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyByKHRoaXMuX2lucHV0LHRoaXMpfSxyLnByb3RvdHlwZS5fX3NwbGl0PWZ1bmN0aW9uKHQsZSl7dC5sYXN0SW5kZXg9MDtmb3IodmFyIG49MCxpPVtdLHI9dC5leGVjKGUpO3I7KWkucHVzaChlLnN1YnN0cmluZyhuLHIuaW5kZXgpKSxuPXIuaW5kZXgrclswXS5sZW5ndGgscj10LmV4ZWMoZSk7cmV0dXJuIG48ZS5sZW5ndGg/aS5wdXNoKGUuc3Vic3RyaW5nKG4sZS5sZW5ndGgpKTppLnB1c2goXCJcIiksaX0sdC5leHBvcnRzLldoaXRlc3BhY2VQYXR0ZXJuPXJ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBpKHQsZSl7dGhpcy5faW5wdXQ9dCx0aGlzLl9zdGFydGluZ19wYXR0ZXJuPW51bGwsdGhpcy5fbWF0Y2hfcGF0dGVybj1udWxsLHRoaXMuX3VudGlsX3BhdHRlcm49bnVsbCx0aGlzLl91bnRpbF9hZnRlcj0hMSxlJiYodGhpcy5fc3RhcnRpbmdfcGF0dGVybj10aGlzLl9pbnB1dC5nZXRfcmVnZXhwKGUuX3N0YXJ0aW5nX3BhdHRlcm4sITApLHRoaXMuX21hdGNoX3BhdHRlcm49dGhpcy5faW5wdXQuZ2V0X3JlZ2V4cChlLl9tYXRjaF9wYXR0ZXJuLCEwKSx0aGlzLl91bnRpbF9wYXR0ZXJuPXRoaXMuX2lucHV0LmdldF9yZWdleHAoZS5fdW50aWxfcGF0dGVybiksdGhpcy5fdW50aWxfYWZ0ZXI9ZS5fdW50aWxfYWZ0ZXIpfWkucHJvdG90eXBlLnJlYWQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9pbnB1dC5yZWFkKHRoaXMuX3N0YXJ0aW5nX3BhdHRlcm4pO3JldHVybiB0aGlzLl9zdGFydGluZ19wYXR0ZXJuJiYhdHx8KHQrPXRoaXMuX2lucHV0LnJlYWQodGhpcy5fbWF0Y2hfcGF0dGVybix0aGlzLl91bnRpbF9wYXR0ZXJuLHRoaXMuX3VudGlsX2FmdGVyKSksdH0saS5wcm90b3R5cGUucmVhZF9tYXRjaD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9pbnB1dC5tYXRjaCh0aGlzLl9tYXRjaF9wYXR0ZXJuKX0saS5wcm90b3R5cGUudW50aWxfYWZ0ZXI9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fY3JlYXRlKCk7cmV0dXJuIGUuX3VudGlsX2FmdGVyPSEwLGUuX3VudGlsX3BhdHRlcm49dGhpcy5faW5wdXQuZ2V0X3JlZ2V4cCh0KSxlLl91cGRhdGUoKSxlfSxpLnByb3RvdHlwZS51bnRpbD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9jcmVhdGUoKTtyZXR1cm4gZS5fdW50aWxfYWZ0ZXI9ITEsZS5fdW50aWxfcGF0dGVybj10aGlzLl9pbnB1dC5nZXRfcmVnZXhwKHQpLGUuX3VwZGF0ZSgpLGV9LGkucHJvdG90eXBlLnN0YXJ0aW5nX3dpdGg9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fY3JlYXRlKCk7cmV0dXJuIGUuX3N0YXJ0aW5nX3BhdHRlcm49dGhpcy5faW5wdXQuZ2V0X3JlZ2V4cCh0LCEwKSxlLl91cGRhdGUoKSxlfSxpLnByb3RvdHlwZS5tYXRjaGluZz1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9jcmVhdGUoKTtyZXR1cm4gZS5fbWF0Y2hfcGF0dGVybj10aGlzLl9pbnB1dC5nZXRfcmVnZXhwKHQsITApLGUuX3VwZGF0ZSgpLGV9LGkucHJvdG90eXBlLl9jcmVhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IGkodGhpcy5faW5wdXQsdGhpcyl9LGkucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24oKXt9LHQuZXhwb3J0cy5QYXR0ZXJuPWl9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBpKHQsZSl7dD1cInN0cmluZ1wiPT10eXBlb2YgdD90OnQuc291cmNlLGU9XCJzdHJpbmdcIj09dHlwZW9mIGU/ZTplLnNvdXJjZSx0aGlzLl9fZGlyZWN0aXZlc19ibG9ja19wYXR0ZXJuPW5ldyBSZWdFeHAodCsvIGJlYXV0aWZ5KCBcXHcrWzpdXFx3KykrIC8uc291cmNlK2UsXCJnXCIpLHRoaXMuX19kaXJlY3RpdmVfcGF0dGVybj0vIChcXHcrKVs6XShcXHcrKS9nLHRoaXMuX19kaXJlY3RpdmVzX2VuZF9pZ25vcmVfcGF0dGVybj1uZXcgUmVnRXhwKHQrL1xcc2JlYXV0aWZ5XFxzaWdub3JlOmVuZFxccy8uc291cmNlK2UsXCJnXCIpfWkucHJvdG90eXBlLmdldF9kaXJlY3RpdmVzPWZ1bmN0aW9uKHQpe2lmKCF0Lm1hdGNoKHRoaXMuX19kaXJlY3RpdmVzX2Jsb2NrX3BhdHRlcm4pKXJldHVybiBudWxsO3ZhciBlPXt9O3RoaXMuX19kaXJlY3RpdmVfcGF0dGVybi5sYXN0SW5kZXg9MDtmb3IodmFyIG49dGhpcy5fX2RpcmVjdGl2ZV9wYXR0ZXJuLmV4ZWModCk7bjspZVtuWzFdXT1uWzJdLG49dGhpcy5fX2RpcmVjdGl2ZV9wYXR0ZXJuLmV4ZWModCk7cmV0dXJuIGV9LGkucHJvdG90eXBlLnJlYWRJZ25vcmVkPWZ1bmN0aW9uKHQpe3JldHVybiB0LnJlYWRVbnRpbEFmdGVyKHRoaXMuX19kaXJlY3RpdmVzX2VuZF9pZ25vcmVfcGF0dGVybil9LHQuZXhwb3J0cy5EaXJlY3RpdmVzPWl9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1uKDEyKS5QYXR0ZXJuLHI9e2RqYW5nbzohMSxlcmI6ITEsaGFuZGxlYmFyczohMSxwaHA6ITF9O2Z1bmN0aW9uIGEodCxlKXtpLmNhbGwodGhpcyx0LGUpLHRoaXMuX190ZW1wbGF0ZV9wYXR0ZXJuPW51bGwsdGhpcy5fZGlzYWJsZWQ9T2JqZWN0LmFzc2lnbih7fSxyKSx0aGlzLl9leGNsdWRlZD1PYmplY3QuYXNzaWduKHt9LHIpLGUmJih0aGlzLl9fdGVtcGxhdGVfcGF0dGVybj10aGlzLl9pbnB1dC5nZXRfcmVnZXhwKGUuX190ZW1wbGF0ZV9wYXR0ZXJuKSx0aGlzLl9leGNsdWRlZD1PYmplY3QuYXNzaWduKHRoaXMuX2V4Y2x1ZGVkLGUuX2V4Y2x1ZGVkKSx0aGlzLl9kaXNhYmxlZD1PYmplY3QuYXNzaWduKHRoaXMuX2Rpc2FibGVkLGUuX2Rpc2FibGVkKSk7dmFyIG49bmV3IGkodCk7dGhpcy5fX3BhdHRlcm5zPXtoYW5kbGViYXJzX2NvbW1lbnQ6bi5zdGFydGluZ193aXRoKC97eyEtLS8pLnVudGlsX2FmdGVyKC8tLX19LyksaGFuZGxlYmFyc191bmVzY2FwZWQ6bi5zdGFydGluZ193aXRoKC97e3svKS51bnRpbF9hZnRlcigvfX19LyksaGFuZGxlYmFyczpuLnN0YXJ0aW5nX3dpdGgoL3t7LykudW50aWxfYWZ0ZXIoL319LykscGhwOm4uc3RhcnRpbmdfd2l0aCgvPFxcPyg/Ols9XXxwaHApLykudW50aWxfYWZ0ZXIoL1xcPz4vKSxlcmI6bi5zdGFydGluZ193aXRoKC88JVteJV0vKS51bnRpbF9hZnRlcigvW14lXSU+LyksZGphbmdvOm4uc3RhcnRpbmdfd2l0aCgveyUvKS51bnRpbF9hZnRlcigvJX0vKSxkamFuZ29fdmFsdWU6bi5zdGFydGluZ193aXRoKC97ey8pLnVudGlsX2FmdGVyKC99fS8pLGRqYW5nb19jb21tZW50Om4uc3RhcnRpbmdfd2l0aCgveyMvKS51bnRpbF9hZnRlcigvI30vKX19YS5wcm90b3R5cGU9bmV3IGksYS5wcm90b3R5cGUuX2NyZWF0ZT1mdW5jdGlvbigpe3JldHVybiBuZXcgYSh0aGlzLl9pbnB1dCx0aGlzKX0sYS5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbigpe3RoaXMuX19zZXRfdGVtcGxhdGVkX3BhdHRlcm4oKX0sYS5wcm90b3R5cGUuZGlzYWJsZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9jcmVhdGUoKTtyZXR1cm4gZS5fZGlzYWJsZWRbdF09ITAsZS5fdXBkYXRlKCksZX0sYS5wcm90b3R5cGUucmVhZF9vcHRpb25zPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2NyZWF0ZSgpO2Zvcih2YXIgbiBpbiByKWUuX2Rpc2FibGVkW25dPS0xPT09dC50ZW1wbGF0aW5nLmluZGV4T2Yobik7cmV0dXJuIGUuX3VwZGF0ZSgpLGV9LGEucHJvdG90eXBlLmV4Y2x1ZGU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fY3JlYXRlKCk7cmV0dXJuIGUuX2V4Y2x1ZGVkW3RdPSEwLGUuX3VwZGF0ZSgpLGV9LGEucHJvdG90eXBlLnJlYWQ9ZnVuY3Rpb24oKXt2YXIgdD1cIlwiO3Q9dGhpcy5fbWF0Y2hfcGF0dGVybj90aGlzLl9pbnB1dC5yZWFkKHRoaXMuX3N0YXJ0aW5nX3BhdHRlcm4pOnRoaXMuX2lucHV0LnJlYWQodGhpcy5fc3RhcnRpbmdfcGF0dGVybix0aGlzLl9fdGVtcGxhdGVfcGF0dGVybik7Zm9yKHZhciBlPXRoaXMuX3JlYWRfdGVtcGxhdGUoKTtlOyl0aGlzLl9tYXRjaF9wYXR0ZXJuP2UrPXRoaXMuX2lucHV0LnJlYWQodGhpcy5fbWF0Y2hfcGF0dGVybik6ZSs9dGhpcy5faW5wdXQucmVhZFVudGlsKHRoaXMuX190ZW1wbGF0ZV9wYXR0ZXJuKSx0Kz1lLGU9dGhpcy5fcmVhZF90ZW1wbGF0ZSgpO3JldHVybiB0aGlzLl91bnRpbF9hZnRlciYmKHQrPXRoaXMuX2lucHV0LnJlYWRVbnRpbEFmdGVyKHRoaXMuX3VudGlsX3BhdHRlcm4pKSx0fSxhLnByb3RvdHlwZS5fX3NldF90ZW1wbGF0ZWRfcGF0dGVybj1mdW5jdGlvbigpe3ZhciB0PVtdO3RoaXMuX2Rpc2FibGVkLnBocHx8dC5wdXNoKHRoaXMuX19wYXR0ZXJucy5waHAuX3N0YXJ0aW5nX3BhdHRlcm4uc291cmNlKSx0aGlzLl9kaXNhYmxlZC5oYW5kbGViYXJzfHx0LnB1c2godGhpcy5fX3BhdHRlcm5zLmhhbmRsZWJhcnMuX3N0YXJ0aW5nX3BhdHRlcm4uc291cmNlKSx0aGlzLl9kaXNhYmxlZC5lcmJ8fHQucHVzaCh0aGlzLl9fcGF0dGVybnMuZXJiLl9zdGFydGluZ19wYXR0ZXJuLnNvdXJjZSksdGhpcy5fZGlzYWJsZWQuZGphbmdvfHwodC5wdXNoKHRoaXMuX19wYXR0ZXJucy5kamFuZ28uX3N0YXJ0aW5nX3BhdHRlcm4uc291cmNlKSx0LnB1c2godGhpcy5fX3BhdHRlcm5zLmRqYW5nb192YWx1ZS5fc3RhcnRpbmdfcGF0dGVybi5zb3VyY2UpLHQucHVzaCh0aGlzLl9fcGF0dGVybnMuZGphbmdvX2NvbW1lbnQuX3N0YXJ0aW5nX3BhdHRlcm4uc291cmNlKSksdGhpcy5fdW50aWxfcGF0dGVybiYmdC5wdXNoKHRoaXMuX3VudGlsX3BhdHRlcm4uc291cmNlKSx0aGlzLl9fdGVtcGxhdGVfcGF0dGVybj10aGlzLl9pbnB1dC5nZXRfcmVnZXhwKFwiKD86XCIrdC5qb2luKFwifFwiKStcIilcIil9LGEucHJvdG90eXBlLl9yZWFkX3RlbXBsYXRlPWZ1bmN0aW9uKCl7dmFyIHQ9XCJcIixlPXRoaXMuX2lucHV0LnBlZWsoKTtpZihcIjxcIj09PWUpe3ZhciBuPXRoaXMuX2lucHV0LnBlZWsoMSk7dGhpcy5fZGlzYWJsZWQucGhwfHx0aGlzLl9leGNsdWRlZC5waHB8fFwiP1wiIT09bnx8KHQ9dHx8dGhpcy5fX3BhdHRlcm5zLnBocC5yZWFkKCkpLHRoaXMuX2Rpc2FibGVkLmVyYnx8dGhpcy5fZXhjbHVkZWQuZXJifHxcIiVcIiE9PW58fCh0PXR8fHRoaXMuX19wYXR0ZXJucy5lcmIucmVhZCgpKX1lbHNlXCJ7XCI9PT1lJiYodGhpcy5fZGlzYWJsZWQuaGFuZGxlYmFyc3x8dGhpcy5fZXhjbHVkZWQuaGFuZGxlYmFyc3x8KHQ9KHQ9KHQ9dHx8dGhpcy5fX3BhdHRlcm5zLmhhbmRsZWJhcnNfY29tbWVudC5yZWFkKCkpfHx0aGlzLl9fcGF0dGVybnMuaGFuZGxlYmFyc191bmVzY2FwZWQucmVhZCgpKXx8dGhpcy5fX3BhdHRlcm5zLmhhbmRsZWJhcnMucmVhZCgpKSx0aGlzLl9kaXNhYmxlZC5kamFuZ298fCh0aGlzLl9leGNsdWRlZC5kamFuZ298fHRoaXMuX2V4Y2x1ZGVkLmhhbmRsZWJhcnN8fCh0PXR8fHRoaXMuX19wYXR0ZXJucy5kamFuZ29fdmFsdWUucmVhZCgpKSx0aGlzLl9leGNsdWRlZC5kamFuZ298fCh0PSh0PXR8fHRoaXMuX19wYXR0ZXJucy5kamFuZ29fY29tbWVudC5yZWFkKCkpfHx0aGlzLl9fcGF0dGVybnMuZGphbmdvLnJlYWQoKSkpKTtyZXR1cm4gdH0sdC5leHBvcnRzLlRlbXBsYXRhYmxlUGF0dGVybj1hfV0pLHZvaWQgMD09PShpPWZ1bmN0aW9uKCl7cmV0dXJue2pzX2JlYXV0aWZ5OnJ9fS5hcHBseShlLFtdKSl8fCh0LmV4cG9ydHM9aSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO3I9ZnVuY3Rpb24odCl7dmFyIGU9e307ZnVuY3Rpb24gbihpKXtpZihlW2ldKXJldHVybiBlW2ldLmV4cG9ydHM7dmFyIHI9ZVtpXT17aTppLGw6ITEsZXhwb3J0czp7fX07cmV0dXJuIHRbaV0uY2FsbChyLmV4cG9ydHMscixyLmV4cG9ydHMsbiksci5sPSEwLHIuZXhwb3J0c31yZXR1cm4gbi5tPXQsbi5jPWUsbi5kPWZ1bmN0aW9uKHQsZSxpKXtuLm8odCxlKXx8T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsZSx7ZW51bWVyYWJsZTohMCxnZXQ6aX0pfSxuLnI9ZnVuY3Rpb24odCl7XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFN5bWJvbCYmU3ltYm9sLnRvU3RyaW5nVGFnJiZPYmplY3QuZGVmaW5lUHJvcGVydHkodCxTeW1ib2wudG9TdHJpbmdUYWcse3ZhbHVlOlwiTW9kdWxlXCJ9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KX0sbi50PWZ1bmN0aW9uKHQsZSl7aWYoMSZlJiYodD1uKHQpKSw4JmUpcmV0dXJuIHQ7aWYoNCZlJiZcIm9iamVjdFwiPT10eXBlb2YgdCYmdCYmdC5fX2VzTW9kdWxlKXJldHVybiB0O3ZhciBpPU9iamVjdC5jcmVhdGUobnVsbCk7aWYobi5yKGkpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpLFwiZGVmYXVsdFwiLHtlbnVtZXJhYmxlOiEwLHZhbHVlOnR9KSwyJmUmJlwic3RyaW5nXCIhPXR5cGVvZiB0KWZvcih2YXIgciBpbiB0KW4uZChpLHIsZnVuY3Rpb24oZSl7cmV0dXJuIHRbZV19LmJpbmQobnVsbCxyKSk7cmV0dXJuIGl9LG4ubj1mdW5jdGlvbih0KXt2YXIgZT10JiZ0Ll9fZXNNb2R1bGU/ZnVuY3Rpb24oKXtyZXR1cm4gdC5kZWZhdWx0fTpmdW5jdGlvbigpe3JldHVybiB0fTtyZXR1cm4gbi5kKGUsXCJhXCIsZSksZX0sbi5vPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpfSxuLnA9XCJcIixuKG4ucz0xNSl9KFssLGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBpKHQpe3RoaXMuX19wYXJlbnQ9dCx0aGlzLl9fY2hhcmFjdGVyX2NvdW50PTAsdGhpcy5fX2luZGVudF9jb3VudD0tMSx0aGlzLl9fYWxpZ25tZW50X2NvdW50PTAsdGhpcy5fX3dyYXBfcG9pbnRfaW5kZXg9MCx0aGlzLl9fd3JhcF9wb2ludF9jaGFyYWN0ZXJfY291bnQ9MCx0aGlzLl9fd3JhcF9wb2ludF9pbmRlbnRfY291bnQ9LTEsdGhpcy5fX3dyYXBfcG9pbnRfYWxpZ25tZW50X2NvdW50PTAsdGhpcy5fX2l0ZW1zPVtdfWZ1bmN0aW9uIHIodCxlKXt0aGlzLl9fY2FjaGU9W1wiXCJdLHRoaXMuX19pbmRlbnRfc2l6ZT10LmluZGVudF9zaXplLHRoaXMuX19pbmRlbnRfc3RyaW5nPXQuaW5kZW50X2NoYXIsdC5pbmRlbnRfd2l0aF90YWJzfHwodGhpcy5fX2luZGVudF9zdHJpbmc9bmV3IEFycmF5KHQuaW5kZW50X3NpemUrMSkuam9pbih0LmluZGVudF9jaGFyKSksZT1lfHxcIlwiLHQuaW5kZW50X2xldmVsPjAmJihlPW5ldyBBcnJheSh0LmluZGVudF9sZXZlbCsxKS5qb2luKHRoaXMuX19pbmRlbnRfc3RyaW5nKSksdGhpcy5fX2Jhc2Vfc3RyaW5nPWUsdGhpcy5fX2Jhc2Vfc3RyaW5nX2xlbmd0aD1lLmxlbmd0aH1mdW5jdGlvbiBhKHQsZSl7dGhpcy5fX2luZGVudF9jYWNoZT1uZXcgcih0LGUpLHRoaXMucmF3PSExLHRoaXMuX2VuZF93aXRoX25ld2xpbmU9dC5lbmRfd2l0aF9uZXdsaW5lLHRoaXMuaW5kZW50X3NpemU9dC5pbmRlbnRfc2l6ZSx0aGlzLndyYXBfbGluZV9sZW5ndGg9dC53cmFwX2xpbmVfbGVuZ3RoLHRoaXMuaW5kZW50X2VtcHR5X2xpbmVzPXQuaW5kZW50X2VtcHR5X2xpbmVzLHRoaXMuX19saW5lcz1bXSx0aGlzLnByZXZpb3VzX2xpbmU9bnVsbCx0aGlzLmN1cnJlbnRfbGluZT1udWxsLHRoaXMubmV4dF9saW5lPW5ldyBpKHRoaXMpLHRoaXMuc3BhY2VfYmVmb3JlX3Rva2VuPSExLHRoaXMubm9uX2JyZWFraW5nX3NwYWNlPSExLHRoaXMucHJldmlvdXNfdG9rZW5fd3JhcHBlZD0hMSx0aGlzLl9fYWRkX291dHB1dGxpbmUoKX1pLnByb3RvdHlwZS5jbG9uZV9lbXB0eT1mdW5jdGlvbigpe3ZhciB0PW5ldyBpKHRoaXMuX19wYXJlbnQpO3JldHVybiB0LnNldF9pbmRlbnQodGhpcy5fX2luZGVudF9jb3VudCx0aGlzLl9fYWxpZ25tZW50X2NvdW50KSx0fSxpLnByb3RvdHlwZS5pdGVtPWZ1bmN0aW9uKHQpe3JldHVybiB0PDA/dGhpcy5fX2l0ZW1zW3RoaXMuX19pdGVtcy5sZW5ndGgrdF06dGhpcy5fX2l0ZW1zW3RdfSxpLnByb3RvdHlwZS5oYXNfbWF0Y2g9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMuX19pdGVtcy5sZW5ndGgtMTtlPj0wO2UtLSlpZih0aGlzLl9faXRlbXNbZV0ubWF0Y2godCkpcmV0dXJuITA7cmV0dXJuITF9LGkucHJvdG90eXBlLnNldF9pbmRlbnQ9ZnVuY3Rpb24odCxlKXt0aGlzLmlzX2VtcHR5KCkmJih0aGlzLl9faW5kZW50X2NvdW50PXR8fDAsdGhpcy5fX2FsaWdubWVudF9jb3VudD1lfHwwLHRoaXMuX19jaGFyYWN0ZXJfY291bnQ9dGhpcy5fX3BhcmVudC5nZXRfaW5kZW50X3NpemUodGhpcy5fX2luZGVudF9jb3VudCx0aGlzLl9fYWxpZ25tZW50X2NvdW50KSl9LGkucHJvdG90eXBlLl9zZXRfd3JhcF9wb2ludD1mdW5jdGlvbigpe3RoaXMuX19wYXJlbnQud3JhcF9saW5lX2xlbmd0aCYmKHRoaXMuX193cmFwX3BvaW50X2luZGV4PXRoaXMuX19pdGVtcy5sZW5ndGgsdGhpcy5fX3dyYXBfcG9pbnRfY2hhcmFjdGVyX2NvdW50PXRoaXMuX19jaGFyYWN0ZXJfY291bnQsdGhpcy5fX3dyYXBfcG9pbnRfaW5kZW50X2NvdW50PXRoaXMuX19wYXJlbnQubmV4dF9saW5lLl9faW5kZW50X2NvdW50LHRoaXMuX193cmFwX3BvaW50X2FsaWdubWVudF9jb3VudD10aGlzLl9fcGFyZW50Lm5leHRfbGluZS5fX2FsaWdubWVudF9jb3VudCl9LGkucHJvdG90eXBlLl9zaG91bGRfd3JhcD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9fd3JhcF9wb2ludF9pbmRleCYmdGhpcy5fX2NoYXJhY3Rlcl9jb3VudD50aGlzLl9fcGFyZW50LndyYXBfbGluZV9sZW5ndGgmJnRoaXMuX193cmFwX3BvaW50X2NoYXJhY3Rlcl9jb3VudD50aGlzLl9fcGFyZW50Lm5leHRfbGluZS5fX2NoYXJhY3Rlcl9jb3VudH0saS5wcm90b3R5cGUuX2FsbG93X3dyYXA9ZnVuY3Rpb24oKXtpZih0aGlzLl9zaG91bGRfd3JhcCgpKXt0aGlzLl9fcGFyZW50LmFkZF9uZXdfbGluZSgpO3ZhciB0PXRoaXMuX19wYXJlbnQuY3VycmVudF9saW5lO3JldHVybiB0LnNldF9pbmRlbnQodGhpcy5fX3dyYXBfcG9pbnRfaW5kZW50X2NvdW50LHRoaXMuX193cmFwX3BvaW50X2FsaWdubWVudF9jb3VudCksdC5fX2l0ZW1zPXRoaXMuX19pdGVtcy5zbGljZSh0aGlzLl9fd3JhcF9wb2ludF9pbmRleCksdGhpcy5fX2l0ZW1zPXRoaXMuX19pdGVtcy5zbGljZSgwLHRoaXMuX193cmFwX3BvaW50X2luZGV4KSx0Ll9fY2hhcmFjdGVyX2NvdW50Kz10aGlzLl9fY2hhcmFjdGVyX2NvdW50LXRoaXMuX193cmFwX3BvaW50X2NoYXJhY3Rlcl9jb3VudCx0aGlzLl9fY2hhcmFjdGVyX2NvdW50PXRoaXMuX193cmFwX3BvaW50X2NoYXJhY3Rlcl9jb3VudCxcIiBcIj09PXQuX19pdGVtc1swXSYmKHQuX19pdGVtcy5zcGxpY2UoMCwxKSx0Ll9fY2hhcmFjdGVyX2NvdW50LT0xKSwhMH1yZXR1cm4hMX0saS5wcm90b3R5cGUuaXNfZW1wdHk9ZnVuY3Rpb24oKXtyZXR1cm4gMD09PXRoaXMuX19pdGVtcy5sZW5ndGh9LGkucHJvdG90eXBlLmxhc3Q9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pc19lbXB0eSgpP251bGw6dGhpcy5fX2l0ZW1zW3RoaXMuX19pdGVtcy5sZW5ndGgtMV19LGkucHJvdG90eXBlLnB1c2g9ZnVuY3Rpb24odCl7dGhpcy5fX2l0ZW1zLnB1c2godCk7dmFyIGU9dC5sYXN0SW5kZXhPZihcIlxcblwiKTstMSE9PWU/dGhpcy5fX2NoYXJhY3Rlcl9jb3VudD10Lmxlbmd0aC1lOnRoaXMuX19jaGFyYWN0ZXJfY291bnQrPXQubGVuZ3RofSxpLnByb3RvdHlwZS5wb3A9ZnVuY3Rpb24oKXt2YXIgdD1udWxsO3JldHVybiB0aGlzLmlzX2VtcHR5KCl8fCh0PXRoaXMuX19pdGVtcy5wb3AoKSx0aGlzLl9fY2hhcmFjdGVyX2NvdW50LT10Lmxlbmd0aCksdH0saS5wcm90b3R5cGUuX3JlbW92ZV9pbmRlbnQ9ZnVuY3Rpb24oKXt0aGlzLl9faW5kZW50X2NvdW50PjAmJih0aGlzLl9faW5kZW50X2NvdW50LT0xLHRoaXMuX19jaGFyYWN0ZXJfY291bnQtPXRoaXMuX19wYXJlbnQuaW5kZW50X3NpemUpfSxpLnByb3RvdHlwZS5fcmVtb3ZlX3dyYXBfaW5kZW50PWZ1bmN0aW9uKCl7dGhpcy5fX3dyYXBfcG9pbnRfaW5kZW50X2NvdW50PjAmJih0aGlzLl9fd3JhcF9wb2ludF9pbmRlbnRfY291bnQtPTEpfSxpLnByb3RvdHlwZS50cmltPWZ1bmN0aW9uKCl7Zm9yKDtcIiBcIj09PXRoaXMubGFzdCgpOyl0aGlzLl9faXRlbXMucG9wKCksdGhpcy5fX2NoYXJhY3Rlcl9jb3VudC09MX0saS5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXt2YXIgdD1cIlwiO3JldHVybiB0aGlzLmlzX2VtcHR5KCk/dGhpcy5fX3BhcmVudC5pbmRlbnRfZW1wdHlfbGluZXMmJih0PXRoaXMuX19wYXJlbnQuZ2V0X2luZGVudF9zdHJpbmcodGhpcy5fX2luZGVudF9jb3VudCkpOih0PXRoaXMuX19wYXJlbnQuZ2V0X2luZGVudF9zdHJpbmcodGhpcy5fX2luZGVudF9jb3VudCx0aGlzLl9fYWxpZ25tZW50X2NvdW50KSx0Kz10aGlzLl9faXRlbXMuam9pbihcIlwiKSksdH0sci5wcm90b3R5cGUuZ2V0X2luZGVudF9zaXplPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5fX2Jhc2Vfc3RyaW5nX2xlbmd0aDtyZXR1cm4gZT1lfHwwLHQ8MCYmKG49MCksbis9dCp0aGlzLl9faW5kZW50X3NpemUsbis9ZX0sci5wcm90b3R5cGUuZ2V0X2luZGVudF9zdHJpbmc9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLl9fYmFzZV9zdHJpbmc7cmV0dXJuIGU9ZXx8MCx0PDAmJih0PTAsbj1cIlwiKSxlKz10KnRoaXMuX19pbmRlbnRfc2l6ZSx0aGlzLl9fZW5zdXJlX2NhY2hlKGUpLG4rPXRoaXMuX19jYWNoZVtlXX0sci5wcm90b3R5cGUuX19lbnN1cmVfY2FjaGU9ZnVuY3Rpb24odCl7Zm9yKDt0Pj10aGlzLl9fY2FjaGUubGVuZ3RoOyl0aGlzLl9fYWRkX2NvbHVtbigpfSxyLnByb3RvdHlwZS5fX2FkZF9jb2x1bW49ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9fY2FjaGUubGVuZ3RoLGU9MCxuPVwiXCI7dGhpcy5fX2luZGVudF9zaXplJiZ0Pj10aGlzLl9faW5kZW50X3NpemUmJih0LT0oZT1NYXRoLmZsb29yKHQvdGhpcy5fX2luZGVudF9zaXplKSkqdGhpcy5fX2luZGVudF9zaXplLG49bmV3IEFycmF5KGUrMSkuam9pbih0aGlzLl9faW5kZW50X3N0cmluZykpLHQmJihuKz1uZXcgQXJyYXkodCsxKS5qb2luKFwiIFwiKSksdGhpcy5fX2NhY2hlLnB1c2gobil9LGEucHJvdG90eXBlLl9fYWRkX291dHB1dGxpbmU9ZnVuY3Rpb24oKXt0aGlzLnByZXZpb3VzX2xpbmU9dGhpcy5jdXJyZW50X2xpbmUsdGhpcy5jdXJyZW50X2xpbmU9dGhpcy5uZXh0X2xpbmUuY2xvbmVfZW1wdHkoKSx0aGlzLl9fbGluZXMucHVzaCh0aGlzLmN1cnJlbnRfbGluZSl9LGEucHJvdG90eXBlLmdldF9saW5lX251bWJlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9fbGluZXMubGVuZ3RofSxhLnByb3RvdHlwZS5nZXRfaW5kZW50X3N0cmluZz1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLl9faW5kZW50X2NhY2hlLmdldF9pbmRlbnRfc3RyaW5nKHQsZSl9LGEucHJvdG90eXBlLmdldF9pbmRlbnRfc2l6ZT1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLl9faW5kZW50X2NhY2hlLmdldF9pbmRlbnRfc2l6ZSh0LGUpfSxhLnByb3RvdHlwZS5pc19lbXB0eT1mdW5jdGlvbigpe3JldHVybiF0aGlzLnByZXZpb3VzX2xpbmUmJnRoaXMuY3VycmVudF9saW5lLmlzX2VtcHR5KCl9LGEucHJvdG90eXBlLmFkZF9uZXdfbGluZT1mdW5jdGlvbih0KXtyZXR1cm4hKHRoaXMuaXNfZW1wdHkoKXx8IXQmJnRoaXMuanVzdF9hZGRlZF9uZXdsaW5lKCl8fCh0aGlzLnJhd3x8dGhpcy5fX2FkZF9vdXRwdXRsaW5lKCksMCkpfSxhLnByb3RvdHlwZS5nZXRfY29kZT1mdW5jdGlvbih0KXt0aGlzLnRyaW0oITApO3ZhciBlPXRoaXMuY3VycmVudF9saW5lLnBvcCgpO2UmJihcIlxcblwiPT09ZVtlLmxlbmd0aC0xXSYmKGU9ZS5yZXBsYWNlKC9cXG4rJC9nLFwiXCIpKSx0aGlzLmN1cnJlbnRfbGluZS5wdXNoKGUpKSx0aGlzLl9lbmRfd2l0aF9uZXdsaW5lJiZ0aGlzLl9fYWRkX291dHB1dGxpbmUoKTt2YXIgbj10aGlzLl9fbGluZXMuam9pbihcIlxcblwiKTtyZXR1cm5cIlxcblwiIT09dCYmKG49bi5yZXBsYWNlKC9bXFxuXS9nLHQpKSxufSxhLnByb3RvdHlwZS5zZXRfd3JhcF9wb2ludD1mdW5jdGlvbigpe3RoaXMuY3VycmVudF9saW5lLl9zZXRfd3JhcF9wb2ludCgpfSxhLnByb3RvdHlwZS5zZXRfaW5kZW50PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ9dHx8MCxlPWV8fDAsdGhpcy5uZXh0X2xpbmUuc2V0X2luZGVudCh0LGUpLHRoaXMuX19saW5lcy5sZW5ndGg+MT8odGhpcy5jdXJyZW50X2xpbmUuc2V0X2luZGVudCh0LGUpLCEwKToodGhpcy5jdXJyZW50X2xpbmUuc2V0X2luZGVudCgpLCExKX0sYS5wcm90b3R5cGUuYWRkX3Jhd190b2tlbj1mdW5jdGlvbih0KXtmb3IodmFyIGU9MDtlPHQubmV3bGluZXM7ZSsrKXRoaXMuX19hZGRfb3V0cHV0bGluZSgpO3RoaXMuY3VycmVudF9saW5lLnNldF9pbmRlbnQoLTEpLHRoaXMuY3VycmVudF9saW5lLnB1c2godC53aGl0ZXNwYWNlX2JlZm9yZSksdGhpcy5jdXJyZW50X2xpbmUucHVzaCh0LnRleHQpLHRoaXMuc3BhY2VfYmVmb3JlX3Rva2VuPSExLHRoaXMubm9uX2JyZWFraW5nX3NwYWNlPSExLHRoaXMucHJldmlvdXNfdG9rZW5fd3JhcHBlZD0hMX0sYS5wcm90b3R5cGUuYWRkX3Rva2VuPWZ1bmN0aW9uKHQpe3RoaXMuX19hZGRfc3BhY2VfYmVmb3JlX3Rva2VuKCksdGhpcy5jdXJyZW50X2xpbmUucHVzaCh0KSx0aGlzLnNwYWNlX2JlZm9yZV90b2tlbj0hMSx0aGlzLm5vbl9icmVha2luZ19zcGFjZT0hMSx0aGlzLnByZXZpb3VzX3Rva2VuX3dyYXBwZWQ9dGhpcy5jdXJyZW50X2xpbmUuX2FsbG93X3dyYXAoKX0sYS5wcm90b3R5cGUuX19hZGRfc3BhY2VfYmVmb3JlX3Rva2VuPWZ1bmN0aW9uKCl7dGhpcy5zcGFjZV9iZWZvcmVfdG9rZW4mJiF0aGlzLmp1c3RfYWRkZWRfbmV3bGluZSgpJiYodGhpcy5ub25fYnJlYWtpbmdfc3BhY2V8fHRoaXMuc2V0X3dyYXBfcG9pbnQoKSx0aGlzLmN1cnJlbnRfbGluZS5wdXNoKFwiIFwiKSl9LGEucHJvdG90eXBlLnJlbW92ZV9pbmRlbnQ9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMuX19saW5lcy5sZW5ndGg7dDxlOyl0aGlzLl9fbGluZXNbdF0uX3JlbW92ZV9pbmRlbnQoKSx0Kys7dGhpcy5jdXJyZW50X2xpbmUuX3JlbW92ZV93cmFwX2luZGVudCgpfSxhLnByb3RvdHlwZS50cmltPWZ1bmN0aW9uKHQpe2Zvcih0PXZvaWQgMCE9PXQmJnQsdGhpcy5jdXJyZW50X2xpbmUudHJpbSgpO3QmJnRoaXMuX19saW5lcy5sZW5ndGg+MSYmdGhpcy5jdXJyZW50X2xpbmUuaXNfZW1wdHkoKTspdGhpcy5fX2xpbmVzLnBvcCgpLHRoaXMuY3VycmVudF9saW5lPXRoaXMuX19saW5lc1t0aGlzLl9fbGluZXMubGVuZ3RoLTFdLHRoaXMuY3VycmVudF9saW5lLnRyaW0oKTt0aGlzLnByZXZpb3VzX2xpbmU9dGhpcy5fX2xpbmVzLmxlbmd0aD4xP3RoaXMuX19saW5lc1t0aGlzLl9fbGluZXMubGVuZ3RoLTJdOm51bGx9LGEucHJvdG90eXBlLmp1c3RfYWRkZWRfbmV3bGluZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmN1cnJlbnRfbGluZS5pc19lbXB0eSgpfSxhLnByb3RvdHlwZS5qdXN0X2FkZGVkX2JsYW5rbGluZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmlzX2VtcHR5KCl8fHRoaXMuY3VycmVudF9saW5lLmlzX2VtcHR5KCkmJnRoaXMucHJldmlvdXNfbGluZS5pc19lbXB0eSgpfSxhLnByb3RvdHlwZS5lbnN1cmVfZW1wdHlfbGluZV9hYm92ZT1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj10aGlzLl9fbGluZXMubGVuZ3RoLTI7bj49MDspe3ZhciByPXRoaXMuX19saW5lc1tuXTtpZihyLmlzX2VtcHR5KCkpYnJlYWs7aWYoMCE9PXIuaXRlbSgwKS5pbmRleE9mKHQpJiZyLml0ZW0oLTEpIT09ZSl7dGhpcy5fX2xpbmVzLnNwbGljZShuKzEsMCxuZXcgaSh0aGlzKSksdGhpcy5wcmV2aW91c19saW5lPXRoaXMuX19saW5lc1t0aGlzLl9fbGluZXMubGVuZ3RoLTJdO2JyZWFrfW4tLX19LHQuZXhwb3J0cy5PdXRwdXQ9YX0sLCwsZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGkodCxlKXt0aGlzLnJhd19vcHRpb25zPXIodCxlKSx0aGlzLmRpc2FibGVkPXRoaXMuX2dldF9ib29sZWFuKFwiZGlzYWJsZWRcIiksdGhpcy5lb2w9dGhpcy5fZ2V0X2NoYXJhY3RlcnMoXCJlb2xcIixcImF1dG9cIiksdGhpcy5lbmRfd2l0aF9uZXdsaW5lPXRoaXMuX2dldF9ib29sZWFuKFwiZW5kX3dpdGhfbmV3bGluZVwiKSx0aGlzLmluZGVudF9zaXplPXRoaXMuX2dldF9udW1iZXIoXCJpbmRlbnRfc2l6ZVwiLDQpLHRoaXMuaW5kZW50X2NoYXI9dGhpcy5fZ2V0X2NoYXJhY3RlcnMoXCJpbmRlbnRfY2hhclwiLFwiIFwiKSx0aGlzLmluZGVudF9sZXZlbD10aGlzLl9nZXRfbnVtYmVyKFwiaW5kZW50X2xldmVsXCIpLHRoaXMucHJlc2VydmVfbmV3bGluZXM9dGhpcy5fZ2V0X2Jvb2xlYW4oXCJwcmVzZXJ2ZV9uZXdsaW5lc1wiLCEwKSx0aGlzLm1heF9wcmVzZXJ2ZV9uZXdsaW5lcz10aGlzLl9nZXRfbnVtYmVyKFwibWF4X3ByZXNlcnZlX25ld2xpbmVzXCIsMzI3ODYpLHRoaXMucHJlc2VydmVfbmV3bGluZXN8fCh0aGlzLm1heF9wcmVzZXJ2ZV9uZXdsaW5lcz0wKSx0aGlzLmluZGVudF93aXRoX3RhYnM9dGhpcy5fZ2V0X2Jvb2xlYW4oXCJpbmRlbnRfd2l0aF90YWJzXCIsXCJcXHRcIj09PXRoaXMuaW5kZW50X2NoYXIpLHRoaXMuaW5kZW50X3dpdGhfdGFicyYmKHRoaXMuaW5kZW50X2NoYXI9XCJcXHRcIiwxPT09dGhpcy5pbmRlbnRfc2l6ZSYmKHRoaXMuaW5kZW50X3NpemU9NCkpLHRoaXMud3JhcF9saW5lX2xlbmd0aD10aGlzLl9nZXRfbnVtYmVyKFwid3JhcF9saW5lX2xlbmd0aFwiLHRoaXMuX2dldF9udW1iZXIoXCJtYXhfY2hhclwiKSksdGhpcy5pbmRlbnRfZW1wdHlfbGluZXM9dGhpcy5fZ2V0X2Jvb2xlYW4oXCJpbmRlbnRfZW1wdHlfbGluZXNcIiksdGhpcy50ZW1wbGF0aW5nPXRoaXMuX2dldF9zZWxlY3Rpb25fbGlzdChcInRlbXBsYXRpbmdcIixbXCJhdXRvXCIsXCJub25lXCIsXCJkamFuZ29cIixcImVyYlwiLFwiaGFuZGxlYmFyc1wiLFwicGhwXCJdLFtcImF1dG9cIl0pfWZ1bmN0aW9uIHIodCxlKXt2YXIgbixpPXt9O2ZvcihuIGluIHQ9YSh0KSluIT09ZSYmKGlbbl09dFtuXSk7aWYoZSYmdFtlXSlmb3IobiBpbiB0W2VdKWlbbl09dFtlXVtuXTtyZXR1cm4gaX1mdW5jdGlvbiBhKHQpe3ZhciBlLG49e307Zm9yKGUgaW4gdCluW2UucmVwbGFjZSgvLS9nLFwiX1wiKV09dFtlXTtyZXR1cm4gbn1pLnByb3RvdHlwZS5fZ2V0X2FycmF5PWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5yYXdfb3B0aW9uc1t0XSxpPWV8fFtdO3JldHVyblwib2JqZWN0XCI9PXR5cGVvZiBuP251bGwhPT1uJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBuLmNvbmNhdCYmKGk9bi5jb25jYXQoKSk6XCJzdHJpbmdcIj09dHlwZW9mIG4mJihpPW4uc3BsaXQoL1teYS16QS1aMC05X1xcL1xcLV0rLykpLGl9LGkucHJvdG90eXBlLl9nZXRfYm9vbGVhbj1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMucmF3X29wdGlvbnNbdF07cmV0dXJuIHZvaWQgMD09PW4/ISFlOiEhbn0saS5wcm90b3R5cGUuX2dldF9jaGFyYWN0ZXJzPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5yYXdfb3B0aW9uc1t0XSxpPWV8fFwiXCI7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIG4mJihpPW4ucmVwbGFjZSgvXFxcXHIvLFwiXFxyXCIpLnJlcGxhY2UoL1xcXFxuLyxcIlxcblwiKS5yZXBsYWNlKC9cXFxcdC8sXCJcXHRcIikpLGl9LGkucHJvdG90eXBlLl9nZXRfbnVtYmVyPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5yYXdfb3B0aW9uc1t0XTtlPXBhcnNlSW50KGUsMTApLGlzTmFOKGUpJiYoZT0wKTt2YXIgaT1wYXJzZUludChuLDEwKTtyZXR1cm4gaXNOYU4oaSkmJihpPWUpLGl9LGkucHJvdG90eXBlLl9nZXRfc2VsZWN0aW9uPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaT10aGlzLl9nZXRfc2VsZWN0aW9uX2xpc3QodCxlLG4pO2lmKDEhPT1pLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIE9wdGlvbiBWYWx1ZTogVGhlIG9wdGlvbiAnXCIrdCtcIicgY2FuIG9ubHkgYmUgb25lIG9mIHRoZSBmb2xsb3dpbmcgdmFsdWVzOlxcblwiK2UrXCJcXG5Zb3UgcGFzc2VkIGluOiAnXCIrdGhpcy5yYXdfb3B0aW9uc1t0XStcIidcIik7cmV0dXJuIGlbMF19LGkucHJvdG90eXBlLl9nZXRfc2VsZWN0aW9uX2xpc3Q9ZnVuY3Rpb24odCxlLG4pe2lmKCFlfHwwPT09ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiU2VsZWN0aW9uIGxpc3QgY2Fubm90IGJlIGVtcHR5LlwiKTtpZihuPW58fFtlWzBdXSwhdGhpcy5faXNfdmFsaWRfc2VsZWN0aW9uKG4sZSkpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBEZWZhdWx0IFZhbHVlIVwiKTt2YXIgaT10aGlzLl9nZXRfYXJyYXkodCxuKTtpZighdGhpcy5faXNfdmFsaWRfc2VsZWN0aW9uKGksZSkpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBPcHRpb24gVmFsdWU6IFRoZSBvcHRpb24gJ1wiK3QrXCInIGNhbiBjb250YWluIG9ubHkgdGhlIGZvbGxvd2luZyB2YWx1ZXM6XFxuXCIrZStcIlxcbllvdSBwYXNzZWQgaW46ICdcIit0aGlzLnJhd19vcHRpb25zW3RdK1wiJ1wiKTtyZXR1cm4gaX0saS5wcm90b3R5cGUuX2lzX3ZhbGlkX3NlbGVjdGlvbj1mdW5jdGlvbih0LGUpe3JldHVybiB0Lmxlbmd0aCYmZS5sZW5ndGgmJiF0LnNvbWUoKGZ1bmN0aW9uKHQpe3JldHVybi0xPT09ZS5pbmRleE9mKHQpfSkpfSx0LmV4cG9ydHMuT3B0aW9ucz1pLHQuZXhwb3J0cy5ub3JtYWxpemVPcHRzPWEsdC5leHBvcnRzLm1lcmdlT3B0cz1yfSwsZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBpPVJlZ0V4cC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkoXCJzdGlja3lcIik7ZnVuY3Rpb24gcih0KXt0aGlzLl9faW5wdXQ9dHx8XCJcIix0aGlzLl9faW5wdXRfbGVuZ3RoPXRoaXMuX19pbnB1dC5sZW5ndGgsdGhpcy5fX3Bvc2l0aW9uPTB9ci5wcm90b3R5cGUucmVzdGFydD1mdW5jdGlvbigpe3RoaXMuX19wb3NpdGlvbj0wfSxyLnByb3RvdHlwZS5iYWNrPWZ1bmN0aW9uKCl7dGhpcy5fX3Bvc2l0aW9uPjAmJih0aGlzLl9fcG9zaXRpb24tPTEpfSxyLnByb3RvdHlwZS5oYXNOZXh0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX19wb3NpdGlvbjx0aGlzLl9faW5wdXRfbGVuZ3RofSxyLnByb3RvdHlwZS5uZXh0PWZ1bmN0aW9uKCl7dmFyIHQ9bnVsbDtyZXR1cm4gdGhpcy5oYXNOZXh0KCkmJih0PXRoaXMuX19pbnB1dC5jaGFyQXQodGhpcy5fX3Bvc2l0aW9uKSx0aGlzLl9fcG9zaXRpb24rPTEpLHR9LHIucHJvdG90eXBlLnBlZWs9ZnVuY3Rpb24odCl7dmFyIGU9bnVsbDtyZXR1cm4gdD10fHwwLCh0Kz10aGlzLl9fcG9zaXRpb24pPj0wJiZ0PHRoaXMuX19pbnB1dF9sZW5ndGgmJihlPXRoaXMuX19pbnB1dC5jaGFyQXQodCkpLGV9LHIucHJvdG90eXBlLl9fbWF0Y2g9ZnVuY3Rpb24odCxlKXt0Lmxhc3RJbmRleD1lO3ZhciBuPXQuZXhlYyh0aGlzLl9faW5wdXQpO3JldHVybiFufHxpJiZ0LnN0aWNreXx8bi5pbmRleCE9PWUmJihuPW51bGwpLG59LHIucHJvdG90eXBlLnRlc3Q9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZT1lfHwwLChlKz10aGlzLl9fcG9zaXRpb24pPj0wJiZlPHRoaXMuX19pbnB1dF9sZW5ndGgmJiEhdGhpcy5fX21hdGNoKHQsZSl9LHIucHJvdG90eXBlLnRlc3RDaGFyPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5wZWVrKGUpO3JldHVybiB0Lmxhc3RJbmRleD0wLG51bGwhPT1uJiZ0LnRlc3Qobil9LHIucHJvdG90eXBlLm1hdGNoPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX19tYXRjaCh0LHRoaXMuX19wb3NpdGlvbik7cmV0dXJuIGU/dGhpcy5fX3Bvc2l0aW9uKz1lWzBdLmxlbmd0aDplPW51bGwsZX0sci5wcm90b3R5cGUucmVhZD1mdW5jdGlvbih0LGUsbil7dmFyIGkscj1cIlwiO3JldHVybiB0JiYoaT10aGlzLm1hdGNoKHQpKSYmKHIrPWlbMF0pLCFlfHwhaSYmdHx8KHIrPXRoaXMucmVhZFVudGlsKGUsbikpLHJ9LHIucHJvdG90eXBlLnJlYWRVbnRpbD1mdW5jdGlvbih0LGUpe3ZhciBuLGk9dGhpcy5fX3Bvc2l0aW9uO3QubGFzdEluZGV4PXRoaXMuX19wb3NpdGlvbjt2YXIgcj10LmV4ZWModGhpcy5fX2lucHV0KTtyZXR1cm4gcj8oaT1yLmluZGV4LGUmJihpKz1yWzBdLmxlbmd0aCkpOmk9dGhpcy5fX2lucHV0X2xlbmd0aCxuPXRoaXMuX19pbnB1dC5zdWJzdHJpbmcodGhpcy5fX3Bvc2l0aW9uLGkpLHRoaXMuX19wb3NpdGlvbj1pLG59LHIucHJvdG90eXBlLnJlYWRVbnRpbEFmdGVyPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnJlYWRVbnRpbCh0LCEwKX0sci5wcm90b3R5cGUuZ2V0X3JlZ2V4cD1mdW5jdGlvbih0LGUpe3ZhciBuPW51bGwscj1cImdcIjtyZXR1cm4gZSYmaSYmKHI9XCJ5XCIpLFwic3RyaW5nXCI9PXR5cGVvZiB0JiZcIlwiIT09dD9uPW5ldyBSZWdFeHAodCxyKTp0JiYobj1uZXcgUmVnRXhwKHQuc291cmNlLHIpKSxufSxyLnByb3RvdHlwZS5nZXRfbGl0ZXJhbF9yZWdleHA9ZnVuY3Rpb24odCl7cmV0dXJuIFJlZ0V4cCh0LnJlcGxhY2UoL1stXFwvXFxcXF4kKis/LigpfFtcXF17fV0vZyxcIlxcXFwkJlwiKSl9LHIucHJvdG90eXBlLnBlZWtVbnRpbEFmdGVyPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX19wb3NpdGlvbixuPXRoaXMucmVhZFVudGlsQWZ0ZXIodCk7cmV0dXJuIHRoaXMuX19wb3NpdGlvbj1lLG59LHIucHJvdG90eXBlLmxvb2tCYWNrPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX19wb3NpdGlvbi0xO3JldHVybiBlPj10Lmxlbmd0aCYmdGhpcy5fX2lucHV0LnN1YnN0cmluZyhlLXQubGVuZ3RoLGUpLnRvTG93ZXJDYXNlKCk9PT10fSx0LmV4cG9ydHMuSW5wdXRTY2FubmVyPXJ9LCwsLCxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaSh0LGUpe3Q9XCJzdHJpbmdcIj09dHlwZW9mIHQ/dDp0LnNvdXJjZSxlPVwic3RyaW5nXCI9PXR5cGVvZiBlP2U6ZS5zb3VyY2UsdGhpcy5fX2RpcmVjdGl2ZXNfYmxvY2tfcGF0dGVybj1uZXcgUmVnRXhwKHQrLyBiZWF1dGlmeSggXFx3K1s6XVxcdyspKyAvLnNvdXJjZStlLFwiZ1wiKSx0aGlzLl9fZGlyZWN0aXZlX3BhdHRlcm49LyAoXFx3KylbOl0oXFx3KykvZyx0aGlzLl9fZGlyZWN0aXZlc19lbmRfaWdub3JlX3BhdHRlcm49bmV3IFJlZ0V4cCh0Ky9cXHNiZWF1dGlmeVxcc2lnbm9yZTplbmRcXHMvLnNvdXJjZStlLFwiZ1wiKX1pLnByb3RvdHlwZS5nZXRfZGlyZWN0aXZlcz1mdW5jdGlvbih0KXtpZighdC5tYXRjaCh0aGlzLl9fZGlyZWN0aXZlc19ibG9ja19wYXR0ZXJuKSlyZXR1cm4gbnVsbDt2YXIgZT17fTt0aGlzLl9fZGlyZWN0aXZlX3BhdHRlcm4ubGFzdEluZGV4PTA7Zm9yKHZhciBuPXRoaXMuX19kaXJlY3RpdmVfcGF0dGVybi5leGVjKHQpO247KWVbblsxXV09blsyXSxuPXRoaXMuX19kaXJlY3RpdmVfcGF0dGVybi5leGVjKHQpO3JldHVybiBlfSxpLnByb3RvdHlwZS5yZWFkSWdub3JlZD1mdW5jdGlvbih0KXtyZXR1cm4gdC5yZWFkVW50aWxBZnRlcih0aGlzLl9fZGlyZWN0aXZlc19lbmRfaWdub3JlX3BhdHRlcm4pfSx0LmV4cG9ydHMuRGlyZWN0aXZlcz1pfSwsZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBpPW4oMTYpLkJlYXV0aWZpZXIscj1uKDE3KS5PcHRpb25zO3QuZXhwb3J0cz1mdW5jdGlvbih0LGUpe3JldHVybiBuZXcgaSh0LGUpLmJlYXV0aWZ5KCl9LHQuZXhwb3J0cy5kZWZhdWx0T3B0aW9ucz1mdW5jdGlvbigpe3JldHVybiBuZXcgcn19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1uKDE3KS5PcHRpb25zLHI9bigyKS5PdXRwdXQsYT1uKDgpLklucHV0U2Nhbm5lcixvPW5ldygwLG4oMTMpLkRpcmVjdGl2ZXMpKC9cXC9cXCovLC9cXCpcXC8vKSxzPS9cXHJcXG58W1xcclxcbl0vLHU9L1xcclxcbnxbXFxyXFxuXS9nLGw9L1xccy8sYz0vKD86XFxzfFxcbikrL2csXz0vXFwvXFwqKD86W1xcc1xcU10qPykoKD86XFwqXFwvKXwkKS9nLGg9L1xcL1xcLyg/OlteXFxuXFxyXFx1MjAyOFxcdTIwMjldKikvZztmdW5jdGlvbiBwKHQsZSl7dGhpcy5fc291cmNlX3RleHQ9dHx8XCJcIix0aGlzLl9vcHRpb25zPW5ldyBpKGUpLHRoaXMuX2NoPW51bGwsdGhpcy5faW5wdXQ9bnVsbCx0aGlzLk5FU1RFRF9BVF9SVUxFPXtcIkBwYWdlXCI6ITAsXCJAZm9udC1mYWNlXCI6ITAsXCJAa2V5ZnJhbWVzXCI6ITAsXCJAbWVkaWFcIjohMCxcIkBzdXBwb3J0c1wiOiEwLFwiQGRvY3VtZW50XCI6ITB9LHRoaXMuQ09ORElUSU9OQUxfR1JPVVBfUlVMRT17XCJAbWVkaWFcIjohMCxcIkBzdXBwb3J0c1wiOiEwLFwiQGRvY3VtZW50XCI6ITB9fXAucHJvdG90eXBlLmVhdFN0cmluZz1mdW5jdGlvbih0KXt2YXIgZT1cIlwiO2Zvcih0aGlzLl9jaD10aGlzLl9pbnB1dC5uZXh0KCk7dGhpcy5fY2g7KXtpZihlKz10aGlzLl9jaCxcIlxcXFxcIj09PXRoaXMuX2NoKWUrPXRoaXMuX2lucHV0Lm5leHQoKTtlbHNlIGlmKC0xIT09dC5pbmRleE9mKHRoaXMuX2NoKXx8XCJcXG5cIj09PXRoaXMuX2NoKWJyZWFrO3RoaXMuX2NoPXRoaXMuX2lucHV0Lm5leHQoKX1yZXR1cm4gZX0scC5wcm90b3R5cGUuZWF0V2hpdGVzcGFjZT1mdW5jdGlvbih0KXtmb3IodmFyIGU9bC50ZXN0KHRoaXMuX2lucHV0LnBlZWsoKSksbj0hMDtsLnRlc3QodGhpcy5faW5wdXQucGVlaygpKTspdGhpcy5fY2g9dGhpcy5faW5wdXQubmV4dCgpLHQmJlwiXFxuXCI9PT10aGlzLl9jaCYmKHRoaXMuX29wdGlvbnMucHJlc2VydmVfbmV3bGluZXN8fG4pJiYobj0hMSx0aGlzLl9vdXRwdXQuYWRkX25ld19saW5lKCEwKSk7cmV0dXJuIGV9LHAucHJvdG90eXBlLmZvdW5kTmVzdGVkUHNldWRvQ2xhc3M9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9MCxlPTEsbj10aGlzLl9pbnB1dC5wZWVrKGUpO247KXtpZihcIntcIj09PW4pcmV0dXJuITA7aWYoXCIoXCI9PT1uKXQrPTE7ZWxzZSBpZihcIilcIj09PW4pe2lmKDA9PT10KXJldHVybiExO3QtPTF9ZWxzZSBpZihcIjtcIj09PW58fFwifVwiPT09bilyZXR1cm4hMTtlKyssbj10aGlzLl9pbnB1dC5wZWVrKGUpfXJldHVybiExfSxwLnByb3RvdHlwZS5wcmludF9zdHJpbmc9ZnVuY3Rpb24odCl7dGhpcy5fb3V0cHV0LnNldF9pbmRlbnQodGhpcy5faW5kZW50TGV2ZWwpLHRoaXMuX291dHB1dC5ub25fYnJlYWtpbmdfc3BhY2U9ITAsdGhpcy5fb3V0cHV0LmFkZF90b2tlbih0KX0scC5wcm90b3R5cGUucHJlc2VydmVTaW5nbGVTcGFjZT1mdW5jdGlvbih0KXt0JiYodGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj0hMCl9LHAucHJvdG90eXBlLmluZGVudD1mdW5jdGlvbigpe3RoaXMuX2luZGVudExldmVsKyt9LHAucHJvdG90eXBlLm91dGRlbnQ9ZnVuY3Rpb24oKXt0aGlzLl9pbmRlbnRMZXZlbD4wJiZ0aGlzLl9pbmRlbnRMZXZlbC0tfSxwLnByb3RvdHlwZS5iZWF1dGlmeT1mdW5jdGlvbigpe2lmKHRoaXMuX29wdGlvbnMuZGlzYWJsZWQpcmV0dXJuIHRoaXMuX3NvdXJjZV90ZXh0O3ZhciB0PXRoaXMuX3NvdXJjZV90ZXh0LGU9dGhpcy5fb3B0aW9ucy5lb2w7XCJhdXRvXCI9PT1lJiYoZT1cIlxcblwiLHQmJnMudGVzdCh0fHxcIlwiKSYmKGU9dC5tYXRjaChzKVswXSkpO3ZhciBuPSh0PXQucmVwbGFjZSh1LFwiXFxuXCIpKS5tYXRjaCgvXltcXHQgXSovKVswXTt0aGlzLl9vdXRwdXQ9bmV3IHIodGhpcy5fb3B0aW9ucyxuKSx0aGlzLl9pbnB1dD1uZXcgYSh0KSx0aGlzLl9pbmRlbnRMZXZlbD0wLHRoaXMuX25lc3RlZExldmVsPTAsdGhpcy5fY2g9bnVsbDtmb3IodmFyIGkscCxkPTAsZj0hMSx2PSExLGc9ITEsbT0hMSxiPSExLHk9dGhpcy5fY2g7aT1cIlwiIT09dGhpcy5faW5wdXQucmVhZChjKSxwPXksdGhpcy5fY2g9dGhpcy5faW5wdXQubmV4dCgpLFwiXFxcXFwiPT09dGhpcy5fY2gmJnRoaXMuX2lucHV0Lmhhc05leHQoKSYmKHRoaXMuX2NoKz10aGlzLl9pbnB1dC5uZXh0KCkpLHk9dGhpcy5fY2gsdGhpcy5fY2g7KWlmKFwiL1wiPT09dGhpcy5fY2gmJlwiKlwiPT09dGhpcy5faW5wdXQucGVlaygpKXt0aGlzLl9vdXRwdXQuYWRkX25ld19saW5lKCksdGhpcy5faW5wdXQuYmFjaygpO3ZhciB3PXRoaXMuX2lucHV0LnJlYWQoXykseD1vLmdldF9kaXJlY3RpdmVzKHcpO3gmJlwic3RhcnRcIj09PXguaWdub3JlJiYodys9by5yZWFkSWdub3JlZCh0aGlzLl9pbnB1dCkpLHRoaXMucHJpbnRfc3RyaW5nKHcpLHRoaXMuZWF0V2hpdGVzcGFjZSghMCksdGhpcy5fb3V0cHV0LmFkZF9uZXdfbGluZSgpfWVsc2UgaWYoXCIvXCI9PT10aGlzLl9jaCYmXCIvXCI9PT10aGlzLl9pbnB1dC5wZWVrKCkpdGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj0hMCx0aGlzLl9pbnB1dC5iYWNrKCksdGhpcy5wcmludF9zdHJpbmcodGhpcy5faW5wdXQucmVhZChoKSksdGhpcy5lYXRXaGl0ZXNwYWNlKCEwKTtlbHNlIGlmKFwiQFwiPT09dGhpcy5fY2gpaWYodGhpcy5wcmVzZXJ2ZVNpbmdsZVNwYWNlKGkpLFwie1wiPT09dGhpcy5faW5wdXQucGVlaygpKXRoaXMucHJpbnRfc3RyaW5nKHRoaXMuX2NoK3RoaXMuZWF0U3RyaW5nKFwifVwiKSk7ZWxzZXt0aGlzLnByaW50X3N0cmluZyh0aGlzLl9jaCk7dmFyIGs9dGhpcy5faW5wdXQucGVla1VudGlsQWZ0ZXIoL1s6ICw7e30oKVtcXF1cXC89J1wiXS9nKTtrLm1hdGNoKC9bIDpdJC8pJiYoaz10aGlzLmVhdFN0cmluZyhcIjogXCIpLnJlcGxhY2UoL1xccyQvLFwiXCIpLHRoaXMucHJpbnRfc3RyaW5nKGspLHRoaXMuX291dHB1dC5zcGFjZV9iZWZvcmVfdG9rZW49ITApLFwiZXh0ZW5kXCI9PT0oaz1rLnJlcGxhY2UoL1xccyQvLFwiXCIpKT9tPSEwOlwiaW1wb3J0XCI9PT1rJiYoYj0hMCksayBpbiB0aGlzLk5FU1RFRF9BVF9SVUxFPyh0aGlzLl9uZXN0ZWRMZXZlbCs9MSxrIGluIHRoaXMuQ09ORElUSU9OQUxfR1JPVVBfUlVMRSYmKGc9ITApKTpmfHwwIT09ZHx8LTE9PT1rLmluZGV4T2YoXCI6XCIpfHwodj0hMCx0aGlzLmluZGVudCgpKX1lbHNlXCIjXCI9PT10aGlzLl9jaCYmXCJ7XCI9PT10aGlzLl9pbnB1dC5wZWVrKCk/KHRoaXMucHJlc2VydmVTaW5nbGVTcGFjZShpKSx0aGlzLnByaW50X3N0cmluZyh0aGlzLl9jaCt0aGlzLmVhdFN0cmluZyhcIn1cIikpKTpcIntcIj09PXRoaXMuX2NoPyh2JiYodj0hMSx0aGlzLm91dGRlbnQoKSksdGhpcy5pbmRlbnQoKSx0aGlzLl9vdXRwdXQuc3BhY2VfYmVmb3JlX3Rva2VuPSEwLHRoaXMucHJpbnRfc3RyaW5nKHRoaXMuX2NoKSxnPyhnPSExLGY9dGhpcy5faW5kZW50TGV2ZWw+dGhpcy5fbmVzdGVkTGV2ZWwpOmY9dGhpcy5faW5kZW50TGV2ZWw+PXRoaXMuX25lc3RlZExldmVsLHRoaXMuX29wdGlvbnMubmV3bGluZV9iZXR3ZWVuX3J1bGVzJiZmJiZ0aGlzLl9vdXRwdXQucHJldmlvdXNfbGluZSYmXCJ7XCIhPT10aGlzLl9vdXRwdXQucHJldmlvdXNfbGluZS5pdGVtKC0xKSYmdGhpcy5fb3V0cHV0LmVuc3VyZV9lbXB0eV9saW5lX2Fib3ZlKFwiL1wiLFwiLFwiKSx0aGlzLmVhdFdoaXRlc3BhY2UoITApLHRoaXMuX291dHB1dC5hZGRfbmV3X2xpbmUoKSk6XCJ9XCI9PT10aGlzLl9jaD8odGhpcy5vdXRkZW50KCksdGhpcy5fb3V0cHV0LmFkZF9uZXdfbGluZSgpLFwie1wiPT09cCYmdGhpcy5fb3V0cHV0LnRyaW0oITApLGI9ITEsbT0hMSx2JiYodGhpcy5vdXRkZW50KCksdj0hMSksdGhpcy5wcmludF9zdHJpbmcodGhpcy5fY2gpLGY9ITEsdGhpcy5fbmVzdGVkTGV2ZWwmJnRoaXMuX25lc3RlZExldmVsLS0sdGhpcy5lYXRXaGl0ZXNwYWNlKCEwKSx0aGlzLl9vdXRwdXQuYWRkX25ld19saW5lKCksdGhpcy5fb3B0aW9ucy5uZXdsaW5lX2JldHdlZW5fcnVsZXMmJiF0aGlzLl9vdXRwdXQuanVzdF9hZGRlZF9ibGFua2xpbmUoKSYmXCJ9XCIhPT10aGlzLl9pbnB1dC5wZWVrKCkmJnRoaXMuX291dHB1dC5hZGRfbmV3X2xpbmUoITApKTpcIjpcIj09PXRoaXMuX2NoPyFmJiYhZ3x8dGhpcy5faW5wdXQubG9va0JhY2soXCImXCIpfHx0aGlzLmZvdW5kTmVzdGVkUHNldWRvQ2xhc3MoKXx8dGhpcy5faW5wdXQubG9va0JhY2soXCIoXCIpfHxtfHwwIT09ZD8odGhpcy5faW5wdXQubG9va0JhY2soXCIgXCIpJiYodGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj0hMCksXCI6XCI9PT10aGlzLl9pbnB1dC5wZWVrKCk/KHRoaXMuX2NoPXRoaXMuX2lucHV0Lm5leHQoKSx0aGlzLnByaW50X3N0cmluZyhcIjo6XCIpKTp0aGlzLnByaW50X3N0cmluZyhcIjpcIikpOih0aGlzLnByaW50X3N0cmluZyhcIjpcIiksdnx8KHY9ITAsdGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj0hMCx0aGlzLmVhdFdoaXRlc3BhY2UoITApLHRoaXMuaW5kZW50KCkpKTonXCInPT09dGhpcy5fY2h8fFwiJ1wiPT09dGhpcy5fY2g/KHRoaXMucHJlc2VydmVTaW5nbGVTcGFjZShpKSx0aGlzLnByaW50X3N0cmluZyh0aGlzLl9jaCt0aGlzLmVhdFN0cmluZyh0aGlzLl9jaCkpLHRoaXMuZWF0V2hpdGVzcGFjZSghMCkpOlwiO1wiPT09dGhpcy5fY2g/MD09PWQ/KHYmJih0aGlzLm91dGRlbnQoKSx2PSExKSxtPSExLGI9ITEsdGhpcy5wcmludF9zdHJpbmcodGhpcy5fY2gpLHRoaXMuZWF0V2hpdGVzcGFjZSghMCksXCIvXCIhPT10aGlzLl9pbnB1dC5wZWVrKCkmJnRoaXMuX291dHB1dC5hZGRfbmV3X2xpbmUoKSk6KHRoaXMucHJpbnRfc3RyaW5nKHRoaXMuX2NoKSx0aGlzLmVhdFdoaXRlc3BhY2UoITApLHRoaXMuX291dHB1dC5zcGFjZV9iZWZvcmVfdG9rZW49ITApOlwiKFwiPT09dGhpcy5fY2g/dGhpcy5faW5wdXQubG9va0JhY2soXCJ1cmxcIik/KHRoaXMucHJpbnRfc3RyaW5nKHRoaXMuX2NoKSx0aGlzLmVhdFdoaXRlc3BhY2UoKSxkKyssdGhpcy5pbmRlbnQoKSx0aGlzLl9jaD10aGlzLl9pbnB1dC5uZXh0KCksXCIpXCI9PT10aGlzLl9jaHx8J1wiJz09PXRoaXMuX2NofHxcIidcIj09PXRoaXMuX2NoP3RoaXMuX2lucHV0LmJhY2soKTp0aGlzLl9jaCYmKHRoaXMucHJpbnRfc3RyaW5nKHRoaXMuX2NoK3RoaXMuZWF0U3RyaW5nKFwiKVwiKSksZCYmKGQtLSx0aGlzLm91dGRlbnQoKSkpKToodGhpcy5wcmVzZXJ2ZVNpbmdsZVNwYWNlKGkpLHRoaXMucHJpbnRfc3RyaW5nKHRoaXMuX2NoKSx0aGlzLmVhdFdoaXRlc3BhY2UoKSxkKyssdGhpcy5pbmRlbnQoKSk6XCIpXCI9PT10aGlzLl9jaD8oZCYmKGQtLSx0aGlzLm91dGRlbnQoKSksdGhpcy5wcmludF9zdHJpbmcodGhpcy5fY2gpKTpcIixcIj09PXRoaXMuX2NoPyh0aGlzLnByaW50X3N0cmluZyh0aGlzLl9jaCksdGhpcy5lYXRXaGl0ZXNwYWNlKCEwKSwhdGhpcy5fb3B0aW9ucy5zZWxlY3Rvcl9zZXBhcmF0b3JfbmV3bGluZXx8dnx8MCE9PWR8fGI/dGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj0hMDp0aGlzLl9vdXRwdXQuYWRkX25ld19saW5lKCkpOlwiPlwiIT09dGhpcy5fY2gmJlwiK1wiIT09dGhpcy5fY2gmJlwiflwiIT09dGhpcy5fY2h8fHZ8fDAhPT1kP1wiXVwiPT09dGhpcy5fY2g/dGhpcy5wcmludF9zdHJpbmcodGhpcy5fY2gpOlwiW1wiPT09dGhpcy5fY2g/KHRoaXMucHJlc2VydmVTaW5nbGVTcGFjZShpKSx0aGlzLnByaW50X3N0cmluZyh0aGlzLl9jaCkpOlwiPVwiPT09dGhpcy5fY2g/KHRoaXMuZWF0V2hpdGVzcGFjZSgpLHRoaXMucHJpbnRfc3RyaW5nKFwiPVwiKSxsLnRlc3QodGhpcy5fY2gpJiYodGhpcy5fY2g9XCJcIikpOlwiIVwiIT09dGhpcy5fY2h8fHRoaXMuX2lucHV0Lmxvb2tCYWNrKFwiXFxcXFwiKT8odGhpcy5wcmVzZXJ2ZVNpbmdsZVNwYWNlKGkpLHRoaXMucHJpbnRfc3RyaW5nKHRoaXMuX2NoKSk6KHRoaXMucHJpbnRfc3RyaW5nKFwiIFwiKSx0aGlzLnByaW50X3N0cmluZyh0aGlzLl9jaCkpOnRoaXMuX29wdGlvbnMuc3BhY2VfYXJvdW5kX2NvbWJpbmF0b3I/KHRoaXMuX291dHB1dC5zcGFjZV9iZWZvcmVfdG9rZW49ITAsdGhpcy5wcmludF9zdHJpbmcodGhpcy5fY2gpLHRoaXMuX291dHB1dC5zcGFjZV9iZWZvcmVfdG9rZW49ITApOih0aGlzLnByaW50X3N0cmluZyh0aGlzLl9jaCksdGhpcy5lYXRXaGl0ZXNwYWNlKCksdGhpcy5fY2gmJmwudGVzdCh0aGlzLl9jaCkmJih0aGlzLl9jaD1cIlwiKSk7cmV0dXJuIHRoaXMuX291dHB1dC5nZXRfY29kZShlKX0sdC5leHBvcnRzLkJlYXV0aWZpZXI9cH0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBpPW4oNikuT3B0aW9ucztmdW5jdGlvbiByKHQpe2kuY2FsbCh0aGlzLHQsXCJjc3NcIiksdGhpcy5zZWxlY3Rvcl9zZXBhcmF0b3JfbmV3bGluZT10aGlzLl9nZXRfYm9vbGVhbihcInNlbGVjdG9yX3NlcGFyYXRvcl9uZXdsaW5lXCIsITApLHRoaXMubmV3bGluZV9iZXR3ZWVuX3J1bGVzPXRoaXMuX2dldF9ib29sZWFuKFwibmV3bGluZV9iZXR3ZWVuX3J1bGVzXCIsITApO3ZhciBlPXRoaXMuX2dldF9ib29sZWFuKFwic3BhY2VfYXJvdW5kX3NlbGVjdG9yX3NlcGFyYXRvclwiKTt0aGlzLnNwYWNlX2Fyb3VuZF9jb21iaW5hdG9yPXRoaXMuX2dldF9ib29sZWFuKFwic3BhY2VfYXJvdW5kX2NvbWJpbmF0b3JcIil8fGV9ci5wcm90b3R5cGU9bmV3IGksdC5leHBvcnRzLk9wdGlvbnM9cn1dKSx2b2lkIDA9PT0oaT1mdW5jdGlvbigpe3JldHVybntjc3NfYmVhdXRpZnk6cn19LmFwcGx5KGUsW10pKXx8KHQuZXhwb3J0cz1pKX0sZnVuY3Rpb24odCxlKXtmdW5jdGlvbiBuKGUsaSl7cmV0dXJuIHQuZXhwb3J0cz1uPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5fX3Byb3RvX189ZSx0fSxuKGUsaSl9dC5leHBvcnRzPW59LGZ1bmN0aW9uKHQsZSl7dmFyIG4saSxyPXQuZXhwb3J0cz17fTtmdW5jdGlvbiBhKCl7dGhyb3cgbmV3IEVycm9yKFwic2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBvKCl7dGhyb3cgbmV3IEVycm9yKFwiY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfWZ1bmN0aW9uIHModCl7aWYobj09PXNldFRpbWVvdXQpcmV0dXJuIHNldFRpbWVvdXQodCwwKTtpZigobj09PWF8fCFuKSYmc2V0VGltZW91dClyZXR1cm4gbj1zZXRUaW1lb3V0LHNldFRpbWVvdXQodCwwKTt0cnl7cmV0dXJuIG4odCwwKX1jYXRjaChlKXt0cnl7cmV0dXJuIG4uY2FsbChudWxsLHQsMCl9Y2F0Y2goZSl7cmV0dXJuIG4uY2FsbCh0aGlzLHQsMCl9fX0hZnVuY3Rpb24oKXt0cnl7bj1cImZ1bmN0aW9uXCI9PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6YX1jYXRjaCh0KXtuPWF9dHJ5e2k9XCJmdW5jdGlvblwiPT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDpvfWNhdGNoKHQpe2k9b319KCk7dmFyIHUsbD1bXSxjPSExLF89LTE7ZnVuY3Rpb24gaCgpe2MmJnUmJihjPSExLHUubGVuZ3RoP2w9dS5jb25jYXQobCk6Xz0tMSxsLmxlbmd0aCYmcCgpKX1mdW5jdGlvbiBwKCl7aWYoIWMpe3ZhciB0PXMoaCk7Yz0hMDtmb3IodmFyIGU9bC5sZW5ndGg7ZTspe2Zvcih1PWwsbD1bXTsrK188ZTspdSYmdVtfXS5ydW4oKTtfPS0xLGU9bC5sZW5ndGh9dT1udWxsLGM9ITEsZnVuY3Rpb24odCl7aWYoaT09PWNsZWFyVGltZW91dClyZXR1cm4gY2xlYXJUaW1lb3V0KHQpO2lmKChpPT09b3x8IWkpJiZjbGVhclRpbWVvdXQpcmV0dXJuIGk9Y2xlYXJUaW1lb3V0LGNsZWFyVGltZW91dCh0KTt0cnl7aSh0KX1jYXRjaChlKXt0cnl7cmV0dXJuIGkuY2FsbChudWxsLHQpfWNhdGNoKGUpe3JldHVybiBpLmNhbGwodGhpcyx0KX19fSh0KX19ZnVuY3Rpb24gZCh0LGUpe3RoaXMuZnVuPXQsdGhpcy5hcnJheT1lfWZ1bmN0aW9uIGYoKXt9ci5uZXh0VGljaz1mdW5jdGlvbih0KXt2YXIgZT1uZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aC0xKTtpZihhcmd1bWVudHMubGVuZ3RoPjEpZm9yKHZhciBuPTE7bjxhcmd1bWVudHMubGVuZ3RoO24rKyllW24tMV09YXJndW1lbnRzW25dO2wucHVzaChuZXcgZCh0LGUpKSwxIT09bC5sZW5ndGh8fGN8fHMocCl9LGQucHJvdG90eXBlLnJ1bj1mdW5jdGlvbigpe3RoaXMuZnVuLmFwcGx5KG51bGwsdGhpcy5hcnJheSl9LHIudGl0bGU9XCJicm93c2VyXCIsci5icm93c2VyPSEwLHIuZW52PXt9LHIuYXJndj1bXSxyLnZlcnNpb249XCJcIixyLnZlcnNpb25zPXt9LHIub249ZixyLmFkZExpc3RlbmVyPWYsci5vbmNlPWYsci5vZmY9ZixyLnJlbW92ZUxpc3RlbmVyPWYsci5yZW1vdmVBbGxMaXN0ZW5lcnM9ZixyLmVtaXQ9ZixyLnByZXBlbmRMaXN0ZW5lcj1mLHIucHJlcGVuZE9uY2VMaXN0ZW5lcj1mLHIubGlzdGVuZXJzPWZ1bmN0aW9uKHQpe3JldHVybltdfSxyLmJpbmRpbmc9ZnVuY3Rpb24odCl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWRcIil9LHIuY3dkPWZ1bmN0aW9uKCl7cmV0dXJuXCIvXCJ9LHIuY2hkaXI9ZnVuY3Rpb24odCl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkXCIpfSxyLnVtYXNrPWZ1bmN0aW9uKCl7cmV0dXJuIDB9fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaSh0KXtyZXR1cm4gdCYmdC5fX2VzTW9kdWxlP3Q6e2RlZmF1bHQ6dH19ZS5fX2VzTW9kdWxlPSEwLGUuSGFuZGxlYmFyc0Vudmlyb25tZW50PWM7dmFyIHI9bigxMCksYT1pKG4oMTMpKSxvPW4oMjMpLHM9big0OCksdT1pKG4oMjQpKSxsPW4oMjUpO2UuVkVSU0lPTj1cIjQuNy4zXCI7ZS5DT01QSUxFUl9SRVZJU0lPTj04O2UuTEFTVF9DT01QQVRJQkxFX0NPTVBJTEVSX1JFVklTSU9OPTc7ZS5SRVZJU0lPTl9DSEFOR0VTPXsxOlwiPD0gMS4wLnJjLjJcIiwyOlwiPT0gMS4wLjAtcmMuM1wiLDM6XCI9PSAxLjAuMC1yYy40XCIsNDpcIj09IDEueC54XCIsNTpcIj09IDIuMC4wLWFscGhhLnhcIiw2OlwiPj0gMi4wLjAtYmV0YS4xXCIsNzpcIj49IDQuMC4wIDw0LjMuMFwiLDg6XCI+PSA0LjMuMFwifTtmdW5jdGlvbiBjKHQsZSxuKXt0aGlzLmhlbHBlcnM9dHx8e30sdGhpcy5wYXJ0aWFscz1lfHx7fSx0aGlzLmRlY29yYXRvcnM9bnx8e30sby5yZWdpc3RlckRlZmF1bHRIZWxwZXJzKHRoaXMpLHMucmVnaXN0ZXJEZWZhdWx0RGVjb3JhdG9ycyh0aGlzKX1jLnByb3RvdHlwZT17Y29uc3RydWN0b3I6Yyxsb2dnZXI6dS5kZWZhdWx0LGxvZzp1LmRlZmF1bHQubG9nLHJlZ2lzdGVySGVscGVyOmZ1bmN0aW9uKHQsZSl7aWYoXCJbb2JqZWN0IE9iamVjdF1cIj09PXIudG9TdHJpbmcuY2FsbCh0KSl7aWYoZSl0aHJvdyBuZXcgYS5kZWZhdWx0KFwiQXJnIG5vdCBzdXBwb3J0ZWQgd2l0aCBtdWx0aXBsZSBoZWxwZXJzXCIpO3IuZXh0ZW5kKHRoaXMuaGVscGVycyx0KX1lbHNlIHRoaXMuaGVscGVyc1t0XT1lfSx1bnJlZ2lzdGVySGVscGVyOmZ1bmN0aW9uKHQpe2RlbGV0ZSB0aGlzLmhlbHBlcnNbdF19LHJlZ2lzdGVyUGFydGlhbDpmdW5jdGlvbih0LGUpe2lmKFwiW29iamVjdCBPYmplY3RdXCI9PT1yLnRvU3RyaW5nLmNhbGwodCkpci5leHRlbmQodGhpcy5wYXJ0aWFscyx0KTtlbHNle2lmKHZvaWQgMD09PWUpdGhyb3cgbmV3IGEuZGVmYXVsdCgnQXR0ZW1wdGluZyB0byByZWdpc3RlciBhIHBhcnRpYWwgY2FsbGVkIFwiJyt0KydcIiBhcyB1bmRlZmluZWQnKTt0aGlzLnBhcnRpYWxzW3RdPWV9fSx1bnJlZ2lzdGVyUGFydGlhbDpmdW5jdGlvbih0KXtkZWxldGUgdGhpcy5wYXJ0aWFsc1t0XX0scmVnaXN0ZXJEZWNvcmF0b3I6ZnVuY3Rpb24odCxlKXtpZihcIltvYmplY3QgT2JqZWN0XVwiPT09ci50b1N0cmluZy5jYWxsKHQpKXtpZihlKXRocm93IG5ldyBhLmRlZmF1bHQoXCJBcmcgbm90IHN1cHBvcnRlZCB3aXRoIG11bHRpcGxlIGRlY29yYXRvcnNcIik7ci5leHRlbmQodGhpcy5kZWNvcmF0b3JzLHQpfWVsc2UgdGhpcy5kZWNvcmF0b3JzW3RdPWV9LHVucmVnaXN0ZXJEZWNvcmF0b3I6ZnVuY3Rpb24odCl7ZGVsZXRlIHRoaXMuZGVjb3JhdG9yc1t0XX0scmVzZXRMb2dnZWRQcm9wZXJ0eUFjY2Vzc2VzOmZ1bmN0aW9uKCl7bC5yZXNldExvZ2dlZFByb3BlcnRpZXMoKX19O3ZhciBfPXUuZGVmYXVsdC5sb2c7ZS5sb2c9XyxlLmNyZWF0ZUZyYW1lPXIuY3JlYXRlRnJhbWUsZS5sb2dnZXI9dS5kZWZhdWx0fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaSh0KXtyZXR1cm4gdCYmdC5fX2VzTW9kdWxlP3Q6e2RlZmF1bHQ6dH19ZS5fX2VzTW9kdWxlPSEwLGUucmVnaXN0ZXJEZWZhdWx0SGVscGVycz1mdW5jdGlvbih0KXtyLmRlZmF1bHQodCksYS5kZWZhdWx0KHQpLG8uZGVmYXVsdCh0KSxzLmRlZmF1bHQodCksdS5kZWZhdWx0KHQpLGwuZGVmYXVsdCh0KSxjLmRlZmF1bHQodCl9LGUubW92ZUhlbHBlclRvSG9va3M9ZnVuY3Rpb24odCxlLG4pe3QuaGVscGVyc1tlXSYmKHQuaG9va3NbZV09dC5oZWxwZXJzW2VdLG58fGRlbGV0ZSB0LmhlbHBlcnNbZV0pfTt2YXIgcj1pKG4oNDEpKSxhPWkobig0MikpLG89aShuKDQzKSkscz1pKG4oNDQpKSx1PWkobig0NSkpLGw9aShuKDQ2KSksYz1pKG4oNDcpKX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2UuX19lc01vZHVsZT0hMDt2YXIgaT1uKDEwKSxyPXttZXRob2RNYXA6W1wiZGVidWdcIixcImluZm9cIixcIndhcm5cIixcImVycm9yXCJdLGxldmVsOlwiaW5mb1wiLGxvb2t1cExldmVsOmZ1bmN0aW9uKHQpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0KXt2YXIgZT1pLmluZGV4T2Yoci5tZXRob2RNYXAsdC50b0xvd2VyQ2FzZSgpKTt0PWU+PTA/ZTpwYXJzZUludCh0LDEwKX1yZXR1cm4gdH0sbG9nOmZ1bmN0aW9uKHQpe2lmKHQ9ci5sb29rdXBMZXZlbCh0KSxcInVuZGVmaW5lZFwiIT10eXBlb2YgY29uc29sZSYmci5sb29rdXBMZXZlbChyLmxldmVsKTw9dCl7dmFyIGU9ci5tZXRob2RNYXBbdF07Y29uc29sZVtlXXx8KGU9XCJsb2dcIik7Zm9yKHZhciBuPWFyZ3VtZW50cy5sZW5ndGgsaT1BcnJheShuPjE/bi0xOjApLGE9MTthPG47YSsrKWlbYS0xXT1hcmd1bWVudHNbYV07Y29uc29sZVtlXS5hcHBseShjb25zb2xlLGkpfX19O2UuZGVmYXVsdD1yLHQuZXhwb3J0cz1lLmRlZmF1bHR9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtlLl9fZXNNb2R1bGU9ITAsZS5jcmVhdGVQcm90b0FjY2Vzc0NvbnRyb2w9ZnVuY3Rpb24odCl7dmFyIGU9T2JqZWN0LmNyZWF0ZShudWxsKTtlLmNvbnN0cnVjdG9yPSExLGUuX19kZWZpbmVHZXR0ZXJfXz0hMSxlLl9fZGVmaW5lU2V0dGVyX189ITEsZS5fX2xvb2t1cEdldHRlcl9fPSExO3ZhciBuPU9iamVjdC5jcmVhdGUobnVsbCk7cmV0dXJuIG4uX19wcm90b19fPSExLHtwcm9wZXJ0aWVzOnt3aGl0ZWxpc3Q6aS5jcmVhdGVOZXdMb29rdXBPYmplY3Qobix0LmFsbG93ZWRQcm90b1Byb3BlcnRpZXMpLGRlZmF1bHRWYWx1ZTp0LmFsbG93UHJvdG9Qcm9wZXJ0aWVzQnlEZWZhdWx0fSxtZXRob2RzOnt3aGl0ZWxpc3Q6aS5jcmVhdGVOZXdMb29rdXBPYmplY3QoZSx0LmFsbG93ZWRQcm90b01ldGhvZHMpLGRlZmF1bHRWYWx1ZTp0LmFsbG93UHJvdG9NZXRob2RzQnlEZWZhdWx0fX19LGUucmVzdWx0SXNBbGxvd2VkPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gbyhcImZ1bmN0aW9uXCI9PXR5cGVvZiB0P2UubWV0aG9kczplLnByb3BlcnRpZXMsbil9LGUucmVzZXRMb2dnZWRQcm9wZXJ0aWVzPWZ1bmN0aW9uKCl7T2JqZWN0LmtleXMoYSkuZm9yRWFjaCgoZnVuY3Rpb24odCl7ZGVsZXRlIGFbdF19KSl9O3ZhciBpPW4oNTApLHI9ZnVuY3Rpb24odCl7aWYodCYmdC5fX2VzTW9kdWxlKXJldHVybiB0O3ZhciBlPXt9O2lmKG51bGwhPXQpZm9yKHZhciBuIGluIHQpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsbikmJihlW25dPXRbbl0pO3JldHVybiBlLmRlZmF1bHQ9dCxlfShuKDI0KSksYT1PYmplY3QuY3JlYXRlKG51bGwpO2Z1bmN0aW9uIG8odCxlKXtyZXR1cm4gdm9pZCAwIT09dC53aGl0ZWxpc3RbZV0/ITA9PT10LndoaXRlbGlzdFtlXTp2b2lkIDAhPT10LmRlZmF1bHRWYWx1ZT90LmRlZmF1bHRWYWx1ZTooZnVuY3Rpb24odCl7ITAhPT1hW3RdJiYoYVt0XT0hMCxyLmxvZyhcImVycm9yXCIsJ0hhbmRsZWJhcnM6IEFjY2VzcyBoYXMgYmVlbiBkZW5pZWQgdG8gcmVzb2x2ZSB0aGUgcHJvcGVydHkgXCInK3QrJ1wiIGJlY2F1c2UgaXQgaXMgbm90IGFuIFwib3duIHByb3BlcnR5XCIgb2YgaXRzIHBhcmVudC5cXG5Zb3UgY2FuIGFkZCBhIHJ1bnRpbWUgb3B0aW9uIHRvIGRpc2FibGUgdGhlIGNoZWNrIG9yIHRoaXMgd2FybmluZzpcXG5TZWUgaHR0cHM6Ly9oYW5kbGViYXJzanMuY29tL2FwaS1yZWZlcmVuY2UvcnVudGltZS1vcHRpb25zLmh0bWwjb3B0aW9ucy10by1jb250cm9sLXByb3RvdHlwZS1hY2Nlc3MgZm9yIGRldGFpbHMnKSl9KGUpLCExKX19LGZ1bmN0aW9uKHQsZSxuKXsoZT1uKDgpKCExKSkucHVzaChbdC5pLFwiQGZvbnQtZmFjZXskZmY6ZXJ1ZGEtaWNvbjtzcmM6dXJsKCdkYXRhOmFwcGxpY2F0aW9uL3gtZm9udC13b2ZmO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGQwOUdSZ0FCQUFBQUFBeVFBQXNBQUFBQUVzUUFBUUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCSFUxVkNBQUFCQ0FBQUFEc0FBQUJVSUlzbGVrOVRMeklBQUFGRUFBQUFRQUFBQUZaSGNWWFNZMjFoY0FBQUFZUUFBQUNWQUFBQ1VQS1graDFuYkhsbUFBQUNIQUFBQi9rQUFBczhobVg1SW1obFlXUUFBQW9ZQUFBQU1RQUFBRFlZYzkxQWFHaGxZUUFBQ2t3QUFBQWRBQUFBSkFqQUJaWm9iWFI0QUFBS2JBQUFBQjBBQUFCSVJZMy8vR3h2WTJFQUFBcU1BQUFBSmdBQUFDWVVSaElXYldGNGNBQUFDclFBQUFBZkFBQUFJQUVqQVExdVlXMWxBQUFLMUFBQUFTa0FBQUlXbTVlK0NuQnZjM1FBQUF3QUFBQUFqd0FBQU1uWlpRb0ZlSnhqWUdSZ1lPQmlNR0N3WTJCeWNmTUpZZURMU1N6Slk1QmlZR0dBQUpBOE1wc3hKek05a1lFRHhnUEtzWUJwRGlCbWc0Z0NBQ1k3QlVnQWVKeGpZR1MreXppQmdaV0JnYm1SNlF3REEwTS9oR1o4eldERXlNSEF3TVRBeXN5QUZRU2t1YVl3T0h4ay9DaklBdUxHc0RBeGdGUXlnamdBOTdVSjJYaWM3WkhKRGNNd0RBVEh0bnlmNmlOVnBLQzhVbTZhVUFVT1Y1c3lRbUE0RUVFSkFnbjBRQmM4Z2dUTm13YkZLNnBOclhjc3RaNTQxcDZrZXNuM0hibFJqbk9xdVkzZUZDOE9qRXpNY1c5bFkrZmc1Q0pIeThBL3Rwby92MVBXRkUyZGEydVFPNlA5bEdRMDZkSWI3YTRNQm5rMHlKTkJuZzN5WXJUVHNocmt6ZWgzWlRmSWgwRStEZkpsa0xNaGZ3RjJseXQ1QUFBQWVKeDFWbHRzRzljUnZZOTljQi9jNVdwMzd5NUphU1dTNWxLaUtGSWlsMHRac2lnSmZrZTJKRXRPblVwK3huYWl4a1dEcHJIckpQMHcraFVFam9PbStTblE1RXN0aXJwby9PRWlmVGlHN0g0VVJZSEFRUDFYb0hDQm9JK2Z3azBCSXcxQ3F2Y3VxYWdPYXBLWW5ia3pjMmZ1M0RPekJCRFFEMGI0dDBBRElKOHRTRENzRWt1VUlMRUU5RWNyM2o0RWY2SDVhYTE5Rlg1TFN6YzFlSlBLNlVLOGZiWDlacnlRQnBFL2VvVFhBUStBQkJzU0xLQzE5cnY3NFUvYlg5a1BXL0QwdnZaS2UzVmZ4dzduMGZkWkhHaUpVTWdXb0IrRXRVeVY0THl5Q1JTUEVhSWpvQlAwRFowSkNxU3J0dDJOOFIyYzMvYjE2MFlRVmgxSTBHdlVVdllJOFdScVRaMjNkMkVjd0ZIY0Rid0JMREFFUnFoLzFTRU9QYUVnMGd6OGdoODBRdnJOTXRsaW1pcVRBNmJoRzFCRTRPVHlRbVZzckxLd2ZHdUxPZm5hMnZuSnFhbko4MnVQdHBqMmdWWFV2NHBQUDJZWE1hY2ZzNHVZUDYrMi9ySWFIU25LN1FhK0FSd3dTak16TENGYmdTSWpmakFOQzkzeVFFdUhOR01obCtrZXV4ODJHQ0VJa0Q1bCtVTkJGMlo1L3ZhU1FqUklqdzNmNy9DYmxOL1d3ejl0QW8wb1M3ZDVmcFl1ZkxpczlCRUN2eWwyT1IxdWE5bE5zcHB4RUNScHplcGdGaHdHd0t3SDRTUnNOT0VrckpKK1dLdVNQdGpKaVRlMmMyUDU4b0dmRld6REl0V3diajZCbittMUhwaUNvMzJzT1lMNXdPclY1TTl2eUJxZUdSOXNiUXlPYXpLNkoydXRCMmJLcEwrTnh4NzRtWEdyTngvWHRIaSsxeHFYTmUyNTF1WEI4ZkZCOURybDM0NmJacnc5d3lqYytQODhxL3ZtSmdBYzVBQW9ndDIwN29JT2hVS1oxbnNhVm1BWmh2UjRoTldZb2tGSERoRTFlaWYwU2lvd2J6a2VaQkJwUW9ZUjVwS050UEJSSWpQcDlzVjdFR2RkekM0WmFHREkrQnJpOEN0a3A4RFpMeWpmZG1TT2FFbnJBdUpRcXoxWXVIYjgxTDFUeDY4VkJ2K0hoZS9UUGJwMmx6SkxSckVmR1M4Z25yL3NtRjdLdWhDNzdQUnBiUDhMU09EMnJuM1pPMksvd05RSCtBUGdScGg2RW5hZUNMYi9DQlE5dGg2aHg1TTc2QkhnN1cyK280K1E5cU1ZaFE5clBpYmFGRDRDcy8zcjVyYWdkdzA2ZmNqZHdZZEJHb1JnUDgyTTJKYUdzbVVVTkZHVk9INHVLMFRJQ0hEVjQycFpqY3VXdVZ5MXlablZKZ3JLS0tzaHkwUG8zNG5VOE1UdVhjUEo1UEN1dlZORTYzRnp1YkhzTzBldlhYcDJmanFWbWw0NGMrbmFUOTU2OWV6Q2xHVk5MWng5OWEyamxhVm1MdGRjT3JFMHRXUEgxQktxRGZqWnlWSXlXWnJjVFIrOXJwUWR5MmJkR093TDVsZm1nL3JpNm1JUVVGS1B4TmJ0WFBQSXlZN255U1BOSEQxQ1o0N040aXRBWi9PT3BjMGdYYXMyWUJqZ1l1dStvaGlPWThncUtoRlVob2NFeDJndEdvNEk1M3JHd1JmKzEvRjFpajFBd1piYm5qeTFDRmM1RGVXMkIxT05UU3N4WStDUlhUOTgrdVZ6cDNkT1RPdzhmZTdsTTg4Y3ZleThTRlpmMlgxczdzQXcvUnlZT3pZN3ViUDBNM2dKajB6TlRvNmZPZnYzczJmR0o0dERiNjlPbjZtWGlnZWYrdmxUQjR1bGxEdENUYmJ6dUl2dmdrRTY5elZJTDZKZSs5SUFqSEp6TW9iVGhGVVBXUUp1enF6ZlhMK3k1K3VWa2ZtRlh5L01qMVFZYzJMdnpOVG9HKzFmdnRSUjdyazdzMmZQbGZXVkUxdjZ5RENkcXJ3QkQ3d1VxVzZ1ZDNDNjJlSXc3Y0VkWUl4bVFKdEpwSEhyVWVESGFoSTJCTnFOSGd4OW1pUU1XQzdRMGlCKzhJbnBHeVhYRFdySFZ1NnRIS3NGakZuYk56dGRnMGJpby9SY25XdDlkOS9GdlhzdlhtWGtCeDhsREZpYm50MjN0bVVhK2JodXlmRE5Uenl1UGdkUjE1U1NyVDY2ZysrQUZLalFjbVc2OTV5cGhvR2Z5eGlaemh3ekFwODJsRDhNc3dJZGgyU2FUWWN3cUVCOHVaWHdpa1VQZnFyYnR0Nk9vWWUyWnhmYkh6OHZTZXEvZEp0SWE3ZGt6MVorZ3plS0hyT2tXdlN3SFdQRzhGT3YyUHJzZVluWStzTzRSQTBWMjVOdnNYUkVXck5OanFkeitYdmdPcmdQSG9IUFFJdGRKQXluWVowV2p0WlE4RmtCYVVyc0lXeTk1WmhDaHhxa2pVL25HVjJNZERxMGlkUDkyblJRUkV0c2xTNTRuZm5IckNtaDh6Nk00T2hVT3hJVm1uUllScUVhSVZzaTlFbXo2SWFIM1dkSDYzU2ppc0l3YlBoUlBzeTNqQXFPV0lpQ1JUc3dEam1GeUtWQTgyQmNJMHJLanladWdlMUFyVmdndXJuVEtGRHZndWpnMzJtZTBlTXFJdW5wS3ljSEpEV0JKTEcrVzAxeHVtc3ZrcFNPMDZJMzBhL0pIQlloNWpNVnZVVFNra3dTSENjYVppek9pUnlFTVY0VlpWdExwRlRSTWJ5UjVFQk0xYkFxOWs3c1NNcU8xVzhPV1lMR3h4S3FPeFNrRFVtQUFxSTdqY3FXNG1EREZOVmtvcFF3TVJhNTlzeTVwWVhTQ01iVjZwSGxVMmVYRmtmS0NJMk9MaXlkVXYvR3kvSGV5c0U5V2s5TXN2UFphbVVXaWpHMTRScHVzZUlhZE0zUDFraE1UYWkvdHdZNUthN0dPRjJYakRnbllJSjVjYWpxbUp4VkxpUXJlY3p2dDk4ckhUMTA0RHpxUi9PeUlidUZNRzNJb3FvbXM2US96enNvN1hKS2JFQlZsWGhHbExHVWpBdW1MaE9sSnpZMm9DUmlHa2tGZ3dtSWVFa1JaSmw0UGZtWUVPTml2S0NLQ1g5WGYyZW5qT3ZsQmNKcHFZUnY2anlDc2hEdnRVMkhWWmtqaWltTjlnc1lpWkNYRXIyaDc2WVNadG9KOWZaWGNXM3M2TlBQblZ3OFhDcGpWQjA3c3Z6c3FTTUw1ZEZmK1ZaU05hZjM2NmJiNTJsNEloZ1hpa1pLTlpUazBHaXloNjJoblo0Z3hZUkpXdEJZb2tjM3NNakhGVlVSSEZHTis2T3VWYlRLTzl5eEFoYldyZGVIL2pHMzhDTHNaeTI2MmFMdkZjd2grdDh3QmVpRXp0T2hLdEMvaUI2a3ZkcUVrTDd6aU0xZWRuN2R5ZnBNb29Qc24rM2pWaGhhbEVyaE1CNGREcVhXSDd5aVIzKzFkRDRmNXZQdjRKS2ZUdnVmM3kvTSt2NHNXckU5ejI3L21ORkgrYnJ2MS9NMDlIOEJkQlR1b0FBQUFIaWNZMkJrWUdBQTRwMy95NDNpK1cyK01uQ3pNSURBTFc4ZkpSajkvKy8vdnl3SFdaaUFYQTRHRU1rQUFFbkNEQVVBQUFCNG5HTmdaR0JnWVFBQjFyYi9mLy8vWlRuSXdNaUFDb1FBZG5NRllRQUFBSGljWTJCZ1lHREJpLy8vQjlHc2JXamlqRkNhRmF6bUx3Qm9GQVRNQUFBQUFBQUFBQUFnQURRQVVnQndBTDRCQ2dGNkFlZ0NOQUtZQXJnQy9BTThBNHdEMWdWZ0JaNEFBSGljWTJCa1lHQVFZbVJrWUdjQUFTWWc1Z0pDQm9iL1lENERBQXNFQVRJQWVKeGxrRDF1d2tBVWhNZGdTQUpTZ2hRcEtiTlZDaUtabjVJRFFFOUJsOEtZdFRHeXZkWjZRYUxMQ1hLRUhDR25pSEtDSENoajgyaGdMVDkvTTIvZTdzb0FCdmlGaDNwNXVHMXF2VnE0b1RweG0vUWc3Sk9maFR2bzQwVzRTMzhvM01NYnBzSjlQT0tkTzNqK0haMEJTdUVXN3ZFaDNLYi9LZXlUdjRRN2VNSzNjSmYrajNBUEsvd0o5L0hxRGRQSUZMRXAzRkluK3l5MFozbityclN0VWxPb1NUQStXd3RkYUJzNnZWSHJvNm9PeWRTNVdNWFc1R3JPcnM0eW8wcHJkanB5d2RhNWNqWWF4ZUlIa2NtUklvSkJnYmlwRGt0b0pOZ2pRd2g3MWIzVUs2WXRLdnExVnBnZ3dQZ3F0V0NxYUpJaGxjYUd5VFdPckJVT1BHMUsxekd0K0ZyTzVLUzV6R3JlSkNNci91KzZ0Nk1UMFErd2JhWkt6RERpRTEva2crWU8rVDg5RVY2b0FBQUFlSnh0aTlFT2dqQVVRMWZZQmc0VnhlL2dvNVp4RVpQSnlPVW15Tis3eUt0OWFFK2FWaFhxa0ZQLzFhRkFDUTBEaXdvMVRuQm9jTVlGVjdTNDRZNE9EK1U4YzlyNlNLTTBCL0xyT1lrTG5rbjZJVzF6YytDdk5pR1M1enFrOThLMHJuYWdTRUtHOHBFdGZSWS9EeVh0cEpmbzk0cHB6S1BKWkNPeGF6NkdLVWVrSUZwU2lucnpQQ3YxQlpMbkx5c0EnKSBmb3JtYXQoJ3dvZmYnKX1bY2xhc3MqPScgX2ljb24tJ10sW2NsYXNzXj0nX2ljb24tJ117JGZmOmVydWRhLWljb24haW1wb3J0YW50OyRmczoxNnB4O2ZvbnQtc3R5bGU6bm9ybWFsOy13ZWJraXQtZm9udC1zbW9vdGhpbmc6YW50aWFsaWFzZWQ7LW1vei1vc3gtZm9udC1zbW9vdGhpbmc6Z3JheXNjYWxlfS5faWNvbi1hcnJvdy1sZWZ0OmJlZm9yZXskY286J1xcXFxmMTAxJ30uX2ljb24tYXJyb3ctcmlnaHQ6YmVmb3JleyRjbzonXFxcXGYxMDInfS5faWNvbi1jYXJldC1kb3duOmJlZm9yZXskY286J1xcXFxmMTAzJ30uX2ljb24tY2FyZXQtcmlnaHQ6YmVmb3JleyRjbzonXFxcXGYxMDQnfS5faWNvbi1jbGVhcjpiZWZvcmV7JGNvOidcXFxcZjEwNSd9Ll9pY29uLWNvbXByZXNzOmJlZm9yZXskY286J1xcXFxmMTA2J30uX2ljb24tZGVsZXRlOmJlZm9yZXskY286J1xcXFxmMTA3J30uX2ljb24tZXJyb3I6YmVmb3JleyRjbzonXFxcXGYxMDgnfS5faWNvbi1leHBhbmQ6YmVmb3JleyRjbzonXFxcXGYxMDknfS5faWNvbi1leWU6YmVmb3JleyRjbzonXFxcXGYxMGEnfS5faWNvbi1wbGF5OmJlZm9yZXskY286J1xcXFxmMTBiJ30uX2ljb24tcmVmcmVzaDpiZWZvcmV7JGNvOidcXFxcZjEwYyd9Ll9pY29uLXJlc2V0OmJlZm9yZXskY286J1xcXFxmMTBkJ30uX2ljb24tc2VhcmNoOmJlZm9yZXskY286J1xcXFxmMTBlJ30uX2ljb24tc2VsZWN0OmJlZm9yZXskY286J1xcXFxmMTBmJ30uX2ljb24tdG9vbDpiZWZvcmV7JGNvOidcXFxcZjExMCd9Ll9pY29uLXdhcm46YmVmb3JleyRjbzonXFxcXGYxMTEnfVwiLFwiXCJdKSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7XG4vKiFcbiAqIERyYWdnYWJpbGx5IHYyLjIuMFxuICogTWFrZSB0aGF0IHNoaXogZHJhZ2dhYmxlXG4gKiBodHRwczovL2RyYWdnYWJpbGx5LmRlc2FuZHJvLmNvbVxuICogTUlUIGxpY2Vuc2VcbiAqLyFmdW5jdGlvbihhLG8pe2k9W24oMzEpLG4oMzIpXSx2b2lkIDA9PT0ocj1mdW5jdGlvbih0LGUpe3JldHVybiBmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaSh0LGUpe2Zvcih2YXIgbiBpbiBlKXRbbl09ZVtuXTtyZXR1cm4gdH12YXIgcj10LmpRdWVyeTtmdW5jdGlvbiBhKHQsZSl7dGhpcy5lbGVtZW50PVwic3RyaW5nXCI9PXR5cGVvZiB0P2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodCk6dCxyJiYodGhpcy4kZWxlbWVudD1yKHRoaXMuZWxlbWVudCkpLHRoaXMub3B0aW9ucz1pKHt9LHRoaXMuY29uc3RydWN0b3IuZGVmYXVsdHMpLHRoaXMub3B0aW9uKGUpLHRoaXMuX2NyZWF0ZSgpfXZhciBvPWEucHJvdG90eXBlPU9iamVjdC5jcmVhdGUobi5wcm90b3R5cGUpO2EuZGVmYXVsdHM9e30sby5vcHRpb249ZnVuY3Rpb24odCl7aSh0aGlzLm9wdGlvbnMsdCl9O3ZhciBzPXtyZWxhdGl2ZTohMCxhYnNvbHV0ZTohMCxmaXhlZDohMH07ZnVuY3Rpb24gdSh0LGUsbil7cmV0dXJuIG49bnx8XCJyb3VuZFwiLGU/TWF0aFtuXSh0L2UpKmU6dH1vLl9jcmVhdGU9ZnVuY3Rpb24oKXt0aGlzLnBvc2l0aW9uPXt9LHRoaXMuX2dldFBvc2l0aW9uKCksdGhpcy5zdGFydFBvaW50PXt4OjAseTowfSx0aGlzLmRyYWdQb2ludD17eDowLHk6MH0sdGhpcy5zdGFydFBvc2l0aW9uPWkoe30sdGhpcy5wb3NpdGlvbik7dmFyIHQ9Z2V0Q29tcHV0ZWRTdHlsZSh0aGlzLmVsZW1lbnQpO3NbdC5wb3NpdGlvbl18fCh0aGlzLmVsZW1lbnQuc3R5bGUucG9zaXRpb249XCJyZWxhdGl2ZVwiKSx0aGlzLm9uKFwicG9pbnRlckRvd25cIix0aGlzLm9uUG9pbnRlckRvd24pLHRoaXMub24oXCJwb2ludGVyTW92ZVwiLHRoaXMub25Qb2ludGVyTW92ZSksdGhpcy5vbihcInBvaW50ZXJVcFwiLHRoaXMub25Qb2ludGVyVXApLHRoaXMuZW5hYmxlKCksdGhpcy5zZXRIYW5kbGVzKCl9LG8uc2V0SGFuZGxlcz1mdW5jdGlvbigpe3RoaXMuaGFuZGxlcz10aGlzLm9wdGlvbnMuaGFuZGxlP3RoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMub3B0aW9ucy5oYW5kbGUpOlt0aGlzLmVsZW1lbnRdLHRoaXMuYmluZEhhbmRsZXMoKX0sby5kaXNwYXRjaEV2ZW50PWZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1bZV0uY29uY2F0KG4pO3RoaXMuZW1pdEV2ZW50KHQsaSksdGhpcy5kaXNwYXRjaEpRdWVyeUV2ZW50KHQsZSxuKX0sby5kaXNwYXRjaEpRdWVyeUV2ZW50PWZ1bmN0aW9uKGUsbixpKXt2YXIgcj10LmpRdWVyeTtpZihyJiZ0aGlzLiRlbGVtZW50KXt2YXIgYT1yLkV2ZW50KG4pO2EudHlwZT1lLHRoaXMuJGVsZW1lbnQudHJpZ2dlcihhLGkpfX0sby5fZ2V0UG9zaXRpb249ZnVuY3Rpb24oKXt2YXIgdD1nZXRDb21wdXRlZFN0eWxlKHRoaXMuZWxlbWVudCksZT10aGlzLl9nZXRQb3NpdGlvbkNvb3JkKHQubGVmdCxcIndpZHRoXCIpLG49dGhpcy5fZ2V0UG9zaXRpb25Db29yZCh0LnRvcCxcImhlaWdodFwiKTt0aGlzLnBvc2l0aW9uLng9aXNOYU4oZSk/MDplLHRoaXMucG9zaXRpb24ueT1pc05hTihuKT8wOm4sdGhpcy5fYWRkVHJhbnNmb3JtUG9zaXRpb24odCl9LG8uX2dldFBvc2l0aW9uQ29vcmQ9ZnVuY3Rpb24odCxuKXtpZigtMSE9dC5pbmRleE9mKFwiJVwiKSl7dmFyIGk9ZSh0aGlzLmVsZW1lbnQucGFyZW50Tm9kZSk7cmV0dXJuIGk/cGFyc2VGbG9hdCh0KS8xMDAqaVtuXTowfXJldHVybiBwYXJzZUludCh0LDEwKX0sby5fYWRkVHJhbnNmb3JtUG9zaXRpb249ZnVuY3Rpb24odCl7dmFyIGU9dC50cmFuc2Zvcm07aWYoMD09PWUuaW5kZXhPZihcIm1hdHJpeFwiKSl7dmFyIG49ZS5zcGxpdChcIixcIiksaT0wPT09ZS5pbmRleE9mKFwibWF0cml4M2RcIik/MTI6NCxyPXBhcnNlSW50KG5baV0sMTApLGE9cGFyc2VJbnQobltpKzFdLDEwKTt0aGlzLnBvc2l0aW9uLngrPXIsdGhpcy5wb3NpdGlvbi55Kz1hfX0sby5vblBvaW50ZXJEb3duPWZ1bmN0aW9uKHQsZSl7dGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJpcy1wb2ludGVyLWRvd25cIiksdGhpcy5kaXNwYXRjaEpRdWVyeUV2ZW50KFwicG9pbnRlckRvd25cIix0LFtlXSl9LG8uZHJhZ1N0YXJ0PWZ1bmN0aW9uKHQsZSl7dGhpcy5pc0VuYWJsZWQmJih0aGlzLl9nZXRQb3NpdGlvbigpLHRoaXMubWVhc3VyZUNvbnRhaW5tZW50KCksdGhpcy5zdGFydFBvc2l0aW9uLng9dGhpcy5wb3NpdGlvbi54LHRoaXMuc3RhcnRQb3NpdGlvbi55PXRoaXMucG9zaXRpb24ueSx0aGlzLnNldExlZnRUb3AoKSx0aGlzLmRyYWdQb2ludC54PTAsdGhpcy5kcmFnUG9pbnQueT0wLHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiaXMtZHJhZ2dpbmdcIiksdGhpcy5kaXNwYXRjaEV2ZW50KFwiZHJhZ1N0YXJ0XCIsdCxbZV0pLHRoaXMuYW5pbWF0ZSgpKX0sby5tZWFzdXJlQ29udGFpbm1lbnQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldENvbnRhaW5lcigpO2lmKHQpe3ZhciBuPWUodGhpcy5lbGVtZW50KSxpPWUodCkscj10aGlzLmVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksYT10LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLG89aS5ib3JkZXJMZWZ0V2lkdGgraS5ib3JkZXJSaWdodFdpZHRoLHM9aS5ib3JkZXJUb3BXaWR0aCtpLmJvcmRlckJvdHRvbVdpZHRoLHU9dGhpcy5yZWxhdGl2ZVN0YXJ0UG9zaXRpb249e3g6ci5sZWZ0LShhLmxlZnQraS5ib3JkZXJMZWZ0V2lkdGgpLHk6ci50b3AtKGEudG9wK2kuYm9yZGVyVG9wV2lkdGgpfTt0aGlzLmNvbnRhaW5TaXplPXt3aWR0aDppLndpZHRoLW8tdS54LW4ud2lkdGgsaGVpZ2h0OmkuaGVpZ2h0LXMtdS55LW4uaGVpZ2h0fX19LG8uZ2V0Q29udGFpbmVyPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcHRpb25zLmNvbnRhaW5tZW50O2lmKHQpcmV0dXJuIHQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudD90Olwic3RyaW5nXCI9PXR5cGVvZiB0P2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodCk6dGhpcy5lbGVtZW50LnBhcmVudE5vZGV9LG8ub25Qb2ludGVyTW92ZT1mdW5jdGlvbih0LGUsbil7dGhpcy5kaXNwYXRjaEpRdWVyeUV2ZW50KFwicG9pbnRlck1vdmVcIix0LFtlLG5dKX0sby5kcmFnTW92ZT1mdW5jdGlvbih0LGUsbil7aWYodGhpcy5pc0VuYWJsZWQpe3ZhciBpPW4ueCxyPW4ueSxhPXRoaXMub3B0aW9ucy5ncmlkLG89YSYmYVswXSxzPWEmJmFbMV07aT11KGksbykscj11KHIscyksaT10aGlzLmNvbnRhaW5EcmFnKFwieFwiLGksbykscj10aGlzLmNvbnRhaW5EcmFnKFwieVwiLHIscyksaT1cInlcIj09dGhpcy5vcHRpb25zLmF4aXM/MDppLHI9XCJ4XCI9PXRoaXMub3B0aW9ucy5heGlzPzA6cix0aGlzLnBvc2l0aW9uLng9dGhpcy5zdGFydFBvc2l0aW9uLngraSx0aGlzLnBvc2l0aW9uLnk9dGhpcy5zdGFydFBvc2l0aW9uLnkrcix0aGlzLmRyYWdQb2ludC54PWksdGhpcy5kcmFnUG9pbnQueT1yLHRoaXMuZGlzcGF0Y2hFdmVudChcImRyYWdNb3ZlXCIsdCxbZSxuXSl9fSxvLmNvbnRhaW5EcmFnPWZ1bmN0aW9uKHQsZSxuKXtpZighdGhpcy5vcHRpb25zLmNvbnRhaW5tZW50KXJldHVybiBlO3ZhciBpPVwieFwiPT10P1wid2lkdGhcIjpcImhlaWdodFwiLHI9dSgtdGhpcy5yZWxhdGl2ZVN0YXJ0UG9zaXRpb25bdF0sbixcImNlaWxcIiksYT10aGlzLmNvbnRhaW5TaXplW2ldO3JldHVybiBhPXUoYSxuLFwiZmxvb3JcIiksTWF0aC5tYXgocixNYXRoLm1pbihhLGUpKX0sby5vblBvaW50ZXJVcD1mdW5jdGlvbih0LGUpe3RoaXMuZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwiaXMtcG9pbnRlci1kb3duXCIpLHRoaXMuZGlzcGF0Y2hKUXVlcnlFdmVudChcInBvaW50ZXJVcFwiLHQsW2VdKX0sby5kcmFnRW5kPWZ1bmN0aW9uKHQsZSl7dGhpcy5pc0VuYWJsZWQmJih0aGlzLmVsZW1lbnQuc3R5bGUudHJhbnNmb3JtPVwiXCIsdGhpcy5zZXRMZWZ0VG9wKCksdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJpcy1kcmFnZ2luZ1wiKSx0aGlzLmRpc3BhdGNoRXZlbnQoXCJkcmFnRW5kXCIsdCxbZV0pKX0sby5hbmltYXRlPWZ1bmN0aW9uKCl7aWYodGhpcy5pc0RyYWdnaW5nKXt0aGlzLnBvc2l0aW9uRHJhZygpO3ZhciB0PXRoaXM7cmVxdWVzdEFuaW1hdGlvbkZyYW1lKChmdW5jdGlvbigpe3QuYW5pbWF0ZSgpfSkpfX0sby5zZXRMZWZ0VG9wPWZ1bmN0aW9uKCl7dGhpcy5lbGVtZW50LnN0eWxlLmxlZnQ9dGhpcy5wb3NpdGlvbi54K1wicHhcIix0aGlzLmVsZW1lbnQuc3R5bGUudG9wPXRoaXMucG9zaXRpb24ueStcInB4XCJ9LG8ucG9zaXRpb25EcmFnPWZ1bmN0aW9uKCl7dGhpcy5lbGVtZW50LnN0eWxlLnRyYW5zZm9ybT1cInRyYW5zbGF0ZTNkKCBcIit0aGlzLmRyYWdQb2ludC54K1wicHgsIFwiK3RoaXMuZHJhZ1BvaW50LnkrXCJweCwgMClcIn0sby5zdGF0aWNDbGljaz1mdW5jdGlvbih0LGUpe3RoaXMuZGlzcGF0Y2hFdmVudChcInN0YXRpY0NsaWNrXCIsdCxbZV0pfSxvLnNldFBvc2l0aW9uPWZ1bmN0aW9uKHQsZSl7dGhpcy5wb3NpdGlvbi54PXQsdGhpcy5wb3NpdGlvbi55PWUsdGhpcy5zZXRMZWZ0VG9wKCl9LG8uZW5hYmxlPWZ1bmN0aW9uKCl7dGhpcy5pc0VuYWJsZWQ9ITB9LG8uZGlzYWJsZT1mdW5jdGlvbigpe3RoaXMuaXNFbmFibGVkPSExLHRoaXMuaXNEcmFnZ2luZyYmdGhpcy5kcmFnRW5kKCl9LG8uZGVzdHJveT1mdW5jdGlvbigpe3RoaXMuZGlzYWJsZSgpLHRoaXMuZWxlbWVudC5zdHlsZS50cmFuc2Zvcm09XCJcIix0aGlzLmVsZW1lbnQuc3R5bGUubGVmdD1cIlwiLHRoaXMuZWxlbWVudC5zdHlsZS50b3A9XCJcIix0aGlzLmVsZW1lbnQuc3R5bGUucG9zaXRpb249XCJcIix0aGlzLnVuYmluZEhhbmRsZXMoKSx0aGlzLiRlbGVtZW50JiZ0aGlzLiRlbGVtZW50LnJlbW92ZURhdGEoXCJkcmFnZ2FiaWxseVwiKX0sby5faW5pdD1mdW5jdGlvbigpe30sciYmci5icmlkZ2V0JiZyLmJyaWRnZXQoXCJkcmFnZ2FiaWxseVwiLGEpO3JldHVybiBhfShhLHQsZSl9LmFwcGx5KGUsaSkpfHwodC5leHBvcnRzPXIpfSh3aW5kb3cpfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz17YmFja2dyb3VuZDpcImJcIixcImJhY2tncm91bmQtaW1hZ2VcIjpcImJpXCIsYm9yZGVyOlwiYm9cIixcImJvcmRlci1ib3R0b21cIjpcImJiXCIsXCJib3JkZXItY29sbGFwc2VcIjpcImJjXCIsXCJib3JkZXItbGVmdC1jb2xvclwiOlwiYmxjXCIsXCJib3JkZXItcmlnaHRcIjpcImJyXCIsXCJib3JkZXItcmFkaXVzXCI6XCJicmFcIixcImJvcmRlci10b3BcIjpcImJ0XCIsXCJib3JkZXItdG9wLWNvbG9yXCI6XCJidGNcIixcImJveC1zaGFkb3dcIjpcImJzXCIsXCJib3gtc2l6aW5nXCI6XCJic2lcIixjbGVhcjpcImNsXCIsY29sb3I6XCJjXCIsY29udGVudDpcImNvXCIsY3Vyc29yOlwiY3VcIixkaXNwbGF5OlwiZFwiLGZsZXg6XCJmbFwiLFwiZmxleC1zaHJpbmtcIjpcImZzaFwiLGZsb2F0OlwiZlwiLFwiZm9udC1mYW1pbHlcIjpcImZmXCIsXCJmb250LXNpemVcIjpcImZzXCIsXCJmb250LXdlaWdodFwiOlwiZndcIixoZWlnaHQ6XCJoXCIsbGVmdDpcImxcIixcImxpbmUtaGVpZ2h0XCI6XCJsaFwiLG1hcmdpbjpcIm1cIixcIm1hcmdpbi1ib3R0b21cIjpcIm1iXCIsXCJtYXJnaW4tbGVmdFwiOlwibWxcIixcIm1hcmdpbi10b3BcIjpcIm10XCIsXCJtaW4taGVpZ2h0XCI6XCJtaFwiLG91dGxpbmU6XCJvdVwiLG92ZXJmbG93Olwib1wiLFwib3ZlcmZsb3cteFwiOlwib3hcIixcIm92ZXJmbG93LXlcIjpcIm95XCIscGFkZGluZzpcInBcIixcInBhZGRpbmctYm90dG9tXCI6XCJwYlwiLFwicGFkZGluZy1sZWZ0XCI6XCJwbFwiLFwicGFkZGluZy10b3BcIjpcInB0XCIsXCJwb2ludGVyLWV2ZW50c1wiOlwicGVcIixwb3NpdGlvbjpcInBvXCIsXCJ0ZXh0LWFsaWduXCI6XCJ0YVwiLFwidGV4dC10cmFuc2Zvcm1cIjpcInR0XCIsdG9wOlwidFwiLHRyYW5zaXRpb246XCJ0clwiLFwidXNlci1zZWxlY3RcIjpcInVzXCIsXCJ2ZXJ0aWNhbC1hbGlnaW5cIjpcInZhXCIsdmlzaWJpbGl0eTpcInZcIix3aWR0aDpcIndcIixcIndpbGwtY2hhbmdlXCI6XCJ3Y1wiLFwid2hpdGUtc3BhY2VcIjpcIndzXCIsXCItd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZ1wiOlwid29zXCIsXCJ6LWluZGV4XCI6XCJ6XCJ9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigyMCk7ZnVuY3Rpb24gcigpe2lmKFwidW5kZWZpbmVkXCI9PXR5cGVvZiBSZWZsZWN0fHwhUmVmbGVjdC5jb25zdHJ1Y3QpcmV0dXJuITE7aWYoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSlyZXR1cm4hMTtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBQcm94eSlyZXR1cm4hMDt0cnl7cmV0dXJuIERhdGUucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoRGF0ZSxbXSwoZnVuY3Rpb24oKXt9KSkpLCEwfWNhdGNoKHQpe3JldHVybiExfX1mdW5jdGlvbiBhKGUsbixvKXtyZXR1cm4gcigpP3QuZXhwb3J0cz1hPVJlZmxlY3QuY29uc3RydWN0OnQuZXhwb3J0cz1hPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1bbnVsbF07ci5wdXNoLmFwcGx5KHIsZSk7dmFyIGE9bmV3KEZ1bmN0aW9uLmJpbmQuYXBwbHkodCxyKSk7cmV0dXJuIG4mJmkoYSxuLnByb3RvdHlwZSksYX0sYS5hcHBseShudWxsLGFyZ3VtZW50cyl9dC5leHBvcnRzPWF9LGZ1bmN0aW9uKHQsZSxuKXt0LmV4cG9ydHM9big5NykuZGVmYXVsdH0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7XG4vKiFcbiAqIGdldFNpemUgdjIuMC4zXG4gKiBtZWFzdXJlIHNpemUgb2YgZWxlbWVudHNcbiAqIE1JVCBsaWNlbnNlXG4gKi93aW5kb3csdm9pZCAwPT09KHI9XCJmdW5jdGlvblwiPT10eXBlb2YoaT1mdW5jdGlvbigpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHQodCl7dmFyIGU9cGFyc2VGbG9hdCh0KTtyZXR1cm4tMT09dC5pbmRleE9mKFwiJVwiKSYmIWlzTmFOKGUpJiZlfXZhciBlPVwidW5kZWZpbmVkXCI9PXR5cGVvZiBjb25zb2xlP2Z1bmN0aW9uKCl7fTpmdW5jdGlvbih0KXtjb25zb2xlLmVycm9yKHQpfSxuPVtcInBhZGRpbmdMZWZ0XCIsXCJwYWRkaW5nUmlnaHRcIixcInBhZGRpbmdUb3BcIixcInBhZGRpbmdCb3R0b21cIixcIm1hcmdpbkxlZnRcIixcIm1hcmdpblJpZ2h0XCIsXCJtYXJnaW5Ub3BcIixcIm1hcmdpbkJvdHRvbVwiLFwiYm9yZGVyTGVmdFdpZHRoXCIsXCJib3JkZXJSaWdodFdpZHRoXCIsXCJib3JkZXJUb3BXaWR0aFwiLFwiYm9yZGVyQm90dG9tV2lkdGhcIl0saT1uLmxlbmd0aDtmdW5jdGlvbiByKHQpe3ZhciBuPWdldENvbXB1dGVkU3R5bGUodCk7cmV0dXJuIG58fGUoXCJTdHlsZSByZXR1cm5lZCBcIituK1wiLiBBcmUgeW91IHJ1bm5pbmcgdGhpcyBjb2RlIGluIGEgaGlkZGVuIGlmcmFtZSBvbiBGaXJlZm94PyBTZWUgaHR0cHM6Ly9iaXQubHkvZ2V0c2l6ZWJ1ZzFcIiksbn12YXIgYSxvPSExO2Z1bmN0aW9uIHMoZSl7aWYoZnVuY3Rpb24oKXtpZighbyl7bz0hMDt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO2Uuc3R5bGUud2lkdGg9XCIyMDBweFwiLGUuc3R5bGUucGFkZGluZz1cIjFweCAycHggM3B4IDRweFwiLGUuc3R5bGUuYm9yZGVyU3R5bGU9XCJzb2xpZFwiLGUuc3R5bGUuYm9yZGVyV2lkdGg9XCIxcHggMnB4IDNweCA0cHhcIixlLnN0eWxlLmJveFNpemluZz1cImJvcmRlci1ib3hcIjt2YXIgbj1kb2N1bWVudC5ib2R5fHxkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7bi5hcHBlbmRDaGlsZChlKTt2YXIgaT1yKGUpO2E9MjAwPT1NYXRoLnJvdW5kKHQoaS53aWR0aCkpLHMuaXNCb3hTaXplT3V0ZXI9YSxuLnJlbW92ZUNoaWxkKGUpfX0oKSxcInN0cmluZ1wiPT10eXBlb2YgZSYmKGU9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihlKSksZSYmXCJvYmplY3RcIj09dHlwZW9mIGUmJmUubm9kZVR5cGUpe3ZhciB1PXIoZSk7aWYoXCJub25lXCI9PXUuZGlzcGxheSlyZXR1cm4gZnVuY3Rpb24oKXtmb3IodmFyIHQ9e3dpZHRoOjAsaGVpZ2h0OjAsaW5uZXJXaWR0aDowLGlubmVySGVpZ2h0OjAsb3V0ZXJXaWR0aDowLG91dGVySGVpZ2h0OjB9LGU9MDtlPGk7ZSsrKXRbbltlXV09MDtyZXR1cm4gdH0oKTt2YXIgbD17fTtsLndpZHRoPWUub2Zmc2V0V2lkdGgsbC5oZWlnaHQ9ZS5vZmZzZXRIZWlnaHQ7Zm9yKHZhciBjPWwuaXNCb3JkZXJCb3g9XCJib3JkZXItYm94XCI9PXUuYm94U2l6aW5nLF89MDtfPGk7XysrKXt2YXIgaD1uW19dLHA9dVtoXSxkPXBhcnNlRmxvYXQocCk7bFtoXT1pc05hTihkKT8wOmR9dmFyIGY9bC5wYWRkaW5nTGVmdCtsLnBhZGRpbmdSaWdodCx2PWwucGFkZGluZ1RvcCtsLnBhZGRpbmdCb3R0b20sZz1sLm1hcmdpbkxlZnQrbC5tYXJnaW5SaWdodCxtPWwubWFyZ2luVG9wK2wubWFyZ2luQm90dG9tLGI9bC5ib3JkZXJMZWZ0V2lkdGgrbC5ib3JkZXJSaWdodFdpZHRoLHk9bC5ib3JkZXJUb3BXaWR0aCtsLmJvcmRlckJvdHRvbVdpZHRoLHc9YyYmYSx4PXQodS53aWR0aCk7ITEhPT14JiYobC53aWR0aD14Kyh3PzA6ZitiKSk7dmFyIGs9dCh1LmhlaWdodCk7cmV0dXJuITEhPT1rJiYobC5oZWlnaHQ9aysodz8wOnYreSkpLGwuaW5uZXJXaWR0aD1sLndpZHRoLShmK2IpLGwuaW5uZXJIZWlnaHQ9bC5oZWlnaHQtKHYreSksbC5vdXRlcldpZHRoPWwud2lkdGgrZyxsLm91dGVySGVpZ2h0PWwuaGVpZ2h0K20sbH19cmV0dXJuIHN9KT9pLmNhbGwoZSxuLGUsdCk6aSl8fCh0LmV4cG9ydHM9cil9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO1xuLyohXG4gKiBVbmlkcmFnZ2VyIHYyLjMuMFxuICogRHJhZ2dhYmxlIGJhc2UgY2xhc3NcbiAqIE1JVCBsaWNlbnNlXG4gKi8hZnVuY3Rpb24oYSxvKXtpPVtuKDMzKV0sdm9pZCAwPT09KHI9ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gbigpe312YXIgaT1uLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUucHJvdG90eXBlKTtpLmJpbmRIYW5kbGVzPWZ1bmN0aW9uKCl7dGhpcy5fYmluZEhhbmRsZXMoITApfSxpLnVuYmluZEhhbmRsZXM9ZnVuY3Rpb24oKXt0aGlzLl9iaW5kSGFuZGxlcyghMSl9LGkuX2JpbmRIYW5kbGVzPWZ1bmN0aW9uKGUpe2Zvcih2YXIgbj0oZT12b2lkIDA9PT1lfHxlKT9cImFkZEV2ZW50TGlzdGVuZXJcIjpcInJlbW92ZUV2ZW50TGlzdGVuZXJcIixpPWU/dGhpcy5fdG91Y2hBY3Rpb25WYWx1ZTpcIlwiLHI9MDtyPHRoaXMuaGFuZGxlcy5sZW5ndGg7cisrKXt2YXIgYT10aGlzLmhhbmRsZXNbcl07dGhpcy5fYmluZFN0YXJ0RXZlbnQoYSxlKSxhW25dKFwiY2xpY2tcIix0aGlzKSx0LlBvaW50ZXJFdmVudCYmKGEuc3R5bGUudG91Y2hBY3Rpb249aSl9fSxpLl90b3VjaEFjdGlvblZhbHVlPVwibm9uZVwiLGkucG9pbnRlckRvd249ZnVuY3Rpb24odCxlKXt0aGlzLm9rYXlQb2ludGVyRG93bih0KSYmKHRoaXMucG9pbnRlckRvd25Qb2ludGVyPWUsdC5wcmV2ZW50RGVmYXVsdCgpLHRoaXMucG9pbnRlckRvd25CbHVyKCksdGhpcy5fYmluZFBvc3RTdGFydEV2ZW50cyh0KSx0aGlzLmVtaXRFdmVudChcInBvaW50ZXJEb3duXCIsW3QsZV0pKX07dmFyIHI9e1RFWFRBUkVBOiEwLElOUFVUOiEwLFNFTEVDVDohMCxPUFRJT046ITB9LGE9e3JhZGlvOiEwLGNoZWNrYm94OiEwLGJ1dHRvbjohMCxzdWJtaXQ6ITAsaW1hZ2U6ITAsZmlsZTohMH07cmV0dXJuIGkub2theVBvaW50ZXJEb3duPWZ1bmN0aW9uKHQpe3ZhciBlPXJbdC50YXJnZXQubm9kZU5hbWVdLG49YVt0LnRhcmdldC50eXBlXSxpPSFlfHxuO3JldHVybiBpfHx0aGlzLl9wb2ludGVyUmVzZXQoKSxpfSxpLnBvaW50ZXJEb3duQmx1cj1mdW5jdGlvbigpe3ZhciB0PWRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7dCYmdC5ibHVyJiZ0IT1kb2N1bWVudC5ib2R5JiZ0LmJsdXIoKX0saS5wb2ludGVyTW92ZT1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuX2RyYWdQb2ludGVyTW92ZSh0LGUpO3RoaXMuZW1pdEV2ZW50KFwicG9pbnRlck1vdmVcIixbdCxlLG5dKSx0aGlzLl9kcmFnTW92ZSh0LGUsbil9LGkuX2RyYWdQb2ludGVyTW92ZT1mdW5jdGlvbih0LGUpe3ZhciBuPXt4OmUucGFnZVgtdGhpcy5wb2ludGVyRG93blBvaW50ZXIucGFnZVgseTplLnBhZ2VZLXRoaXMucG9pbnRlckRvd25Qb2ludGVyLnBhZ2VZfTtyZXR1cm4hdGhpcy5pc0RyYWdnaW5nJiZ0aGlzLmhhc0RyYWdTdGFydGVkKG4pJiZ0aGlzLl9kcmFnU3RhcnQodCxlKSxufSxpLmhhc0RyYWdTdGFydGVkPWZ1bmN0aW9uKHQpe3JldHVybiBNYXRoLmFicyh0LngpPjN8fE1hdGguYWJzKHQueSk+M30saS5wb2ludGVyVXA9ZnVuY3Rpb24odCxlKXt0aGlzLmVtaXRFdmVudChcInBvaW50ZXJVcFwiLFt0LGVdKSx0aGlzLl9kcmFnUG9pbnRlclVwKHQsZSl9LGkuX2RyYWdQb2ludGVyVXA9ZnVuY3Rpb24odCxlKXt0aGlzLmlzRHJhZ2dpbmc/dGhpcy5fZHJhZ0VuZCh0LGUpOnRoaXMuX3N0YXRpY0NsaWNrKHQsZSl9LGkuX2RyYWdTdGFydD1mdW5jdGlvbih0LGUpe3RoaXMuaXNEcmFnZ2luZz0hMCx0aGlzLmlzUHJldmVudGluZ0NsaWNrcz0hMCx0aGlzLmRyYWdTdGFydCh0LGUpfSxpLmRyYWdTdGFydD1mdW5jdGlvbih0LGUpe3RoaXMuZW1pdEV2ZW50KFwiZHJhZ1N0YXJ0XCIsW3QsZV0pfSxpLl9kcmFnTW92ZT1mdW5jdGlvbih0LGUsbil7dGhpcy5pc0RyYWdnaW5nJiZ0aGlzLmRyYWdNb3ZlKHQsZSxuKX0saS5kcmFnTW92ZT1mdW5jdGlvbih0LGUsbil7dC5wcmV2ZW50RGVmYXVsdCgpLHRoaXMuZW1pdEV2ZW50KFwiZHJhZ01vdmVcIixbdCxlLG5dKX0saS5fZHJhZ0VuZD1mdW5jdGlvbih0LGUpe3RoaXMuaXNEcmFnZ2luZz0hMSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZGVsZXRlIHRoaXMuaXNQcmV2ZW50aW5nQ2xpY2tzfS5iaW5kKHRoaXMpKSx0aGlzLmRyYWdFbmQodCxlKX0saS5kcmFnRW5kPWZ1bmN0aW9uKHQsZSl7dGhpcy5lbWl0RXZlbnQoXCJkcmFnRW5kXCIsW3QsZV0pfSxpLm9uY2xpY2s9ZnVuY3Rpb24odCl7dGhpcy5pc1ByZXZlbnRpbmdDbGlja3MmJnQucHJldmVudERlZmF1bHQoKX0saS5fc3RhdGljQ2xpY2s9ZnVuY3Rpb24odCxlKXt0aGlzLmlzSWdub3JpbmdNb3VzZVVwJiZcIm1vdXNldXBcIj09dC50eXBlfHwodGhpcy5zdGF0aWNDbGljayh0LGUpLFwibW91c2V1cFwiIT10LnR5cGUmJih0aGlzLmlzSWdub3JpbmdNb3VzZVVwPSEwLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtkZWxldGUgdGhpcy5pc0lnbm9yaW5nTW91c2VVcH0uYmluZCh0aGlzKSw0MDApKSl9LGkuc3RhdGljQ2xpY2s9ZnVuY3Rpb24odCxlKXt0aGlzLmVtaXRFdmVudChcInN0YXRpY0NsaWNrXCIsW3QsZV0pfSxuLmdldFBvaW50ZXJQb2ludD1lLmdldFBvaW50ZXJQb2ludCxufShhLHQpfS5hcHBseShlLGkpKXx8KHQuZXhwb3J0cz1yKX0od2luZG93KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7XG4vKiFcbiAqIFVuaXBvaW50ZXIgdjIuMy4wXG4gKiBiYXNlIGNsYXNzIGZvciBkb2luZyBvbmUgdGhpbmcgd2l0aCBwb2ludGVyIGV2ZW50XG4gKiBNSVQgbGljZW5zZVxuICovIWZ1bmN0aW9uKGEsbyl7aT1bbigzNCldLHZvaWQgMD09PShyPWZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbih0LGUpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIG4oKXt9dmFyIGk9bi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLnByb3RvdHlwZSk7aS5iaW5kU3RhcnRFdmVudD1mdW5jdGlvbih0KXt0aGlzLl9iaW5kU3RhcnRFdmVudCh0LCEwKX0saS51bmJpbmRTdGFydEV2ZW50PWZ1bmN0aW9uKHQpe3RoaXMuX2JpbmRTdGFydEV2ZW50KHQsITEpfSxpLl9iaW5kU3RhcnRFdmVudD1mdW5jdGlvbihlLG4pe3ZhciBpPShuPXZvaWQgMD09PW58fG4pP1wiYWRkRXZlbnRMaXN0ZW5lclwiOlwicmVtb3ZlRXZlbnRMaXN0ZW5lclwiLHI9XCJtb3VzZWRvd25cIjt0LlBvaW50ZXJFdmVudD9yPVwicG9pbnRlcmRvd25cIjpcIm9udG91Y2hzdGFydFwiaW4gdCYmKHI9XCJ0b3VjaHN0YXJ0XCIpLGVbaV0ocix0aGlzKX0saS5oYW5kbGVFdmVudD1mdW5jdGlvbih0KXt2YXIgZT1cIm9uXCIrdC50eXBlO3RoaXNbZV0mJnRoaXNbZV0odCl9LGkuZ2V0VG91Y2g9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTA7ZTx0Lmxlbmd0aDtlKyspe3ZhciBuPXRbZV07aWYobi5pZGVudGlmaWVyPT10aGlzLnBvaW50ZXJJZGVudGlmaWVyKXJldHVybiBufX0saS5vbm1vdXNlZG93bj1mdW5jdGlvbih0KXt2YXIgZT10LmJ1dHRvbjtlJiYwIT09ZSYmMSE9PWV8fHRoaXMuX3BvaW50ZXJEb3duKHQsdCl9LGkub250b3VjaHN0YXJ0PWZ1bmN0aW9uKHQpe3RoaXMuX3BvaW50ZXJEb3duKHQsdC5jaGFuZ2VkVG91Y2hlc1swXSl9LGkub25wb2ludGVyZG93bj1mdW5jdGlvbih0KXt0aGlzLl9wb2ludGVyRG93bih0LHQpfSxpLl9wb2ludGVyRG93bj1mdW5jdGlvbih0LGUpe3QuYnV0dG9ufHx0aGlzLmlzUG9pbnRlckRvd258fCh0aGlzLmlzUG9pbnRlckRvd249ITAsdGhpcy5wb2ludGVySWRlbnRpZmllcj12b2lkIDAhPT1lLnBvaW50ZXJJZD9lLnBvaW50ZXJJZDplLmlkZW50aWZpZXIsdGhpcy5wb2ludGVyRG93bih0LGUpKX0saS5wb2ludGVyRG93bj1mdW5jdGlvbih0LGUpe3RoaXMuX2JpbmRQb3N0U3RhcnRFdmVudHModCksdGhpcy5lbWl0RXZlbnQoXCJwb2ludGVyRG93blwiLFt0LGVdKX07dmFyIHI9e21vdXNlZG93bjpbXCJtb3VzZW1vdmVcIixcIm1vdXNldXBcIl0sdG91Y2hzdGFydDpbXCJ0b3VjaG1vdmVcIixcInRvdWNoZW5kXCIsXCJ0b3VjaGNhbmNlbFwiXSxwb2ludGVyZG93bjpbXCJwb2ludGVybW92ZVwiLFwicG9pbnRlcnVwXCIsXCJwb2ludGVyY2FuY2VsXCJdfTtyZXR1cm4gaS5fYmluZFBvc3RTdGFydEV2ZW50cz1mdW5jdGlvbihlKXtpZihlKXt2YXIgbj1yW2UudHlwZV07bi5mb3JFYWNoKChmdW5jdGlvbihlKXt0LmFkZEV2ZW50TGlzdGVuZXIoZSx0aGlzKX0pLHRoaXMpLHRoaXMuX2JvdW5kUG9pbnRlckV2ZW50cz1ufX0saS5fdW5iaW5kUG9zdFN0YXJ0RXZlbnRzPWZ1bmN0aW9uKCl7dGhpcy5fYm91bmRQb2ludGVyRXZlbnRzJiYodGhpcy5fYm91bmRQb2ludGVyRXZlbnRzLmZvckVhY2goKGZ1bmN0aW9uKGUpe3QucmVtb3ZlRXZlbnRMaXN0ZW5lcihlLHRoaXMpfSksdGhpcyksZGVsZXRlIHRoaXMuX2JvdW5kUG9pbnRlckV2ZW50cyl9LGkub25tb3VzZW1vdmU9ZnVuY3Rpb24odCl7dGhpcy5fcG9pbnRlck1vdmUodCx0KX0saS5vbnBvaW50ZXJtb3ZlPWZ1bmN0aW9uKHQpe3QucG9pbnRlcklkPT10aGlzLnBvaW50ZXJJZGVudGlmaWVyJiZ0aGlzLl9wb2ludGVyTW92ZSh0LHQpfSxpLm9udG91Y2htb3ZlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0VG91Y2godC5jaGFuZ2VkVG91Y2hlcyk7ZSYmdGhpcy5fcG9pbnRlck1vdmUodCxlKX0saS5fcG9pbnRlck1vdmU9ZnVuY3Rpb24odCxlKXt0aGlzLnBvaW50ZXJNb3ZlKHQsZSl9LGkucG9pbnRlck1vdmU9ZnVuY3Rpb24odCxlKXt0aGlzLmVtaXRFdmVudChcInBvaW50ZXJNb3ZlXCIsW3QsZV0pfSxpLm9ubW91c2V1cD1mdW5jdGlvbih0KXt0aGlzLl9wb2ludGVyVXAodCx0KX0saS5vbnBvaW50ZXJ1cD1mdW5jdGlvbih0KXt0LnBvaW50ZXJJZD09dGhpcy5wb2ludGVySWRlbnRpZmllciYmdGhpcy5fcG9pbnRlclVwKHQsdCl9LGkub250b3VjaGVuZD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldFRvdWNoKHQuY2hhbmdlZFRvdWNoZXMpO2UmJnRoaXMuX3BvaW50ZXJVcCh0LGUpfSxpLl9wb2ludGVyVXA9ZnVuY3Rpb24odCxlKXt0aGlzLl9wb2ludGVyRG9uZSgpLHRoaXMucG9pbnRlclVwKHQsZSl9LGkucG9pbnRlclVwPWZ1bmN0aW9uKHQsZSl7dGhpcy5lbWl0RXZlbnQoXCJwb2ludGVyVXBcIixbdCxlXSl9LGkuX3BvaW50ZXJEb25lPWZ1bmN0aW9uKCl7dGhpcy5fcG9pbnRlclJlc2V0KCksdGhpcy5fdW5iaW5kUG9zdFN0YXJ0RXZlbnRzKCksdGhpcy5wb2ludGVyRG9uZSgpfSxpLl9wb2ludGVyUmVzZXQ9ZnVuY3Rpb24oKXt0aGlzLmlzUG9pbnRlckRvd249ITEsZGVsZXRlIHRoaXMucG9pbnRlcklkZW50aWZpZXJ9LGkucG9pbnRlckRvbmU9ZnVuY3Rpb24oKXt9LGkub25wb2ludGVyY2FuY2VsPWZ1bmN0aW9uKHQpe3QucG9pbnRlcklkPT10aGlzLnBvaW50ZXJJZGVudGlmaWVyJiZ0aGlzLl9wb2ludGVyQ2FuY2VsKHQsdCl9LGkub250b3VjaGNhbmNlbD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldFRvdWNoKHQuY2hhbmdlZFRvdWNoZXMpO2UmJnRoaXMuX3BvaW50ZXJDYW5jZWwodCxlKX0saS5fcG9pbnRlckNhbmNlbD1mdW5jdGlvbih0LGUpe3RoaXMuX3BvaW50ZXJEb25lKCksdGhpcy5wb2ludGVyQ2FuY2VsKHQsZSl9LGkucG9pbnRlckNhbmNlbD1mdW5jdGlvbih0LGUpe3RoaXMuZW1pdEV2ZW50KFwicG9pbnRlckNhbmNlbFwiLFt0LGVdKX0sbi5nZXRQb2ludGVyUG9pbnQ9ZnVuY3Rpb24odCl7cmV0dXJue3g6dC5wYWdlWCx5OnQucGFnZVl9fSxufShhLHQpfS5hcHBseShlLGkpKXx8KHQuZXhwb3J0cz1yKX0od2luZG93KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmd2luZG93LHZvaWQgMD09PShyPVwiZnVuY3Rpb25cIj09dHlwZW9mKGk9ZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiB0KCl7fXZhciBlPXQucHJvdG90eXBlO3JldHVybiBlLm9uPWZ1bmN0aW9uKHQsZSl7aWYodCYmZSl7dmFyIG49dGhpcy5fZXZlbnRzPXRoaXMuX2V2ZW50c3x8e30saT1uW3RdPW5bdF18fFtdO3JldHVybi0xPT1pLmluZGV4T2YoZSkmJmkucHVzaChlKSx0aGlzfX0sZS5vbmNlPWZ1bmN0aW9uKHQsZSl7aWYodCYmZSl7dGhpcy5vbih0LGUpO3ZhciBuPXRoaXMuX29uY2VFdmVudHM9dGhpcy5fb25jZUV2ZW50c3x8e307cmV0dXJuKG5bdF09blt0XXx8e30pW2VdPSEwLHRoaXN9fSxlLm9mZj1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuX2V2ZW50cyYmdGhpcy5fZXZlbnRzW3RdO2lmKG4mJm4ubGVuZ3RoKXt2YXIgaT1uLmluZGV4T2YoZSk7cmV0dXJuLTEhPWkmJm4uc3BsaWNlKGksMSksdGhpc319LGUuZW1pdEV2ZW50PWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5fZXZlbnRzJiZ0aGlzLl9ldmVudHNbdF07aWYobiYmbi5sZW5ndGgpe249bi5zbGljZSgwKSxlPWV8fFtdO2Zvcih2YXIgaT10aGlzLl9vbmNlRXZlbnRzJiZ0aGlzLl9vbmNlRXZlbnRzW3RdLHI9MDtyPG4ubGVuZ3RoO3IrKyl7dmFyIGE9bltyXTtpJiZpW2FdJiYodGhpcy5vZmYodCxhKSxkZWxldGUgaVthXSksYS5hcHBseSh0aGlzLGUpfXJldHVybiB0aGlzfX0sZS5hbGxPZmY9ZnVuY3Rpb24oKXtkZWxldGUgdGhpcy5fZXZlbnRzLGRlbGV0ZSB0aGlzLl9vbmNlRXZlbnRzfSx0fSk/aS5jYWxsKGUsbixlLHQpOmkpfHwodC5leHBvcnRzPXIpfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKHQpe3ZhciBpPXZvaWQgMCE9PXQmJnR8fFwidW5kZWZpbmVkXCIhPXR5cGVvZiBzZWxmJiZzZWxmfHx3aW5kb3cscj1GdW5jdGlvbi5wcm90b3R5cGUuYXBwbHk7ZnVuY3Rpb24gYSh0LGUpe3RoaXMuX2lkPXQsdGhpcy5fY2xlYXJGbj1lfWUuc2V0VGltZW91dD1mdW5jdGlvbigpe3JldHVybiBuZXcgYShyLmNhbGwoc2V0VGltZW91dCxpLGFyZ3VtZW50cyksY2xlYXJUaW1lb3V0KX0sZS5zZXRJbnRlcnZhbD1mdW5jdGlvbigpe3JldHVybiBuZXcgYShyLmNhbGwoc2V0SW50ZXJ2YWwsaSxhcmd1bWVudHMpLGNsZWFySW50ZXJ2YWwpfSxlLmNsZWFyVGltZW91dD1lLmNsZWFySW50ZXJ2YWw9ZnVuY3Rpb24odCl7dCYmdC5jbG9zZSgpfSxhLnByb3RvdHlwZS51bnJlZj1hLnByb3RvdHlwZS5yZWY9ZnVuY3Rpb24oKXt9LGEucHJvdG90eXBlLmNsb3NlPWZ1bmN0aW9uKCl7dGhpcy5fY2xlYXJGbi5jYWxsKGksdGhpcy5faWQpfSxlLmVucm9sbD1mdW5jdGlvbih0LGUpe2NsZWFyVGltZW91dCh0Ll9pZGxlVGltZW91dElkKSx0Ll9pZGxlVGltZW91dD1lfSxlLnVuZW5yb2xsPWZ1bmN0aW9uKHQpe2NsZWFyVGltZW91dCh0Ll9pZGxlVGltZW91dElkKSx0Ll9pZGxlVGltZW91dD0tMX0sZS5fdW5yZWZBY3RpdmU9ZS5hY3RpdmU9ZnVuY3Rpb24odCl7Y2xlYXJUaW1lb3V0KHQuX2lkbGVUaW1lb3V0SWQpO3ZhciBlPXQuX2lkbGVUaW1lb3V0O2U+PTAmJih0Ll9pZGxlVGltZW91dElkPXNldFRpbWVvdXQoKGZ1bmN0aW9uKCl7dC5fb25UaW1lb3V0JiZ0Ll9vblRpbWVvdXQoKX0pLGUpKX0sbigzNiksZS5zZXRJbW1lZGlhdGU9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGYmJnNlbGYuc2V0SW1tZWRpYXRlfHx2b2lkIDAhPT10JiZ0LnNldEltbWVkaWF0ZXx8dGhpcyYmdGhpcy5zZXRJbW1lZGlhdGUsZS5jbGVhckltbWVkaWF0ZT1cInVuZGVmaW5lZFwiIT10eXBlb2Ygc2VsZiYmc2VsZi5jbGVhckltbWVkaWF0ZXx8dm9pZCAwIT09dCYmdC5jbGVhckltbWVkaWF0ZXx8dGhpcyYmdGhpcy5jbGVhckltbWVkaWF0ZX0pLmNhbGwodGhpcyxuKDE2KSl9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24odCxlKXshZnVuY3Rpb24odCxuKXtcInVzZSBzdHJpY3RcIjtpZighdC5zZXRJbW1lZGlhdGUpe3ZhciBpLHIsYSxvLHMsdT0xLGw9e30sYz0hMSxfPXQuZG9jdW1lbnQsaD1PYmplY3QuZ2V0UHJvdG90eXBlT2YmJk9iamVjdC5nZXRQcm90b3R5cGVPZih0KTtoPWgmJmguc2V0VGltZW91dD9oOnQsXCJbb2JqZWN0IHByb2Nlc3NdXCI9PT17fS50b1N0cmluZy5jYWxsKHQucHJvY2Vzcyk/aT1mdW5jdGlvbih0KXtlLm5leHRUaWNrKChmdW5jdGlvbigpe2QodCl9KSl9OiFmdW5jdGlvbigpe2lmKHQucG9zdE1lc3NhZ2UmJiF0LmltcG9ydFNjcmlwdHMpe3ZhciBlPSEwLG49dC5vbm1lc3NhZ2U7cmV0dXJuIHQub25tZXNzYWdlPWZ1bmN0aW9uKCl7ZT0hMX0sdC5wb3N0TWVzc2FnZShcIlwiLFwiKlwiKSx0Lm9ubWVzc2FnZT1uLGV9fSgpP3QuTWVzc2FnZUNoYW5uZWw/KChhPW5ldyBNZXNzYWdlQ2hhbm5lbCkucG9ydDEub25tZXNzYWdlPWZ1bmN0aW9uKHQpe2QodC5kYXRhKX0saT1mdW5jdGlvbih0KXthLnBvcnQyLnBvc3RNZXNzYWdlKHQpfSk6XyYmXCJvbnJlYWR5c3RhdGVjaGFuZ2VcImluIF8uY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKT8ocj1fLmRvY3VtZW50RWxlbWVudCxpPWZ1bmN0aW9uKHQpe3ZhciBlPV8uY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKTtlLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpe2QodCksZS5vbnJlYWR5c3RhdGVjaGFuZ2U9bnVsbCxyLnJlbW92ZUNoaWxkKGUpLGU9bnVsbH0sci5hcHBlbmRDaGlsZChlKX0pOmk9ZnVuY3Rpb24odCl7c2V0VGltZW91dChkLDAsdCl9OihvPVwic2V0SW1tZWRpYXRlJFwiK01hdGgucmFuZG9tKCkrXCIkXCIscz1mdW5jdGlvbihlKXtlLnNvdXJjZT09PXQmJlwic3RyaW5nXCI9PXR5cGVvZiBlLmRhdGEmJjA9PT1lLmRhdGEuaW5kZXhPZihvKSYmZCgrZS5kYXRhLnNsaWNlKG8ubGVuZ3RoKSl9LHQuYWRkRXZlbnRMaXN0ZW5lcj90LmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIscywhMSk6dC5hdHRhY2hFdmVudChcIm9ubWVzc2FnZVwiLHMpLGk9ZnVuY3Rpb24oZSl7dC5wb3N0TWVzc2FnZShvK2UsXCIqXCIpfSksaC5zZXRJbW1lZGlhdGU9ZnVuY3Rpb24odCl7XCJmdW5jdGlvblwiIT10eXBlb2YgdCYmKHQ9bmV3IEZ1bmN0aW9uKFwiXCIrdCkpO2Zvcih2YXIgZT1uZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aC0xKSxuPTA7bjxlLmxlbmd0aDtuKyspZVtuXT1hcmd1bWVudHNbbisxXTt2YXIgcj17Y2FsbGJhY2s6dCxhcmdzOmV9O3JldHVybiBsW3VdPXIsaSh1KSx1Kyt9LGguY2xlYXJJbW1lZGlhdGU9cH1mdW5jdGlvbiBwKHQpe2RlbGV0ZSBsW3RdfWZ1bmN0aW9uIGQodCl7aWYoYylzZXRUaW1lb3V0KGQsMCx0KTtlbHNle3ZhciBlPWxbdF07aWYoZSl7Yz0hMDt0cnl7IWZ1bmN0aW9uKHQpe3ZhciBlPXQuY2FsbGJhY2ssbj10LmFyZ3M7c3dpdGNoKG4ubGVuZ3RoKXtjYXNlIDA6ZSgpO2JyZWFrO2Nhc2UgMTplKG5bMF0pO2JyZWFrO2Nhc2UgMjplKG5bMF0sblsxXSk7YnJlYWs7Y2FzZSAzOmUoblswXSxuWzFdLG5bMl0pO2JyZWFrO2RlZmF1bHQ6ZS5hcHBseSh2b2lkIDAsbil9fShlKX1maW5hbGx5e3AodCksYz0hMX19fX19KFwidW5kZWZpbmVkXCI9PXR5cGVvZiBzZWxmP3ZvaWQgMD09PXQ/dGhpczp0OnNlbGYpfSkuY2FsbCh0aGlzLG4oMTYpLG4oMjEpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMSk7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7Zm9yKDshT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkmJm51bGwhPT0odD1pKHQpKTspO3JldHVybiB0fX0sZnVuY3Rpb24odCxlLG4peyhlPW4oOCkoITEpKS5wdXNoKFt0LmksXCIjX3NldHRpbmdzeyRveTphdXRvOyR3b3M6dG91Y2h9I19zZXR0aW5ncyAuX3NlcGFyYXRvcnskaDoxMHB4fSNfc2V0dGluZ3MgLl90ZXh0eyRwOjEwcHg7JGM6dmFyKC0tYWNjZW50KTskZnM6MTJweH0jX3NldHRpbmdzIC5fY29sb3IsI19zZXR0aW5ncyAuX3JhbmdlLCNfc2V0dGluZ3MgLl9zZWxlY3R7JGN1OnBvaW50ZXJ9I19zZXR0aW5ncyAuX2NvbG9yIC5faGVhZCwjX3NldHRpbmdzIC5fcmFuZ2UgLl9oZWFkLCNfc2V0dGluZ3MgLl9zZWxlY3QgLl9oZWFkLCNfc2V0dGluZ3MgLl9zd2l0Y2h7JHA6MTBweDskYjp2YXIoLS1kYXJrZXItYmFja2dyb3VuZCk7JGZzOjE0cHg7JGJiOjFweCBzb2xpZCB2YXIoLS1ib3JkZXIpOyRidDoxcHggc29saWQgdmFyKC0tYm9yZGVyKTskYzp2YXIoLS1wcmltYXJ5KTskbXQ6LTFweH0jX3NldHRpbmdzIC5fY29sb3IgLl9oZWFkLCNfc2V0dGluZ3MgLl9yYW5nZSAuX2hlYWQsI19zZXR0aW5ncyAuX3NlbGVjdCAuX2hlYWR7JHRyOmJhY2tncm91bmQgLjNzLGNvbG9yIC4zc30jX3NldHRpbmdzIC5fY29sb3IgLl9oZWFkIHNwYW4sI19zZXR0aW5ncyAuX3JhbmdlIC5faGVhZCBzcGFuLCNfc2V0dGluZ3MgLl9zZWxlY3QgLl9oZWFkIHNwYW57JGY6cmlnaHR9I19zZXR0aW5ncyAuX2NvbG9yIC5faGVhZDphY3RpdmUsI19zZXR0aW5ncyAuX3JhbmdlIC5faGVhZDphY3RpdmUsI19zZXR0aW5ncyAuX3NlbGVjdCAuX2hlYWQ6YWN0aXZleyRiOnZhcigtLWhpZ2hsaWdodCk7JGM6dmFyKC0tc2VsZWN0LWZvcmVncm91bmQpfSNfc2V0dGluZ3MgLl9jb2xvciAuX2hlYWQgc3BhbnskZDppbmxpbmUtYmxvY2s7JGJvOjFweCBzb2xpZCB2YXIoLS1ib3JkZXIpOyR3OjE1cHg7JGg6MTVweH0jX3NldHRpbmdzIC5fc2VsZWN0IHVseyRkOm5vbmU7JGJiOjFweCBzb2xpZCB2YXIoLS1ib3JkZXIpOyRjOnZhcigtLWZvcmVncm91bmQpfSNfc2V0dGluZ3MgLl9zZWxlY3QgdWwuX29wZW57JGQ6YmxvY2t9I19zZXR0aW5ncyAuX3NlbGVjdCB1bCBsaXskcDoxMHB4OyR0cjpiYWNrZ3JvdW5kIC4zcyxjb2xvciAuM3N9I19zZXR0aW5ncyAuX3NlbGVjdCB1bCBsaTphY3RpdmV7JGI6dmFyKC0taGlnaGxpZ2h0KTskYzp2YXIoLS1zZWxlY3QtZm9yZWdyb3VuZCl9I19zZXR0aW5ncyAuX2NvbG9yIHVseyRkOm5vbmU7JHA6MTBweDskZnM6MDskYmI6MXB4IHNvbGlkIHZhcigtLWJvcmRlcil9I19zZXR0aW5ncyAuX2NvbG9yIHVsLl9vcGVueyRkOmJsb2NrfSNfc2V0dGluZ3MgLl9jb2xvciB1bCBsaXskZDppbmxpbmUtYmxvY2s7JHc6MjBweDskYm86MXB4IHNvbGlkIHZhcigtLWJvcmRlcik7JGg6MjBweDttYXJnaW4tcmlnaHQ6MTBweH0jX3NldHRpbmdzIC5fcmFuZ2UgLl9pbnB1dC1jb250YWluZXJ7JGQ6bm9uZTskcDoxMHB4OyRiYjoxcHggc29saWQgdmFyKC0tYm9yZGVyKTskcG86cmVsYXRpdmV9I19zZXR0aW5ncyAuX3JhbmdlIC5faW5wdXQtY29udGFpbmVyLl9vcGVueyRkOmJsb2NrfSNfc2V0dGluZ3MgLl9yYW5nZSAuX2lucHV0LWNvbnRhaW5lciAuX3JhbmdlLXRyYWNreyRoOjRweDskdzoxMDAlOyRwOjAgMTBweDskcG86YWJzb2x1dGU7JGw6MDskdDoxNnB4fSNfc2V0dGluZ3MgLl9yYW5nZSAuX2lucHV0LWNvbnRhaW5lciAuX3JhbmdlLXRyYWNrIC5fcmFuZ2UtdHJhY2stYmFyeyRiOnZhcigtLWRhcmtlci1iYWNrZ3JvdW5kKTskYnJhOjJweDskbzpoaWRkZW47JHc6MTAwJTskaDo0cHh9I19zZXR0aW5ncyAuX3JhbmdlIC5faW5wdXQtY29udGFpbmVyIC5fcmFuZ2UtdHJhY2sgLl9yYW5nZS10cmFjay1iYXIgLl9yYW5nZS10cmFjay1wcm9ncmVzc3skaDoxMDAlOyRiOnZhcigtLWFjY2VudCk7JHc6NTAlfSNfc2V0dGluZ3MgLl9yYW5nZSAuX2lucHV0LWNvbnRhaW5lciBpbnB1dHstd2Via2l0LWFwcGVhcmFuY2U6bm9uZTskYjowIDA7JGg6NHB4OyR3OjEwMCU7JHBvOnJlbGF0aXZlOyR0Oi0zcHg7JG06MCBhdXRvOyRvdTowOyRicmE6MnB4fSNfc2V0dGluZ3MgLl9yYW5nZSAuX2lucHV0LWNvbnRhaW5lciBpbnB1dDo6LXdlYmtpdC1zbGlkZXItdGh1bWJ7LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmU7JHBvOnJlbGF0aXZlOyR0OjA7JHo6MTskdzoxNnB4OyRibzpub25lOyRoOjE2cHg7JGJyYToxMHB4OyRibzoxcHggc29saWQgdmFyKC0tYm9yZGVyKTskYjpyYWRpYWwtZ3JhZGllbnQoY2lyY2xlIGF0IGNlbnRlcix2YXIoLS1kYXJrKSAwLHZhcigtLWRhcmspIDE1JSx2YXIoLS1saWdodCkgMjIlLHZhcigtLWxpZ2h0KSAxMDAlKX0jX3NldHRpbmdzIC5fc3dpdGNoIC5fY2hlY2tib3h7JGY6cmlnaHQ7JHBvOnJlbGF0aXZlO3ZlcnRpY2FsLWFsaWduOnRvcDskdzo0NnB4OyRoOjIwcHg7JHA6M3B4OyRicmE6MThweDskYm86MXB4IHNvbGlkIHZhcigtLWJvcmRlcik7JGN1OnBvaW50ZXI7JGJpOmxpbmVhci1ncmFkaWVudCh0byBib3R0b20sdmFyKC0tZGFyayksdmFyKC0tbGlnaHQpIDI1cHgpfSNfc2V0dGluZ3MgLl9zd2l0Y2ggLl9jaGVja2JveCAuX2lucHV0eyRwbzphYnNvbHV0ZTskdDowOyRsOjA7b3BhY2l0eTowfSNfc2V0dGluZ3MgLl9zd2l0Y2ggLl9jaGVja2JveCAuX2xhYmVseyRwZTpub25lOyRwbzpyZWxhdGl2ZTskZDpibG9jazskaDoxMnB4OyRmczoxMHB4OyR0dDp1cHBlcmNhc2U7JGI6dmFyKC0tZGFya2VyLWJhY2tncm91bmQpOyRicmE6aW5oZXJpdDskYnM6aW5zZXQgMCAxcHggMnB4IHJnYmEoMCwwLDAsLjEyKSxpbnNldCAwIDAgMnB4IHJnYmEoMCwwLDAsLjE1KTskdHI6LjE1cyBlYXNlLW91dDt0cmFuc2l0aW9uLXByb3BlcnR5Om9wYWNpdHkgYmFja2dyb3VuZH0jX3NldHRpbmdzIC5fc3dpdGNoIC5fY2hlY2tib3ggLl9sYWJlbDphZnRlciwjX3NldHRpbmdzIC5fc3dpdGNoIC5fY2hlY2tib3ggLl9sYWJlbDpiZWZvcmV7JHBvOmFic29sdXRlOyR0OjUwJTskbXQ6LS41ZW07JGxoOjE7JHRyOmluaGVyaXR9I19zZXR0aW5ncyAuX3N3aXRjaCAuX2NoZWNrYm94IC5faW5wdXQ6Y2hlY2tlZH4uX2xhYmVseyRiOnZhcigtLWFjY2VudCk7JGJzOmluc2V0IDAgMXB4IDJweCByZ2JhKDAsMCwwLC4xNSksaW5zZXQgMCAwIDNweCByZ2JhKDAsMCwwLC4yKX0jX3NldHRpbmdzIC5fc3dpdGNoIC5fY2hlY2tib3ggLl9pbnB1dDpjaGVja2Vkfi5fbGFiZWw6YmVmb3Jle29wYWNpdHk6MH0jX3NldHRpbmdzIC5fc3dpdGNoIC5fY2hlY2tib3ggLl9pbnB1dDpjaGVja2Vkfi5fbGFiZWw6YWZ0ZXJ7b3BhY2l0eToxfSNfc2V0dGluZ3MgLl9zd2l0Y2ggLl9jaGVja2JveCAuX2hhbmRsZXskcG86YWJzb2x1dGU7JHBlOm5vbmU7JHQ6MDskbDowOyR3OjE4cHg7JGg6MThweDskYnJhOjEwcHg7JGJzOjFweCAxcHggNXB4IHJnYmEoMCwwLDAsLjIpOyRiaTpsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLHZhcigtLWxpZ2h0KSA0MCUsdmFyKC0tZGFyaykpOyR0cjpsZWZ0IC4xNXMgZWFzZS1vdXR9I19zZXR0aW5ncyAuX3N3aXRjaCAuX2NoZWNrYm94IC5faGFuZGxlOmJlZm9yZXskY286Jyc7JHBvOmFic29sdXRlOyR0OjUwJTskbDo1MCU7JG06LTZweCAwIDAgLTZweDskdzoxMnB4OyRoOjEycHg7JGJyYTo2cHg7JGJzOmluc2V0IDAgMXB4IHJnYmEoMCwwLDAsLjAyKTskYmk6bGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSx2YXIoLS1kYXJrKSx2YXIoLS1saWdodCkpfSNfc2V0dGluZ3MgLl9zd2l0Y2ggLl9jaGVja2JveCAuX2lucHV0OmNoZWNrZWR+Ll9oYW5kbGV7JGw6MzBweDskYnM6LTFweCAxcHggNXB4IHJnYmEoMCwwLDAsLjIpfVwiLFwiXCJdKSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNyk7dC5leHBvcnRzPShpLmRlZmF1bHR8fGkpLnRlbXBsYXRlKHsxOmZ1bmN0aW9uKHQsZSxuLGkscil7cmV0dXJuJyBjaGVja2VkPVwiY2hlY2tlZFwiICd9LGNvbXBpbGVyOls4LFwiPj0gNC4zLjBcIl0sbWFpbjpmdW5jdGlvbih0LGUsbixpLHIpe3ZhciBhLG89dC5sYW1iZGEscz10LmVzY2FwZUV4cHJlc3Npb24sdT1udWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30sbD10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm4nPGRpdiBpZD1cIicrcyhvKG51bGwhPWU/bChlLFwiaWRcIik6ZSxlKSkrJ1wiICcrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwodSxcInN3aXRjaFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPiBcIitzKG8obnVsbCE9ZT9sKGUsXCJkZXNjXCIpOmUsZSkpK1wiIDxsYWJlbCBcIisobnVsbCE9KGE9bChuLFwiY2xhc3NcIikuY2FsbCh1LFwiY2hlY2tib3hcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKSsnPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiAnKyhudWxsIT0oYT1sKG4sXCJjbGFzc1wiKS5jYWxsKHUsXCJpbnB1dFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpKycgZGF0YS1pZD1cIicrcyhvKG51bGwhPWU/bChlLFwiaWRcIik6ZSxlKSkrJ1wiICcrKG51bGwhPShhPWwobixcImlmXCIpLmNhbGwodSxudWxsIT1lP2woZSxcInZhbFwiKTplLHtuYW1lOlwiaWZcIixoYXNoOnt9LGZuOnQucHJvZ3JhbSgxLHIsMCksaW52ZXJzZTp0Lm5vb3AsZGF0YTpyfSkpP2E6XCJcIikrXCI+IDxzcGFuIFwiKyhudWxsIT0oYT1sKG4sXCJjbGFzc1wiKS5jYWxsKHUsXCJsYWJlbFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjwvc3Bhbj4gPHNwYW4gXCIrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwodSxcImhhbmRsZVwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlwifSx1c2VEYXRhOiEwfSl9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBpKHQpe3JldHVybiB0JiZ0Ll9fZXNNb2R1bGU/dDp7ZGVmYXVsdDp0fX1mdW5jdGlvbiByKHQpe2lmKHQmJnQuX19lc01vZHVsZSlyZXR1cm4gdDt2YXIgZT17fTtpZihudWxsIT10KWZvcih2YXIgbiBpbiB0KU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LG4pJiYoZVtuXT10W25dKTtyZXR1cm4gZS5kZWZhdWx0PXQsZX1lLl9fZXNNb2R1bGU9ITA7dmFyIGE9cihuKDIyKSksbz1pKG4oNTEpKSxzPWkobigxMykpLHU9cihuKDEwKSksbD1yKG4oNTIpKSxjPWkobig1NCkpO2Z1bmN0aW9uIF8oKXt2YXIgdD1uZXcgYS5IYW5kbGViYXJzRW52aXJvbm1lbnQ7cmV0dXJuIHUuZXh0ZW5kKHQsYSksdC5TYWZlU3RyaW5nPW8uZGVmYXVsdCx0LkV4Y2VwdGlvbj1zLmRlZmF1bHQsdC5VdGlscz11LHQuZXNjYXBlRXhwcmVzc2lvbj11LmVzY2FwZUV4cHJlc3Npb24sdC5WTT1sLHQudGVtcGxhdGU9ZnVuY3Rpb24oZSl7cmV0dXJuIGwudGVtcGxhdGUoZSx0KX0sdH12YXIgaD1fKCk7aC5jcmVhdGU9XyxjLmRlZmF1bHQoaCksaC5kZWZhdWx0PWgsZS5kZWZhdWx0PWgsdC5leHBvcnRzPWUuZGVmYXVsdH0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2UuX19lc01vZHVsZT0hMDt2YXIgaT1uKDEwKTtlLmRlZmF1bHQ9ZnVuY3Rpb24odCl7dC5yZWdpc3RlckhlbHBlcihcImJsb2NrSGVscGVyTWlzc2luZ1wiLChmdW5jdGlvbihlLG4pe3ZhciByPW4uaW52ZXJzZSxhPW4uZm47aWYoITA9PT1lKXJldHVybiBhKHRoaXMpO2lmKCExPT09ZXx8bnVsbD09ZSlyZXR1cm4gcih0aGlzKTtpZihpLmlzQXJyYXkoZSkpcmV0dXJuIGUubGVuZ3RoPjA/KG4uaWRzJiYobi5pZHM9W24ubmFtZV0pLHQuaGVscGVycy5lYWNoKGUsbikpOnIodGhpcyk7aWYobi5kYXRhJiZuLmlkcyl7dmFyIG89aS5jcmVhdGVGcmFtZShuLmRhdGEpO28uY29udGV4dFBhdGg9aS5hcHBlbmRDb250ZXh0UGF0aChuLmRhdGEuY29udGV4dFBhdGgsbi5uYW1lKSxuPXtkYXRhOm99fXJldHVybiBhKGUsbil9KSl9LHQuZXhwb3J0cz1lLmRlZmF1bHR9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjsoZnVuY3Rpb24oaSl7ZS5fX2VzTW9kdWxlPSEwO3ZhciByLGE9bigxMCksbz1uKDEzKSxzPShyPW8pJiZyLl9fZXNNb2R1bGU/cjp7ZGVmYXVsdDpyfTtlLmRlZmF1bHQ9ZnVuY3Rpb24odCl7dC5yZWdpc3RlckhlbHBlcihcImVhY2hcIiwoZnVuY3Rpb24odCxlKXtpZighZSl0aHJvdyBuZXcgcy5kZWZhdWx0KFwiTXVzdCBwYXNzIGl0ZXJhdG9yIHRvICNlYWNoXCIpO3ZhciBuLHI9ZS5mbixvPWUuaW52ZXJzZSx1PTAsbD1cIlwiLGM9dm9pZCAwLF89dm9pZCAwO2Z1bmN0aW9uIGgoZSxuLGkpe2MmJihjLmtleT1lLGMuaW5kZXg9bixjLmZpcnN0PTA9PT1uLGMubGFzdD0hIWksXyYmKGMuY29udGV4dFBhdGg9XytlKSksbCs9cih0W2VdLHtkYXRhOmMsYmxvY2tQYXJhbXM6YS5ibG9ja1BhcmFtcyhbdFtlXSxlXSxbXytlLG51bGxdKX0pfWlmKGUuZGF0YSYmZS5pZHMmJihfPWEuYXBwZW5kQ29udGV4dFBhdGgoZS5kYXRhLmNvbnRleHRQYXRoLGUuaWRzWzBdKStcIi5cIiksYS5pc0Z1bmN0aW9uKHQpJiYodD10LmNhbGwodGhpcykpLGUuZGF0YSYmKGM9YS5jcmVhdGVGcmFtZShlLmRhdGEpKSx0JiZcIm9iamVjdFwiPT10eXBlb2YgdClpZihhLmlzQXJyYXkodCkpZm9yKHZhciBwPXQubGVuZ3RoO3U8cDt1KyspdSBpbiB0JiZoKHUsdSx1PT09dC5sZW5ndGgtMSk7ZWxzZSBpZihpLlN5bWJvbCYmdFtpLlN5bWJvbC5pdGVyYXRvcl0pe2Zvcih2YXIgZD1bXSxmPXRbaS5TeW1ib2wuaXRlcmF0b3JdKCksdj1mLm5leHQoKTshdi5kb25lO3Y9Zi5uZXh0KCkpZC5wdXNoKHYudmFsdWUpO2ZvcihwPSh0PWQpLmxlbmd0aDt1PHA7dSsrKWgodSx1LHU9PT10Lmxlbmd0aC0xKX1lbHNlIG49dm9pZCAwLE9iamVjdC5rZXlzKHQpLmZvckVhY2goKGZ1bmN0aW9uKHQpe3ZvaWQgMCE9PW4mJmgobix1LTEpLG49dCx1Kyt9KSksdm9pZCAwIT09biYmaChuLHUtMSwhMCk7cmV0dXJuIDA9PT11JiYobD1vKHRoaXMpKSxsfSkpfSx0LmV4cG9ydHM9ZS5kZWZhdWx0fSkuY2FsbCh0aGlzLG4oMTYpKX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2UuX19lc01vZHVsZT0hMDt2YXIgaSxyPW4oMTMpLGE9KGk9cikmJmkuX19lc01vZHVsZT9pOntkZWZhdWx0Oml9O2UuZGVmYXVsdD1mdW5jdGlvbih0KXt0LnJlZ2lzdGVySGVscGVyKFwiaGVscGVyTWlzc2luZ1wiLChmdW5jdGlvbigpe2lmKDEhPT1hcmd1bWVudHMubGVuZ3RoKXRocm93IG5ldyBhLmRlZmF1bHQoJ01pc3NpbmcgaGVscGVyOiBcIicrYXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGgtMV0ubmFtZSsnXCInKX0pKX0sdC5leHBvcnRzPWUuZGVmYXVsdH0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2UuX19lc01vZHVsZT0hMDt2YXIgaSxyPW4oMTApLGE9bigxMyksbz0oaT1hKSYmaS5fX2VzTW9kdWxlP2k6e2RlZmF1bHQ6aX07ZS5kZWZhdWx0PWZ1bmN0aW9uKHQpe3QucmVnaXN0ZXJIZWxwZXIoXCJpZlwiLChmdW5jdGlvbih0LGUpe2lmKDIhPWFyZ3VtZW50cy5sZW5ndGgpdGhyb3cgbmV3IG8uZGVmYXVsdChcIiNpZiByZXF1aXJlcyBleGFjdGx5IG9uZSBhcmd1bWVudFwiKTtyZXR1cm4gci5pc0Z1bmN0aW9uKHQpJiYodD10LmNhbGwodGhpcykpLCFlLmhhc2guaW5jbHVkZVplcm8mJiF0fHxyLmlzRW1wdHkodCk/ZS5pbnZlcnNlKHRoaXMpOmUuZm4odGhpcyl9KSksdC5yZWdpc3RlckhlbHBlcihcInVubGVzc1wiLChmdW5jdGlvbihlLG4pe2lmKDIhPWFyZ3VtZW50cy5sZW5ndGgpdGhyb3cgbmV3IG8uZGVmYXVsdChcIiN1bmxlc3MgcmVxdWlyZXMgZXhhY3RseSBvbmUgYXJndW1lbnRcIik7cmV0dXJuIHQuaGVscGVycy5pZi5jYWxsKHRoaXMsZSx7Zm46bi5pbnZlcnNlLGludmVyc2U6bi5mbixoYXNoOm4uaGFzaH0pfSkpfSx0LmV4cG9ydHM9ZS5kZWZhdWx0fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZS5fX2VzTW9kdWxlPSEwLGUuZGVmYXVsdD1mdW5jdGlvbih0KXt0LnJlZ2lzdGVySGVscGVyKFwibG9nXCIsKGZ1bmN0aW9uKCl7Zm9yKHZhciBlPVt2b2lkIDBdLG49YXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGgtMV0saT0wO2k8YXJndW1lbnRzLmxlbmd0aC0xO2krKyllLnB1c2goYXJndW1lbnRzW2ldKTt2YXIgcj0xO251bGwhPW4uaGFzaC5sZXZlbD9yPW4uaGFzaC5sZXZlbDpuLmRhdGEmJm51bGwhPW4uZGF0YS5sZXZlbCYmKHI9bi5kYXRhLmxldmVsKSxlWzBdPXIsdC5sb2cuYXBwbHkodCxlKX0pKX0sdC5leHBvcnRzPWUuZGVmYXVsdH0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2UuX19lc01vZHVsZT0hMCxlLmRlZmF1bHQ9ZnVuY3Rpb24odCl7dC5yZWdpc3RlckhlbHBlcihcImxvb2t1cFwiLChmdW5jdGlvbih0LGUsbil7cmV0dXJuIHQ/bi5sb29rdXBQcm9wZXJ0eSh0LGUpOnR9KSl9LHQuZXhwb3J0cz1lLmRlZmF1bHR9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtlLl9fZXNNb2R1bGU9ITA7dmFyIGkscj1uKDEwKSxhPW4oMTMpLG89KGk9YSkmJmkuX19lc01vZHVsZT9pOntkZWZhdWx0Oml9O2UuZGVmYXVsdD1mdW5jdGlvbih0KXt0LnJlZ2lzdGVySGVscGVyKFwid2l0aFwiLChmdW5jdGlvbih0LGUpe2lmKDIhPWFyZ3VtZW50cy5sZW5ndGgpdGhyb3cgbmV3IG8uZGVmYXVsdChcIiN3aXRoIHJlcXVpcmVzIGV4YWN0bHkgb25lIGFyZ3VtZW50XCIpO3IuaXNGdW5jdGlvbih0KSYmKHQ9dC5jYWxsKHRoaXMpKTt2YXIgbj1lLmZuO2lmKHIuaXNFbXB0eSh0KSlyZXR1cm4gZS5pbnZlcnNlKHRoaXMpO3ZhciBpPWUuZGF0YTtyZXR1cm4gZS5kYXRhJiZlLmlkcyYmKChpPXIuY3JlYXRlRnJhbWUoZS5kYXRhKSkuY29udGV4dFBhdGg9ci5hcHBlbmRDb250ZXh0UGF0aChlLmRhdGEuY29udGV4dFBhdGgsZS5pZHNbMF0pKSxuKHQse2RhdGE6aSxibG9ja1BhcmFtczpyLmJsb2NrUGFyYW1zKFt0XSxbaSYmaS5jb250ZXh0UGF0aF0pfSl9KSl9LHQuZXhwb3J0cz1lLmRlZmF1bHR9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtlLl9fZXNNb2R1bGU9ITAsZS5yZWdpc3RlckRlZmF1bHREZWNvcmF0b3JzPWZ1bmN0aW9uKHQpe2EuZGVmYXVsdCh0KX07dmFyIGkscj1uKDQ5KSxhPShpPXIpJiZpLl9fZXNNb2R1bGU/aTp7ZGVmYXVsdDppfX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2UuX19lc01vZHVsZT0hMDt2YXIgaT1uKDEwKTtlLmRlZmF1bHQ9ZnVuY3Rpb24odCl7dC5yZWdpc3RlckRlY29yYXRvcihcImlubGluZVwiLChmdW5jdGlvbih0LGUsbixyKXt2YXIgYT10O3JldHVybiBlLnBhcnRpYWxzfHwoZS5wYXJ0aWFscz17fSxhPWZ1bmN0aW9uKHIsYSl7dmFyIG89bi5wYXJ0aWFscztuLnBhcnRpYWxzPWkuZXh0ZW5kKHt9LG8sZS5wYXJ0aWFscyk7dmFyIHM9dChyLGEpO3JldHVybiBuLnBhcnRpYWxzPW8sc30pLGUucGFydGlhbHNbci5hcmdzWzBdXT1yLmZuLGF9KSl9LHQuZXhwb3J0cz1lLmRlZmF1bHR9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtlLl9fZXNNb2R1bGU9ITAsZS5jcmVhdGVOZXdMb29rdXBPYmplY3Q9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxlPUFycmF5KHQpLG49MDtuPHQ7bisrKWVbbl09YXJndW1lbnRzW25dO3JldHVybiBpLmV4dGVuZC5hcHBseSh2b2lkIDAsW09iamVjdC5jcmVhdGUobnVsbCldLmNvbmNhdChlKSl9O3ZhciBpPW4oMTApfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaSh0KXt0aGlzLnN0cmluZz10fWUuX19lc01vZHVsZT0hMCxpLnByb3RvdHlwZS50b1N0cmluZz1pLnByb3RvdHlwZS50b0hUTUw9ZnVuY3Rpb24oKXtyZXR1cm5cIlwiK3RoaXMuc3RyaW5nfSxlLmRlZmF1bHQ9aSx0LmV4cG9ydHM9ZS5kZWZhdWx0fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZS5fX2VzTW9kdWxlPSEwLGUuY2hlY2tSZXZpc2lvbj1mdW5jdGlvbih0KXt2YXIgZT10JiZ0WzBdfHwxLG49cy5DT01QSUxFUl9SRVZJU0lPTjtpZihlPj1zLkxBU1RfQ09NUEFUSUJMRV9DT01QSUxFUl9SRVZJU0lPTiYmZTw9cy5DT01QSUxFUl9SRVZJU0lPTilyZXR1cm47aWYoZTxzLkxBU1RfQ09NUEFUSUJMRV9DT01QSUxFUl9SRVZJU0lPTil7dmFyIGk9cy5SRVZJU0lPTl9DSEFOR0VTW25dLHI9cy5SRVZJU0lPTl9DSEFOR0VTW2VdO3Rocm93IG5ldyBvLmRlZmF1bHQoXCJUZW1wbGF0ZSB3YXMgcHJlY29tcGlsZWQgd2l0aCBhbiBvbGRlciB2ZXJzaW9uIG9mIEhhbmRsZWJhcnMgdGhhbiB0aGUgY3VycmVudCBydW50aW1lLiBQbGVhc2UgdXBkYXRlIHlvdXIgcHJlY29tcGlsZXIgdG8gYSBuZXdlciB2ZXJzaW9uIChcIitpK1wiKSBvciBkb3duZ3JhZGUgeW91ciBydW50aW1lIHRvIGFuIG9sZGVyIHZlcnNpb24gKFwiK3IrXCIpLlwiKX10aHJvdyBuZXcgby5kZWZhdWx0KFwiVGVtcGxhdGUgd2FzIHByZWNvbXBpbGVkIHdpdGggYSBuZXdlciB2ZXJzaW9uIG9mIEhhbmRsZWJhcnMgdGhhbiB0aGUgY3VycmVudCBydW50aW1lLiBQbGVhc2UgdXBkYXRlIHlvdXIgcnVudGltZSB0byBhIG5ld2VyIHZlcnNpb24gKFwiK3RbMV0rXCIpLlwiKX0sZS50ZW1wbGF0ZT1mdW5jdGlvbih0LGUpe2lmKCFlKXRocm93IG5ldyBvLmRlZmF1bHQoXCJObyBlbnZpcm9ubWVudCBwYXNzZWQgdG8gdGVtcGxhdGVcIik7aWYoIXR8fCF0Lm1haW4pdGhyb3cgbmV3IG8uZGVmYXVsdChcIlVua25vd24gdGVtcGxhdGUgb2JqZWN0OiBcIit0eXBlb2YgdCk7dC5tYWluLmRlY29yYXRvcj10Lm1haW5fZCxlLlZNLmNoZWNrUmV2aXNpb24odC5jb21waWxlcik7dmFyIG49dC5jb21waWxlciYmNz09PXQuY29tcGlsZXJbMF07dmFyIGk9e3N0cmljdDpmdW5jdGlvbih0LGUsbil7aWYoISh0JiZlIGluIHQpKXRocm93IG5ldyBvLmRlZmF1bHQoJ1wiJytlKydcIiBub3QgZGVmaW5lZCBpbiAnK3Qse2xvYzpufSk7cmV0dXJuIHRbZV19LGxvb2t1cFByb3BlcnR5OmZ1bmN0aW9uKHQsZSl7dmFyIG49dFtlXTtyZXR1cm4gbnVsbD09bnx8T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSl8fGMucmVzdWx0SXNBbGxvd2VkKG4saS5wcm90b0FjY2Vzc0NvbnRyb2wsZSk/bjp2b2lkIDB9LGxvb2t1cDpmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj10Lmxlbmd0aCxyPTA7cjxuO3IrKyl7aWYobnVsbCE9KHRbcl0mJmkubG9va3VwUHJvcGVydHkodFtyXSxlKSkpcmV0dXJuIHRbcl1bZV19fSxsYW1iZGE6ZnVuY3Rpb24odCxlKXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3QuY2FsbChlKTp0fSxlc2NhcGVFeHByZXNzaW9uOnIuZXNjYXBlRXhwcmVzc2lvbixpbnZva2VQYXJ0aWFsOmZ1bmN0aW9uKG4saSxhKXthLmhhc2gmJihpPXIuZXh0ZW5kKHt9LGksYS5oYXNoKSxhLmlkcyYmKGEuaWRzWzBdPSEwKSksbj1lLlZNLnJlc29sdmVQYXJ0aWFsLmNhbGwodGhpcyxuLGksYSk7dmFyIHM9ci5leHRlbmQoe30sYSx7aG9va3M6dGhpcy5ob29rcyxwcm90b0FjY2Vzc0NvbnRyb2w6dGhpcy5wcm90b0FjY2Vzc0NvbnRyb2x9KSx1PWUuVk0uaW52b2tlUGFydGlhbC5jYWxsKHRoaXMsbixpLHMpO2lmKG51bGw9PXUmJmUuY29tcGlsZSYmKGEucGFydGlhbHNbYS5uYW1lXT1lLmNvbXBpbGUobix0LmNvbXBpbGVyT3B0aW9ucyxlKSx1PWEucGFydGlhbHNbYS5uYW1lXShpLHMpKSxudWxsIT11KXtpZihhLmluZGVudCl7Zm9yKHZhciBsPXUuc3BsaXQoXCJcXG5cIiksYz0wLF89bC5sZW5ndGg7YzxfJiYobFtjXXx8YysxIT09Xyk7YysrKWxbY109YS5pbmRlbnQrbFtjXTt1PWwuam9pbihcIlxcblwiKX1yZXR1cm4gdX10aHJvdyBuZXcgby5kZWZhdWx0KFwiVGhlIHBhcnRpYWwgXCIrYS5uYW1lK1wiIGNvdWxkIG5vdCBiZSBjb21waWxlZCB3aGVuIHJ1bm5pbmcgaW4gcnVudGltZS1vbmx5IG1vZGVcIil9LGZuOmZ1bmN0aW9uKGUpe3ZhciBuPXRbZV07cmV0dXJuIG4uZGVjb3JhdG9yPXRbZStcIl9kXCJdLG59LHByb2dyYW1zOltdLHByb2dyYW06ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgYT10aGlzLnByb2dyYW1zW3RdLG89dGhpcy5mbih0KTtyZXR1cm4gZXx8cnx8aXx8bj9hPV8odGhpcyx0LG8sZSxuLGkscik6YXx8KGE9dGhpcy5wcm9ncmFtc1t0XT1fKHRoaXMsdCxvKSksYX0sZGF0YTpmdW5jdGlvbih0LGUpe2Zvcig7dCYmZS0tOyl0PXQuX3BhcmVudDtyZXR1cm4gdH0sbWVyZ2VJZk5lZWRlZDpmdW5jdGlvbih0LGUpe3ZhciBuPXR8fGU7cmV0dXJuIHQmJmUmJnQhPT1lJiYobj1yLmV4dGVuZCh7fSxlLHQpKSxufSxudWxsQ29udGV4dDpPYmplY3Quc2VhbCh7fSksbm9vcDplLlZNLm5vb3AsY29tcGlsZXJJbmZvOnQuY29tcGlsZXJ9O2Z1bmN0aW9uIGEoZSl7dmFyIG49YXJndW1lbnRzLmxlbmd0aDw9MXx8dm9pZCAwPT09YXJndW1lbnRzWzFdP3t9OmFyZ3VtZW50c1sxXSxyPW4uZGF0YTthLl9zZXR1cChuKSwhbi5wYXJ0aWFsJiZ0LnVzZURhdGEmJihyPXAoZSxyKSk7dmFyIG89dm9pZCAwLHM9dC51c2VCbG9ja1BhcmFtcz9bXTp2b2lkIDA7ZnVuY3Rpb24gdShlKXtyZXR1cm5cIlwiK3QubWFpbihpLGUsaS5oZWxwZXJzLGkucGFydGlhbHMscixzLG8pfXJldHVybiB0LnVzZURlcHRocyYmKG89bi5kZXB0aHM/ZSE9bi5kZXB0aHNbMF0/W2VdLmNvbmNhdChuLmRlcHRocyk6bi5kZXB0aHM6W2VdKSwodT1kKHQubWFpbix1LGksbi5kZXB0aHN8fFtdLHIscykpKGUsbil9cmV0dXJuIGEuaXNUb3A9ITAsYS5fc2V0dXA9ZnVuY3Rpb24oYSl7aWYoYS5wYXJ0aWFsKWkucHJvdG9BY2Nlc3NDb250cm9sPWEucHJvdG9BY2Nlc3NDb250cm9sLGkuaGVscGVycz1hLmhlbHBlcnMsaS5wYXJ0aWFscz1hLnBhcnRpYWxzLGkuZGVjb3JhdG9ycz1hLmRlY29yYXRvcnMsaS5ob29rcz1hLmhvb2tzO2Vsc2V7dmFyIG89ci5leHRlbmQoe30sZS5oZWxwZXJzLGEuaGVscGVycyk7IWZ1bmN0aW9uKHQsZSl7T2JqZWN0LmtleXModCkuZm9yRWFjaCgoZnVuY3Rpb24obil7dmFyIGk9dFtuXTt0W25dPWZ1bmN0aW9uKHQsZSl7dmFyIG49ZS5sb29rdXBQcm9wZXJ0eTtyZXR1cm4gbC53cmFwSGVscGVyKHQsKGZ1bmN0aW9uKHQpe3JldHVybiByLmV4dGVuZCh7bG9va3VwUHJvcGVydHk6bn0sdCl9KSl9KGksZSl9KSl9KG8saSksaS5oZWxwZXJzPW8sdC51c2VQYXJ0aWFsJiYoaS5wYXJ0aWFscz1pLm1lcmdlSWZOZWVkZWQoYS5wYXJ0aWFscyxlLnBhcnRpYWxzKSksKHQudXNlUGFydGlhbHx8dC51c2VEZWNvcmF0b3JzKSYmKGkuZGVjb3JhdG9ycz1yLmV4dGVuZCh7fSxlLmRlY29yYXRvcnMsYS5kZWNvcmF0b3JzKSksaS5ob29rcz17fSxpLnByb3RvQWNjZXNzQ29udHJvbD1jLmNyZWF0ZVByb3RvQWNjZXNzQ29udHJvbChhKTt2YXIgcz1hLmFsbG93Q2FsbHNUb0hlbHBlck1pc3Npbmd8fG47dS5tb3ZlSGVscGVyVG9Ib29rcyhpLFwiaGVscGVyTWlzc2luZ1wiLHMpLHUubW92ZUhlbHBlclRvSG9va3MoaSxcImJsb2NrSGVscGVyTWlzc2luZ1wiLHMpfX0sYS5fY2hpbGQ9ZnVuY3Rpb24oZSxuLHIsYSl7aWYodC51c2VCbG9ja1BhcmFtcyYmIXIpdGhyb3cgbmV3IG8uZGVmYXVsdChcIm11c3QgcGFzcyBibG9jayBwYXJhbXNcIik7aWYodC51c2VEZXB0aHMmJiFhKXRocm93IG5ldyBvLmRlZmF1bHQoXCJtdXN0IHBhc3MgcGFyZW50IGRlcHRoc1wiKTtyZXR1cm4gXyhpLGUsdFtlXSxuLDAscixhKX0sYX0sZS53cmFwUHJvZ3JhbT1fLGUucmVzb2x2ZVBhcnRpYWw9ZnVuY3Rpb24odCxlLG4pe3Q/dC5jYWxsfHxuLm5hbWV8fChuLm5hbWU9dCx0PW4ucGFydGlhbHNbdF0pOnQ9XCJAcGFydGlhbC1ibG9ja1wiPT09bi5uYW1lP24uZGF0YVtcInBhcnRpYWwtYmxvY2tcIl06bi5wYXJ0aWFsc1tuLm5hbWVdO3JldHVybiB0fSxlLmludm9rZVBhcnRpYWw9ZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4uZGF0YSYmbi5kYXRhW1wicGFydGlhbC1ibG9ja1wiXTtuLnBhcnRpYWw9ITAsbi5pZHMmJihuLmRhdGEuY29udGV4dFBhdGg9bi5pZHNbMF18fG4uZGF0YS5jb250ZXh0UGF0aCk7dmFyIGE9dm9pZCAwO24uZm4mJm4uZm4hPT1oJiZmdW5jdGlvbigpe24uZGF0YT1zLmNyZWF0ZUZyYW1lKG4uZGF0YSk7dmFyIHQ9bi5mbjthPW4uZGF0YVtcInBhcnRpYWwtYmxvY2tcIl09ZnVuY3Rpb24oZSl7dmFyIG49YXJndW1lbnRzLmxlbmd0aDw9MXx8dm9pZCAwPT09YXJndW1lbnRzWzFdP3t9OmFyZ3VtZW50c1sxXTtyZXR1cm4gbi5kYXRhPXMuY3JlYXRlRnJhbWUobi5kYXRhKSxuLmRhdGFbXCJwYXJ0aWFsLWJsb2NrXCJdPWksdChlLG4pfSx0LnBhcnRpYWxzJiYobi5wYXJ0aWFscz1yLmV4dGVuZCh7fSxuLnBhcnRpYWxzLHQucGFydGlhbHMpKX0oKTt2b2lkIDA9PT10JiZhJiYodD1hKTtpZih2b2lkIDA9PT10KXRocm93IG5ldyBvLmRlZmF1bHQoXCJUaGUgcGFydGlhbCBcIituLm5hbWUrXCIgY291bGQgbm90IGJlIGZvdW5kXCIpO2lmKHQgaW5zdGFuY2VvZiBGdW5jdGlvbilyZXR1cm4gdChlLG4pfSxlLm5vb3A9aDt2YXIgaSxyPWZ1bmN0aW9uKHQpe2lmKHQmJnQuX19lc01vZHVsZSlyZXR1cm4gdDt2YXIgZT17fTtpZihudWxsIT10KWZvcih2YXIgbiBpbiB0KU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LG4pJiYoZVtuXT10W25dKTtyZXR1cm4gZS5kZWZhdWx0PXQsZX0obigxMCkpLGE9bigxMyksbz0oaT1hKSYmaS5fX2VzTW9kdWxlP2k6e2RlZmF1bHQ6aX0scz1uKDIyKSx1PW4oMjMpLGw9big1MyksYz1uKDI1KTtmdW5jdGlvbiBfKHQsZSxuLGkscixhLG8pe2Z1bmN0aW9uIHMoZSl7dmFyIHI9YXJndW1lbnRzLmxlbmd0aDw9MXx8dm9pZCAwPT09YXJndW1lbnRzWzFdP3t9OmFyZ3VtZW50c1sxXSxzPW87cmV0dXJuIW98fGU9PW9bMF18fGU9PT10Lm51bGxDb250ZXh0JiZudWxsPT09b1swXXx8KHM9W2VdLmNvbmNhdChvKSksbih0LGUsdC5oZWxwZXJzLHQucGFydGlhbHMsci5kYXRhfHxpLGEmJltyLmJsb2NrUGFyYW1zXS5jb25jYXQoYSkscyl9cmV0dXJuKHM9ZChuLHMsdCxvLGksYSkpLnByb2dyYW09ZSxzLmRlcHRoPW8/by5sZW5ndGg6MCxzLmJsb2NrUGFyYW1zPXJ8fDAsc31mdW5jdGlvbiBoKCl7cmV0dXJuXCJcIn1mdW5jdGlvbiBwKHQsZSl7cmV0dXJuIGUmJlwicm9vdFwiaW4gZXx8KChlPWU/cy5jcmVhdGVGcmFtZShlKTp7fSkucm9vdD10KSxlfWZ1bmN0aW9uIGQodCxlLG4saSxhLG8pe2lmKHQuZGVjb3JhdG9yKXt2YXIgcz17fTtlPXQuZGVjb3JhdG9yKGUscyxuLGkmJmlbMF0sYSxvLGkpLHIuZXh0ZW5kKGUscyl9cmV0dXJuIGV9fSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZS5fX2VzTW9kdWxlPSEwLGUud3JhcEhlbHBlcj1mdW5jdGlvbih0LGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQpcmV0dXJuIHQ7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIG49YXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGgtMV07cmV0dXJuIGFyZ3VtZW50c1thcmd1bWVudHMubGVuZ3RoLTFdPWUobiksdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiOyhmdW5jdGlvbihuKXtlLl9fZXNNb2R1bGU9ITAsZS5kZWZhdWx0PWZ1bmN0aW9uKHQpe3ZhciBlPXZvaWQgMCE9PW4/bjp3aW5kb3csaT1lLkhhbmRsZWJhcnM7dC5ub0NvbmZsaWN0PWZ1bmN0aW9uKCl7cmV0dXJuIGUuSGFuZGxlYmFycz09PXQmJihlLkhhbmRsZWJhcnM9aSksdH19LHQuZXhwb3J0cz1lLmRlZmF1bHR9KS5jYWxsKHRoaXMsbigxNikpfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big3KTt0LmV4cG9ydHM9KGkuZGVmYXVsdHx8aSkudGVtcGxhdGUoezE6ZnVuY3Rpb24odCxlLG4saSxyKXtyZXR1cm5cIiA8bGk+XCIrdC5lc2NhcGVFeHByZXNzaW9uKHQubGFtYmRhKGUsZSkpK1wiPC9saT4gXCJ9LGNvbXBpbGVyOls4LFwiPj0gNC4zLjBcIl0sbWFpbjpmdW5jdGlvbih0LGUsbixpLHIpe3ZhciBhLG89dC5sYW1iZGEscz10LmVzY2FwZUV4cHJlc3Npb24sdT1udWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30sbD10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm4nPGRpdiBpZD1cIicrcyhvKG51bGwhPWU/bChlLFwiaWRcIik6ZSxlKSkrJ1wiICcrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwodSxcInNlbGVjdFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjxkaXYgXCIrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwodSxcImhlYWRcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj4gXCIrcyhvKG51bGwhPWU/bChlLFwiZGVzY1wiKTplLGUpKStcIiA8c3BhbiBcIisobnVsbCE9KGE9bChuLFwiY2xhc3NcIikuY2FsbCh1LFwidmFsXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+XCIrcyhvKG51bGwhPWU/bChlLFwidmFsXCIpOmUsZSkpKyc8L3NwYW4+PC9kaXY+PHVsIGRhdGEtaWQ9XCInK3MobyhudWxsIT1lP2woZSxcImlkXCIpOmUsZSkpKydcIj4gJysobnVsbCE9KGE9bChuLFwiZWFjaFwiKS5jYWxsKHUsbnVsbCE9ZT9sKGUsXCJzZWxlY3Rpb25zXCIpOmUse25hbWU6XCJlYWNoXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oMSxyLDApLGludmVyc2U6dC5ub29wLGRhdGE6cn0pKT9hOlwiXCIpK1wiIDwvdWw+PC9kaXY+XCJ9LHVzZURhdGE6ITB9KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNyk7dC5leHBvcnRzPShpLmRlZmF1bHR8fGkpLnRlbXBsYXRlKHtjb21waWxlcjpbOCxcIj49IDQuMy4wXCJdLG1haW46ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgYSxvPXQubGFtYmRhLHM9dC5lc2NhcGVFeHByZXNzaW9uLHU9bnVsbCE9ZT9lOnQubnVsbENvbnRleHR8fHt9LGw9dC5sb29rdXBQcm9wZXJ0eXx8ZnVuY3Rpb24odCxlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSlyZXR1cm4gdFtlXX07cmV0dXJuJzxkaXYgaWQ9XCInK3MobyhudWxsIT1lP2woZSxcImlkXCIpOmUsZSkpKydcIiAnKyhudWxsIT0oYT1sKG4sXCJjbGFzc1wiKS5jYWxsKHUsXCJyYW5nZVwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjxkaXYgXCIrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwodSxcImhlYWRcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj4gXCIrcyhvKG51bGwhPWU/bChlLFwiZGVzY1wiKTplLGUpKStcIiA8c3BhbiBcIisobnVsbCE9KGE9bChuLFwiY2xhc3NcIikuY2FsbCh1LFwidmFsXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+XCIrcyhvKG51bGwhPWU/bChlLFwidmFsXCIpOmUsZSkpK1wiPC9zcGFuPjwvZGl2PjxkaXYgXCIrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwodSxcImlucHV0LWNvbnRhaW5lclwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpKycgZGF0YS1pZD1cIicrcyhvKG51bGwhPWU/bChlLFwiaWRcIik6ZSxlKSkrJ1wiPjxkaXYgJysobnVsbCE9KGE9bChuLFwiY2xhc3NcIikuY2FsbCh1LFwicmFuZ2UtdHJhY2tcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48ZGl2IFwiKyhudWxsIT0oYT1sKG4sXCJjbGFzc1wiKS5jYWxsKHUsXCJyYW5nZS10cmFjay1iYXJcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48ZGl2IFwiKyhudWxsIT0oYT1sKG4sXCJjbGFzc1wiKS5jYWxsKHUsXCJyYW5nZS10cmFjay1wcm9ncmVzc1wiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpKycgc3R5bGU9XCJ3aWR0aDogJytzKG8obnVsbCE9ZT9sKGUsXCJwcm9ncmVzc1wiKTplLGUpKSsnJVwiPjwvZGl2PjwvZGl2PjwvZGl2PjxpbnB1dCB0eXBlPVwicmFuZ2VcIiBtaW49XCInK3MobyhudWxsIT1lP2woZSxcIm1pblwiKTplLGUpKSsnXCIgbWF4PVwiJytzKG8obnVsbCE9ZT9sKGUsXCJtYXhcIik6ZSxlKSkrJ1wiIHN0ZXA9XCInK3MobyhudWxsIT1lP2woZSxcInN0ZXBcIik6ZSxlKSkrJ1wiIHZhbHVlPVwiJytzKG8obnVsbCE9ZT9sKGUsXCJ2YWxcIik6ZSxlKSkrJ1wiPjwvZGl2PjwvZGl2Pid9LHVzZURhdGE6ITB9KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNyk7dC5leHBvcnRzPShpLmRlZmF1bHR8fGkpLnRlbXBsYXRlKHsxOmZ1bmN0aW9uKHQsZSxuLGkscil7cmV0dXJuJyA8bGkgc3R5bGU9XCJiYWNrZ3JvdW5kOiAnK3QuZXNjYXBlRXhwcmVzc2lvbih0LmxhbWJkYShlLGUpKSsnXCI+PC9saT4gJ30sY29tcGlsZXI6WzgsXCI+PSA0LjMuMFwiXSxtYWluOmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz10LmxhbWJkYSxzPXQuZXNjYXBlRXhwcmVzc2lvbix1PW51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxsPXQubG9va3VwUHJvcGVydHl8fGZ1bmN0aW9uKHQsZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpcmV0dXJuIHRbZV19O3JldHVybic8ZGl2IGlkPVwiJytzKG8obnVsbCE9ZT9sKGUsXCJpZFwiKTplLGUpKSsnXCIgJysobnVsbCE9KGE9bChuLFwiY2xhc3NcIikuY2FsbCh1LFwiY29sb3JcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48ZGl2IFwiKyhudWxsIT0oYT1sKG4sXCJjbGFzc1wiKS5jYWxsKHUsXCJoZWFkXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+IFwiK3MobyhudWxsIT1lP2woZSxcImRlc2NcIik6ZSxlKSkrXCIgPHNwYW4gXCIrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwodSxcInZhbFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpKycgc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOiAnK3MobyhudWxsIT1lP2woZSxcInZhbFwiKTplLGUpKSsnXCI+PC9zcGFuPjwvZGl2Pjx1bCBkYXRhLWlkPVwiJytzKG8obnVsbCE9ZT9sKGUsXCJpZFwiKTplLGUpKSsnXCI+ICcrKG51bGwhPShhPWwobixcImVhY2hcIikuY2FsbCh1LG51bGwhPWU/bChlLFwiY29sb3JzXCIpOmUse25hbWU6XCJlYWNoXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oMSxyLDApLGludmVyc2U6dC5ub29wLGRhdGE6cn0pKT9hOlwiXCIpK1wiIDwvdWw+PC9kaXY+XCJ9LHVzZURhdGE6ITB9KX0sZnVuY3Rpb24odCxlLG4peyhlPW4oOCkoITEpKS5wdXNoKFt0LmksXCIuX2NvbnRhaW5lciAuX2VudHJ5LWJ0bnskdzo0MHB4OyRoOjQwcHg7JGQ6ZmxleDskYjojMDAwO29wYWNpdHk6LjM7JGJyYToxMHB4OyRwbzpyZWxhdGl2ZTskejoxMDAwOyR0cjpvcGFjaXR5IC4zczskYzojZmZmOyRmczoyNXB4O2FsaWduLWl0ZW1zOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyfS5fY29udGFpbmVyIC5fZW50cnktYnRuLl9hY3RpdmUsLl9jb250YWluZXIgLl9lbnRyeS1idG46YWN0aXZle29wYWNpdHk6Ljh9XCIsXCJcIl0pLHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big3KTt0LmV4cG9ydHM9KGkuZGVmYXVsdHx8aSkudGVtcGxhdGUoe2NvbXBpbGVyOls4LFwiPj0gNC4zLjBcIl0sbWFpbjpmdW5jdGlvbih0LGUsbixpLHIpe3ZhciBhLG89bnVsbCE9ZT9lOnQubnVsbENvbnRleHR8fHt9LHM9dC5sb29rdXBQcm9wZXJ0eXx8ZnVuY3Rpb24odCxlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSlyZXR1cm4gdFtlXX07cmV0dXJuXCI8ZGl2IFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJlbnRyeS1idG5cIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48c3BhbiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiaWNvbi10b29sXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PC9zcGFuPjwvZGl2PlwifSx1c2VEYXRhOiEwfSl9LGZ1bmN0aW9uKHQsZSxuKXsoZT1uKDgpKCExKSkucHVzaChbdC5pLFwiLl9jb250YWluZXIgLl9uYXYtYmFyLWNvbnRhaW5lcnskcG86YWJzb2x1dGU7JHc6MTAwJTskaDo0MHB4OyRsOjA7JHQ6MDskejoxMDB9Ll9jb250YWluZXIgLl9uYXYtYmFyLWNvbnRhaW5lciAuX25hdi1iYXJ7JG94OmF1dG87JHdvczp0b3VjaDskYnQ6MXB4IHNvbGlkIHZhcigtLWJvcmRlcik7JGJiOjFweCBzb2xpZCB2YXIoLS1ib3JkZXIpOyR3OjEwMCU7JGg6MTAwJTskYjp2YXIoLS1kYXJrZXItYmFja2dyb3VuZCk7JGZzOjA7JHdzOm5vd3JhcH0uX2NvbnRhaW5lciAuX25hdi1iYXItY29udGFpbmVyIC5fbmF2LWJhci1pdGVteyRjdTpwb2ludGVyOyRkOmlubGluZS1ibG9jazskaDozOHB4OyRsaDozOHB4OyRwOjAgMTBweDskYzp2YXIoLS1mb3JlZ3JvdW5kKTskZnM6MTJweDskdGE6Y2VudGVyOyR0dDpjYXBpdGFsaXplOyR0cjphbGwgLjNzfS5fY29udGFpbmVyIC5fbmF2LWJhci1jb250YWluZXIgLl9uYXYtYmFyLWl0ZW06YWN0aXZleyRiOnZhcigtLWhpZ2hsaWdodCk7JGM6dmFyKC0tc2VsZWN0LWZvcmVncm91bmQpfS5fY29udGFpbmVyIC5fbmF2LWJhci1jb250YWluZXIgLl9uYXYtYmFyLWl0ZW0uX2FjdGl2ZXskYjp2YXIoLS1oaWdobGlnaHQpOyRjOnZhcigtLXNlbGVjdC1mb3JlZ3JvdW5kKX0uX2NvbnRhaW5lciAuX25hdi1iYXItY29udGFpbmVyIC5fYm90dG9tLWJhcnskdHI6bGVmdCAuM3Msd2lkdGggLjNzOyRoOjFweDskYjp2YXIoLS1hY2NlbnQpOyRwbzphYnNvbHV0ZTtib3R0b206MDskbDowfVwiLFwiXCJdKSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4peyhlPW4oOCkoITEpKS5wdXNoKFt0LmksXCIuX2Rldi10b29sc3skcG86YWJzb2x1dGU7JHc6MTAwJTskaDoxMDAlOyRsOjA7Ym90dG9tOjA7JGI6dmFyKC0tYmFja2dyb3VuZCk7JHo6NTAwOyRkOm5vbmU7JHB0OjQwcHghaW1wb3J0YW50O29wYWNpdHk6MDskdHI6b3BhY2l0eSAuM3MsaGVpZ2h0IC4zc30uX2Rldi10b29scyAuX3Rvb2xzeyRvOmF1dG87JHdvczp0b3VjaDskaDoxMDAlOyR3OjEwMCU7JHBvOnJlbGF0aXZlfS5fZGV2LXRvb2xzIC5fdG9vbHMgLl90b29seyRwbzphYnNvbHV0ZTskdzoxMDAlOyRoOjEwMCU7JGw6MDskdDowOyRvOmhpZGRlbjskZDpub25lfVwiLFwiXCJdKSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNyk7dC5leHBvcnRzPShpLmRlZmF1bHR8fGkpLnRlbXBsYXRlKHtjb21waWxlcjpbOCxcIj49IDQuMy4wXCJdLG1haW46ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgYSxvPW51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxzPXQubG9va3VwUHJvcGVydHl8fGZ1bmN0aW9uKHQsZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpcmV0dXJuIHRbZV19O3JldHVyblwiPGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiZGV2LXRvb2xzXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwibmF2LWJhci1jb250YWluZXJcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48ZGl2IFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJuYXYtYmFyXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrJz48L2Rpdj48ZGl2IGNsYXNzPVwiZXJ1ZGEtYm90dG9tLWJhclwiPjwvZGl2PjwvZGl2PjxkaXYgJysobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwidG9vbHNcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48L2Rpdj48L2Rpdj5cIn0sdXNlRGF0YTohMH0pfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz1mdW5jdGlvbih0KXtpZihBcnJheS5pc0FycmF5KHQpKXJldHVybiB0fX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXtpZihTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KHQpfHxcIltvYmplY3QgQXJndW1lbnRzXVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKXt2YXIgbj1bXSxpPSEwLHI9ITEsYT12b2lkIDA7dHJ5e2Zvcih2YXIgbyxzPXRbU3ltYm9sLml0ZXJhdG9yXSgpOyEoaT0obz1zLm5leHQoKSkuZG9uZSkmJihuLnB1c2goby52YWx1ZSksIWV8fG4ubGVuZ3RoIT09ZSk7aT0hMCk7fWNhdGNoKHQpe3I9ITAsYT10fWZpbmFsbHl7dHJ5e2l8fG51bGw9PXMucmV0dXJufHxzLnJldHVybigpfWZpbmFsbHl7aWYocil0aHJvdyBhfX1yZXR1cm4gbn19fSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz1mdW5jdGlvbigpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlXCIpfX0sZnVuY3Rpb24odCxlLG4peyhlPW4oOCkoITEpKS5wdXNoKFt0LmksXCIuX2NvbnRhaW5lciAuX2Fic3RyYWN0IC5fa2V5eyRjOnZhcigtLXZhci1jb2xvcil9Ll9jb250YWluZXIgLl9hYnN0cmFjdCAuX251bWJlcnskYzp2YXIoLS1udW1iZXItY29sb3IpfS5fY29udGFpbmVyIC5fYWJzdHJhY3QgLl9udWxseyRjOnZhcigtLW9wZXJhdG9yLWNvbG9yKX0uX2NvbnRhaW5lciAuX2Fic3RyYWN0IC5fc3RyaW5neyRjOnZhcigtLXN0cmluZy1jb2xvcil9Ll9jb250YWluZXIgLl9hYnN0cmFjdCAuX2Jvb2xlYW57JGM6dmFyKC0ta2V5d29yZC1jb2xvcil9Ll9jb250YWluZXIgLl9hYnN0cmFjdCAuX3NwZWNpYWx7JGM6dmFyKC0tb3BlcmF0b3ItY29sb3IpfVwiLFwiXCJdKSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHIsYTthPWZ1bmN0aW9uKHQpe3ZhciBlPXt9O2Z1bmN0aW9uIG4oaSl7aWYoZVtpXSlyZXR1cm4gZVtpXS5leHBvcnRzO3ZhciByPWVbaV09e2k6aSxsOiExLGV4cG9ydHM6e319O3JldHVybiB0W2ldLmNhbGwoci5leHBvcnRzLHIsci5leHBvcnRzLG4pLHIubD0hMCxyLmV4cG9ydHN9cmV0dXJuIG4ubT10LG4uYz1lLG4uZD1mdW5jdGlvbih0LGUsaSl7bi5vKHQsZSl8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUse2VudW1lcmFibGU6ITAsZ2V0Oml9KX0sbi5yPWZ1bmN0aW9uKHQpe1widW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbC50b1N0cmluZ1RhZyYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsU3ltYm9sLnRvU3RyaW5nVGFnLHt2YWx1ZTpcIk1vZHVsZVwifSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSl9LG4udD1mdW5jdGlvbih0LGUpe2lmKDEmZSYmKHQ9bih0KSksOCZlKXJldHVybiB0O2lmKDQmZSYmXCJvYmplY3RcIj09dHlwZW9mIHQmJnQmJnQuX19lc01vZHVsZSlyZXR1cm4gdDt2YXIgaT1PYmplY3QuY3JlYXRlKG51bGwpO2lmKG4ucihpKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoaSxcImRlZmF1bHRcIix7ZW51bWVyYWJsZTohMCx2YWx1ZTp0fSksMiZlJiZcInN0cmluZ1wiIT10eXBlb2YgdClmb3IodmFyIHIgaW4gdCluLmQoaSxyLGZ1bmN0aW9uKGUpe3JldHVybiB0W2VdfS5iaW5kKG51bGwscikpO3JldHVybiBpfSxuLm49ZnVuY3Rpb24odCl7dmFyIGU9dCYmdC5fX2VzTW9kdWxlP2Z1bmN0aW9uKCl7cmV0dXJuIHQuZGVmYXVsdH06ZnVuY3Rpb24oKXtyZXR1cm4gdH07cmV0dXJuIG4uZChlLFwiYVwiLGUpLGV9LG4ubz1mdW5jdGlvbih0LGUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKX0sbi5wPVwiXCIsbihuLnM9MTgpfShbLCxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaSh0KXt0aGlzLl9fcGFyZW50PXQsdGhpcy5fX2NoYXJhY3Rlcl9jb3VudD0wLHRoaXMuX19pbmRlbnRfY291bnQ9LTEsdGhpcy5fX2FsaWdubWVudF9jb3VudD0wLHRoaXMuX193cmFwX3BvaW50X2luZGV4PTAsdGhpcy5fX3dyYXBfcG9pbnRfY2hhcmFjdGVyX2NvdW50PTAsdGhpcy5fX3dyYXBfcG9pbnRfaW5kZW50X2NvdW50PS0xLHRoaXMuX193cmFwX3BvaW50X2FsaWdubWVudF9jb3VudD0wLHRoaXMuX19pdGVtcz1bXX1mdW5jdGlvbiByKHQsZSl7dGhpcy5fX2NhY2hlPVtcIlwiXSx0aGlzLl9faW5kZW50X3NpemU9dC5pbmRlbnRfc2l6ZSx0aGlzLl9faW5kZW50X3N0cmluZz10LmluZGVudF9jaGFyLHQuaW5kZW50X3dpdGhfdGFic3x8KHRoaXMuX19pbmRlbnRfc3RyaW5nPW5ldyBBcnJheSh0LmluZGVudF9zaXplKzEpLmpvaW4odC5pbmRlbnRfY2hhcikpLGU9ZXx8XCJcIix0LmluZGVudF9sZXZlbD4wJiYoZT1uZXcgQXJyYXkodC5pbmRlbnRfbGV2ZWwrMSkuam9pbih0aGlzLl9faW5kZW50X3N0cmluZykpLHRoaXMuX19iYXNlX3N0cmluZz1lLHRoaXMuX19iYXNlX3N0cmluZ19sZW5ndGg9ZS5sZW5ndGh9ZnVuY3Rpb24gYSh0LGUpe3RoaXMuX19pbmRlbnRfY2FjaGU9bmV3IHIodCxlKSx0aGlzLnJhdz0hMSx0aGlzLl9lbmRfd2l0aF9uZXdsaW5lPXQuZW5kX3dpdGhfbmV3bGluZSx0aGlzLmluZGVudF9zaXplPXQuaW5kZW50X3NpemUsdGhpcy53cmFwX2xpbmVfbGVuZ3RoPXQud3JhcF9saW5lX2xlbmd0aCx0aGlzLmluZGVudF9lbXB0eV9saW5lcz10LmluZGVudF9lbXB0eV9saW5lcyx0aGlzLl9fbGluZXM9W10sdGhpcy5wcmV2aW91c19saW5lPW51bGwsdGhpcy5jdXJyZW50X2xpbmU9bnVsbCx0aGlzLm5leHRfbGluZT1uZXcgaSh0aGlzKSx0aGlzLnNwYWNlX2JlZm9yZV90b2tlbj0hMSx0aGlzLm5vbl9icmVha2luZ19zcGFjZT0hMSx0aGlzLnByZXZpb3VzX3Rva2VuX3dyYXBwZWQ9ITEsdGhpcy5fX2FkZF9vdXRwdXRsaW5lKCl9aS5wcm90b3R5cGUuY2xvbmVfZW1wdHk9ZnVuY3Rpb24oKXt2YXIgdD1uZXcgaSh0aGlzLl9fcGFyZW50KTtyZXR1cm4gdC5zZXRfaW5kZW50KHRoaXMuX19pbmRlbnRfY291bnQsdGhpcy5fX2FsaWdubWVudF9jb3VudCksdH0saS5wcm90b3R5cGUuaXRlbT1mdW5jdGlvbih0KXtyZXR1cm4gdDwwP3RoaXMuX19pdGVtc1t0aGlzLl9faXRlbXMubGVuZ3RoK3RdOnRoaXMuX19pdGVtc1t0XX0saS5wcm90b3R5cGUuaGFzX21hdGNoPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLl9faXRlbXMubGVuZ3RoLTE7ZT49MDtlLS0paWYodGhpcy5fX2l0ZW1zW2VdLm1hdGNoKHQpKXJldHVybiEwO3JldHVybiExfSxpLnByb3RvdHlwZS5zZXRfaW5kZW50PWZ1bmN0aW9uKHQsZSl7dGhpcy5pc19lbXB0eSgpJiYodGhpcy5fX2luZGVudF9jb3VudD10fHwwLHRoaXMuX19hbGlnbm1lbnRfY291bnQ9ZXx8MCx0aGlzLl9fY2hhcmFjdGVyX2NvdW50PXRoaXMuX19wYXJlbnQuZ2V0X2luZGVudF9zaXplKHRoaXMuX19pbmRlbnRfY291bnQsdGhpcy5fX2FsaWdubWVudF9jb3VudCkpfSxpLnByb3RvdHlwZS5fc2V0X3dyYXBfcG9pbnQ9ZnVuY3Rpb24oKXt0aGlzLl9fcGFyZW50LndyYXBfbGluZV9sZW5ndGgmJih0aGlzLl9fd3JhcF9wb2ludF9pbmRleD10aGlzLl9faXRlbXMubGVuZ3RoLHRoaXMuX193cmFwX3BvaW50X2NoYXJhY3Rlcl9jb3VudD10aGlzLl9fY2hhcmFjdGVyX2NvdW50LHRoaXMuX193cmFwX3BvaW50X2luZGVudF9jb3VudD10aGlzLl9fcGFyZW50Lm5leHRfbGluZS5fX2luZGVudF9jb3VudCx0aGlzLl9fd3JhcF9wb2ludF9hbGlnbm1lbnRfY291bnQ9dGhpcy5fX3BhcmVudC5uZXh0X2xpbmUuX19hbGlnbm1lbnRfY291bnQpfSxpLnByb3RvdHlwZS5fc2hvdWxkX3dyYXA9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fX3dyYXBfcG9pbnRfaW5kZXgmJnRoaXMuX19jaGFyYWN0ZXJfY291bnQ+dGhpcy5fX3BhcmVudC53cmFwX2xpbmVfbGVuZ3RoJiZ0aGlzLl9fd3JhcF9wb2ludF9jaGFyYWN0ZXJfY291bnQ+dGhpcy5fX3BhcmVudC5uZXh0X2xpbmUuX19jaGFyYWN0ZXJfY291bnR9LGkucHJvdG90eXBlLl9hbGxvd193cmFwPWZ1bmN0aW9uKCl7aWYodGhpcy5fc2hvdWxkX3dyYXAoKSl7dGhpcy5fX3BhcmVudC5hZGRfbmV3X2xpbmUoKTt2YXIgdD10aGlzLl9fcGFyZW50LmN1cnJlbnRfbGluZTtyZXR1cm4gdC5zZXRfaW5kZW50KHRoaXMuX193cmFwX3BvaW50X2luZGVudF9jb3VudCx0aGlzLl9fd3JhcF9wb2ludF9hbGlnbm1lbnRfY291bnQpLHQuX19pdGVtcz10aGlzLl9faXRlbXMuc2xpY2UodGhpcy5fX3dyYXBfcG9pbnRfaW5kZXgpLHRoaXMuX19pdGVtcz10aGlzLl9faXRlbXMuc2xpY2UoMCx0aGlzLl9fd3JhcF9wb2ludF9pbmRleCksdC5fX2NoYXJhY3Rlcl9jb3VudCs9dGhpcy5fX2NoYXJhY3Rlcl9jb3VudC10aGlzLl9fd3JhcF9wb2ludF9jaGFyYWN0ZXJfY291bnQsdGhpcy5fX2NoYXJhY3Rlcl9jb3VudD10aGlzLl9fd3JhcF9wb2ludF9jaGFyYWN0ZXJfY291bnQsXCIgXCI9PT10Ll9faXRlbXNbMF0mJih0Ll9faXRlbXMuc3BsaWNlKDAsMSksdC5fX2NoYXJhY3Rlcl9jb3VudC09MSksITB9cmV0dXJuITF9LGkucHJvdG90eXBlLmlzX2VtcHR5PWZ1bmN0aW9uKCl7cmV0dXJuIDA9PT10aGlzLl9faXRlbXMubGVuZ3RofSxpLnByb3RvdHlwZS5sYXN0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXNfZW1wdHkoKT9udWxsOnRoaXMuX19pdGVtc1t0aGlzLl9faXRlbXMubGVuZ3RoLTFdfSxpLnByb3RvdHlwZS5wdXNoPWZ1bmN0aW9uKHQpe3RoaXMuX19pdGVtcy5wdXNoKHQpO3ZhciBlPXQubGFzdEluZGV4T2YoXCJcXG5cIik7LTEhPT1lP3RoaXMuX19jaGFyYWN0ZXJfY291bnQ9dC5sZW5ndGgtZTp0aGlzLl9fY2hhcmFjdGVyX2NvdW50Kz10Lmxlbmd0aH0saS5wcm90b3R5cGUucG9wPWZ1bmN0aW9uKCl7dmFyIHQ9bnVsbDtyZXR1cm4gdGhpcy5pc19lbXB0eSgpfHwodD10aGlzLl9faXRlbXMucG9wKCksdGhpcy5fX2NoYXJhY3Rlcl9jb3VudC09dC5sZW5ndGgpLHR9LGkucHJvdG90eXBlLl9yZW1vdmVfaW5kZW50PWZ1bmN0aW9uKCl7dGhpcy5fX2luZGVudF9jb3VudD4wJiYodGhpcy5fX2luZGVudF9jb3VudC09MSx0aGlzLl9fY2hhcmFjdGVyX2NvdW50LT10aGlzLl9fcGFyZW50LmluZGVudF9zaXplKX0saS5wcm90b3R5cGUuX3JlbW92ZV93cmFwX2luZGVudD1mdW5jdGlvbigpe3RoaXMuX193cmFwX3BvaW50X2luZGVudF9jb3VudD4wJiYodGhpcy5fX3dyYXBfcG9pbnRfaW5kZW50X2NvdW50LT0xKX0saS5wcm90b3R5cGUudHJpbT1mdW5jdGlvbigpe2Zvcig7XCIgXCI9PT10aGlzLmxhc3QoKTspdGhpcy5fX2l0ZW1zLnBvcCgpLHRoaXMuX19jaGFyYWN0ZXJfY291bnQtPTF9LGkucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7dmFyIHQ9XCJcIjtyZXR1cm4gdGhpcy5pc19lbXB0eSgpP3RoaXMuX19wYXJlbnQuaW5kZW50X2VtcHR5X2xpbmVzJiYodD10aGlzLl9fcGFyZW50LmdldF9pbmRlbnRfc3RyaW5nKHRoaXMuX19pbmRlbnRfY291bnQpKToodD10aGlzLl9fcGFyZW50LmdldF9pbmRlbnRfc3RyaW5nKHRoaXMuX19pbmRlbnRfY291bnQsdGhpcy5fX2FsaWdubWVudF9jb3VudCksdCs9dGhpcy5fX2l0ZW1zLmpvaW4oXCJcIikpLHR9LHIucHJvdG90eXBlLmdldF9pbmRlbnRfc2l6ZT1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuX19iYXNlX3N0cmluZ19sZW5ndGg7cmV0dXJuIGU9ZXx8MCx0PDAmJihuPTApLG4rPXQqdGhpcy5fX2luZGVudF9zaXplLG4rPWV9LHIucHJvdG90eXBlLmdldF9pbmRlbnRfc3RyaW5nPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5fX2Jhc2Vfc3RyaW5nO3JldHVybiBlPWV8fDAsdDwwJiYodD0wLG49XCJcIiksZSs9dCp0aGlzLl9faW5kZW50X3NpemUsdGhpcy5fX2Vuc3VyZV9jYWNoZShlKSxuKz10aGlzLl9fY2FjaGVbZV19LHIucHJvdG90eXBlLl9fZW5zdXJlX2NhY2hlPWZ1bmN0aW9uKHQpe2Zvcig7dD49dGhpcy5fX2NhY2hlLmxlbmd0aDspdGhpcy5fX2FkZF9jb2x1bW4oKX0sci5wcm90b3R5cGUuX19hZGRfY29sdW1uPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fX2NhY2hlLmxlbmd0aCxlPTAsbj1cIlwiO3RoaXMuX19pbmRlbnRfc2l6ZSYmdD49dGhpcy5fX2luZGVudF9zaXplJiYodC09KGU9TWF0aC5mbG9vcih0L3RoaXMuX19pbmRlbnRfc2l6ZSkpKnRoaXMuX19pbmRlbnRfc2l6ZSxuPW5ldyBBcnJheShlKzEpLmpvaW4odGhpcy5fX2luZGVudF9zdHJpbmcpKSx0JiYobis9bmV3IEFycmF5KHQrMSkuam9pbihcIiBcIikpLHRoaXMuX19jYWNoZS5wdXNoKG4pfSxhLnByb3RvdHlwZS5fX2FkZF9vdXRwdXRsaW5lPWZ1bmN0aW9uKCl7dGhpcy5wcmV2aW91c19saW5lPXRoaXMuY3VycmVudF9saW5lLHRoaXMuY3VycmVudF9saW5lPXRoaXMubmV4dF9saW5lLmNsb25lX2VtcHR5KCksdGhpcy5fX2xpbmVzLnB1c2godGhpcy5jdXJyZW50X2xpbmUpfSxhLnByb3RvdHlwZS5nZXRfbGluZV9udW1iZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fX2xpbmVzLmxlbmd0aH0sYS5wcm90b3R5cGUuZ2V0X2luZGVudF9zdHJpbmc9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5fX2luZGVudF9jYWNoZS5nZXRfaW5kZW50X3N0cmluZyh0LGUpfSxhLnByb3RvdHlwZS5nZXRfaW5kZW50X3NpemU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5fX2luZGVudF9jYWNoZS5nZXRfaW5kZW50X3NpemUodCxlKX0sYS5wcm90b3R5cGUuaXNfZW1wdHk9ZnVuY3Rpb24oKXtyZXR1cm4hdGhpcy5wcmV2aW91c19saW5lJiZ0aGlzLmN1cnJlbnRfbGluZS5pc19lbXB0eSgpfSxhLnByb3RvdHlwZS5hZGRfbmV3X2xpbmU9ZnVuY3Rpb24odCl7cmV0dXJuISh0aGlzLmlzX2VtcHR5KCl8fCF0JiZ0aGlzLmp1c3RfYWRkZWRfbmV3bGluZSgpfHwodGhpcy5yYXd8fHRoaXMuX19hZGRfb3V0cHV0bGluZSgpLDApKX0sYS5wcm90b3R5cGUuZ2V0X2NvZGU9ZnVuY3Rpb24odCl7dGhpcy50cmltKCEwKTt2YXIgZT10aGlzLmN1cnJlbnRfbGluZS5wb3AoKTtlJiYoXCJcXG5cIj09PWVbZS5sZW5ndGgtMV0mJihlPWUucmVwbGFjZSgvXFxuKyQvZyxcIlwiKSksdGhpcy5jdXJyZW50X2xpbmUucHVzaChlKSksdGhpcy5fZW5kX3dpdGhfbmV3bGluZSYmdGhpcy5fX2FkZF9vdXRwdXRsaW5lKCk7dmFyIG49dGhpcy5fX2xpbmVzLmpvaW4oXCJcXG5cIik7cmV0dXJuXCJcXG5cIiE9PXQmJihuPW4ucmVwbGFjZSgvW1xcbl0vZyx0KSksbn0sYS5wcm90b3R5cGUuc2V0X3dyYXBfcG9pbnQ9ZnVuY3Rpb24oKXt0aGlzLmN1cnJlbnRfbGluZS5fc2V0X3dyYXBfcG9pbnQoKX0sYS5wcm90b3R5cGUuc2V0X2luZGVudD1mdW5jdGlvbih0LGUpe3JldHVybiB0PXR8fDAsZT1lfHwwLHRoaXMubmV4dF9saW5lLnNldF9pbmRlbnQodCxlKSx0aGlzLl9fbGluZXMubGVuZ3RoPjE/KHRoaXMuY3VycmVudF9saW5lLnNldF9pbmRlbnQodCxlKSwhMCk6KHRoaXMuY3VycmVudF9saW5lLnNldF9pbmRlbnQoKSwhMSl9LGEucHJvdG90eXBlLmFkZF9yYXdfdG9rZW49ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTA7ZTx0Lm5ld2xpbmVzO2UrKyl0aGlzLl9fYWRkX291dHB1dGxpbmUoKTt0aGlzLmN1cnJlbnRfbGluZS5zZXRfaW5kZW50KC0xKSx0aGlzLmN1cnJlbnRfbGluZS5wdXNoKHQud2hpdGVzcGFjZV9iZWZvcmUpLHRoaXMuY3VycmVudF9saW5lLnB1c2godC50ZXh0KSx0aGlzLnNwYWNlX2JlZm9yZV90b2tlbj0hMSx0aGlzLm5vbl9icmVha2luZ19zcGFjZT0hMSx0aGlzLnByZXZpb3VzX3Rva2VuX3dyYXBwZWQ9ITF9LGEucHJvdG90eXBlLmFkZF90b2tlbj1mdW5jdGlvbih0KXt0aGlzLl9fYWRkX3NwYWNlX2JlZm9yZV90b2tlbigpLHRoaXMuY3VycmVudF9saW5lLnB1c2godCksdGhpcy5zcGFjZV9iZWZvcmVfdG9rZW49ITEsdGhpcy5ub25fYnJlYWtpbmdfc3BhY2U9ITEsdGhpcy5wcmV2aW91c190b2tlbl93cmFwcGVkPXRoaXMuY3VycmVudF9saW5lLl9hbGxvd193cmFwKCl9LGEucHJvdG90eXBlLl9fYWRkX3NwYWNlX2JlZm9yZV90b2tlbj1mdW5jdGlvbigpe3RoaXMuc3BhY2VfYmVmb3JlX3Rva2VuJiYhdGhpcy5qdXN0X2FkZGVkX25ld2xpbmUoKSYmKHRoaXMubm9uX2JyZWFraW5nX3NwYWNlfHx0aGlzLnNldF93cmFwX3BvaW50KCksdGhpcy5jdXJyZW50X2xpbmUucHVzaChcIiBcIikpfSxhLnByb3RvdHlwZS5yZW1vdmVfaW5kZW50PWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLl9fbGluZXMubGVuZ3RoO3Q8ZTspdGhpcy5fX2xpbmVzW3RdLl9yZW1vdmVfaW5kZW50KCksdCsrO3RoaXMuY3VycmVudF9saW5lLl9yZW1vdmVfd3JhcF9pbmRlbnQoKX0sYS5wcm90b3R5cGUudHJpbT1mdW5jdGlvbih0KXtmb3IodD12b2lkIDAhPT10JiZ0LHRoaXMuY3VycmVudF9saW5lLnRyaW0oKTt0JiZ0aGlzLl9fbGluZXMubGVuZ3RoPjEmJnRoaXMuY3VycmVudF9saW5lLmlzX2VtcHR5KCk7KXRoaXMuX19saW5lcy5wb3AoKSx0aGlzLmN1cnJlbnRfbGluZT10aGlzLl9fbGluZXNbdGhpcy5fX2xpbmVzLmxlbmd0aC0xXSx0aGlzLmN1cnJlbnRfbGluZS50cmltKCk7dGhpcy5wcmV2aW91c19saW5lPXRoaXMuX19saW5lcy5sZW5ndGg+MT90aGlzLl9fbGluZXNbdGhpcy5fX2xpbmVzLmxlbmd0aC0yXTpudWxsfSxhLnByb3RvdHlwZS5qdXN0X2FkZGVkX25ld2xpbmU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jdXJyZW50X2xpbmUuaXNfZW1wdHkoKX0sYS5wcm90b3R5cGUuanVzdF9hZGRlZF9ibGFua2xpbmU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pc19lbXB0eSgpfHx0aGlzLmN1cnJlbnRfbGluZS5pc19lbXB0eSgpJiZ0aGlzLnByZXZpb3VzX2xpbmUuaXNfZW1wdHkoKX0sYS5wcm90b3R5cGUuZW5zdXJlX2VtcHR5X2xpbmVfYWJvdmU9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49dGhpcy5fX2xpbmVzLmxlbmd0aC0yO24+PTA7KXt2YXIgcj10aGlzLl9fbGluZXNbbl07aWYoci5pc19lbXB0eSgpKWJyZWFrO2lmKDAhPT1yLml0ZW0oMCkuaW5kZXhPZih0KSYmci5pdGVtKC0xKSE9PWUpe3RoaXMuX19saW5lcy5zcGxpY2UobisxLDAsbmV3IGkodGhpcykpLHRoaXMucHJldmlvdXNfbGluZT10aGlzLl9fbGluZXNbdGhpcy5fX2xpbmVzLmxlbmd0aC0yXTticmVha31uLS19fSx0LmV4cG9ydHMuT3V0cHV0PWF9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt0LmV4cG9ydHMuVG9rZW49ZnVuY3Rpb24odCxlLG4saSl7dGhpcy50eXBlPXQsdGhpcy50ZXh0PWUsdGhpcy5jb21tZW50c19iZWZvcmU9bnVsbCx0aGlzLm5ld2xpbmVzPW58fDAsdGhpcy53aGl0ZXNwYWNlX2JlZm9yZT1pfHxcIlwiLHRoaXMucGFyZW50PW51bGwsdGhpcy5uZXh0PW51bGwsdGhpcy5wcmV2aW91cz1udWxsLHRoaXMub3BlbmVkPW51bGwsdGhpcy5jbG9zZWQ9bnVsbCx0aGlzLmRpcmVjdGl2ZXM9bnVsbH19LCwsZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGkodCxlKXt0aGlzLnJhd19vcHRpb25zPXIodCxlKSx0aGlzLmRpc2FibGVkPXRoaXMuX2dldF9ib29sZWFuKFwiZGlzYWJsZWRcIiksdGhpcy5lb2w9dGhpcy5fZ2V0X2NoYXJhY3RlcnMoXCJlb2xcIixcImF1dG9cIiksdGhpcy5lbmRfd2l0aF9uZXdsaW5lPXRoaXMuX2dldF9ib29sZWFuKFwiZW5kX3dpdGhfbmV3bGluZVwiKSx0aGlzLmluZGVudF9zaXplPXRoaXMuX2dldF9udW1iZXIoXCJpbmRlbnRfc2l6ZVwiLDQpLHRoaXMuaW5kZW50X2NoYXI9dGhpcy5fZ2V0X2NoYXJhY3RlcnMoXCJpbmRlbnRfY2hhclwiLFwiIFwiKSx0aGlzLmluZGVudF9sZXZlbD10aGlzLl9nZXRfbnVtYmVyKFwiaW5kZW50X2xldmVsXCIpLHRoaXMucHJlc2VydmVfbmV3bGluZXM9dGhpcy5fZ2V0X2Jvb2xlYW4oXCJwcmVzZXJ2ZV9uZXdsaW5lc1wiLCEwKSx0aGlzLm1heF9wcmVzZXJ2ZV9uZXdsaW5lcz10aGlzLl9nZXRfbnVtYmVyKFwibWF4X3ByZXNlcnZlX25ld2xpbmVzXCIsMzI3ODYpLHRoaXMucHJlc2VydmVfbmV3bGluZXN8fCh0aGlzLm1heF9wcmVzZXJ2ZV9uZXdsaW5lcz0wKSx0aGlzLmluZGVudF93aXRoX3RhYnM9dGhpcy5fZ2V0X2Jvb2xlYW4oXCJpbmRlbnRfd2l0aF90YWJzXCIsXCJcXHRcIj09PXRoaXMuaW5kZW50X2NoYXIpLHRoaXMuaW5kZW50X3dpdGhfdGFicyYmKHRoaXMuaW5kZW50X2NoYXI9XCJcXHRcIiwxPT09dGhpcy5pbmRlbnRfc2l6ZSYmKHRoaXMuaW5kZW50X3NpemU9NCkpLHRoaXMud3JhcF9saW5lX2xlbmd0aD10aGlzLl9nZXRfbnVtYmVyKFwid3JhcF9saW5lX2xlbmd0aFwiLHRoaXMuX2dldF9udW1iZXIoXCJtYXhfY2hhclwiKSksdGhpcy5pbmRlbnRfZW1wdHlfbGluZXM9dGhpcy5fZ2V0X2Jvb2xlYW4oXCJpbmRlbnRfZW1wdHlfbGluZXNcIiksdGhpcy50ZW1wbGF0aW5nPXRoaXMuX2dldF9zZWxlY3Rpb25fbGlzdChcInRlbXBsYXRpbmdcIixbXCJhdXRvXCIsXCJub25lXCIsXCJkamFuZ29cIixcImVyYlwiLFwiaGFuZGxlYmFyc1wiLFwicGhwXCJdLFtcImF1dG9cIl0pfWZ1bmN0aW9uIHIodCxlKXt2YXIgbixpPXt9O2ZvcihuIGluIHQ9YSh0KSluIT09ZSYmKGlbbl09dFtuXSk7aWYoZSYmdFtlXSlmb3IobiBpbiB0W2VdKWlbbl09dFtlXVtuXTtyZXR1cm4gaX1mdW5jdGlvbiBhKHQpe3ZhciBlLG49e307Zm9yKGUgaW4gdCluW2UucmVwbGFjZSgvLS9nLFwiX1wiKV09dFtlXTtyZXR1cm4gbn1pLnByb3RvdHlwZS5fZ2V0X2FycmF5PWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5yYXdfb3B0aW9uc1t0XSxpPWV8fFtdO3JldHVyblwib2JqZWN0XCI9PXR5cGVvZiBuP251bGwhPT1uJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBuLmNvbmNhdCYmKGk9bi5jb25jYXQoKSk6XCJzdHJpbmdcIj09dHlwZW9mIG4mJihpPW4uc3BsaXQoL1teYS16QS1aMC05X1xcL1xcLV0rLykpLGl9LGkucHJvdG90eXBlLl9nZXRfYm9vbGVhbj1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMucmF3X29wdGlvbnNbdF07cmV0dXJuIHZvaWQgMD09PW4/ISFlOiEhbn0saS5wcm90b3R5cGUuX2dldF9jaGFyYWN0ZXJzPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5yYXdfb3B0aW9uc1t0XSxpPWV8fFwiXCI7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIG4mJihpPW4ucmVwbGFjZSgvXFxcXHIvLFwiXFxyXCIpLnJlcGxhY2UoL1xcXFxuLyxcIlxcblwiKS5yZXBsYWNlKC9cXFxcdC8sXCJcXHRcIikpLGl9LGkucHJvdG90eXBlLl9nZXRfbnVtYmVyPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5yYXdfb3B0aW9uc1t0XTtlPXBhcnNlSW50KGUsMTApLGlzTmFOKGUpJiYoZT0wKTt2YXIgaT1wYXJzZUludChuLDEwKTtyZXR1cm4gaXNOYU4oaSkmJihpPWUpLGl9LGkucHJvdG90eXBlLl9nZXRfc2VsZWN0aW9uPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaT10aGlzLl9nZXRfc2VsZWN0aW9uX2xpc3QodCxlLG4pO2lmKDEhPT1pLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIE9wdGlvbiBWYWx1ZTogVGhlIG9wdGlvbiAnXCIrdCtcIicgY2FuIG9ubHkgYmUgb25lIG9mIHRoZSBmb2xsb3dpbmcgdmFsdWVzOlxcblwiK2UrXCJcXG5Zb3UgcGFzc2VkIGluOiAnXCIrdGhpcy5yYXdfb3B0aW9uc1t0XStcIidcIik7cmV0dXJuIGlbMF19LGkucHJvdG90eXBlLl9nZXRfc2VsZWN0aW9uX2xpc3Q9ZnVuY3Rpb24odCxlLG4pe2lmKCFlfHwwPT09ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiU2VsZWN0aW9uIGxpc3QgY2Fubm90IGJlIGVtcHR5LlwiKTtpZihuPW58fFtlWzBdXSwhdGhpcy5faXNfdmFsaWRfc2VsZWN0aW9uKG4sZSkpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBEZWZhdWx0IFZhbHVlIVwiKTt2YXIgaT10aGlzLl9nZXRfYXJyYXkodCxuKTtpZighdGhpcy5faXNfdmFsaWRfc2VsZWN0aW9uKGksZSkpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBPcHRpb24gVmFsdWU6IFRoZSBvcHRpb24gJ1wiK3QrXCInIGNhbiBjb250YWluIG9ubHkgdGhlIGZvbGxvd2luZyB2YWx1ZXM6XFxuXCIrZStcIlxcbllvdSBwYXNzZWQgaW46ICdcIit0aGlzLnJhd19vcHRpb25zW3RdK1wiJ1wiKTtyZXR1cm4gaX0saS5wcm90b3R5cGUuX2lzX3ZhbGlkX3NlbGVjdGlvbj1mdW5jdGlvbih0LGUpe3JldHVybiB0Lmxlbmd0aCYmZS5sZW5ndGgmJiF0LnNvbWUoKGZ1bmN0aW9uKHQpe3JldHVybi0xPT09ZS5pbmRleE9mKHQpfSkpfSx0LmV4cG9ydHMuT3B0aW9ucz1pLHQuZXhwb3J0cy5ub3JtYWxpemVPcHRzPWEsdC5leHBvcnRzLm1lcmdlT3B0cz1yfSwsZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBpPVJlZ0V4cC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkoXCJzdGlja3lcIik7ZnVuY3Rpb24gcih0KXt0aGlzLl9faW5wdXQ9dHx8XCJcIix0aGlzLl9faW5wdXRfbGVuZ3RoPXRoaXMuX19pbnB1dC5sZW5ndGgsdGhpcy5fX3Bvc2l0aW9uPTB9ci5wcm90b3R5cGUucmVzdGFydD1mdW5jdGlvbigpe3RoaXMuX19wb3NpdGlvbj0wfSxyLnByb3RvdHlwZS5iYWNrPWZ1bmN0aW9uKCl7dGhpcy5fX3Bvc2l0aW9uPjAmJih0aGlzLl9fcG9zaXRpb24tPTEpfSxyLnByb3RvdHlwZS5oYXNOZXh0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX19wb3NpdGlvbjx0aGlzLl9faW5wdXRfbGVuZ3RofSxyLnByb3RvdHlwZS5uZXh0PWZ1bmN0aW9uKCl7dmFyIHQ9bnVsbDtyZXR1cm4gdGhpcy5oYXNOZXh0KCkmJih0PXRoaXMuX19pbnB1dC5jaGFyQXQodGhpcy5fX3Bvc2l0aW9uKSx0aGlzLl9fcG9zaXRpb24rPTEpLHR9LHIucHJvdG90eXBlLnBlZWs9ZnVuY3Rpb24odCl7dmFyIGU9bnVsbDtyZXR1cm4gdD10fHwwLCh0Kz10aGlzLl9fcG9zaXRpb24pPj0wJiZ0PHRoaXMuX19pbnB1dF9sZW5ndGgmJihlPXRoaXMuX19pbnB1dC5jaGFyQXQodCkpLGV9LHIucHJvdG90eXBlLl9fbWF0Y2g9ZnVuY3Rpb24odCxlKXt0Lmxhc3RJbmRleD1lO3ZhciBuPXQuZXhlYyh0aGlzLl9faW5wdXQpO3JldHVybiFufHxpJiZ0LnN0aWNreXx8bi5pbmRleCE9PWUmJihuPW51bGwpLG59LHIucHJvdG90eXBlLnRlc3Q9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZT1lfHwwLChlKz10aGlzLl9fcG9zaXRpb24pPj0wJiZlPHRoaXMuX19pbnB1dF9sZW5ndGgmJiEhdGhpcy5fX21hdGNoKHQsZSl9LHIucHJvdG90eXBlLnRlc3RDaGFyPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5wZWVrKGUpO3JldHVybiB0Lmxhc3RJbmRleD0wLG51bGwhPT1uJiZ0LnRlc3Qobil9LHIucHJvdG90eXBlLm1hdGNoPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX19tYXRjaCh0LHRoaXMuX19wb3NpdGlvbik7cmV0dXJuIGU/dGhpcy5fX3Bvc2l0aW9uKz1lWzBdLmxlbmd0aDplPW51bGwsZX0sci5wcm90b3R5cGUucmVhZD1mdW5jdGlvbih0LGUsbil7dmFyIGkscj1cIlwiO3JldHVybiB0JiYoaT10aGlzLm1hdGNoKHQpKSYmKHIrPWlbMF0pLCFlfHwhaSYmdHx8KHIrPXRoaXMucmVhZFVudGlsKGUsbikpLHJ9LHIucHJvdG90eXBlLnJlYWRVbnRpbD1mdW5jdGlvbih0LGUpe3ZhciBuLGk9dGhpcy5fX3Bvc2l0aW9uO3QubGFzdEluZGV4PXRoaXMuX19wb3NpdGlvbjt2YXIgcj10LmV4ZWModGhpcy5fX2lucHV0KTtyZXR1cm4gcj8oaT1yLmluZGV4LGUmJihpKz1yWzBdLmxlbmd0aCkpOmk9dGhpcy5fX2lucHV0X2xlbmd0aCxuPXRoaXMuX19pbnB1dC5zdWJzdHJpbmcodGhpcy5fX3Bvc2l0aW9uLGkpLHRoaXMuX19wb3NpdGlvbj1pLG59LHIucHJvdG90eXBlLnJlYWRVbnRpbEFmdGVyPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnJlYWRVbnRpbCh0LCEwKX0sci5wcm90b3R5cGUuZ2V0X3JlZ2V4cD1mdW5jdGlvbih0LGUpe3ZhciBuPW51bGwscj1cImdcIjtyZXR1cm4gZSYmaSYmKHI9XCJ5XCIpLFwic3RyaW5nXCI9PXR5cGVvZiB0JiZcIlwiIT09dD9uPW5ldyBSZWdFeHAodCxyKTp0JiYobj1uZXcgUmVnRXhwKHQuc291cmNlLHIpKSxufSxyLnByb3RvdHlwZS5nZXRfbGl0ZXJhbF9yZWdleHA9ZnVuY3Rpb24odCl7cmV0dXJuIFJlZ0V4cCh0LnJlcGxhY2UoL1stXFwvXFxcXF4kKis/LigpfFtcXF17fV0vZyxcIlxcXFwkJlwiKSl9LHIucHJvdG90eXBlLnBlZWtVbnRpbEFmdGVyPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX19wb3NpdGlvbixuPXRoaXMucmVhZFVudGlsQWZ0ZXIodCk7cmV0dXJuIHRoaXMuX19wb3NpdGlvbj1lLG59LHIucHJvdG90eXBlLmxvb2tCYWNrPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX19wb3NpdGlvbi0xO3JldHVybiBlPj10Lmxlbmd0aCYmdGhpcy5fX2lucHV0LnN1YnN0cmluZyhlLXQubGVuZ3RoLGUpLnRvTG93ZXJDYXNlKCk9PT10fSx0LmV4cG9ydHMuSW5wdXRTY2FubmVyPXJ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1uKDgpLklucHV0U2Nhbm5lcixyPW4oMykuVG9rZW4sYT1uKDEwKS5Ub2tlblN0cmVhbSxvPW4oMTEpLldoaXRlc3BhY2VQYXR0ZXJuLHM9e1NUQVJUOlwiVEtfU1RBUlRcIixSQVc6XCJUS19SQVdcIixFT0Y6XCJUS19FT0ZcIn0sdT1mdW5jdGlvbih0LGUpe3RoaXMuX2lucHV0PW5ldyBpKHQpLHRoaXMuX29wdGlvbnM9ZXx8e30sdGhpcy5fX3Rva2Vucz1udWxsLHRoaXMuX3BhdHRlcm5zPXt9LHRoaXMuX3BhdHRlcm5zLndoaXRlc3BhY2U9bmV3IG8odGhpcy5faW5wdXQpfTt1LnByb3RvdHlwZS50b2tlbml6ZT1mdW5jdGlvbigpe3ZhciB0O3RoaXMuX2lucHV0LnJlc3RhcnQoKSx0aGlzLl9fdG9rZW5zPW5ldyBhLHRoaXMuX3Jlc2V0KCk7Zm9yKHZhciBlPW5ldyByKHMuU1RBUlQsXCJcIiksbj1udWxsLGk9W10sbz1uZXcgYTtlLnR5cGUhPT1zLkVPRjspe2Zvcih0PXRoaXMuX2dldF9uZXh0X3Rva2VuKGUsbik7dGhpcy5faXNfY29tbWVudCh0KTspby5hZGQodCksdD10aGlzLl9nZXRfbmV4dF90b2tlbihlLG4pO28uaXNFbXB0eSgpfHwodC5jb21tZW50c19iZWZvcmU9byxvPW5ldyBhKSx0LnBhcmVudD1uLHRoaXMuX2lzX29wZW5pbmcodCk/KGkucHVzaChuKSxuPXQpOm4mJnRoaXMuX2lzX2Nsb3NpbmcodCxuKSYmKHQub3BlbmVkPW4sbi5jbG9zZWQ9dCxuPWkucG9wKCksdC5wYXJlbnQ9biksdC5wcmV2aW91cz1lLGUubmV4dD10LHRoaXMuX190b2tlbnMuYWRkKHQpLGU9dH1yZXR1cm4gdGhpcy5fX3Rva2Vuc30sdS5wcm90b3R5cGUuX2lzX2ZpcnN0X3Rva2VuPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX190b2tlbnMuaXNFbXB0eSgpfSx1LnByb3RvdHlwZS5fcmVzZXQ9ZnVuY3Rpb24oKXt9LHUucHJvdG90eXBlLl9nZXRfbmV4dF90b2tlbj1mdW5jdGlvbih0LGUpe3RoaXMuX3JlYWRXaGl0ZXNwYWNlKCk7dmFyIG49dGhpcy5faW5wdXQucmVhZCgvLisvZyk7cmV0dXJuIG4/dGhpcy5fY3JlYXRlX3Rva2VuKHMuUkFXLG4pOnRoaXMuX2NyZWF0ZV90b2tlbihzLkVPRixcIlwiKX0sdS5wcm90b3R5cGUuX2lzX2NvbW1lbnQ9ZnVuY3Rpb24odCl7cmV0dXJuITF9LHUucHJvdG90eXBlLl9pc19vcGVuaW5nPWZ1bmN0aW9uKHQpe3JldHVybiExfSx1LnByb3RvdHlwZS5faXNfY2xvc2luZz1mdW5jdGlvbih0LGUpe3JldHVybiExfSx1LnByb3RvdHlwZS5fY3JlYXRlX3Rva2VuPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG5ldyByKHQsZSx0aGlzLl9wYXR0ZXJucy53aGl0ZXNwYWNlLm5ld2xpbmVfY291bnQsdGhpcy5fcGF0dGVybnMud2hpdGVzcGFjZS53aGl0ZXNwYWNlX2JlZm9yZV90b2tlbil9LHUucHJvdG90eXBlLl9yZWFkV2hpdGVzcGFjZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9wYXR0ZXJucy53aGl0ZXNwYWNlLnJlYWQoKX0sdC5leHBvcnRzLlRva2VuaXplcj11LHQuZXhwb3J0cy5UT0tFTj1zfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaSh0KXt0aGlzLl9fdG9rZW5zPVtdLHRoaXMuX190b2tlbnNfbGVuZ3RoPXRoaXMuX190b2tlbnMubGVuZ3RoLHRoaXMuX19wb3NpdGlvbj0wLHRoaXMuX19wYXJlbnRfdG9rZW49dH1pLnByb3RvdHlwZS5yZXN0YXJ0PWZ1bmN0aW9uKCl7dGhpcy5fX3Bvc2l0aW9uPTB9LGkucHJvdG90eXBlLmlzRW1wdHk9ZnVuY3Rpb24oKXtyZXR1cm4gMD09PXRoaXMuX190b2tlbnNfbGVuZ3RofSxpLnByb3RvdHlwZS5oYXNOZXh0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX19wb3NpdGlvbjx0aGlzLl9fdG9rZW5zX2xlbmd0aH0saS5wcm90b3R5cGUubmV4dD1mdW5jdGlvbigpe3ZhciB0PW51bGw7cmV0dXJuIHRoaXMuaGFzTmV4dCgpJiYodD10aGlzLl9fdG9rZW5zW3RoaXMuX19wb3NpdGlvbl0sdGhpcy5fX3Bvc2l0aW9uKz0xKSx0fSxpLnByb3RvdHlwZS5wZWVrPWZ1bmN0aW9uKHQpe3ZhciBlPW51bGw7cmV0dXJuIHQ9dHx8MCwodCs9dGhpcy5fX3Bvc2l0aW9uKT49MCYmdDx0aGlzLl9fdG9rZW5zX2xlbmd0aCYmKGU9dGhpcy5fX3Rva2Vuc1t0XSksZX0saS5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKHQpe3RoaXMuX19wYXJlbnRfdG9rZW4mJih0LnBhcmVudD10aGlzLl9fcGFyZW50X3Rva2VuKSx0aGlzLl9fdG9rZW5zLnB1c2godCksdGhpcy5fX3Rva2Vuc19sZW5ndGgrPTF9LHQuZXhwb3J0cy5Ub2tlblN0cmVhbT1pfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9bigxMikuUGF0dGVybjtmdW5jdGlvbiByKHQsZSl7aS5jYWxsKHRoaXMsdCxlKSxlP3RoaXMuX2xpbmVfcmVnZXhwPXRoaXMuX2lucHV0LmdldF9yZWdleHAoZS5fbGluZV9yZWdleHApOnRoaXMuX19zZXRfd2hpdGVzcGFjZV9wYXR0ZXJucyhcIlwiLFwiXCIpLHRoaXMubmV3bGluZV9jb3VudD0wLHRoaXMud2hpdGVzcGFjZV9iZWZvcmVfdG9rZW49XCJcIn1yLnByb3RvdHlwZT1uZXcgaSxyLnByb3RvdHlwZS5fX3NldF93aGl0ZXNwYWNlX3BhdHRlcm5zPWZ1bmN0aW9uKHQsZSl7dCs9XCJcXFxcdCBcIixlKz1cIlxcXFxuXFxcXHJcIix0aGlzLl9tYXRjaF9wYXR0ZXJuPXRoaXMuX2lucHV0LmdldF9yZWdleHAoXCJbXCIrdCtlK1wiXStcIiwhMCksdGhpcy5fbmV3bGluZV9yZWdleHA9dGhpcy5faW5wdXQuZ2V0X3JlZ2V4cChcIlxcXFxyXFxcXG58W1wiK2UrXCJdXCIpfSxyLnByb3RvdHlwZS5yZWFkPWZ1bmN0aW9uKCl7dGhpcy5uZXdsaW5lX2NvdW50PTAsdGhpcy53aGl0ZXNwYWNlX2JlZm9yZV90b2tlbj1cIlwiO3ZhciB0PXRoaXMuX2lucHV0LnJlYWQodGhpcy5fbWF0Y2hfcGF0dGVybik7aWYoXCIgXCI9PT10KXRoaXMud2hpdGVzcGFjZV9iZWZvcmVfdG9rZW49XCIgXCI7ZWxzZSBpZih0KXt2YXIgZT10aGlzLl9fc3BsaXQodGhpcy5fbmV3bGluZV9yZWdleHAsdCk7dGhpcy5uZXdsaW5lX2NvdW50PWUubGVuZ3RoLTEsdGhpcy53aGl0ZXNwYWNlX2JlZm9yZV90b2tlbj1lW3RoaXMubmV3bGluZV9jb3VudF19cmV0dXJuIHR9LHIucHJvdG90eXBlLm1hdGNoaW5nPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5fY3JlYXRlKCk7cmV0dXJuIG4uX19zZXRfd2hpdGVzcGFjZV9wYXR0ZXJucyh0LGUpLG4uX3VwZGF0ZSgpLG59LHIucHJvdG90eXBlLl9jcmVhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIodGhpcy5faW5wdXQsdGhpcyl9LHIucHJvdG90eXBlLl9fc3BsaXQ9ZnVuY3Rpb24odCxlKXt0Lmxhc3RJbmRleD0wO2Zvcih2YXIgbj0wLGk9W10scj10LmV4ZWMoZSk7cjspaS5wdXNoKGUuc3Vic3RyaW5nKG4sci5pbmRleCkpLG49ci5pbmRleCtyWzBdLmxlbmd0aCxyPXQuZXhlYyhlKTtyZXR1cm4gbjxlLmxlbmd0aD9pLnB1c2goZS5zdWJzdHJpbmcobixlLmxlbmd0aCkpOmkucHVzaChcIlwiKSxpfSx0LmV4cG9ydHMuV2hpdGVzcGFjZVBhdHRlcm49cn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGkodCxlKXt0aGlzLl9pbnB1dD10LHRoaXMuX3N0YXJ0aW5nX3BhdHRlcm49bnVsbCx0aGlzLl9tYXRjaF9wYXR0ZXJuPW51bGwsdGhpcy5fdW50aWxfcGF0dGVybj1udWxsLHRoaXMuX3VudGlsX2FmdGVyPSExLGUmJih0aGlzLl9zdGFydGluZ19wYXR0ZXJuPXRoaXMuX2lucHV0LmdldF9yZWdleHAoZS5fc3RhcnRpbmdfcGF0dGVybiwhMCksdGhpcy5fbWF0Y2hfcGF0dGVybj10aGlzLl9pbnB1dC5nZXRfcmVnZXhwKGUuX21hdGNoX3BhdHRlcm4sITApLHRoaXMuX3VudGlsX3BhdHRlcm49dGhpcy5faW5wdXQuZ2V0X3JlZ2V4cChlLl91bnRpbF9wYXR0ZXJuKSx0aGlzLl91bnRpbF9hZnRlcj1lLl91bnRpbF9hZnRlcil9aS5wcm90b3R5cGUucmVhZD1mdW5jdGlvbigpe3ZhciB0PXRoaXMuX2lucHV0LnJlYWQodGhpcy5fc3RhcnRpbmdfcGF0dGVybik7cmV0dXJuIHRoaXMuX3N0YXJ0aW5nX3BhdHRlcm4mJiF0fHwodCs9dGhpcy5faW5wdXQucmVhZCh0aGlzLl9tYXRjaF9wYXR0ZXJuLHRoaXMuX3VudGlsX3BhdHRlcm4sdGhpcy5fdW50aWxfYWZ0ZXIpKSx0fSxpLnByb3RvdHlwZS5yZWFkX21hdGNoPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lucHV0Lm1hdGNoKHRoaXMuX21hdGNoX3BhdHRlcm4pfSxpLnByb3RvdHlwZS51bnRpbF9hZnRlcj1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9jcmVhdGUoKTtyZXR1cm4gZS5fdW50aWxfYWZ0ZXI9ITAsZS5fdW50aWxfcGF0dGVybj10aGlzLl9pbnB1dC5nZXRfcmVnZXhwKHQpLGUuX3VwZGF0ZSgpLGV9LGkucHJvdG90eXBlLnVudGlsPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2NyZWF0ZSgpO3JldHVybiBlLl91bnRpbF9hZnRlcj0hMSxlLl91bnRpbF9wYXR0ZXJuPXRoaXMuX2lucHV0LmdldF9yZWdleHAodCksZS5fdXBkYXRlKCksZX0saS5wcm90b3R5cGUuc3RhcnRpbmdfd2l0aD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9jcmVhdGUoKTtyZXR1cm4gZS5fc3RhcnRpbmdfcGF0dGVybj10aGlzLl9pbnB1dC5nZXRfcmVnZXhwKHQsITApLGUuX3VwZGF0ZSgpLGV9LGkucHJvdG90eXBlLm1hdGNoaW5nPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2NyZWF0ZSgpO3JldHVybiBlLl9tYXRjaF9wYXR0ZXJuPXRoaXMuX2lucHV0LmdldF9yZWdleHAodCwhMCksZS5fdXBkYXRlKCksZX0saS5wcm90b3R5cGUuX2NyZWF0ZT1mdW5jdGlvbigpe3JldHVybiBuZXcgaSh0aGlzLl9pbnB1dCx0aGlzKX0saS5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbigpe30sdC5leHBvcnRzLlBhdHRlcm49aX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGkodCxlKXt0PVwic3RyaW5nXCI9PXR5cGVvZiB0P3Q6dC5zb3VyY2UsZT1cInN0cmluZ1wiPT10eXBlb2YgZT9lOmUuc291cmNlLHRoaXMuX19kaXJlY3RpdmVzX2Jsb2NrX3BhdHRlcm49bmV3IFJlZ0V4cCh0Ky8gYmVhdXRpZnkoIFxcdytbOl1cXHcrKSsgLy5zb3VyY2UrZSxcImdcIiksdGhpcy5fX2RpcmVjdGl2ZV9wYXR0ZXJuPS8gKFxcdyspWzpdKFxcdyspL2csdGhpcy5fX2RpcmVjdGl2ZXNfZW5kX2lnbm9yZV9wYXR0ZXJuPW5ldyBSZWdFeHAodCsvXFxzYmVhdXRpZnlcXHNpZ25vcmU6ZW5kXFxzLy5zb3VyY2UrZSxcImdcIil9aS5wcm90b3R5cGUuZ2V0X2RpcmVjdGl2ZXM9ZnVuY3Rpb24odCl7aWYoIXQubWF0Y2godGhpcy5fX2RpcmVjdGl2ZXNfYmxvY2tfcGF0dGVybikpcmV0dXJuIG51bGw7dmFyIGU9e307dGhpcy5fX2RpcmVjdGl2ZV9wYXR0ZXJuLmxhc3RJbmRleD0wO2Zvcih2YXIgbj10aGlzLl9fZGlyZWN0aXZlX3BhdHRlcm4uZXhlYyh0KTtuOyllW25bMV1dPW5bMl0sbj10aGlzLl9fZGlyZWN0aXZlX3BhdHRlcm4uZXhlYyh0KTtyZXR1cm4gZX0saS5wcm90b3R5cGUucmVhZElnbm9yZWQ9ZnVuY3Rpb24odCl7cmV0dXJuIHQucmVhZFVudGlsQWZ0ZXIodGhpcy5fX2RpcmVjdGl2ZXNfZW5kX2lnbm9yZV9wYXR0ZXJuKX0sdC5leHBvcnRzLkRpcmVjdGl2ZXM9aX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBpPW4oMTIpLlBhdHRlcm4scj17ZGphbmdvOiExLGVyYjohMSxoYW5kbGViYXJzOiExLHBocDohMX07ZnVuY3Rpb24gYSh0LGUpe2kuY2FsbCh0aGlzLHQsZSksdGhpcy5fX3RlbXBsYXRlX3BhdHRlcm49bnVsbCx0aGlzLl9kaXNhYmxlZD1PYmplY3QuYXNzaWduKHt9LHIpLHRoaXMuX2V4Y2x1ZGVkPU9iamVjdC5hc3NpZ24oe30sciksZSYmKHRoaXMuX190ZW1wbGF0ZV9wYXR0ZXJuPXRoaXMuX2lucHV0LmdldF9yZWdleHAoZS5fX3RlbXBsYXRlX3BhdHRlcm4pLHRoaXMuX2V4Y2x1ZGVkPU9iamVjdC5hc3NpZ24odGhpcy5fZXhjbHVkZWQsZS5fZXhjbHVkZWQpLHRoaXMuX2Rpc2FibGVkPU9iamVjdC5hc3NpZ24odGhpcy5fZGlzYWJsZWQsZS5fZGlzYWJsZWQpKTt2YXIgbj1uZXcgaSh0KTt0aGlzLl9fcGF0dGVybnM9e2hhbmRsZWJhcnNfY29tbWVudDpuLnN0YXJ0aW5nX3dpdGgoL3t7IS0tLykudW50aWxfYWZ0ZXIoLy0tfX0vKSxoYW5kbGViYXJzX3VuZXNjYXBlZDpuLnN0YXJ0aW5nX3dpdGgoL3t7ey8pLnVudGlsX2FmdGVyKC99fX0vKSxoYW5kbGViYXJzOm4uc3RhcnRpbmdfd2l0aCgve3svKS51bnRpbF9hZnRlcigvfX0vKSxwaHA6bi5zdGFydGluZ193aXRoKC88XFw/KD86Wz1dfHBocCkvKS51bnRpbF9hZnRlcigvXFw/Pi8pLGVyYjpuLnN0YXJ0aW5nX3dpdGgoLzwlW14lXS8pLnVudGlsX2FmdGVyKC9bXiVdJT4vKSxkamFuZ286bi5zdGFydGluZ193aXRoKC97JS8pLnVudGlsX2FmdGVyKC8lfS8pLGRqYW5nb192YWx1ZTpuLnN0YXJ0aW5nX3dpdGgoL3t7LykudW50aWxfYWZ0ZXIoL319LyksZGphbmdvX2NvbW1lbnQ6bi5zdGFydGluZ193aXRoKC97Iy8pLnVudGlsX2FmdGVyKC8jfS8pfX1hLnByb3RvdHlwZT1uZXcgaSxhLnByb3RvdHlwZS5fY3JlYXRlPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBhKHRoaXMuX2lucHV0LHRoaXMpfSxhLnByb3RvdHlwZS5fdXBkYXRlPWZ1bmN0aW9uKCl7dGhpcy5fX3NldF90ZW1wbGF0ZWRfcGF0dGVybigpfSxhLnByb3RvdHlwZS5kaXNhYmxlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2NyZWF0ZSgpO3JldHVybiBlLl9kaXNhYmxlZFt0XT0hMCxlLl91cGRhdGUoKSxlfSxhLnByb3RvdHlwZS5yZWFkX29wdGlvbnM9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fY3JlYXRlKCk7Zm9yKHZhciBuIGluIHIpZS5fZGlzYWJsZWRbbl09LTE9PT10LnRlbXBsYXRpbmcuaW5kZXhPZihuKTtyZXR1cm4gZS5fdXBkYXRlKCksZX0sYS5wcm90b3R5cGUuZXhjbHVkZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9jcmVhdGUoKTtyZXR1cm4gZS5fZXhjbHVkZWRbdF09ITAsZS5fdXBkYXRlKCksZX0sYS5wcm90b3R5cGUucmVhZD1mdW5jdGlvbigpe3ZhciB0PVwiXCI7dD10aGlzLl9tYXRjaF9wYXR0ZXJuP3RoaXMuX2lucHV0LnJlYWQodGhpcy5fc3RhcnRpbmdfcGF0dGVybik6dGhpcy5faW5wdXQucmVhZCh0aGlzLl9zdGFydGluZ19wYXR0ZXJuLHRoaXMuX190ZW1wbGF0ZV9wYXR0ZXJuKTtmb3IodmFyIGU9dGhpcy5fcmVhZF90ZW1wbGF0ZSgpO2U7KXRoaXMuX21hdGNoX3BhdHRlcm4/ZSs9dGhpcy5faW5wdXQucmVhZCh0aGlzLl9tYXRjaF9wYXR0ZXJuKTplKz10aGlzLl9pbnB1dC5yZWFkVW50aWwodGhpcy5fX3RlbXBsYXRlX3BhdHRlcm4pLHQrPWUsZT10aGlzLl9yZWFkX3RlbXBsYXRlKCk7cmV0dXJuIHRoaXMuX3VudGlsX2FmdGVyJiYodCs9dGhpcy5faW5wdXQucmVhZFVudGlsQWZ0ZXIodGhpcy5fdW50aWxfcGF0dGVybikpLHR9LGEucHJvdG90eXBlLl9fc2V0X3RlbXBsYXRlZF9wYXR0ZXJuPWZ1bmN0aW9uKCl7dmFyIHQ9W107dGhpcy5fZGlzYWJsZWQucGhwfHx0LnB1c2godGhpcy5fX3BhdHRlcm5zLnBocC5fc3RhcnRpbmdfcGF0dGVybi5zb3VyY2UpLHRoaXMuX2Rpc2FibGVkLmhhbmRsZWJhcnN8fHQucHVzaCh0aGlzLl9fcGF0dGVybnMuaGFuZGxlYmFycy5fc3RhcnRpbmdfcGF0dGVybi5zb3VyY2UpLHRoaXMuX2Rpc2FibGVkLmVyYnx8dC5wdXNoKHRoaXMuX19wYXR0ZXJucy5lcmIuX3N0YXJ0aW5nX3BhdHRlcm4uc291cmNlKSx0aGlzLl9kaXNhYmxlZC5kamFuZ298fCh0LnB1c2godGhpcy5fX3BhdHRlcm5zLmRqYW5nby5fc3RhcnRpbmdfcGF0dGVybi5zb3VyY2UpLHQucHVzaCh0aGlzLl9fcGF0dGVybnMuZGphbmdvX3ZhbHVlLl9zdGFydGluZ19wYXR0ZXJuLnNvdXJjZSksdC5wdXNoKHRoaXMuX19wYXR0ZXJucy5kamFuZ29fY29tbWVudC5fc3RhcnRpbmdfcGF0dGVybi5zb3VyY2UpKSx0aGlzLl91bnRpbF9wYXR0ZXJuJiZ0LnB1c2godGhpcy5fdW50aWxfcGF0dGVybi5zb3VyY2UpLHRoaXMuX190ZW1wbGF0ZV9wYXR0ZXJuPXRoaXMuX2lucHV0LmdldF9yZWdleHAoXCIoPzpcIit0LmpvaW4oXCJ8XCIpK1wiKVwiKX0sYS5wcm90b3R5cGUuX3JlYWRfdGVtcGxhdGU9ZnVuY3Rpb24oKXt2YXIgdD1cIlwiLGU9dGhpcy5faW5wdXQucGVlaygpO2lmKFwiPFwiPT09ZSl7dmFyIG49dGhpcy5faW5wdXQucGVlaygxKTt0aGlzLl9kaXNhYmxlZC5waHB8fHRoaXMuX2V4Y2x1ZGVkLnBocHx8XCI/XCIhPT1ufHwodD10fHx0aGlzLl9fcGF0dGVybnMucGhwLnJlYWQoKSksdGhpcy5fZGlzYWJsZWQuZXJifHx0aGlzLl9leGNsdWRlZC5lcmJ8fFwiJVwiIT09bnx8KHQ9dHx8dGhpcy5fX3BhdHRlcm5zLmVyYi5yZWFkKCkpfWVsc2VcIntcIj09PWUmJih0aGlzLl9kaXNhYmxlZC5oYW5kbGViYXJzfHx0aGlzLl9leGNsdWRlZC5oYW5kbGViYXJzfHwodD0odD0odD10fHx0aGlzLl9fcGF0dGVybnMuaGFuZGxlYmFyc19jb21tZW50LnJlYWQoKSl8fHRoaXMuX19wYXR0ZXJucy5oYW5kbGViYXJzX3VuZXNjYXBlZC5yZWFkKCkpfHx0aGlzLl9fcGF0dGVybnMuaGFuZGxlYmFycy5yZWFkKCkpLHRoaXMuX2Rpc2FibGVkLmRqYW5nb3x8KHRoaXMuX2V4Y2x1ZGVkLmRqYW5nb3x8dGhpcy5fZXhjbHVkZWQuaGFuZGxlYmFyc3x8KHQ9dHx8dGhpcy5fX3BhdHRlcm5zLmRqYW5nb192YWx1ZS5yZWFkKCkpLHRoaXMuX2V4Y2x1ZGVkLmRqYW5nb3x8KHQ9KHQ9dHx8dGhpcy5fX3BhdHRlcm5zLmRqYW5nb19jb21tZW50LnJlYWQoKSl8fHRoaXMuX19wYXR0ZXJucy5kamFuZ28ucmVhZCgpKSkpO3JldHVybiB0fSx0LmV4cG9ydHMuVGVtcGxhdGFibGVQYXR0ZXJuPWF9LCwsLGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1uKDE5KS5CZWF1dGlmaWVyLHI9bigyMCkuT3B0aW9uczt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlLG4scil7cmV0dXJuIG5ldyBpKHQsZSxuLHIpLmJlYXV0aWZ5KCl9LHQuZXhwb3J0cy5kZWZhdWx0T3B0aW9ucz1mdW5jdGlvbigpe3JldHVybiBuZXcgcn19LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1uKDIwKS5PcHRpb25zLHI9bigyKS5PdXRwdXQsYT1uKDIxKS5Ub2tlbml6ZXIsbz1uKDIxKS5UT0tFTixzPS9cXHJcXG58W1xcclxcbl0vLHU9L1xcclxcbnxbXFxyXFxuXS9nLGw9ZnVuY3Rpb24odCxlKXt0aGlzLmluZGVudF9sZXZlbD0wLHRoaXMuYWxpZ25tZW50X3NpemU9MCx0aGlzLm1heF9wcmVzZXJ2ZV9uZXdsaW5lcz10Lm1heF9wcmVzZXJ2ZV9uZXdsaW5lcyx0aGlzLnByZXNlcnZlX25ld2xpbmVzPXQucHJlc2VydmVfbmV3bGluZXMsdGhpcy5fb3V0cHV0PW5ldyByKHQsZSl9O2wucHJvdG90eXBlLmN1cnJlbnRfbGluZV9oYXNfbWF0Y2g9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX291dHB1dC5jdXJyZW50X2xpbmUuaGFzX21hdGNoKHQpfSxsLnByb3RvdHlwZS5zZXRfc3BhY2VfYmVmb3JlX3Rva2VuPWZ1bmN0aW9uKHQsZSl7dGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj10LHRoaXMuX291dHB1dC5ub25fYnJlYWtpbmdfc3BhY2U9ZX0sbC5wcm90b3R5cGUuc2V0X3dyYXBfcG9pbnQ9ZnVuY3Rpb24oKXt0aGlzLl9vdXRwdXQuc2V0X2luZGVudCh0aGlzLmluZGVudF9sZXZlbCx0aGlzLmFsaWdubWVudF9zaXplKSx0aGlzLl9vdXRwdXQuc2V0X3dyYXBfcG9pbnQoKX0sbC5wcm90b3R5cGUuYWRkX3Jhd190b2tlbj1mdW5jdGlvbih0KXt0aGlzLl9vdXRwdXQuYWRkX3Jhd190b2tlbih0KX0sbC5wcm90b3R5cGUucHJpbnRfcHJlc2VydmVkX25ld2xpbmVzPWZ1bmN0aW9uKHQpe3ZhciBlPTA7dC50eXBlIT09by5URVhUJiZ0LnByZXZpb3VzLnR5cGUhPT1vLlRFWFQmJihlPXQubmV3bGluZXM/MTowKSx0aGlzLnByZXNlcnZlX25ld2xpbmVzJiYoZT10Lm5ld2xpbmVzPHRoaXMubWF4X3ByZXNlcnZlX25ld2xpbmVzKzE/dC5uZXdsaW5lczp0aGlzLm1heF9wcmVzZXJ2ZV9uZXdsaW5lcysxKTtmb3IodmFyIG49MDtuPGU7bisrKXRoaXMucHJpbnRfbmV3bGluZShuPjApO3JldHVybiAwIT09ZX0sbC5wcm90b3R5cGUudHJhdmVyc2Vfd2hpdGVzcGFjZT1mdW5jdGlvbih0KXtyZXR1cm4hKCF0LndoaXRlc3BhY2VfYmVmb3JlJiYhdC5uZXdsaW5lc3x8KHRoaXMucHJpbnRfcHJlc2VydmVkX25ld2xpbmVzKHQpfHwodGhpcy5fb3V0cHV0LnNwYWNlX2JlZm9yZV90b2tlbj0hMCksMCkpfSxsLnByb3RvdHlwZS5wcmV2aW91c190b2tlbl93cmFwcGVkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX291dHB1dC5wcmV2aW91c190b2tlbl93cmFwcGVkfSxsLnByb3RvdHlwZS5wcmludF9uZXdsaW5lPWZ1bmN0aW9uKHQpe3RoaXMuX291dHB1dC5hZGRfbmV3X2xpbmUodCl9LGwucHJvdG90eXBlLnByaW50X3Rva2VuPWZ1bmN0aW9uKHQpe3QudGV4dCYmKHRoaXMuX291dHB1dC5zZXRfaW5kZW50KHRoaXMuaW5kZW50X2xldmVsLHRoaXMuYWxpZ25tZW50X3NpemUpLHRoaXMuX291dHB1dC5hZGRfdG9rZW4odC50ZXh0KSl9LGwucHJvdG90eXBlLmluZGVudD1mdW5jdGlvbigpe3RoaXMuaW5kZW50X2xldmVsKyt9LGwucHJvdG90eXBlLmdldF9mdWxsX2luZGVudD1mdW5jdGlvbih0KXtyZXR1cm4odD10aGlzLmluZGVudF9sZXZlbCsodHx8MCkpPDE/XCJcIjp0aGlzLl9vdXRwdXQuZ2V0X2luZGVudF9zdHJpbmcodCl9O3ZhciBjPWZ1bmN0aW9uKHQsZSl7dmFyIG49bnVsbCxpPW51bGw7cmV0dXJuIGUuY2xvc2VkPyhcInNjcmlwdFwiPT09dD9uPVwidGV4dC9qYXZhc2NyaXB0XCI6XCJzdHlsZVwiPT09dCYmKG49XCJ0ZXh0L2Nzc1wiKSwobj1mdW5jdGlvbih0KXtmb3IodmFyIGU9bnVsbCxuPXQubmV4dDtuLnR5cGUhPT1vLkVPRiYmdC5jbG9zZWQhPT1uOyl7aWYobi50eXBlPT09by5BVFRSSUJVVEUmJlwidHlwZVwiPT09bi50ZXh0KXtuLm5leHQmJm4ubmV4dC50eXBlPT09by5FUVVBTFMmJm4ubmV4dC5uZXh0JiZuLm5leHQubmV4dC50eXBlPT09by5WQUxVRSYmKGU9bi5uZXh0Lm5leHQudGV4dCk7YnJlYWt9bj1uLm5leHR9cmV0dXJuIGV9KGUpfHxuKS5zZWFyY2goXCJ0ZXh0L2Nzc1wiKT4tMT9pPVwiY3NzXCI6bi5zZWFyY2goLyh0ZXh0fGFwcGxpY2F0aW9ufGRvam8pXFwvKHgtKT8oamF2YXNjcmlwdHxlY21hc2NyaXB0fGpzY3JpcHR8bGl2ZXNjcmlwdHwobGRcXCspP2pzb258bWV0aG9kfGFzcGVjdCkvKT4tMT9pPVwiamF2YXNjcmlwdFwiOm4uc2VhcmNoKC8odGV4dHxhcHBsaWNhdGlvbnxkb2pvKVxcLyh4LSk/KGh0bWwpLyk+LTE/aT1cImh0bWxcIjpuLnNlYXJjaCgvdGVzdFxcL251bGwvKT4tMSYmKGk9XCJudWxsXCIpLGkpOm51bGx9O2Z1bmN0aW9uIF8odCxlKXtyZXR1cm4tMSE9PWUuaW5kZXhPZih0KX1mdW5jdGlvbiBoKHQsZSxuKXt0aGlzLnBhcmVudD10fHxudWxsLHRoaXMudGFnPWU/ZS50YWdfbmFtZTpcIlwiLHRoaXMuaW5kZW50X2xldmVsPW58fDAsdGhpcy5wYXJzZXJfdG9rZW49ZXx8bnVsbH1mdW5jdGlvbiBwKHQpe3RoaXMuX3ByaW50ZXI9dCx0aGlzLl9jdXJyZW50X2ZyYW1lPW51bGx9ZnVuY3Rpb24gZCh0LGUsbixyKXt0aGlzLl9zb3VyY2VfdGV4dD10fHxcIlwiLGU9ZXx8e30sdGhpcy5fanNfYmVhdXRpZnk9bix0aGlzLl9jc3NfYmVhdXRpZnk9cix0aGlzLl90YWdfc3RhY2s9bnVsbDt2YXIgYT1uZXcgaShlLFwiaHRtbFwiKTt0aGlzLl9vcHRpb25zPWEsdGhpcy5faXNfd3JhcF9hdHRyaWJ1dGVzX2ZvcmNlPVwiZm9yY2VcIj09PXRoaXMuX29wdGlvbnMud3JhcF9hdHRyaWJ1dGVzLnN1YnN0cigwLFwiZm9yY2VcIi5sZW5ndGgpLHRoaXMuX2lzX3dyYXBfYXR0cmlidXRlc19mb3JjZV9leHBhbmRfbXVsdGlsaW5lPVwiZm9yY2UtZXhwYW5kLW11bHRpbGluZVwiPT09dGhpcy5fb3B0aW9ucy53cmFwX2F0dHJpYnV0ZXMsdGhpcy5faXNfd3JhcF9hdHRyaWJ1dGVzX2ZvcmNlX2FsaWduZWQ9XCJmb3JjZS1hbGlnbmVkXCI9PT10aGlzLl9vcHRpb25zLndyYXBfYXR0cmlidXRlcyx0aGlzLl9pc193cmFwX2F0dHJpYnV0ZXNfYWxpZ25lZF9tdWx0aXBsZT1cImFsaWduZWQtbXVsdGlwbGVcIj09PXRoaXMuX29wdGlvbnMud3JhcF9hdHRyaWJ1dGVzLHRoaXMuX2lzX3dyYXBfYXR0cmlidXRlc19wcmVzZXJ2ZT1cInByZXNlcnZlXCI9PT10aGlzLl9vcHRpb25zLndyYXBfYXR0cmlidXRlcy5zdWJzdHIoMCxcInByZXNlcnZlXCIubGVuZ3RoKSx0aGlzLl9pc193cmFwX2F0dHJpYnV0ZXNfcHJlc2VydmVfYWxpZ25lZD1cInByZXNlcnZlLWFsaWduZWRcIj09PXRoaXMuX29wdGlvbnMud3JhcF9hdHRyaWJ1dGVzfXAucHJvdG90eXBlLmdldF9wYXJzZXJfdG9rZW49ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY3VycmVudF9mcmFtZT90aGlzLl9jdXJyZW50X2ZyYW1lLnBhcnNlcl90b2tlbjpudWxsfSxwLnByb3RvdHlwZS5yZWNvcmRfdGFnPWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBoKHRoaXMuX2N1cnJlbnRfZnJhbWUsdCx0aGlzLl9wcmludGVyLmluZGVudF9sZXZlbCk7dGhpcy5fY3VycmVudF9mcmFtZT1lfSxwLnByb3RvdHlwZS5fdHJ5X3BvcF9mcmFtZT1mdW5jdGlvbih0KXt2YXIgZT1udWxsO3JldHVybiB0JiYoZT10LnBhcnNlcl90b2tlbix0aGlzLl9wcmludGVyLmluZGVudF9sZXZlbD10LmluZGVudF9sZXZlbCx0aGlzLl9jdXJyZW50X2ZyYW1lPXQucGFyZW50KSxlfSxwLnByb3RvdHlwZS5fZ2V0X2ZyYW1lPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPXRoaXMuX2N1cnJlbnRfZnJhbWU7biYmLTE9PT10LmluZGV4T2Yobi50YWcpOyl7aWYoZSYmLTEhPT1lLmluZGV4T2Yobi50YWcpKXtuPW51bGw7YnJlYWt9bj1uLnBhcmVudH1yZXR1cm4gbn0scC5wcm90b3R5cGUudHJ5X3BvcD1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuX2dldF9mcmFtZShbdF0sZSk7cmV0dXJuIHRoaXMuX3RyeV9wb3BfZnJhbWUobil9LHAucHJvdG90eXBlLmluZGVudF90b190YWc9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fZ2V0X2ZyYW1lKHQpO2UmJih0aGlzLl9wcmludGVyLmluZGVudF9sZXZlbD1lLmluZGVudF9sZXZlbCl9LGQucHJvdG90eXBlLmJlYXV0aWZ5PWZ1bmN0aW9uKCl7aWYodGhpcy5fb3B0aW9ucy5kaXNhYmxlZClyZXR1cm4gdGhpcy5fc291cmNlX3RleHQ7dmFyIHQ9dGhpcy5fc291cmNlX3RleHQsZT10aGlzLl9vcHRpb25zLmVvbDtcImF1dG9cIj09PXRoaXMuX29wdGlvbnMuZW9sJiYoZT1cIlxcblwiLHQmJnMudGVzdCh0KSYmKGU9dC5tYXRjaChzKVswXSkpO3ZhciBuPSh0PXQucmVwbGFjZSh1LFwiXFxuXCIpKS5tYXRjaCgvXltcXHQgXSovKVswXSxpPXt0ZXh0OlwiXCIsdHlwZTpcIlwifSxyPW5ldyBmLGM9bmV3IGwodGhpcy5fb3B0aW9ucyxuKSxfPW5ldyBhKHQsdGhpcy5fb3B0aW9ucykudG9rZW5pemUoKTt0aGlzLl90YWdfc3RhY2s9bmV3IHAoYyk7Zm9yKHZhciBoPW51bGwsZD1fLm5leHQoKTtkLnR5cGUhPT1vLkVPRjspZC50eXBlPT09by5UQUdfT1BFTnx8ZC50eXBlPT09by5DT01NRU5UP3I9aD10aGlzLl9oYW5kbGVfdGFnX29wZW4oYyxkLHIsaSk6ZC50eXBlPT09by5BVFRSSUJVVEV8fGQudHlwZT09PW8uRVFVQUxTfHxkLnR5cGU9PT1vLlZBTFVFfHxkLnR5cGU9PT1vLlRFWFQmJiFyLnRhZ19jb21wbGV0ZT9oPXRoaXMuX2hhbmRsZV9pbnNpZGVfdGFnKGMsZCxyLF8pOmQudHlwZT09PW8uVEFHX0NMT1NFP2g9dGhpcy5faGFuZGxlX3RhZ19jbG9zZShjLGQscik6ZC50eXBlPT09by5URVhUP2g9dGhpcy5faGFuZGxlX3RleHQoYyxkLHIpOmMuYWRkX3Jhd190b2tlbihkKSxpPWgsZD1fLm5leHQoKTtyZXR1cm4gYy5fb3V0cHV0LmdldF9jb2RlKGUpfSxkLnByb3RvdHlwZS5faGFuZGxlX3RhZ19jbG9zZT1mdW5jdGlvbih0LGUsbil7dmFyIGk9e3RleHQ6ZS50ZXh0LHR5cGU6ZS50eXBlfTtyZXR1cm4gdC5hbGlnbm1lbnRfc2l6ZT0wLG4udGFnX2NvbXBsZXRlPSEwLHQuc2V0X3NwYWNlX2JlZm9yZV90b2tlbihlLm5ld2xpbmVzfHxcIlwiIT09ZS53aGl0ZXNwYWNlX2JlZm9yZSwhMCksbi5pc191bmZvcm1hdHRlZD90LmFkZF9yYXdfdG9rZW4oZSk6KFwiPFwiPT09bi50YWdfc3RhcnRfY2hhciYmKHQuc2V0X3NwYWNlX2JlZm9yZV90b2tlbihcIi9cIj09PWUudGV4dFswXSwhMCksdGhpcy5faXNfd3JhcF9hdHRyaWJ1dGVzX2ZvcmNlX2V4cGFuZF9tdWx0aWxpbmUmJm4uaGFzX3dyYXBwZWRfYXR0cnMmJnQucHJpbnRfbmV3bGluZSghMSkpLHQucHJpbnRfdG9rZW4oZSkpLCFuLmluZGVudF9jb250ZW50fHxuLmlzX3VuZm9ybWF0dGVkfHxuLmlzX2NvbnRlbnRfdW5mb3JtYXR0ZWR8fCh0LmluZGVudCgpLG4uaW5kZW50X2NvbnRlbnQ9ITEpLG4uaXNfaW5saW5lX2VsZW1lbnR8fG4uaXNfdW5mb3JtYXR0ZWR8fG4uaXNfY29udGVudF91bmZvcm1hdHRlZHx8dC5zZXRfd3JhcF9wb2ludCgpLGl9LGQucHJvdG90eXBlLl9oYW5kbGVfaW5zaWRlX3RhZz1mdW5jdGlvbih0LGUsbixpKXt2YXIgcj1uLmhhc193cmFwcGVkX2F0dHJzLGE9e3RleHQ6ZS50ZXh0LHR5cGU6ZS50eXBlfTtpZih0LnNldF9zcGFjZV9iZWZvcmVfdG9rZW4oZS5uZXdsaW5lc3x8XCJcIiE9PWUud2hpdGVzcGFjZV9iZWZvcmUsITApLG4uaXNfdW5mb3JtYXR0ZWQpdC5hZGRfcmF3X3Rva2VuKGUpO2Vsc2UgaWYoXCJ7XCI9PT1uLnRhZ19zdGFydF9jaGFyJiZlLnR5cGU9PT1vLlRFWFQpdC5wcmludF9wcmVzZXJ2ZWRfbmV3bGluZXMoZSk/KGUubmV3bGluZXM9MCx0LmFkZF9yYXdfdG9rZW4oZSkpOnQucHJpbnRfdG9rZW4oZSk7ZWxzZXtpZihlLnR5cGU9PT1vLkFUVFJJQlVURT8odC5zZXRfc3BhY2VfYmVmb3JlX3Rva2VuKCEwKSxuLmF0dHJfY291bnQrPTEpOihlLnR5cGU9PT1vLkVRVUFMU3x8ZS50eXBlPT09by5WQUxVRSYmZS5wcmV2aW91cy50eXBlPT09by5FUVVBTFMpJiZ0LnNldF9zcGFjZV9iZWZvcmVfdG9rZW4oITEpLGUudHlwZT09PW8uQVRUUklCVVRFJiZcIjxcIj09PW4udGFnX3N0YXJ0X2NoYXImJigodGhpcy5faXNfd3JhcF9hdHRyaWJ1dGVzX3ByZXNlcnZlfHx0aGlzLl9pc193cmFwX2F0dHJpYnV0ZXNfcHJlc2VydmVfYWxpZ25lZCkmJih0LnRyYXZlcnNlX3doaXRlc3BhY2UoZSkscj1yfHwwIT09ZS5uZXdsaW5lcyksdGhpcy5faXNfd3JhcF9hdHRyaWJ1dGVzX2ZvcmNlKSl7dmFyIHM9bi5hdHRyX2NvdW50PjE7aWYodGhpcy5faXNfd3JhcF9hdHRyaWJ1dGVzX2ZvcmNlX2V4cGFuZF9tdWx0aWxpbmUmJjE9PT1uLmF0dHJfY291bnQpe3ZhciB1LGw9ITAsYz0wO2Rve2lmKCh1PWkucGVlayhjKSkudHlwZT09PW8uQVRUUklCVVRFKXtsPSExO2JyZWFrfWMrPTF9d2hpbGUoYzw0JiZ1LnR5cGUhPT1vLkVPRiYmdS50eXBlIT09by5UQUdfQ0xPU0UpO3M9IWx9cyYmKHQucHJpbnRfbmV3bGluZSghMSkscj0hMCl9dC5wcmludF90b2tlbihlKSxyPXJ8fHQucHJldmlvdXNfdG9rZW5fd3JhcHBlZCgpLG4uaGFzX3dyYXBwZWRfYXR0cnM9cn1yZXR1cm4gYX0sZC5wcm90b3R5cGUuX2hhbmRsZV90ZXh0PWZ1bmN0aW9uKHQsZSxuKXt2YXIgaT17dGV4dDplLnRleHQsdHlwZTpcIlRLX0NPTlRFTlRcIn07cmV0dXJuIG4uY3VzdG9tX2JlYXV0aWZpZXJfbmFtZT90aGlzLl9wcmludF9jdXN0b21fYmVhdGlmaWVyX3RleHQodCxlLG4pOm4uaXNfdW5mb3JtYXR0ZWR8fG4uaXNfY29udGVudF91bmZvcm1hdHRlZD90LmFkZF9yYXdfdG9rZW4oZSk6KHQudHJhdmVyc2Vfd2hpdGVzcGFjZShlKSx0LnByaW50X3Rva2VuKGUpKSxpfSxkLnByb3RvdHlwZS5fcHJpbnRfY3VzdG9tX2JlYXRpZmllcl90ZXh0PWZ1bmN0aW9uKHQsZSxuKXt2YXIgaT10aGlzO2lmKFwiXCIhPT1lLnRleHQpe3ZhciByLGE9ZS50ZXh0LG89MSxzPVwiXCIsdT1cIlwiO1wiamF2YXNjcmlwdFwiPT09bi5jdXN0b21fYmVhdXRpZmllcl9uYW1lJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0aGlzLl9qc19iZWF1dGlmeT9yPXRoaXMuX2pzX2JlYXV0aWZ5OlwiY3NzXCI9PT1uLmN1c3RvbV9iZWF1dGlmaWVyX25hbWUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHRoaXMuX2Nzc19iZWF1dGlmeT9yPXRoaXMuX2Nzc19iZWF1dGlmeTpcImh0bWxcIj09PW4uY3VzdG9tX2JlYXV0aWZpZXJfbmFtZSYmKHI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3IGQodCxlLGkuX2pzX2JlYXV0aWZ5LGkuX2Nzc19iZWF1dGlmeSkuYmVhdXRpZnkoKX0pLFwia2VlcFwiPT09dGhpcy5fb3B0aW9ucy5pbmRlbnRfc2NyaXB0cz9vPTA6XCJzZXBhcmF0ZVwiPT09dGhpcy5fb3B0aW9ucy5pbmRlbnRfc2NyaXB0cyYmKG89LXQuaW5kZW50X2xldmVsKTt2YXIgbD10LmdldF9mdWxsX2luZGVudChvKTtpZihhPWEucmVwbGFjZSgvXFxuWyBcXHRdKiQvLFwiXCIpLFwiaHRtbFwiIT09bi5jdXN0b21fYmVhdXRpZmllcl9uYW1lJiZcIjxcIj09PWFbMF0mJmEubWF0Y2goL14oPCEtLXw8IVxcW0NEQVRBXFxbKS8pKXt2YXIgYz0vXig8IS0tW15cXG5dKnw8IVxcW0NEQVRBXFxbKShcXG4/KShbIFxcdFxcbl0qKShbXFxzXFxTXSopKC0tPnxdXT4pJC8uZXhlYyhhKTtpZighYylyZXR1cm4gdm9pZCB0LmFkZF9yYXdfdG9rZW4oZSk7cz1sK2NbMV0rXCJcXG5cIixhPWNbNF0sY1s1XSYmKHU9bCtjWzVdKSxhPWEucmVwbGFjZSgvXFxuWyBcXHRdKiQvLFwiXCIpLChjWzJdfHwtMSE9PWNbM10uaW5kZXhPZihcIlxcblwiKSkmJihjPWNbM10ubWF0Y2goL1sgXFx0XSskLykpJiYoZS53aGl0ZXNwYWNlX2JlZm9yZT1jWzBdKX1pZihhKWlmKHIpe3ZhciBfPWZ1bmN0aW9uKCl7dGhpcy5lb2w9XCJcXG5cIn07Xy5wcm90b3R5cGU9dGhpcy5fb3B0aW9ucy5yYXdfb3B0aW9ucyxhPXIobCthLG5ldyBfKX1lbHNle3ZhciBoPWUud2hpdGVzcGFjZV9iZWZvcmU7aCYmKGE9YS5yZXBsYWNlKG5ldyBSZWdFeHAoXCJcXG4oXCIraCtcIik/XCIsXCJnXCIpLFwiXFxuXCIpKSxhPWwrYS5yZXBsYWNlKC9cXG4vZyxcIlxcblwiK2wpfXMmJihhPWE/cythK1wiXFxuXCIrdTpzK3UpLHQucHJpbnRfbmV3bGluZSghMSksYSYmKGUudGV4dD1hLGUud2hpdGVzcGFjZV9iZWZvcmU9XCJcIixlLm5ld2xpbmVzPTAsdC5hZGRfcmF3X3Rva2VuKGUpLHQucHJpbnRfbmV3bGluZSghMCkpfX0sZC5wcm90b3R5cGUuX2hhbmRsZV90YWdfb3Blbj1mdW5jdGlvbih0LGUsbixpKXt2YXIgcj10aGlzLl9nZXRfdGFnX29wZW5fdG9rZW4oZSk7cmV0dXJuKG4uaXNfdW5mb3JtYXR0ZWR8fG4uaXNfY29udGVudF91bmZvcm1hdHRlZCkmJmUudHlwZT09PW8uVEFHX09QRU4mJjA9PT1lLnRleHQuaW5kZXhPZihcIjwvXCIpP3QuYWRkX3Jhd190b2tlbihlKToodC50cmF2ZXJzZV93aGl0ZXNwYWNlKGUpLHRoaXMuX3NldF90YWdfcG9zaXRpb24odCxlLHIsbixpKSxyLmlzX2lubGluZV9lbGVtZW50fHx0LnNldF93cmFwX3BvaW50KCksdC5wcmludF90b2tlbihlKSksKHRoaXMuX2lzX3dyYXBfYXR0cmlidXRlc19mb3JjZV9hbGlnbmVkfHx0aGlzLl9pc193cmFwX2F0dHJpYnV0ZXNfYWxpZ25lZF9tdWx0aXBsZXx8dGhpcy5faXNfd3JhcF9hdHRyaWJ1dGVzX3ByZXNlcnZlX2FsaWduZWQpJiYoci5hbGlnbm1lbnRfc2l6ZT1lLnRleHQubGVuZ3RoKzEpLHIudGFnX2NvbXBsZXRlfHxyLmlzX3VuZm9ybWF0dGVkfHwodC5hbGlnbm1lbnRfc2l6ZT1yLmFsaWdubWVudF9zaXplKSxyfTt2YXIgZj1mdW5jdGlvbih0LGUpe3ZhciBuO3RoaXMucGFyZW50PXR8fG51bGwsdGhpcy50ZXh0PVwiXCIsdGhpcy50eXBlPVwiVEtfVEFHX09QRU5cIix0aGlzLnRhZ19uYW1lPVwiXCIsdGhpcy5pc19pbmxpbmVfZWxlbWVudD0hMSx0aGlzLmlzX3VuZm9ybWF0dGVkPSExLHRoaXMuaXNfY29udGVudF91bmZvcm1hdHRlZD0hMSx0aGlzLmlzX2VtcHR5X2VsZW1lbnQ9ITEsdGhpcy5pc19zdGFydF90YWc9ITEsdGhpcy5pc19lbmRfdGFnPSExLHRoaXMuaW5kZW50X2NvbnRlbnQ9ITEsdGhpcy5tdWx0aWxpbmVfY29udGVudD0hMSx0aGlzLmN1c3RvbV9iZWF1dGlmaWVyX25hbWU9bnVsbCx0aGlzLnN0YXJ0X3RhZ190b2tlbj1udWxsLHRoaXMuYXR0cl9jb3VudD0wLHRoaXMuaGFzX3dyYXBwZWRfYXR0cnM9ITEsdGhpcy5hbGlnbm1lbnRfc2l6ZT0wLHRoaXMudGFnX2NvbXBsZXRlPSExLHRoaXMudGFnX3N0YXJ0X2NoYXI9XCJcIix0aGlzLnRhZ19jaGVjaz1cIlwiLGU/KHRoaXMudGFnX3N0YXJ0X2NoYXI9ZS50ZXh0WzBdLHRoaXMudGV4dD1lLnRleHQsXCI8XCI9PT10aGlzLnRhZ19zdGFydF9jaGFyPyhuPWUudGV4dC5tYXRjaCgvXjwoW15cXHM+XSopLyksdGhpcy50YWdfY2hlY2s9bj9uWzFdOlwiXCIpOihuPWUudGV4dC5tYXRjaCgvXnt7WyNcXF5dPyhbXlxcc31dKykvKSx0aGlzLnRhZ19jaGVjaz1uP25bMV06XCJcIiksdGhpcy50YWdfY2hlY2s9dGhpcy50YWdfY2hlY2sudG9Mb3dlckNhc2UoKSxlLnR5cGU9PT1vLkNPTU1FTlQmJih0aGlzLnRhZ19jb21wbGV0ZT0hMCksdGhpcy5pc19zdGFydF90YWc9XCIvXCIhPT10aGlzLnRhZ19jaGVjay5jaGFyQXQoMCksdGhpcy50YWdfbmFtZT10aGlzLmlzX3N0YXJ0X3RhZz90aGlzLnRhZ19jaGVjazp0aGlzLnRhZ19jaGVjay5zdWJzdHIoMSksdGhpcy5pc19lbmRfdGFnPSF0aGlzLmlzX3N0YXJ0X3RhZ3x8ZS5jbG9zZWQmJlwiLz5cIj09PWUuY2xvc2VkLnRleHQsdGhpcy5pc19lbmRfdGFnPXRoaXMuaXNfZW5kX3RhZ3x8XCJ7XCI9PT10aGlzLnRhZ19zdGFydF9jaGFyJiYodGhpcy50ZXh0Lmxlbmd0aDwzfHwvW14jXFxeXS8udGVzdCh0aGlzLnRleHQuY2hhckF0KDIpKSkpOnRoaXMudGFnX2NvbXBsZXRlPSEwfTtkLnByb3RvdHlwZS5fZ2V0X3RhZ19vcGVuX3Rva2VuPWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBmKHRoaXMuX3RhZ19zdGFjay5nZXRfcGFyc2VyX3Rva2VuKCksdCk7cmV0dXJuIGUuYWxpZ25tZW50X3NpemU9dGhpcy5fb3B0aW9ucy53cmFwX2F0dHJpYnV0ZXNfaW5kZW50X3NpemUsZS5pc19lbmRfdGFnPWUuaXNfZW5kX3RhZ3x8XyhlLnRhZ19jaGVjayx0aGlzLl9vcHRpb25zLnZvaWRfZWxlbWVudHMpLGUuaXNfZW1wdHlfZWxlbWVudD1lLnRhZ19jb21wbGV0ZXx8ZS5pc19zdGFydF90YWcmJmUuaXNfZW5kX3RhZyxlLmlzX3VuZm9ybWF0dGVkPSFlLnRhZ19jb21wbGV0ZSYmXyhlLnRhZ19jaGVjayx0aGlzLl9vcHRpb25zLnVuZm9ybWF0dGVkKSxlLmlzX2NvbnRlbnRfdW5mb3JtYXR0ZWQ9IWUuaXNfZW1wdHlfZWxlbWVudCYmXyhlLnRhZ19jaGVjayx0aGlzLl9vcHRpb25zLmNvbnRlbnRfdW5mb3JtYXR0ZWQpLGUuaXNfaW5saW5lX2VsZW1lbnQ9XyhlLnRhZ19uYW1lLHRoaXMuX29wdGlvbnMuaW5saW5lKXx8XCJ7XCI9PT1lLnRhZ19zdGFydF9jaGFyLGV9LGQucHJvdG90eXBlLl9zZXRfdGFnX3Bvc2l0aW9uPWZ1bmN0aW9uKHQsZSxuLGkscil7bi5pc19lbXB0eV9lbGVtZW50fHwobi5pc19lbmRfdGFnP24uc3RhcnRfdGFnX3Rva2VuPXRoaXMuX3RhZ19zdGFjay50cnlfcG9wKG4udGFnX25hbWUpOih0aGlzLl9kb19vcHRpb25hbF9lbmRfZWxlbWVudChuKSYmKG4uaXNfaW5saW5lX2VsZW1lbnR8fChuLnBhcmVudCYmKG4ucGFyZW50Lm11bHRpbGluZV9jb250ZW50PSEwKSx0LnByaW50X25ld2xpbmUoITEpKSksdGhpcy5fdGFnX3N0YWNrLnJlY29yZF90YWcobiksXCJzY3JpcHRcIiE9PW4udGFnX25hbWUmJlwic3R5bGVcIiE9PW4udGFnX25hbWV8fG4uaXNfdW5mb3JtYXR0ZWR8fG4uaXNfY29udGVudF91bmZvcm1hdHRlZHx8KG4uY3VzdG9tX2JlYXV0aWZpZXJfbmFtZT1jKG4udGFnX2NoZWNrLGUpKSkpLF8obi50YWdfY2hlY2ssdGhpcy5fb3B0aW9ucy5leHRyYV9saW5lcnMpJiYodC5wcmludF9uZXdsaW5lKCExKSx0Ll9vdXRwdXQuanVzdF9hZGRlZF9ibGFua2xpbmUoKXx8dC5wcmludF9uZXdsaW5lKCEwKSksbi5pc19lbXB0eV9lbGVtZW50PyhcIntcIj09PW4udGFnX3N0YXJ0X2NoYXImJlwiZWxzZVwiPT09bi50YWdfY2hlY2smJih0aGlzLl90YWdfc3RhY2suaW5kZW50X3RvX3RhZyhbXCJpZlwiLFwidW5sZXNzXCIsXCJlYWNoXCJdKSxuLmluZGVudF9jb250ZW50PSEwLHQuY3VycmVudF9saW5lX2hhc19tYXRjaCgve3sjaWYvKXx8dC5wcmludF9uZXdsaW5lKCExKSksXCIhLS1cIj09PW4udGFnX25hbWUmJnIudHlwZT09PW8uVEFHX0NMT1NFJiZpLmlzX2VuZF90YWcmJi0xPT09bi50ZXh0LmluZGV4T2YoXCJcXG5cIil8fG4uaXNfaW5saW5lX2VsZW1lbnR8fG4uaXNfdW5mb3JtYXR0ZWR8fHQucHJpbnRfbmV3bGluZSghMSkpOm4uaXNfdW5mb3JtYXR0ZWR8fG4uaXNfY29udGVudF91bmZvcm1hdHRlZD9uLmlzX2lubGluZV9lbGVtZW50fHxuLmlzX3VuZm9ybWF0dGVkfHx0LnByaW50X25ld2xpbmUoITEpOm4uaXNfZW5kX3RhZz8obi5zdGFydF90YWdfdG9rZW4mJm4uc3RhcnRfdGFnX3Rva2VuLm11bHRpbGluZV9jb250ZW50fHwhKG4uaXNfaW5saW5lX2VsZW1lbnR8fGkuaXNfaW5saW5lX2VsZW1lbnR8fHIudHlwZT09PW8uVEFHX0NMT1NFJiZuLnN0YXJ0X3RhZ190b2tlbj09PWl8fFwiVEtfQ09OVEVOVFwiPT09ci50eXBlKSkmJnQucHJpbnRfbmV3bGluZSghMSk6KG4uaW5kZW50X2NvbnRlbnQ9IW4uY3VzdG9tX2JlYXV0aWZpZXJfbmFtZSxcIjxcIj09PW4udGFnX3N0YXJ0X2NoYXImJihcImh0bWxcIj09PW4udGFnX25hbWU/bi5pbmRlbnRfY29udGVudD10aGlzLl9vcHRpb25zLmluZGVudF9pbm5lcl9odG1sOlwiaGVhZFwiPT09bi50YWdfbmFtZT9uLmluZGVudF9jb250ZW50PXRoaXMuX29wdGlvbnMuaW5kZW50X2hlYWRfaW5uZXJfaHRtbDpcImJvZHlcIj09PW4udGFnX25hbWUmJihuLmluZGVudF9jb250ZW50PXRoaXMuX29wdGlvbnMuaW5kZW50X2JvZHlfaW5uZXJfaHRtbCkpLG4uaXNfaW5saW5lX2VsZW1lbnR8fFwiVEtfQ09OVEVOVFwiPT09ci50eXBlfHwobi5wYXJlbnQmJihuLnBhcmVudC5tdWx0aWxpbmVfY29udGVudD0hMCksdC5wcmludF9uZXdsaW5lKCExKSkpfSxkLnByb3RvdHlwZS5fZG9fb3B0aW9uYWxfZW5kX2VsZW1lbnQ9ZnVuY3Rpb24odCl7dmFyIGU9bnVsbDtpZighdC5pc19lbXB0eV9lbGVtZW50JiZ0LmlzX3N0YXJ0X3RhZyYmdC5wYXJlbnQpcmV0dXJuXCJib2R5XCI9PT10LnRhZ19uYW1lP2U9ZXx8dGhpcy5fdGFnX3N0YWNrLnRyeV9wb3AoXCJoZWFkXCIpOlwibGlcIj09PXQudGFnX25hbWU/ZT1lfHx0aGlzLl90YWdfc3RhY2sudHJ5X3BvcChcImxpXCIsW1wib2xcIixcInVsXCJdKTpcImRkXCI9PT10LnRhZ19uYW1lfHxcImR0XCI9PT10LnRhZ19uYW1lP2U9KGU9ZXx8dGhpcy5fdGFnX3N0YWNrLnRyeV9wb3AoXCJkdFwiLFtcImRsXCJdKSl8fHRoaXMuX3RhZ19zdGFjay50cnlfcG9wKFwiZGRcIixbXCJkbFwiXSk6XCJycFwiPT09dC50YWdfbmFtZXx8XCJydFwiPT09dC50YWdfbmFtZT9lPShlPWV8fHRoaXMuX3RhZ19zdGFjay50cnlfcG9wKFwicnRcIixbXCJydWJ5XCIsXCJydGNcIl0pKXx8dGhpcy5fdGFnX3N0YWNrLnRyeV9wb3AoXCJycFwiLFtcInJ1YnlcIixcInJ0Y1wiXSk6XCJvcHRncm91cFwiPT09dC50YWdfbmFtZT9lPWV8fHRoaXMuX3RhZ19zdGFjay50cnlfcG9wKFwib3B0Z3JvdXBcIixbXCJzZWxlY3RcIl0pOlwib3B0aW9uXCI9PT10LnRhZ19uYW1lP2U9ZXx8dGhpcy5fdGFnX3N0YWNrLnRyeV9wb3AoXCJvcHRpb25cIixbXCJzZWxlY3RcIixcImRhdGFsaXN0XCIsXCJvcHRncm91cFwiXSk6XCJjb2xncm91cFwiPT09dC50YWdfbmFtZT9lPWV8fHRoaXMuX3RhZ19zdGFjay50cnlfcG9wKFwiY2FwdGlvblwiLFtcInRhYmxlXCJdKTpcInRoZWFkXCI9PT10LnRhZ19uYW1lP2U9KGU9ZXx8dGhpcy5fdGFnX3N0YWNrLnRyeV9wb3AoXCJjYXB0aW9uXCIsW1widGFibGVcIl0pKXx8dGhpcy5fdGFnX3N0YWNrLnRyeV9wb3AoXCJjb2xncm91cFwiLFtcInRhYmxlXCJdKTpcInRib2R5XCI9PT10LnRhZ19uYW1lfHxcInRmb290XCI9PT10LnRhZ19uYW1lP2U9KGU9KGU9KGU9ZXx8dGhpcy5fdGFnX3N0YWNrLnRyeV9wb3AoXCJjYXB0aW9uXCIsW1widGFibGVcIl0pKXx8dGhpcy5fdGFnX3N0YWNrLnRyeV9wb3AoXCJjb2xncm91cFwiLFtcInRhYmxlXCJdKSl8fHRoaXMuX3RhZ19zdGFjay50cnlfcG9wKFwidGhlYWRcIixbXCJ0YWJsZVwiXSkpfHx0aGlzLl90YWdfc3RhY2sudHJ5X3BvcChcInRib2R5XCIsW1widGFibGVcIl0pOlwidHJcIj09PXQudGFnX25hbWU/ZT0oZT0oZT1lfHx0aGlzLl90YWdfc3RhY2sudHJ5X3BvcChcImNhcHRpb25cIixbXCJ0YWJsZVwiXSkpfHx0aGlzLl90YWdfc3RhY2sudHJ5X3BvcChcImNvbGdyb3VwXCIsW1widGFibGVcIl0pKXx8dGhpcy5fdGFnX3N0YWNrLnRyeV9wb3AoXCJ0clwiLFtcInRhYmxlXCIsXCJ0aGVhZFwiLFwidGJvZHlcIixcInRmb290XCJdKTpcInRoXCIhPT10LnRhZ19uYW1lJiZcInRkXCIhPT10LnRhZ19uYW1lfHwoZT0oZT1lfHx0aGlzLl90YWdfc3RhY2sudHJ5X3BvcChcInRkXCIsW1widGFibGVcIixcInRoZWFkXCIsXCJ0Ym9keVwiLFwidGZvb3RcIixcInRyXCJdKSl8fHRoaXMuX3RhZ19zdGFjay50cnlfcG9wKFwidGhcIixbXCJ0YWJsZVwiLFwidGhlYWRcIixcInRib2R5XCIsXCJ0Zm9vdFwiLFwidHJcIl0pKSx0LnBhcmVudD10aGlzLl90YWdfc3RhY2suZ2V0X3BhcnNlcl90b2tlbigpLGV9LHQuZXhwb3J0cy5CZWF1dGlmaWVyPWR9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1uKDYpLk9wdGlvbnM7ZnVuY3Rpb24gcih0KXtpLmNhbGwodGhpcyx0LFwiaHRtbFwiKSwxPT09dGhpcy50ZW1wbGF0aW5nLmxlbmd0aCYmXCJhdXRvXCI9PT10aGlzLnRlbXBsYXRpbmdbMF0mJih0aGlzLnRlbXBsYXRpbmc9W1wiZGphbmdvXCIsXCJlcmJcIixcImhhbmRsZWJhcnNcIixcInBocFwiXSksdGhpcy5pbmRlbnRfaW5uZXJfaHRtbD10aGlzLl9nZXRfYm9vbGVhbihcImluZGVudF9pbm5lcl9odG1sXCIpLHRoaXMuaW5kZW50X2JvZHlfaW5uZXJfaHRtbD10aGlzLl9nZXRfYm9vbGVhbihcImluZGVudF9ib2R5X2lubmVyX2h0bWxcIiwhMCksdGhpcy5pbmRlbnRfaGVhZF9pbm5lcl9odG1sPXRoaXMuX2dldF9ib29sZWFuKFwiaW5kZW50X2hlYWRfaW5uZXJfaHRtbFwiLCEwKSx0aGlzLmluZGVudF9oYW5kbGViYXJzPXRoaXMuX2dldF9ib29sZWFuKFwiaW5kZW50X2hhbmRsZWJhcnNcIiwhMCksdGhpcy53cmFwX2F0dHJpYnV0ZXM9dGhpcy5fZ2V0X3NlbGVjdGlvbihcIndyYXBfYXR0cmlidXRlc1wiLFtcImF1dG9cIixcImZvcmNlXCIsXCJmb3JjZS1hbGlnbmVkXCIsXCJmb3JjZS1leHBhbmQtbXVsdGlsaW5lXCIsXCJhbGlnbmVkLW11bHRpcGxlXCIsXCJwcmVzZXJ2ZVwiLFwicHJlc2VydmUtYWxpZ25lZFwiXSksdGhpcy53cmFwX2F0dHJpYnV0ZXNfaW5kZW50X3NpemU9dGhpcy5fZ2V0X251bWJlcihcIndyYXBfYXR0cmlidXRlc19pbmRlbnRfc2l6ZVwiLHRoaXMuaW5kZW50X3NpemUpLHRoaXMuZXh0cmFfbGluZXJzPXRoaXMuX2dldF9hcnJheShcImV4dHJhX2xpbmVyc1wiLFtcImhlYWRcIixcImJvZHlcIixcIi9odG1sXCJdKSx0aGlzLmlubGluZT10aGlzLl9nZXRfYXJyYXkoXCJpbmxpbmVcIixbXCJhXCIsXCJhYmJyXCIsXCJhcmVhXCIsXCJhdWRpb1wiLFwiYlwiLFwiYmRpXCIsXCJiZG9cIixcImJyXCIsXCJidXR0b25cIixcImNhbnZhc1wiLFwiY2l0ZVwiLFwiY29kZVwiLFwiZGF0YVwiLFwiZGF0YWxpc3RcIixcImRlbFwiLFwiZGZuXCIsXCJlbVwiLFwiZW1iZWRcIixcImlcIixcImlmcmFtZVwiLFwiaW1nXCIsXCJpbnB1dFwiLFwiaW5zXCIsXCJrYmRcIixcImtleWdlblwiLFwibGFiZWxcIixcIm1hcFwiLFwibWFya1wiLFwibWF0aFwiLFwibWV0ZXJcIixcIm5vc2NyaXB0XCIsXCJvYmplY3RcIixcIm91dHB1dFwiLFwicHJvZ3Jlc3NcIixcInFcIixcInJ1YnlcIixcInNcIixcInNhbXBcIixcInNlbGVjdFwiLFwic21hbGxcIixcInNwYW5cIixcInN0cm9uZ1wiLFwic3ViXCIsXCJzdXBcIixcInN2Z1wiLFwidGVtcGxhdGVcIixcInRleHRhcmVhXCIsXCJ0aW1lXCIsXCJ1XCIsXCJ2YXJcIixcInZpZGVvXCIsXCJ3YnJcIixcInRleHRcIixcImFjcm9ueW1cIixcImJpZ1wiLFwic3RyaWtlXCIsXCJ0dFwiXSksdGhpcy52b2lkX2VsZW1lbnRzPXRoaXMuX2dldF9hcnJheShcInZvaWRfZWxlbWVudHNcIixbXCJhcmVhXCIsXCJiYXNlXCIsXCJiclwiLFwiY29sXCIsXCJlbWJlZFwiLFwiaHJcIixcImltZ1wiLFwiaW5wdXRcIixcImtleWdlblwiLFwibGlua1wiLFwibWVudWl0ZW1cIixcIm1ldGFcIixcInBhcmFtXCIsXCJzb3VyY2VcIixcInRyYWNrXCIsXCJ3YnJcIixcIiFkb2N0eXBlXCIsXCI/eG1sXCIsXCJiYXNlZm9udFwiLFwiaXNpbmRleFwiXSksdGhpcy51bmZvcm1hdHRlZD10aGlzLl9nZXRfYXJyYXkoXCJ1bmZvcm1hdHRlZFwiLFtdKSx0aGlzLmNvbnRlbnRfdW5mb3JtYXR0ZWQ9dGhpcy5fZ2V0X2FycmF5KFwiY29udGVudF91bmZvcm1hdHRlZFwiLFtcInByZVwiLFwidGV4dGFyZWFcIl0pLHRoaXMudW5mb3JtYXR0ZWRfY29udGVudF9kZWxpbWl0ZXI9dGhpcy5fZ2V0X2NoYXJhY3RlcnMoXCJ1bmZvcm1hdHRlZF9jb250ZW50X2RlbGltaXRlclwiKSx0aGlzLmluZGVudF9zY3JpcHRzPXRoaXMuX2dldF9zZWxlY3Rpb24oXCJpbmRlbnRfc2NyaXB0c1wiLFtcIm5vcm1hbFwiLFwia2VlcFwiLFwic2VwYXJhdGVcIl0pfXIucHJvdG90eXBlPW5ldyBpLHQuZXhwb3J0cy5PcHRpb25zPXJ9LGZ1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1uKDkpLlRva2VuaXplcixyPW4oOSkuVE9LRU4sYT1uKDEzKS5EaXJlY3RpdmVzLG89bigxNCkuVGVtcGxhdGFibGVQYXR0ZXJuLHM9bigxMikuUGF0dGVybix1PXtUQUdfT1BFTjpcIlRLX1RBR19PUEVOXCIsVEFHX0NMT1NFOlwiVEtfVEFHX0NMT1NFXCIsQVRUUklCVVRFOlwiVEtfQVRUUklCVVRFXCIsRVFVQUxTOlwiVEtfRVFVQUxTXCIsVkFMVUU6XCJUS19WQUxVRVwiLENPTU1FTlQ6XCJUS19DT01NRU5UXCIsVEVYVDpcIlRLX1RFWFRcIixVTktOT1dOOlwiVEtfVU5LTk9XTlwiLFNUQVJUOnIuU1RBUlQsUkFXOnIuUkFXLEVPRjpyLkVPRn0sbD1uZXcgYSgvPFxcIS0tLywvLS0+LyksYz1mdW5jdGlvbih0LGUpe2kuY2FsbCh0aGlzLHQsZSksdGhpcy5fY3VycmVudF90YWdfbmFtZT1cIlwiO3ZhciBuPW5ldyBvKHRoaXMuX2lucHV0KS5yZWFkX29wdGlvbnModGhpcy5fb3B0aW9ucykscj1uZXcgcyh0aGlzLl9pbnB1dCk7aWYodGhpcy5fX3BhdHRlcm5zPXt3b3JkOm4udW50aWwoL1tcXG5cXHJcXHQgPF0vKSxzaW5nbGVfcXVvdGU6bi51bnRpbF9hZnRlcigvJy8pLGRvdWJsZV9xdW90ZTpuLnVudGlsX2FmdGVyKC9cIi8pLGF0dHJpYnV0ZTpuLnVudGlsKC9bXFxuXFxyXFx0ID0+XXxcXC8+LyksZWxlbWVudF9uYW1lOm4udW50aWwoL1tcXG5cXHJcXHQgPlxcL10vKSxoYW5kbGViYXJzX2NvbW1lbnQ6ci5zdGFydGluZ193aXRoKC97eyEtLS8pLnVudGlsX2FmdGVyKC8tLX19LyksaGFuZGxlYmFyczpyLnN0YXJ0aW5nX3dpdGgoL3t7LykudW50aWxfYWZ0ZXIoL319LyksaGFuZGxlYmFyc19vcGVuOnIudW50aWwoL1tcXG5cXHJcXHQgfV0vKSxoYW5kbGViYXJzX3Jhd19jbG9zZTpyLnVudGlsKC99fS8pLGNvbW1lbnQ6ci5zdGFydGluZ193aXRoKC88IS0tLykudW50aWxfYWZ0ZXIoLy0tPi8pLGNkYXRhOnIuc3RhcnRpbmdfd2l0aCgvPCFcXFtDREFUQVxcWy8pLnVudGlsX2FmdGVyKC9dXT4vKSxjb25kaXRpb25hbF9jb21tZW50OnIuc3RhcnRpbmdfd2l0aCgvPCFcXFsvKS51bnRpbF9hZnRlcigvXT4vKSxwcm9jZXNzaW5nOnIuc3RhcnRpbmdfd2l0aCgvPFxcPy8pLnVudGlsX2FmdGVyKC9cXD8+Lyl9LHRoaXMuX29wdGlvbnMuaW5kZW50X2hhbmRsZWJhcnMmJih0aGlzLl9fcGF0dGVybnMud29yZD10aGlzLl9fcGF0dGVybnMud29yZC5leGNsdWRlKFwiaGFuZGxlYmFyc1wiKSksdGhpcy5fdW5mb3JtYXR0ZWRfY29udGVudF9kZWxpbWl0ZXI9bnVsbCx0aGlzLl9vcHRpb25zLnVuZm9ybWF0dGVkX2NvbnRlbnRfZGVsaW1pdGVyKXt2YXIgYT10aGlzLl9pbnB1dC5nZXRfbGl0ZXJhbF9yZWdleHAodGhpcy5fb3B0aW9ucy51bmZvcm1hdHRlZF9jb250ZW50X2RlbGltaXRlcik7dGhpcy5fX3BhdHRlcm5zLnVuZm9ybWF0dGVkX2NvbnRlbnRfZGVsaW1pdGVyPXIubWF0Y2hpbmcoYSkudW50aWxfYWZ0ZXIoYSl9fTsoYy5wcm90b3R5cGU9bmV3IGkpLl9pc19jb21tZW50PWZ1bmN0aW9uKHQpe3JldHVybiExfSxjLnByb3RvdHlwZS5faXNfb3BlbmluZz1mdW5jdGlvbih0KXtyZXR1cm4gdC50eXBlPT09dS5UQUdfT1BFTn0sYy5wcm90b3R5cGUuX2lzX2Nsb3Npbmc9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC50eXBlPT09dS5UQUdfQ0xPU0UmJmUmJigoXCI+XCI9PT10LnRleHR8fFwiLz5cIj09PXQudGV4dCkmJlwiPFwiPT09ZS50ZXh0WzBdfHxcIn19XCI9PT10LnRleHQmJlwie1wiPT09ZS50ZXh0WzBdJiZcIntcIj09PWUudGV4dFsxXSl9LGMucHJvdG90eXBlLl9yZXNldD1mdW5jdGlvbigpe3RoaXMuX2N1cnJlbnRfdGFnX25hbWU9XCJcIn0sYy5wcm90b3R5cGUuX2dldF9uZXh0X3Rva2VuPWZ1bmN0aW9uKHQsZSl7dmFyIG49bnVsbDt0aGlzLl9yZWFkV2hpdGVzcGFjZSgpO3ZhciBpPXRoaXMuX2lucHV0LnBlZWsoKTtyZXR1cm4gbnVsbD09PWk/dGhpcy5fY3JlYXRlX3Rva2VuKHUuRU9GLFwiXCIpOm49KG49KG49KG49KG49KG49KG49KG49KG49bnx8dGhpcy5fcmVhZF9vcGVuX2hhbmRsZWJhcnMoaSxlKSl8fHRoaXMuX3JlYWRfYXR0cmlidXRlKGksdCxlKSl8fHRoaXMuX3JlYWRfcmF3X2NvbnRlbnQoaSx0LGUpKXx8dGhpcy5fcmVhZF9jbG9zZShpLGUpKXx8dGhpcy5fcmVhZF9jb250ZW50X3dvcmQoaSkpfHx0aGlzLl9yZWFkX2NvbW1lbnRfb3JfY2RhdGEoaSkpfHx0aGlzLl9yZWFkX3Byb2Nlc3NpbmcoaSkpfHx0aGlzLl9yZWFkX29wZW4oaSxlKSl8fHRoaXMuX2NyZWF0ZV90b2tlbih1LlVOS05PV04sdGhpcy5faW5wdXQubmV4dCgpKX0sYy5wcm90b3R5cGUuX3JlYWRfY29tbWVudF9vcl9jZGF0YT1mdW5jdGlvbih0KXt2YXIgZT1udWxsLG49bnVsbCxpPW51bGw7cmV0dXJuXCI8XCI9PT10JiYoXCIhXCI9PT10aGlzLl9pbnB1dC5wZWVrKDEpJiYoKG49dGhpcy5fX3BhdHRlcm5zLmNvbW1lbnQucmVhZCgpKT8oaT1sLmdldF9kaXJlY3RpdmVzKG4pKSYmXCJzdGFydFwiPT09aS5pZ25vcmUmJihuKz1sLnJlYWRJZ25vcmVkKHRoaXMuX2lucHV0KSk6bj10aGlzLl9fcGF0dGVybnMuY2RhdGEucmVhZCgpKSxuJiYoKGU9dGhpcy5fY3JlYXRlX3Rva2VuKHUuQ09NTUVOVCxuKSkuZGlyZWN0aXZlcz1pKSksZX0sYy5wcm90b3R5cGUuX3JlYWRfcHJvY2Vzc2luZz1mdW5jdGlvbih0KXt2YXIgZT1udWxsLG49bnVsbDtpZihcIjxcIj09PXQpe3ZhciBpPXRoaXMuX2lucHV0LnBlZWsoMSk7XCIhXCIhPT1pJiZcIj9cIiE9PWl8fChuPShuPXRoaXMuX19wYXR0ZXJucy5jb25kaXRpb25hbF9jb21tZW50LnJlYWQoKSl8fHRoaXMuX19wYXR0ZXJucy5wcm9jZXNzaW5nLnJlYWQoKSksbiYmKChlPXRoaXMuX2NyZWF0ZV90b2tlbih1LkNPTU1FTlQsbikpLmRpcmVjdGl2ZXM9bnVsbCl9cmV0dXJuIGV9LGMucHJvdG90eXBlLl9yZWFkX29wZW49ZnVuY3Rpb24odCxlKXt2YXIgbj1udWxsLGk9bnVsbDtyZXR1cm4gZXx8XCI8XCI9PT10JiYobj10aGlzLl9pbnB1dC5uZXh0KCksXCIvXCI9PT10aGlzLl9pbnB1dC5wZWVrKCkmJihuKz10aGlzLl9pbnB1dC5uZXh0KCkpLG4rPXRoaXMuX19wYXR0ZXJucy5lbGVtZW50X25hbWUucmVhZCgpLGk9dGhpcy5fY3JlYXRlX3Rva2VuKHUuVEFHX09QRU4sbikpLGl9LGMucHJvdG90eXBlLl9yZWFkX29wZW5faGFuZGxlYmFycz1mdW5jdGlvbih0LGUpe3ZhciBuPW51bGwsaT1udWxsO3JldHVybiBlfHx0aGlzLl9vcHRpb25zLmluZGVudF9oYW5kbGViYXJzJiZcIntcIj09PXQmJlwie1wiPT09dGhpcy5faW5wdXQucGVlaygxKSYmKFwiIVwiPT09dGhpcy5faW5wdXQucGVlaygyKT8obj0obj10aGlzLl9fcGF0dGVybnMuaGFuZGxlYmFyc19jb21tZW50LnJlYWQoKSl8fHRoaXMuX19wYXR0ZXJucy5oYW5kbGViYXJzLnJlYWQoKSxpPXRoaXMuX2NyZWF0ZV90b2tlbih1LkNPTU1FTlQsbikpOihuPXRoaXMuX19wYXR0ZXJucy5oYW5kbGViYXJzX29wZW4ucmVhZCgpLGk9dGhpcy5fY3JlYXRlX3Rva2VuKHUuVEFHX09QRU4sbikpKSxpfSxjLnByb3RvdHlwZS5fcmVhZF9jbG9zZT1mdW5jdGlvbih0LGUpe3ZhciBuPW51bGwsaT1udWxsO3JldHVybiBlJiYoXCI8XCI9PT1lLnRleHRbMF0mJihcIj5cIj09PXR8fFwiL1wiPT09dCYmXCI+XCI9PT10aGlzLl9pbnB1dC5wZWVrKDEpKT8obj10aGlzLl9pbnB1dC5uZXh0KCksXCIvXCI9PT10JiYobis9dGhpcy5faW5wdXQubmV4dCgpKSxpPXRoaXMuX2NyZWF0ZV90b2tlbih1LlRBR19DTE9TRSxuKSk6XCJ7XCI9PT1lLnRleHRbMF0mJlwifVwiPT09dCYmXCJ9XCI9PT10aGlzLl9pbnB1dC5wZWVrKDEpJiYodGhpcy5faW5wdXQubmV4dCgpLHRoaXMuX2lucHV0Lm5leHQoKSxpPXRoaXMuX2NyZWF0ZV90b2tlbih1LlRBR19DTE9TRSxcIn19XCIpKSksaX0sYy5wcm90b3R5cGUuX3JlYWRfYXR0cmlidXRlPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1udWxsLHI9XCJcIjtpZihuJiZcIjxcIj09PW4udGV4dFswXSlpZihcIj1cIj09PXQpaT10aGlzLl9jcmVhdGVfdG9rZW4odS5FUVVBTFMsdGhpcy5faW5wdXQubmV4dCgpKTtlbHNlIGlmKCdcIic9PT10fHxcIidcIj09PXQpe3ZhciBhPXRoaXMuX2lucHV0Lm5leHQoKTthKz0nXCInPT09dD90aGlzLl9fcGF0dGVybnMuZG91YmxlX3F1b3RlLnJlYWQoKTp0aGlzLl9fcGF0dGVybnMuc2luZ2xlX3F1b3RlLnJlYWQoKSxpPXRoaXMuX2NyZWF0ZV90b2tlbih1LlZBTFVFLGEpfWVsc2Uocj10aGlzLl9fcGF0dGVybnMuYXR0cmlidXRlLnJlYWQoKSkmJihpPWUudHlwZT09PXUuRVFVQUxTP3RoaXMuX2NyZWF0ZV90b2tlbih1LlZBTFVFLHIpOnRoaXMuX2NyZWF0ZV90b2tlbih1LkFUVFJJQlVURSxyKSk7cmV0dXJuIGl9LGMucHJvdG90eXBlLl9pc19jb250ZW50X3VuZm9ybWF0dGVkPWZ1bmN0aW9uKHQpe3JldHVybi0xPT09dGhpcy5fb3B0aW9ucy52b2lkX2VsZW1lbnRzLmluZGV4T2YodCkmJigtMSE9PXRoaXMuX29wdGlvbnMuY29udGVudF91bmZvcm1hdHRlZC5pbmRleE9mKHQpfHwtMSE9PXRoaXMuX29wdGlvbnMudW5mb3JtYXR0ZWQuaW5kZXhPZih0KSl9LGMucHJvdG90eXBlLl9yZWFkX3Jhd19jb250ZW50PWZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1cIlwiO2lmKG4mJlwie1wiPT09bi50ZXh0WzBdKWk9dGhpcy5fX3BhdHRlcm5zLmhhbmRsZWJhcnNfcmF3X2Nsb3NlLnJlYWQoKTtlbHNlIGlmKGUudHlwZT09PXUuVEFHX0NMT1NFJiZcIjxcIj09PWUub3BlbmVkLnRleHRbMF0pe3ZhciByPWUub3BlbmVkLnRleHQuc3Vic3RyKDEpLnRvTG93ZXJDYXNlKCk7aWYoXCJzY3JpcHRcIj09PXJ8fFwic3R5bGVcIj09PXIpe3ZhciBhPXRoaXMuX3JlYWRfY29tbWVudF9vcl9jZGF0YSh0KTtpZihhKXJldHVybiBhLnR5cGU9dS5URVhULGE7aT10aGlzLl9pbnB1dC5yZWFkVW50aWwobmV3IFJlZ0V4cChcIjwvXCIrcitcIltcXFxcblxcXFxyXFxcXHQgXSo/PlwiLFwiaWdcIikpfWVsc2UgdGhpcy5faXNfY29udGVudF91bmZvcm1hdHRlZChyKSYmKGk9dGhpcy5faW5wdXQucmVhZFVudGlsKG5ldyBSZWdFeHAoXCI8L1wiK3IrXCJbXFxcXG5cXFxcclxcXFx0IF0qPz5cIixcImlnXCIpKSl9cmV0dXJuIGk/dGhpcy5fY3JlYXRlX3Rva2VuKHUuVEVYVCxpKTpudWxsfSxjLnByb3RvdHlwZS5fcmVhZF9jb250ZW50X3dvcmQ9ZnVuY3Rpb24odCl7dmFyIGU9XCJcIjtpZih0aGlzLl9vcHRpb25zLnVuZm9ybWF0dGVkX2NvbnRlbnRfZGVsaW1pdGVyJiZ0PT09dGhpcy5fb3B0aW9ucy51bmZvcm1hdHRlZF9jb250ZW50X2RlbGltaXRlclswXSYmKGU9dGhpcy5fX3BhdHRlcm5zLnVuZm9ybWF0dGVkX2NvbnRlbnRfZGVsaW1pdGVyLnJlYWQoKSksZXx8KGU9dGhpcy5fX3BhdHRlcm5zLndvcmQucmVhZCgpKSxlKXJldHVybiB0aGlzLl9jcmVhdGVfdG9rZW4odS5URVhULGUpfSx0LmV4cG9ydHMuVG9rZW5pemVyPWMsdC5leHBvcnRzLlRPS0VOPXV9XSksaT1bbixuKDE4KSxuKDE5KV0sdm9pZCAwPT09KHI9ZnVuY3Rpb24odCl7dmFyIGU9bigxOCksaT1uKDE5KTtyZXR1cm57aHRtbF9iZWF1dGlmeTpmdW5jdGlvbih0LG4pe3JldHVybiBhKHQsbixlLmpzX2JlYXV0aWZ5LGkuY3NzX2JlYXV0aWZ5KX19fS5hcHBseShlLGkpKXx8KHQuZXhwb3J0cz1yKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNyk7dC5leHBvcnRzPShpLmRlZmF1bHR8fGkpLnRlbXBsYXRlKHsxOmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz1udWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30scz10LmxhbWJkYSx1PXQuZXNjYXBlRXhwcmVzc2lvbixsPXQubG9va3VwUHJvcGVydHl8fGZ1bmN0aW9uKHQsZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpcmV0dXJuIHRbZV19O3JldHVyblwiIDxkaXYgXCIrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwobyxcImhlYWRlclwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPiBcIisobnVsbCE9KGE9bChuLFwicmVwZWF0XCIpLmNhbGwobyxudWxsIT0oYT1udWxsIT1lP2woZSxcImdyb3VwXCIpOmUpP2woYSxcImluZGVudExldmVsXCIpOmEse25hbWU6XCJyZXBlYXRcIixoYXNoOnt9LGZuOnQucHJvZ3JhbSgyLHIsMCksaW52ZXJzZTp0Lm5vb3AsZGF0YTpyfSkpP2E6XCJcIikrXCIgPGRpdiBcIisobnVsbCE9KGE9bChuLFwiY2xhc3NcIikuY2FsbChvLFwidGltZS1jb250YWluZXJcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48c3Bhbj5cIit1KHMobnVsbCE9ZT9sKGUsXCJ0aW1lXCIpOmUsZSkpK1wiPC9zcGFuPjxzcGFuPlwiK3UocyhudWxsIT1lP2woZSxcImZyb21cIik6ZSxlKSkrXCI8L3NwYW4+PC9kaXY+PC9kaXY+IFwifSwyOmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGE7cmV0dXJuXCIgPGRpdiBcIisobnVsbCE9KGE9KHQubG9va3VwUHJvcGVydHl8fGZ1bmN0aW9uKHQsZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpcmV0dXJuIHRbZV19KShuLFwiY2xhc3NcIikuY2FsbChudWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30sXCJuZXN0aW5nLWxldmVsXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PC9kaXY+IFwifSw0OmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz1udWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30scz10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIiA8ZGl2IFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJpY29uLWNvbnRhaW5lclwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjxzcGFuIFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8scyhuLFwiY29uY2F0XCIpLmNhbGwobyxcImljb24gaWNvbi1cIixudWxsIT1lP3MoZSxcImljb25cIik6ZSx7bmFtZTpcImNvbmNhdFwiLGhhc2g6e30sZGF0YTpyfSkse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PC9zcGFuPjwvZGl2PiBcIn0sY29tcGlsZXI6WzgsXCI+PSA0LjMuMFwiXSxtYWluOmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz1udWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30scz10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm4obnVsbCE9KGE9cyhuLFwiaWZcIikuY2FsbChvLG51bGwhPWU/cyhlLFwiZGlzcGxheUhlYWRlclwiKTplLHtuYW1lOlwiaWZcIixoYXNoOnt9LGZuOnQucHJvZ3JhbSgxLHIsMCksaW52ZXJzZTp0Lm5vb3AsZGF0YTpyfSkpP2E6XCJcIikrXCIgPGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLHMobixcImNvbmNhdFwiKS5jYWxsKG8sbnVsbCE9ZT9zKGUsXCJ0eXBlXCIpOmUsXCIgbG9nLWl0ZW1cIix7bmFtZTpcImNvbmNhdFwiLGhhc2g6e30sZGF0YTpyfSkse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+IFwiKyhudWxsIT0oYT1zKG4sXCJyZXBlYXRcIikuY2FsbChvLG51bGwhPShhPW51bGwhPWU/cyhlLFwiZ3JvdXBcIik6ZSk/cyhhLFwiaW5kZW50TGV2ZWxcIik6YSx7bmFtZTpcInJlcGVhdFwiLGhhc2g6e30sZm46dC5wcm9ncmFtKDIsciwwKSxpbnZlcnNlOnQubm9vcCxkYXRhOnJ9KSk/YTpcIlwiKStcIiBcIisobnVsbCE9KGE9cyhuLFwiaWZcIikuY2FsbChvLG51bGwhPWU/cyhlLFwiaWNvblwiKTplLHtuYW1lOlwiaWZcIixoYXNoOnt9LGZuOnQucHJvZ3JhbSg0LHIsMCksaW52ZXJzZTp0Lm5vb3AsZGF0YTpyfSkpP2E6XCJcIikrXCIgPGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiY291bnQtY29udGFpbmVyIGhpZGRlblwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImNvdW50XCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PC9kaXY+PC9kaXY+PGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwibG9nLWNvbnRlbnQtd3JhcHBlclwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImxvZy1jb250ZW50XCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+XCIrKG51bGwhPShhPXQubGFtYmRhKG51bGwhPWU/cyhlLFwibXNnXCIpOmUsZSkpP2E6XCJcIikrXCI8L2Rpdj48L2Rpdj48L2Rpdj5cIn0sdXNlRGF0YTohMH0pfSxmdW5jdGlvbih0LGUsbil7KGU9big4KSghMSkpLnB1c2goW3QuaSxcIi5fY29uc29sZS1jb250YWluZXIgLl9sb2dzLWNvbnRhaW5lcnskb3k6YXV0bzskd29zOnRvdWNoOyRoOjEwMCU7JHBvOnJlbGF0aXZlOyR3YzpzY3JvbGwtcG9zaXRpb259Ll9jb25zb2xlLWNvbnRhaW5lciAuX2Zha2UtbG9nc3skcG86YWJzb2x1dGU7JGw6MDskdDowOyRwZTpub25lOyR2OmhpZGRlbjskdzoxMDAlfS5fY29uc29sZS1jb250YWluZXIgLl9mYWtlLWxvZ3MgKnskbzpoaWRkZW47JGM6IzAwMDskcG86c3RhdGljfS5fY29uc29sZS1jb250YWluZXIgLl9sb2dzeyRmczoxNHB4OyRwdDoxcHh9Ll9jb25zb2xlLWNvbnRhaW5lciAuX2xvZy1jb250YWluZXJ7JGJzaTpjb250ZW50LWJveH0uX2NvbnNvbGUtY29udGFpbmVyIC5faGVhZGVyeyR3czpub3dyYXA7JGQ6ZmxleDskZnM6MTJweDskYzp2YXIoLS1saW5rLWNvbG9yKTskYnQ6MXB4IHNvbGlkIHRyYW5zcGFyZW50OyRiYjoxcHggc29saWQgdmFyKC0tYm9yZGVyKX0uX2NvbnNvbGUtY29udGFpbmVyIC5faGVhZGVyIC5fdGltZS1jb250YWluZXJ7JG94OmF1dG87JHdvczp0b3VjaDskcDozcHggMTBweH0uX2NvbnNvbGUtY29udGFpbmVyIC5fbmVzdGluZy1sZXZlbHskdzoxNHB4OyRmc2g6MDskbXQ6LTFweDskbWI6LTFweDskcG86cmVsYXRpdmU7JGJyOjFweCBzb2xpZCB2YXIoLS1ib3JkZXIpfS5fY29uc29sZS1jb250YWluZXIgLl9uZXN0aW5nLWxldmVsLl9ncm91cC1jbG9zZWQ6OmJlZm9yZXskY286Jyd9Ll9jb25zb2xlLWNvbnRhaW5lciAuX25lc3RpbmctbGV2ZWw6OmJlZm9yZXskYmI6MXB4IHNvbGlkIHZhcigtLWJvcmRlcik7JHBvOmFic29sdXRlOyR0OjA7JGw6MDskbWw6MTAwJTskdzo1cHg7JGg6MTAwJTskYnNpOmJvcmRlci1ib3h9Ll9jb25zb2xlLWNvbnRhaW5lciAuX2xvZy1pdGVteyRwbzpyZWxhdGl2ZTskZDpmbGV4OyRidDoxcHggc29saWQgdHJhbnNwYXJlbnQ7JGJiOjFweCBzb2xpZCB2YXIoLS1ib3JkZXIpOyRtdDotMXB4OyRtaDoyNHB4OyRjOnZhcigtLWZvcmVncm91bmQpfS5fY29uc29sZS1jb250YWluZXIgLl9sb2ctaXRlbTphZnRlcnskY286Jyc7JGQ6YmxvY2s7JGNsOmJvdGh9Ll9jb25zb2xlLWNvbnRhaW5lciAuX2xvZy1pdGVtIGF7JGM6dmFyKC0tbGluay1jb2xvcikhaW1wb3J0YW50fS5fY29uc29sZS1jb250YWluZXIgLl9sb2ctaXRlbSAuX2ljb24tY29udGFpbmVyeyRwdDoycHg7JG06MCAtNnB4IDAgMTBweH0uX2NvbnNvbGUtY29udGFpbmVyIC5fbG9nLWl0ZW0gLl9pY29uLWNvbnRhaW5lciAuX2ljb257JGxoOjIwcHg7JGZzOjEycHg7JGM6dmFyKC0tZm9yZWdyb3VuZCk7JHBvOnJlbGF0aXZlfS5fY29uc29sZS1jb250YWluZXIgLl9sb2ctaXRlbSAuX2ljb24tY29udGFpbmVyIC5faWNvbi1jYXJldC1kb3duLC5fY29uc29sZS1jb250YWluZXIgLl9sb2ctaXRlbSAuX2ljb24tY29udGFpbmVyIC5faWNvbi1jYXJldC1yaWdodHskbDotMnB4fS5fY29uc29sZS1jb250YWluZXIgLl9sb2ctaXRlbSAuX2ljb24tY29udGFpbmVyIC5faWNvbi1lcnJvcnskYzojZWYzODQyfS5fY29uc29sZS1jb250YWluZXIgLl9sb2ctaXRlbSAuX2ljb24tY29udGFpbmVyIC5faWNvbi13YXJueyR0Oi0xcHg7JGM6I2U4YTQwMH0uX2NvbnNvbGUtY29udGFpbmVyIC5fbG9nLWl0ZW0gLl9jb3VudHskYjp2YXIoLS10ZXh0LWNvbG9yKTskcDoycHggNHB4OyRjOiMwMDA7JGJyYToxMHB4OyRmczoxMnB4OyRmOmxlZnQ7JG06MnB4IC02cHggMCAxMHB4fS5fY29uc29sZS1jb250YWluZXIgLl9sb2ctaXRlbSAuX2xvZy1jb250ZW50LXdyYXBwZXJ7JGZsOjE7JG86aGlkZGVufS5fY29uc29sZS1jb250YWluZXIgLl9sb2ctaXRlbSAuX2xvZy1jb250ZW50eyRwOjNweCAwOyRtOjAgMTBweDskb3g6YXV0bzskd29zOnRvdWNoOyR3czpwcmUtd3JhcDstd2Via2l0LXVzZXItc2VsZWN0OnRleHQ7LW1vei11c2VyLXNlbGVjdDp0ZXh0Oy1tcy11c2VyLXNlbGVjdDp0ZXh0OyR1czp0ZXh0fS5fY29uc29sZS1jb250YWluZXIgLl9sb2ctaXRlbSAuX2xvZy1jb250ZW50ICp7LXdlYmtpdC11c2VyLXNlbGVjdDp0ZXh0Oy1tb3otdXNlci1zZWxlY3Q6dGV4dDstbXMtdXNlci1zZWxlY3Q6dGV4dDskdXM6dGV4dH0uX2NvbnNvbGUtY29udGFpbmVyIC5fbG9nLWl0ZW0uX2h0bWwgdGFibGUsLl9jb25zb2xlLWNvbnRhaW5lciAuX2xvZy1pdGVtLl90YWJsZSB0YWJsZXskdzoxMDAlOyRiYzpjb2xsYXBzZTskbzpoaWRkZW47JGM6dmFyKC0tZm9yZWdyb3VuZCl9Ll9jb25zb2xlLWNvbnRhaW5lciAuX2xvZy1pdGVtLl9odG1sIHRhYmxlIHRoLC5fY29uc29sZS1jb250YWluZXIgLl9sb2ctaXRlbS5fdGFibGUgdGFibGUgdGh7JGI6dmFyKC0tZGFya2VyLWJhY2tncm91bmQpfS5fY29uc29sZS1jb250YWluZXIgLl9sb2ctaXRlbS5faHRtbCB0YWJsZSB0ZCwuX2NvbnNvbGUtY29udGFpbmVyIC5fbG9nLWl0ZW0uX2h0bWwgdGFibGUgdGgsLl9jb25zb2xlLWNvbnRhaW5lciAuX2xvZy1pdGVtLl90YWJsZSB0YWJsZSB0ZCwuX2NvbnNvbGUtY29udGFpbmVyIC5fbG9nLWl0ZW0uX3RhYmxlIHRhYmxlIHRoeyRibzoxcHggc29saWQgdmFyKC0tYm9yZGVyKTskcDozcHggMTBweH0uX2NvbnNvbGUtY29udGFpbmVyIC5fbG9nLWl0ZW0uX2h0bWwgdGFibGUgdHI6bnRoLWNoaWxkKGV2ZW4pLC5fY29uc29sZS1jb250YWluZXIgLl9sb2ctaXRlbS5fdGFibGUgdGFibGUgdHI6bnRoLWNoaWxkKGV2ZW4peyRiOnZhcigtLWNvbnRyYXN0KX0uX2NvbnNvbGUtY29udGFpbmVyIC5fbG9nLWl0ZW0uX2Vycm9yeyR6OjUwOyRiOnZhcigtLWNvbnNvbGUtZXJyb3ItYmFja2dyb3VuZCk7JGM6dmFyKC0tY29uc29sZS1lcnJvci1mb3JlZ3JvdW5kKTskYnQ6MXB4IHNvbGlkIHZhcigtLWNvbnNvbGUtZXJyb3ItYm9yZGVyKTskYmI6MXB4IHNvbGlkIHZhcigtLWNvbnNvbGUtZXJyb3ItYm9yZGVyKX0uX2NvbnNvbGUtY29udGFpbmVyIC5fbG9nLWl0ZW0uX2Vycm9yIC5fc3RhY2t7JHBsOjEuMmVtOyR3czpub3dyYXB9Ll9jb25zb2xlLWNvbnRhaW5lciAuX2xvZy1pdGVtLl9lcnJvciAuX2NvdW50eyRiOnZhcigtLWNvbnNvbGUtZXJyb3ItZm9yZWdyb3VuZCl9Ll9jb25zb2xlLWNvbnRhaW5lciAuX2xvZy1pdGVtLl9kZWJ1Z3skejoyMH0uX2NvbnNvbGUtY29udGFpbmVyIC5fbG9nLWl0ZW0uX2lucHV0e2JvcmRlci1ib3R0b20tY29sb3I6dHJhbnNwYXJlbnR9Ll9jb25zb2xlLWNvbnRhaW5lciAuX2xvZy1pdGVtLl93YXJueyR6OjQwOyRjOnZhcigtLWNvbnNvbGUtd2Fybi1mb3JlZ3JvdW5kKTskYjp2YXIoLS1jb25zb2xlLXdhcm4tYmFja2dyb3VuZCk7JGJ0OjFweCBzb2xpZCB2YXIoLS1jb25zb2xlLXdhcm4tYm9yZGVyKTskYmI6MXB4IHNvbGlkIHZhcigtLWNvbnNvbGUtd2Fybi1ib3JkZXIpfS5fY29uc29sZS1jb250YWluZXIgLl9sb2ctaXRlbS5fd2FybiAuX2NvdW50eyRiOiNlOGE0MDB9Ll9jb25zb2xlLWNvbnRhaW5lciAuX2xvZy1pdGVtLl9pbmZveyR6OjMwfS5fY29uc29sZS1jb250YWluZXIgLl9sb2ctaXRlbS5fZ3JvdXAsLl9jb25zb2xlLWNvbnRhaW5lciAuX2xvZy1pdGVtLl9ncm91cENvbGxhcHNlZHskZnc6NzAwfVwiLFwiXCJdKSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4peyhlPW4oOCkoITEpKS5wdXNoKFt0LmksXCIuX2NvbnRhaW5lciAuX2NvbnNvbGUtY29udGFpbmVyeyRwdDo0MHB4OyRwYjoyNHB4fS5fY29uc29sZS1jb250YWluZXJ7JHc6MTAwJTskaDoxMDAlfS5fY29uc29sZS1jb250YWluZXIuX2pzLWlucHV0LWhpZGRlbnskcGI6MH0uX2NvbnNvbGUtY29udGFpbmVyIC5fY29udHJvbHskcG86YWJzb2x1dGU7JHc6MTAwJTskaDo0MHB4OyRsOjA7JHQ6MDskY3U6ZGVmYXVsdDskZnM6MDskcDoxMHB4IDEwcHggMTBweCAzNXB4OyRiOnZhcigtLWRhcmtlci1iYWNrZ3JvdW5kKTskYzp2YXIoLS1wcmltYXJ5KTskbGg6MjBweDskYmI6MXB4IHNvbGlkIHZhcigtLWJvcmRlcil9Ll9jb25zb2xlLWNvbnRhaW5lciAuX2NvbnRyb2wgLl9pY29uLWNsZWFyLC5fY29uc29sZS1jb250YWluZXIgLl9jb250cm9sIC5faWNvbi1zZWFyY2h7JGQ6aW5saW5lLWJsb2NrOyRwOjEwcHg7JGZzOjE2cHg7JHBvOmFic29sdXRlOyR0OjFweDskY3U6cG9pbnRlcjskdHI6Y29sb3IgLjNzfS5fY29uc29sZS1jb250YWluZXIgLl9jb250cm9sIC5faWNvbi1jbGVhcjphY3RpdmUsLl9jb25zb2xlLWNvbnRhaW5lciAuX2NvbnRyb2wgLl9pY29uLXNlYXJjaDphY3RpdmV7JGM6dmFyKC0tYWNjZW50KX0uX2NvbnNvbGUtY29udGFpbmVyIC5fY29udHJvbCAuX2ljb24tY2xlYXJ7cGFkZGluZy1yaWdodDowOyRsOjB9Ll9jb25zb2xlLWNvbnRhaW5lciAuX2NvbnRyb2wgLl9pY29uLXNlYXJjaHtyaWdodDowfS5fY29uc29sZS1jb250YWluZXIgLl9jb250cm9sIC5fZmlsdGVyeyRjdTpwb2ludGVyOyRmczoxMnB4OyRoOjIwcHg7JGQ6aW5saW5lLWJsb2NrOyRtOjAgMnB4OyRwOjAgNHB4OyRsaDoyMHB4OyR0cjpiYWNrZ3JvdW5kIC4zcyxjb2xvciAuM3N9Ll9jb25zb2xlLWNvbnRhaW5lciAuX2NvbnRyb2wgLl9maWx0ZXIuX2FjdGl2ZXskYjp2YXIoLS1oaWdobGlnaHQpOyRjOnZhcigtLXNlbGVjdC1mb3JlZ3JvdW5kKX0uX2NvbnNvbGUtY29udGFpbmVyIC5fY29udHJvbCAuX3NlYXJjaC1rZXl3b3JkeyRwbzphYnNvbHV0ZTskbGg6MjBweDttYXgtd2lkdGg6ODBweDskbzpoaWRkZW47cmlnaHQ6NDBweDskZnM6MTRweDt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzfS5fY29uc29sZS1jb250YWluZXIgLl9qcy1pbnB1dHskcGU6bm9uZTskcG86YWJzb2x1dGU7JHo6MTAwOyRsOjA7Ym90dG9tOjA7JHc6MTAwJTskYnQ6MXB4IHNvbGlkIHZhcigtLWJvcmRlcik7JGg6MjRweH0uX2NvbnNvbGUtY29udGFpbmVyIC5fanMtaW5wdXQgLl9pY29uLWFycm93LXJpZ2h0eyRsaDoyM3B4OyRjOnZhcigtLWFjY2VudCk7JHBvOmFic29sdXRlOyRsOjEwcHg7JHQ6MDskejoxMH0uX2NvbnNvbGUtY29udGFpbmVyIC5fanMtaW5wdXQuX2FjdGl2ZXskaDoxMDAlOyRwdDo0MHB4OyRwYjo0MHB4OyRidDpub25lfS5fY29uc29sZS1jb250YWluZXIgLl9qcy1pbnB1dC5fYWN0aXZlIC5faWNvbi1hcnJvdy1yaWdodHskZDpub25lfS5fY29uc29sZS1jb250YWluZXIgLl9qcy1pbnB1dC5fYWN0aXZlIHRleHRhcmVheyRwbDoxMHB4fS5fY29uc29sZS1jb250YWluZXIgLl9qcy1pbnB1dCAuX2J1dHRvbnN7JGQ6bm9uZTskcG86YWJzb2x1dGU7JGw6MDtib3R0b206MDskdzoxMDAlOyRoOjQwcHg7JGM6dmFyKC0tcHJpbWFyeSk7JGI6dmFyKC0tZGFya2VyLWJhY2tncm91bmQpOyRmczoxMnB4OyRidDoxcHggc29saWQgdmFyKC0tYm9yZGVyKX0uX2NvbnNvbGUtY29udGFpbmVyIC5fanMtaW5wdXQgLl9idXR0b25zIC5fYnV0dG9ueyRwZTphbGw7JGN1OnBvaW50ZXI7JHc6NTAlOyRkOmlubGluZS1ibG9jazskdGE6Y2VudGVyOyRicjoxcHggc29saWQgdmFyKC0tYm9yZGVyKTskaDo0MHB4OyRsaDo0MHB4OyR0cjpiYWNrZ3JvdW5kIC4zcyxjb2xvciAuM3N9Ll9jb25zb2xlLWNvbnRhaW5lciAuX2pzLWlucHV0IC5fYnV0dG9ucyAuX2J1dHRvbjpsYXN0LWNoaWxkeyRicjpub25lfS5fY29uc29sZS1jb250YWluZXIgLl9qcy1pbnB1dCAuX2J1dHRvbnMgLl9idXR0b246YWN0aXZleyRjOnZhcigtLXNlbGVjdC1mb3JlZ3JvdW5kKTskYjp2YXIoLS1oaWdobGlnaHQpfS5fY29uc29sZS1jb250YWluZXIgLl9qcy1pbnB1dCB0ZXh0YXJlYXskcGU6YWxsOyRwOjNweCAxMHB4OyRwbDoyNXB4OyRvdTowOyRibzpub25lOyRmczoxNHB4OyR3OjEwMCU7JGg6MTAwJTstd2Via2l0LXVzZXItc2VsZWN0OnRleHQ7LW1vei11c2VyLXNlbGVjdDp0ZXh0Oy1tcy11c2VyLXNlbGVjdDp0ZXh0OyR1czp0ZXh0O3Jlc2l6ZTpub25lOyRjOnZhcigtLXByaW1hcnkpOyRiOnZhcigtLWJhY2tncm91bmQpfVwiLFwiXCJdKSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNyk7dC5leHBvcnRzPShpLmRlZmF1bHR8fGkpLnRlbXBsYXRlKHtjb21waWxlcjpbOCxcIj49IDQuMy4wXCJdLG1haW46ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgYSxvPW51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxzPXQubG9va3VwUHJvcGVydHl8fGZ1bmN0aW9uKHQsZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpcmV0dXJuIHRbZV19O3JldHVyblwiPGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiY29uc29sZS1jb250YWluZXJcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48ZGl2IFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJjb250cm9sXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PHNwYW4gXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImljb24tY2xlYXIgY2xlYXItY29uc29sZVwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjwvc3Bhbj4gPHNwYW4gXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImZpbHRlciBhY3RpdmVcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKSsnIGRhdGEtZmlsdGVyPVwiYWxsXCI+QWxsPC9zcGFuPiA8c3BhbiAnKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJmaWx0ZXJcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKSsnIGRhdGEtZmlsdGVyPVwiZXJyb3JcIj5FcnJvcjwvc3Bhbj4gPHNwYW4gJysobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiZmlsdGVyXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrJyBkYXRhLWZpbHRlcj1cIndhcm5cIj5XYXJuaW5nPC9zcGFuPiA8c3BhbiAnKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJmaWx0ZXJcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKSsnIGRhdGEtZmlsdGVyPVwiaW5mb1wiPkluZm88L3NwYW4+IDxzcGFuICcrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcInNlYXJjaC1rZXl3b3JkXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PC9zcGFuPiA8c3BhbiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiaWNvbi1zZWFyY2ggc2VhcmNoXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PC9zcGFuPjwvZGl2PjxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImxvZ3MtY29udGFpbmVyXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwidG9wLXNwYWNlXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PC9kaXY+PHVsIFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJmYWtlLWxvZ3NcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48L3VsPjx1bCBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwibG9nc1wiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjwvdWw+PGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiYm90dG9tLXNwYWNlXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PC9kaXY+PC9kaXY+PGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwianMtaW5wdXRcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48ZGl2IFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJidXR0b25zXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiYnV0dG9uIGNhbmNlbFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPkNhbmNlbDwvZGl2PjxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImJ1dHRvbiBleGVjdXRlXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+RXhlY3V0ZTwvZGl2PjwvZGl2PjxzcGFuIFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJpY29uLWFycm93LXJpZ2h0XCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PC9zcGFuPiA8dGV4dGFyZWE+PC90ZXh0YXJlYT48L2Rpdj48L2Rpdj5cIn0sdXNlRGF0YTohMH0pfSxmdW5jdGlvbih0LGUsbil7KGU9big4KSghMSkpLnB1c2goW3QuaSxcIiNfbmV0d29ya3skcHQ6MzZweH0jX25ldHdvcmsgLl90aXRsZXskcG86YWJzb2x1dGU7JHc6MTAwJTskaDozNnB4OyRsOjA7JHQ6MDskYjp2YXIoLS1kYXJrZXItYmFja2dyb3VuZCk7JHA6MTBweDskYzp2YXIoLS1wcmltYXJ5KTskaDozNnB4OyRiYjoxcHggc29saWQgdmFyKC0tYm9yZGVyKX0jX25ldHdvcmsgLl90aXRsZSAuX2J0bnskZDpmbGV4OyRtbDo1cHg7JGY6cmlnaHQ7JGM6dmFyKC0tcHJpbWFyeSk7JHc6MThweDskaDoxOHB4O2p1c3RpZnktY29udGVudDpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyOyRmczoxNnB4OyRjdTpwb2ludGVyOyR0cjpjb2xvciAuM3N9I19uZXR3b3JrIC5fdGl0bGUgLl9idG4uX3NlYXJjaC1rZXl3b3JkeyR3OmF1dG87bWF4LXdpZHRoOjgwcHg7JGZzOjE0cHg7JG86aGlkZGVuO3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXM7JGQ6aW5saW5lLWJsb2NrfSNfbmV0d29yayAuX3RpdGxlIC5fYnRuOmFjdGl2ZXskYzp2YXIoLS1hY2NlbnQpfSNfbmV0d29yayAuX3JlcXVlc3RzeyRveTphdXRvOyR3b3M6dG91Y2g7JGg6MTAwJTskYmI6MXB4IHNvbGlkIHZhcigtLWJvcmRlcik7JG1iOjEwcHh9I19uZXR3b3JrIC5fcmVxdWVzdHMgbGl7JGQ6ZmxleDskdzoxMDAlOyRjdTpwb2ludGVyOyRiYjoxcHggc29saWQgdmFyKC0tYm9yZGVyKTskaDo0MXB4OyRjOnZhcigtLWZvcmVncm91bmQpOyR3czpub3dyYXB9I19uZXR3b3JrIC5fcmVxdWVzdHMgbGkuX2Vycm9yIHNwYW57JGM6dmFyKC0tY29uc29sZS1lcnJvci1mb3JlZ3JvdW5kKX0jX25ldHdvcmsgLl9yZXF1ZXN0cyBsaSBzcGFueyRkOmJsb2NrOyRsaDo0MHB4OyRoOjQwcHg7JHA6MCA1cHg7JGZzOjEycHg7dmVydGljYWwtYWxpZ246dG9wO3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXM7JG86aGlkZGVufSNfbmV0d29yayAuX3JlcXVlc3RzIGxpIC5fbmFtZXskZmw6MTskcGw6MTBweH0jX25ldHdvcmsgLl9yZXF1ZXN0cyBsaSAuX3N0YXR1c3skdzo0MHB4fSNfbmV0d29yayAuX3JlcXVlc3RzIGxpIC5fbWV0aG9kLCNfbmV0d29yayAuX3JlcXVlc3RzIGxpIC5fdHlwZXskdzo1MHB4fSNfbmV0d29yayAuX3JlcXVlc3RzIGxpIC5fc2l6ZXskdzo3MHB4fSNfbmV0d29yayAuX3JlcXVlc3RzIGxpIC5fdGltZXskdzo2MHB4O3BhZGRpbmctcmlnaHQ6MTBweH0jX25ldHdvcmsgLl9yZXF1ZXN0cyBsaTpudGgtY2hpbGQoZXZlbil7JGI6dmFyKC0tY29udHJhc3QpfSNfbmV0d29yayAuX2RldGFpbHskcG86YWJzb2x1dGU7JHc6MTAwJTskaDoxMDAlOyRsOjA7JHQ6MDskejoxMDskZDpub25lOyRwYjo0MHB4OyRiOnZhcigtLWJhY2tncm91bmQpfSNfbmV0d29yayAuX2RldGFpbCAuX2h0dHB7JG95OmF1dG87JHdvczp0b3VjaDskaDoxMDAlfSNfbmV0d29yayAuX2RldGFpbCAuX2h0dHAgLl9icmVhZGNydW1ieyRiOnZhcigtLWRhcmtlci1iYWNrZ3JvdW5kKTskYzp2YXIoLS1wcmltYXJ5KTstd2Via2l0LXVzZXItc2VsZWN0OnRleHQ7LW1vei11c2VyLXNlbGVjdDp0ZXh0Oy1tcy11c2VyLXNlbGVjdDp0ZXh0OyR1czp0ZXh0OyRtYjoxMHB4O3dvcmQtYnJlYWs6YnJlYWstYWxsOyRwOjEwcHg7JGZzOjE2cHg7JG1oOjQwcHg7JGJiOjFweCBzb2xpZCB2YXIoLS1ib3JkZXIpfSNfbmV0d29yayAuX2RldGFpbCAuX2h0dHAgLl9zZWN0aW9ueyRidDoxcHggc29saWQgdmFyKC0tYm9yZGVyKTskYmI6MXB4IHNvbGlkIHZhcigtLWJvcmRlcik7JG1iOjEwcHh9I19uZXR3b3JrIC5fZGV0YWlsIC5faHR0cCAuX3NlY3Rpb24gaDJ7JGI6dmFyKC0tZGFya2VyLWJhY2tncm91bmQpOyRjOnZhcigtLXByaW1hcnkpOyRwOjEwcHg7JGZzOjE0cHh9I19uZXR3b3JrIC5fZGV0YWlsIC5faHR0cCAuX3NlY3Rpb24gdGFibGV7JGM6dmFyKC0tZm9yZWdyb3VuZCl9I19uZXR3b3JrIC5fZGV0YWlsIC5faHR0cCAuX3NlY3Rpb24gdGFibGUgKnstd2Via2l0LXVzZXItc2VsZWN0OnRleHQ7LW1vei11c2VyLXNlbGVjdDp0ZXh0Oy1tcy11c2VyLXNlbGVjdDp0ZXh0OyR1czp0ZXh0fSNfbmV0d29yayAuX2RldGFpbCAuX2h0dHAgLl9zZWN0aW9uIHRhYmxlIHRkeyRmczoxMnB4OyRwOjVweCAxMHB4O3dvcmQtYnJlYWs6YnJlYWstYWxsfSNfbmV0d29yayAuX2RldGFpbCAuX2h0dHAgLl9zZWN0aW9uIHRhYmxlIC5fa2V5eyR3czpub3dyYXA7JGZ3OjcwMDskYzp2YXIoLS1hY2NlbnQpfSNfbmV0d29yayAuX2RldGFpbCAuX2h0dHAgLl9kYXRhLCNfbmV0d29yayAuX2RldGFpbCAuX2h0dHAgLl9yZXNwb25zZXstd2Via2l0LXVzZXItc2VsZWN0OnRleHQ7LW1vei11c2VyLXNlbGVjdDp0ZXh0Oy1tcy11c2VyLXNlbGVjdDp0ZXh0OyR1czp0ZXh0OyRveDphdXRvOyR3b3M6dG91Y2g7JHA6MTBweDskZnM6MTJweDskbWI6MTBweDskd3M6cHJlLXdyYXA7JGJ0OjFweCBzb2xpZCB2YXIoLS1ib3JkZXIpOyRjOnZhcigtLWZvcmVncm91bmQpOyRiYjoxcHggc29saWQgdmFyKC0tYm9yZGVyKX0jX25ldHdvcmsgLl9kZXRhaWwgLl9iYWNreyRwbzphYnNvbHV0ZTskbDowO2JvdHRvbTowOyRjOnZhcigtLWZvcmVncm91bmQpOyR3OjEwMCU7JGJ0OjFweCBzb2xpZCB2YXIoLS1ib3JkZXIpOyRiOnZhcigtLWRhcmtlci1iYWNrZ3JvdW5kKTskZDpibG9jazskaDo0MHB4OyRsaDo0MHB4O3RleHQtZGVjb3JhdGlvbjpub25lOyR0YTpjZW50ZXI7JG10OjEwcHg7JHRyOmJhY2tncm91bmQgLjNzOyRjdTpwb2ludGVyfSNfbmV0d29yayAuX2RldGFpbCAuX2JhY2s6YWN0aXZleyRjOnZhcigtLXNlbGVjdC1mb3JlZ3JvdW5kKX1cIixcIlwiXSksdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDcpO3QuZXhwb3J0cz0oaS5kZWZhdWx0fHxpKS50ZW1wbGF0ZSh7Y29tcGlsZXI6WzgsXCI+PSA0LjMuMFwiXSxtYWluOmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz1udWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30scz10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIjxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcInRpdGxlXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+UmVxdWVzdDxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImJ0biBjbGVhci1yZXF1ZXN0XCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PHNwYW4gXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImljb24tY2xlYXJcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48L3NwYW4+PC9kaXY+PC9kaXY+PHVsIFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJyZXF1ZXN0c1wiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjwvdWw+PGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiZGV0YWlsXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PC9kaXY+XCJ9LHVzZURhdGE6ITB9KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNyk7dC5leHBvcnRzPShpLmRlZmF1bHR8fGkpLnRlbXBsYXRlKHsxOmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIiA8cHJlIFwiKyhudWxsIT0oYT1vKG4sXCJjbGFzc1wiKS5jYWxsKG51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxcImRhdGFcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj5cIit0LmVzY2FwZUV4cHJlc3Npb24odC5sYW1iZGEobnVsbCE9ZT9vKGUsXCJkYXRhXCIpOmUsZSkpK1wiPC9wcmU+IFwifSwzOmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIiBcIisobnVsbCE9KGE9byhuLFwiZWFjaFwiKS5jYWxsKG51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxudWxsIT1lP28oZSxcInJlcUhlYWRlcnNcIik6ZSx7bmFtZTpcImVhY2hcIixoYXNoOnt9LGZuOnQucHJvZ3JhbSg0LHIsMCksaW52ZXJzZTp0Lm5vb3AsZGF0YTpyfSkpP2E6XCJcIikrXCIgXCJ9LDQ6ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgYSxvPXQubGFtYmRhLHM9dC5lc2NhcGVFeHByZXNzaW9uLHU9dC5sb29rdXBQcm9wZXJ0eXx8ZnVuY3Rpb24odCxlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSlyZXR1cm4gdFtlXX07cmV0dXJuXCIgPHRyPjx0ZCBcIisobnVsbCE9KGE9dShuLFwiY2xhc3NcIikuY2FsbChudWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30sXCJrZXlcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj5cIitzKG8ociYmdShyLFwia2V5XCIpLGUpKStcIjwvdGQ+PHRkPlwiK3MobyhlLGUpKStcIjwvdGQ+PC90cj4gXCJ9LDY6ZnVuY3Rpb24odCxlLG4saSxyKXtyZXR1cm5cIiA8dHI+PHRkPkVtcHR5PC90ZD48L3RyPiBcIn0sODpmdW5jdGlvbih0LGUsbixpLHIpe3ZhciBhLG89dC5sb29rdXBQcm9wZXJ0eXx8ZnVuY3Rpb24odCxlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSlyZXR1cm4gdFtlXX07cmV0dXJuXCIgXCIrKG51bGwhPShhPW8obixcImVhY2hcIikuY2FsbChudWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30sbnVsbCE9ZT9vKGUsXCJyZXNIZWFkZXJzXCIpOmUse25hbWU6XCJlYWNoXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oNCxyLDApLGludmVyc2U6dC5ub29wLGRhdGE6cn0pKT9hOlwiXCIpK1wiIFwifSwxMDpmdW5jdGlvbih0LGUsbixpLHIpe3ZhciBhLG89dC5sb29rdXBQcm9wZXJ0eXx8ZnVuY3Rpb24odCxlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSlyZXR1cm4gdFtlXX07cmV0dXJuXCIgPHByZSBcIisobnVsbCE9KGE9byhuLFwiY2xhc3NcIikuY2FsbChudWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30sXCJyZXNwb25zZVwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPlwiK3QuZXNjYXBlRXhwcmVzc2lvbih0LmxhbWJkYShudWxsIT1lP28oZSxcInJlc1R4dFwiKTplLGUpKStcIjwvcHJlPiBcIn0sY29tcGlsZXI6WzgsXCI+PSA0LjMuMFwiXSxtYWluOmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz1udWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30scz10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIjxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImh0dHBcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48ZGl2IFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJicmVhZGNydW1iXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+XCIrdC5lc2NhcGVFeHByZXNzaW9uKHQubGFtYmRhKG51bGwhPWU/cyhlLFwidXJsXCIpOmUsZSkpK1wiPC9kaXY+IFwiKyhudWxsIT0oYT1zKG4sXCJpZlwiKS5jYWxsKG8sbnVsbCE9ZT9zKGUsXCJkYXRhXCIpOmUse25hbWU6XCJpZlwiLGhhc2g6e30sZm46dC5wcm9ncmFtKDEsciwwKSxpbnZlcnNlOnQubm9vcCxkYXRhOnJ9KSk/YTpcIlwiKStcIiA8ZGl2IFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJzZWN0aW9uXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PGgyPlJlcXVlc3QgSGVhZGVyczwvaDI+PHRhYmxlIFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJoZWFkZXJzXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PHRib2R5PiBcIisobnVsbCE9KGE9cyhuLFwiaWZcIikuY2FsbChvLG51bGwhPWU/cyhlLFwicmVxSGVhZGVyc1wiKTplLHtuYW1lOlwiaWZcIixoYXNoOnt9LGZuOnQucHJvZ3JhbSgzLHIsMCksaW52ZXJzZTp0LnByb2dyYW0oNixyLDApLGRhdGE6cn0pKT9hOlwiXCIpK1wiIDwvdGJvZHk+PC90YWJsZT48aDI+UmVzcG9uc2UgSGVhZGVyczwvaDI+PHRhYmxlIFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJoZWFkZXJzXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PHRib2R5PiBcIisobnVsbCE9KGE9cyhuLFwiaWZcIikuY2FsbChvLG51bGwhPWU/cyhlLFwicmVzSGVhZGVyc1wiKTplLHtuYW1lOlwiaWZcIixoYXNoOnt9LGZuOnQucHJvZ3JhbSg4LHIsMCksaW52ZXJzZTp0LnByb2dyYW0oNixyLDApLGRhdGE6cn0pKT9hOlwiXCIpK1wiIDwvdGJvZHk+PC90YWJsZT48L2Rpdj4gXCIrKG51bGwhPShhPXMobixcImlmXCIpLmNhbGwobyxudWxsIT1lP3MoZSxcInJlc1R4dFwiKTplLHtuYW1lOlwiaWZcIixoYXNoOnt9LGZuOnQucHJvZ3JhbSgxMCxyLDApLGludmVyc2U6dC5ub29wLGRhdGE6cn0pKT9hOlwiXCIpK1wiIDwvZGl2PjxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImJhY2tcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj5CYWNrIHRvIHRoZSBMaXN0PC9kaXY+XCJ9LHVzZURhdGE6ITB9KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNyk7dC5leHBvcnRzPShpLmRlZmF1bHR8fGkpLnRlbXBsYXRlKHsxOmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIiBcIisobnVsbCE9KGE9byhuLFwiZWFjaFwiKS5jYWxsKG51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxudWxsIT1lP28oZSxcInJlcXVlc3RzXCIpOmUse25hbWU6XCJlYWNoXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oMixyLDApLGludmVyc2U6dC5ub29wLGRhdGE6cn0pKT9hOlwiXCIpK1wiIFwifSwyOmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz1udWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30scz10LmxhbWJkYSx1PXQuZXNjYXBlRXhwcmVzc2lvbixsPXQubG9va3VwUHJvcGVydHl8fGZ1bmN0aW9uKHQsZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpcmV0dXJuIHRbZV19O3JldHVybicgPGxpIGNsYXNzPVwiZXJ1ZGEtcmVxdWVzdCAnKyhudWxsIT0oYT1sKG4sXCJpZlwiKS5jYWxsKG8sbnVsbCE9ZT9sKGUsXCJoYXNFcnJcIik6ZSx7bmFtZTpcImlmXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oMyxyLDApLGludmVyc2U6dC5ub29wLGRhdGE6cn0pKT9hOlwiXCIpKydcIiBkYXRhLWlkPVwiJyt1KHMociYmbChyLFwia2V5XCIpLGUpKSsnXCI+PHNwYW4gJysobnVsbCE9KGE9bChuLFwiY2xhc3NcIikuY2FsbChvLFwibmFtZVwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPlwiK3UocyhudWxsIT1lP2woZSxcIm5hbWVcIik6ZSxlKSkrXCI8L3NwYW4+PHNwYW4gXCIrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwobyxcInN0YXR1c1wiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPlwiK3UocyhudWxsIT1lP2woZSxcInN0YXR1c1wiKTplLGUpKStcIjwvc3Bhbj48c3BhbiBcIisobnVsbCE9KGE9bChuLFwiY2xhc3NcIikuY2FsbChvLFwibWV0aG9kXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+XCIrdShzKG51bGwhPWU/bChlLFwibWV0aG9kXCIpOmUsZSkpK1wiPC9zcGFuPjxzcGFuIFwiKyhudWxsIT0oYT1sKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJ0eXBlXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+XCIrdShzKG51bGwhPWU/bChlLFwic3ViVHlwZVwiKTplLGUpKStcIjwvc3Bhbj48c3BhbiBcIisobnVsbCE9KGE9bChuLFwiY2xhc3NcIikuY2FsbChvLFwic2l6ZVwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPlwiK3UocyhudWxsIT1lP2woZSxcInNpemVcIik6ZSxlKSkrXCI8L3NwYW4+PHNwYW4gXCIrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwobyxcInRpbWVcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj5cIit1KHMobnVsbCE9ZT9sKGUsXCJkaXNwbGF5VGltZVwiKTplLGUpKStcIjwvc3Bhbj48L2xpPiBcIn0sMzpmdW5jdGlvbih0LGUsbixpLHIpe3JldHVyblwiZXJ1ZGEtZXJyb3JcIn0sNTpmdW5jdGlvbih0LGUsbixpLHIpe3ZhciBhO3JldHVyblwiIDxsaT48c3BhbiBcIisobnVsbCE9KGE9KHQubG9va3VwUHJvcGVydHl8fGZ1bmN0aW9uKHQsZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpcmV0dXJuIHRbZV19KShuLFwiY2xhc3NcIikuY2FsbChudWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30sXCJuYW1lXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+RW1wdHk8L3NwYW4+PC9saT4gXCJ9LGNvbXBpbGVyOls4LFwiPj0gNC4zLjBcIl0sbWFpbjpmdW5jdGlvbih0LGUsbixpLHIpe3ZhciBhLG89dC5sb29rdXBQcm9wZXJ0eXx8ZnVuY3Rpb24odCxlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSlyZXR1cm4gdFtlXX07cmV0dXJuIG51bGwhPShhPW8obixcImlmXCIpLmNhbGwobnVsbCE9ZT9lOnQubnVsbENvbnRleHR8fHt9LG51bGwhPWU/byhlLFwicmVxdWVzdHNcIik6ZSx7bmFtZTpcImlmXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oMSxyLDApLGludmVyc2U6dC5wcm9ncmFtKDUsciwwKSxkYXRhOnJ9KSk/YTpcIlwifSx1c2VEYXRhOiEwfSl9LGZ1bmN0aW9uKHQsZSxuKXsoZT1uKDgpKCExKSkucHVzaChbdC5pLFwiLl9lbGVtZW50cy1oaWdobGlnaHR7JGQ6bm9uZTskcG86YWJzb2x1dGU7JGw6MDtyaWdodDowOyR6Oi0xMDA7JHBlOm5vbmUhaW1wb3J0YW50fS5fZWxlbWVudHMtaGlnaGxpZ2h0ICp7JHBlOm5vbmUhaW1wb3J0YW50fS5fZWxlbWVudHMtaGlnaGxpZ2h0IC5faW5kaWNhdG9ye29wYWNpdHk6LjU7JHBvOmFic29sdXRlOyRsOjA7cmlnaHQ6MDskdzoxMDAlOyRoOjEwMCV9Ll9lbGVtZW50cy1oaWdobGlnaHQgLl9tYXJnaW57JHBvOmFic29sdXRlOyRiOiNlODkyNWI7JHo6MTAwfS5fZWxlbWVudHMtaGlnaGxpZ2h0IC5fYm9yZGVyeyRwbzphYnNvbHV0ZTskbDowO3JpZ2h0OjA7JHc6MTAwJTskaDoxMDAlOyRiOiNmZmNkN2M7JHo6MjAwfS5fZWxlbWVudHMtaGlnaGxpZ2h0IC5fcGFkZGluZ3skcG86YWJzb2x1dGU7JGI6Izg2YWY3NjskejozMDB9Ll9lbGVtZW50cy1oaWdobGlnaHQgLl9jb250ZW50eyRwbzphYnNvbHV0ZTskYjojNWU4OGMxOyR6OjQwMH0uX2VsZW1lbnRzLWhpZ2hsaWdodCAuX3NpemV7JHBvOmFic29sdXRlOyR0OjA7JGw6MDskYjojZmZmOyRjOiMyMjI7JGZzOjEycHg7JGg6MjVweDskbGg6MjVweDskdGE6Y2VudGVyOyRwOjAgNXB4OyR3czpub3dyYXA7JG94OmhpZGRlbjskYnM6MCAycHggMnB4IDAgcmdiYSgwLDAsMCwuMDUpLDAgMXB4IDRweCAwIHJnYmEoMCwwLDAsLjA4KSwwIDNweCAxcHggLTJweCByZ2JhKDAsMCwwLC4yKX1cIixcIlwiXSksdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDcpO3QuZXhwb3J0cz0oaS5kZWZhdWx0fHxpKS50ZW1wbGF0ZSh7Y29tcGlsZXI6WzgsXCI+PSA0LjMuMFwiXSxtYWluOmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz1udWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30scz10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIjxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImVsZW1lbnRzLWhpZ2hsaWdodFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImluZGljYXRvclwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcIm1hcmdpblwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjwvZGl2PjxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImJvcmRlclwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjwvZGl2PjxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcInBhZGRpbmdcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48L2Rpdj48ZGl2IFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJjb250ZW50XCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PC9kaXY+PC9kaXY+PGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwic2l6ZVwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjwvZGl2PjwvZGl2PlwifSx1c2VEYXRhOiEwfSl9LGZ1bmN0aW9uKHQsZSxuKXsoZT1uKDgpKCExKSkucHVzaChbdC5pLFwiI19lbGVtZW50c3skcGI6NDBweDskZnM6MTRweH0jX2VsZW1lbnRzIC5fc2hvdy1hcmVheyRveTphdXRvOyR3b3M6dG91Y2g7JGg6MTAwJX0jX2VsZW1lbnRzIC5fcGFyZW50c3skb3g6YXV0bzskd29zOnRvdWNoOyRiOnZhcigtLWRhcmtlci1iYWNrZ3JvdW5kKTskYzp2YXIoLS1wcmltYXJ5KTskcDoxMHB4OyR3czpub3dyYXA7JGJiOjFweCBzb2xpZCB2YXIoLS1ib3JkZXIpOyRjdTpwb2ludGVyOyRmczoxMnB4fSNfZWxlbWVudHMgLl9wYXJlbnRzIGxpeyRkOmlubGluZS1ibG9ja30jX2VsZW1lbnRzIC5fcGFyZW50cyBsaSAuX3BhcmVudHskZDppbmxpbmUtYmxvY2t9I19lbGVtZW50cyAuX3BhcmVudHMgbGk6bGFzdC1jaGlsZHttYXJnaW4tcmlnaHQ6MH0jX2VsZW1lbnRzIC5fcGFyZW50cyAuX2ljb24tYXJyb3ctcmlnaHR7JGZzOjhweDskcG86cmVsYXRpdmU7JHQ6LTFweH0jX2VsZW1lbnRzIC5fYnJlYWRjcnVtYnskYjp2YXIoLS1kYXJrZXItYmFja2dyb3VuZCk7JGM6dmFyKC0tcHJpbWFyeSk7LXdlYmtpdC11c2VyLXNlbGVjdDp0ZXh0Oy1tb3otdXNlci1zZWxlY3Q6dGV4dDstbXMtdXNlci1zZWxlY3Q6dGV4dDskdXM6dGV4dDskbWI6MTBweDt3b3JkLWJyZWFrOmJyZWFrLWFsbDskcDoxMHB4OyRmczoxNnB4OyRtaDo0MHB4OyRiYjoxcHggc29saWQgdmFyKC0tYm9yZGVyKTskY3U6cG9pbnRlcjskdHI6YmFja2dyb3VuZCAuM3MsY29sb3IgLjNzfSNfZWxlbWVudHMgLl9icmVhZGNydW1iOmFjdGl2ZXskYjp2YXIoLS1oaWdobGlnaHQpOyRjOnZhcigtLXNlbGVjdC1mb3JlZ3JvdW5kKX0jX2VsZW1lbnRzIC5fYnJlYWRjcnVtYjphY3RpdmUgc3BhbnskYzp2YXIoLS1zZWxlY3QtZm9yZWdyb3VuZCl9I19lbGVtZW50cyAuX3NlY3Rpb257JGJiOjFweCBzb2xpZCB2YXIoLS1ib3JkZXIpOyRjOnZhcigtLWZvcmVncm91bmQpOyRtYjoxMHB4fSNfZWxlbWVudHMgLl9zZWN0aW9uIGgyeyRjOnZhcigtLXByaW1hcnkpOyRiOnZhcigtLWRhcmtlci1iYWNrZ3JvdW5kKTskYnQ6MXB4IHNvbGlkIHZhcigtLWJvcmRlcik7JHA6MTBweDskZnM6MTRweDskdHI6YmFja2dyb3VuZCAuM3N9I19lbGVtZW50cyAuX3NlY3Rpb24gaDIgLl9idG57JGQ6ZmxleDskbWw6NXB4OyRmOnJpZ2h0OyRjOnZhcigtLXByaW1hcnkpOyR3OjE4cHg7JGg6MThweDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjskZnM6MTZweDskY3U6cG9pbnRlcjskdHI6Y29sb3IgLjNzfSNfZWxlbWVudHMgLl9zZWN0aW9uIGgyIC5fYnRuLl9zZWFyY2gta2V5d29yZHskdzphdXRvO21heC13aWR0aDo4MHB4OyRmczoxNHB4OyRvOmhpZGRlbjt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzOyRkOmlubGluZS1ibG9ja30jX2VsZW1lbnRzIC5fc2VjdGlvbiBoMiAuX2J0bjphY3RpdmV7JGM6dmFyKC0tYWNjZW50KX0jX2VsZW1lbnRzIC5fc2VjdGlvbiBoMi5fYWN0aXZlLWVmZmVjdHskY3U6cG9pbnRlcn0jX2VsZW1lbnRzIC5fc2VjdGlvbiBoMi5fYWN0aXZlLWVmZmVjdDphY3RpdmV7JGI6dmFyKC0taGlnaGxpZ2h0KTskYzp2YXIoLS1zZWxlY3QtZm9yZWdyb3VuZCl9I19lbGVtZW50cyAuX2NoaWxkcmVueyRiOnZhcigtLWRhcmtlci1iYWNrZ3JvdW5kKTskYzp2YXIoLS1mb3JlZ3JvdW5kKTskbWI6MTBweCFpbXBvcnRhbnQ7JGJiOjFweCBzb2xpZCB2YXIoLS1ib3JkZXIpfSNfZWxlbWVudHMgLl9jaGlsZHJlbiBsaXskb3g6YXV0bzskd29zOnRvdWNoOyRjdTpkZWZhdWx0OyRwOjEwcHg7JGJ0OjFweCBzb2xpZCB2YXIoLS1ib3JkZXIpOyR3czpub3dyYXA7JHRyOmJhY2tncm91bmQgLjNzLGNvbG9yIC4zc30jX2VsZW1lbnRzIC5fY2hpbGRyZW4gbGkgc3BhbnskdHI6Y29sb3IgLjNzfSNfZWxlbWVudHMgLl9jaGlsZHJlbiBsaS5fYWN0aXZlLWVmZmVjdHskY3U6cG9pbnRlcn0jX2VsZW1lbnRzIC5fY2hpbGRyZW4gbGkuX2FjdGl2ZS1lZmZlY3Q6YWN0aXZleyRiOnZhcigtLWhpZ2hsaWdodCk7JGM6dmFyKC0tc2VsZWN0LWZvcmVncm91bmQpfSNfZWxlbWVudHMgLl9jaGlsZHJlbiBsaS5fYWN0aXZlLWVmZmVjdDphY3RpdmUgc3BhbnskYzp2YXIoLS1zZWxlY3QtZm9yZWdyb3VuZCl9I19lbGVtZW50cyAuX2F0dHJpYnV0ZXN7JGZzOjEycHh9I19lbGVtZW50cyAuX2F0dHJpYnV0ZXMgYXskYzp2YXIoLS1saW5rLWNvbG9yKX0jX2VsZW1lbnRzIC5fYXR0cmlidXRlcyAuX3RhYmxlLXdyYXBwZXJ7JG94OmF1dG87JHdvczp0b3VjaH0jX2VsZW1lbnRzIC5fYXR0cmlidXRlcyB0YWJsZSB0ZHskcDo1cHggMTBweH0jX2VsZW1lbnRzIC5fdGV4dC1jb250ZW50eyRiOiNmZmZ9I19lbGVtZW50cyAuX3RleHQtY29udGVudCAuX2NvbnRlbnR7JG94OmF1dG87JHdvczp0b3VjaDskcDoxMHB4fSNfZWxlbWVudHMgLl9zdHlsZS1jb2xvcnskcG86cmVsYXRpdmU7JHQ6MXB4OyR3OjEwcHg7JGg6MTBweDskYnJhOjUwJTttYXJnaW4tcmlnaHQ6MnB4OyRibzoxcHggc29saWQgdmFyKC0tYm9yZGVyKTskZDppbmxpbmUtYmxvY2t9I19lbGVtZW50cyAuX2JveC1tb2RlbHskb3g6YXV0bzskd29zOnRvdWNoOyRjOiMyMjI7JGZzOjEycHg7JHA6MTBweDskdGE6Y2VudGVyOyR3czpub3dyYXA7JGJiOjFweCBzb2xpZCB2YXIoLS1jb2xvcil9I19lbGVtZW50cyAuX2JveC1tb2RlbCAuX2xhYmVseyRwbzphYnNvbHV0ZTskbWw6M3B4OyRwOjAgMnB4fSNfZWxlbWVudHMgLl9ib3gtbW9kZWwgLl9ib3R0b20sI19lbGVtZW50cyAuX2JveC1tb2RlbCAuX2xlZnQsI19lbGVtZW50cyAuX2JveC1tb2RlbCAuX3JpZ2h0LCNfZWxlbWVudHMgLl9ib3gtbW9kZWwgLl90b3B7JGQ6aW5saW5lLWJsb2NrfSNfZWxlbWVudHMgLl9ib3gtbW9kZWwgLl9sZWZ0LCNfZWxlbWVudHMgLl9ib3gtbW9kZWwgLl9yaWdodHt2ZXJ0aWNhbC1hbGlnbjptaWRkbGV9I19lbGVtZW50cyAuX2JveC1tb2RlbCAuX2JvcmRlciwjX2VsZW1lbnRzIC5fYm94LW1vZGVsIC5fY29udGVudCwjX2VsZW1lbnRzIC5fYm94LW1vZGVsIC5fbWFyZ2luLCNfZWxlbWVudHMgLl9ib3gtbW9kZWwgLl9wYWRkaW5nLCNfZWxlbWVudHMgLl9ib3gtbW9kZWwgLl9wb3NpdGlvbnskcG86cmVsYXRpdmU7JGI6I2ZmZjskZDppbmxpbmUtYmxvY2s7JHRhOmNlbnRlcjt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7JHA6M3B4OyRtOjNweH0jX2VsZW1lbnRzIC5fYm94LW1vZGVsIC5fcG9zaXRpb257JGJvOjFweCBncmV5IGRvdHRlZH0jX2VsZW1lbnRzIC5fYm94LW1vZGVsIC5fbWFyZ2lueyRibzoxcHggZGFzaGVkOyRiOnJnYmEoMjQ2LDE3OCwxMDcsLjY2KX0jX2VsZW1lbnRzIC5fYm94LW1vZGVsIC5fYm9yZGVyeyRibzoxcHggIzAwMCBzb2xpZDskYjpyZ2JhKDI1NSwyMjksMTUzLC42Nil9I19lbGVtZW50cyAuX2JveC1tb2RlbCAuX3BhZGRpbmd7JGJvOjFweCBncmV5IGRhc2hlZDskYjpyZ2JhKDE0NywxOTYsMTI1LC41NSl9I19lbGVtZW50cyAuX2JveC1tb2RlbCAuX2NvbnRlbnR7JGJvOjFweCBncmV5IHNvbGlkO21pbi13aWR0aDoxMDBweDskYjpyZ2JhKDExMSwxNjgsMjIwLC42Nil9I19lbGVtZW50cyAuX2NvbXB1dGVkLXN0eWxleyRmczoxMnB4fSNfZWxlbWVudHMgLl9jb21wdXRlZC1zdHlsZSBheyRjOnZhcigtLWxpbmstY29sb3IpfSNfZWxlbWVudHMgLl9jb21wdXRlZC1zdHlsZSAuX3RhYmxlLXdyYXBwZXJ7JG95OmF1dG87JHdvczp0b3VjaDttYXgtaGVpZ2h0OjIwMHB4OyRidDoxcHggc29saWQgdmFyKC0tYm9yZGVyKX0jX2VsZW1lbnRzIC5fY29tcHV0ZWQtc3R5bGUgdGFibGUgdGR7JHA6NXB4IDEwcHh9I19lbGVtZW50cyAuX2NvbXB1dGVkLXN0eWxlIHRhYmxlIHRkLl9rZXl7JHdzOm5vd3JhcDskYzp2YXIoLS12YXItY29sb3IpfSNfZWxlbWVudHMgLl9zdHlsZXN7JGZzOjEycHh9I19lbGVtZW50cyAuX3N0eWxlcyAuX3N0eWxlLXdyYXBwZXJ7JHA6MTBweH0jX2VsZW1lbnRzIC5fc3R5bGVzIC5fc3R5bGUtd3JhcHBlciAuX3N0eWxlLXJ1bGVzeyRibzoxcHggc29saWQgdmFyKC0tYm9yZGVyKTskcDoxMHB4OyRtYjoxMHB4fSNfZWxlbWVudHMgLl9zdHlsZXMgLl9zdHlsZS13cmFwcGVyIC5fc3R5bGUtcnVsZXMgLl9ydWxleyRwbDoyZW07d29yZC1icmVhazpicmVhay1hbGx9I19lbGVtZW50cyAuX3N0eWxlcyAuX3N0eWxlLXdyYXBwZXIgLl9zdHlsZS1ydWxlcyAuX3J1bGUgYXskYzp2YXIoLS1saW5rLWNvbG9yKX0jX2VsZW1lbnRzIC5fc3R5bGVzIC5fc3R5bGUtd3JhcHBlciAuX3N0eWxlLXJ1bGVzIC5fcnVsZSBzcGFueyRjOnZhcigtLXZhci1jb2xvcil9I19lbGVtZW50cyAuX3N0eWxlcyAuX3N0eWxlLXdyYXBwZXIgLl9zdHlsZS1ydWxlczpsYXN0LWNoaWxkeyRtYjowfSNfZWxlbWVudHMgLl9saXN0ZW5lcnN7JGZzOjEycHh9I19lbGVtZW50cyAuX2xpc3RlbmVycyAuX2xpc3RlbmVyLXdyYXBwZXJ7JHA6MTBweH0jX2VsZW1lbnRzIC5fbGlzdGVuZXJzIC5fbGlzdGVuZXItd3JhcHBlciAuX2xpc3RlbmVyeyRtYjoxMHB4OyRvOmhpZGRlbjskYm86MXB4IHNvbGlkIHZhcigtLWJvcmRlcil9I19lbGVtZW50cyAuX2xpc3RlbmVycyAuX2xpc3RlbmVyLXdyYXBwZXIgLl9saXN0ZW5lciAuX2xpc3RlbmVyLXR5cGV7JHA6MTBweDskYjp2YXIoLS1kYXJrZXItYmFja2dyb3VuZCk7JGM6dmFyKC0tcHJpbWFyeSl9I19lbGVtZW50cyAuX2xpc3RlbmVycyAuX2xpc3RlbmVyLXdyYXBwZXIgLl9saXN0ZW5lciAuX2xpc3RlbmVyLWNvbnRlbnQgbGl7JG94OmF1dG87JHdvczp0b3VjaDskcDoxMHB4OyRidDpub25lfSNfZWxlbWVudHMgLl9ib3R0b20tYmFyeyRoOjQwcHg7JGI6dmFyKC0tZGFya2VyLWJhY2tncm91bmQpOyRwbzphYnNvbHV0ZTskbDowO2JvdHRvbTowOyR3OjEwMCU7JGZzOjA7JGJ0OjFweCBzb2xpZCB2YXIoLS1ib3JkZXIpfSNfZWxlbWVudHMgLl9ib3R0b20tYmFyIC5fYnRueyRjdTpwb2ludGVyOyR0YTpjZW50ZXI7JGM6dmFyKC0tcHJpbWFyeSk7JGZzOjE0cHg7JGxoOjQwcHg7JHc6MjUlOyRkOmlubGluZS1ibG9jazskdHI6YmFja2dyb3VuZCAuM3MsY29sb3IgLjNzfSNfZWxlbWVudHMgLl9ib3R0b20tYmFyIC5fYnRuOmFjdGl2ZXskYjp2YXIoLS1oaWdobGlnaHQpOyRjOnZhcigtLXNlbGVjdC1mb3JlZ3JvdW5kKX0jX2VsZW1lbnRzIC5fYm90dG9tLWJhciAuX2J0bi5fYWN0aXZleyRjOnZhcigtLWFjY2VudCl9XCIsXCJcIl0pLHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big3KTt0LmV4cG9ydHM9KGkuZGVmYXVsdHx8aSkudGVtcGxhdGUoezE6ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgYSxvPW51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxzPXQubG9va3VwUHJvcGVydHl8fGZ1bmN0aW9uKHQsZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpcmV0dXJuIHRbZV19O3JldHVyblwiIDx1bCBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwicGFyZW50c1wiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPiBcIisobnVsbCE9KGE9cyhuLFwiZWFjaFwiKS5jYWxsKG8sbnVsbCE9ZT9zKGUsXCJwYXJlbnRzXCIpOmUse25hbWU6XCJlYWNoXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oMixyLDApLGludmVyc2U6dC5ub29wLGRhdGE6cn0pKT9hOlwiXCIpK1wiIDwvdWw+IFwifSwyOmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz1udWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30scz10LmxhbWJkYSx1PXQubG9va3VwUHJvcGVydHl8fGZ1bmN0aW9uKHQsZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpcmV0dXJuIHRbZV19O3JldHVyblwiIDxsaT48ZGl2IFwiKyhudWxsIT0oYT11KG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJwYXJlbnRcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKSsnIGRhdGEtaWR4PVwiJyt0LmVzY2FwZUV4cHJlc3Npb24ocyhudWxsIT1lP3UoZSxcImlkeFwiKTplLGUpKSsnXCI+JysobnVsbCE9KGE9cyhudWxsIT1lP3UoZSxcInRleHRcIik6ZSxlKSk/YTpcIlwiKStcIjwvZGl2PjxzcGFuIFwiKyhudWxsIT0oYT11KG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJpY29uLWFycm93LXJpZ2h0XCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PC9zcGFuPjwvbGk+IFwifSw0OmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz1udWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30scz10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIiA8dWwgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImNoaWxkcmVuXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+IFwiKyhudWxsIT0oYT1zKG4sXCJlYWNoXCIpLmNhbGwobyxudWxsIT1lP3MoZSxcImNoaWxkcmVuXCIpOmUse25hbWU6XCJlYWNoXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oNSxyLDApLGludmVyc2U6dC5ub29wLGRhdGE6cn0pKT9hOlwiXCIpK1wiIDwvdWw+IFwifSw1OmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz1udWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30scz10LmxhbWJkYSx1PXQubG9va3VwUHJvcGVydHl8fGZ1bmN0aW9uKHQsZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpcmV0dXJuIHRbZV19O3JldHVybicgPGxpIGNsYXNzPVwiZXJ1ZGEtY2hpbGQgJysobnVsbCE9KGE9dShuLFwiaWZcIikuY2FsbChvLG51bGwhPWU/dShlLFwiaXNDbXRcIik6ZSx7bmFtZTpcImlmXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oNixyLDApLGludmVyc2U6dC5ub29wLGRhdGE6cn0pKT9hOlwiXCIpK1wiIFwiKyhudWxsIT0oYT11KG4sXCJpZlwiKS5jYWxsKG8sbnVsbCE9ZT91KGUsXCJpc0VsXCIpOmUse25hbWU6XCJpZlwiLGhhc2g6e30sZm46dC5wcm9ncmFtKDgsciwwKSxpbnZlcnNlOnQubm9vcCxkYXRhOnJ9KSk/YTpcIlwiKSsnXCIgZGF0YS1pZHg9XCInK3QuZXNjYXBlRXhwcmVzc2lvbihzKG51bGwhPWU/dShlLFwiaWR4XCIpOmUsZSkpKydcIj4nKyhudWxsIT0oYT1zKG51bGwhPWU/dShlLFwidGV4dFwiKTplLGUpKT9hOlwiXCIpK1wiPC9saT4gXCJ9LDY6ZnVuY3Rpb24odCxlLG4saSxyKXtyZXR1cm5cImVydWRhLWdyZWVuXCJ9LDg6ZnVuY3Rpb24odCxlLG4saSxyKXtyZXR1cm5cImVydWRhLWFjdGl2ZS1lZmZlY3RcIn0sMTA6ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgYSxvPXQubG9va3VwUHJvcGVydHl8fGZ1bmN0aW9uKHQsZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpcmV0dXJuIHRbZV19O3JldHVyblwiIFwiKyhudWxsIT0oYT1vKG4sXCJlYWNoXCIpLmNhbGwobnVsbCE9ZT9lOnQubnVsbENvbnRleHR8fHt9LG51bGwhPWU/byhlLFwiYXR0cmlidXRlc1wiKTplLHtuYW1lOlwiZWFjaFwiLGhhc2g6e30sZm46dC5wcm9ncmFtKDExLHIsMCksaW52ZXJzZTp0Lm5vb3AsZGF0YTpyfSkpP2E6XCJcIikrXCIgXCJ9LDExOmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz10LmxhbWJkYSxzPXQubG9va3VwUHJvcGVydHl8fGZ1bmN0aW9uKHQsZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpcmV0dXJuIHRbZV19O3JldHVybicgPHRyPjx0ZCBjbGFzcz1cImVydWRhLWF0dHJpYnV0ZS1uYW1lLWNvbG9yXCI+Jyt0LmVzY2FwZUV4cHJlc3Npb24obyhudWxsIT1lP3MoZSxcIm5hbWVcIik6ZSxlKSkrJzwvdGQ+PHRkIGNsYXNzPVwiZXJ1ZGEtc3RyaW5nLWNvbG9yXCI+JysobnVsbCE9KGE9byhudWxsIT1lP3MoZSxcInZhbHVlXCIpOmUsZSkpP2E6XCJcIikrXCI8L3RkPjwvdHI+IFwifSwxMzpmdW5jdGlvbih0LGUsbixpLHIpe3JldHVyblwiIDx0cj48dGQ+RW1wdHk8L3RkPjwvdHI+IFwifSwxNTpmdW5jdGlvbih0LGUsbixpLHIpe3ZhciBhLG89bnVsbCE9ZT9lOnQubnVsbENvbnRleHR8fHt9LHM9dC5sb29rdXBQcm9wZXJ0eXx8ZnVuY3Rpb24odCxlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSlyZXR1cm4gdFtlXX07cmV0dXJuXCIgPGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwic3R5bGVzIHNlY3Rpb25cIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48aDI+U3R5bGVzPC9oMj48ZGl2IFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJzdHlsZS13cmFwcGVyXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+IFwiKyhudWxsIT0oYT1zKG4sXCJlYWNoXCIpLmNhbGwobyxudWxsIT1lP3MoZSxcInN0eWxlc1wiKTplLHtuYW1lOlwiZWFjaFwiLGhhc2g6e30sZm46dC5wcm9ncmFtKDE2LHIsMCksaW52ZXJzZTp0Lm5vb3AsZGF0YTpyfSkpP2E6XCJcIikrXCIgPC9kaXY+PC9kaXY+IFwifSwxNjpmdW5jdGlvbih0LGUsbixpLHIpe3ZhciBhLG89bnVsbCE9ZT9lOnQubnVsbENvbnRleHR8fHt9LHM9dC5sb29rdXBQcm9wZXJ0eXx8ZnVuY3Rpb24odCxlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSlyZXR1cm4gdFtlXX07cmV0dXJuXCIgPGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwic3R5bGUtcnVsZXNcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48ZGl2PlwiK3QuZXNjYXBlRXhwcmVzc2lvbih0LmxhbWJkYShudWxsIT1lP3MoZSxcInNlbGVjdG9yVGV4dFwiKTplLGUpKStcIiB7PC9kaXY+IFwiKyhudWxsIT0oYT1zKG4sXCJlYWNoXCIpLmNhbGwobyxudWxsIT1lP3MoZSxcInN0eWxlXCIpOmUse25hbWU6XCJlYWNoXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oMTcsciwwKSxpbnZlcnNlOnQubm9vcCxkYXRhOnJ9KSk/YTpcIlwiKStcIiA8ZGl2Pn08L2Rpdj48L2Rpdj4gXCJ9LDE3OmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz10LmxhbWJkYSxzPXQubG9va3VwUHJvcGVydHl8fGZ1bmN0aW9uKHQsZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpcmV0dXJuIHRbZV19O3JldHVyblwiIDxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobnVsbCE9ZT9lOnQubnVsbENvbnRleHR8fHt9LFwicnVsZVwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjxzcGFuPlwiK3QuZXNjYXBlRXhwcmVzc2lvbihvKHImJnMocixcImtleVwiKSxlKSkrXCI8L3NwYW4+OiBcIisobnVsbCE9KGE9byhlLGUpKT9hOlwiXCIpK1wiOzwvZGl2PiBcIn0sMTk6ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgYSxvPW51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxzPXQubGFtYmRhLHU9dC5lc2NhcGVFeHByZXNzaW9uLGw9dC5sb29rdXBQcm9wZXJ0eXx8ZnVuY3Rpb24odCxlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSlyZXR1cm4gdFtlXX07cmV0dXJuXCIgPGRpdiBcIisobnVsbCE9KGE9bChuLFwiY2xhc3NcIikuY2FsbChvLFwiY29tcHV0ZWQtc3R5bGUgc2VjdGlvblwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjxoMj5Db21wdXRlZCBTdHlsZSBcIisobnVsbCE9KGE9bChuLFwiaWZcIikuY2FsbChvLG51bGwhPWU/bChlLFwicm1EZWZDb21wdXRlZFN0eWxlXCIpOmUse25hbWU6XCJpZlwiLGhhc2g6e30sZm46dC5wcm9ncmFtKDIwLHIsMCksaW52ZXJzZTp0LnByb2dyYW0oMjIsciwwKSxkYXRhOnJ9KSk/YTpcIlwiKStcIiA8ZGl2IFwiKyhudWxsIT0oYT1sKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJidG4gY29tcHV0ZWQtc3R5bGUtc2VhcmNoXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PHNwYW4gXCIrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwobyxcImljb24tc2VhcmNoXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PC9zcGFuPjwvZGl2PiBcIisobnVsbCE9KGE9bChuLFwiaWZcIikuY2FsbChvLG51bGwhPWU/bChlLFwiY29tcHV0ZWRTdHlsZVNlYXJjaEtleXdvcmRcIik6ZSx7bmFtZTpcImlmXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oMjQsciwwKSxpbnZlcnNlOnQubm9vcCxkYXRhOnJ9KSk/YTpcIlwiKStcIiA8L2gyPjxkaXYgXCIrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwobyxcImJveC1tb2RlbFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPiBcIisobnVsbCE9KGE9bChuLFwiaWZcIikuY2FsbChvLG51bGwhPShhPW51bGwhPWU/bChlLFwiYm94TW9kZWxcIik6ZSk/bChhLFwicG9zaXRpb25cIik6YSx7bmFtZTpcImlmXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oMjYsciwwKSxpbnZlcnNlOnQubm9vcCxkYXRhOnJ9KSk/YTpcIlwiKStcIjxkaXYgXCIrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwobyxcIm1hcmdpblwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjxkaXYgXCIrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwobyxcImxhYmVsXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+bWFyZ2luPC9kaXY+PGRpdiBcIisobnVsbCE9KGE9bChuLFwiY2xhc3NcIikuY2FsbChvLFwidG9wXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+XCIrdShzKG51bGwhPShhPW51bGwhPShhPW51bGwhPWU/bChlLFwiYm94TW9kZWxcIik6ZSk/bChhLFwibWFyZ2luXCIpOmEpP2woYSxcInRvcFwiKTphLGUpKStcIjwvZGl2Pjxicj48ZGl2IFwiKyhudWxsIT0oYT1sKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJsZWZ0XCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+XCIrdShzKG51bGwhPShhPW51bGwhPShhPW51bGwhPWU/bChlLFwiYm94TW9kZWxcIik6ZSk/bChhLFwibWFyZ2luXCIpOmEpP2woYSxcImxlZnRcIik6YSxlKSkrXCI8L2Rpdj48ZGl2IFwiKyhudWxsIT0oYT1sKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJib3JkZXJcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48ZGl2IFwiKyhudWxsIT0oYT1sKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJsYWJlbFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPmJvcmRlcjwvZGl2PjxkaXYgXCIrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwobyxcInRvcFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPlwiK3UocyhudWxsIT0oYT1udWxsIT0oYT1udWxsIT1lP2woZSxcImJveE1vZGVsXCIpOmUpP2woYSxcImJvcmRlclwiKTphKT9sKGEsXCJ0b3BcIik6YSxlKSkrXCI8L2Rpdj48YnI+PGRpdiBcIisobnVsbCE9KGE9bChuLFwiY2xhc3NcIikuY2FsbChvLFwibGVmdFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPlwiK3UocyhudWxsIT0oYT1udWxsIT0oYT1udWxsIT1lP2woZSxcImJveE1vZGVsXCIpOmUpP2woYSxcImJvcmRlclwiKTphKT9sKGEsXCJsZWZ0XCIpOmEsZSkpK1wiPC9kaXY+PGRpdiBcIisobnVsbCE9KGE9bChuLFwiY2xhc3NcIikuY2FsbChvLFwicGFkZGluZ1wiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjxkaXYgXCIrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwobyxcImxhYmVsXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+cGFkZGluZzwvZGl2PjxkaXYgXCIrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwobyxcInRvcFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPlwiK3UocyhudWxsIT0oYT1udWxsIT0oYT1udWxsIT1lP2woZSxcImJveE1vZGVsXCIpOmUpP2woYSxcInBhZGRpbmdcIik6YSk/bChhLFwidG9wXCIpOmEsZSkpK1wiPC9kaXY+PGJyPjxkaXYgXCIrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwobyxcImxlZnRcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj5cIit1KHMobnVsbCE9KGE9bnVsbCE9KGE9bnVsbCE9ZT9sKGUsXCJib3hNb2RlbFwiKTplKT9sKGEsXCJwYWRkaW5nXCIpOmEpP2woYSxcImxlZnRcIik6YSxlKSkrXCI8L2Rpdj48ZGl2IFwiKyhudWxsIT0oYT1sKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJjb250ZW50XCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PHNwYW4+XCIrdShzKG51bGwhPShhPW51bGwhPShhPW51bGwhPWU/bChlLFwiYm94TW9kZWxcIik6ZSk/bChhLFwiY29udGVudFwiKTphKT9sKGEsXCJ3aWR0aFwiKTphLGUpKStcIjwvc3Bhbj4mbmJzcDvDlyZuYnNwOzxzcGFuPlwiK3UocyhudWxsIT0oYT1udWxsIT0oYT1udWxsIT1lP2woZSxcImJveE1vZGVsXCIpOmUpP2woYSxcImNvbnRlbnRcIik6YSk/bChhLFwiaGVpZ2h0XCIpOmEsZSkpK1wiPC9zcGFuPjwvZGl2PjxkaXYgXCIrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwobyxcInJpZ2h0XCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+XCIrdShzKG51bGwhPShhPW51bGwhPShhPW51bGwhPWU/bChlLFwiYm94TW9kZWxcIik6ZSk/bChhLFwicGFkZGluZ1wiKTphKT9sKGEsXCJyaWdodFwiKTphLGUpKStcIjwvZGl2Pjxicj48ZGl2IFwiKyhudWxsIT0oYT1sKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJib3R0b21cIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj5cIit1KHMobnVsbCE9KGE9bnVsbCE9KGE9bnVsbCE9ZT9sKGUsXCJib3hNb2RlbFwiKTplKT9sKGEsXCJwYWRkaW5nXCIpOmEpP2woYSxcImJvdHRvbVwiKTphLGUpKStcIjwvZGl2PjwvZGl2PjxkaXYgXCIrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwobyxcInJpZ2h0XCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+XCIrdShzKG51bGwhPShhPW51bGwhPShhPW51bGwhPWU/bChlLFwiYm94TW9kZWxcIik6ZSk/bChhLFwiYm9yZGVyXCIpOmEpP2woYSxcInJpZ2h0XCIpOmEsZSkpK1wiPC9kaXY+PGJyPjxkaXYgXCIrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwobyxcImJvdHRvbVwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPlwiK3UocyhudWxsIT0oYT1udWxsIT0oYT1udWxsIT1lP2woZSxcImJveE1vZGVsXCIpOmUpP2woYSxcImJvcmRlclwiKTphKT9sKGEsXCJib3R0b21cIik6YSxlKSkrXCI8L2Rpdj48L2Rpdj48ZGl2IFwiKyhudWxsIT0oYT1sKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJyaWdodFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPlwiK3UocyhudWxsIT0oYT1udWxsIT0oYT1udWxsIT1lP2woZSxcImJveE1vZGVsXCIpOmUpP2woYSxcIm1hcmdpblwiKTphKT9sKGEsXCJyaWdodFwiKTphLGUpKStcIjwvZGl2Pjxicj48ZGl2IFwiKyhudWxsIT0oYT1sKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJib3R0b21cIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj5cIit1KHMobnVsbCE9KGE9bnVsbCE9KGE9bnVsbCE9ZT9sKGUsXCJib3hNb2RlbFwiKTplKT9sKGEsXCJtYXJnaW5cIik6YSk/bChhLFwiYm90dG9tXCIpOmEsZSkpK1wiPC9kaXY+PC9kaXY+XCIrKG51bGwhPShhPWwobixcImlmXCIpLmNhbGwobyxudWxsIT0oYT1udWxsIT1lP2woZSxcImJveE1vZGVsXCIpOmUpP2woYSxcInBvc2l0aW9uXCIpOmEse25hbWU6XCJpZlwiLGhhc2g6e30sZm46dC5wcm9ncmFtKDI4LHIsMCksaW52ZXJzZTp0Lm5vb3AsZGF0YTpyfSkpP2E6XCJcIikrXCIgPC9kaXY+PGRpdiBcIisobnVsbCE9KGE9bChuLFwiY2xhc3NcIikuY2FsbChvLFwidGFibGUtd3JhcHBlclwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjx0YWJsZT48dGJvZHk+IFwiKyhudWxsIT0oYT1sKG4sXCJlYWNoXCIpLmNhbGwobyxudWxsIT1lP2woZSxcImNvbXB1dGVkU3R5bGVcIik6ZSx7bmFtZTpcImVhY2hcIixoYXNoOnt9LGZuOnQucHJvZ3JhbSgzMCxyLDApLGludmVyc2U6dC5ub29wLGRhdGE6cn0pKT9hOlwiXCIpK1wiIDwvdGJvZHk+PC90YWJsZT48L2Rpdj48L2Rpdj4gXCJ9LDIwOmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz1udWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30scz10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIiA8ZGl2IFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJidG4gdG9nZ2xlLWFsbC1jb21wdXRlZC1zdHlsZVwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjxzcGFuIFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJpY29uLWNvbXByZXNzXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PC9zcGFuPjwvZGl2PiBcIn0sMjI6ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgYSxvPW51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxzPXQubG9va3VwUHJvcGVydHl8fGZ1bmN0aW9uKHQsZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpcmV0dXJuIHRbZV19O3JldHVyblwiIDxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImJ0biB0b2dnbGUtYWxsLWNvbXB1dGVkLXN0eWxlXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PHNwYW4gXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImljb24tZXhwYW5kXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PC9zcGFuPjwvZGl2PiBcIn0sMjQ6ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgYSxvPXQubG9va3VwUHJvcGVydHl8fGZ1bmN0aW9uKHQsZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpcmV0dXJuIHRbZV19O3JldHVyblwiIDxkaXYgXCIrKG51bGwhPShhPW8obixcImNsYXNzXCIpLmNhbGwobnVsbCE9ZT9lOnQubnVsbENvbnRleHR8fHt9LFwiYnRuIHNlYXJjaC1rZXl3b3JkXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+IFwiK3QuZXNjYXBlRXhwcmVzc2lvbih0LmxhbWJkYShudWxsIT1lP28oZSxcImNvbXB1dGVkU3R5bGVTZWFyY2hLZXl3b3JkXCIpOmUsZSkpK1wiIDwvZGl2PiBcIn0sMjY6ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgYSxvPW51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxzPXQubGFtYmRhLHU9dC5lc2NhcGVFeHByZXNzaW9uLGw9dC5sb29rdXBQcm9wZXJ0eXx8ZnVuY3Rpb24odCxlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSlyZXR1cm4gdFtlXX07cmV0dXJuXCI8ZGl2IFwiKyhudWxsIT0oYT1sKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJwb3NpdGlvblwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjxkaXYgXCIrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwobyxcImxhYmVsXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+cG9zaXRpb248L2Rpdj48ZGl2IFwiKyhudWxsIT0oYT1sKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJ0b3BcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj5cIit1KHMobnVsbCE9KGE9bnVsbCE9KGE9bnVsbCE9ZT9sKGUsXCJib3hNb2RlbFwiKTplKT9sKGEsXCJwb3NpdGlvblwiKTphKT9sKGEsXCJ0b3BcIik6YSxlKSkrXCI8L2Rpdj48YnI+PGRpdiBcIisobnVsbCE9KGE9bChuLFwiY2xhc3NcIikuY2FsbChvLFwibGVmdFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPlwiK3UocyhudWxsIT0oYT1udWxsIT0oYT1udWxsIT1lP2woZSxcImJveE1vZGVsXCIpOmUpP2woYSxcInBvc2l0aW9uXCIpOmEpP2woYSxcImxlZnRcIik6YSxlKSkrXCI8L2Rpdj5cIn0sMjg6ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgYSxvPW51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxzPXQubGFtYmRhLHU9dC5lc2NhcGVFeHByZXNzaW9uLGw9dC5sb29rdXBQcm9wZXJ0eXx8ZnVuY3Rpb24odCxlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSlyZXR1cm4gdFtlXX07cmV0dXJuXCI8ZGl2IFwiKyhudWxsIT0oYT1sKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJyaWdodFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPlwiK3UocyhudWxsIT0oYT1udWxsIT0oYT1udWxsIT1lP2woZSxcImJveE1vZGVsXCIpOmUpP2woYSxcInBvc2l0aW9uXCIpOmEpP2woYSxcInJpZ2h0XCIpOmEsZSkpK1wiPC9kaXY+PGJyPjxkaXYgXCIrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwobyxcImJvdHRvbVwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPlwiK3UocyhudWxsIT0oYT1udWxsIT0oYT1udWxsIT1lP2woZSxcImJveE1vZGVsXCIpOmUpP2woYSxcInBvc2l0aW9uXCIpOmEpP2woYSxcImJvdHRvbVwiKTphLGUpKStcIjwvZGl2PjwvZGl2PlwifSwzMDpmdW5jdGlvbih0LGUsbixpLHIpe3ZhciBhLG89dC5sYW1iZGEscz10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIiA8dHI+PHRkIFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxcImtleVwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPlwiK3QuZXNjYXBlRXhwcmVzc2lvbihvKHImJnMocixcImtleVwiKSxlKSkrXCI8L3RkPjx0ZD5cIisobnVsbCE9KGE9byhlLGUpKT9hOlwiXCIpK1wiPC90ZD48L3RyPiBcIn0sMzI6ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgYSxvPW51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxzPXQubG9va3VwUHJvcGVydHl8fGZ1bmN0aW9uKHQsZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpcmV0dXJuIHRbZV19O3JldHVyblwiIDxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImxpc3RlbmVycyBzZWN0aW9uXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PGgyPkV2ZW50IExpc3RlbmVyczwvaDI+PGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwibGlzdGVuZXItd3JhcHBlclwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPiBcIisobnVsbCE9KGE9cyhuLFwiZWFjaFwiKS5jYWxsKG8sbnVsbCE9ZT9zKGUsXCJsaXN0ZW5lcnNcIik6ZSx7bmFtZTpcImVhY2hcIixoYXNoOnt9LGZuOnQucHJvZ3JhbSgzMyxyLDApLGludmVyc2U6dC5ub29wLGRhdGE6cn0pKT9hOlwiXCIpK1wiIDwvZGl2PjwvZGl2PiBcIn0sMzM6ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgYSxvPW51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxzPXQubG9va3VwUHJvcGVydHl8fGZ1bmN0aW9uKHQsZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpcmV0dXJuIHRbZV19O3JldHVyblwiIDxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImxpc3RlbmVyXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwibGlzdGVuZXItdHlwZVwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPlwiK3QuZXNjYXBlRXhwcmVzc2lvbih0LmxhbWJkYShyJiZzKHIsXCJrZXlcIiksZSkpK1wiPC9kaXY+PHVsIFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJsaXN0ZW5lci1jb250ZW50XCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+IFwiKyhudWxsIT0oYT1zKG4sXCJlYWNoXCIpLmNhbGwobyxlLHtuYW1lOlwiZWFjaFwiLGhhc2g6e30sZm46dC5wcm9ncmFtKDM0LHIsMCksaW52ZXJzZTp0Lm5vb3AsZGF0YTpyfSkpP2E6XCJcIikrXCIgPC91bD48L2Rpdj4gXCJ9LDM0OmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIiA8bGkgXCIrKG51bGwhPShhPW8obixcImlmXCIpLmNhbGwobnVsbCE9ZT9lOnQubnVsbENvbnRleHR8fHt9LG51bGwhPWU/byhlLFwidXNlQ2FwdHVyZVwiKTplLHtuYW1lOlwiaWZcIixoYXNoOnt9LGZuOnQucHJvZ3JhbSgzNSxyLDApLGludmVyc2U6dC5ub29wLGRhdGE6cn0pKT9hOlwiXCIpK1wiPlwiK3QuZXNjYXBlRXhwcmVzc2lvbih0LmxhbWJkYShudWxsIT1lP28oZSxcImxpc3RlbmVyU3RyXCIpOmUsZSkpK1wiPC9saT4gXCJ9LDM1OmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGE7cmV0dXJuIG51bGwhPShhPSh0Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfSkobixcImNsYXNzXCIpLmNhbGwobnVsbCE9ZT9lOnQubnVsbENvbnRleHR8fHt9LFwiY2FwdHVyZVwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCJ9LGNvbXBpbGVyOls4LFwiPj0gNC4zLjBcIl0sbWFpbjpmdW5jdGlvbih0LGUsbixpLHIpe3ZhciBhLG89bnVsbCE9ZT9lOnQubnVsbENvbnRleHR8fHt9LHM9dC5sb29rdXBQcm9wZXJ0eXx8ZnVuY3Rpb24odCxlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSlyZXR1cm4gdFtlXX07cmV0dXJuKG51bGwhPShhPXMobixcImlmXCIpLmNhbGwobyxudWxsIT1lP3MoZSxcInBhcmVudHNcIik6ZSx7bmFtZTpcImlmXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oMSxyLDApLGludmVyc2U6dC5ub29wLGRhdGE6cn0pKT9hOlwiXCIpK1wiIDxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImJyZWFkY3J1bWJcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj4gXCIrKG51bGwhPShhPXQubGFtYmRhKG51bGwhPWU/cyhlLFwibmFtZVwiKTplLGUpKT9hOlwiXCIpK1wiIDwvZGl2PiBcIisobnVsbCE9KGE9cyhuLFwiaWZcIikuY2FsbChvLG51bGwhPWU/cyhlLFwiY2hpbGRyZW5cIik6ZSx7bmFtZTpcImlmXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oNCxyLDApLGludmVyc2U6dC5ub29wLGRhdGE6cn0pKT9hOlwiXCIpK1wiIDxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImF0dHJpYnV0ZXMgc2VjdGlvblwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjxoMj5BdHRyaWJ1dGVzPC9oMj48ZGl2IFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJ0YWJsZS13cmFwcGVyXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PHRhYmxlPjx0Ym9keT4gXCIrKG51bGwhPShhPXMobixcImlmXCIpLmNhbGwobyxudWxsIT1lP3MoZSxcImF0dHJpYnV0ZXNcIik6ZSx7bmFtZTpcImlmXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oMTAsciwwKSxpbnZlcnNlOnQucHJvZ3JhbSgxMyxyLDApLGRhdGE6cn0pKT9hOlwiXCIpK1wiIDwvdGJvZHk+PC90YWJsZT48L2Rpdj48L2Rpdj4gXCIrKG51bGwhPShhPXMobixcImlmXCIpLmNhbGwobyxudWxsIT1lP3MoZSxcInN0eWxlc1wiKTplLHtuYW1lOlwiaWZcIixoYXNoOnt9LGZuOnQucHJvZ3JhbSgxNSxyLDApLGludmVyc2U6dC5ub29wLGRhdGE6cn0pKT9hOlwiXCIpK1wiIFwiKyhudWxsIT0oYT1zKG4sXCJpZlwiKS5jYWxsKG8sbnVsbCE9ZT9zKGUsXCJjb21wdXRlZFN0eWxlXCIpOmUse25hbWU6XCJpZlwiLGhhc2g6e30sZm46dC5wcm9ncmFtKDE5LHIsMCksaW52ZXJzZTp0Lm5vb3AsZGF0YTpyfSkpP2E6XCJcIikrXCIgXCIrKG51bGwhPShhPXMobixcImlmXCIpLmNhbGwobyxudWxsIT1lP3MoZSxcImxpc3RlbmVyc1wiKTplLHtuYW1lOlwiaWZcIixoYXNoOnt9LGZuOnQucHJvZ3JhbSgzMixyLDApLGludmVyc2U6dC5ub29wLGRhdGE6cn0pKT9hOlwiXCIpfSx1c2VEYXRhOiEwfSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDcpO3QuZXhwb3J0cz0oaS5kZWZhdWx0fHxpKS50ZW1wbGF0ZSh7Y29tcGlsZXI6WzgsXCI+PSA0LjMuMFwiXSxtYWluOmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz1udWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30scz10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIjxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImJvdHRvbS1iYXJcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48ZGl2IFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJidG4gc2VsZWN0XCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PHNwYW4gXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImljb24gaWNvbi1zZWxlY3RcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48L3NwYW4+PC9kaXY+PGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiYnRuIHJlZnJlc2hcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48c3BhbiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiaWNvbiBpY29uLXJlZnJlc2hcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48L3NwYW4+PC9kaXY+PGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiYnRuIGhpZ2hsaWdodFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjxzcGFuIFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJpY29uIGljb24tZXllXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PC9zcGFuPjwvZGl2PjxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImJ0biByZXNldFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjxzcGFuIFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJpY29uIGljb24tcmVzZXRcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48L3NwYW4+PC9kaXY+PC9kaXY+XCJ9LHVzZURhdGE6ITB9KX0sZnVuY3Rpb24odCxlLG4peyhlPW4oOCkoITEpKS5wdXNoKFt0LmksXCIuX3NlYXJjaC1oaWdobGlnaHQtYmxvY2t7JGQ6aW5saW5lfS5fc2VhcmNoLWhpZ2hsaWdodC1ibG9jayAuX2tleXdvcmR7JGI6dmFyKC0tY29uc29sZS13YXJuLWJhY2tncm91bmQpOyRjOnZhcigtLWNvbnNvbGUtd2Fybi1mb3JlZ3JvdW5kKX1cIixcIlwiXSksdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSxuKXsoZT1uKDgpKCExKSkucHVzaChbdC5pLFwiI19zbmlwcGV0c3skb3k6YXV0bzskd29zOnRvdWNoOyRwOjEwcHh9I19zbmlwcGV0cyAuX3NlY3Rpb257JG1iOjEwcHg7JGJvOjFweCBzb2xpZCB2YXIoLS1ib3JkZXIpOyRvOmhpZGRlbjskY3U6cG9pbnRlcn0jX3NuaXBwZXRzIC5fc2VjdGlvbjphY3RpdmUgLl9uYW1leyRiOnZhcigtLWhpZ2hsaWdodCk7JGM6dmFyKC0tc2VsZWN0LWZvcmVncm91bmQpfSNfc25pcHBldHMgLl9zZWN0aW9uIC5fbmFtZXskcDoxMHB4OyRjOnZhcigtLXByaW1hcnkpOyRiOnZhcigtLWRhcmtlci1iYWNrZ3JvdW5kKTskdHI6YmFja2dyb3VuZCAuM3N9I19zbmlwcGV0cyAuX3NlY3Rpb24gLl9uYW1lIC5fYnRueyRtbDoxMHB4OyRmOnJpZ2h0OyR0YTpjZW50ZXI7JHc6MThweDskaDoxOHB4OyRsaDoxOHB4OyRmczoxMnB4fSNfc25pcHBldHMgLl9zZWN0aW9uIC5fZGVzY3JpcHRpb257JGM6dmFyKC0tZm9yZWdyb3VuZCk7JHA6MTBweDskdHI6YmFja2dyb3VuZCAuM3N9XCIsXCJcIl0pLHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big3KTt0LmV4cG9ydHM9KGkuZGVmYXVsdHx8aSkudGVtcGxhdGUoezE6ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgYT10LmxhbWJkYSxvPXQuZXNjYXBlRXhwcmVzc2lvbixzPXQubG9va3VwUHJvcGVydHl8fGZ1bmN0aW9uKHQsZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpcmV0dXJuIHRbZV19O3JldHVybicgPGRpdiBjbGFzcz1cImVydWRhLXNlY3Rpb24gZXJ1ZGEtcnVuXCIgZGF0YS1pZHg9XCInK28oYShyJiZzKHIsXCJpbmRleFwiKSxlKSkrJ1wiPjxoMiBjbGFzcz1cImVydWRhLW5hbWVcIj4nK28oYShudWxsIT1lP3MoZSxcIm5hbWVcIik6ZSxlKSkrJyA8ZGl2IGNsYXNzPVwiZXJ1ZGEtYnRuXCI+PHNwYW4gY2xhc3M9XCJlcnVkYS1pY29uLXBsYXlcIj48L3NwYW4+PC9kaXY+PC9oMj48ZGl2IGNsYXNzPVwiZXJ1ZGEtZGVzY3JpcHRpb25cIj4gJytvKGEobnVsbCE9ZT9zKGUsXCJkZXNjXCIpOmUsZSkpK1wiIDwvZGl2PjwvZGl2PiBcIn0sY29tcGlsZXI6WzgsXCI+PSA0LjMuMFwiXSxtYWluOmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm4gbnVsbCE9KGE9byhuLFwiZWFjaFwiKS5jYWxsKG51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxudWxsIT1lP28oZSxcInNuaXBwZXRzXCIpOmUse25hbWU6XCJlYWNoXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oMSxyLDApLGludmVyc2U6dC5ub29wLGRhdGE6cn0pKT9hOlwiXCJ9LHVzZURhdGE6ITB9KX0sZnVuY3Rpb24odCxlLG4peyhlPW4oOCkoITEpKS5wdXNoKFt0LmksXCIjX3Jlc291cmNlc3skb3k6YXV0bzskd29zOnRvdWNoOyRwOjEwcHg7JGZzOjE0cHh9I19yZXNvdXJjZXMgLl9zZWN0aW9ueyRtYjoxMHB4OyRvOmhpZGRlbjskYm86MXB4IHNvbGlkIHZhcigtLWJvcmRlcil9I19yZXNvdXJjZXMgLl9zZWN0aW9uIC5fY29udGVudHskb3k6YXV0bzskd29zOnRvdWNoO21heC1oZWlnaHQ6NDAwcHh9I19yZXNvdXJjZXMgLl9zZWN0aW9uLl93YXJueyRibzoxcHggc29saWQgdmFyKC0tY29uc29sZS13YXJuLWJvcmRlcil9I19yZXNvdXJjZXMgLl9zZWN0aW9uLl93YXJuIC5fdGl0bGV7JGI6dmFyKC0tY29uc29sZS13YXJuLWJhY2tncm91bmQpOyRjOnZhcigtLWNvbnNvbGUtd2Fybi1mb3JlZ3JvdW5kKX0jX3Jlc291cmNlcyAuX3NlY3Rpb24uX2RhbmdlcnskYm86MXB4IHNvbGlkIHZhcigtLWNvbnNvbGUtZXJyb3ItYm9yZGVyKX0jX3Jlc291cmNlcyAuX3NlY3Rpb24uX2RhbmdlciAuX3RpdGxleyRiOnZhcigtLWNvbnNvbGUtZXJyb3ItYmFja2dyb3VuZCk7JGM6dmFyKC0tY29uc29sZS1lcnJvci1mb3JlZ3JvdW5kKX0jX3Jlc291cmNlcyAuX3RpdGxleyRwOjEwcHg7JGM6dmFyKC0tcHJpbWFyeSk7JGI6dmFyKC0tZGFya2VyLWJhY2tncm91bmQpfSNfcmVzb3VyY2VzIC5fdGl0bGUgLl9idG57JGQ6ZmxleDskbWw6NXB4OyRmOnJpZ2h0OyRjOnZhcigtLXByaW1hcnkpOyR3OjE4cHg7JGg6MThweDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjskZnM6MTZweDskY3U6cG9pbnRlcjskdHI6Y29sb3IgLjNzfSNfcmVzb3VyY2VzIC5fdGl0bGUgLl9idG4uX3NlYXJjaC1rZXl3b3JkeyR3OmF1dG87bWF4LXdpZHRoOjgwcHg7JGZzOjE0cHg7JG86aGlkZGVuO3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXM7JGQ6aW5saW5lLWJsb2NrfSNfcmVzb3VyY2VzIC5fdGl0bGUgLl9idG46YWN0aXZleyRjOnZhcigtLWFjY2VudCl9I19yZXNvdXJjZXMgLl9saW5rLWxpc3R7JGZzOjEycHg7JGM6dmFyKC0tZm9yZWdyb3VuZCl9I19yZXNvdXJjZXMgLl9saW5rLWxpc3QgbGl7JHA6MTBweDt3b3JkLWJyZWFrOmJyZWFrLWFsbH0jX3Jlc291cmNlcyAuX2xpbmstbGlzdCBsaSBheyRjOnZhcigtLWxpbmstY29sb3IpIWltcG9ydGFudH0jX3Jlc291cmNlcyAuX2ltYWdlLWxpc3R7JGM6dmFyKC0tZm9yZWdyb3VuZCk7JGZzOjEycHg7JGQ6ZmxleDtmbGV4LXdyYXA6d3JhcDskcDoxMHB4IWltcG9ydGFudH0jX3Jlc291cmNlcyAuX2ltYWdlLWxpc3Q6YWZ0ZXJ7JGNvOicnOyRkOmJsb2NrOyRjbDpib3RofSNfcmVzb3VyY2VzIC5faW1hZ2UtbGlzdCBsaXtmbGV4LWdyb3c6MTskY3U6cG9pbnRlcjskb3k6aGlkZGVufSNfcmVzb3VyY2VzIC5faW1hZ2UtbGlzdCBsaS5faW1hZ2V7JGg6MTAwcHg7JGZzOjB9I19yZXNvdXJjZXMgLl9pbWFnZS1saXN0IGxpIGltZ3skaDoxMDBweDttaW4td2lkdGg6MTAwJTstby1vYmplY3QtZml0OmNvdmVyO29iamVjdC1maXQ6Y292ZXJ9I19yZXNvdXJjZXMgdGFibGV7JGM6dmFyKC0tZm9yZWdyb3VuZCk7JGJjOmNvbGxhcHNlOyR3OjEwMCU7JGZzOjEycHh9I19yZXNvdXJjZXMgdGFibGUgdHI6bnRoLWNoaWxkKGV2ZW4peyRiOnZhcigtLWNvbnRyYXN0KX0jX3Jlc291cmNlcyB0YWJsZSB0ZHskcDoxMHB4O3dvcmQtYnJlYWs6YnJlYWstYWxsfSNfcmVzb3VyY2VzIHRhYmxlIHRkLl9rZXl7JG94OmF1dG87JHdvczp0b3VjaDskd3M6bm93cmFwO21heC13aWR0aDoxMjBweH0jX3Jlc291cmNlcyB0YWJsZSB0ZC5fY29udHJvbHskcDowOyRmczowOyR3OjQwcHh9I19yZXNvdXJjZXMgdGFibGUgdGQuX2NvbnRyb2wgLl9pY29uLWRlbGV0ZXskY3U6cG9pbnRlcjskYzp2YXIoLS1wcmltYXJ5KTskZnM6MTRweDskZDppbmxpbmUtYmxvY2s7JHc6NDBweDskaDo0MHB4OyR0YTpjZW50ZXI7JGxoOjQwcHg7JHRyOmNvbG9yIC4zc30jX3Jlc291cmNlcyB0YWJsZSB0ZC5fY29udHJvbCAuX2ljb24tZGVsZXRlOmFjdGl2ZXskYzp2YXIoLS1hY2NlbnQpfVwiLFwiXCJdKSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNyk7dC5leHBvcnRzPShpLmRlZmF1bHR8fGkpLnRlbXBsYXRlKHsxOmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIjxkaXYgXCIrKG51bGwhPShhPW8obixcImNsYXNzXCIpLmNhbGwobnVsbCE9ZT9lOnQubnVsbENvbnRleHR8fHt9LFwiYnRuIHNlYXJjaC1rZXl3b3JkXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+XCIrdC5lc2NhcGVFeHByZXNzaW9uKHQubGFtYmRhKG51bGwhPWU/byhlLFwibG9jYWxTdG9yZVNlYXJjaEtleXdvcmRcIik6ZSxlKSkrXCI8L2Rpdj5cIn0sMzpmdW5jdGlvbih0LGUsbixpLHIpe3ZhciBhLG89dC5sb29rdXBQcm9wZXJ0eXx8ZnVuY3Rpb24odCxlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSlyZXR1cm4gdFtlXX07cmV0dXJuXCIgXCIrKG51bGwhPShhPW8obixcImVhY2hcIikuY2FsbChudWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30sbnVsbCE9ZT9vKGUsXCJsb2NhbFN0b3JlRGF0YVwiKTplLHtuYW1lOlwiZWFjaFwiLGhhc2g6e30sZm46dC5wcm9ncmFtKDQsciwwKSxpbnZlcnNlOnQubm9vcCxkYXRhOnJ9KSk/YTpcIlwiKStcIiBcIn0sNDpmdW5jdGlvbih0LGUsbixpLHIpe3ZhciBhLG89bnVsbCE9ZT9lOnQubnVsbENvbnRleHR8fHt9LHM9dC5sYW1iZGEsdT10LmVzY2FwZUV4cHJlc3Npb24sbD10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIiA8dHI+PHRkIFwiKyhudWxsIT0oYT1sKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJrZXlcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj5cIit1KHMobnVsbCE9ZT9sKGUsXCJrZXlcIik6ZSxlKSkrXCI8L3RkPjx0ZCBcIisobnVsbCE9KGE9bChuLFwiY2xhc3NcIikuY2FsbChvLFwic3RvcmFnZS12YWxcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKSsnIGRhdGEta2V5PVwiJyt1KHMobnVsbCE9ZT9sKGUsXCJrZXlcIik6ZSxlKSkrJ1wiIGRhdGEtdHlwZT1cImxvY2FsXCI+Jyt1KHMobnVsbCE9ZT9sKGUsXCJ2YWxcIik6ZSxlKSkrXCI8L3RkPjx0ZCBcIisobnVsbCE9KGE9bChuLFwiY2xhc3NcIikuY2FsbChvLFwiY29udHJvbFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjxzcGFuIFwiKyhudWxsIT0oYT1sKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJpY29uLWRlbGV0ZSBkZWxldGUtc3RvcmFnZVwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpKycgZGF0YS1rZXk9XCInK3UocyhudWxsIT1lP2woZSxcImtleVwiKTplLGUpKSsnXCIgZGF0YS10eXBlPVwibG9jYWxcIj48L3NwYW4+PC90ZD48L3RyPiAnfSw2OmZ1bmN0aW9uKHQsZSxuLGkscil7cmV0dXJuXCIgPHRyPjx0ZD5FbXB0eTwvdGQ+PC90cj4gXCJ9LDg6ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgYSxvPXQubG9va3VwUHJvcGVydHl8fGZ1bmN0aW9uKHQsZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpcmV0dXJuIHRbZV19O3JldHVyblwiPGRpdiBcIisobnVsbCE9KGE9byhuLFwiY2xhc3NcIikuY2FsbChudWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30sXCJidG4gc2VhcmNoLWtleXdvcmRcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj5cIit0LmVzY2FwZUV4cHJlc3Npb24odC5sYW1iZGEobnVsbCE9ZT9vKGUsXCJzZXNzaW9uU3RvcmVTZWFyY2hLZXl3b3JkXCIpOmUsZSkpK1wiPC9kaXY+XCJ9LDEwOmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIiBcIisobnVsbCE9KGE9byhuLFwiZWFjaFwiKS5jYWxsKG51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxudWxsIT1lP28oZSxcInNlc3Npb25TdG9yZURhdGFcIik6ZSx7bmFtZTpcImVhY2hcIixoYXNoOnt9LGZuOnQucHJvZ3JhbSgxMSxyLDApLGludmVyc2U6dC5ub29wLGRhdGE6cn0pKT9hOlwiXCIpK1wiIFwifSwxMTpmdW5jdGlvbih0LGUsbixpLHIpe3ZhciBhLG89bnVsbCE9ZT9lOnQubnVsbENvbnRleHR8fHt9LHM9dC5sYW1iZGEsdT10LmVzY2FwZUV4cHJlc3Npb24sbD10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIiA8dHI+PHRkIFwiKyhudWxsIT0oYT1sKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJrZXlcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj5cIit1KHMobnVsbCE9ZT9sKGUsXCJrZXlcIik6ZSxlKSkrXCI8L3RkPjx0ZCBcIisobnVsbCE9KGE9bChuLFwiY2xhc3NcIikuY2FsbChvLFwic3RvcmFnZS12YWxcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKSsnIGRhdGEta2V5PVwiJyt1KHMobnVsbCE9ZT9sKGUsXCJrZXlcIik6ZSxlKSkrJ1wiIGRhdGEtdHlwZT1cInNlc3Npb25cIj4nK3UocyhudWxsIT1lP2woZSxcInZhbFwiKTplLGUpKStcIjwvdGQ+PHRkIFwiKyhudWxsIT0oYT1sKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJjb250cm9sXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PHNwYW4gXCIrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwobyxcImljb24tZGVsZXRlIGRlbGV0ZS1zdG9yYWdlXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrJyBkYXRhLWtleT1cIicrdShzKG51bGwhPWU/bChlLFwia2V5XCIpOmUsZSkpKydcIiBkYXRhLXR5cGU9XCJzZXNzaW9uXCI+PC9zcGFuPjwvdGQ+PC90cj4gJ30sMTM6ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgYSxvPXQubG9va3VwUHJvcGVydHl8fGZ1bmN0aW9uKHQsZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpcmV0dXJuIHRbZV19O3JldHVyblwiPGRpdiBcIisobnVsbCE9KGE9byhuLFwiY2xhc3NcIikuY2FsbChudWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30sXCJidG4gc2VhcmNoLWtleXdvcmRcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj5cIit0LmVzY2FwZUV4cHJlc3Npb24odC5sYW1iZGEobnVsbCE9ZT9vKGUsXCJjb29raWVTZWFyY2hLZXl3b3JkXCIpOmUsZSkpK1wiPC9kaXY+XCJ9LDE1OmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIiBcIisobnVsbCE9KGE9byhuLFwiZWFjaFwiKS5jYWxsKG51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxudWxsIT1lP28oZSxcImNvb2tpZURhdGFcIik6ZSx7bmFtZTpcImVhY2hcIixoYXNoOnt9LGZuOnQucHJvZ3JhbSgxNixyLDApLGludmVyc2U6dC5ub29wLGRhdGE6cn0pKT9hOlwiXCIpK1wiIFwifSwxNjpmdW5jdGlvbih0LGUsbixpLHIpe3ZhciBhLG89bnVsbCE9ZT9lOnQubnVsbENvbnRleHR8fHt9LHM9dC5sYW1iZGEsdT10LmVzY2FwZUV4cHJlc3Npb24sbD10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIiA8dHI+PHRkIFwiKyhudWxsIT0oYT1sKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJrZXlcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj5cIit1KHMobnVsbCE9ZT9sKGUsXCJrZXlcIik6ZSxlKSkrXCI8L3RkPjx0ZD5cIit1KHMobnVsbCE9ZT9sKGUsXCJ2YWxcIik6ZSxlKSkrXCI8L3RkPjx0ZCBcIisobnVsbCE9KGE9bChuLFwiY2xhc3NcIikuY2FsbChvLFwiY29udHJvbFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjxzcGFuIFwiKyhudWxsIT0oYT1sKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJpY29uLWRlbGV0ZSBkZWxldGUtY29va2llXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrJyBkYXRhLWtleT1cIicrdShzKG51bGwhPWU/bChlLFwia2V5XCIpOmUsZSkpKydcIj48L3NwYW4+PC90ZD48L3RyPiAnfSwxODpmdW5jdGlvbih0LGUsbixpLHIpe3ZhciBhLG89dC5sb29rdXBQcm9wZXJ0eXx8ZnVuY3Rpb24odCxlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSlyZXR1cm4gdFtlXX07cmV0dXJuXCIgXCIrKG51bGwhPShhPW8obixcImVhY2hcIikuY2FsbChudWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30sbnVsbCE9ZT9vKGUsXCJzY3JpcHREYXRhXCIpOmUse25hbWU6XCJlYWNoXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oMTksciwwKSxpbnZlcnNlOnQubm9vcCxkYXRhOnJ9KSk/YTpcIlwiKStcIiBcIn0sMTk6ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgYSxvPXQubGFtYmRhLHM9dC5lc2NhcGVFeHByZXNzaW9uLHU9dC5sb29rdXBQcm9wZXJ0eXx8ZnVuY3Rpb24odCxlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSlyZXR1cm4gdFtlXX07cmV0dXJuJyA8bGk+PGEgaHJlZj1cIicrcyhvKGUsZSkpKydcIiB0YXJnZXQ9XCJfYmxhbmtcIiAnKyhudWxsIT0oYT11KG4sXCJjbGFzc1wiKS5jYWxsKG51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxcImpzLWxpbmtcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj5cIitzKG8oZSxlKSkrXCI8L2E+PC9saT4gXCJ9LDIxOmZ1bmN0aW9uKHQsZSxuLGkscil7cmV0dXJuXCIgPGxpPkVtcHR5PC9saT4gXCJ9LDIzOmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIiBcIisobnVsbCE9KGE9byhuLFwiZWFjaFwiKS5jYWxsKG51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxudWxsIT1lP28oZSxcInN0eWxlc2hlZXREYXRhXCIpOmUse25hbWU6XCJlYWNoXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oMjQsciwwKSxpbnZlcnNlOnQubm9vcCxkYXRhOnJ9KSk/YTpcIlwiKStcIiBcIn0sMjQ6ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgYSxvPXQubGFtYmRhLHM9dC5lc2NhcGVFeHByZXNzaW9uLHU9dC5sb29rdXBQcm9wZXJ0eXx8ZnVuY3Rpb24odCxlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSlyZXR1cm4gdFtlXX07cmV0dXJuJyA8bGk+PGEgaHJlZj1cIicrcyhvKGUsZSkpKydcIiB0YXJnZXQ9XCJfYmxhbmtcIiAnKyhudWxsIT0oYT11KG4sXCJjbGFzc1wiKS5jYWxsKG51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxcImNzcy1saW5rXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+XCIrcyhvKGUsZSkpK1wiPC9hPjwvbGk+IFwifSwyNjpmdW5jdGlvbih0LGUsbixpLHIpe3ZhciBhLG89dC5sb29rdXBQcm9wZXJ0eXx8ZnVuY3Rpb24odCxlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSlyZXR1cm4gdFtlXX07cmV0dXJuXCIgXCIrKG51bGwhPShhPW8obixcImVhY2hcIikuY2FsbChudWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30sbnVsbCE9ZT9vKGUsXCJpZnJhbWVEYXRhXCIpOmUse25hbWU6XCJlYWNoXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oMjcsciwwKSxpbnZlcnNlOnQubm9vcCxkYXRhOnJ9KSk/YTpcIlwiKStcIiBcIn0sMjc6ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgYSxvPXQubGFtYmRhLHM9dC5lc2NhcGVFeHByZXNzaW9uLHU9dC5sb29rdXBQcm9wZXJ0eXx8ZnVuY3Rpb24odCxlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSlyZXR1cm4gdFtlXX07cmV0dXJuJyA8bGk+PGEgaHJlZj1cIicrcyhvKGUsZSkpKydcIiB0YXJnZXQ9XCJfYmxhbmtcIiAnKyhudWxsIT0oYT11KG4sXCJjbGFzc1wiKS5jYWxsKG51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxcImlmcmFtZS1saW5rXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+XCIrcyhvKGUsZSkpK1wiPC9hPjwvbGk+IFwifSwyOTpmdW5jdGlvbih0LGUsbixpLHIpe3ZhciBhLG89dC5sb29rdXBQcm9wZXJ0eXx8ZnVuY3Rpb24odCxlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSlyZXR1cm4gdFtlXX07cmV0dXJuXCIgXCIrKG51bGwhPShhPW8obixcImVhY2hcIikuY2FsbChudWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30sbnVsbCE9ZT9vKGUsXCJpbWFnZURhdGFcIik6ZSx7bmFtZTpcImVhY2hcIixoYXNoOnt9LGZuOnQucHJvZ3JhbSgzMCxyLDApLGludmVyc2U6dC5ub29wLGRhdGE6cn0pKT9hOlwiXCIpK1wiIFwifSwzMDpmdW5jdGlvbih0LGUsbixpLHIpe3ZhciBhLG89bnVsbCE9ZT9lOnQubnVsbENvbnRleHR8fHt9LHM9dC5sb29rdXBQcm9wZXJ0eXx8ZnVuY3Rpb24odCxlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSlyZXR1cm4gdFtlXX07cmV0dXJuXCIgPGxpIFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJpbWFnZVwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpKyc+PGltZyBzcmM9XCInK3QuZXNjYXBlRXhwcmVzc2lvbih0LmxhbWJkYShlLGUpKSsnXCIgZGF0YS1leGNsdWRlPVwidHJ1ZVwiICcrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImltZy1saW5rXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PC9saT4gXCJ9LGNvbXBpbGVyOls4LFwiPj0gNC4zLjBcIl0sbWFpbjpmdW5jdGlvbih0LGUsbixpLHIpe3ZhciBhLG89bnVsbCE9ZT9lOnQubnVsbENvbnRleHR8fHt9LHM9dC5sb29rdXBQcm9wZXJ0eXx8ZnVuY3Rpb24odCxlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSlyZXR1cm4gdFtlXX07cmV0dXJuXCI8ZGl2IFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJzZWN0aW9uIGxvY2FsLXN0b3JhZ2VcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48aDIgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcInRpdGxlXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+TG9jYWwgU3RvcmFnZTxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImJ0biByZWZyZXNoLWxvY2FsLXN0b3JhZ2VcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48c3BhbiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiaWNvbi1yZWZyZXNoXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PC9zcGFuPjwvZGl2PjxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImJ0biBjbGVhci1zdG9yYWdlXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrJyBkYXRhLXR5cGU9XCJsb2NhbFwiPjxzcGFuICcrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImljb24tY2xlYXJcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48L3NwYW4+PC9kaXY+PGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiYnRuIHNlYXJjaFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpKycgZGF0YS10eXBlPVwibG9jYWxcIj48c3BhbiAnKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJpY29uLXNlYXJjaFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjwvc3Bhbj48L2Rpdj4gXCIrKG51bGwhPShhPXMobixcImlmXCIpLmNhbGwobyxudWxsIT1lP3MoZSxcImxvY2FsU3RvcmVTZWFyY2hLZXl3b3JkXCIpOmUse25hbWU6XCJpZlwiLGhhc2g6e30sZm46dC5wcm9ncmFtKDEsciwwKSxpbnZlcnNlOnQubm9vcCxkYXRhOnJ9KSk/YTpcIlwiKStcIiA8L2gyPjxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImNvbnRlbnRcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48dGFibGU+PHRib2R5PiBcIisobnVsbCE9KGE9cyhuLFwiaWZcIikuY2FsbChvLG51bGwhPWU/cyhlLFwibG9jYWxTdG9yZURhdGFcIik6ZSx7bmFtZTpcImlmXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oMyxyLDApLGludmVyc2U6dC5wcm9ncmFtKDYsciwwKSxkYXRhOnJ9KSk/YTpcIlwiKStcIiA8L3Rib2R5PjwvdGFibGU+PC9kaXY+PC9kaXY+PGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwic2VjdGlvbiBzZXNzaW9uLXN0b3JhZ2VcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48aDIgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcInRpdGxlXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+U2Vzc2lvbiBTdG9yYWdlPGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiYnRuIHJlZnJlc2gtc2Vzc2lvbi1zdG9yYWdlXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PHNwYW4gXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImljb24tcmVmcmVzaFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjwvc3Bhbj48L2Rpdj48ZGl2IFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJidG4gY2xlYXItc3RvcmFnZVwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpKycgZGF0YS10eXBlPVwic2Vzc2lvblwiPjxzcGFuICcrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImljb24tY2xlYXJcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48L3NwYW4+PC9kaXY+PGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiYnRuIHNlYXJjaFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpKycgZGF0YS10eXBlPVwic2Vzc2lvblwiPjxzcGFuICcrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImljb24tc2VhcmNoXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PC9zcGFuPjwvZGl2PiBcIisobnVsbCE9KGE9cyhuLFwiaWZcIikuY2FsbChvLG51bGwhPWU/cyhlLFwic2Vzc2lvblN0b3JlU2VhcmNoS2V5d29yZFwiKTplLHtuYW1lOlwiaWZcIixoYXNoOnt9LGZuOnQucHJvZ3JhbSg4LHIsMCksaW52ZXJzZTp0Lm5vb3AsZGF0YTpyfSkpP2E6XCJcIikrXCIgPC9oMj48ZGl2IFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJjb250ZW50XCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PHRhYmxlPjx0Ym9keT4gXCIrKG51bGwhPShhPXMobixcImlmXCIpLmNhbGwobyxudWxsIT1lP3MoZSxcInNlc3Npb25TdG9yZURhdGFcIik6ZSx7bmFtZTpcImlmXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oMTAsciwwKSxpbnZlcnNlOnQucHJvZ3JhbSg2LHIsMCksZGF0YTpyfSkpP2E6XCJcIikrXCIgPC90Ym9keT48L3RhYmxlPjwvZGl2PjwvZGl2PjxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxzKG4sXCJjb25jYXRcIikuY2FsbChvLFwic2VjdGlvbiBjb29raWUgXCIsbnVsbCE9ZT9zKGUsXCJjb29raWVTdGF0ZVwiKTplLHtuYW1lOlwiY29uY2F0XCIsaGFzaDp7fSxkYXRhOnJ9KSx7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48aDIgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcInRpdGxlXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+Q29va2llPGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiYnRuIHJlZnJlc2gtY29va2llXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PHNwYW4gXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImljb24tcmVmcmVzaFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjwvc3Bhbj48L2Rpdj48ZGl2IFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJidG4gY2xlYXItY29va2llXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PHNwYW4gXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImljb24tY2xlYXJcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48L3NwYW4+PC9kaXY+PGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiYnRuIHNlYXJjaFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpKycgZGF0YS10eXBlPVwiY29va2llXCI+PHNwYW4gJysobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiaWNvbi1zZWFyY2hcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48L3NwYW4+PC9kaXY+IFwiKyhudWxsIT0oYT1zKG4sXCJpZlwiKS5jYWxsKG8sbnVsbCE9ZT9zKGUsXCJjb29raWVTZWFyY2hLZXl3b3JkXCIpOmUse25hbWU6XCJpZlwiLGhhc2g6e30sZm46dC5wcm9ncmFtKDEzLHIsMCksaW52ZXJzZTp0Lm5vb3AsZGF0YTpyfSkpP2E6XCJcIikrXCIgPC9oMj48ZGl2IFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJjb250ZW50XCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PHRhYmxlPjx0Ym9keT4gXCIrKG51bGwhPShhPXMobixcImlmXCIpLmNhbGwobyxudWxsIT1lP3MoZSxcImNvb2tpZURhdGFcIik6ZSx7bmFtZTpcImlmXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oMTUsciwwKSxpbnZlcnNlOnQucHJvZ3JhbSg2LHIsMCksZGF0YTpyfSkpP2E6XCJcIikrXCIgPC90Ym9keT48L3RhYmxlPjwvZGl2PjwvZGl2PjxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxzKG4sXCJjb25jYXRcIikuY2FsbChvLFwic2VjdGlvbiBzY3JpcHQgXCIsbnVsbCE9ZT9zKGUsXCJzY3JpcHRTdGF0ZVwiKTplLHtuYW1lOlwiY29uY2F0XCIsaGFzaDp7fSxkYXRhOnJ9KSx7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48aDIgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcInRpdGxlXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+U2NyaXB0PGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiYnRuIHJlZnJlc2gtc2NyaXB0XCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PHNwYW4gXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImljb24tcmVmcmVzaFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjwvc3Bhbj48L2Rpdj48L2gyPjx1bCBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwibGluay1saXN0XCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+IFwiKyhudWxsIT0oYT1zKG4sXCJpZlwiKS5jYWxsKG8sbnVsbCE9ZT9zKGUsXCJzY3JpcHREYXRhXCIpOmUse25hbWU6XCJpZlwiLGhhc2g6e30sZm46dC5wcm9ncmFtKDE4LHIsMCksaW52ZXJzZTp0LnByb2dyYW0oMjEsciwwKSxkYXRhOnJ9KSk/YTpcIlwiKStcIiA8L3VsPjwvZGl2PjxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxzKG4sXCJjb25jYXRcIikuY2FsbChvLFwic2VjdGlvbiBzdHlsZXNoZWV0IFwiLG51bGwhPWU/cyhlLFwic3R5bGVzaGVldFN0YXRlXCIpOmUse25hbWU6XCJjb25jYXRcIixoYXNoOnt9LGRhdGE6cn0pLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjxoMiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwidGl0bGVcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj5TdHlsZXNoZWV0PGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiYnRuIHJlZnJlc2gtc3R5bGVzaGVldFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjxzcGFuIFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJpY29uLXJlZnJlc2hcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48L3NwYW4+PC9kaXY+PC9oMj48dWwgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImxpbmstbGlzdFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPiBcIisobnVsbCE9KGE9cyhuLFwiaWZcIikuY2FsbChvLG51bGwhPWU/cyhlLFwic3R5bGVzaGVldERhdGFcIik6ZSx7bmFtZTpcImlmXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oMjMsciwwKSxpbnZlcnNlOnQucHJvZ3JhbSgyMSxyLDApLGRhdGE6cn0pKT9hOlwiXCIpK1wiIDwvdWw+PC9kaXY+PGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwic2VjdGlvbiBpZnJhbWVcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48aDIgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcInRpdGxlXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+SWZyYW1lPGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiYnRuIHJlZnJlc2gtaWZyYW1lXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PHNwYW4gXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImljb24tcmVmcmVzaFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjwvc3Bhbj48L2Rpdj48L2gyPjx1bCBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwibGluay1saXN0XCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+IFwiKyhudWxsIT0oYT1zKG4sXCJpZlwiKS5jYWxsKG8sbnVsbCE9ZT9zKGUsXCJpZnJhbWVEYXRhXCIpOmUse25hbWU6XCJpZlwiLGhhc2g6e30sZm46dC5wcm9ncmFtKDI2LHIsMCksaW52ZXJzZTp0LnByb2dyYW0oMjEsciwwKSxkYXRhOnJ9KSk/YTpcIlwiKStcIiA8L3VsPjwvZGl2PjxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcInNlY3Rpb24gaW1hZ2VcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48aDIgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxzKG4sXCJjb25jYXRcIikuY2FsbChvLFwidGl0bGUgXCIsbnVsbCE9ZT9zKGUsXCJpbWFnZVN0YXRlXCIpOmUse25hbWU6XCJjb25jYXRcIixoYXNoOnt9LGRhdGE6cn0pLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPkltYWdlPGRpdiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiYnRuIHJlZnJlc2gtaW1hZ2VcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48c3BhbiBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiaWNvbi1yZWZyZXNoXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PC9zcGFuPjwvZGl2PjwvaDI+PHVsIFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJpbWFnZS1saXN0XCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+IFwiKyhudWxsIT0oYT1zKG4sXCJpZlwiKS5jYWxsKG8sbnVsbCE9ZT9zKGUsXCJpbWFnZURhdGFcIik6ZSx7bmFtZTpcImlmXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oMjksciwwKSxpbnZlcnNlOnQucHJvZ3JhbSgyMSxyLDApLGRhdGE6cn0pKT9hOlwiXCIpK1wiIDwvdWw+PC9kaXY+XCJ9LHVzZURhdGE6ITB9KX0sZnVuY3Rpb24odCxlLG4peyhlPW4oOCkoITEpKS5wdXNoKFt0LmksXCIjX2luZm97JG95OmF1dG87JHdvczp0b3VjaH0jX2luZm8gbGl7JG06MTBweDskYm86MXB4IHNvbGlkIHZhcigtLWJvcmRlcil9I19pbmZvIGxpIC5fY29udGVudCwjX2luZm8gbGkgLl90aXRsZXskcDoxMHB4fSNfaW5mbyBsaSAuX3RpdGxleyRwYjowOyRmczoxNnB4OyRjOnZhcigtLWFjY2VudCl9I19pbmZvIGxpIC5fY29udGVudHskbTowOy13ZWJraXQtdXNlci1zZWxlY3Q6dGV4dDstbW96LXVzZXItc2VsZWN0OnRleHQ7LW1zLXVzZXItc2VsZWN0OnRleHQ7JHVzOnRleHQ7JGM6dmFyKC0tZm9yZWdyb3VuZCk7d29yZC1icmVhazpicmVhay1hbGx9I19pbmZvIGxpIC5fY29udGVudCB0YWJsZXskdzoxMDAlOyRiYzpjb2xsYXBzZX0jX2luZm8gbGkgLl9jb250ZW50IHRhYmxlIHRkLCNfaW5mbyBsaSAuX2NvbnRlbnQgdGFibGUgdGh7JGJvOjFweCBzb2xpZCB2YXIoLS1ib3JkZXIpOyRwOjEwcHh9I19pbmZvIGxpIC5fY29udGVudCAqey13ZWJraXQtdXNlci1zZWxlY3Q6dGV4dDstbW96LXVzZXItc2VsZWN0OnRleHQ7LW1zLXVzZXItc2VsZWN0OnRleHQ7JHVzOnRleHR9I19pbmZvIGxpIC5fY29udGVudCBheyRjOnZhcigtLWxpbmstY29sb3IpfSNfaW5mbyBsaSAuX2RldmljZS1rZXksI19pbmZvIGxpIC5fc3lzdGVtLWtleXskdzoxMDBweH1cIixcIlwiXSksdC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDcpO3QuZXhwb3J0cz0oaS5kZWZhdWx0fHxpKS50ZW1wbGF0ZSh7MTpmdW5jdGlvbih0LGUsbixpLHIpe3ZhciBhLG89bnVsbCE9ZT9lOnQubnVsbENvbnRleHR8fHt9LHM9dC5sYW1iZGEsdT10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIiA8bGk+PGgyIFwiKyhudWxsIT0oYT11KG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJ0aXRsZVwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPlwiK3QuZXNjYXBlRXhwcmVzc2lvbihzKG51bGwhPWU/dShlLFwibmFtZVwiKTplLGUpKStcIjwvaDI+PGRpdiBcIisobnVsbCE9KGE9dShuLFwiY2xhc3NcIikuY2FsbChvLFwiY29udGVudFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPlwiKyhudWxsIT0oYT1zKG51bGwhPWU/dShlLFwidmFsXCIpOmUsZSkpP2E6XCJcIikrXCI8L2Rpdj48L2xpPiBcIn0sY29tcGlsZXI6WzgsXCI+PSA0LjMuMFwiXSxtYWluOmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIjx1bD4gXCIrKG51bGwhPShhPW8obixcImVhY2hcIikuY2FsbChudWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30sbnVsbCE9ZT9vKGUsXCJpbmZvc1wiKTplLHtuYW1lOlwiZWFjaFwiLGhhc2g6e30sZm46dC5wcm9ncmFtKDEsciwwKSxpbnZlcnNlOnQubm9vcCxkYXRhOnJ9KSk/YTpcIlwiKStcIiA8L3VsPlwifSx1c2VEYXRhOiEwfSl9LGZ1bmN0aW9uKHQsZSxuKXsoZT1uKDgpKCExKSkucHVzaChbdC5pLFwiI19zb3VyY2VzeyRveTphdXRvOyR3b3M6dG91Y2g7JGM6dmFyKC0tZm9yZWdyb3VuZCl9I19zb3VyY2VzIC5fY29kZS13cmFwcGVyLCNfc291cmNlcyAuX3Jhdy13cmFwcGVyeyRveDphdXRvOyR3b3M6dG91Y2g7JHc6MTAwJTskbWg6MTAwJX0jX3NvdXJjZXMgLl9yYXd7LXdlYmtpdC11c2VyLXNlbGVjdDp0ZXh0Oy1tb3otdXNlci1zZWxlY3Q6dGV4dDstbXMtdXNlci1zZWxlY3Q6dGV4dDskdXM6dGV4dDskcDoxMHB4fSNfc291cmNlcyAuX2NvZGV7JGZzOjEycHh9I19zb3VyY2VzIC5fY29kZSAuX2NvbnRlbnQgKnstd2Via2l0LXVzZXItc2VsZWN0OnRleHQ7LW1vei11c2VyLXNlbGVjdDp0ZXh0Oy1tcy11c2VyLXNlbGVjdDp0ZXh0OyR1czp0ZXh0fSNfc291cmNlcyBwcmUuX2NvZGV7JHA6MTBweH0jX3NvdXJjZXMgdGFibGUuX2NvZGV7JGJjOmNvbGxhcHNlfSNfc291cmNlcyB0YWJsZS5fY29kZSAuX2d1dHRlcnskYjp2YXIoLS1iYWNrZ3JvdW5kKTskYzp2YXIoLS1wcmltYXJ5KX0jX3NvdXJjZXMgdGFibGUuX2NvZGUgLl9saW5lLW51bXskYnI6MXB4IHNvbGlkIHZhcigtLWJvcmRlcik7JHA6MCAzcHggMCA1cHg7JHRhOnJpZ2h0fSNfc291cmNlcyB0YWJsZS5fY29kZSAuX2NvZGUtbGluZXskcDowIDRweDskd3M6cHJlfSNfc291cmNlcyAuX2ltYWdlIC5fYnJlYWRjcnVtYnskYjp2YXIoLS1kYXJrZXItYmFja2dyb3VuZCk7JGM6dmFyKC0tcHJpbWFyeSk7LXdlYmtpdC11c2VyLXNlbGVjdDp0ZXh0Oy1tb3otdXNlci1zZWxlY3Q6dGV4dDstbXMtdXNlci1zZWxlY3Q6dGV4dDskdXM6dGV4dDskbWI6MTBweDt3b3JkLWJyZWFrOmJyZWFrLWFsbDskcDoxMHB4OyRmczoxNnB4OyRtaDo0MHB4OyRiYjoxcHggc29saWQgdmFyKC0tYm9yZGVyKX0jX3NvdXJjZXMgLl9pbWFnZSAuX2ltZy1jb250YWluZXJ7JHRhOmNlbnRlcn0jX3NvdXJjZXMgLl9pbWFnZSAuX2ltZy1jb250YWluZXIgaW1ne21heC13aWR0aDoxMDAlfSNfc291cmNlcyAuX2ltYWdlIC5faW1nLWluZm97JHRhOmNlbnRlcjskbToyMHB4IDA7JGM6dmFyKC0tZm9yZWdyb3VuZCl9I19zb3VyY2VzIC5fanNvbnskcDowIDEwcHh9I19zb3VyY2VzIC5fanNvbiAqey13ZWJraXQtdXNlci1zZWxlY3Q6dGV4dDstbW96LXVzZXItc2VsZWN0OnRleHQ7LW1zLXVzZXItc2VsZWN0OnRleHQ7JHVzOnRleHR9I19zb3VyY2VzIGlmcmFtZXskdzoxMDAlOyRoOjEwMCV9XCIsXCJcIl0pLHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big3KTt0LmV4cG9ydHM9KGkuZGVmYXVsdHx8aSkudGVtcGxhdGUoezE6ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgYSxvPW51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxzPXQubG9va3VwUHJvcGVydHl8fGZ1bmN0aW9uKHQsZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpcmV0dXJuIHRbZV19O3JldHVyblwiIDxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcImNvZGUtd3JhcHBlclwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjx0YWJsZSBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiY29kZVwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjx0Ym9keT48dHI+PHRkIFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJndXR0ZXJcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj4gXCIrKG51bGwhPShhPXMobixcImVhY2hcIikuY2FsbChvLG51bGwhPWU/cyhlLFwiY29kZVwiKTplLHtuYW1lOlwiZWFjaFwiLGhhc2g6e30sZm46dC5wcm9ncmFtKDIsciwwKSxpbnZlcnNlOnQubm9vcCxkYXRhOnJ9KSk/YTpcIlwiKStcIiA8L3RkPjx0ZCBcIisobnVsbCE9KGE9cyhuLFwiY2xhc3NcIikuY2FsbChvLFwiY29udGVudFwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPiBcIisobnVsbCE9KGE9cyhuLFwiZWFjaFwiKS5jYWxsKG8sbnVsbCE9ZT9zKGUsXCJjb2RlXCIpOmUse25hbWU6XCJlYWNoXCIsaGFzaDp7fSxmbjp0LnByb2dyYW0oNCxyLDApLGludmVyc2U6dC5ub29wLGRhdGE6cn0pKT9hOlwiXCIpK1wiIDwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+PC9kaXY+IFwifSwyOmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIiA8ZGl2IFwiKyhudWxsIT0oYT1vKG4sXCJjbGFzc1wiKS5jYWxsKG51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxcImxpbmUtbnVtXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+XCIrdC5lc2NhcGVFeHByZXNzaW9uKHQubGFtYmRhKG51bGwhPWU/byhlLFwiaWR4XCIpOmUsZSkpK1wiPC9kaXY+IFwifSw0OmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIiA8cHJlIFwiKyhudWxsIT0oYT1vKG4sXCJjbGFzc1wiKS5jYWxsKG51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxcImNvZGUtbGluZVwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPlwiKyhudWxsIT0oYT10LmxhbWJkYShudWxsIT1lP28oZSxcInZhbFwiKTplLGUpKT9hOlwiXCIpK1wiPC9wcmU+IFwifSw2OmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz1udWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30scz10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIiA8ZGl2IFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJjb2RlLXdyYXBwZXJcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKStcIj48cHJlIFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJjb2RlXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+XCIrKG51bGwhPShhPXQubGFtYmRhKG51bGwhPWU/cyhlLFwiY29kZVwiKTplLGUpKT9hOlwiXCIpK1wiPC9wcmU+PC9kaXY+IFwifSxjb21waWxlcjpbOCxcIj49IDQuMy4wXCJdLG1haW46ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgYSxvPXQubG9va3VwUHJvcGVydHl8fGZ1bmN0aW9uKHQsZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpcmV0dXJuIHRbZV19O3JldHVybiBudWxsIT0oYT1vKG4sXCJpZlwiKS5jYWxsKG51bGwhPWU/ZTp0Lm51bGxDb250ZXh0fHx7fSxudWxsIT1lP28oZSxcInNob3dMaW5lTnVtXCIpOmUse25hbWU6XCJpZlwiLGhhc2g6e30sZm46dC5wcm9ncmFtKDEsciwwKSxpbnZlcnNlOnQucHJvZ3JhbSg2LHIsMCksZGF0YTpyfSkpP2E6XCJcIn0sdXNlRGF0YTohMH0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big3KTt0LmV4cG9ydHM9KGkuZGVmYXVsdHx8aSkudGVtcGxhdGUoe2NvbXBpbGVyOls4LFwiPj0gNC4zLjBcIl0sbWFpbjpmdW5jdGlvbih0LGUsbixpLHIpe3ZhciBhLG89bnVsbCE9ZT9lOnQubnVsbENvbnRleHR8fHt9LHM9dC5sYW1iZGEsdT10LmVzY2FwZUV4cHJlc3Npb24sbD10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm5cIjxkaXYgXCIrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwobyxcImltYWdlXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PGRpdiBcIisobnVsbCE9KGE9bChuLFwiY2xhc3NcIikuY2FsbChvLFwiYnJlYWRjcnVtYlwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPlwiK3UocyhudWxsIT1lP2woZSxcInNyY1wiKTplLGUpKStcIjwvZGl2PjxkaXYgXCIrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwobyxcImltZy1jb250YWluZXJcIix7bmFtZTpcImNsYXNzXCIsaGFzaDp7fSxkYXRhOnJ9KSk/YTpcIlwiKSsnIGRhdGEtZXhjbHVkZT1cInRydWVcIj48aW1nIHNyYz1cIicrdShzKG51bGwhPWU/bChlLFwic3JjXCIpOmUsZSkpKydcIj48L2Rpdj48ZGl2ICcrKG51bGwhPShhPWwobixcImNsYXNzXCIpLmNhbGwobyxcImltZy1pbmZvXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+XCIrdShzKG51bGwhPWU/bChlLFwid2lkdGhcIik6ZSxlKSkrXCIgw5cgXCIrdShzKG51bGwhPWU/bChlLFwiaGVpZ2h0XCIpOmUsZSkpK1wiPC9kaXY+PC9kaXY+XCJ9LHVzZURhdGE6ITB9KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNyk7dC5leHBvcnRzPShpLmRlZmF1bHR8fGkpLnRlbXBsYXRlKHtjb21waWxlcjpbOCxcIj49IDQuMy4wXCJdLG1haW46ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgYTtyZXR1cm5cIjx1bCBcIisobnVsbCE9KGE9KHQubG9va3VwUHJvcGVydHl8fGZ1bmN0aW9uKHQsZSl7aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSkpcmV0dXJuIHRbZV19KShuLFwiY2xhc3NcIikuY2FsbChudWxsIT1lP2U6dC5udWxsQ29udGV4dHx8e30sXCJqc29uXCIse25hbWU6XCJjbGFzc1wiLGhhc2g6e30sZGF0YTpyfSkpP2E6XCJcIikrXCI+PC91bD5cIn0sdXNlRGF0YTohMH0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big3KTt0LmV4cG9ydHM9KGkuZGVmYXVsdHx8aSkudGVtcGxhdGUoe2NvbXBpbGVyOls4LFwiPj0gNC4zLjBcIl0sbWFpbjpmdW5jdGlvbih0LGUsbixpLHIpe3ZhciBhLG89bnVsbCE9ZT9lOnQubnVsbENvbnRleHR8fHt9LHM9dC5sb29rdXBQcm9wZXJ0eXx8ZnVuY3Rpb24odCxlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxlKSlyZXR1cm4gdFtlXX07cmV0dXJuXCI8ZGl2IFwiKyhudWxsIT0oYT1zKG4sXCJjbGFzc1wiKS5jYWxsKG8sXCJyYXctd3JhcHBlclwiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPjxkaXYgXCIrKG51bGwhPShhPXMobixcImNsYXNzXCIpLmNhbGwobyxcInJhd1wiLHtuYW1lOlwiY2xhc3NcIixoYXNoOnt9LGRhdGE6cn0pKT9hOlwiXCIpK1wiPlwiK3QuZXNjYXBlRXhwcmVzc2lvbih0LmxhbWJkYShudWxsIT1lP3MoZSxcInZhbFwiKTplLGUpKStcIjwvZGl2PjwvZGl2PlwifSx1c2VEYXRhOiEwfSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDcpO3QuZXhwb3J0cz0oaS5kZWZhdWx0fHxpKS50ZW1wbGF0ZSh7Y29tcGlsZXI6WzgsXCI+PSA0LjMuMFwiXSxtYWluOmZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIGEsbz10Lmxvb2t1cFByb3BlcnR5fHxmdW5jdGlvbih0LGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiB0W2VdfTtyZXR1cm4nPGlmcmFtZSBzcmM9XCInKyhudWxsIT0oYT10LmxhbWJkYShudWxsIT1lP28oZSxcInNyY1wiKTplLGUpKT9hOlwiXCIpKydcIj48L2lmcmFtZT4nfSx1c2VEYXRhOiEwfSl9LGZ1bmN0aW9uKHQsZSxuKXsoZT1uKDgpKCExKSkucHVzaChbdC5pLCcubHVuYS1vYmplY3Qtdmlld2VyeyRveDphdXRvOyR3b3M6dG91Y2g7JGN1OmRlZmF1bHQ7JGZzOjEycHg7JGxoOjEuMjskbWg6MTAwJTskYzojMzMzO2xpc3Qtc3R5bGU6bm9uZSFpbXBvcnRhbnR9Lmx1bmEtb2JqZWN0LXZpZXdlcj5saT4ubHVuYS1vYmplY3Qtdmlld2VyLWtleXskZDpub25lfS5sdW5hLW9iamVjdC12aWV3ZXI+bGl7JHA6MTBweCAwfS5sdW5hLW9iamVjdC12aWV3ZXIgdWx7bGlzdC1zdHlsZTpub25lIWltcG9ydGFudH0ubHVuYS1vYmplY3Qtdmlld2VyIHVseyRwOjAhaW1wb3J0YW50OyRwbDoxNXB4IWltcG9ydGFudDskbTowIWltcG9ydGFudH0ubHVuYS1vYmplY3Qtdmlld2VyIGxpeyRwbzpyZWxhdGl2ZTskd3M6bm93cmFwOyRsaDoxNnB4OyRtaDoxNnB4fS5sdW5hLW9iamVjdC12aWV3ZXIgc3BhbnskcG86c3RhdGljIWltcG9ydGFudH0ubHVuYS1vYmplY3Qtdmlld2VyIGxpIC5sdW5hLW9iamVjdC12aWV3ZXItY29sbGFwc2Vkfi5sdW5hLW9iamVjdC12aWV3ZXItY2xvc2U6YmVmb3JleyRjOiM5OTl9Lmx1bmEtb2JqZWN0LXZpZXdlci1hcnJheSAubHVuYS1vYmplY3Qtdmlld2VyLW9iamVjdCAubHVuYS1vYmplY3Qtdmlld2VyLWtleXskZDppbmxpbmV9Lmx1bmEtb2JqZWN0LXZpZXdlci1udWxseyRjOmdyZXl9Lmx1bmEtb2JqZWN0LXZpZXdlci1yZWdleHAsLmx1bmEtb2JqZWN0LXZpZXdlci1zdHJpbmd7JGM6IzFhMWFhNn0ubHVuYS1vYmplY3Qtdmlld2VyLW51bWJlcnskYzojMWMwMGNmfS5sdW5hLW9iamVjdC12aWV3ZXItYm9vbGVhbnskYzojODgxMjgwfS5sdW5hLW9iamVjdC12aWV3ZXItc3BlY2lhbHskYzpncmV5fS5sdW5hLW9iamVjdC12aWV3ZXIta2V5LC5sdW5hLW9iamVjdC12aWV3ZXIta2V5LWxpZ2h0ZXJ7JGM6I2M4MDAwMH0ubHVuYS1vYmplY3Qtdmlld2VyLWtleS1saWdodGVye29wYWNpdHk6LjZ9Lmx1bmEtb2JqZWN0LXZpZXdlci1leHBhbmRlZDpiZWZvcmV7JGNvOlwiXCI7JHc6MDskaDowOyRibzo0cHggc29saWQgdHJhbnNwYXJlbnQ7JHBvOmFic29sdXRlOyRidGM6IzMzMzskbDotMTJweDskdDo2cHh9Lmx1bmEtb2JqZWN0LXZpZXdlci1jb2xsYXBzZWQ6YmVmb3JleyRjbzpcIlwiOyRibGM6IzMzMzskYnRjOnRyYW5zcGFyZW50OyRsOi0xMHB4OyR0OjRweH0ubHVuYS1vYmplY3Qtdmlld2VyLWhpZGRlbn51bHskZDpub25lfScsXCJcIl0pLHQuZXhwb3J0cz1lfSxmdW5jdGlvbih0LGUsbil7KGU9big4KSghMSkpLnB1c2goW3QuaSwnLmx1bmEtb2JqZWN0LXZpZXdlcnskYzp2YXIoLS1wcmltYXJ5KTskZnM6MTJweCFpbXBvcnRhbnR9Lmx1bmEtb2JqZWN0LXZpZXdlcj5saXskcDoxMHB4IDAhaW1wb3J0YW50fS5sdW5hLW9iamVjdC12aWV3ZXItbnVsbHskYzp2YXIoLS1vcGVyYXRvci1jb2xvcil9Lmx1bmEtb2JqZWN0LXZpZXdlci1yZWdleHAsLmx1bmEtb2JqZWN0LXZpZXdlci1zdHJpbmd7JGM6dmFyKC0tc3RyaW5nLWNvbG9yKX0ubHVuYS1vYmplY3Qtdmlld2VyLW51bWJlcnskYzp2YXIoLS1udW1iZXItY29sb3IpfS5sdW5hLW9iamVjdC12aWV3ZXItYm9vbGVhbnskYzp2YXIoLS1rZXl3b3JkLWNvbG9yKX0ubHVuYS1vYmplY3Qtdmlld2VyLXNwZWNpYWx7JGM6dmFyKC0tb3BlcmF0b3ItY29sb3IpfS5sdW5hLW9iamVjdC12aWV3ZXIta2V5LC5sdW5hLW9iamVjdC12aWV3ZXIta2V5LWxpZ2h0ZXJ7JGM6dmFyKC0tdmFyLWNvbG9yKX0ubHVuYS1vYmplY3Qtdmlld2VyLWV4cGFuZGVkOmJlZm9yZXtib3JkZXItY29sb3I6dHJhbnNwYXJlbnQ7JGJ0Yzp2YXIoLS1mb3JlZ3JvdW5kKX0ubHVuYS1vYmplY3Qtdmlld2VyLWNvbGxhcHNlZDpiZWZvcmV7JGJ0Yzp0cmFuc3BhcmVudDskYmxjOnZhcigtLWZvcmVncm91bmQpfS5fY29udGFpbmVyeyRwZTpub25lOyRwbzpmaXhlZDskbDowOyR0OjA7JHc6MTAwJTskaDoxMDAlOyR6OjEwMDAwMDskYzp2YXIoLS1mb3JlZ3JvdW5kKTskZmY6XCIuU0ZOU0Rpc3BsYXktUmVndWxhclwiLFwiSGVsdmV0aWNhIE5ldWVcIixcIkx1Y2lkYSBHcmFuZGVcIixcIlNlZ29lIFVJXCIsVGFob21hLHNhbnMtc2VyaTskZnM6MTRweDtkaXJlY3Rpb246bHRyfS5fY29udGFpbmVyICp7JGJzaTpib3JkZXItYm94OyRwZTphbGw7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTskdXM6bm9uZTstd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6dHJhbnNwYXJlbnQ7LXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0Om5vbmV9Ll9jb250YWluZXIgdWx7bGlzdC1zdHlsZTpub25lOyRwOjA7JG06MH0uX2NvbnRhaW5lciBoMSwuX2NvbnRhaW5lciBoMiwuX2NvbnRhaW5lciBoMywuX2NvbnRhaW5lciBoNHskbTowfS5faGlkZGVueyRkOm5vbmV9Ll90YWctbmFtZS1jb2xvcnskYzp2YXIoLS10YWctbmFtZS1jb2xvcil9Ll9mdW5jdGlvbi1jb2xvcnskYzp2YXIoLS1mdW5jdGlvbi1jb2xvcil9Ll9hdHRyaWJ1dGUtbmFtZS1jb2xvcnskYzp2YXIoLS1hdHRyaWJ1dGUtbmFtZS1jb2xvcil9Ll9vcGVyYXRvci1jb2xvcnskYzp2YXIoLS1vcGVyYXRvci1jb2xvcil9Ll9zdHJpbmctY29sb3J7JGM6dmFyKC0tc3RyaW5nLWNvbG9yKX0nLFwiXCJdKSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4peyhlPW4oOCkoITEpKS5wdXNoKFt0LmksXCIuX2NvbnRhaW5lciBhLC5fY29udGFpbmVyIGFiYnIsLl9jb250YWluZXIgYWNyb255bSwuX2NvbnRhaW5lciBhZGRyZXNzLC5fY29udGFpbmVyIGFwcGxldCwuX2NvbnRhaW5lciBhcnRpY2xlLC5fY29udGFpbmVyIGFzaWRlLC5fY29udGFpbmVyIGF1ZGlvLC5fY29udGFpbmVyIGIsLl9jb250YWluZXIgYmlnLC5fY29udGFpbmVyIGJsb2NrcXVvdGUsLl9jb250YWluZXIgYm9keSwuX2NvbnRhaW5lciBjYW52YXMsLl9jb250YWluZXIgY2FwdGlvbiwuX2NvbnRhaW5lciBjZW50ZXIsLl9jb250YWluZXIgY2l0ZSwuX2NvbnRhaW5lciBjb2RlLC5fY29udGFpbmVyIGRkLC5fY29udGFpbmVyIGRlbCwuX2NvbnRhaW5lciBkZXRhaWxzLC5fY29udGFpbmVyIGRmbiwuX2NvbnRhaW5lciBkaXYsLl9jb250YWluZXIgZGwsLl9jb250YWluZXIgZHQsLl9jb250YWluZXIgZW0sLl9jb250YWluZXIgZW1iZWQsLl9jb250YWluZXIgZmllbGRzZXQsLl9jb250YWluZXIgZmlnY2FwdGlvbiwuX2NvbnRhaW5lciBmaWd1cmUsLl9jb250YWluZXIgZm9vdGVyLC5fY29udGFpbmVyIGZvcm0sLl9jb250YWluZXIgaDEsLl9jb250YWluZXIgaDIsLl9jb250YWluZXIgaDMsLl9jb250YWluZXIgaDQsLl9jb250YWluZXIgaDUsLl9jb250YWluZXIgaDYsLl9jb250YWluZXIgaGVhZGVyLC5fY29udGFpbmVyIGhncm91cCwuX2NvbnRhaW5lciBodG1sLC5fY29udGFpbmVyIGksLl9jb250YWluZXIgaWZyYW1lLC5fY29udGFpbmVyIGltZywuX2NvbnRhaW5lciBpbnMsLl9jb250YWluZXIga2JkLC5fY29udGFpbmVyIGxhYmVsLC5fY29udGFpbmVyIGxlZ2VuZCwuX2NvbnRhaW5lciBsaSwuX2NvbnRhaW5lciBtYXJrLC5fY29udGFpbmVyIG1lbnUsLl9jb250YWluZXIgbmF2LC5fY29udGFpbmVyIG9iamVjdCwuX2NvbnRhaW5lciBvbCwuX2NvbnRhaW5lciBvdXRwdXQsLl9jb250YWluZXIgcCwuX2NvbnRhaW5lciBwcmUsLl9jb250YWluZXIgcSwuX2NvbnRhaW5lciBydWJ5LC5fY29udGFpbmVyIHMsLl9jb250YWluZXIgc2FtcCwuX2NvbnRhaW5lciBzZWN0aW9uLC5fY29udGFpbmVyIHNtYWxsLC5fY29udGFpbmVyIHNwYW4sLl9jb250YWluZXIgc3RyaWtlLC5fY29udGFpbmVyIHN0cm9uZywuX2NvbnRhaW5lciBzdWIsLl9jb250YWluZXIgc3VtbWFyeSwuX2NvbnRhaW5lciBzdXAsLl9jb250YWluZXIgdGFibGUsLl9jb250YWluZXIgdGJvZHksLl9jb250YWluZXIgdGQsLl9jb250YWluZXIgdGZvb3QsLl9jb250YWluZXIgdGgsLl9jb250YWluZXIgdGhlYWQsLl9jb250YWluZXIgdGltZSwuX2NvbnRhaW5lciB0ciwuX2NvbnRhaW5lciB0dCwuX2NvbnRhaW5lciB1LC5fY29udGFpbmVyIHVsLC5fY29udGFpbmVyIHZhciwuX2NvbnRhaW5lciB2aWRlb3skbTowOyRwOjA7JGJvOjA7JGZzOjEwMCU7Zm9udDppbmhlcml0O3ZlcnRpY2FsLWFsaWduOmJhc2VsaW5lfS5fY29udGFpbmVyIGFydGljbGUsLl9jb250YWluZXIgYXNpZGUsLl9jb250YWluZXIgZGV0YWlscywuX2NvbnRhaW5lciBmaWdjYXB0aW9uLC5fY29udGFpbmVyIGZpZ3VyZSwuX2NvbnRhaW5lciBmb290ZXIsLl9jb250YWluZXIgaGVhZGVyLC5fY29udGFpbmVyIGhncm91cCwuX2NvbnRhaW5lciBtZW51LC5fY29udGFpbmVyIG5hdiwuX2NvbnRhaW5lciBzZWN0aW9ueyRkOmJsb2NrfS5fY29udGFpbmVyIGJvZHl7JGxoOjF9Ll9jb250YWluZXIgb2wsLl9jb250YWluZXIgdWx7bGlzdC1zdHlsZTpub25lfS5fY29udGFpbmVyIGJsb2NrcXVvdGUsLl9jb250YWluZXIgcXtxdW90ZXM6bm9uZX0uX2NvbnRhaW5lciBibG9ja3F1b3RlOmFmdGVyLC5fY29udGFpbmVyIGJsb2NrcXVvdGU6YmVmb3JlLC5fY29udGFpbmVyIHE6YWZ0ZXIsLl9jb250YWluZXIgcTpiZWZvcmV7JGNvOicnOyRjbzpub25lfS5fY29udGFpbmVyIHRhYmxleyRiYzpjb2xsYXBzZTtib3JkZXItc3BhY2luZzowfVwiLFwiXCJdKSx0LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO24ucihlKTt2YXIgaT1uKDIpLHI9bi5uKGkpLGE9bigzKSxvPW4ubihhKSxzPW4oNCksdT1uLm4ocyksbD1uKDEpLGM9bi5uKGwpLF89big1KSxoPW4ubihfKSxwPW4oMjcpLGQ9bi5uKHApLGY9bigwKSx2PW5ldyBmLmM7di5BREQ9XCJBRERcIix2LlNIT1c9XCJTSE9XXCIsdi5TQ0FMRT1cIlNDQUxFXCI7dmFyIGc9dixtPW4oNiksYj1uLm4obSkseT1PYmplY3QoZi5iKSh7aW5pdDpmdW5jdGlvbih0KXt0aGlzLl8kZWw9dH0sc2hvdzpmdW5jdGlvbigpe3JldHVybiB0aGlzLl8kZWwuc2hvdygpLHRoaXN9LGhpZGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fJGVsLmhpZGUoKSx0aGlzfSxkZXN0cm95OmZ1bmN0aW9uKCl7dGhpcy5fJGVsLnJlbW92ZSgpfX0pLHc9W1wiYmFja2dyb3VuZFwiLFwiZm9yZWdyb3VuZFwiLFwic2VsZWN0Rm9yZWdyb3VuZFwiLFwiYWNjZW50XCIsXCJoaWdobGlnaHRcIixcImJvcmRlclwiLFwicHJpbWFyeVwiLFwiY29udHJhc3RcIixcInZhckNvbG9yXCIsXCJzdHJpbmdDb2xvclwiLFwia2V5d29yZENvbG9yXCIsXCJudW1iZXJDb2xvclwiLFwib3BlcmF0b3JDb2xvclwiLFwibGlua0NvbG9yXCIsXCJ0ZXh0Q29sb3JcIixcInRhZ05hbWVDb2xvclwiLFwiZnVuY3Rpb25Db2xvclwiLFwiYXR0cmlidXRlTmFtZUNvbG9yXCIsXCJjb21tZW50Q29sb3JcIl0seD13Lmxlbmd0aDtmdW5jdGlvbiBrKHQpe2Zvcih2YXIgZT17fSxuPTA7bjx4O24rKyllW3dbbl1dPXRbbl07cmV0dXJuIGV9ZnVuY3Rpb24gJCh0KXtyZXR1cm4gT2JqZWN0KGYuRykodCkmJih0PWsodCkpLHQuZGFya2VyQmFja2dyb3VuZHx8KHQuZGFya2VyQmFja2dyb3VuZD10LmNvbnRyYXN0KSxPYmplY3QoZi56KSh7Y29uc29sZVdhcm5CYWNrZ3JvdW5kOlwiIzMzMmEwMFwiLGNvbnNvbGVXYXJuRm9yZWdyb3VuZDpcIiNmZmNiNmJcIixjb25zb2xlV2FybkJvcmRlcjpcIiM2NTBcIixjb25zb2xlRXJyb3JCYWNrZ3JvdW5kOlwiIzI5MDAwMFwiLGNvbnNvbGVFcnJvckZvcmVncm91bmQ6XCIjZmY4MDgwXCIsY29uc29sZUVycm9yQm9yZGVyOlwiIzVjMDAwMFwiLGxpZ2h0OlwiI2NjY1wiLGRhcms6XCIjYWFhXCJ9LHQpfWZ1bmN0aW9uIE8odCl7cmV0dXJuIE9iamVjdChmLkcpKHQpJiYodD1rKHQpKSx0LmRhcmtlckJhY2tncm91bmR8fCh0LmRhcmtlckJhY2tncm91bmQ9dC5jb250cmFzdCksT2JqZWN0KGYueikoe2NvbnNvbGVXYXJuQmFja2dyb3VuZDpcIiNmZmZiZTVcIixjb25zb2xlV2FybkZvcmVncm91bmQ6XCIjNWM1YzAwXCIsY29uc29sZVdhcm5Cb3JkZXI6XCIjZmZmNWMyXCIsY29uc29sZUVycm9yQmFja2dyb3VuZDpcIiNmZmYwZjBcIixjb25zb2xlRXJyb3JGb3JlZ3JvdW5kOlwiI2YwMFwiLGNvbnNvbGVFcnJvckJvcmRlcjpcIiNmZmQ2ZDZcIixsaWdodDpcIiNmZmZcIixkYXJrOlwiI2VlZVwifSx0KX12YXIgRT17TGlnaHQ6Tyh7ZGFya2VyQmFja2dyb3VuZDpcIiNmM2YzZjNcIixiYWNrZ3JvdW5kOlwiI2ZmZlwiLGZvcmVncm91bmQ6XCIjMzMzXCIsc2VsZWN0Rm9yZWdyb3VuZDpcIiMzMzNcIixhY2NlbnQ6XCIjMWE3M2U4XCIsaGlnaGxpZ2h0OlwiI2VhZWFlYVwiLGJvcmRlcjpcIiNjY2NcIixwcmltYXJ5OlwiIzMzM1wiLGNvbnRyYXN0OlwiI2YyZjdmZFwiLHZhckNvbG9yOlwiI2M4MDAwMFwiLHN0cmluZ0NvbG9yOlwiIzFhMWFhNlwiLGtleXdvcmRDb2xvcjpcIiM4ODEyODBcIixudW1iZXJDb2xvcjpcIiMxYzAwY2ZcIixvcGVyYXRvckNvbG9yOlwiIzgwODA4MFwiLGxpbmtDb2xvcjpcIiMxMTU1Y2NcIix0ZXh0Q29sb3I6XCIjODA5N2JkXCIsdGFnTmFtZUNvbG9yOlwiIzg4MTI4MFwiLGZ1bmN0aW9uQ29sb3I6XCIjMjIyXCIsYXR0cmlidXRlTmFtZUNvbG9yOlwiIzk5NDUwMFwiLGNvbW1lbnRDb2xvcjpcIiMyMzZlMjVcIixjc3NQcm9wZXJ0eTpcIiNjODAwMDBcIn0pLERhcms6JCh7ZGFya2VyQmFja2dyb3VuZDpcIiMzMzNcIixiYWNrZ3JvdW5kOlwiIzI0MjQyNFwiLGZvcmVncm91bmQ6XCIjYTVhNWE1XCIsc2VsZWN0Rm9yZWdyb3VuZDpcIiNlYWVhZWFcIixhY2NlbnQ6XCIjNTU1XCIsaGlnaGxpZ2h0OlwiIzAwMFwiLGJvcmRlcjpcIiMzZDNkM2RcIixwcmltYXJ5OlwiI2NjY1wiLGNvbnRyYXN0OlwiIzBiMjU0NFwiLHZhckNvbG9yOlwiI2UzNmVlY1wiLHN0cmluZ0NvbG9yOlwiI2YyOTc2NlwiLGtleXdvcmRDb2xvcjpcIiM5OTgwZmZcIixudW1iZXJDb2xvcjpcIiM5OTgwZmZcIixvcGVyYXRvckNvbG9yOlwiIzdmN2Y3ZlwiLGxpbmtDb2xvcjpcIiNhYmFiYWJcIix0ZXh0Q29sb3I6XCIjNDI1OTdmXCIsdGFnTmFtZUNvbG9yOlwiIzVkYjBkN1wiLGZ1bmN0aW9uQ29sb3I6XCIjZDVkNWQ1XCIsYXR0cmlidXRlTmFtZUNvbG9yOlwiIzliYmJkY1wiLGNvbW1lbnRDb2xvcjpcIiM3NDc0NzRcIn0pLFwiTWF0ZXJpYWwgT2NlYW5pY1wiOiQoW1wiIzI2MzIzOFwiLFwiI0IwQkVDNVwiLFwiI0ZGRkZGRlwiLFwiIzAwOTY4OFwiLFwiIzQyNUI2N1wiLFwiIzJBMzczRVwiLFwiIzYwN0Q4QlwiLFwiIzFFMjcyQ1wiLFwiI2VlZmZmZlwiLFwiI2MzZTg4ZFwiLFwiI2M3OTJlYVwiLFwiI2Y3OGM2Y1wiLFwiIzg5ZGRmZlwiLFwiIzgwY2JjNFwiLFwiI0IwQkVDNVwiLFwiI2YwNzE3OFwiLFwiIzgyYWFmZlwiLFwiI2ZmY2I2YlwiLFwiIzU0NmU3YVwiXSksXCJNYXRlcmlhbCBEYXJrZXJcIjokKFtcIiMyMTIxMjFcIixcIiNCMEJFQzVcIixcIiNGRkZGRkZcIixcIiNGRjk4MDBcIixcIiMzRjNGM0ZcIixcIiMyOTI5MjlcIixcIiM3MjcyNzJcIixcIiMxQTFBMUFcIixcIiNlZWZmZmZcIixcIiNjM2U4OGRcIixcIiNjNzkyZWFcIixcIiNmNzhjNmNcIixcIiM4OWRkZmZcIixcIiM4MGNiYzRcIixcIiNCMEJFQzVcIixcIiNmMDcxNzhcIixcIiM4MmFhZmZcIixcIiNmZmNiNmJcIixcIiM2MTYxNjFcIl0pLFwiTWF0ZXJpYWwgTGlnaHRlclwiOk8oW1wiI0ZBRkFGQVwiLFwiIzU0NkU3QVwiLFwiIzU0NmU3YVwiLFwiIzAwQkNENFwiLFwiI0U3RTdFOFwiLFwiI2QzZTFlOFwiLFwiIzk0QTdCMFwiLFwiI0Y0RjRGNFwiLFwiIzI3MjcyN1wiLFwiIzkxQjg1OVwiLFwiIzdDNERGRlwiLFwiI0Y3NkQ0N1wiLFwiIzM5QURCNVwiLFwiIzM5QURCNVwiLFwiIzU0NkU3QVwiLFwiI0U1MzkzNVwiLFwiIzYxODJCOFwiLFwiI0Y2QTQzNFwiLFwiI0FBQkZDOVwiXSksXCJNYXRlcmlhbCBQYWxlbmlnaHRcIjokKFtcIiMyOTJEM0VcIixcIiNBNkFDQ0RcIixcIiNGRkZGRkZcIixcIiNhYjQ3YmNcIixcIiM0NDQyNjdcIixcIiMyYjJhM2VcIixcIiM2NzZFOTVcIixcIiMyMDIzMzFcIixcIiNlZWZmZmZcIixcIiNjM2U4OGRcIixcIiNjNzkyZWFcIixcIiNmNzhjNmNcIixcIiM4OWRkZmZcIixcIiM4MGNiYzRcIixcIiNBNkFDQ0RcIixcIiNmMDcxNzhcIixcIiM4MmFhZmZcIixcIiNmZmNiNmJcIixcIiM2NzZFOTVcIl0pLFwiTWF0ZXJpYWwgRGVlcCBPY2VhblwiOiQoW1wiIzBGMTExQVwiLFwiIzhGOTNBMlwiLFwiI0ZGRkZGRlwiLFwiIzg0ZmZmZlwiLFwiIzFGMjIzM1wiLFwiIzQxNDY1YlwiLFwiIzRCNTI2RFwiLFwiIzA5MEIxMFwiLFwiI2VlZmZmZlwiLFwiI2MzZTg4ZFwiLFwiI2M3OTJlYVwiLFwiI2Y3OGM2Y1wiLFwiIzg5ZGRmZlwiLFwiIzgwY2JjNFwiLFwiIzhGOTNBMlwiLFwiI2YwNzE3OFwiLFwiIzgyYWFmZlwiLFwiI2ZmY2I2YlwiLFwiIzcxN0NCNFwiXSksXCJNb25va2FpIFByb1wiOiQoW1wiIzJEMkEyRVwiLFwiI2ZjZmNmYVwiLFwiI0ZGRkZGRlwiLFwiI2ZmZDg2NlwiLFwiIzViNTk1Y1wiLFwiIzQyM2Y0M1wiLFwiIzkzOTI5M1wiLFwiIzIyMUYyMlwiLFwiI0ZDRkNGQVwiLFwiI0ZGRDg2NlwiLFwiI0ZGNjE4OFwiLFwiI0FCOURGMlwiLFwiI0ZGNjE4OFwiLFwiIzc4RENFOFwiLFwiI2ZjZmNmYVwiLFwiI0ZGNjE4OFwiLFwiI0E5REM3NlwiLFwiIzc4RENFOFwiLFwiIzcyNzA3MlwiXSksRHJhY3VsYTokKFtcIiMyODJBMzZcIixcIiNGOEY4RjJcIixcIiM4QkU5RkRcIixcIiNGRjc5QzVcIixcIiM2MjcyQTRcIixcIiMyMTIyMkNcIixcIiM2MjcyQTRcIixcIiMxOTFBMjFcIixcIiNGOEY4RjJcIixcIiNGMUZBOENcIixcIiNGRjc5QzZcIixcIiNCRDkzRjlcIixcIiNGRjc5QzZcIixcIiNGMUZBOENcIixcIiNGOEY4RjJcIixcIiNGRjc5QzZcIixcIiM1MEZBNzhcIixcIiM1MEZBN0JcIixcIiM2MjcyQTRcIl0pLFwiQXJjIERhcmtcIjokKFtcIiMyZjM0M2ZcIixcIiNEM0RBRTNcIixcIiNGRkZGRkZcIixcIiM0MkE1RjVcIixcIiMzRjNGNDZcIixcIiM0MDQ1NTJcIixcIiM4YjllYjVcIixcIiMyNjJiMzNcIixcIiNDRjZBNENcIixcIiM4RjlENkFcIixcIiM5Qjg1OURcIixcIiNDREE4NjlcIixcIiNBN0E3QTdcIixcIiM3NTg3QTZcIixcIiNEM0RBRTNcIixcIiNDRjZBNENcIixcIiM3NTg3QTZcIixcIiNGOUVFOThcIixcIiM3NDdDODRcIl0pLFwiQXRvbSBPbmUgRGFya1wiOiQoW1wiIzI4MkMzNFwiLFwiIzk3OUZBRFwiLFwiI0ZGRkZGRlwiLFwiIzI5NzlmZlwiLFwiIzM4M0Q0OFwiLFwiIzJlMzIzOVwiLFwiIzk3OUZBRFwiLFwiIzIxMjUyQlwiLFwiI0QxOUE2NlwiLFwiIzk4QzM3OVwiLFwiI0M2NzlERFwiLFwiI0QxOUE2NlwiLFwiIzYxQUZFRlwiLFwiIzU2QjZDMlwiLFwiIzk3OUZBRFwiLFwiI0YwNzE3OFwiLFwiIzYxQUVFRlwiLFwiI0U1QzE3Q1wiLFwiIzU5NjI2RlwiXSksXCJBdG9tIE9uZSBMaWdodFwiOk8oW1wiI0ZBRkFGQVwiLFwiIzIzMjMyNFwiLFwiIzIzMjMyNFwiLFwiIzI5NzlmZlwiLFwiI0VBRUFFQlwiLFwiI0RCREJEQ1wiLFwiIzlEOUQ5RlwiLFwiI0ZGRkZGRlwiLFwiIzk4NjgwMVwiLFwiIzUwQTE0RVwiLFwiI0E2MjZBNFwiLFwiIzk4NjgwMVwiLFwiIzQwNzhGMlwiLFwiIzAxODRCQ1wiLFwiIzIzMjMyNFwiLFwiI0U0NTY0QVwiLFwiIzQwNzhGMlwiLFwiI0MxODQwMVwiLFwiI0EwQTFBN1wiXSksXCJTb2xhcml6ZWQgRGFya1wiOiQoW1wiIzAwMkIzNlwiLFwiIzgzOTQ5NlwiLFwiI0ZGRkZGRlwiLFwiI2QzMzY4MlwiLFwiIzExMzUzRlwiLFwiIzBEMzY0MFwiLFwiIzU4NmU3NVwiLFwiIzAwMjUyRVwiLFwiIzI2OEJEMlwiLFwiIzJBQTE5OFwiLFwiIzg1OTkwMFwiLFwiI0QzMzY4MlwiLFwiIzkzQTFBMVwiLFwiIzI2OEJEMlwiLFwiIzgzOTQ5NlwiLFwiIzI2OEJEMlwiLFwiI0I1ODkwMFwiLFwiI0I1ODkwMFwiLFwiIzY1N0I4M1wiXSksXCJTb2xhcml6ZWQgTGlnaHRcIjpPKFtcIiNmZGY2ZTNcIixcIiM1ODZlNzVcIixcIiMwMDJiMzZcIixcIiNkMzM2ODJcIixcIiNGNkYwREVcIixcIiNmN2YyZTJcIixcIiM5M2ExYTFcIixcIiNlZWU4ZDVcIixcIiMyNjhCRDJcIixcIiMyQUExOThcIixcIiM4NTk5MDBcIixcIiNEMzM2ODJcIixcIiM2NTdCODNcIixcIiMyNjhCRDJcIixcIiM1ODZlNzVcIixcIiMyNjhCRDJcIixcIiNCNTg5MDBcIixcIiM2NTdCODNcIixcIiM5M0ExQTFcIl0pLEdpdGh1YjpPKFtcIiNGN0Y4RkFcIixcIiM1QjYxNjhcIixcIiNGRkZGRkZcIixcIiM3OUNCNjBcIixcIiNDQ0U1RkZcIixcIiNERkUxRTRcIixcIiMyOTJEMzFcIixcIiNGRkZGRkZcIixcIiMyNDI5MkVcIixcIiMwMzJGNjJcIixcIiNENzNBNDlcIixcIiMwMDVDQzVcIixcIiNENzNBNDlcIixcIiMwMDVDQzVcIixcIiM1QjYxNjhcIixcIiMyMjg2M0FcIixcIiM2RjQyQzFcIixcIiM2RjQyQzFcIixcIiM2QTczN0RcIl0pLFwiTmlnaHQgT3dsXCI6JChbXCIjMDExNjI3XCIsXCIjYjBiZWM1XCIsXCIjZmZmZmZmXCIsXCIjN2U1N2MyXCIsXCIjMTUyQzNCXCIsXCIjMmEzNzNlXCIsXCIjNjA3ZDhiXCIsXCIjMDAxNDI0XCIsXCIjYWRkYjY3XCIsXCIjZWNjNDhkXCIsXCIjYzc5MmVhXCIsXCIjZjc4YzZjXCIsXCIjYzc5MmVhXCIsXCIjODBDQkM0XCIsXCIjYjBiZWM1XCIsXCIjN2ZkYmNhXCIsXCIjODJBQUZGXCIsXCIjRkFENDMwXCIsXCIjNjM3Nzc3XCJdKSxcIkxpZ2h0IE93bFwiOk8oW1wiI0ZBRkFGQVwiLFwiIzU0NmU3YVwiLFwiIzQwM2Y1M1wiLFwiIzI2OTM4NlwiLFwiI0UwRTdFQVwiLFwiI2VmZWZlZlwiLFwiIzQwM0Y1M1wiLFwiI0ZBRkFGQVwiLFwiIzBDOTY5QlwiLFwiI2M5Njc2NVwiLFwiIzk5NGNjM1wiLFwiI2FhMDk4MlwiLFwiIzdkODE4YlwiLFwiIzk5NGNjM1wiLFwiIzU0NmU3YVwiLFwiIzk5NGNjM1wiLFwiIzQ4NzZkNlwiLFwiIzQ4NzZkNlwiLFwiIzYzNzc3N1wiXSl9LGo9bigyOCksQT1uLm4oaiksUz1bXSxUPTEsQz1FLkxpZ2h0LFA9ZnVuY3Rpb24gdChlLG4pe2U9T2JqZWN0KGYuemIpKGUpO2Zvcih2YXIgaT0wLHI9Uy5sZW5ndGg7aTxyO2krKylpZihTW2ldLmNzcz09PWUpcmV0dXJuO249bnx8dC5jb250YWluZXJ8fGRvY3VtZW50LmhlYWQ7dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO2EudHlwZT1cInRleHQvY3NzXCIsbi5hcHBlbmRDaGlsZChhKTt2YXIgbz17Y3NzOmUsZWw6YSxjb250YWluZXI6bn07cmV0dXJuIFIobyksUy5wdXNoKG8pLG99O2Z1bmN0aW9uIEQoKXtPYmplY3QoZi51KShTLChmdW5jdGlvbih0KXtyZXR1cm4gUih0KX0pKX1mdW5jdGlvbiBSKHQpe3ZhciBlPXQuY3NzLG49dC5lbDtlPShlPWUucmVwbGFjZSgvKFxcZCspcHgvZywoZnVuY3Rpb24odCxlKXtyZXR1cm4rZSpUK1wicHhcIn0pKSkucmVwbGFjZSgvXy9nLFwiZXJ1ZGEtXCIpLE9iamVjdChmLnUpKEEuYSwoZnVuY3Rpb24odCxuKXtlPWUucmVwbGFjZShuZXcgUmVnRXhwKE9iamVjdChmLnkpKFwiJFwiLmNvbmNhdCh0LFwiOlwiKSksXCJnXCIpLG4rXCI6XCIpfSkpO3ZhciBpPU9iamVjdChmLmFiKShFLkxpZ2h0KTtPYmplY3QoZi51KShpLChmdW5jdGlvbih0KXtlPWUucmVwbGFjZShuZXcgUmVnRXhwKFwidmFyXFxcXCgtLVwiLmNvbmNhdChPYmplY3QoZi5aKSh0KSxcIlxcXFwpXCIpLFwiZ1wiKSxDW3RdKX0pKSxuLmlubmVyVGV4dD1lfVAuc2V0U2NhbGU9ZnVuY3Rpb24odCl7VD10LEQoKX0sUC5zZXRUaGVtZT1mdW5jdGlvbih0KXtDPU9iamVjdChmLlgpKHQpP0VbdF18fEUuTGlnaHQ6T2JqZWN0KGYucikodCxFLkxpZ2h0KSxEKCl9LFAuZ2V0Q3VyVGhlbWU9ZnVuY3Rpb24oKXtyZXR1cm4gQ30sUC5nZXRUaGVtZXM9ZnVuY3Rpb24oKXtyZXR1cm4gRX0sUC5jbGVhcj1mdW5jdGlvbigpe09iamVjdChmLnUpKFMsKGZ1bmN0aW9uKHQpe3ZhciBlPXQuY29udGFpbmVyLG49dC5lbDtyZXR1cm4gZS5yZW1vdmVDaGlsZChuKX0pKSxTPVtdfSxQLnJlbW92ZT1mdW5jdGlvbih0KXtTPU9iamVjdChmLkIpKFMsKGZ1bmN0aW9uKGUpe3JldHVybiBlIT09dH0pKSx0LmNvbnRhaW5lci5yZW1vdmVDaGlsZCh0LmVsKX07dmFyIEwsTj1QLE09ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3ZhciB0O3JldHVybiByKCkodGhpcyxlKSwodD11KCkodGhpcyxjKCkoZSkuY2FsbCh0aGlzKSkpLl9zdHlsZT1OKG4oMzgpKSx0Lm5hbWU9XCJzZXR0aW5nc1wiLHQuX3N3aXRjaFRwbD1uKDM5KSx0Ll9zZWxlY3RUcGw9big1NSksdC5fcmFuZ2VUcGw9big1NiksdC5fY29sb3JUcGw9big1NyksdC5fc2V0dGluZ3M9W10sdH1yZXR1cm4gaCgpKGUsdCksbygpKGUsW3trZXk6XCJpbml0XCIsdmFsdWU6ZnVuY3Rpb24odCl7YigpKGMoKShlLnByb3RvdHlwZSksXCJpbml0XCIsdGhpcykuY2FsbCh0aGlzLHQpLHRoaXMuX2JpbmRFdmVudCgpfX0se2tleTpcInJlbW92ZVwiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztyZXR1cm4gT2JqZWN0KGYuWCkodCk/dGhpcy5fJGVsLmZpbmQoXCIuZXJ1ZGEtdGV4dFwiKS5lYWNoKChmdW5jdGlvbigpe3ZhciBlPU9iamVjdChmLmEpKHRoaXMpO2UudGV4dCgpPT09dCYmZS5yZW1vdmUoKX0pKTp0aGlzLl9zZXR0aW5ncz1PYmplY3QoZi5CKSh0aGlzLl9zZXR0aW5ncywoZnVuY3Rpb24oaSl7cmV0dXJuIGkuY29uZmlnIT09dHx8aS5rZXkhPT1lfHwobi5fJGVsLmZpbmQoXCIjXCIraS5pZCkucmVtb3ZlKCksITEpfSkpLHRoaXMuX2NsZWFuU2VwYXJhdG9yKCksdGhpc319LHtrZXk6XCJkZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXtiKCkoYygpKGUucHJvdG90eXBlKSxcImRlc3Ryb3lcIix0aGlzKS5jYWxsKHRoaXMpLE4ucmVtb3ZlKHRoaXMuX3N0eWxlKX19LHtrZXk6XCJjbGVhclwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fc2V0dGluZ3M9W10sdGhpcy5fJGVsLmh0bWwoXCJcIil9fSx7a2V5Olwic3dpdGNoXCIsdmFsdWU6ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXRoaXMuX2dlbklkKFwic2V0dGluZ3NcIik7cmV0dXJuIHRoaXMuX3NldHRpbmdzLnB1c2goe2NvbmZpZzp0LGtleTplLGlkOml9KSx0aGlzLl8kZWwuYXBwZW5kKHRoaXMuX3N3aXRjaFRwbCh7ZGVzYzpuLGtleTplLGlkOmksdmFsOnQuZ2V0KGUpfSkpLHRoaXN9fSx7a2V5OlwiY29sb3JcIix2YWx1ZTpmdW5jdGlvbih0LGUsbil7dmFyIGk9YXJndW1lbnRzLmxlbmd0aD4zJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOltcIiMyMTk2ZjNcIixcIiM3MDdkOGJcIixcIiNmNDQzMzZcIixcIiMwMDk2ODhcIixcIiNmZmMxMDdcIl0scj10aGlzLl9nZW5JZChcInNldHRpbmdzXCIpO3JldHVybiB0aGlzLl9zZXR0aW5ncy5wdXNoKHtjb25maWc6dCxrZXk6ZSxpZDpyfSksdGhpcy5fJGVsLmFwcGVuZCh0aGlzLl9jb2xvclRwbCh7ZGVzYzpuLGNvbG9yczppLGlkOnIsdmFsOnQuZ2V0KGUpfSkpLHRoaXN9fSx7a2V5Olwic2VsZWN0XCIsdmFsdWU6ZnVuY3Rpb24odCxlLG4saSl7dmFyIHI9dGhpcy5fZ2VuSWQoXCJzZXR0aW5nc1wiKTtyZXR1cm4gdGhpcy5fc2V0dGluZ3MucHVzaCh7Y29uZmlnOnQsa2V5OmUsaWQ6cn0pLHRoaXMuXyRlbC5hcHBlbmQodGhpcy5fc2VsZWN0VHBsKHtkZXNjOm4sc2VsZWN0aW9uczppLGlkOnIsdmFsOnQuZ2V0KGUpfSkpLHRoaXN9fSx7a2V5OlwicmFuZ2VcIix2YWx1ZTpmdW5jdGlvbih0LGUsbixpKXt2YXIgcj1pLm1pbixhPXZvaWQgMD09PXI/MDpyLG89aS5tYXgscz12b2lkIDA9PT1vPzE6byx1PWkuc3RlcCxsPXZvaWQgMD09PXU/LjE6dSxjPXRoaXMuX2dlbklkKFwic2V0dGluZ3NcIik7dGhpcy5fc2V0dGluZ3MucHVzaCh7Y29uZmlnOnQsa2V5OmUsbWluOmEsbWF4OnMsc3RlcDpsLGlkOmN9KTt2YXIgXz10LmdldChlKTtyZXR1cm4gdGhpcy5fJGVsLmFwcGVuZCh0aGlzLl9yYW5nZVRwbCh7ZGVzYzpuLG1pbjphLG1heDpzLHN0ZXA6bCx2YWw6Xyxwcm9ncmVzczpGKF8sYSxzKSxpZDpjfSkpLHRoaXN9fSx7a2V5Olwic2VwYXJhdG9yXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fJGVsLmFwcGVuZCgnPGRpdiBjbGFzcz1cImVydWRhLXNlcGFyYXRvclwiPjwvZGl2PicpLHRoaXN9fSx7a2V5OlwidGV4dFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl8kZWwuYXBwZW5kKCc8ZGl2IGNsYXNzPVwiZXJ1ZGEtdGV4dFwiPicuY29uY2F0KHQsXCI8L2Rpdj5cIikpLHRoaXN9fSx7a2V5OlwiX2NsZWFuU2VwYXJhdG9yXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD1PYmplY3QoZi5qKSh0aGlzLl8kZWwuZ2V0KDApLmNoaWxkcmVuKTtmdW5jdGlvbiBlKHQpe3JldHVyblwiZXJ1ZGEtc2VwYXJhdG9yXCI9PT10LmdldEF0dHJpYnV0ZShcImNsYXNzXCIpfWZvcih2YXIgbj0wLGk9dC5sZW5ndGg7bjxpLTE7bisrKWUodFtuXSkmJmUodFtuKzFdKSYmT2JqZWN0KGYuYSkodFtuXSkucmVtb3ZlKCl9fSx7a2V5OlwiX2dlbklkXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gT2JqZWN0KGYuQ2IpKFwiZXJ1ZGEtc2V0dGluZ3NcIil9fSx7a2V5OlwiX2Nsb3NlQWxsXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl8kZWwuZmluZChcIi5lcnVkYS1vcGVuXCIpLnJtQ2xhc3MoXCJlcnVkYS1vcGVuXCIpfX0se2tleTpcIl9nZXRTZXR0aW5nXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU7cmV0dXJuIE9iamVjdChmLnUpKHRoaXMuX3NldHRpbmdzLChmdW5jdGlvbihuKXtuLmlkPT09dCYmKGU9bil9KSksZX19LHtrZXk6XCJfYmluZEV2ZW50XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuXyRlbC5vbihcImNsaWNrXCIsXCIuZXJ1ZGEtY2hlY2tib3hcIiwoZnVuY3Rpb24oKXt2YXIgZT1PYmplY3QoZi5hKSh0aGlzKS5maW5kKFwiaW5wdXRcIiksbj1lLmRhdGEoXCJpZFwiKSxpPWUuZ2V0KDApLmNoZWNrZWQscj10Ll9nZXRTZXR0aW5nKG4pO3IuY29uZmlnLnNldChyLmtleSxpKX0pKS5vbihcImNsaWNrXCIsXCIuZXJ1ZGEtc2VsZWN0IC5lcnVkYS1oZWFkXCIsKGZ1bmN0aW9uKCl7dmFyIGU9T2JqZWN0KGYuYSkodGhpcykucGFyZW50KCkuZmluZChcInVsXCIpLG49ZS5oYXNDbGFzcyhcImVydWRhLW9wZW5cIik7dC5fY2xvc2VBbGwoKSxuP2Uucm1DbGFzcyhcImVydWRhLW9wZW5cIik6ZS5hZGRDbGFzcyhcImVydWRhLW9wZW5cIil9KSkub24oXCJjbGlja1wiLFwiLmVydWRhLXNlbGVjdCBsaVwiLChmdW5jdGlvbigpe3ZhciBlPU9iamVjdChmLmEpKHRoaXMpLG49ZS5wYXJlbnQoKSxpPWUudGV4dCgpLHI9bi5kYXRhKFwiaWRcIiksYT10Ll9nZXRTZXR0aW5nKHIpO24ucm1DbGFzcyhcImVydWRhLW9wZW5cIiksbi5wYXJlbnQoKS5maW5kKFwiLmVydWRhLWhlYWQgc3BhblwiKS50ZXh0KGkpLGEuY29uZmlnLnNldChhLmtleSxpKX0pKS5vbihcImNsaWNrXCIsXCIuZXJ1ZGEtcmFuZ2UgLmVydWRhLWhlYWRcIiwoZnVuY3Rpb24oKXt2YXIgZT1PYmplY3QoZi5hKSh0aGlzKS5wYXJlbnQoKS5maW5kKFwiLmVydWRhLWlucHV0LWNvbnRhaW5lclwiKSxuPWUuaGFzQ2xhc3MoXCJlcnVkYS1vcGVuXCIpO3QuX2Nsb3NlQWxsKCksbj9lLnJtQ2xhc3MoXCJlcnVkYS1vcGVuXCIpOmUuYWRkQ2xhc3MoXCJlcnVkYS1vcGVuXCIpfSkpLm9uKFwiY2hhbmdlXCIsXCIuZXJ1ZGEtcmFuZ2UgaW5wdXRcIiwoZnVuY3Rpb24oKXt2YXIgZT1PYmplY3QoZi5hKSh0aGlzKSxuPWUucGFyZW50KCkuZGF0YShcImlkXCIpLGk9K2UudmFsKCkscj10Ll9nZXRTZXR0aW5nKG4pO3IuY29uZmlnLnNldChyLmtleSxpKX0pKS5vbihcImlucHV0XCIsXCIuZXJ1ZGEtcmFuZ2UgaW5wdXRcIiwoZnVuY3Rpb24oKXt2YXIgZT1PYmplY3QoZi5hKSh0aGlzKSxuPWUucGFyZW50KCksaT1uLmRhdGEoXCJpZFwiKSxyPStlLnZhbCgpLGE9dC5fZ2V0U2V0dGluZyhpKSxvPWEubWluLHM9YS5tYXg7bi5wYXJlbnQoKS5maW5kKFwiLmVydWRhLWhlYWQgc3BhblwiKS50ZXh0KHIpLG4uZmluZChcIi5lcnVkYS1yYW5nZS10cmFjay1wcm9ncmVzc1wiKS5jc3MoXCJ3aWR0aFwiLEYocixvLHMpK1wiJVwiKX0pKS5vbihcImNsaWNrXCIsXCIuZXJ1ZGEtY29sb3IgLmVydWRhLWhlYWRcIiwoZnVuY3Rpb24oKXt2YXIgZT1PYmplY3QoZi5hKSh0aGlzKS5wYXJlbnQoKS5maW5kKFwidWxcIiksbj1lLmhhc0NsYXNzKFwiZXJ1ZGEtb3BlblwiKTt0Ll9jbG9zZUFsbCgpLG4/ZS5ybUNsYXNzKFwiZXJ1ZGEtb3BlblwiKTplLmFkZENsYXNzKFwiZXJ1ZGEtb3BlblwiKX0pKS5vbihcImNsaWNrXCIsXCIuZXJ1ZGEtY29sb3IgbGlcIiwoZnVuY3Rpb24oKXt2YXIgZT1PYmplY3QoZi5hKSh0aGlzKSxuPWUucGFyZW50KCksaT1lLmNzcyhcImJhY2tncm91bmQtY29sb3JcIikscj1uLmRhdGEoXCJpZFwiKSxhPXQuX2dldFNldHRpbmcocik7bi5ybUNsYXNzKFwiZXJ1ZGEtb3BlblwiKSxuLnBhcmVudCgpLmZpbmQoXCIuZXJ1ZGEtaGVhZCBzcGFuXCIpLmNzcyhcImJhY2tncm91bmQtY29sb3JcIixpKSxhLmNvbmZpZy5zZXQoYS5rZXksaSl9KSl9fV0sW3trZXk6XCJjcmVhdGVDZmdcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3JldHVybiBuZXcgZi5kKFwiZXJ1ZGEtXCIrdCxlKX19XSksZX0oeSksRj1mdW5jdGlvbih0LGUsbil7cmV0dXJuKCh0LWUpLyhuLWUpKjEwMCkudG9GaXhlZCgyKX0sej1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKHQpe3ZhciBpO3JldHVybiByKCkodGhpcyxlKSwoaT11KCkodGhpcyxjKCkoZSkuY2FsbCh0aGlzKSkpLl9zdHlsZT1OKG4oNTgpKSxpLl8kY29udGFpbmVyPXQsaS5fYXBwZW5kVHBsKCksaS5fbWFrZURyYWdnYWJsZSgpLGkuX2JpbmRFdmVudCgpLGkuX3JlZ2lzdGVyTGlzdGVuZXIoKSxpfXJldHVybiBoKCkoZSx0KSxvKCkoZSxbe2tleTpcImhpZGVcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuXyRlbC5oaWRlKCl9fSx7a2V5Olwic2hvd1wiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fJGVsLnNob3coKX19LHtrZXk6XCJzZXRQb3NcIix2YWx1ZTpmdW5jdGlvbih0KXt0aGlzLl9pc091dE9mUmFuZ2UodCkmJih0PXRoaXMuX2dldERlZlBvcygpKSx0aGlzLl8kZWwuY3NzKHtsZWZ0OnQueCx0b3A6dC55fSksdGhpcy5jb25maWcuc2V0KFwicG9zXCIsdCl9fSx7a2V5OlwiZ2V0UG9zXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jb25maWcuZ2V0KFwicG9zXCIpfX0se2tleTpcImRlc3Ryb3lcIix2YWx1ZTpmdW5jdGlvbigpe04ucmVtb3ZlKHRoaXMuX3N0eWxlKSx0aGlzLl91bnJlZ2lzdGVyTGlzdGVuZXIoKSx0aGlzLl8kZWwucmVtb3ZlKCl9fSx7a2V5OlwiX2lzT3V0T2ZSYW5nZVwiLHZhbHVlOmZ1bmN0aW9uKHQpe3Q9dHx8dGhpcy5jb25maWcuZ2V0KFwicG9zXCIpO3ZhciBlPXRoaXMuX2dldERlZlBvcygpO3JldHVybiB0Lng+ZS54KzEwfHx0Lng8MHx8dC55PDB8fHQueT5lLnkrMTB9fSx7a2V5OlwiX3JlZ2lzdGVyTGlzdGVuZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5fc2NhbGVMaXN0ZW5lcj1mdW5jdGlvbigpe3JldHVybiBPYmplY3QoZi5oYikoKGZ1bmN0aW9uKCl7dC5faXNPdXRPZlJhbmdlKCkmJnQuX3Jlc2V0UG9zKCl9KSl9LGcub24oZy5TQ0FMRSx0aGlzLl9zY2FsZUxpc3RlbmVyKX19LHtrZXk6XCJfdW5yZWdpc3Rlckxpc3RlbmVyXCIsdmFsdWU6ZnVuY3Rpb24oKXtnLm9mZihnLlNDQUxFLHRoaXMuX3NjYWxlTGlzdGVuZXIpfX0se2tleTpcIl9hcHBlbmRUcGxcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuXyRjb250YWluZXI7dC5hcHBlbmQobig1OSkoKSksdGhpcy5fJGVsPXQuZmluZChcIi5lcnVkYS1lbnRyeS1idG5cIil9fSx7a2V5OlwiX3Jlc2V0UG9zXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5jb25maWcsbj1lLmdldChcInBvc1wiKSxpPXRoaXMuX2dldERlZlBvcygpO2UuZ2V0KFwicmVtZW1iZXJQb3NcIikmJiF0fHwobj1pKSx0aGlzLnNldFBvcyhuKX19LHtrZXk6XCJfYmluZEV2ZW50XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dGhpcy5fZHJhZ2dhYmlsbHksbj10aGlzLl8kZWw7ZS5vbihcInN0YXRpY0NsaWNrXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHQuZW1pdChcImNsaWNrXCIpfSkpLm9uKFwiZHJhZ1N0YXJ0XCIsKGZ1bmN0aW9uKCl7cmV0dXJuIG4uYWRkQ2xhc3MoXCJlcnVkYS1hY3RpdmVcIil9KSksZS5vbihcImRyYWdFbmRcIiwoZnVuY3Rpb24oKXt2YXIgZT10LmNvbmZpZztlLmdldChcInJlbWVtYmVyUG9zXCIpJiZlLnNldChcInBvc1wiLHt4Ok9iamVjdChmLm5iKSh0Ll8kZWwuY3NzKFwibGVmdFwiKSkseTpPYmplY3QoZi5uYikodC5fJGVsLmNzcyhcInRvcFwiKSl9KSxuLnJtQ2xhc3MoXCJlcnVkYS1hY3RpdmVcIil9KSksZi5rYi5vbihcImNoYW5nZVwiLChmdW5jdGlvbigpe3JldHVybiB0Ll9yZXNldFBvcyghMCl9KSksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5fcmVzZXRQb3MoKX0pKX19LHtrZXk6XCJfbWFrZURyYWdnYWJsZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fZHJhZ2dhYmlsbHk9bmV3IGQuYSh0aGlzLl8kZWwuZ2V0KDApLHtjb250YWlubWVudDohMH0pfX0se2tleTpcImluaXRDZmdcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmNvbmZpZz1NLmNyZWF0ZUNmZyhcImVudHJ5LWJ1dHRvblwiLHtyZW1lbWJlclBvczohMCxwb3M6dGhpcy5fZ2V0RGVmUG9zKCl9KTt0LnNlcGFyYXRvcigpLnN3aXRjaChlLFwicmVtZW1iZXJQb3NcIixcIlJlbWVtYmVyIEVudHJ5IEJ1dHRvbiBQb3NpdGlvblwiKSx0aGlzLl9yZXNldFBvcygpfX0se2tleTpcIl9nZXREZWZQb3NcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuXyRlbC5nZXQoMCkub2Zmc2V0V2lkdGgrMTA7cmV0dXJue3g6d2luZG93LmlubmVyV2lkdGgtdCx5OndpbmRvdy5pbm5lckhlaWdodC10fX19XSksZX0oZi5jKSxJPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUodCl7dmFyIGk7cmV0dXJuIHIoKSh0aGlzLGUpLChpPXUoKSh0aGlzLGMoKShlKS5jYWxsKHRoaXMpKSkuX3N0eWxlPU4obig2MCkpLGkuXyRlbD10LmZpbmQoXCIuZXJ1ZGEtbmF2LWJhclwiKSxpLl8kYm90dG9tQmFyPXQuZmluZChcIi5lcnVkYS1ib3R0b20tYmFyXCIpLGkuX2xlbj0wLGkuX2JpbmRFdmVudCgpLGl9cmV0dXJuIGgoKShlLHQpLG8oKShlLFt7a2V5OlwiYWRkXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fJGVsO3RoaXMuX2xlbisrO3ZhciBuPWUuZmluZChcIi5lcnVkYS1uYXYtYmFyLWl0ZW1cIikubGFzdCgpLGk9JzxkaXYgY2xhc3M9XCJlcnVkYS1uYXYtYmFyLWl0ZW1cIj4nLmNvbmNhdCh0LFwiPC9kaXY+XCIpO24ubGVuZ3RoPjAmJlwic2V0dGluZ3NcIj09PW4udGV4dCgpP24uYmVmb3JlKGkpOmUuYXBwZW5kKGkpLHRoaXMucmVzZXRCb3R0b21CYXIoKX19LHtrZXk6XCJyZW1vdmVcIix2YWx1ZTpmdW5jdGlvbih0KXt0aGlzLl9sZW4tLSx0aGlzLl8kZWwuZmluZChcIi5lcnVkYS1uYXYtYmFyLWl0ZW1cIikuZWFjaCgoZnVuY3Rpb24oKXt2YXIgZT1PYmplY3QoZi5hKSh0aGlzKTtlLnRleHQoKS50b0xvd2VyQ2FzZSgpPT09dC50b0xvd2VyQ2FzZSgpJiZlLnJlbW92ZSgpfSkpLHRoaXMucmVzZXRCb3R0b21CYXIoKX19LHtrZXk6XCJhY3RpdmF0ZVRvb2xcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzO3RoaXMuXyRlbC5maW5kKFwiLmVydWRhLW5hdi1iYXItaXRlbVwiKS5lYWNoKChmdW5jdGlvbigpe3ZhciBuPU9iamVjdChmLmEpKHRoaXMpO24udGV4dCgpPT09dD8obi5hZGRDbGFzcyhcImVydWRhLWFjdGl2ZVwiKSxlLnJlc2V0Qm90dG9tQmFyKCksZS5fc2Nyb2xsSXRlbVRvVmlldygpKTpuLnJtQ2xhc3MoXCJlcnVkYS1hY3RpdmVcIil9KSl9fSx7a2V5OlwiZGVzdHJveVwiLHZhbHVlOmZ1bmN0aW9uKCl7Ti5yZW1vdmUodGhpcy5fc3R5bGUpLHRoaXMuXyRlbC5yZW1vdmUoKX19LHtrZXk6XCJfc2Nyb2xsSXRlbVRvVmlld1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQsZT10aGlzLl8kZWwsbj1lLmZpbmQoXCIuZXJ1ZGEtYWN0aXZlXCIpLmdldCgwKSxpPWUuZ2V0KDApLHI9bi5vZmZzZXRMZWZ0LGE9bi5vZmZzZXRXaWR0aCxvPWkub2Zmc2V0V2lkdGgscz1pLnNjcm9sbExlZnQ7cjxzP3Q9cjpyK2E+bytzJiYodD1yK2EtbyksT2JqZWN0KGYuVCkodCkmJihpLnNjcm9sbExlZnQ9dCl9fSx7a2V5OlwicmVzZXRCb3R0b21CYXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuXyRib3R0b21CYXIsZT10aGlzLl8kZWwsbj1lLmZpbmQoXCIuZXJ1ZGEtYWN0aXZlXCIpLmdldCgwKTtuJiZ0LmNzcyh7d2lkdGg6bi5vZmZzZXRXaWR0aCxsZWZ0Om4ub2Zmc2V0TGVmdC1lLmdldCgwKS5zY3JvbGxMZWZ0fSl9fSx7a2V5OlwiX2JpbmRFdmVudFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXRoaXM7dGhpcy5fJGVsLm9uKFwiY2xpY2tcIixcIi5lcnVkYS1uYXYtYmFyLWl0ZW1cIiwoZnVuY3Rpb24oKXtlLmVtaXQoXCJzaG93VG9vbFwiLE9iamVjdChmLmEpKHRoaXMpLnRleHQoKSl9KSkub24oXCJzY3JvbGxcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5yZXNldEJvdHRvbUJhcigpfSkpfX1dKSxlfShmLmMpLEI9TD1uZXcgZi5lKFwiW0VydWRhXVwiLFwid2FyblwiKTtMLmZvcm1hdHRlcj1mdW5jdGlvbih0LGUpe3JldHVybiBlLnVuc2hpZnQodGhpcy5uYW1lKSxlfTt2YXIgSD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKHQpe3ZhciBpO3JldHVybiByKCkodGhpcyxlKSwoaT11KCkodGhpcyxjKCkoZSkuY2FsbCh0aGlzKSkpLl9zdHlsZT1OKG4oNjEpKSxpLiRjb250YWluZXI9dCxpLl9pc1Nob3c9ITEsaS5fb3BhY2l0eT0xLGkuX3Rvb2xzPXt9LGkuX2lzUmVzaXppbmc9ITEsaS5fcmVzaXplVGltZXI9bnVsbCxpLl9yZXNpemVTdGFydFk9MCxpLl9yZXNpemVTdGFydFNpemU9MCxpLl9hcHBlbmRUcGwoKSxpLl9pbml0TmF2QmFyKCksaS5fYmluZEV2ZW50KCksaX1yZXR1cm4gaCgpKGUsdCksbygpKGUsW3trZXk6XCJzaG93XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3JldHVybiB0aGlzLl9pc1Nob3c9ITAsdGhpcy5fJGVsLnNob3coKSx0aGlzLl9uYXZCYXIucmVzZXRCb3R0b21CYXIoKSxzZXRUaW1lb3V0KChmdW5jdGlvbigpe3QuXyRlbC5jc3MoXCJvcGFjaXR5XCIsdC5fb3BhY2l0eSl9KSw1MCksdGhpcy5lbWl0KFwic2hvd1wiKSx0aGlzfX0se2tleTpcImhpZGVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7cmV0dXJuIHRoaXMuX2lzU2hvdz0hMSx0aGlzLmVtaXQoXCJoaWRlXCIpLHRoaXMuXyRlbC5jc3Moe29wYWNpdHk6MH0pLHNldFRpbWVvdXQoKGZ1bmN0aW9uKCl7cmV0dXJuIHQuXyRlbC5oaWRlKCl9KSwzMDApLHRoaXN9fSx7a2V5OlwidG9nZ2xlXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNTaG93P3RoaXMuaGlkZSgpOnRoaXMuc2hvdygpfX0se2tleTpcImFkZFwiLHZhbHVlOmZ1bmN0aW9uKHQpe2lmKCEodCBpbnN0YW5jZW9mIHkpKXt2YXIgZT1uZXcgeSxuPWUuaW5pdCxpPWUuc2hvdyxyPWUuaGlkZSxhPWUuZGVzdHJveTtPYmplY3QoZi5yKSh0LHtpbml0Om4sc2hvdzppLGhpZGU6cixkZXN0cm95OmF9KX12YXIgbz10Lm5hbWU7cmV0dXJuIG8/KG89by50b0xvd2VyQ2FzZSgpLHRoaXMuX3Rvb2xzW29dP0Iud2FybihcIlRvb2wgXCIuY29uY2F0KG8sXCIgYWxyZWFkeSBleGlzdHNcIikpOih0aGlzLl8kdG9vbHMucHJlcGVuZCgnPGRpdiBpZD1cImVydWRhLScuY29uY2F0KG8sJ1wiIGNsYXNzPVwiZXJ1ZGEtJykuY29uY2F0KG8sJyBlcnVkYS10b29sXCI+PC9kaXY+JykpLHQuaW5pdCh0aGlzLl8kdG9vbHMuZmluZChcIi5lcnVkYS1cIi5jb25jYXQobyxcIi5lcnVkYS10b29sXCIpKSx0aGlzKSx0LmFjdGl2ZT0hMSx0aGlzLl90b29sc1tvXT10LHRoaXMuX25hdkJhci5hZGQobyksdGhpcykpOkIuZXJyb3IoXCJZb3UgbXVzdCBzcGVjaWZ5IGEgbmFtZSBmb3IgYSB0b29sXCIpfX0se2tleTpcInJlbW92ZVwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX3Rvb2xzO2lmKCFlW3RdKXJldHVybiBCLndhcm4oXCJUb29sIFwiLmNvbmNhdCh0LFwiIGRvZXNuJ3QgZXhpc3RcIikpO3RoaXMuX25hdkJhci5yZW1vdmUodCk7dmFyIG49ZVt0XTtpZihkZWxldGUgZVt0XSxuLmFjdGl2ZSl7dmFyIGk9T2JqZWN0KGYuYWIpKGUpO2kubGVuZ3RoPjAmJnRoaXMuc2hvd1Rvb2woZVtPYmplY3QoZi5iYikoaSldLm5hbWUpfXJldHVybiBuLmRlc3Ryb3koKSx0aGlzfX0se2tleTpcInJlbW92ZUFsbFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztyZXR1cm4gT2JqZWN0KGYudSkodGhpcy5fdG9vbHMsKGZ1bmN0aW9uKGUpe3JldHVybiB0LnJlbW92ZShlLm5hbWUpfSkpLHRoaXN9fSx7a2V5OlwiZ2V0XCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fdG9vbHNbdF07aWYoZSlyZXR1cm4gZX19LHtrZXk6XCJzaG93VG9vbFwiLHZhbHVlOmZ1bmN0aW9uKHQpe2lmKHRoaXMuX2N1clRvb2w9PT10KXJldHVybiB0aGlzO3RoaXMuX2N1clRvb2w9dDt2YXIgZT10aGlzLl90b29scyxuPWVbdF07aWYobil7dmFyIGk9e307cmV0dXJuIE9iamVjdChmLnUpKGUsKGZ1bmN0aW9uKHQpe3QuYWN0aXZlJiYoaT10LHQuYWN0aXZlPSExLHQuaGlkZSgpKX0pKSxuLmFjdGl2ZT0hMCxuLnNob3coKSx0aGlzLl9uYXZCYXIuYWN0aXZhdGVUb29sKHQpLHRoaXMuZW1pdChcInNob3dUb29sXCIsdCxpKSx0aGlzfX19LHtrZXk6XCJpbml0Q2ZnXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPXRoaXMuY29uZmlnPU0uY3JlYXRlQ2ZnKFwiZGV2LXRvb2xzXCIse3RyYW5zcGFyZW5jeToxLGRpc3BsYXlTaXplOjgwLHRoZW1lOk9iamVjdChmLkopKCk/XCJEYXJrXCI6XCJMaWdodFwifSk7dGhpcy5fc2V0VHJhbnNwYXJlbmN5KG4uZ2V0KFwidHJhbnNwYXJlbmN5XCIpKSx0aGlzLl9zZXREaXNwbGF5U2l6ZShuLmdldChcImRpc3BsYXlTaXplXCIpKSxOLnNldFRoZW1lKG4uZ2V0KFwidGhlbWVcIikpLG4ub24oXCJjaGFuZ2VcIiwoZnVuY3Rpb24odCxuKXtzd2l0Y2godCl7Y2FzZVwidHJhbnNwYXJlbmN5XCI6cmV0dXJuIGUuX3NldFRyYW5zcGFyZW5jeShuKTtjYXNlXCJkaXNwbGF5U2l6ZVwiOnJldHVybiBlLl9zZXREaXNwbGF5U2l6ZShuKTtjYXNlXCJ0aGVtZVwiOnJldHVybiBOLnNldFRoZW1lKG4pfX0pKSx0LnNlcGFyYXRvcigpLnNlbGVjdChuLFwidGhlbWVcIixcIlRoZW1lXCIsT2JqZWN0KGYuYWIpKE4uZ2V0VGhlbWVzKCkpKS5yYW5nZShuLFwidHJhbnNwYXJlbmN5XCIsXCJUcmFuc3BhcmVuY3lcIix7bWluOi4yLG1heDoxLHN0ZXA6LjAxfSkucmFuZ2UobixcImRpc3BsYXlTaXplXCIsXCJEaXNwbGF5IFNpemVcIix7bWluOjQwLG1heDoxMDAsc3RlcDoxfSkuc2VwYXJhdG9yKCl9fSx7a2V5OlwiZGVzdHJveVwiLHZhbHVlOmZ1bmN0aW9uKCl7Ti5yZW1vdmUodGhpcy5fc3R5bGUpLHRoaXMucmVtb3ZlQWxsKCksdGhpcy5fbmF2QmFyLmRlc3Ryb3koKSx0aGlzLl8kZWwucmVtb3ZlKCl9fSx7a2V5OlwiX3NldFRyYW5zcGFyZW5jeVwiLHZhbHVlOmZ1bmN0aW9uKHQpe09iamVjdChmLlQpKHQpJiYodGhpcy5fb3BhY2l0eT10LHRoaXMuX2lzU2hvdyYmdGhpcy5fJGVsLmNzcyh7b3BhY2l0eTp0fSkpfX0se2tleTpcIl9zZXREaXNwbGF5U2l6ZVwiLHZhbHVlOmZ1bmN0aW9uKHQpe09iamVjdChmLlQpKHQpJiZ0aGlzLl8kZWwuY3NzKHtoZWlnaHQ6dCtcIiVcIn0pfX0se2tleTpcIl9hcHBlbmRUcGxcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuJGNvbnRhaW5lcjt0LmFwcGVuZChuKDYyKSgpKSx0aGlzLl8kZWw9dC5maW5kKFwiLmVydWRhLWRldi10b29sc1wiKSx0aGlzLl8kdG9vbHM9dGhpcy5fJGVsLmZpbmQoXCIuZXJ1ZGEtdG9vbHNcIil9fSx7a2V5OlwiX2luaXROYXZCYXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5fbmF2QmFyPW5ldyBJKHRoaXMuXyRlbC5maW5kKFwiLmVydWRhLW5hdi1iYXItY29udGFpbmVyXCIpKSx0aGlzLl9uYXZCYXIub24oXCJzaG93VG9vbFwiLChmdW5jdGlvbihlKXtyZXR1cm4gdC5zaG93VG9vbChlKX0pKX19LHtrZXk6XCJfYmluZEV2ZW50XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dGhpcy5fJGVsLmZpbmQoXCIuZXJ1ZGEtbmF2LWJhclwiKSxuPWZ1bmN0aW9uKG4pe249bi5vcmlnRXZlbnQsdC5fcmVzaXplVGltZXI9c2V0VGltZW91dCgoZnVuY3Rpb24oKXtuLnByZXZlbnREZWZhdWx0KCksbi5zdG9wUHJvcGFnYXRpb24oKSx0Ll9pc1Jlc2l6aW5nPSEwLHQuX3Jlc2l6ZVN0YXJ0U2l6ZT10LmNvbmZpZy5nZXQoXCJkaXNwbGF5U2l6ZVwiKSx0Ll9yZXNpemVTdGFydFk9byhuKSxlLmNzcyhcImZpbHRlclwiLFwiYnJpZ2h0bmVzcygxLjIpXCIpfSksMWUzKX0saT1PYmplY3QoZi52YikoKGZ1bmN0aW9uKGUpe3JldHVybiB0LmNvbmZpZy5zZXQoXCJkaXNwbGF5U2l6ZVwiLGUpfSksNTApLHI9ZnVuY3Rpb24oZSl7aWYoIXQuX2lzUmVzaXppbmcpcmV0dXJuIGNsZWFyVGltZW91dCh0Ll9yZXNpemVUaW1lcik7ZS5wcmV2ZW50RGVmYXVsdCgpLGUuc3RvcFByb3BhZ2F0aW9uKCksZT1lLm9yaWdFdmVudDt2YXIgbj1NYXRoLnJvdW5kKCh0Ll9yZXNpemVTdGFydFktbyhlKSkvd2luZG93LmlubmVySGVpZ2h0KjEwMCkscj10Ll9yZXNpemVTdGFydFNpemUrbjtyPDQwP3I9NDA6cj4xMDAmJihyPTEwMCksaShyKX0sYT1mdW5jdGlvbigpe2NsZWFyVGltZW91dCh0Ll9yZXNpemVUaW1lciksdC5faXNSZXNpemluZz0hMSxlLmNzcyhcImZpbHRlclwiLFwiYnJpZ2h0bmVzcygxKVwiKX0sbz1mdW5jdGlvbih0KXtyZXR1cm4gdC5jbGllbnRZP3QuY2xpZW50WTp0LnRvdWNoZXM/dC50b3VjaGVzWzBdLmNsaWVudFk6MH07ZS5vbihcImNvbnRleHRtZW51XCIsKGZ1bmN0aW9uKHQpe3JldHVybiB0LnByZXZlbnREZWZhdWx0KCl9KSk7dmFyIHM9T2JqZWN0KGYuYSkoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KTtPYmplY3QoZi5QKSgpPyhlLm9uKFwidG91Y2hzdGFydFwiLG4pLm9uKFwidG91Y2htb3ZlXCIscikscy5vbihcInRvdWNoZW5kXCIsYSkpOihlLm9uKFwibW91c2Vkb3duXCIsbikscy5vbihcIm1vdXNlbW92ZVwiLHIpLHMub24oXCJtb3VzZXVwXCIsYSkpfX1dKSxlfShmLmMpLFU9big5KSxHPW4ubihVKSxxPW4oMTQpLFc9bi5uKHEpLEs9bigxNSksVj1uLm4oSyksWD0hMTt2YXIgWT1bXCIoLi4uKVwiLFwidW5kZWZpbmVkXCIsXCJTeW1ib2xcIixcIk9iamVjdFwiLFwixpJcIl07ZnVuY3Rpb24gSih0KXt2YXIgZT1PYmplY3QoZi5MKShPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0KSksbj1PYmplY3QuZ2V0UHJvdG90eXBlT2YodCk7cmV0dXJuIGUmJm4mJm4hPT1PYmplY3QucHJvdG90eXBlfXZhciBRPW4oMTEpLFo9bi5uKFEpLHR0PW4oMTcpLGV0PW4ubih0dCksbnQ9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSh0KXt2YXIgbixpPXQudHlwZSxhPXZvaWQgMD09PWk/XCJsb2dcIjppLG89dC5hcmdzLHM9dm9pZCAwPT09bz9bXTpvLGw9dC5pZCxfPXQuZ3JvdXAsaD12b2lkIDA9PT1fP3t9Ol8scD10LnRhcmdldEdyb3VwLGQ9dm9pZCAwPT09cD97fTpwLHY9dC5kaXNwbGF5SGVhZGVyLGc9dm9pZCAwIT09diYmdixtPXQuaWdub3JlRmlsdGVyLGI9dm9pZCAwIT09bSYmbTtyZXR1cm4gcigpKHRoaXMsZSksKG49dSgpKHRoaXMsYygpKGUpLmNhbGwodGhpcykpKS50eXBlPWEsbi5ncm91cD1oLG4udGFyZ2V0R3JvdXA9ZCxuLmFyZ3M9cyxuLmNvdW50PTEsbi5pZD1sLG4uZGlzcGxheUhlYWRlcj1nLG4uaWdub3JlRmlsdGVyPWIsbi5jb2xsYXBzZWQ9ITEsbi5lbD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlcIiksbi5lbC5sb2c9RygpKG4pLG4uaGVpZ2h0PTAsbi53aWR0aD0wLG4uXyRlbD1PYmplY3QoZi5hKShuLmVsKSxnJiYobi50aW1lPXZ0KCksbi5mcm9tPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PW5ldyBFcnJvcixlPVwiXCIsbj10LnN0YWNrP3Quc3RhY2suc3BsaXQoXCJcXG5cIik6XCJcIixpPTAscj1uLmxlbmd0aDtpPHI7aSsrKWlmKChlPW5baV0pLmluZGV4T2YoXCJ3aW5Db25zb2xlXCIpPi0xJiZpPHItMSl7ZT1uW2krMV07YnJlYWt9cmV0dXJuIGV9KCkpLG4uX2Zvcm1hdE1zZygpLG4uZ3JvdXAmJm4uY2hlY2tHcm91cCgpLG59cmV0dXJuIGgoKShlLHQpLG8oKShlLFt7a2V5OlwiY2hlY2tHcm91cFwiLHZhbHVlOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMuZ3JvdXAsZT0hMTt0Oyl7aWYodC5jb2xsYXBzZWQpe2U9ITA7YnJlYWt9dD10LnBhcmVudH1yZXR1cm4gZSE9PXRoaXMuY29sbGFwc2VkJiYodGhpcy5jb2xsYXBzZWQ9ZSwhMCl9fSx7a2V5OlwidXBkYXRlSWNvblwiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl8kZWwuZmluZChcIi5lcnVkYS1pY29uXCIpLnJtQXR0cihcImNsYXNzXCIpLmFkZENsYXNzKFtcImVydWRhLWljb25cIixcImVydWRhLWljb24tXCIuY29uY2F0KHQpXSksdGhpc319LHtrZXk6XCJhZGRDb3VudFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5jb3VudCsrO3ZhciB0PXRoaXMuY291bnQsZT10aGlzLl8kZWwsbj1lLmZpbmQoXCIuZXJ1ZGEtY291bnQtY29udGFpbmVyXCIpLGk9ZS5maW5kKFwiLmVydWRhLWljb24tY29udGFpbmVyXCIpLHI9bi5maW5kKFwiLmVydWRhLWNvdW50XCIpO3JldHVybiAyPT09dCYmbi5ybUNsYXNzKFwiZXJ1ZGEtaGlkZGVuXCIpLHIudGV4dCh0KSxpLmFkZENsYXNzKFwiZXJ1ZGEtaGlkZGVuXCIpLHRoaXN9fSx7a2V5OlwiZ3JvdXBFbmRcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl8kZWwuZmluZChcIi5lcnVkYS1uZXN0aW5nLWxldmVsOm5vdCguZXJ1ZGEtZ3JvdXAtY2xvc2VkKVwiKS5sYXN0KCkuYWRkQ2xhc3MoXCJlcnVkYS1ncm91cC1jbG9zZWRcIiksdGhpc319LHtrZXk6XCJ1cGRhdGVUaW1lXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fJGVsLmZpbmQoXCIuZXJ1ZGEtdGltZS1jb250YWluZXJcIik7cmV0dXJuIHRoaXMudGltZSYmKGUuZmluZChcInNwYW5cIikuZXEoMCkudGV4dCh0KSx0aGlzLnRpbWU9dCksdGhpc319LHtrZXk6XCJpc0F0dGFjaGVkXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4hIXRoaXMuZWwucGFyZW50Tm9kZX19LHtrZXk6XCJ1cGRhdGVTaXplXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD0hKGFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdKXx8YXJndW1lbnRzWzBdLGU9dGhpcy5lbC5vZmZzZXRIZWlnaHQ7dGhpcy5oZWlnaHQhPT1lJiYodGhpcy5oZWlnaHQ9dGhpcy5lbC5vZmZzZXRIZWlnaHQsdGhpcy53aWR0aD10aGlzLmVsLm9mZnNldFdpZHRoLHR8fHRoaXMuZW1pdChcInVwZGF0ZVNpemVcIikpfX0se2tleTpcImh0bWxcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVsLm91dGVySFRNTH19LHtrZXk6XCJ0ZXh0XCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29udGVudC50ZXh0Q29udGVudH19LHtrZXk6XCJfbmVlZFNyY1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy50eXBlLGU9dGhpcy5hcmdzO2lmKFwiaHRtbFwiPT09dClyZXR1cm4hMTtmb3IodmFyIG49MCxpPWUubGVuZ3RoO248aTtuKyspaWYoT2JqZWN0KGYuVSkoZVtuXSkpcmV0dXJuITA7cmV0dXJuITF9fSx7a2V5OlwiZXh0cmFjdE9ialwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTpmLmliLG49dGhpcy5hcmdzLGk9dGhpcy50eXBlLHI9ZnVuY3Rpb24obil7dC5zcmM9bixlKCl9O2J0KFwidGFibGVcIj09PWl8fDE9PT1uLmxlbmd0aCYmT2JqZWN0KGYuVSkoblswXSk/blswXTpuLHt9LHIpfX0se2tleTpcImNsaWNrXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIG49dGhpcyxpPXRoaXMudHlwZSxyPXRoaXMuc3JjLGE9dGhpcy5hcmdzLG89dGhpcy5fJGVsO3N3aXRjaChpKXtjYXNlXCJsb2dcIjpjYXNlXCJ3YXJuXCI6Y2FzZVwiaW5mb1wiOmNhc2VcImRlYnVnXCI6Y2FzZVwib3V0cHV0XCI6Y2FzZVwidGFibGVcIjpjYXNlXCJkaXJcIjpjYXNlXCJncm91cFwiOmNhc2VcImdyb3VwQ29sbGFwc2VkXCI6aWYocnx8YSl7dmFyIHM9by5maW5kKFwiLmVydWRhLWpzb25cIik7aWYocy5oYXNDbGFzcyhcImVydWRhLWhpZGRlblwiKSl7aWYoXCJ0cnVlXCIhPT1zLmRhdGEoXCJpbml0XCIpKXtpZihyKXt2YXIgdT1uZXcgZXQuYS5TdGF0aWMocy5nZXQoMCkpO3Uuc2V0KHIpLHUub24oXCJjaGFuZ2VcIiwoZnVuY3Rpb24oKXtyZXR1cm4gbi51cGRhdGVTaXplKCExKX0pKX1lbHNle1widGFibGVcIiE9PWkmJjEhPT1hLmxlbmd0aHx8T2JqZWN0KGYuVSkoYVswXSkmJihhPWFbMF0pO3ZhciBsPW5ldyBldC5hKHMuZ2V0KDApLHt1bmVudW1lcmFibGU6ZS5zaG93VW5lbnVtZXJhYmxlLGFjY2Vzc0dldHRlcjplLnNob3dHZXR0ZXJWYWx9KTtsLnNldChhKSxsLm9uKFwiY2hhbmdlXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIG4udXBkYXRlU2l6ZSghMSl9KSl9cy5kYXRhKFwiaW5pdFwiLFwidHJ1ZVwiKX1zLnJtQ2xhc3MoXCJlcnVkYS1oaWRkZW5cIil9ZWxzZSBzLmFkZENsYXNzKFwiZXJ1ZGEtaGlkZGVuXCIpfWVsc2VcImdyb3VwXCIhPT1pJiZcImdyb3VwQ29sbGFwc2VkXCIhPT1pfHx0LnRvZ2dsZUdyb3VwKHRoaXMpO2JyZWFrO2Nhc2VcImVycm9yXCI6by5maW5kKFwiLmVydWRhLXN0YWNrXCIpLnRvZ2dsZUNsYXNzKFwiZXJ1ZGEtaGlkZGVuXCIpfXRoaXMudXBkYXRlU2l6ZSghMSl9fSx7a2V5OlwiX2Zvcm1hdE1zZ1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5hcmdzLG49dGhpcy50eXBlLGk9dGhpcy5pZCxyPXRoaXMuZGlzcGxheUhlYWRlcixhPXRoaXMudGltZSxvPXRoaXMuZnJvbSxzPXRoaXMuZ3JvdXA7dD1PYmplY3QoZi5qKSh0KSx0aGlzLl9uZWVkU3JjKCkmJiFlLmxhenlFdmFsdWF0aW9uJiZ0aGlzLmV4dHJhY3RPYmooKTt2YXIgdSxsLGM9XCJcIjtzd2l0Y2goXCJncm91cFwiIT09biYmXCJncm91cENvbGxhcHNlZFwiIT09bnx8MD09PXQubGVuZ3RoJiYodD1bXCJjb25zb2xlLmdyb3VwXCJdKSxuKXtjYXNlXCJsb2dcIjpjYXNlXCJkZWJ1Z1wiOmM9bHQodCk7YnJlYWs7Y2FzZVwiZGlyXCI6Yz1jdCh0KTticmVhaztjYXNlXCJpbmZvXCI6Yz1sdCh0KTticmVhaztjYXNlXCJ3YXJuXCI6dT1cIndhcm5cIixjPWx0KHQpO2JyZWFrO2Nhc2VcImVycm9yXCI6T2JqZWN0KGYuWCkodFswXSkmJjEhPT10Lmxlbmd0aCYmKHQ9X3QodCkpLGw9dFswXSx1PVwiZXJyb3JcIixsPU9iamVjdChmLk0pKGwpP2w6bmV3IEVycm9yKGx0KHQpKSx0aGlzLnNyYz1sLGM9ZnVuY3Rpb24odCl7dmFyIGU9dC5zdGFjaz90LnN0YWNrLnNwbGl0KFwiXFxuXCIpOltdLG49XCJcIi5jb25jYXQodC5tZXNzYWdlfHxlWzBdLFwiPGJyLz5cIik7ZT1lLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIXN0LnRlc3QodCl9KSkubWFwKChmdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0KGYudykodCl9KSk7dmFyIGk9JzxkaXYgY2xhc3M9XCJlcnVkYS1zdGFjayBlcnVkYS1oaWRkZW5cIj4nLmNvbmNhdChlLnNsaWNlKDEpLmpvaW4oXCI8YnIvPlwiKSxcIjwvZGl2PlwiKTtyZXR1cm4gbitpLnJlcGxhY2Uob3QsKGZ1bmN0aW9uKHQpe3JldHVybic8YSBocmVmPVwiJy5jb25jYXQodCwnXCIgdGFyZ2V0PVwiX2JsYW5rXCI+JykuY29uY2F0KHQsXCI8L2E+XCIpfSkpfShsKTticmVhaztjYXNlXCJ0YWJsZVwiOmM9ZnVuY3Rpb24odCl7dmFyIGU9dFswXSxuPVwiXCIsaT10WzFdLHI9W107T2JqZWN0KGYuWCkoaSkmJihpPU9iamVjdChmLndiKShpKSk7T2JqZWN0KGYuRykoaSl8fChpPW51bGwpO2lmKCFPYmplY3QoZi5VKShlKSlyZXR1cm4gbHQodCk7T2JqZWN0KGYudSkoZSwoZnVuY3Rpb24odCl7T2JqZWN0KGYuVikodCk/ci5wdXNoKHJ0KTpPYmplY3QoZi5VKSh0KSYmKHI9ci5jb25jYXQoT2JqZWN0KGYuYWIpKHQpKSl9KSksKHI9T2JqZWN0KGYuRGIpKHIpKS5zb3J0KCksaSYmKHI9ci5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QoZi5tKShpLHQpfSkpKTtyLmxlbmd0aD4yMCYmKHI9ci5zbGljZSgwLDIwKSk7cmV0dXJuIE9iamVjdChmLkwpKHIpP2x0KHQpOihuKz1cIjx0YWJsZT48dGhlYWQ+PHRyPjx0aD4oaW5kZXgpPC90aD5cIixyLmZvckVhY2goKGZ1bmN0aW9uKHQpe3JldHVybiBuKz1cIjx0aD5cIi5jb25jYXQodD09PXJ0P1wiVmFsdWVcIjpPYmplY3QoZi56YikodCksXCI8L3RoPlwiKX0pKSxuKz1cIjwvdHI+PC90aGVhZD48dGJvZHk+XCIsT2JqZWN0KGYudSkoZSwoZnVuY3Rpb24odCxlKXtuKz1cIjx0cj48dGQ+XCIuY29uY2F0KGUsXCI8L3RkPlwiKSxyLmZvckVhY2goKGZ1bmN0aW9uKGUpe09iamVjdChmLlUpKHQpP24rPWU9PT1ydD9cIjx0ZD48L3RkPlwiOlwiPHRkPlwiLmNvbmNhdChhdCh0W2VdKSxcIjwvdGQ+XCIpOk9iamVjdChmLlYpKHQpJiYobis9ZT09PXJ0P1wiPHRkPlwiLmNvbmNhdChhdCh0KSxcIjwvdGQ+XCIpOlwiPHRkPjwvdGQ+XCIpfSkpLG4rPVwiPC90cj5cIn0pKSxuKz1cIjwvdGJvZHk+PC90YWJsZT5cIixuKz0nPGRpdiBjbGFzcz1cImVydWRhLWpzb24gZXJ1ZGEtaGlkZGVuXCI+PC9kaXY+Jyl9KHQpO2JyZWFrO2Nhc2VcImh0bWxcIjpjPXRbMF07YnJlYWs7Y2FzZVwiaW5wdXRcIjpjPXV0KHRbMF0pLHU9XCJhcnJvdy1yaWdodFwiO2JyZWFrO2Nhc2VcIm91dHB1dFwiOmM9bHQodCksdT1cImFycm93LWxlZnRcIjticmVhaztjYXNlXCJncm91cENvbGxhcHNlZFwiOmM9bHQodCksdT1cImNhcmV0LXJpZ2h0XCI7YnJlYWs7Y2FzZVwiZ3JvdXBcIjpjPWx0KHQpLHU9XCJjYXJldC1kb3duXCJ9dGhpcy5fbmVlZFNyYygpJiZlLmxhenlFdmFsdWF0aW9ufHxkZWxldGUgdGhpcy5hcmdzLFwiZXJyb3JcIj09PW58fHRoaXMuYXJnc3x8KGM9T2JqZWN0KGYuY2IpKGMsKGZ1bmN0aW9uKHQpe3JldHVybic8YSBocmVmPVwiJy5jb25jYXQodCwnXCIgdGFyZ2V0PVwiX2JsYW5rXCI+JykuY29uY2F0KHQsXCI8L2E+XCIpfSkpKSxjPW10KHttc2c6Yyx0eXBlOm4saWNvbjp1LGlkOmksZGlzcGxheUhlYWRlcjpyLHRpbWU6YSxmcm9tOm8sZ3JvdXA6c30pLHRoaXMuXyRlbC5hZGRDbGFzcyhcImVydWRhLWxvZy1jb250YWluZXJcIikuaHRtbChjKSx0aGlzLl8kY29udGVudD10aGlzLl8kZWwuZmluZChcIi5lcnVkYS1sb2ctY29udGVudFwiKSx0aGlzLl9jb250ZW50PXRoaXMuXyRjb250ZW50LmdldCgwKX19XSksZX0oZi5jKTtXKCkobnQsXCJzaG93R2V0dGVyVmFsXCIsITEpLFcoKShudCxcInNob3dVbmVudW1lcmFibGVcIiwhMCksVygpKG50LFwibGF6eUV2YWx1YXRpb25cIiwhMCk7dmFyIGl0PU9iamVjdChmLkdiKSgoZnVuY3Rpb24gdChlKXt2YXIgaT1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e30scj1pLnRvcE9iaixhPWkubGV2ZWwsbz12b2lkIDA9PT1hPzA6YSxzPWkuZ2V0dGVyVmFsLHU9dm9pZCAwIT09cyYmcyxsPWkudW5lbnVtZXJhYmxlLGM9dm9pZCAwPT09bHx8bDtYfHwoTihuKDY2KSksWD0hMCk7dmFyIF8saD1cIlwiLHA9XCJcIixkPTUsdj1bXSxnPVtdLG09XCJcIixiPSExO3I9cnx8ZTt2YXIgeT17Z2V0dGVyVmFsOnUsdW5lbnVtZXJhYmxlOmMsbGV2ZWw6bysxfSx3PTA9PT1vLHg9JzxzcGFuIGNsYXNzPVwiZXJ1ZGEta2V5XCI+JyxrPSc8c3BhbiBjbGFzcz1cImVydWRhLW51bWJlclwiPicsJD0nPHNwYW4gY2xhc3M9XCJlcnVkYS1udWxsXCI+JyxPPSc8c3BhbiBjbGFzcz1cImVydWRhLXN0cmluZ1wiPicsRT0nPHNwYW4gY2xhc3M9XCJlcnVkYS1ib29sZWFuXCI+JyxqPSc8c3BhbiBjbGFzcz1cImVydWRhLXNwZWNpYWxcIj4nLEE9ZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdChmLncpKHQpLnJlcGxhY2UoL1xcXFxuL2csXCLihrVcIikucmVwbGFjZSgvXFxcXGZ8XFxcXHJ8XFxcXHQvZyxcIlwiKS5yZXBsYWNlKC9cXFxcL2csXCJcIil9LFM9XCI8L3NwYW4+XCIsVD1mdW5jdGlvbih0KXtyZXR1cm4geCtBKHQpK1N9LEM9ZnVuY3Rpb24odCl7cmV0dXJuIGsrdCtTfSxQPWZ1bmN0aW9uKHQpe3JldHVybiBPK3QrU30sRD1mdW5jdGlvbih0KXtyZXR1cm4gRSt0K1N9LFI9ZnVuY3Rpb24odCl7cmV0dXJuICQrdCtTfTtmdW5jdGlvbiBMKHQpe3JldHVybiB0PU9iamVjdChmLnpiKSh0KSxPYmplY3QoZi5tKShZLHQpfHxPYmplY3QoZi50YikodCxcIkFycmF5W1wiKT9qK0EodCkrUzpPK0EoJ1wiJy5jb25jYXQodCwnXCInKSkrU31mdW5jdGlvbiBNKG4pe2lmKF8+ZCltPVwiLCDigKZcIjtlbHNle3ZhciBpPVQoT2JqZWN0KGYueCkobikpO2lmKCF1KWlmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxuKS5nZXQpcmV0dXJuIHYucHVzaChcIlwiLmNvbmNhdChpLFwiOiBcIikuY29uY2F0KEwoXCIoLi4uKVwiKSkpLHZvaWQgXysrO3YucHVzaChcIlwiLmNvbmNhdChpLFwiOiBcIikuY29uY2F0KHQocltuXSx5KSkpLF8rK319dHJ5e3A9e30udG9TdHJpbmcuY2FsbChlKX1jYXRjaCh0KXtwPVwiW29iamVjdCBPYmplY3RdXCJ9dmFyIEY9XCJbb2JqZWN0IFN0cmluZ11cIj09cCx6PVwiW29iamVjdCBBcnJheV1cIj09cCxJPVwiW29iamVjdCBPYmplY3RdXCI9PXAsQj1cIltvYmplY3QgTnVtYmVyXVwiPT1wLEg9XCJbb2JqZWN0IFJlZ0V4cF1cIj09cCxVPVwiW29iamVjdCBTeW1ib2xdXCI9PXAsRz1cIltvYmplY3QgRnVuY3Rpb25dXCI9PXAscT1cIltvYmplY3QgQm9vbGVhbl1cIj09cDtpZihiKWg9TChcIltjaXJjdWxhcl1cIik7ZWxzZSBpZihGKWg9TChPYmplY3QoZi54KShlKSk7ZWxzZSBpZihIKWg9UChPYmplY3QoZi54KShlLnRvU3RyaW5nKCkpKTtlbHNlIGlmKEcpaD1MKFwixpJcIik7ZWxzZSBpZih6KWlmKHcpe2g9XCJbXCI7dmFyIFc9ZS5sZW5ndGgsSz1cIlwiO1c+MTAwJiYoVz0xMDAsSz1cIiwg4oCmXCIpO2Zvcih2YXIgVj0wO1Y8VztWKyspdi5wdXNoKFwiXCIuY29uY2F0KHQoZVtWXSx5KSkpO2grPXYuam9pbihcIiwgXCIpK0srXCJdXCJ9ZWxzZSBoPVwiQXJyYXkoXCIuY29uY2F0KGUubGVuZ3RoLFwiKVwiKTtlbHNlIGlmKEkpSihlKSYmKGU9T2JqZWN0LmdldFByb3RvdHlwZU9mKGUpKSxnPWM/T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoZSk6T2JqZWN0LmtleXMoZSksdz8oXz0xLGg9XCJ7IFwiLE9iamVjdChmLnUpKGcsTSksaCs9di5qb2luKFwiLCBcIikrbStcIiB9XCIpOlwiT2JqZWN0XCI9PT0oaD1PYmplY3QoZi5FKShlKSkmJihoPVwie+KApn1cIik7ZWxzZSBpZihCKWg9ZStcIlwiLGg9T2JqZWN0KGYudikoaCxcIkluZmluaXR5XCIpfHxcIk5hTlwiPT09aD8nXCInLmNvbmNhdChoLCdcIicpOkMoaCk7ZWxzZSBpZihxKWg9RChlP1widHJ1ZVwiOlwiZmFsc2VcIik7ZWxzZSBpZihudWxsPT09ZSloPVIoXCJudWxsXCIpO2Vsc2UgaWYoVSloPUwoXCJTeW1ib2xcIik7ZWxzZSBpZih2b2lkIDA9PT1lKWg9TChcInVuZGVmaW5lZFwiKTtlbHNlIHRyeXtKKGUpJiYoZT1PYmplY3QuZ2V0UHJvdG90eXBlT2YoZSkpLHc/KF89MSxoPVwieyBcIixnPWM/T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoZSk6T2JqZWN0LmtleXMoZSksT2JqZWN0KGYudSkoZyxNKSxoKz12LmpvaW4oXCIsIFwiKSttK1wiIH1cIik6XCJPYmplY3RcIj09PShoPU9iamVjdChmLkUpKGUpKSYmKGg9XCJ74oCmfVwiKX1jYXRjaCh0KXtoPUwoZSl9cmV0dXJuIGh9KSwoZnVuY3Rpb24odCxlKXtyZXR1cm4nPHNwYW4gY2xhc3M9XCJlcnVkYS1hYnN0cmFjdFwiPicrdChlLHtnZXR0ZXJWYWw6bnQuc2hvd0dldHRlclZhbCx1bmVudW1lcmFibGU6ITF9KStcIjwvc3Bhbj5cIn0pKSxydD1cIl9fRXJ1ZGFWYWx1ZVwiO2Z1bmN0aW9uIGF0KHQpe3JldHVybiBPYmplY3QoZi5VKSh0KT9cInvigKZ9XCI6T2JqZWN0KGYuVikodCk/aXQodCk6T2JqZWN0KGYuemIpKHQpfXZhciBvdD0vaHR0cHM/OlxcL1xcLyhbMC05LlxcLUEtWmEtel0rKSg/OjooXFxkKykpP1xcL1tBLVouYS16MC05L10qXFwuanMvZyxzdD0vZXJ1ZGEoXFwubWluKT9cXC5qcy87ZnVuY3Rpb24gdXQodCl7dmFyIGU9Ti5nZXRDdXJUaGVtZSgpO3JldHVybiBPYmplY3QoZi5GKShaKCkodCx7aW5kZW50X3NpemU6Mn0pLFwianNcIix7a2V5d29yZDpcImNvbG9yOlwiLmNvbmNhdChlLmtleXdvcmRDb2xvciksbnVtYmVyOlwiY29sb3I6XCIuY29uY2F0KGUubnVtYmVyQ29sb3IpLG9wZXJhdG9yOlwiY29sb3I6XCIuY29uY2F0KGUub3BlcmF0b3JDb2xvciksY29tbWVudDpcImNvbG9yOlwiLmNvbmNhdChlLmNvbW1lbnRDb2xvciksc3RyaW5nOlwiY29sb3I6XCIuY29uY2F0KGUuc3RyaW5nQ29sb3IpfSl9ZnVuY3Rpb24gbHQodCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnt9LG49ZS5odG1sRm9yRWwsaT12b2lkIDA9PT1ufHxuLHI9T2JqZWN0KGYuWCkodFswXSkmJjEhPT10Lmxlbmd0aDtyJiYodD1fdCh0KSk7Zm9yKHZhciBhPTAsbz10Lmxlbmd0aDthPG87YSsrKXt2YXIgcz10W2FdO09iamVjdChmLkspKHMpJiZpP3RbYV09ZnQocyk6T2JqZWN0KGYuTikocyk/dFthXT1kdChzKTpPYmplY3QoZi5VKShzKT90W2FdPXB0KHMpOk9iamVjdChmLlkpKHMpP3RbYV09XCJ1bmRlZmluZWRcIjpPYmplY3QoZi5TKShzKT90W2FdPVwibnVsbFwiOihzPU9iamVjdChmLnpiKShzKSwwPT09YSYmcnx8KHM9T2JqZWN0KGYudykocykpLHRbYV09cyl9cmV0dXJuIHQuam9pbihcIiBcIikrJzxkaXYgY2xhc3M9XCJlcnVkYS1qc29uIGVydWRhLWhpZGRlblwiPjwvZGl2Pid9dmFyIGN0PWZ1bmN0aW9uKHQpe3JldHVybiBsdCh0LHtodG1sRm9yRWw6ITF9KX07ZnVuY3Rpb24gX3QodCl7dmFyIGU9T2JqZWN0KGYudykodFswXSksbj0hMSxpPVwiXCI7dC5zaGlmdCgpO2Zvcih2YXIgcj0wLGE9ZS5sZW5ndGg7cjxhO3IrKyl7dmFyIG89ZVtyXTtpZihcIiVcIj09PW8mJjAhPT10Lmxlbmd0aCl7cisrO3ZhciBzPXQuc2hpZnQoKTtzd2l0Y2goZVtyXSl7Y2FzZVwiaVwiOmNhc2VcImRcIjppKz1PYmplY3QoZi54Yikocyk7YnJlYWs7Y2FzZVwiZlwiOmkrPU9iamVjdChmLnliKShzKTticmVhaztjYXNlXCJzXCI6aSs9T2JqZWN0KGYuemIpKHMpO2JyZWFrO2Nhc2VcIk9cIjpPYmplY3QoZi5VKShzKSYmKGkrPWl0KHMpKTticmVhaztjYXNlXCJvXCI6T2JqZWN0KGYuSykocyk/aSs9ZnQocyk6T2JqZWN0KGYuVSkocykmJihpKz1pdChzKSk7YnJlYWs7Y2FzZVwiY1wiOmlmKGUubGVuZ3RoPD1yKzEpYnJlYWs7biYmKGkrPVwiPC9zcGFuPlwiKSxuPSEwLGkrPSc8c3BhbiBzdHlsZT1cIicuY29uY2F0KGh0KHMpLCdcIj4nKTticmVhaztkZWZhdWx0OnItLSx0LnVuc2hpZnQocyksaSs9b319ZWxzZSBpKz1vfXJldHVybiBuJiYoaSs9XCI8L3NwYW4+XCIpLHQudW5zaGlmdChpKSx0fWZ1bmN0aW9uIGh0KHQpe3ZhciBlPSh0PU9iamVjdChmLmViKSh0KSkuc3BsaXQoXCI7XCIpLG49e307T2JqZWN0KGYudSkoZSwoZnVuY3Rpb24odCl7aWYoT2JqZWN0KGYubSkodCxcIjpcIikpe3ZhciBlPXQuc3BsaXQoXCI6XCIpLGk9VigpKGUsMikscj1pWzBdLGE9aVsxXTtuW09iamVjdChmLkFiKShyKV09T2JqZWN0KGYuQWIpKGEpfX0pKSxuLmRpc3BsYXk9XCJpbmxpbmUtYmxvY2tcIixuW1wibWF4LXdpZHRoXCJdPVwiMTAwJVwiLG4uY29udGFpbj1cInBhaW50XCIsZGVsZXRlIG4ud2lkdGgsZGVsZXRlIG4uaGVpZ2h0O3ZhciBpPVwiXCI7cmV0dXJuIE9iamVjdChmLnUpKG4sKGZ1bmN0aW9uKHQsZSl7aSs9XCJcIi5jb25jYXQoZSxcIjpcIikuY29uY2F0KHQsXCI7XCIpfSkpLGl9ZnVuY3Rpb24gcHQodCl7dmFyIGU9T2JqZWN0KGYuRSkodCk7cmV0dXJuXCJBcnJheVwiPT09ZSYmdC5sZW5ndGg+MSYmKGU9XCIoXCIuY29uY2F0KHQubGVuZ3RoLFwiKVwiKSksXCJcIi5jb25jYXQoZSxcIiBcIikuY29uY2F0KGl0KHQpKX1mdW5jdGlvbiBkdCh0KXtyZXR1cm4nPHByZSBzdHlsZT1cImRpc3BsYXk6aW5saW5lXCI+Jy5jb25jYXQodXQodC50b1N0cmluZygpKSxcIjwvcHJlPlwiKX1mdW5jdGlvbiBmdCh0KXtyZXR1cm4nPHByZSBzdHlsZT1cImRpc3BsYXk6aW5saW5lXCI+Jy5jb25jYXQoT2JqZWN0KGYuRikoWi5hLmh0bWwodC5vdXRlckhUTUwse3VuZm9ybWF0dGVkOltdLGluZGVudF9zaXplOjJ9KSxcImh0bWxcIiksXCI8L3ByZT5cIil9dmFyIHZ0PWZ1bmN0aW9uKCl7cmV0dXJuIE9iamVjdChmLm8pKFwiSEg6TU06c3NcIil9LGd0PW4oNjgpLG10PWZ1bmN0aW9uKHQpe3JldHVybiBndCh0KX07ZnVuY3Rpb24gYnQodCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOnt9LG49YXJndW1lbnRzLmxlbmd0aD4yP2FyZ3VtZW50c1syXTp2b2lkIDA7T2JqZWN0KGYucikoZSx7YWNjZXNzR2V0dGVyOm50LnNob3dHZXR0ZXJWYWwsdW5lbnVtZXJhYmxlOm50LnNob3dVbmVudW1lcmFibGUsc3ltYm9sOm50LnNob3dVbmVudW1lcmFibGUsdGltZW91dDoxZTN9KSx5dCh0LGUsKGZ1bmN0aW9uKHQpe3JldHVybiBuKEpTT04ucGFyc2UodCkpfSkpfWZ1bmN0aW9uIHl0KHQsZSxuKXt2YXIgaT1PYmplY3QoZi51YikodCxlKTtPYmplY3QoZi5oYikoKGZ1bmN0aW9uKCl7cmV0dXJuIG4oaSl9KSl9dmFyIHd0PTAseHQ9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSh0KXt2YXIgaTtyZXR1cm4gcigpKHRoaXMsZSksKGk9dSgpKHRoaXMsYygpKGUpLmNhbGwodGhpcykpKS5fc3R5bGU9TihuKDY5KSksaS5fJGNvbnRhaW5lcj10LGkuX2NvbnRhaW5lcj10LmdldCgwKSxpLl8kZWw9dC5maW5kKFwidWwuZXJ1ZGEtbG9nc1wiKSxpLl9lbD1pLl8kZWwuZ2V0KDApLGkuXyRmYWtlRWw9dC5maW5kKFwidWwuZXJ1ZGEtZmFrZS1sb2dzXCIpLGkuX2Zha2VFbD1pLl8kZmFrZUVsLmdldCgwKSxpLl8kdG9wU3BhY2U9dC5maW5kKFwiLmVydWRhLXRvcC1zcGFjZVwiKSxpLl90b3BTcGFjZT1pLl8kdG9wU3BhY2UuZ2V0KDApLGkuXyRib3R0b21TcGFjZT10LmZpbmQoXCIuZXJ1ZGEtYm90dG9tLXNwYWNlXCIpLGkuX2JvdHRvbVNwYWNlPWkuXyRib3R0b21TcGFjZS5nZXQoMCksaS5fdG9wU3BhY2VIZWlnaHQ9MCxpLl9ib3R0b21TcGFjZUhlaWdodD0wLGkuX2xvZ3M9W10saS5fZGlzcGxheUxvZ3M9W10saS5fdGltZXI9e30saS5fY291bnQ9e30saS5fbGFzdExvZz17fSxpLl9maWx0ZXI9XCJhbGxcIixpLl9tYXhOdW09XCJpbmZpbml0ZVwiLGkuX2Rpc3BsYXlIZWFkZXI9ITEsaS5fYXN5bmNSZW5kZXI9ITEsaS5fYXN5bmNMaXN0PVtdLGkuX2FzeW5jVGltZXI9bnVsbCxpLl9pc0F0Qm90dG9tPSEwLGkuX2dyb3VwU3RhY2s9bmV3IGYuZyxpLl9pZ25vcmVTY3JvbGw9ITEsaS5yZW5kZXJWaWV3cG9ydD1PYmplY3QoZi52YikoKGZ1bmN0aW9uKHQpe2kuX3JlbmRlclZpZXdwb3J0KHQpfSksMTYpLGkuX2dsb2JhbD17Y29weTpmdW5jdGlvbih0KXtPYmplY3QoZi5YKSh0KXx8KHQ9SlNPTi5zdHJpbmdpZnkodCxudWxsLDIpKSxPYmplY3QoZi5uKSh0KX0sJDpmdW5jdGlvbigpe3JldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yLmFwcGx5KGRvY3VtZW50LGFyZ3VtZW50cyl9LCQkOmZ1bmN0aW9uKCl7cmV0dXJuIE9iamVjdChmLndiKShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsLmFwcGx5KGRvY3VtZW50LGFyZ3VtZW50cykpfSwkeDpmdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0KGYuSGIpKHQpfSxjbGVhcjpmdW5jdGlvbigpe2kuY2xlYXIoKX0sZGlyOmZ1bmN0aW9uKHQpe2kuZGlyKHQpfSx0YWJsZTpmdW5jdGlvbih0LGUpe2kudGFibGUodCxlKX0sa2V5czpmLmFifSxpLl9iaW5kRXZlbnQoKSxpfXJldHVybiBoKCkoZSx0KSxvKCkoZSxbe2tleTpcInJlbmRlckFzeW5jXCIsdmFsdWU6ZnVuY3Rpb24odCl7dGhpcy5fYXN5bmNSZW5kZXI9dH19LHtrZXk6XCJzZXRHbG9iYWxcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3RoaXMuX2dsb2JhbFt0XT1lfX0se2tleTpcImRpc3BsYXlIZWFkZXJcIix2YWx1ZTpmdW5jdGlvbih0KXt0aGlzLl9kaXNwbGF5SGVhZGVyPXR9fSx7a2V5OlwibWF4TnVtXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fbG9nczt0aGlzLl9tYXhOdW09dCxPYmplY3QoZi5UKSh0KSYmZS5sZW5ndGg+dCYmKHRoaXMuX2xvZ3M9ZS5zbGljZShlLmxlbmd0aC10KSx0aGlzLnJlbmRlcigpKX19LHtrZXk6XCJkaXNwbGF5VW5lbnVtZXJhYmxlXCIsdmFsdWU6ZnVuY3Rpb24odCl7bnQuc2hvd1VuZW51bWVyYWJsZT10fX0se2tleTpcImRpc3BsYXlHZXR0ZXJWYWxcIix2YWx1ZTpmdW5jdGlvbih0KXtudC5zaG93R2V0dGVyVmFsPXR9fSx7a2V5OlwibGF6eUV2YWx1YXRpb25cIix2YWx1ZTpmdW5jdGlvbih0KXtudC5sYXp5RXZhbHVhdGlvbj10fX0se2tleTpcInZpZXdMb2dJblNvdXJjZXNcIix2YWx1ZTpmdW5jdGlvbih0KXtudC5zaG93U3JjSW5Tb3VyY2VzPXR9fSx7a2V5OlwiZGVzdHJveVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fc3R5bGUmJk4ucmVtb3ZlKHRoaXMuX3N0eWxlKX19LHtrZXk6XCJmaWx0ZXJcIix2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fZmlsdGVyPXQsdGhpcy5lbWl0KFwiZmlsdGVyXCIsdCksdGhpcy5yZW5kZXIoKX19LHtrZXk6XCJjb3VudFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOlwiZGVmYXVsdFwiLGU9dGhpcy5fY291bnQ7cmV0dXJuIE9iamVjdChmLlkpKGVbdF0pP2VbdF09MTplW3RdKyssdGhpcy5pbmZvKFwiXCIuY29uY2F0KHQsXCI6IFwiKS5jb25jYXQoZVt0XSkpfX0se2tleTpcImNvdW50UmVzZXRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTpcImRlZmF1bHRcIjtyZXR1cm4gdGhpcy5fY291bnRbdF09MCx0aGlzfX0se2tleTpcImFzc2VydFwiLHZhbHVlOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsZT1uZXcgQXJyYXkodCksbj0wO248dDtuKyspZVtuXT1hcmd1bWVudHNbbl07aWYoIU9iamVjdChmLkwpKGUpKXt2YXIgaT1lLnNoaWZ0KCk7cmV0dXJuIGk/dm9pZCAwOigwPT09ZS5sZW5ndGgmJmUudW5zaGlmdChcImNvbnNvbGUuYXNzZXJ0XCIpLGUudW5zaGlmdChcIkFzc2VydGlvbiBmYWlsZWQ6IFwiKSx0aGlzLmluc2VydChcImVycm9yXCIsZSkpfX19LHtrZXk6XCJsb2dcIix2YWx1ZTpmdW5jdGlvbigpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLGU9bmV3IEFycmF5KHQpLG49MDtuPHQ7bisrKWVbbl09YXJndW1lbnRzW25dO2lmKCFPYmplY3QoZi5MKShlKSlyZXR1cm4gdGhpcy5pbnNlcnQoXCJsb2dcIixlKX19LHtrZXk6XCJkZWJ1Z1wiLHZhbHVlOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsZT1uZXcgQXJyYXkodCksbj0wO248dDtuKyspZVtuXT1hcmd1bWVudHNbbl07aWYoIU9iamVjdChmLkwpKGUpKXJldHVybiB0aGlzLmluc2VydChcImRlYnVnXCIsZSl9fSx7a2V5OlwiZGlyXCIsdmFsdWU6ZnVuY3Rpb24odCl7aWYoIU9iamVjdChmLlkpKHQpKXJldHVybiB0aGlzLmluc2VydChcImRpclwiLFt0XSl9fSx7a2V5OlwidGFibGVcIix2YWx1ZTpmdW5jdGlvbigpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLGU9bmV3IEFycmF5KHQpLG49MDtuPHQ7bisrKWVbbl09YXJndW1lbnRzW25dO2lmKCFPYmplY3QoZi5MKShlKSlyZXR1cm4gdGhpcy5pbnNlcnQoXCJ0YWJsZVwiLGUpfX0se2tleTpcInRpbWVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTpcImRlZmF1bHRcIjtyZXR1cm4gdGhpcy5fdGltZXJbdF0/dGhpcy5pbnNlcnQoXCJ3YXJuXCIsW1wiVGltZXIgJ1wiLmNvbmNhdCh0LFwiJyBhbHJlYWR5IGV4aXN0c1wiKV0pOih0aGlzLl90aW1lclt0XT1PYmplY3QoZi5sYikoKSx0aGlzKX19LHtrZXk6XCJ0aW1lTG9nXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06XCJkZWZhdWx0XCIsZT10aGlzLl90aW1lclt0XTtyZXR1cm4gZT90aGlzLmluZm8oXCJcIi5jb25jYXQodCxcIjogXCIpLmNvbmNhdChPYmplY3QoZi5sYikoKS1lLFwibXNcIikpOnRoaXMuaW5zZXJ0KFwid2FyblwiLFtcIlRpbWVyICdcIi5jb25jYXQodCxcIicgZG9lcyBub3QgZXhpc3RcIildKX19LHtrZXk6XCJ0aW1lRW5kXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06XCJkZWZhdWx0XCI7cmV0dXJuIHRoaXMudGltZUxvZyh0KSxkZWxldGUgdGhpcy5fdGltZXJbdF0sdGhpc319LHtrZXk6XCJjbGVhclwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2lsZW50Q2xlYXIoKSx0aGlzLmluc2VydChcImxvZ1wiLFtcIiVjQ29uc29sZSB3YXMgY2xlYXJlZFwiLFwiY29sb3I6IzgwODA4MDtmb250LXN0eWxlOml0YWxpYztcIl0pfX0se2tleTpcInNpbGVudENsZWFyXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbG9ncz1bXSx0aGlzLl9kaXNwbGF5TG9ncz1bXSx0aGlzLl9sYXN0TG9nPXt9LHRoaXMuX2NvdW50PXt9LHRoaXMuX3RpbWVyPXt9LHRoaXMuX2dyb3VwU3RhY2s9bmV3IGYuZyx0aGlzLl9hc3luY0xpc3Q9W10sdGhpcy5fYXN5bmNUaW1lciYmKGNsZWFyVGltZW91dCh0aGlzLl9hc3luY1RpbWVyKSx0aGlzLl9hc3luY1RpbWVyPW51bGwpLHRoaXMucmVuZGVyKCl9fSx7a2V5OlwiaW5mb1wiLHZhbHVlOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsZT1uZXcgQXJyYXkodCksbj0wO248dDtuKyspZVtuXT1hcmd1bWVudHNbbl07aWYoIU9iamVjdChmLkwpKGUpKXJldHVybiB0aGlzLmluc2VydChcImluZm9cIixlKX19LHtrZXk6XCJlcnJvclwiLHZhbHVlOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsZT1uZXcgQXJyYXkodCksbj0wO248dDtuKyspZVtuXT1hcmd1bWVudHNbbl07aWYoIU9iamVjdChmLkwpKGUpKXJldHVybiB0aGlzLmluc2VydChcImVycm9yXCIsZSl9fSx7a2V5Olwid2FyblwiLHZhbHVlOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsZT1uZXcgQXJyYXkodCksbj0wO248dDtuKyspZVtuXT1hcmd1bWVudHNbbl07aWYoIU9iamVjdChmLkwpKGUpKXJldHVybiB0aGlzLmluc2VydChcIndhcm5cIixlKX19LHtrZXk6XCJncm91cFwiLHZhbHVlOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsZT1uZXcgQXJyYXkodCksbj0wO248dDtuKyspZVtuXT1hcmd1bWVudHNbbl07cmV0dXJuIHRoaXMuaW5zZXJ0KHt0eXBlOlwiZ3JvdXBcIixhcmdzOmUsaWdub3JlRmlsdGVyOiEwfSl9fSx7a2V5OlwiZ3JvdXBDb2xsYXBzZWRcIix2YWx1ZTpmdW5jdGlvbigpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLGU9bmV3IEFycmF5KHQpLG49MDtuPHQ7bisrKWVbbl09YXJndW1lbnRzW25dO3JldHVybiB0aGlzLmluc2VydCh7dHlwZTpcImdyb3VwQ29sbGFwc2VkXCIsYXJnczplLGlnbm9yZUZpbHRlcjohMH0pfX0se2tleTpcImdyb3VwRW5kXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLmluc2VydChcImdyb3VwRW5kXCIpfX0se2tleTpcImlucHV0XCIsdmFsdWU6ZnVuY3Rpb24odCl7dGhpcy5pbnNlcnQoe3R5cGU6XCJpbnB1dFwiLGFyZ3M6W3RdLGlnbm9yZUZpbHRlcjohMH0pO3RyeXt0aGlzLm91dHB1dCh0aGlzLl9ldmFsSnModCkpfWNhdGNoKHQpe3RoaXMuaW5zZXJ0KHt0eXBlOlwiZXJyb3JcIixpZ25vcmVGaWx0ZXI6ITAsYXJnczpbdF19KX1yZXR1cm4gdGhpc319LHtrZXk6XCJvdXRwdXRcIix2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5pbnNlcnQoe3R5cGU6XCJvdXRwdXRcIixhcmdzOlt0XSxpZ25vcmVGaWx0ZXI6ITB9KX19LHtrZXk6XCJodG1sXCIsdmFsdWU6ZnVuY3Rpb24oKXtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxlPW5ldyBBcnJheSh0KSxuPTA7bjx0O24rKyllW25dPWFyZ3VtZW50c1tuXTtyZXR1cm4gdGhpcy5pbnNlcnQoXCJodG1sXCIsZSl9fSx7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9sb2dzO3RoaXMuXyRlbC5odG1sKFwiXCIpLHRoaXMuX2lzQXRCb3R0b209ITAsdGhpcy5fdXBkYXRlQm90dG9tU3BhY2UoMCksdGhpcy5fdXBkYXRlVG9wU3BhY2UoMCksdGhpcy5fZGlzcGxheUxvZ3M9W107Zm9yKHZhciBlPTAsbj10Lmxlbmd0aDtlPG47ZSsrKXRoaXMuX2F0dGFjaExvZyh0W2VdKTtyZXR1cm4gdGhpc319LHtrZXk6XCJpbnNlcnRcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3RoaXMuX2FzeW5jUmVuZGVyP3RoaXMuaW5zZXJ0QXN5bmModCxlKTp0aGlzLmluc2VydFN5bmModCxlKX19LHtrZXk6XCJpbnNlcnRBc3luY1wiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dGhpcy5fYXN5bmNMaXN0LnB1c2goW3QsZV0pLHRoaXMuX2hhbmRsZUFzeW5jTGlzdCgpfX0se2tleTpcImluc2VydFN5bmNcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMsaT10aGlzLl9sb2dzLHI9dGhpcy5fZ3JvdXBTdGFjaztpZihcImdyb3VwRW5kXCI9PT10KXJldHVybiB0aGlzLl9sYXN0TG9nLmdyb3VwRW5kKCksdGhpcy5fZ3JvdXBTdGFjay5wb3AoKSx0aGlzO3ZhciBhPU9iamVjdChmLlgpKHQpP3t0eXBlOnQsYXJnczplfTp0O2lmKHIuc2l6ZT4wJiYoYS5ncm91cD1yLnBlZWsoKSksT2JqZWN0KGYueikoYSx7aWQ6Kyt3dCxkaXNwbGF5SGVhZGVyOnRoaXMuX2Rpc3BsYXlIZWFkZXJ9KSxcImdyb3VwXCI9PT1hLnR5cGV8fFwiZ3JvdXBDb2xsYXBzZWRcIj09PWEudHlwZSl7dmFyIG89e2lkOk9iamVjdChmLkNiKShcImdyb3VwXCIpLGNvbGxhcHNlZDohMSxwYXJlbnQ6ci5wZWVrKCksaW5kZW50TGV2ZWw6ci5zaXplKzF9O1wiZ3JvdXBDb2xsYXBzZWRcIj09PWEudHlwZSYmKG8uY29sbGFwc2VkPSEwKSxhLnRhcmdldEdyb3VwPW8sci5wdXNoKG8pfXZhciBzPW5ldyBudChhKTtzLm9uKFwidXBkYXRlU2l6ZVwiLChmdW5jdGlvbigpe24uX2lzQXRCb3R0b209ITEsbi5yZW5kZXJWaWV3cG9ydCgpfSkpO3ZhciB1PXRoaXMuX2xhc3RMb2c7aWYoT2JqZWN0KGYubSkoW1wiaHRtbFwiLFwiZ3JvdXBcIixcImdyb3VwQ29sbGFwc2VkXCJdLHMudHlwZSl8fHUudHlwZSE9PXMudHlwZXx8cy5zcmN8fHMuYXJnc3x8dS50ZXh0KCkhPT1zLnRleHQoKT8oaS5wdXNoKHMpLHRoaXMuX2xhc3RMb2c9cyk6KHUuYWRkQ291bnQoKSxzLnRpbWUmJnUudXBkYXRlVGltZShzLnRpbWUpLHM9dSx0aGlzLl9kZXRhY2hMb2codSkpLFwiaW5maW5pdGVcIiE9PXRoaXMuX21heE51bSYmaS5sZW5ndGg+dGhpcy5fbWF4TnVtKXt2YXIgbD1pWzBdO3RoaXMuX2RldGFjaExvZyhsKSxpLnNoaWZ0KCl9cmV0dXJuIHRoaXMuX2F0dGFjaExvZyhzKSx0aGlzLmVtaXQoXCJpbnNlcnRcIixzKSx0aGlzfX0se2tleTpcInRvZ2dsZUdyb3VwXCIsdmFsdWU6ZnVuY3Rpb24odCl7dC50YXJnZXRHcm91cC5jb2xsYXBzZWQ/dGhpcy5fb3Blbkdyb3VwKHQpOnRoaXMuX2NvbGxhcHNlR3JvdXAodCl9fSx7a2V5OlwiX3VwZGF0ZVRvcFNwYWNlXCIsdmFsdWU6ZnVuY3Rpb24odCl7dGhpcy5fdG9wU3BhY2VIZWlnaHQ9dCx0aGlzLl90b3BTcGFjZS5zdHlsZS5oZWlnaHQ9dCtcInB4XCJ9fSx7a2V5OlwiX3VwZGF0ZUJvdHRvbVNwYWNlXCIsdmFsdWU6ZnVuY3Rpb24odCl7dGhpcy5fYm90dG9tU3BhY2VIZWlnaHQ9dCx0aGlzLl9ib3R0b21TcGFjZS5zdHlsZS5oZWlnaHQ9dCtcInB4XCJ9fSx7a2V5OlwiX3VwZGF0ZUxvZ1NpemVcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9mYWtlRWw7aWYoIU9iamVjdChmLk8pKHRoaXMuX2Zha2VFbCkpcmV0dXJuIHQuaXNBdHRhY2hlZCgpP3ZvaWQgdC51cGRhdGVTaXplKCk6KGUuYXBwZW5kQ2hpbGQodC5lbCksdC51cGRhdGVTaXplKCksdm9pZChlLmNoaWxkcmVuPjEwMCYmKGUuaW5uZXJIVE1MPVwiXCIpKSl9fSx7a2V5OlwiX2RldGFjaExvZ1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2Rpc3BsYXlMb2dzLG49ZS5pbmRleE9mKHQpO24+LTEmJihlLnNwbGljZShuLDEpLHRoaXMucmVuZGVyVmlld3BvcnQoKSl9fSx7a2V5OlwiX2F0dGFjaExvZ1wiLHZhbHVlOmZ1bmN0aW9uKHQpe2lmKHRoaXMuX2ZpbHRlckxvZyh0KSYmIXQuY29sbGFwc2VkKXt2YXIgZT10aGlzLl9kaXNwbGF5TG9ncztpZigwPT09ZS5sZW5ndGgpcmV0dXJuIGUucHVzaCh0KSx2b2lkIHRoaXMucmVuZGVyVmlld3BvcnQoKTt2YXIgbj1PYmplY3QoZi5iYikoZSk7aWYodC5pZD5uLmlkKXJldHVybiBlLnB1c2godCksdm9pZCB0aGlzLnJlbmRlclZpZXdwb3J0KCk7Zm9yKHZhciBpLHIsYT0wLG89ZS5sZW5ndGgtMTthPD1vOyl7aWYoKGk9ZVtyPWErTWF0aC5mbG9vcigoby1hKS8yKV0pLmlkPT09dC5pZClyZXR1cm47aS5pZDx0LmlkP2E9cisxOm89ci0xfWkuaWQ8dC5pZD9lLnNwbGljZShyKzEsMCx0KTplLnNwbGljZShyLDAsdCksdGhpcy5yZW5kZXJWaWV3cG9ydCgpfX19LHtrZXk6XCJfaGFuZGxlQXN5bmNMaXN0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOjIwLG49dGhpcy5fYXN5bmNMaXN0O3RoaXMuX2FzeW5jVGltZXJ8fCh0aGlzLl9hc3luY1RpbWVyPXNldFRpbWVvdXQoKGZ1bmN0aW9uKCl7dC5fYXN5bmNUaW1lcj1udWxsO3ZhciBlLGkscj0hMSxhPW4ubGVuZ3RoO2E8MWUzPyhpPTIwMCxlPTQwMCk6YTw1ZTM/KGk9NTAwLGU9ODAwKTphPDFlND8oaT04MDAsZT0xZTMpOmE8MjVlMz8oaT0xZTMsZT0xMjAwKTphPDVlND8oaT0xNTAwLGU9MTUwMCk6KGk9MmUzLGU9MjUwMCksaT5hJiYoaT1hLHI9ITApO2Zvcih2YXIgbz0wO288aTtvKyspe3ZhciBzPW4uc2hpZnQoKSx1PVYoKShzLDIpLGw9dVswXSxjPXVbMV07dC5pbnNlcnRTeW5jKGwsYyl9cnx8T2JqZWN0KGYub2IpKChmdW5jdGlvbigpe3JldHVybiB0Ll9oYW5kbGVBc3luY0xpc3QoZSl9KSl9KSxlKSl9fSx7a2V5OlwiX2luamVjdEdsb2JhbFwiLHZhbHVlOmZ1bmN0aW9uKCl7T2JqZWN0KGYudSkodGhpcy5fZ2xvYmFsLChmdW5jdGlvbih0LGUpe3dpbmRvd1tlXXx8KHdpbmRvd1tlXT10KX0pKX19LHtrZXk6XCJfY2xlYXJHbG9iYWxcIix2YWx1ZTpmdW5jdGlvbigpe09iamVjdChmLnUpKHRoaXMuX2dsb2JhbCwoZnVuY3Rpb24odCxlKXt3aW5kb3dbZV0mJndpbmRvd1tlXT09PXQmJmRlbGV0ZSB3aW5kb3dbZV19KSl9fSx7a2V5OlwiX2V2YWxKc1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlO3RoaXMuX2luamVjdEdsb2JhbCgpO3RyeXtlPWV2YWwuY2FsbCh3aW5kb3csXCIoXCIuY29uY2F0KHQsXCIpXCIpKX1jYXRjaChuKXtlPWV2YWwuY2FsbCh3aW5kb3csdCl9cmV0dXJuIHRoaXMuc2V0R2xvYmFsKFwiJF9cIixlKSx0aGlzLl9jbGVhckdsb2JhbCgpLGV9fSx7a2V5OlwiX2ZpbHRlckxvZ1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2ZpbHRlcjtpZihcImFsbFwiPT09ZSlyZXR1cm4hMDt2YXIgbj1PYmplY3QoZi5XKShlKSxpPU9iamVjdChmLk4pKGUpO3JldHVybiEhdC5pZ25vcmVGaWx0ZXJ8fChpP2UodCk6bj9lLnRlc3QoT2JqZWN0KGYuZWIpKHQudGV4dCgpKSk6dC50eXBlPT09ZSl9fSx7a2V5OlwiX2dldExvZ1wiLHZhbHVlOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZSxuPXRoaXMuX2xvZ3MsaT0wLHI9bi5sZW5ndGg7aTxyJiYoZT1uW2ldKS5pZCE9PXQ7aSsrKTtyZXR1cm4gZX19LHtrZXk6XCJfY29sbGFwc2VHcm91cFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3QudGFyZ2V0R3JvdXAuY29sbGFwc2VkPSEwLHQudXBkYXRlSWNvbihcImNhcmV0LXJpZ2h0XCIpLHRoaXMuX3VwZGF0ZUdyb3VwKHQpfX0se2tleTpcIl9vcGVuR3JvdXBcIix2YWx1ZTpmdW5jdGlvbih0KXt0LnRhcmdldEdyb3VwLmNvbGxhcHNlZD0hMSx0LnVwZGF0ZUljb24oXCJjYXJldC1kb3duXCIpLHRoaXMuX3VwZGF0ZUdyb3VwKHQpfX0se2tleTpcIl91cGRhdGVHcm91cFwiLHZhbHVlOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10LnRhcmdldEdyb3VwLG49dGhpcy5fbG9ncyxpPW4ubGVuZ3RoLHI9bi5pbmRleE9mKHQpKzE7cjxpOyl7dmFyIGE9bltyXTtpZighYS5jaGVja0dyb3VwKCkmJmEuZ3JvdXA9PT1lKWJyZWFrO2EuY29sbGFwc2VkP3RoaXMuX2RldGFjaExvZyhhKTp0aGlzLl9hdHRhY2hMb2coYSkscisrfX19LHtrZXk6XCJfYmluZEV2ZW50XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dGhpczt0aGlzLl8kZWwub24oXCJjbGlja1wiLFwiLmVydWRhLWxvZy1jb250YWluZXJcIiwoZnVuY3Rpb24oKXt0aGlzLmxvZy5jbGljayhlKX0pKS5vbihcImNsaWNrXCIsXCIuZXJ1ZGEtaWNvbi1jYXJldC1kb3duXCIsKGZ1bmN0aW9uKCl7dmFyIHQ9T2JqZWN0KGYuYSkodGhpcykucGFyZW50KCkucGFyZW50KCkucGFyZW50KCk7ZS5fY29sbGFwc2VHcm91cCh0LmdldCgwKS5sb2cpfSkpLm9uKFwiY2xpY2tcIixcIi5lcnVkYS1pY29uLWNhcmV0LXJpZ2h0XCIsKGZ1bmN0aW9uKCl7dmFyIHQ9T2JqZWN0KGYuYSkodGhpcykucGFyZW50KCkucGFyZW50KCkucGFyZW50KCk7ZS5fb3Blbkdyb3VwKHQuZ2V0KDApLmxvZyl9KSksdGhpcy5fJGNvbnRhaW5lci5vbihcInNjcm9sbFwiLChmdW5jdGlvbigpe2lmKHQuX2lnbm9yZVNjcm9sbCl0Ll9pZ25vcmVTY3JvbGw9ITE7ZWxzZXt2YXIgZT10Ll9jb250YWluZXIsbj1lLnNjcm9sbEhlaWdodCxpPWUub2Zmc2V0SGVpZ2h0LHI9ZS5zY3JvbGxUb3AsYT0hMTsobj09PWl8fHI9PT1uLWkpJiYoYT0hMCksdC5faXNBdEJvdHRvbT1hLHQuX3RvcFNwYWNlSGVpZ2h0PHImJnQuX3RvcFNwYWNlSGVpZ2h0K3QuX2VsLm9mZnNldEhlaWdodD5zY3JvbGxUbytpfHx0LnJlbmRlclZpZXdwb3J0KCExKX19KSl9fSx7a2V5OlwiX3JlbmRlclZpZXdwb3J0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9jb250YWluZXI7aWYoIU9iamVjdChmLk8pKHQpKXt2YXIgZT10LnNjcm9sbFRvcCxuPXQub2Zmc2V0V2lkdGgsaT10Lm9mZnNldEhlaWdodCxyPWUsYT1lK2ksbz10aGlzLl9kaXNwbGF5TG9ncztyLT0xZTMsYSs9MWUzO3ZhciBzPTAsdT0wLGw9MDt0aGlzLl9lbC5pbm5lckhUTUw9XCJcIjtmb3IodmFyIGM9by5sZW5ndGgsXz10aGlzLl9mYWtlRWwsaD1kb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCkscD1bXSxkPTA7ZDxjO2QrKyl7dmFyIHY9b1tkXSxnPXYud2lkdGg7MCE9PXYuaGVpZ2h0JiZnPT09bnx8KGguYXBwZW5kQ2hpbGQodi5lbCkscC5wdXNoKHYpKX1pZihwLmxlbmd0aD4wKXtfLmFwcGVuZENoaWxkKGgpO2Zvcih2YXIgbT0wLGI9cC5sZW5ndGg7bTxiO20rKylwW21dLnVwZGF0ZVNpemUoKTtfLmlubmVySFRNTD1cIlwifWZvcih2YXIgeT1kb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksdz0wO3c8Yzt3Kyspe3ZhciB4PW9bd10saz14LmVsLCQ9eC5oZWlnaHQ7bD5hP3UrPSQ6bCskPnI/eS5hcHBlbmRDaGlsZChrKTpsPHImJihzKz0kKSxsKz0kfXRoaXMuX2VsLmFwcGVuZENoaWxkKHkpLHRoaXMuX3VwZGF0ZVRvcFNwYWNlKHMpLHRoaXMuX3VwZGF0ZUJvdHRvbVNwYWNlKHUpO3ZhciBPPXQuc2Nyb2xsSGVpZ2h0O3RoaXMuX2lzQXRCb3R0b20mJmUhPT1PLWk/KHQuc2Nyb2xsVG9wPU8taSx0aGlzLnJlbmRlclZpZXdwb3J0KCkpOnQuc2Nyb2xsVG9wPWUsdGhpcy5faWdub3JlU2Nyb2xsPSEwfX19XSksZX0oZi5jKTtmLkJiLnN0YXJ0KCk7dmFyIGt0PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt2YXIgdCxuPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSxpPW4ubmFtZSxhPXZvaWQgMD09PWk/XCJjb25zb2xlXCI6aTtyZXR1cm4gcigpKHRoaXMsZSksdD11KCkodGhpcyxjKCkoZSkuY2FsbCh0aGlzKSksVygpKEcoKSh0KSxcIl9oYW5kbGVTaG93XCIsKGZ1bmN0aW9uKCl7T2JqZWN0KGYuTykodC5fJGVsLmdldCgwKSl8fHQuX2xvZ2dlci5yZW5kZXJWaWV3cG9ydCgpfSkpLFcoKShHKCkodCksXCJfaGFuZGxlRXJyXCIsKGZ1bmN0aW9uKGUpe3QuX2xvZ2dlci5lcnJvcihlKX0pKSxmLmMubWl4aW4oRygpKHQpKSx0Lm5hbWU9YSx0Ll9zY2FsZT0xLHQuX3JlZ2lzdGVyTGlzdGVuZXIoKSx0fXJldHVybiBoKCkoZSx0KSxvKCkoZSxbe2tleTpcImluaXRcIix2YWx1ZTpmdW5jdGlvbih0LG4pe2IoKShjKCkoZS5wcm90b3R5cGUpLFwiaW5pdFwiLHRoaXMpLmNhbGwodGhpcyx0KSx0aGlzLl9jb250YWluZXI9bix0aGlzLl9hcHBlbmRUcGwoKSx0aGlzLl9pbml0TG9nZ2VyKCksdGhpcy5fZXhwb3NlTG9nZ2VyKCksdGhpcy5faW5pdENmZygpLHRoaXMuX2JpbmRFdmVudCgpfX0se2tleTpcInNob3dcIix2YWx1ZTpmdW5jdGlvbigpe2IoKShjKCkoZS5wcm90b3R5cGUpLFwic2hvd1wiLHRoaXMpLmNhbGwodGhpcyksdGhpcy5faGFuZGxlU2hvdygpfX0se2tleTpcIm92ZXJyaWRlQ29uc29sZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXRoaXMuX29yaWdDb25zb2xlPXt9LG49d2luZG93LmNvbnNvbGU7cmV0dXJuICR0LmZvckVhY2goKGZ1bmN0aW9uKGkpe3ZhciByPWVbaV09Zi5pYjtuW2ldJiYocj1lW2ldPW5baV0uYmluZChuKSksbltpXT1mdW5jdGlvbigpe3RbaV0uYXBwbHkodCxhcmd1bWVudHMpLHIuYXBwbHkodm9pZCAwLGFyZ3VtZW50cyl9fSkpLHRoaXN9fSx7a2V5Olwic2V0R2xvYmFsXCIsdmFsdWU6ZnVuY3Rpb24odCxlKXt0aGlzLl9sb2dnZXIuc2V0R2xvYmFsKHQsZSl9fSx7a2V5OlwicmVzdG9yZUNvbnNvbGVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7cmV0dXJuIHRoaXMuX29yaWdDb25zb2xlPygkdC5mb3JFYWNoKChmdW5jdGlvbihlKXtyZXR1cm4gd2luZG93LmNvbnNvbGVbZV09dC5fb3JpZ0NvbnNvbGVbZV19KSksZGVsZXRlIHRoaXMuX29yaWdDb25zb2xlLHRoaXMpOnRoaXN9fSx7a2V5OlwiY2F0Y2hHbG9iYWxFcnJcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiBmLkJiLmFkZExpc3RlbmVyKHRoaXMuX2hhbmRsZUVyciksdGhpc319LHtrZXk6XCJpZ25vcmVHbG9iYWxFcnJcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiBmLkJiLnJtTGlzdGVuZXIodGhpcy5faGFuZGxlRXJyKSx0aGlzfX0se2tleTpcImRlc3Ryb3lcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX2xvZ2dlci5kZXN0cm95KCksYigpKGMoKShlLnByb3RvdHlwZSksXCJkZXN0cm95XCIsdGhpcykuY2FsbCh0aGlzKSx0aGlzLl9jb250YWluZXIub2ZmKFwic2hvd1wiLHRoaXMuX2hhbmRsZVNob3cpLHRoaXMuX3N0eWxlJiZOLnJlbW92ZSh0aGlzLl9zdHlsZSksdGhpcy5pZ25vcmVHbG9iYWxFcnIoKSx0aGlzLnJlc3RvcmVDb25zb2xlKCksdGhpcy5fdW5yZWdpc3Rlckxpc3RlbmVyKCksdGhpcy5fcm1DZmcoKX19LHtrZXk6XCJfZW5hYmxlSnNFeGVjdXRpb25cIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl8kZWwsbj1lLmZpbmQoXCIuZXJ1ZGEtY29uc29sZS1jb250YWluZXJcIiksaT1lLmZpbmQoXCIuZXJ1ZGEtanMtaW5wdXRcIik7dD8oaS5zaG93KCksbi5ybUNsYXNzKFwiZXJ1ZGEtanMtaW5wdXQtaGlkZGVuXCIpKTooaS5oaWRlKCksbi5hZGRDbGFzcyhcImVydWRhLWpzLWlucHV0LWhpZGRlblwiKSl9fSx7a2V5OlwiX3JlZ2lzdGVyTGlzdGVuZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5fc2NhbGVMaXN0ZW5lcj1mdW5jdGlvbihlKXtyZXR1cm4gdC5fc2NhbGU9ZX0sZy5vbihnLlNDQUxFLHRoaXMuX3NjYWxlTGlzdGVuZXIpfX0se2tleTpcIl91bnJlZ2lzdGVyTGlzdGVuZXJcIix2YWx1ZTpmdW5jdGlvbigpe2cub2ZmKGcuU0NBTEUsdGhpcy5fc2NhbGVMaXN0ZW5lcil9fSx7a2V5OlwiX2FwcGVuZFRwbFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fJGVsO3RoaXMuX3N0eWxlPU4obig3MCkpLHQuYXBwZW5kKG4oNzEpKCkpO3ZhciBlPXQuZmluZChcIi5lcnVkYS1qcy1pbnB1dFwiKSxpPWUuZmluZChcInRleHRhcmVhXCIpLHI9ZS5maW5kKFwiLmVydWRhLWJ1dHRvbnNcIik7T2JqZWN0LmFzc2lnbih0aGlzLHtfJGNvbnRyb2w6dC5maW5kKFwiLmVydWRhLWNvbnRyb2xcIiksXyRsb2dzOnQuZmluZChcIi5lcnVkYS1sb2dzLWNvbnRhaW5lclwiKSxfJGlucHV0Q29udGFpbmVyOmUsXyRpbnB1dDppLF8kaW5wdXRCdG5zOnIsXyRzZWFyY2hLZXl3b3JkOnQuZmluZChcIi5lcnVkYS1zZWFyY2gta2V5d29yZFwiKX0pfX0se2tleTpcIl9pbml0TG9nZ2VyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl8kY29udHJvbC5maW5kKFwiLmVydWRhLWZpbHRlclwiKTsodGhpcy5fbG9nZ2VyPW5ldyB4dCh0aGlzLl8kbG9ncykpLm9uKFwiZmlsdGVyXCIsKGZ1bmN0aW9uKGUpe3JldHVybiB0LmVhY2goKGZ1bmN0aW9uKCl7dmFyIHQ9T2JqZWN0KGYuYSkodGhpcyksbj10LmRhdGEoXCJmaWx0ZXJcIik9PT1lO3Rbbj9cImFkZENsYXNzXCI6XCJybUNsYXNzXCJdKFwiZXJ1ZGEtYWN0aXZlXCIpfSkpfSkpfX0se2tleTpcIl9leHBvc2VMb2dnZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10aGlzLl9sb2dnZXI7W1wiZmlsdGVyXCIsXCJodG1sXCJdLmNvbmNhdCgkdCkuZm9yRWFjaCgoZnVuY3Rpb24obil7cmV0dXJuIHRbbl09ZnVuY3Rpb24oKXtmb3IodmFyIGk9YXJndW1lbnRzLmxlbmd0aCxyPW5ldyBBcnJheShpKSxhPTA7YTxpO2ErKylyW2FdPWFyZ3VtZW50c1thXTtyZXR1cm4gZVtuXS5hcHBseShlLHIpLHQuZW1pdC5hcHBseSh0LFtuXS5jb25jYXQocikpLHR9fSkpfX0se2tleTpcIl9iaW5kRXZlbnRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10aGlzLl9jb250YWluZXIsbj10aGlzLl8kaW5wdXQsaT10aGlzLl8kaW5wdXRCdG5zLHI9dGhpcy5fJGNvbnRyb2wsYT10aGlzLl8kc2VhcmNoS2V5d29yZCxvPXRoaXMuX2xvZ2dlcixzPXRoaXMuY29uZmlnO3Iub24oXCJjbGlja1wiLFwiLmVydWRhLWNsZWFyLWNvbnNvbGVcIiwoZnVuY3Rpb24oKXtyZXR1cm4gby5zaWxlbnRDbGVhcigpfSkpLm9uKFwiY2xpY2tcIixcIi5lcnVkYS1maWx0ZXJcIiwoZnVuY3Rpb24oKXthLnRleHQoXCJcIiksby5maWx0ZXIoT2JqZWN0KGYuYSkodGhpcykuZGF0YShcImZpbHRlclwiKSl9KSkub24oXCJjbGlja1wiLFwiLmVydWRhLXNlYXJjaFwiLChmdW5jdGlvbigpe3ZhciBlPXByb21wdChcIkZpbHRlclwiKTtPYmplY3QoZi5TKShlKXx8KGEudGV4dChlKSxcIlwiIT09T2JqZWN0KGYuQWIpKGUpP3QuX2xvZ2dlci5maWx0ZXIobmV3IFJlZ0V4cChPYmplY3QoZi55KShPYmplY3QoZi5lYikoZSkpKSk6by5maWx0ZXIoXCJhbGxcIikpfSkpLGkub24oXCJjbGlja1wiLFwiLmVydWRhLWNhbmNlbFwiLChmdW5jdGlvbigpe3JldHVybiB0Ll9oaWRlSW5wdXQoKX0pKS5vbihcImNsaWNrXCIsXCIuZXJ1ZGEtZXhlY3V0ZVwiLChmdW5jdGlvbigpe3ZhciBlPW4udmFsKCkudHJpbSgpO1wiXCIhPT1lJiYoby5pbnB1dChlKSxuLnZhbChcIlwiKS5nZXQoMCkuYmx1cigpLHQuX2hpZGVJbnB1dCgpKX0pKSxuLm9uKFwiZm9jdXNpblwiLChmdW5jdGlvbigpe3JldHVybiB0Ll9zaG93SW5wdXQoKX0pKSxvLm9uKFwiaW5zZXJ0XCIsKGZ1bmN0aW9uKHQpe1wiZXJyb3JcIj09PXQudHlwZSYmcy5nZXQoXCJkaXNwbGF5SWZFcnJcIikmJmUuc2hvd1Rvb2woXCJjb25zb2xlXCIpLnNob3coKX0pKSxlLm9uKFwic2hvd1wiLHRoaXMuX2hhbmRsZVNob3cpfX0se2tleTpcIl9oaWRlSW5wdXRcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuXyRpbnB1dENvbnRhaW5lci5ybUNsYXNzKFwiZXJ1ZGEtYWN0aXZlXCIpLHRoaXMuXyRpbnB1dEJ0bnMuaGlkZSgpfX0se2tleTpcIl9zaG93SW5wdXRcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuXyRpbnB1dENvbnRhaW5lci5hZGRDbGFzcyhcImVydWRhLWFjdGl2ZVwiKSx0aGlzLl8kaW5wdXRCdG5zLnNob3coKX19LHtrZXk6XCJfcm1DZmdcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuY29uZmlnLGU9dGhpcy5fY29udGFpbmVyLmdldChcInNldHRpbmdzXCIpO2UmJmUucmVtb3ZlKHQsXCJhc3luY1JlbmRlclwiKS5yZW1vdmUodCxcImpzRXhlY3V0aW9uXCIpLnJlbW92ZSh0LFwiY2F0Y2hHbG9iYWxFcnJcIikucmVtb3ZlKHQsXCJvdmVycmlkZUNvbnNvbGVcIikucmVtb3ZlKHQsXCJkaXNwbGF5RXh0cmFJbmZvXCIpLnJlbW92ZSh0LFwiZGlzcGxheVVuZW51bWVyYWJsZVwiKS5yZW1vdmUodCxcImRpc3BsYXlHZXR0ZXJWYWxcIikucmVtb3ZlKHQsXCJsYXp5RXZhbHVhdGlvblwiKS5yZW1vdmUodCxcImRpc3BsYXlJZkVyclwiKS5yZW1vdmUodCxcIm1heExvZ051bVwiKS5yZW1vdmUoT2JqZWN0KGYuRWIpKHRoaXMubmFtZSkpfX0se2tleTpcIl9pbml0Q2ZnXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dGhpcy5fY29udGFpbmVyLG49dGhpcy5fbG9nZ2VyLGk9dGhpcy5jb25maWc9TS5jcmVhdGVDZmcodGhpcy5uYW1lLHthc3luY1JlbmRlcjohMCxjYXRjaEdsb2JhbEVycjohMCxqc0V4ZWN1dGlvbjohMCxvdmVycmlkZUNvbnNvbGU6ITAsZGlzcGxheUV4dHJhSW5mbzohMSxkaXNwbGF5VW5lbnVtZXJhYmxlOiEwLGRpc3BsYXlHZXR0ZXJWYWw6ITEsbGF6eUV2YWx1YXRpb246ITAsZGlzcGxheUlmRXJyOiExLG1heExvZ051bTpcImluZmluaXRlXCJ9KSxyPWkuZ2V0KFwibWF4TG9nTnVtXCIpO3I9XCJpbmZpbml0ZVwiPT09cj9yOityLHRoaXMuX2VuYWJsZUpzRXhlY3V0aW9uKGkuZ2V0KFwianNFeGVjdXRpb25cIikpLGkuZ2V0KFwiYXN5bmNSZW5kZXJcIikmJm4ucmVuZGVyQXN5bmMoITApLGkuZ2V0KFwiY2F0Y2hHbG9iYWxFcnJcIikmJnRoaXMuY2F0Y2hHbG9iYWxFcnIoKSxpLmdldChcIm92ZXJyaWRlQ29uc29sZVwiKSYmdGhpcy5vdmVycmlkZUNvbnNvbGUoKSxuLmRpc3BsYXlIZWFkZXIoaS5nZXQoXCJkaXNwbGF5RXh0cmFJbmZvXCIpKSxuLmRpc3BsYXlVbmVudW1lcmFibGUoaS5nZXQoXCJkaXNwbGF5VW5lbnVtZXJhYmxlXCIpKSxuLmRpc3BsYXlHZXR0ZXJWYWwoaS5nZXQoXCJkaXNwbGF5R2V0dGVyVmFsXCIpKSxuLmxhenlFdmFsdWF0aW9uKGkuZ2V0KFwibGF6eUV2YWx1YXRpb25cIikpLG4ubWF4TnVtKHIpLGkub24oXCJjaGFuZ2VcIiwoZnVuY3Rpb24oZSxpKXtzd2l0Y2goZSl7Y2FzZVwiYXN5bmNSZW5kZXJcIjpyZXR1cm4gbi5yZW5kZXJBc3luYyhpKTtjYXNlXCJqc0V4ZWN1dGlvblwiOnJldHVybiB0Ll9lbmFibGVKc0V4ZWN1dGlvbihpKTtjYXNlXCJjYXRjaEdsb2JhbEVyclwiOnJldHVybiBpP3QuY2F0Y2hHbG9iYWxFcnIoKTp0Lmlnbm9yZUdsb2JhbEVycigpO2Nhc2VcIm92ZXJyaWRlQ29uc29sZVwiOnJldHVybiBpP3Qub3ZlcnJpZGVDb25zb2xlKCk6dC5yZXN0b3JlQ29uc29sZSgpO2Nhc2VcIm1heExvZ051bVwiOnJldHVybiBuLm1heE51bShcImluZmluaXRlXCI9PT1pP2k6K2kpO2Nhc2VcImRpc3BsYXlFeHRyYUluZm9cIjpyZXR1cm4gbi5kaXNwbGF5SGVhZGVyKGkpO2Nhc2VcImRpc3BsYXlVbmVudW1lcmFibGVcIjpyZXR1cm4gbi5kaXNwbGF5VW5lbnVtZXJhYmxlKGkpO2Nhc2VcImRpc3BsYXlHZXR0ZXJWYWxcIjpyZXR1cm4gbi5kaXNwbGF5R2V0dGVyVmFsKGkpO2Nhc2VcImxhenlFdmFsdWF0aW9uXCI6cmV0dXJuIG4ubGF6eUV2YWx1YXRpb24oaSl9fSkpO3ZhciBhPWUuZ2V0KFwic2V0dGluZ3NcIik7YSYmYS50ZXh0KE9iamVjdChmLkViKSh0aGlzLm5hbWUpKS5zd2l0Y2goaSxcImFzeW5jUmVuZGVyXCIsXCJBc3luY2hyb25vdXMgUmVuZGVyaW5nXCIpLnN3aXRjaChpLFwianNFeGVjdXRpb25cIixcIkVuYWJsZSBKYXZhU2NyaXB0IEV4ZWN1dGlvblwiKS5zd2l0Y2goaSxcImNhdGNoR2xvYmFsRXJyXCIsXCJDYXRjaCBHbG9iYWwgRXJyb3JzXCIpLnN3aXRjaChpLFwib3ZlcnJpZGVDb25zb2xlXCIsXCJPdmVycmlkZSBDb25zb2xlXCIpLnN3aXRjaChpLFwiZGlzcGxheUlmRXJyXCIsXCJBdXRvIERpc3BsYXkgSWYgRXJyb3IgT2NjdXJzXCIpLnN3aXRjaChpLFwiZGlzcGxheUV4dHJhSW5mb1wiLFwiRGlzcGxheSBFeHRyYSBJbmZvcm1hdGlvblwiKS5zd2l0Y2goaSxcImRpc3BsYXlVbmVudW1lcmFibGVcIixcIkRpc3BsYXkgVW5lbnVtZXJhYmxlIFByb3BlcnRpZXNcIikuc3dpdGNoKGksXCJkaXNwbGF5R2V0dGVyVmFsXCIsXCJBY2Nlc3MgR2V0dGVyIFZhbHVlXCIpLnN3aXRjaChpLFwibGF6eUV2YWx1YXRpb25cIixcIkxhenkgRXZhbHVhdGlvblwiKS5zZWxlY3QoaSxcIm1heExvZ051bVwiLFwiTWF4IExvZyBOdW1iZXJcIixbXCJpbmZpbml0ZVwiLFwiMjUwXCIsXCIxMjVcIixcIjEwMFwiLFwiNTBcIixcIjEwXCJdKS5zZXBhcmF0b3IoKX19XSksZX0oeSksJHQ9W1wibG9nXCIsXCJlcnJvclwiLFwiaW5mb1wiLFwid2FyblwiLFwiZGlyXCIsXCJ0aW1lXCIsXCJ0aW1lTG9nXCIsXCJ0aW1lRW5kXCIsXCJjbGVhclwiLFwidGFibGVcIixcImFzc2VydFwiLFwiY291bnRcIixcImNvdW50UmVzZXRcIixcImRlYnVnXCIsXCJncm91cFwiLFwiZ3JvdXBDb2xsYXBzZWRcIixcImdyb3VwRW5kXCJdLE90PW4oMjkpLEV0PW4ubihPdCk7ZnVuY3Rpb24ganQodCl7aWYoIXQpcmV0dXJuXCJ1bmtub3duXCI7dmFyIGU9dC5zcGxpdChcIjtcIilbMF0uc3BsaXQoXCIvXCIpO3JldHVybnt0eXBlOmVbMF0sc3ViVHlwZTpPYmplY3QoZi5iYikoZSl9fWZ1bmN0aW9uIEF0KHQpe3ZhciBlPWVuY29kZVVSSUNvbXBvbmVudCh0KS5tYXRjaCgvJVs4OUFCYWJdL2cpO3JldHVybiB0Lmxlbmd0aCsoZT9lLmxlbmd0aDowKX12YXIgU3Q9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSh0LG4saSl7dmFyIGE7cmV0dXJuIHIoKSh0aGlzLGUpLChhPXUoKSh0aGlzLGMoKShlKS5jYWxsKHRoaXMpKSkuX3hocj10LGEuX3JlcUhlYWRlcnM9e30sYS5fbWV0aG9kPW4sYS5fdXJsPU9iamVjdChmLkMpKGkpLGEuX2lkPU9iamVjdChmLkNiKShcInJlcXVlc3RcIiksYX1yZXR1cm4gaCgpKGUsdCksbygpKGUsW3trZXk6XCJoYW5kbGVTZW5kXCIsdmFsdWU6ZnVuY3Rpb24odCl7T2JqZWN0KGYuWCkodCl8fCh0PVwiXCIpLHQ9e25hbWU6T2JqZWN0KGYuRCkodGhpcy5fdXJsKSx1cmw6dGhpcy5fdXJsLGRhdGE6dCxtZXRob2Q6dGhpcy5fbWV0aG9kfSxPYmplY3QoZi5MKSh0aGlzLl9yZXFIZWFkZXJzKXx8KHQucmVxSGVhZGVycz10aGlzLl9yZXFIZWFkZXJzKSx0aGlzLmVtaXQoXCJzZW5kXCIsdGhpcy5faWQsdCl9fSx7a2V5OlwiaGFuZGxlUmVxSGVhZGVyc1NldFwiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dCYmZSYmKHRoaXMuX3JlcUhlYWRlcnNbdF09ZSl9fSx7a2V5OlwiaGFuZGxlSGVhZGVyc1JlY2VpdmVkXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl94aHIsZT1qdCh0LmdldFJlc3BvbnNlSGVhZGVyKFwiQ29udGVudC1UeXBlXCIpKTt0aGlzLmVtaXQoXCJ1cGRhdGVcIix0aGlzLl9pZCx7dHlwZTplLnR5cGUsc3ViVHlwZTplLnN1YlR5cGUsc2l6ZTpDdCh0LCEwLHRoaXMuX3VybCksdGltZTpPYmplY3QoZi5qYikoKSxyZXNIZWFkZXJzOlR0KHQpfSl9fSx7a2V5OlwiaGFuZGxlRG9uZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQsZSxuLGk9dGhpcyxyPXRoaXMuX3hocixhPXIucmVzcG9uc2VUeXBlLG89XCJcIixzPWZ1bmN0aW9uKCl7aS5lbWl0KFwidXBkYXRlXCIsaS5faWQse3N0YXR1czpyLnN0YXR1cyxkb25lOiEwLHNpemU6Q3QociwhMSxpLl91cmwpLHRpbWU6T2JqZWN0KGYuamIpKCkscmVzVHh0Om99KX0sdT1qdChyLmdldFJlc3BvbnNlSGVhZGVyKFwiQ29udGVudC1UeXBlXCIpKTtcImJsb2JcIiE9PWF8fFwidGV4dFwiIT09dS50eXBlJiZcImphdmFzY3JpcHRcIiE9PXUuc3ViVHlwZSYmXCJqc29uXCIhPT11LnN1YlR5cGU/KFwiXCIhPT1hJiZcInRleHRcIiE9PWF8fChvPXIucmVzcG9uc2VUZXh0KSxcImpzb25cIj09PWEmJihvPUpTT04uc3RyaW5naWZ5KHIucmVzcG9uc2UpKSxzKCkpOih0PXIucmVzcG9uc2UsZT1mdW5jdGlvbih0LGUpe2UmJihvPWUpLHMoKX0sKG49bmV3IEZpbGVSZWFkZXIpLm9ubG9hZD1mdW5jdGlvbigpe2UobnVsbCxuLnJlc3VsdCl9LG4ub25lcnJvcj1mdW5jdGlvbih0KXtlKHQpfSxuLnJlYWRBc1RleHQodCkpfX1dKSxlfShmLmMpO2Z1bmN0aW9uIFR0KHQpe3ZhciBlPXQuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKCkuc3BsaXQoXCJcXG5cIiksbj17fTtyZXR1cm4gT2JqZWN0KGYudSkoZSwoZnVuY3Rpb24odCl7aWYoXCJcIiE9PSh0PU9iamVjdChmLkFiKSh0KSkpe3ZhciBlPXQuc3BsaXQoXCI6XCIsMiksaT1WKCkoZSwyKSxyPWlbMF0sYT1pWzFdO25bcl09T2JqZWN0KGYuQWIpKGEpfX0pKSxufWZ1bmN0aW9uIEN0KHQsZSxuKXt2YXIgaT0wO2Z1bmN0aW9uIHIoKXtpZighZSl7dmFyIG49dC5yZXNwb25zZVR5cGUscj1cIlwiO1wiXCIhPT1uJiZcInRleHRcIiE9PW58fChyPXQucmVzcG9uc2VUZXh0KSxyJiYoaT1BdChyKSl9fWlmKE9iamVjdChmLkkpKG4pKXIoKTtlbHNlIHRyeXtpPU9iamVjdChmLnliKSh0LmdldFJlc3BvbnNlSGVhZGVyKFwiQ29udGVudC1MZW5ndGhcIikpfWNhdGNoKHQpe3IoKX1yZXR1cm4gMD09PWkmJnIoKSxcIlwiLmNvbmNhdChPYmplY3QoZi5BKShpKSxcIkJcIil9dmFyIFB0PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUodCl7dmFyIG4saT1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06e307cmV0dXJuIHIoKSh0aGlzLGUpLG49dSgpKHRoaXMsYygpKGUpLmNhbGwodGhpcykpLHQgaW5zdGFuY2VvZiB3aW5kb3cuUmVxdWVzdCYmKHQ9dC51cmwpLG4uX3VybD1PYmplY3QoZi5DKSh0KSxuLl9pZD1PYmplY3QoZi5DYikoXCJyZXF1ZXN0XCIpLG4uX29wdGlvbnM9aSxuLl9yZXFIZWFkZXJzPWkuaGVhZGVyc3x8e30sbi5fbWV0aG9kPWkubWV0aG9kfHxcIkdFVFwiLG59cmV0dXJuIGgoKShlLHQpLG8oKShlLFt7a2V5Olwic2VuZFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj10aGlzLl9vcHRpb25zLGk9T2JqZWN0KGYuWCkobi5ib2R5KT9uLmJvZHk6XCJcIjt0aGlzLl9mZXRjaD10LHRoaXMuZW1pdChcInNlbmRcIix0aGlzLl9pZCx7bmFtZTpPYmplY3QoZi5EKSh0aGlzLl91cmwpLHVybDp0aGlzLl91cmwsZGF0YTppLG1ldGhvZDp0aGlzLl9tZXRob2R9KSx0LnRoZW4oKGZ1bmN0aW9uKHQpe3ZhciBuPWp0KCh0PXQuY2xvbmUoKSkuaGVhZGVycy5nZXQoXCJDb250ZW50LVR5cGVcIikpO3JldHVybiB0LnRleHQoKS50aGVuKChmdW5jdGlvbihpKXt2YXIgcj17dHlwZTpuLnR5cGUsc3ViVHlwZTpuLnN1YlR5cGUsdGltZTpPYmplY3QoZi5qYikoKSxzaXplOkR0KHQsaSkscmVzVHh0OmkscmVzSGVhZGVyczpSdCh0KSxzdGF0dXM6dC5zdGF0dXMsZG9uZTohMH07T2JqZWN0KGYuTCkoZS5fcmVxSGVhZGVycyl8fChyLnJlcUhlYWRlcnM9ZS5fcmVxSGVhZGVycyksZS5lbWl0KFwidXBkYXRlXCIsZS5faWQscil9KSksdH0pKX19XSksZX0oZi5jKTtmdW5jdGlvbiBEdCh0LGUpe3ZhciBuPTAsaT10LmhlYWRlcnMuZ2V0KFwiQ29udGVudC1sZW5ndGhcIik7cmV0dXJuIG49aT9PYmplY3QoZi55YikoaSk6QXQoZSksXCJcIi5jb25jYXQoT2JqZWN0KGYuQSkobiksXCJCXCIpfWZ1bmN0aW9uIFJ0KHQpe3ZhciBlPXt9O3JldHVybiB0LmhlYWRlcnMuZm9yRWFjaCgoZnVuY3Rpb24odCxuKXtyZXR1cm4gZVtuXT10fSkpLGV9dmFyIEx0PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt2YXIgdDtyZXR1cm4gcigpKHRoaXMsZSksKHQ9dSgpKHRoaXMsYygpKGUpLmNhbGwodGhpcykpKS5fc3R5bGU9TihuKDcyKSksdC5uYW1lPVwibmV0d29ya1wiLHQuX3JlcXVlc3RzPXt9LHQuX3RwbD1uKDczKSx0Ll9kZXRhaWxUcGw9big3NCksdC5fcmVxdWVzdHNUcGw9big3NSksdC5fZGF0YWlsRGF0YT17fSx0Ll9pc0ZldGNoU3VwcG9ydGVkPSExLHdpbmRvdy5mZXRjaCYmKHQuX2lzRmV0Y2hTdXBwb3J0ZWQ9T2JqZWN0KGYuUikod2luZG93LmZldGNoKSksdH1yZXR1cm4gaCgpKGUsdCksbygpKGUsW3trZXk6XCJpbml0XCIsdmFsdWU6ZnVuY3Rpb24odCxuKXtiKCkoYygpKGUucHJvdG90eXBlKSxcImluaXRcIix0aGlzKS5jYWxsKHRoaXMsdCksdGhpcy5fY29udGFpbmVyPW4sdGhpcy5fYmluZEV2ZW50KCksdGhpcy5faW5pdENmZygpLHRoaXMub3ZlcnJpZGVYaHIoKSx0aGlzLl9hcHBlbmRUcGwoKX19LHtrZXk6XCJzaG93XCIsdmFsdWU6ZnVuY3Rpb24oKXtiKCkoYygpKGUucHJvdG90eXBlKSxcInNob3dcIix0aGlzKS5jYWxsKHRoaXMpLHRoaXMuX3JlbmRlcigpfX0se2tleTpcImNsZWFyXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl9yZXF1ZXN0cz17fSx0aGlzLl9yZW5kZXIoKX19LHtrZXk6XCJvdmVycmlkZVhoclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9d2luZG93LlhNTEh0dHBSZXF1ZXN0LnByb3RvdHlwZSxlPXRoaXMuX29yaWdTZW5kPXQuc2VuZCxuPXRoaXMuX29yaWdPcGVuPXQub3BlbixpPXRoaXMuX29yaWdTZXRSZXF1ZXN0SGVhZGVyPXQuc2V0UmVxdWVzdEhlYWRlcixyPXRoaXM7dC5vcGVuPWZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcyxhPWkuZXJ1ZGFSZXF1ZXN0PW5ldyBTdChpLHQsZSk7YS5vbihcInNlbmRcIiwoZnVuY3Rpb24odCxlKXtyZXR1cm4gci5fYWRkUmVxKHQsZSl9KSksYS5vbihcInVwZGF0ZVwiLChmdW5jdGlvbih0LGUpe3JldHVybiByLl91cGRhdGVSZXEodCxlKX0pKSxpLmFkZEV2ZW50TGlzdGVuZXIoXCJyZWFkeXN0YXRlY2hhbmdlXCIsKGZ1bmN0aW9uKCl7c3dpdGNoKGkucmVhZHlTdGF0ZSl7Y2FzZSAyOnJldHVybiBhLmhhbmRsZUhlYWRlcnNSZWNlaXZlZCgpO2Nhc2UgNDpyZXR1cm4gYS5oYW5kbGVEb25lKCl9fSkpLG4uYXBwbHkodGhpcyxhcmd1bWVudHMpfSx0LnNlbmQ9ZnVuY3Rpb24odCl7dmFyIG49dGhpcy5lcnVkYVJlcXVlc3Q7biYmbi5oYW5kbGVTZW5kKHQpLGUuYXBwbHkodGhpcyxhcmd1bWVudHMpfSx0LnNldFJlcXVlc3RIZWFkZXI9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLmVydWRhUmVxdWVzdDtuJiZuLmhhbmRsZVJlcUhlYWRlcnNTZXQodCxlKSxpLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19fSx7a2V5OlwicmVzdG9yZVhoclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9d2luZG93LlhNTEh0dHBSZXF1ZXN0LnByb3RvdHlwZTt0aGlzLl9vcmlnT3BlbiYmKHQub3Blbj10aGlzLl9vcmlnT3BlbiksdGhpcy5fb3JpZ1NlbmQmJih0LnNlbmQ9dGhpcy5fb3JpZ1NlbmQpLHRoaXMuX29yaWdTZXRSZXF1ZXN0SGVhZGVyJiYodC5zZXRSZXF1ZXN0SGVhZGVyPXRoaXMuX29yaWdTZXRSZXF1ZXN0SGVhZGVyKX19LHtrZXk6XCJvdmVycmlkZUZldGNoXCIsdmFsdWU6ZnVuY3Rpb24oKXtpZih0aGlzLl9pc0ZldGNoU3VwcG9ydGVkKXt2YXIgdD10aGlzLl9vcmlnRmV0Y2g9d2luZG93LmZldGNoLGU9dGhpczt3aW5kb3cuZmV0Y2g9ZnVuY3Rpb24oKXtmb3IodmFyIG49YXJndW1lbnRzLmxlbmd0aCxpPW5ldyBBcnJheShuKSxyPTA7cjxuO3IrKylpW3JdPWFyZ3VtZW50c1tyXTt2YXIgYT1FdCgpKFB0LGkpO2Eub24oXCJzZW5kXCIsKGZ1bmN0aW9uKHQsbil7cmV0dXJuIGUuX2FkZFJlcSh0LG4pfSkpLGEub24oXCJ1cGRhdGVcIiwoZnVuY3Rpb24odCxuKXtyZXR1cm4gZS5fdXBkYXRlUmVxKHQsbil9KSk7dmFyIG89dC5hcHBseSh2b2lkIDAsaSk7cmV0dXJuIGEuc2VuZChvKSxvfX19fSx7a2V5OlwicmVzdG9yZUZldGNoXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl9pc0ZldGNoU3VwcG9ydGVkJiZ0aGlzLl9vcmlnRmV0Y2gmJih3aW5kb3cuZmV0Y2g9dGhpcy5fb3JpZ0ZldGNoKX19LHtrZXk6XCJyZXF1ZXN0c1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9W107cmV0dXJuIE9iamVjdChmLnUpKHRoaXMuX3JlcXVlc3RzLChmdW5jdGlvbihlKXt0LnB1c2goZSl9KSksdH19LHtrZXk6XCJfYWRkUmVxXCIsdmFsdWU6ZnVuY3Rpb24odCxlKXtPYmplY3QoZi5yKShlLHtuYW1lOlwiXCIsdXJsOlwiXCIsc3RhdHVzOlwicGVuZGluZ1wiLHR5cGU6XCJ1bmtub3duXCIsc3ViVHlwZTpcInVua25vd25cIixzaXplOjAsZGF0YTpcIlwiLG1ldGhvZDpcIkdFVFwiLHN0YXJ0VGltZTpPYmplY3QoZi5qYikoKSx0aW1lOjAscmVzVHh0OlwiXCIsZG9uZTohMX0pLHRoaXMuX3JlcXVlc3RzW3RdPWUsdGhpcy5fcmVuZGVyKCl9fSx7a2V5OlwiX3VwZGF0ZVJlcVwiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5fcmVxdWVzdHNbdF07biYmKE9iamVjdChmLnopKG4sZSksbi50aW1lPW4udGltZS1uLnN0YXJ0VGltZSxuLmRpc3BsYXlUaW1lPU9iamVjdChmLmdiKShuLnRpbWUpLG4uZG9uZSYmKG4uc3RhdHVzPDIwMHx8bj49MzAwKSYmKG4uaGFzRXJyPSEwKSx0aGlzLl9yZW5kZXIoKSl9fSx7a2V5OlwiX2JpbmRFdmVudFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXRoaXMuXyRlbCxuPXRoaXMuX2NvbnRhaW5lcixpPXRoaXM7ZnVuY3Rpb24gcih0LGUpe3ZhciBpPW4uZ2V0KFwic291cmNlc1wiKTtpJiYoaS5zZXQodCxlKSxuLnNob3dUb29sKFwic291cmNlc1wiKSl9ZS5vbihcImNsaWNrXCIsXCIuZXJ1ZGEtcmVxdWVzdFwiLChmdW5jdGlvbigpe3ZhciB0PU9iamVjdChmLmEpKHRoaXMpLmRhdGEoXCJpZFwiKSxlPWkuX3JlcXVlc3RzW3RdO2UuZG9uZSYmaS5fc2hvd0RldGFpbChlKX0pKS5vbihcImNsaWNrXCIsXCIuZXJ1ZGEtY2xlYXItcmVxdWVzdFwiLChmdW5jdGlvbigpe3JldHVybiB0LmNsZWFyKCl9KSkub24oXCJjbGlja1wiLFwiLmVydWRhLWJhY2tcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5faGlkZURldGFpbCgpfSkpLm9uKFwiY2xpY2tcIixcIi5lcnVkYS1odHRwIC5lcnVkYS1yZXNwb25zZVwiLChmdW5jdGlvbigpe3ZhciBlPXQuX2RldGFpbERhdGEsbj1lLnJlc1R4dDtzd2l0Y2goZS5zdWJUeXBlKXtjYXNlXCJjc3NcIjpyZXR1cm4gcihcImNzc1wiLG4pO2Nhc2VcImh0bWxcIjpyZXR1cm4gcihcImh0bWxcIixuKTtjYXNlXCJqYXZhc2NyaXB0XCI6cmV0dXJuIHIoXCJqc1wiLG4pO2Nhc2VcImpzb25cIjpyZXR1cm4gcihcIm9iamVjdFwiLG4pfXN3aXRjaChlLnR5cGUpe2Nhc2VcImltYWdlXCI6cmV0dXJuIHIoXCJpbWdcIixlLnVybCl9fSkpfX0se2tleTpcImRlc3Ryb3lcIix2YWx1ZTpmdW5jdGlvbigpe2IoKShjKCkoZS5wcm90b3R5cGUpLFwiZGVzdHJveVwiLHRoaXMpLmNhbGwodGhpcyksTi5yZW1vdmUodGhpcy5fc3R5bGUpLHRoaXMucmVzdG9yZVhocigpLHRoaXMucmVzdG9yZUZldGNoKCksdGhpcy5fcm1DZmcoKX19LHtrZXk6XCJfc2hvd0RldGFpbFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3QucmVzVHh0JiZcIlwiPT09T2JqZWN0KGYuQWIpKHQucmVzVHh0KSYmZGVsZXRlIHQucmVzVHh0LE9iamVjdChmLkwpKHQucmVzSGVhZGVycykmJmRlbGV0ZSB0LnJlc0hlYWRlcnMsdGhpcy5fJGRldGFpbC5odG1sKHRoaXMuX2RldGFpbFRwbCh0KSkuc2hvdygpLHRoaXMuX2RldGFpbERhdGE9dH19LHtrZXk6XCJfaGlkZURldGFpbFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fJGRldGFpbC5oaWRlKCl9fSx7a2V5OlwiX3JtQ2ZnXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmNvbmZpZyxlPXRoaXMuX2NvbnRhaW5lci5nZXQoXCJzZXR0aW5nc1wiKTtlJiZlLnJlbW92ZSh0LFwib3ZlcnJpZGVGZXRjaFwiKS5yZW1vdmUoXCJOZXR3b3JrXCIpfX0se2tleTpcIl9hcHBlbmRUcGxcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuXyRlbDt0Lmh0bWwodGhpcy5fdHBsKCkpLHRoaXMuXyRkZXRhaWw9dC5maW5kKFwiLmVydWRhLWRldGFpbFwiKSx0aGlzLl8kcmVxdWVzdHM9dC5maW5kKFwiLmVydWRhLXJlcXVlc3RzXCIpfX0se2tleTpcIl9pbml0Q2ZnXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dGhpcy5jb25maWc9TS5jcmVhdGVDZmcoXCJuZXR3b3JrXCIse292ZXJyaWRlRmV0Y2g6ITB9KTtlLmdldChcIm92ZXJyaWRlRmV0Y2hcIikmJnRoaXMub3ZlcnJpZGVGZXRjaCgpLGUub24oXCJjaGFuZ2VcIiwoZnVuY3Rpb24oZSxuKXtzd2l0Y2goZSl7Y2FzZVwib3ZlcnJpZGVGZXRjaFwiOnJldHVybiBuP3Qub3ZlcnJpZGVGZXRjaCgpOnQucmVzdG9yZUZldGNoKCl9fSkpLHRoaXMuX2NvbnRhaW5lci5nZXQoXCJzZXR0aW5nc1wiKS50ZXh0KFwiTmV0d29ya1wiKS5zd2l0Y2goZSxcIm92ZXJyaWRlRmV0Y2hcIixcIkNhdGNoIEZldGNoIFJlcXVlc3RzXCIpLnNlcGFyYXRvcigpfX0se2tleTpcIl9yZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe2lmKHRoaXMuYWN0aXZlKXt2YXIgdD17fTtPYmplY3QoZi5MKSh0aGlzLl9yZXF1ZXN0cyl8fCh0LnJlcXVlc3RzPXRoaXMuX3JlcXVlc3RzKSx0aGlzLl9yZW5kZXJIdG1sKHRoaXMuX3JlcXVlc3RzVHBsKHQpKX19fSx7a2V5OlwiX3JlbmRlckh0bWxcIix2YWx1ZTpmdW5jdGlvbih0KXt0IT09dGhpcy5fbGFzdEh0bWwmJih0aGlzLl9sYXN0SHRtbD10LHRoaXMuXyRyZXF1ZXN0cy5odG1sKHQpKX19XSksZX0oeSk7ZnVuY3Rpb24gTnQodCl7Zm9yKHZhciBlPXt9LG49MCxpPXQubGVuZ3RoO248aTtuKyspe3ZhciByPXRbbl07XCJpbml0aWFsXCIhPT10W3JdJiYoZVtyXT10W3JdKX1yZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdChmLnNiKSh0LHtjb21wYXJhdG9yOmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPXQubGVuZ3RoLGk9ZS5sZW5ndGgscj1uPmk/aTpuLGE9MDthPHI7YSsrKXt2YXIgbz1JdCh0LmNoYXJDb2RlQXQoYSksZS5jaGFyQ29kZUF0KGEpKTtpZigwIT09bylyZXR1cm4gb31yZXR1cm4gbj5pPzE6bjxpPy0xOjB9fSl9KGUpfXZhciBNdD1FbGVtZW50LnByb3RvdHlwZSxGdD1mdW5jdGlvbigpe3JldHVybiExfTtNdC53ZWJraXRNYXRjaGVzU2VsZWN0b3I/RnQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC53ZWJraXRNYXRjaGVzU2VsZWN0b3IoZSl9Ok10Lm1vek1hdGNoZXNTZWxlY3RvciYmKEZ0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQubW96TWF0Y2hlc1NlbGVjdG9yKGUpfSk7dmFyIHp0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdChlKXtyKCkodGhpcyx0KSx0aGlzLl9lbD1lfXJldHVybiBvKCkodCxbe2tleTpcImdldENvbXB1dGVkU3R5bGVcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiBOdCh3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLl9lbCkpfX0se2tleTpcImdldE1hdGNoZWRDU1NSdWxlc1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPVtdO3JldHVybiBPYmplY3QoZi51KShkb2N1bWVudC5zdHlsZVNoZWV0cywoZnVuY3Rpb24obil7dHJ5e2lmKCFuLmNzc1J1bGVzKXJldHVybn1jYXRjaCh0KXtyZXR1cm59T2JqZWN0KGYudSkobi5jc3NSdWxlcywoZnVuY3Rpb24obil7dmFyIGk9ITE7dHJ5e2k9dC5fZWxNYXRjaGVzU2VsKG4uc2VsZWN0b3JUZXh0KX1jYXRjaCh0KXt9aSYmZS5wdXNoKHtzZWxlY3RvclRleHQ6bi5zZWxlY3RvclRleHQsc3R5bGU6TnQobi5zdHlsZSl9KX0pKX0pKSxlfX0se2tleTpcIl9lbE1hdGNoZXNTZWxcIix2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gRnQodGhpcy5fZWwsdCl9fV0pLHR9KCk7ZnVuY3Rpb24gSXQodCxlKXtyZXR1cm4odD1CdCh0KSk+KGU9QnQoZSkpPzE6dDxlPy0xOjB9ZnVuY3Rpb24gQnQodCl7cmV0dXJuIDQ1PT09dD8xMjM6dH12YXIgSHQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KGUpe3IoKSh0aGlzLHQpLHRoaXMuX3N0eWxlPU4obig3NikpLHRoaXMuX2lzU2hvdz0hMSx0aGlzLl9hcHBlbmRUcGwoZSksdGhpcy5fYmluZEV2ZW50KCl9cmV0dXJuIG8oKSh0LFt7a2V5Olwic2V0RWxcIix2YWx1ZTpmdW5jdGlvbih0KXt0aGlzLl8kdGFyZ2V0PU9iamVjdChmLmEpKHQpLHRoaXMuX3RhcmdldD10fX0se2tleTpcInNob3dcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX2lzU2hvdz0hMCx0aGlzLnJlbmRlcigpLHRoaXMuXyRlbC5zaG93KCl9fSx7a2V5OlwiZGVzdHJveVwiLHZhbHVlOmZ1bmN0aW9uKCl7Ti5yZW1vdmUodGhpcy5fc3R5bGUpfX0se2tleTpcImhpZGVcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX2lzU2hvdz0hMSx0aGlzLl8kZWwuaGlkZSgpfX0se2tleTpcInJlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fJHRhcmdldC5vZmZzZXQoKSxlPXQubGVmdCxuPXQud2lkdGgsaT10LnRvcCxyPXQuaGVpZ2h0O3RoaXMuXyRlbC5jc3Moe2xlZnQ6ZSx0b3A6aS13aW5kb3cuc2Nyb2xsWSx3aWR0aDpuLGhlaWdodDpyfSk7dmFyIGE9Z2V0Q29tcHV0ZWRTdHlsZSh0aGlzLl90YXJnZXQsXCJcIik7aWYoXCJub25lXCI9PT1hLmRpc3BsYXkpcmV0dXJuIHRoaXMuXyRlbC5jc3MoXCJ2aXNpYmlsaXR5XCIsXCJoaWRkZW5cIik7dGhpcy5fJGVsLmNzcyhcInZpc2liaWxpdHlcIixcInZpc2libGVcIik7dmFyIG89ZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdChmLm5iKShhLmdldFByb3BlcnR5VmFsdWUodCkpfSxzPW8oXCJtYXJnaW4tbGVmdFwiKSx1PW8oXCJtYXJnaW4tcmlnaHRcIiksbD1vKFwibWFyZ2luLXRvcFwiKSxjPW8oXCJtYXJnaW4tYm90dG9tXCIpO3RoaXMuXyRtYXJnaW4uY3NzKHtsZWZ0Oi1zLHRvcDotbCx3aWR0aDpuK3MrdSxoZWlnaHQ6citsK2N9KTt2YXIgXz1vKFwiYm9yZGVyLWxlZnQtd2lkdGhcIiksaD1vKFwiYm9yZGVyLXJpZ2h0LXdpZHRoXCIpLHA9byhcImJvcmRlci10b3Atd2lkdGhcIiksZD1uLV8taCx2PXItcC1vKFwiYm9yZGVyLWJvdHRvbS13aWR0aFwiKTt0aGlzLl8kcGFkZGluZy5jc3Moe2xlZnQ6Xyx0b3A6cCx3aWR0aDpkLGhlaWdodDp2fSk7dmFyIGc9byhcInBhZGRpbmctbGVmdFwiKSxtPW8oXCJwYWRkaW5nLXJpZ2h0XCIpLGI9byhcInBhZGRpbmctdG9wXCIpLHk9byhcInBhZGRpbmctYm90dG9tXCIpO3RoaXMuXyRjb250ZW50LmNzcyh7bGVmdDpfK2csdG9wOl8rYix3aWR0aDpkLWctbSxoZWlnaHQ6di1iLXl9KSx0aGlzLl8kc2l6ZS5jc3Moe3RvcDotbC0oaS1sPDI1PzA6MjUpLGxlZnQ6LXN9KS5odG1sKFwiXCIuY29uY2F0KGZ1bmN0aW9uKHQpe3ZhciBlPXQuaWQsbj10LmNsYXNzTmFtZSxpPSc8c3BhbiBzdHlsZT1cImNvbG9yOiM4ODEyODA7XCI+Jy5jb25jYXQodC50YWdOYW1lLnRvTG93ZXJDYXNlKCksXCI8L3NwYW4+XCIpO1wiXCIhPT1lJiYoaSs9JzxzcGFuIHN0eWxlPVwiY29sb3I6MWExYWE4O1wiPiMnLmNvbmNhdChlLFwiPC9zcGFuPlwiKSk7dmFyIHI9XCJcIjtPYmplY3QoZi5YKShuKSYmT2JqZWN0KGYudSkobi5zcGxpdCgvXFxzKy9nKSwoZnVuY3Rpb24odCl7XCJcIiE9PU9iamVjdChmLkFiKSh0KSYmKHIrPVwiLlwiLmNvbmNhdCh0KSl9KSk7cmV0dXJuIGkrPSc8c3BhbiBzdHlsZT1cImNvbG9yOjFhMWFhODtcIj4nLmNvbmNhdChyLFwiPC9zcGFuPlwiKX0odGhpcy5fdGFyZ2V0KSxcIiB8IFwiKS5jb25jYXQobixcIiDDlyBcIikuY29uY2F0KHIpKX19LHtrZXk6XCJfYmluZEV2ZW50XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsKGZ1bmN0aW9uKCl7dC5faXNTaG93JiZ0LnJlbmRlcigpfSksITEpfX0se2tleTpcIl9hcHBlbmRUcGxcIix2YWx1ZTpmdW5jdGlvbih0KXt0LmFwcGVuZChuKDc3KSgpKTt2YXIgZT10aGlzLl8kZWw9dC5maW5kKFwiLmVydWRhLWVsZW1lbnRzLWhpZ2hsaWdodFwiKTt0aGlzLl8kbWFyZ2luPWUuZmluZChcIi5lcnVkYS1tYXJnaW5cIiksdGhpcy5fJHBhZGRpbmc9ZS5maW5kKFwiLmVydWRhLXBhZGRpbmdcIiksdGhpcy5fJGNvbnRlbnQ9ZS5maW5kKFwiLmVydWRhLWNvbnRlbnRcIiksdGhpcy5fJHNpemU9ZS5maW5kKFwiLmVydWRhLXNpemVcIil9fV0pLHR9KCk7ZnVuY3Rpb24gVXQodCl7dmFyIGU9dC5wYXJlbnROb2RlO2lmKCFlKXJldHVybiExO2Zvcig7ZTspaWYoKGU9ZS5wYXJlbnROb2RlKSYmXCJlcnVkYVwiPT09ZS5pZClyZXR1cm4hMDtyZXR1cm4hMX12YXIgR3Q9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3ZhciB0O3IoKSh0aGlzLGUpLHQ9dSgpKHRoaXMsYygpKGUpLmNhbGwodGhpcykpO3ZhciBuPUcoKSh0KTtyZXR1cm4gdC5fc3RhcnRMaXN0ZW5lcj1mdW5jdGlvbih0KXtpZighVXQodC50YXJnZXQpKXJldHVybiBuLl90aW1lcj1zZXRUaW1lb3V0KChmdW5jdGlvbigpe24uZW1pdChcInNlbGVjdFwiLHQudGFyZ2V0KX0pLDIwMCksITF9LHQuX21vdmVMaXN0ZW5lcj1mdW5jdGlvbigpe2NsZWFyVGltZW91dChuLl90aW1lcil9LHQuX2NsaWNrTGlzdGVuZXI9ZnVuY3Rpb24odCl7VXQodC50YXJnZXQpfHwodC5wcmV2ZW50RGVmYXVsdCgpLHQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCkpfSx0fXJldHVybiBoKCkoZSx0KSxvKCkoZSxbe2tleTpcImVuYWJsZVwiLHZhbHVlOmZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LGUpe2RvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcih0LGUsITApfXJldHVybiB0aGlzLmRpc2FibGUoKSxPYmplY3QoZi5QKSgpPyh0KFwidG91Y2hzdGFydFwiLHRoaXMuX3N0YXJ0TGlzdGVuZXIpLHQoXCJ0b3VjaG1vdmVcIix0aGlzLl9tb3ZlTGlzdGVuZXIpKToodChcIm1vdXNlZG93blwiLHRoaXMuX3N0YXJ0TGlzdGVuZXIpLHQoXCJtb3VzZW1vdmVcIix0aGlzLl9tb3ZlTGlzdGVuZXIpKSx0KFwiY2xpY2tcIix0aGlzLl9jbGlja0xpc3RlbmVyKSx0aGlzfX0se2tleTpcImRpc2FibGVcIix2YWx1ZTpmdW5jdGlvbigpe2Z1bmN0aW9uIHQodCxlKXtkb2N1bWVudC5ib2R5LnJlbW92ZUV2ZW50TGlzdGVuZXIodCxlLCEwKX1yZXR1cm4gT2JqZWN0KGYuUCkoKT8odChcInRvdWNoc3RhcnRcIix0aGlzLl9zdGFydExpc3RlbmVyKSx0KFwidG91Y2htb3ZlXCIsdGhpcy5fbW92ZUxpc3RlbmVyKSk6KHQoXCJtb3VzZWRvd25cIix0aGlzLl9zdGFydExpc3RlbmVyKSx0KFwibW91c2Vtb3ZlXCIsdGhpcy5fbW92ZUxpc3RlbmVyKSksdChcImNsaWNrXCIsdGhpcy5fY2xpY2tMaXN0ZW5lciksdGhpc319XSksZX0oZi5jKSxxdD1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dmFyIHQ7cmV0dXJuIHIoKSh0aGlzLGUpLCh0PXUoKSh0aGlzLGMoKShlKS5jYWxsKHRoaXMpKSkuX3N0eWxlPU4obig3OCkpLHQubmFtZT1cImVsZW1lbnRzXCIsdC5fdHBsPW4oNzkpLHQuX3JtRGVmQ29tcHV0ZWRTdHlsZT0hMCx0Ll9oaWdobGlnaHRFbGVtZW50PSExLHQuX3NlbGVjdEVsZW1lbnQ9ITEsdC5fb2JzZXJ2ZUVsZW1lbnQ9ITAsdC5fY29tcHV0ZWRTdHlsZVNlYXJjaEtleXdvcmQ9XCJcIix0Ll9oaXN0b3J5PVtdLGYuYy5taXhpbihHKCkodCkpLHR9cmV0dXJuIGgoKShlLHQpLG8oKShlLFt7a2V5OlwiaW5pdFwiLHZhbHVlOmZ1bmN0aW9uKHQsaSl7dmFyIHI9dGhpcztiKCkoYygpKGUucHJvdG90eXBlKSxcImluaXRcIix0aGlzKS5jYWxsKHRoaXMsdCksdGhpcy5fY29udGFpbmVyPWksdC5odG1sKCc8ZGl2IGNsYXNzPVwiZXJ1ZGEtc2hvdy1hcmVhXCI+PC9kaXY+JyksdGhpcy5fJHNob3dBcmVhPXQuZmluZChcIi5lcnVkYS1zaG93LWFyZWFcIiksdC5hcHBlbmQobig4MCkoKSksdGhpcy5faHRtbEVsPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudCx0aGlzLl9oaWdobGlnaHQ9bmV3IEh0KHRoaXMuX2NvbnRhaW5lci4kY29udGFpbmVyKSx0aGlzLl9zZWxlY3Q9bmV3IEd0LHRoaXMuX2JpbmRFdmVudCgpLHRoaXMuX2luaXRPYnNlcnZlcigpLHRoaXMuX2luaXRDZmcoKSxPYmplY3QoZi5oYikoKGZ1bmN0aW9uKCl7cmV0dXJuIHIuX3VwZGF0ZUhpc3RvcnkoKX0pKX19LHtrZXk6XCJzaG93XCIsdmFsdWU6ZnVuY3Rpb24oKXtiKCkoYygpKGUucHJvdG90eXBlKSxcInNob3dcIix0aGlzKS5jYWxsKHRoaXMpLHRoaXMuX29ic2VydmVFbGVtZW50JiZ0aGlzLl9lbmFibGVPYnNlcnZlcigpLHRoaXMuX2N1ckVsfHx0aGlzLl9zZXRFbCh0aGlzLl9odG1sRWwpLHRoaXMuX3JlbmRlcigpfX0se2tleTpcImhpZGVcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kaXNhYmxlT2JzZXJ2ZXIoKSxiKCkoYygpKGUucHJvdG90eXBlKSxcImhpZGVcIix0aGlzKS5jYWxsKHRoaXMpfX0se2tleTpcInNldFwiLHZhbHVlOmZ1bmN0aW9uKHQpe2lmKHQhPT10aGlzLl9jdXJFbClyZXR1cm4gdGhpcy5fc2V0RWwodCksdGhpcy5zY3JvbGxUb1RvcCgpLHRoaXMuX3JlbmRlcigpLHRoaXMuX3VwZGF0ZUhpc3RvcnkoKSx0aGlzLmVtaXQoXCJjaGFuZ2VcIix0KSx0aGlzfX0se2tleTpcIm92ZXJyaWRlRXZlbnRUYXJnZXRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PWllKCksZT10aGlzLl9vcmlnQWRkRXZlbnQ9dC5hZGRFdmVudExpc3RlbmVyLG49dGhpcy5fb3JpZ1JtRXZlbnQ9dC5yZW1vdmVFdmVudExpc3RlbmVyO3QuYWRkRXZlbnRMaXN0ZW5lcj1mdW5jdGlvbih0LG4saSl7ZWUodGhpcyx0LG4saSksZS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LHQucmVtb3ZlRXZlbnRMaXN0ZW5lcj1mdW5jdGlvbih0LGUsaSl7bmUodGhpcyx0LGUsaSksbi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fX0se2tleTpcInNjcm9sbFRvVG9wXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl8kc2hvd0FyZWEuZ2V0KDApLnNjcm9sbFRvcD0wfX0se2tleTpcInJlc3RvcmVFdmVudFRhcmdldFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9aWUoKTt0aGlzLl9vcmlnQWRkRXZlbnQmJih0LmFkZEV2ZW50TGlzdGVuZXI9dGhpcy5fb3JpZ0FkZEV2ZW50KSx0aGlzLl9vcmlnUm1FdmVudCYmKHQucmVtb3ZlRXZlbnRMaXN0ZW5lcj10aGlzLl9vcmlnUm1FdmVudCl9fSx7a2V5OlwiZGVzdHJveVwiLHZhbHVlOmZ1bmN0aW9uKCl7YigpKGMoKShlLnByb3RvdHlwZSksXCJkZXN0cm95XCIsdGhpcykuY2FsbCh0aGlzKSxOLnJlbW92ZSh0aGlzLl9zdHlsZSksdGhpcy5fc2VsZWN0LmRpc2FibGUoKSx0aGlzLl9oaWdobGlnaHQuZGVzdHJveSgpLHRoaXMuX2Rpc2FibGVPYnNlcnZlcigpLHRoaXMucmVzdG9yZUV2ZW50VGFyZ2V0KCksdGhpcy5fcm1DZmcoKX19LHtrZXk6XCJfYmFja1wiLHZhbHVlOmZ1bmN0aW9uKCl7aWYodGhpcy5fY3VyRWwhPT10aGlzLl9odG1sRWwpe2Zvcih2YXIgdD10aGlzLl9jdXJQYXJlbnRRdWV1ZSxlPXQuc2hpZnQoKTshWXQoZSk7KWU9dC5zaGlmdCgpO3RoaXMuc2V0KGUpfX19LHtrZXk6XCJfYmluZEV2ZW50XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dGhpcyxuPXRoaXMuX2NvbnRhaW5lcixpPXRoaXMuX3NlbGVjdDt0aGlzLl8kZWwub24oXCJjbGlja1wiLFwiLmVydWRhLWNoaWxkXCIsKGZ1bmN0aW9uKCl7dmFyIHQ9T2JqZWN0KGYuYSkodGhpcykuZGF0YShcImlkeFwiKSxpPWUuX2N1ckVsLHI9aS5jaGlsZE5vZGVzW3RdO2lmKHImJjM9PT1yLm5vZGVUeXBlKXt2YXIgYTtzd2l0Y2goaS50YWdOYW1lKXtjYXNlXCJTQ1JJUFRcIjphPVwianNcIjticmVhaztjYXNlXCJTVFlMRVwiOmE9XCJjc3NcIjticmVhaztkZWZhdWx0OnJldHVybn12YXIgbz1uLmdldChcInNvdXJjZXNcIik7byYmKG8uc2V0KGEsci5ub2RlVmFsdWUpLG4uc2hvd1Rvb2woXCJzb3VyY2VzXCIpKX1lbHNlIFl0KHIpP2Uuc2V0KHIpOmUuX3JlbmRlcigpfSkpLm9uKFwiY2xpY2tcIixcIi5lcnVkYS1saXN0ZW5lci1jb250ZW50XCIsKGZ1bmN0aW9uKCl7dmFyIHQ9T2JqZWN0KGYuYSkodGhpcykudGV4dCgpLGU9bi5nZXQoXCJzb3VyY2VzXCIpO2UmJihlLnNldChcImpzXCIsdCksbi5zaG93VG9vbChcInNvdXJjZXNcIikpfSkpLm9uKFwiY2xpY2tcIixcIi5lcnVkYS1icmVhZGNydW1iXCIsKGZ1bmN0aW9uKCl7dmFyIGU9bi5nZXQoXCJzb3VyY2VzXCIpO2UmJihlLnNldChcIm9iamVjdFwiLHQuX2N1ckVsKSxuLnNob3dUb29sKFwic291cmNlc1wiKSl9KSkub24oXCJjbGlja1wiLFwiLmVydWRhLXBhcmVudFwiLChmdW5jdGlvbigpe2Zvcih2YXIgdD1PYmplY3QoZi5hKSh0aGlzKS5kYXRhKFwiaWR4XCIpLG49ZS5fY3VyRWwucGFyZW50Tm9kZTt0LS0mJm4ucGFyZW50Tm9kZTspbj1uLnBhcmVudE5vZGU7WXQobik/ZS5zZXQobik6ZS5fcmVuZGVyKCl9KSkub24oXCJjbGlja1wiLFwiLmVydWRhLXRvZ2dsZS1hbGwtY29tcHV0ZWQtc3R5bGVcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5fdG9nZ2xlQWxsQ29tcHV0ZWRTdHlsZSgpfSkpLm9uKFwiY2xpY2tcIixcIi5lcnVkYS1jb21wdXRlZC1zdHlsZS1zZWFyY2hcIiwoZnVuY3Rpb24oKXt2YXIgZT1wcm9tcHQoXCJGaWx0ZXJcIik7T2JqZWN0KGYuUykoZSl8fChlPU9iamVjdChmLkFiKShlKSx0Ll9jb21wdXRlZFN0eWxlU2VhcmNoS2V5d29yZD1lLHQuX3JlbmRlcigpKX0pKSx0aGlzLl8kZWwuZmluZChcIi5lcnVkYS1ib3R0b20tYmFyXCIpLm9uKFwiY2xpY2tcIixcIi5lcnVkYS1yZWZyZXNoXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHQuX3JlbmRlcigpfSkpLm9uKFwiY2xpY2tcIixcIi5lcnVkYS1oaWdobGlnaHRcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5fdG9nZ2xlSGlnaGxpZ2h0KCl9KSkub24oXCJjbGlja1wiLFwiLmVydWRhLXNlbGVjdFwiLChmdW5jdGlvbigpe3JldHVybiB0Ll90b2dnbGVTZWxlY3QoKX0pKS5vbihcImNsaWNrXCIsXCIuZXJ1ZGEtcmVzZXRcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5zZXQodC5faHRtbEVsKX0pKSxpLm9uKFwic2VsZWN0XCIsKGZ1bmN0aW9uKGUpe3JldHVybiB0LnNldChlKX0pKX19LHtrZXk6XCJfdG9nZ2xlQWxsQ29tcHV0ZWRTdHlsZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fcm1EZWZDb21wdXRlZFN0eWxlPSF0aGlzLl9ybURlZkNvbXB1dGVkU3R5bGUsdGhpcy5fcmVuZGVyKCl9fSx7a2V5OlwiX2VuYWJsZU9ic2VydmVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl9vYnNlcnZlci5vYnNlcnZlKHRoaXMuX2h0bWxFbCx7YXR0cmlidXRlczohMCxjaGlsZExpc3Q6ITAsc3VidHJlZTohMH0pfX0se2tleTpcIl9kaXNhYmxlT2JzZXJ2ZXJcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX29ic2VydmVyLmRpc2Nvbm5lY3QoKX19LHtrZXk6XCJfdG9nZ2xlSGlnaGxpZ2h0XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl9zZWxlY3RFbGVtZW50fHwodGhpcy5fJGVsLmZpbmQoXCIuZXJ1ZGEtaGlnaGxpZ2h0XCIpLnRvZ2dsZUNsYXNzKFwiZXJ1ZGEtYWN0aXZlXCIpLHRoaXMuX2hpZ2hsaWdodEVsZW1lbnQ9IXRoaXMuX2hpZ2hsaWdodEVsZW1lbnQsdGhpcy5fcmVuZGVyKCkpfX0se2tleTpcIl90b2dnbGVTZWxlY3RcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX3NlbGVjdDt0aGlzLl8kZWwuZmluZChcIi5lcnVkYS1zZWxlY3RcIikudG9nZ2xlQ2xhc3MoXCJlcnVkYS1hY3RpdmVcIiksdGhpcy5fc2VsZWN0RWxlbWVudHx8dGhpcy5faGlnaGxpZ2h0RWxlbWVudHx8dGhpcy5fdG9nZ2xlSGlnaGxpZ2h0KCksdGhpcy5fc2VsZWN0RWxlbWVudD0hdGhpcy5fc2VsZWN0RWxlbWVudCx0aGlzLl9zZWxlY3RFbGVtZW50Pyh0LmVuYWJsZSgpLHRoaXMuX2NvbnRhaW5lci5oaWRlKCkpOnQuZGlzYWJsZSgpfX0se2tleTpcIl9zZXRFbFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3RoaXMuX2N1ckVsPXQsdGhpcy5fY3VyQ3NzU3RvcmU9bmV3IHp0KHQpLHRoaXMuX2hpZ2hsaWdodC5zZXRFbCh0KSx0aGlzLl9ybURlZkNvbXB1dGVkU3R5bGU9ITA7Zm9yKHZhciBlPVtdLG49dC5wYXJlbnROb2RlO247KWUucHVzaChuKSxuPW4ucGFyZW50Tm9kZTt0aGlzLl9jdXJQYXJlbnRRdWV1ZT1lfX0se2tleTpcIl9nZXREYXRhXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD17fSxlPXRoaXMuX2N1ckVsLG49dGhpcy5fY3VyQ3NzU3RvcmUsaT1lLmNsYXNzTmFtZSxyPWUuaWQsYT1lLmF0dHJpYnV0ZXMsbz1lLnRhZ05hbWU7dC5jb21wdXRlZFN0eWxlU2VhcmNoS2V5d29yZD10aGlzLl9jb21wdXRlZFN0eWxlU2VhcmNoS2V5d29yZCx0LnBhcmVudHM9ZnVuY3Rpb24odCl7dmFyIGU9W10sbj0wLGk9dC5wYXJlbnROb2RlO2Zvcig7aSYmMT09PWkubm9kZVR5cGU7KWUucHVzaCh7dGV4dDpKdChpLHtub0F0dHI6ITB9KSxpZHg6bisrfSksaT1pLnBhcmVudE5vZGU7cmV0dXJuIGUucmV2ZXJzZSgpfShlKSx0LmNoaWxkcmVuPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxuPTAsaT10Lmxlbmd0aDtuPGk7bisrKXt2YXIgcj10W25dLGE9ci5ub2RlVHlwZTtpZigzIT09YSYmOCE9PWEpe3ZhciBvPSFPYmplY3QoZi5YKShyLmNsYXNzTmFtZSk7MT09PWEmJlwiZXJ1ZGFcIiE9PXIuaWQmJihvfHxyLmNsYXNzTmFtZS5pbmRleE9mKFwiZXJ1ZGFcIik8MCkmJmUucHVzaCh7dGV4dDpKdChyKSxpc0VsOiEwLGlkeDpufSl9ZWxzZXt2YXIgcz1yLm5vZGVWYWx1ZS50cmltKCk7XCJcIiE9PXMmJmUucHVzaCh7dGV4dDpzLGlzQ210Ojg9PT1hLGlkeDpufSl9fXJldHVybiBlfShlLmNoaWxkTm9kZXMpLHQuYXR0cmlidXRlcz1RdChhKSx0Lm5hbWU9SnQoe3RhZ05hbWU6byxpZDpyLGNsYXNzTmFtZTppLGF0dHJpYnV0ZXM6YX0pO3ZhciBzPWUuZXJ1ZGFFdmVudHM7aWYocyYmMCE9PU9iamVjdChmLmFiKShzKS5sZW5ndGgmJih0Lmxpc3RlbmVycz1zKSx0ZShvKSlyZXR1cm4gdDt2YXIgdT1uLmdldENvbXB1dGVkU3R5bGUoKTtmdW5jdGlvbiBsKHQpe3ZhciBlPVtcInRvcFwiLFwibGVmdFwiLFwicmlnaHRcIixcImJvdHRvbVwiXTtyZXR1cm5cInBvc2l0aW9uXCIhPT10JiYoZT1PYmplY3QoZi5mYikoZSwoZnVuY3Rpb24oZSl7cmV0dXJuXCJcIi5jb25jYXQodCxcIi1cIikuY29uY2F0KGUpfSkpKSxcImJvcmRlclwiPT09dCYmKGU9T2JqZWN0KGYuZmIpKGUsKGZ1bmN0aW9uKHQpe3JldHVyblwiXCIuY29uY2F0KHQsXCItd2lkdGhcIil9KSkpLHt0b3A6YWUodVtlWzBdXSx0KSxsZWZ0OmFlKHVbZVsxXV0sdCkscmlnaHQ6YWUodVtlWzJdXSx0KSxib3R0b206YWUodVtlWzNdXSx0KX19dmFyIGM9e21hcmdpbjpsKFwibWFyZ2luXCIpLGJvcmRlcjpsKFwiYm9yZGVyXCIpLHBhZGRpbmc6bChcInBhZGRpbmdcIiksY29udGVudDp7d2lkdGg6YWUodS53aWR0aCksaGVpZ2h0OmFlKHUuaGVpZ2h0KX19O1wic3RhdGljXCIhPT11LnBvc2l0aW9uJiYoYy5wb3NpdGlvbj1sKFwicG9zaXRpb25cIikpLHQuYm94TW9kZWw9Yzt2YXIgXz1uLmdldE1hdGNoZWRDU1NSdWxlcygpO18udW5zaGlmdChmdW5jdGlvbih0KXtmb3IodmFyIGU9e3NlbGVjdG9yVGV4dDpcImVsZW1lbnQuc3R5bGVcIixzdHlsZTp7fX0sbj0wLGk9dC5sZW5ndGg7bjxpO24rKyl7dmFyIHI9dFtuXTtlLnN0eWxlW3JdPXRbcl19cmV0dXJuIGV9KGUuc3R5bGUpKSxfLmZvckVhY2goKGZ1bmN0aW9uKHQpe3JldHVybiBXdCh0LnN0eWxlKX0pKSx0LnN0eWxlcz1fLHRoaXMuX3JtRGVmQ29tcHV0ZWRTdHlsZSYmKHU9ZnVuY3Rpb24odCxlKXt2YXIgbj17fSxpPVtcImRpc3BsYXlcIixcIndpZHRoXCIsXCJoZWlnaHRcIl07cmV0dXJuIE9iamVjdChmLnUpKGUsKGZ1bmN0aW9uKHQpe2k9aS5jb25jYXQoT2JqZWN0KGYuYWIpKHQuc3R5bGUpKX0pKSxpPU9iamVjdChmLkRiKShpKSxPYmplY3QoZi51KSh0LChmdW5jdGlvbih0LGUpe09iamVjdChmLm0pKGksZSkmJihuW2VdPXQpfSkpLG59KHUsXykpLHQucm1EZWZDb21wdXRlZFN0eWxlPXRoaXMuX3JtRGVmQ29tcHV0ZWRTdHlsZTt2YXIgaD1PYmplY3QoZi5lYikodC5jb21wdXRlZFN0eWxlU2VhcmNoS2V5d29yZCk7cmV0dXJuIGgmJih1PU9iamVjdChmLm1iKSh1LChmdW5jdGlvbih0LGUpe3JldHVybiBPYmplY3QoZi5tKShlLGgpfHxPYmplY3QoZi5tKSh0LGgpfSkpKSxXdCh1KSx0LmNvbXB1dGVkU3R5bGU9dSx0fX0se2tleTpcIl9yZW5kZXJcIix2YWx1ZTpmdW5jdGlvbigpe2lmKCFZdCh0aGlzLl9jdXJFbCkpcmV0dXJuIHRoaXMuX2JhY2soKTt0aGlzLl9oaWdobGlnaHRbdGhpcy5faGlnaGxpZ2h0RWxlbWVudD9cInNob3dcIjpcImhpZGVcIl0oKSx0aGlzLl9yZW5kZXJIdG1sKHRoaXMuX3RwbCh0aGlzLl9nZXREYXRhKCkpKX19LHtrZXk6XCJfcmVuZGVySHRtbFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3QhPT10aGlzLl9sYXN0SHRtbCYmKHRoaXMuX2xhc3RIdG1sPXQsdGhpcy5fJHNob3dBcmVhLmh0bWwodCkpfX0se2tleTpcIl91cGRhdGVIaXN0b3J5XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9jb250YWluZXIuZ2V0KFwiY29uc29sZVwiKTtpZih0KXt2YXIgZT10aGlzLl9oaXN0b3J5O2UudW5zaGlmdCh0aGlzLl9jdXJFbCksZS5sZW5ndGg+NSYmZS5wb3AoKTtmb3IodmFyIG49MDtuPDU7bisrKXQuc2V0R2xvYmFsKFwiJFwiLmNvbmNhdChuKSxlW25dKX19fSx7a2V5OlwiX2luaXRPYnNlcnZlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLl9vYnNlcnZlcj1uZXcgZi5mKChmdW5jdGlvbihlKXtPYmplY3QoZi51KShlLChmdW5jdGlvbihlKXtyZXR1cm4gdC5faGFuZGxlTXV0YXRpb24oZSl9KSl9KSl9fSx7a2V5OlwiX2hhbmRsZU11dGF0aW9uXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGUsbjtpZighVXQodC50YXJnZXQpKWlmKFwiYXR0cmlidXRlc1wiPT09dC50eXBlKXtpZih0LnRhcmdldCE9PXRoaXMuX2N1ckVsKXJldHVybjt0aGlzLl9yZW5kZXIoKX1lbHNlIGlmKFwiY2hpbGRMaXN0XCI9PT10LnR5cGUpe2lmKHQudGFyZ2V0PT09dGhpcy5fY3VyRWwpcmV0dXJuIHRoaXMuX3JlbmRlcigpO3ZhciBpPXQuYWRkZWROb2Rlcztmb3IoZT0wLG49aS5sZW5ndGg7ZTxuO2UrKylpZihpW2VdLnBhcmVudE5vZGU9PT10aGlzLl9jdXJFbClyZXR1cm4gdGhpcy5fcmVuZGVyKCk7dmFyIHI9dC5yZW1vdmVkTm9kZXM7Zm9yKGU9MCxuPXIubGVuZ3RoO2U8bjtlKyspaWYocltlXT09PXRoaXMuX2N1ckVsKXJldHVybiB0aGlzLnNldCh0aGlzLl9odG1sRWwpfX19LHtrZXk6XCJfcm1DZmdcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuY29uZmlnLGU9dGhpcy5fY29udGFpbmVyLmdldChcInNldHRpbmdzXCIpO2UmJmUucmVtb3ZlKHQsXCJvdmVycmlkZUV2ZW50VGFyZ2V0XCIpLnJlbW92ZSh0LFwib2JzZXJ2ZUVsZW1lbnRcIikucmVtb3ZlKFwiRWxlbWVudHNcIil9fSx7a2V5OlwiX2luaXRDZmdcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10aGlzLmNvbmZpZz1NLmNyZWF0ZUNmZyhcImVsZW1lbnRzXCIse292ZXJyaWRlRXZlbnRUYXJnZXQ6ITAsb2JzZXJ2ZUVsZW1lbnQ6ITB9KTtlLmdldChcIm92ZXJyaWRlRXZlbnRUYXJnZXRcIikmJnRoaXMub3ZlcnJpZGVFdmVudFRhcmdldCgpLGUuZ2V0KFwib2JzZXJ2ZUVsZW1lbnRcIikmJih0aGlzLl9vYnNlcnZlRWxlbWVudD0hMSksZS5vbihcImNoYW5nZVwiLChmdW5jdGlvbihlLG4pe3N3aXRjaChlKXtjYXNlXCJvdmVycmlkZUV2ZW50VGFyZ2V0XCI6cmV0dXJuIG4/dC5vdmVycmlkZUV2ZW50VGFyZ2V0KCk6dC5yZXN0b3JlRXZlbnRUYXJnZXQoKTtjYXNlXCJvYnNlcnZlRWxlbWVudFwiOnJldHVybiB0Ll9vYnNlcnZlRWxlbWVudD1uLG4/dC5fZW5hYmxlT2JzZXJ2ZXIoKTp0Ll9kaXNhYmxlT2JzZXJ2ZXIoKX19KSk7dmFyIG49dGhpcy5fY29udGFpbmVyLmdldChcInNldHRpbmdzXCIpO24mJihuLnRleHQoXCJFbGVtZW50c1wiKS5zd2l0Y2goZSxcIm92ZXJyaWRlRXZlbnRUYXJnZXRcIixcIkNhdGNoIEV2ZW50IExpc3RlbmVyc1wiKSx0aGlzLl9vYnNlcnZlciYmbi5zd2l0Y2goZSxcIm9ic2VydmVFbGVtZW50XCIsXCJBdXRvIFJlZnJlc2hcIiksbi5zZXBhcmF0b3IoKSl9fV0pLGV9KHkpO2Z1bmN0aW9uIFd0KHQpe09iamVjdChmLnUpKHQsKGZ1bmN0aW9uKGUsbil7cmV0dXJuIHRbbl09WHQoZSl9KSl9dmFyIEt0PS9yZ2JhP1xcKCguKj8pXFwpL2csVnQ9L3VybFxcKFwiPyguKj8pXCI/XFwpL2c7ZnVuY3Rpb24gWHQodCl7cmV0dXJuKHQ9T2JqZWN0KGYuemIpKHQpKS5yZXBsYWNlKEt0LCc8c3BhbiBjbGFzcz1cImVydWRhLXN0eWxlLWNvbG9yXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOiAkJlwiPjwvc3Bhbj4kJicpLnJlcGxhY2UoVnQsKGZ1bmN0aW9uKHQsZSl7cmV0dXJuJ3VybChcIicuY29uY2F0KHJlKGUpLCdcIiknKX0pKX12YXIgWXQ9ZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdChmLkspKHQpJiZ0LnBhcmVudE5vZGV9O2Z1bmN0aW9uIEp0KHQpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTp7fSxuPWUubm9BdHRyLGk9dm9pZCAwIT09biYmbixyPXQuaWQsYT10LmNsYXNzTmFtZSxvPXQuYXR0cmlidXRlcyxzPSc8c3BhbiBjbGFzcz1cImVydWRhLXRhZy1uYW1lLWNvbG9yXCI+Jy5jb25jYXQodC50YWdOYW1lLnRvTG93ZXJDYXNlKCksXCI8L3NwYW4+XCIpO2lmKFwiXCIhPT1yJiYocys9JzxzcGFuIGNsYXNzPVwiZXJ1ZGEtZnVuY3Rpb24tY29sb3JcIj4jJy5jb25jYXQocixcIjwvc3Bhbj5cIikpLE9iamVjdChmLlgpKGEpKXt2YXIgdT1cIlwiO09iamVjdChmLnUpKGEuc3BsaXQoL1xccysvZyksKGZ1bmN0aW9uKHQpe1wiXCIhPT10LnRyaW0oKSYmKHUrPVwiLlwiLmNvbmNhdCh0KSl9KSkscys9JzxzcGFuIGNsYXNzPVwiZXJ1ZGEtYXR0cmlidXRlLW5hbWUtY29sb3JcIj4nLmNvbmNhdCh1LFwiPC9zcGFuPlwiKX1yZXR1cm4gaXx8T2JqZWN0KGYudSkobywoZnVuY3Rpb24odCl7dmFyIGU9dC5uYW1lO1wiaWRcIiE9PWUmJlwiY2xhc3NcIiE9PWUmJlwic3R5bGVcIiE9PWUmJihzKz0nIDxzcGFuIGNsYXNzPVwiZXJ1ZGEtYXR0cmlidXRlLW5hbWUtY29sb3JcIj4nLmNvbmNhdChlLCc8L3NwYW4+PHNwYW4gY2xhc3M9XCJlcnVkYS1vcGVyYXRvci1jb2xvclwiPj1cIjwvc3Bhbj48c3BhbiBjbGFzcz1cImVydWRhLXN0cmluZy1jb2xvclwiPicpLmNvbmNhdCh0LnZhbHVlLCc8L3NwYW4+PHNwYW4gY2xhc3M9XCJlcnVkYS1vcGVyYXRvci1jb2xvclwiPlwiPC9zcGFuPicpKX0pKSxzfXZhciBRdD1mdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0KGYuZmIpKHQsKGZ1bmN0aW9uKHQpe3ZhciBlPXQudmFsdWUsbj10Lm5hbWU7cmV0dXJuIGU9T2JqZWN0KGYudykoZSksKFwic3JjXCI9PT1ufHxcImhyZWZcIj09PW4pJiYhT2JqZWN0KGYudGIpKGUsXCJkYXRhXCIpJiYoZT1yZShlKSksXCJzdHlsZVwiPT09biYmKGU9WHQoZSkpLHtuYW1lOm4sdmFsdWU6ZX19KSl9O3ZhciBadD1bXCJzY3JpcHRcIixcInN0eWxlXCIsXCJtZXRhXCIsXCJ0aXRsZVwiLFwibGlua1wiLFwiaGVhZFwiXSx0ZT1mdW5jdGlvbih0KXtyZXR1cm4gWnQuaW5kZXhPZih0LnRvTG93ZXJDYXNlKCkpPi0xfTtmdW5jdGlvbiBlZSh0LGUsbil7dmFyIGk9YXJndW1lbnRzLmxlbmd0aD4zJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10mJmFyZ3VtZW50c1szXTtpZihPYmplY3QoZi5LKSh0KSYmT2JqZWN0KGYuTikobikmJk9iamVjdChmLkgpKGkpKXt2YXIgcj10LmVydWRhRXZlbnRzPXQuZXJ1ZGFFdmVudHN8fHt9O3JbZV09cltlXXx8W10scltlXS5wdXNoKHtsaXN0ZW5lcjpuLGxpc3RlbmVyU3RyOm4udG9TdHJpbmcoKSx1c2VDYXB0dXJlOml9KX19ZnVuY3Rpb24gbmUodCxlLG4pe3ZhciBpPWFyZ3VtZW50cy5sZW5ndGg+MyYmdm9pZCAwIT09YXJndW1lbnRzWzNdJiZhcmd1bWVudHNbM107aWYoT2JqZWN0KGYuSykodCkmJk9iamVjdChmLk4pKG4pJiZPYmplY3QoZi5IKShpKSl7dmFyIHI9dC5lcnVkYUV2ZW50cztpZihyJiZyW2VdKXtmb3IodmFyIGE9cltlXSxvPTAscz1hLmxlbmd0aDtvPHM7bysrKWlmKGFbb10ubGlzdGVuZXI9PT1uKXthLnNwbGljZShvLDEpO2JyZWFrfTA9PT1hLmxlbmd0aCYmZGVsZXRlIHJbZV0sMD09PU9iamVjdChmLmFiKShyKS5sZW5ndGgmJmRlbGV0ZSB0LmVydWRhRXZlbnRzfX19dmFyIGllPWZ1bmN0aW9uKCl7cmV0dXJuIE9iamVjdChmLnFiKSh3aW5kb3csXCJFdmVudFRhcmdldC5wcm90b3R5cGVcIil8fHdpbmRvdy5Ob2RlLnByb3RvdHlwZX0scmU9ZnVuY3Rpb24odCl7cmV0dXJuJzxhIGhyZWY9XCInLmNvbmNhdCh0LCdcIiB0YXJnZXQ9XCJfYmxhbmtcIj4nKS5jb25jYXQodCxcIjwvYT5cIil9O2Z1bmN0aW9uIGFlKHQsZSl7aWYoT2JqZWN0KGYuVCkodCkpcmV0dXJuIHQ7aWYoIU9iamVjdChmLlgpKHQpKXJldHVyblwi4oCSXCI7dmFyIG49T2JqZWN0KGYubmIpKHQpO3JldHVybiBPYmplY3QoZi5RKShuKT90OlwicG9zaXRpb25cIj09PWU/bjowPT09bj9cIuKAklwiOm59dmFyIG9lPW51bGwsc2U9W3tuYW1lOlwiQm9yZGVyIEFsbFwiLGZuOmZ1bmN0aW9uKCl7aWYob2UpcmV0dXJuIE4ucmVtb3ZlKG9lKSx2b2lkKG9lPW51bGwpO29lPU4oXCIqIHsgb3V0bGluZTogMnB4IGRhc2hlZCAjNzA3ZDhiOyBvdXRsaW5lLW9mZnNldDogLTNweDsgfVwiLGRvY3VtZW50LmhlYWQpfSxkZXNjOlwiQWRkIGNvbG9yIGJvcmRlcnMgdG8gYWxsIGVsZW1lbnRzXCJ9LHtuYW1lOlwiUmVmcmVzaCBQYWdlXCIsZm46ZnVuY3Rpb24oKXt2YXIgdD1uZXcgZi5oO3Quc2V0UXVlcnkoXCJ0aW1lc3RhbXBcIixPYmplY3QoZi5qYikoKSksd2luZG93LmxvY2F0aW9uLnJlcGxhY2UodC50b1N0cmluZygpKX0sZGVzYzpcIkFkZCB0aW1lc3RhbXAgdG8gdXJsIGFuZCByZWZyZXNoXCJ9LHtuYW1lOlwiU2VhcmNoIFRleHRcIixmbjpmdW5jdGlvbigpe3ZhciB0LGUsbixpPXByb21wdChcIkVudGVyIHRoZSB0ZXh0XCIpfHxcIlwiO1wiXCIhPT1PYmplY3QoZi5BYikoaSkmJih0PWksZT1kb2N1bWVudC5ib2R5LG49bmV3IFJlZ0V4cCh0LFwiaWdcIiksdWUoZSwoZnVuY3Rpb24odCl7dmFyIGU9T2JqZWN0KGYuYSkodCk7aWYoZS5oYXNDbGFzcyhcImVydWRhLXNlYXJjaC1oaWdobGlnaHQtYmxvY2tcIikpcmV0dXJuIGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGUudGV4dCgpKX0pKSx1ZShlLChmdW5jdGlvbih0KXtpZigzPT09dC5ub2RlVHlwZSl7dmFyIGU9dC5ub2RlVmFsdWU7aWYoKGU9ZS5yZXBsYWNlKG4sKGZ1bmN0aW9uKHQpe3JldHVybic8c3BhbiBjbGFzcz1cImVydWRhLWtleXdvcmRcIj4nLmNvbmNhdCh0LFwiPC9zcGFuPlwiKX0pKSkhPT10Lm5vZGVWYWx1ZSl7dmFyIGk9T2JqZWN0KGYuYSkoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSk7cmV0dXJuIGkuaHRtbChlKSxpLmFkZENsYXNzKFwiZXJ1ZGEtc2VhcmNoLWhpZ2hsaWdodC1ibG9ja1wiKSxpLmdldCgwKX19fSkpKX0sZGVzYzpcIkhpZ2hsaWdodCBnaXZlbiB0ZXh0IG9uIHBhZ2VcIn0se25hbWU6XCJFZGl0IFBhZ2VcIixmbjpmdW5jdGlvbigpe3ZhciB0PWRvY3VtZW50LmJvZHk7dC5jb250ZW50RWRpdGFibGU9XCJ0cnVlXCIhPT10LmNvbnRlbnRFZGl0YWJsZX0sZGVzYzpcIlRvZ2dsZSBib2R5IGNvbnRlbnRFZGl0YWJsZVwifSx7bmFtZTpcIkZpdCBTY3JlZW5cIixmbjpmdW5jdGlvbigpe3ZhciB0PWRvY3VtZW50LmJvZHksZT1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsbj1PYmplY3QoZi5hKSh0KTtpZihuLmRhdGEoXCJzY2FsZWRcIikpd2luZG93LnNjcm9sbFRvKDAsK24uZGF0YShcInNjYWxlZFwiKSksbi5ybUF0dHIoXCJkYXRhLXNjYWxlZFwiKSxuLmNzcyhcInRyYW5zZm9ybVwiLFwibm9uZVwiKTtlbHNle3ZhciBpPU1hdGgubWF4KHQuc2Nyb2xsSGVpZ2h0LHQub2Zmc2V0SGVpZ2h0LGUuY2xpZW50SGVpZ2h0LGUuc2Nyb2xsSGVpZ2h0LGUub2Zmc2V0SGVpZ2h0KSxyPU1hdGgubWF4KGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQsd2luZG93LmlubmVySGVpZ2h0fHwwKSxhPXIvaTtuLmNzcyhcInRyYW5zZm9ybVwiLFwic2NhbGUoXCIuY29uY2F0KGEsXCIpXCIpKSxuLmRhdGEoXCJzY2FsZWRcIix3aW5kb3cuc2Nyb2xsWSksd2luZG93LnNjcm9sbFRvKDAsaS8yLXIvMil9fSxkZXNjOlwiU2NhbGUgZG93biB0aGUgd2hvbGUgcGFnZSB0byBmaXQgc2NyZWVuXCJ9LHtuYW1lOlwiTG9hZCBGcHMgUGx1Z2luXCIsZm46ZnVuY3Rpb24oKXtsZShcImZwc1wiKX0sZGVzYzpcIkRpc3BsYXkgcGFnZSBmcHNcIn0se25hbWU6XCJMb2FkIEZlYXR1cmVzIFBsdWdpblwiLGZuOmZ1bmN0aW9uKCl7bGUoXCJmZWF0dXJlc1wiKX0sZGVzYzpcIkJyb3dzZXIgZmVhdHVyZSBkZXRlY3Rpb25zXCJ9LHtuYW1lOlwiTG9hZCBUaW1pbmcgUGx1Z2luXCIsZm46ZnVuY3Rpb24oKXtsZShcInRpbWluZ1wiKX0sZGVzYzpcIlNob3cgcGVyZm9ybWFuY2UgYW5kIHJlc291cmNlIHRpbWluZ1wifSx7bmFtZTpcIkxvYWQgTWVtb3J5IFBsdWdpblwiLGZuOmZ1bmN0aW9uKCl7bGUoXCJtZW1vcnlcIil9LGRlc2M6XCJEaXNwbGF5IG1lbW9yeVwifSx7bmFtZTpcIkxvYWQgQ29kZSBQbHVnaW5cIixmbjpmdW5jdGlvbigpe2xlKFwiY29kZVwiKX0sZGVzYzpcIkVkaXQgYW5kIHJ1biBKYXZhU2NyaXB0XCJ9LHtuYW1lOlwiTG9hZCBCZW5jaG1hcmsgUGx1Z2luXCIsZm46ZnVuY3Rpb24oKXtsZShcImJlbmNobWFya1wiKX0sZGVzYzpcIlJ1biBKYXZhU2NyaXB0IGJlbmNobWFya3NcIn0se25hbWU6XCJMb2FkIEdlb2xvY2F0aW9uIFBsdWdpblwiLGZuOmZ1bmN0aW9uKCl7bGUoXCJnZW9sb2NhdGlvblwiKX0sZGVzYzpcIlRlc3QgZ2VvbG9jYXRpb25cIn0se25hbWU6XCJMb2FkIERvbSBQbHVnaW5cIixmbjpmdW5jdGlvbigpe2xlKFwiZG9tXCIpfSxkZXNjOlwiTmF2aWdhdGUgZG9tIHRyZWVcIn0se25hbWU6XCJMb2FkIE9yaWVudGF0aW9uIFBsdWdpblwiLGZuOmZ1bmN0aW9uKCl7bGUoXCJvcmllbnRhdGlvblwiKX0sZGVzYzpcIlRlc3Qgb3JpZW50YXRpb24gYXBpXCJ9LHtuYW1lOlwiTG9hZCBUb3VjaGVzIFBsdWdpblwiLGZuOmZ1bmN0aW9uKCl7bGUoXCJ0b3VjaGVzXCIpfSxkZXNjOlwiVmlzdWFsaXplIHNjcmVlbiB0b3VjaGVzXCJ9LHtuYW1lOlwiUmVzdG9yZSBTZXR0aW5nc1wiLGZuOmZ1bmN0aW9uKCl7dmFyIHQ9T2JqZWN0KGYucmIpKFwibG9jYWxcIiksZT1KU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHQpKTtPYmplY3QoZi51KShlLChmdW5jdGlvbihlLG4pe09iamVjdChmLlgpKGUpJiZPYmplY3QoZi50YikobixcImVydWRhXCIpJiZ0LnJlbW92ZUl0ZW0obil9KSksd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpfSxkZXNjOlwiUmVzdG9yZSBkZWZhdWx0cyBhbmQgcmVsb2FkXCJ9XTtmdW5jdGlvbiB1ZSh0LGUpe3ZhciBuPXQuY2hpbGROb2RlcztpZighVXQodCkpe2Zvcih2YXIgaT0wLHI9bi5sZW5ndGg7aTxyO2krKyl7dmFyIGE9dWUobltpXSxlKTthJiZ0LnJlcGxhY2VDaGlsZChhLG5baV0pfXJldHVybiBlKHQpfX1mdW5jdGlvbiBsZSh0KXt2YXIgZT1cImVydWRhXCIrT2JqZWN0KGYuRWIpKHQpO2lmKCF3aW5kb3dbZV0pe3ZhciBuPWxvY2F0aW9uLnByb3RvY29sO09iamVjdChmLnRiKShuLFwiaHR0cFwiKXx8KG49XCJodHRwOlwiKSxPYmplY3QoZi5kYikoXCJcIi5jb25jYXQobixcIi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vZXJ1ZGEtXCIpLmNvbmNhdCh0LFwiQFwiKS5jb25jYXQoY2VbdF0pLChmdW5jdGlvbihuKXtpZighbnx8IXdpbmRvd1tlXSlyZXR1cm4gQi5lcnJvcihcIkZhaWwgdG8gbG9hZCBwbHVnaW4gXCIrdCk7Zy5lbWl0KGcuQURELHdpbmRvd1tlXSksZy5lbWl0KGcuU0hPVyx0KX0pKX19TihuKDgxKSxkb2N1bWVudC5oZWFkKTt2YXIgY2U9e2ZwczpcIjIuMC4wXCIsZmVhdHVyZXM6XCIyLjAuMFwiLHRpbWluZzpcIjIuMC4wXCIsbWVtb3J5OlwiMi4wLjBcIixjb2RlOlwiMi4wLjBcIixiZW5jaG1hcms6XCIyLjAuMFwiLGdlb2xvY2F0aW9uOlwiMi4wLjBcIixkb206XCIyLjAuMFwiLG9yaWVudGF0aW9uOlwiMi4wLjBcIix0b3VjaGVzOlwiMi4wLjBcIn0sX2U9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3ZhciB0O3JldHVybiByKCkodGhpcyxlKSwodD11KCkodGhpcyxjKCkoZSkuY2FsbCh0aGlzKSkpLl9zdHlsZT1OKG4oODIpKSx0Lm5hbWU9XCJzbmlwcGV0c1wiLHQuX3NuaXBwZXRzPVtdLHQuX3RwbD1uKDgzKSx0fXJldHVybiBoKCkoZSx0KSxvKCkoZSxbe2tleTpcImluaXRcIix2YWx1ZTpmdW5jdGlvbih0KXtiKCkoYygpKGUucHJvdG90eXBlKSxcImluaXRcIix0aGlzKS5jYWxsKHRoaXMsdCksdGhpcy5fYmluZEV2ZW50KCksdGhpcy5fYWRkRGVmU25pcHBldHMoKX19LHtrZXk6XCJkZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXtiKCkoYygpKGUucHJvdG90eXBlKSxcImRlc3Ryb3lcIix0aGlzKS5jYWxsKHRoaXMpLE4ucmVtb3ZlKHRoaXMuX3N0eWxlKX19LHtrZXk6XCJhZGRcIix2YWx1ZTpmdW5jdGlvbih0LGUsbil7cmV0dXJuIHRoaXMuX3NuaXBwZXRzLnB1c2goe25hbWU6dCxmbjplLGRlc2M6bn0pLHRoaXMuX3JlbmRlcigpLHRoaXN9fSx7a2V5OlwicmVtb3ZlXCIsdmFsdWU6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMuX3NuaXBwZXRzLG49MCxpPWUubGVuZ3RoO248aTtuKyspZVtuXS5uYW1lPT09dCYmZS5zcGxpY2UobiwxKTtyZXR1cm4gdGhpcy5fcmVuZGVyKCksdGhpc319LHtrZXk6XCJydW5cIix2YWx1ZTpmdW5jdGlvbih0KXtmb3IodmFyIGU9dGhpcy5fc25pcHBldHMsbj0wLGk9ZS5sZW5ndGg7bjxpO24rKyllW25dLm5hbWU9PT10JiZ0aGlzLl9ydW4obik7cmV0dXJuIHRoaXN9fSx7a2V5OlwiY2xlYXJcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zbmlwcGV0cz1bXSx0aGlzLl9yZW5kZXIoKSx0aGlzfX0se2tleTpcIl9iaW5kRXZlbnRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5fJGVsLm9uKFwiY2xpY2tcIixcIi5lcnVkYS1ydW5cIiwoZnVuY3Rpb24oKXt2YXIgZT1PYmplY3QoZi5hKSh0aGlzKS5kYXRhKFwiaWR4XCIpO3QuX3J1bihlKX0pKX19LHtrZXk6XCJfcnVuXCIsdmFsdWU6ZnVuY3Rpb24odCl7dGhpcy5fc25pcHBldHNbdF0uZm4uY2FsbChudWxsKX19LHtrZXk6XCJfYWRkRGVmU25pcHBldHNcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7T2JqZWN0KGYudSkoc2UsKGZ1bmN0aW9uKGUpe3QuYWRkKGUubmFtZSxlLmZuLGUuZGVzYyl9KSl9fSx7a2V5OlwiX3JlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fcmVuZGVySHRtbCh0aGlzLl90cGwoe3NuaXBwZXRzOnRoaXMuX3NuaXBwZXRzfSkpfX0se2tleTpcIl9yZW5kZXJIdG1sXCIsdmFsdWU6ZnVuY3Rpb24odCl7dCE9PXRoaXMuX2xhc3RIdG1sJiYodGhpcy5fbGFzdEh0bWw9dCx0aGlzLl8kZWwuaHRtbCh0KSl9fV0pLGV9KHkpLGhlPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXt2YXIgdDtyZXR1cm4gcigpKHRoaXMsZSksKHQ9dSgpKHRoaXMsYygpKGUpLmNhbGwodGhpcykpKS5fc3R5bGU9TihuKDg0KSksdC5uYW1lPVwicmVzb3VyY2VzXCIsdC5fbG9jYWxTdG9yZURhdGE9W10sdC5fbG9jYWxTdG9yZVNlYXJjaEtleXdvcmQ9XCJcIix0Ll9oaWRlRXJ1ZGFTZXR0aW5nPSExLHQuX3Nlc3Npb25TdG9yZURhdGE9W10sdC5fc2Vzc2lvblN0b3JlU2VhcmNoS2V5d29yZD1cIlwiLHQuX2Nvb2tpZURhdGE9W10sdC5fY29va2llU2VhcmNoS2V5d29yZD1cIlwiLHQuX3NjcmlwdERhdGE9W10sdC5fc3R5bGVzaGVldERhdGE9W10sdC5faWZyYW1lRGF0YT1bXSx0Ll9pbWFnZURhdGE9W10sdC5fb2JzZXJ2ZUVsZW1lbnQ9ITAsdC5fdHBsPW4oODUpLHR9cmV0dXJuIGgoKShlLHQpLG8oKShlLFt7a2V5OlwiaW5pdFwiLHZhbHVlOmZ1bmN0aW9uKHQsbil7YigpKGMoKShlLnByb3RvdHlwZSksXCJpbml0XCIsdGhpcykuY2FsbCh0aGlzLHQpLHRoaXMuX2NvbnRhaW5lcj1uLHRoaXMucmVmcmVzaCgpLHRoaXMuX2JpbmRFdmVudCgpLHRoaXMuX2luaXRPYnNlcnZlcigpLHRoaXMuX2luaXRDZmcoKX19LHtrZXk6XCJyZWZyZXNoXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5yZWZyZXNoTG9jYWxTdG9yYWdlKCkucmVmcmVzaFNlc3Npb25TdG9yYWdlKCkucmVmcmVzaENvb2tpZSgpLnJlZnJlc2hTY3JpcHQoKS5yZWZyZXNoU3R5bGVzaGVldCgpLnJlZnJlc2hJZnJhbWUoKS5yZWZyZXNoSW1hZ2UoKS5fcmVuZGVyKCl9fSx7a2V5OlwiZGVzdHJveVwiLHZhbHVlOmZ1bmN0aW9uKCl7YigpKGMoKShlLnByb3RvdHlwZSksXCJkZXN0cm95XCIsdGhpcykuY2FsbCh0aGlzKSx0aGlzLl9kaXNhYmxlT2JzZXJ2ZXIoKSxOLnJlbW92ZSh0aGlzLl9zdHlsZSksdGhpcy5fcm1DZmcoKX19LHtrZXk6XCJyZWZyZXNoU2NyaXB0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD1bXTtyZXR1cm4gT2JqZWN0KGYuYSkoXCJzY3JpcHRcIikuZWFjaCgoZnVuY3Rpb24oKXt2YXIgZT10aGlzLnNyYztcIlwiIT09ZSYmdC5wdXNoKGUpfSkpLHQ9T2JqZWN0KGYuRGIpKHQpLHRoaXMuX3NjcmlwdERhdGE9dCx0aGlzfX0se2tleTpcInJlZnJlc2hTdHlsZXNoZWV0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD1bXTtyZXR1cm4gT2JqZWN0KGYuYSkoXCJsaW5rXCIpLmVhY2goKGZ1bmN0aW9uKCl7XCJzdHlsZXNoZWV0XCI9PT10aGlzLnJlbCYmdC5wdXNoKHRoaXMuaHJlZil9KSksdD1PYmplY3QoZi5EYikodCksdGhpcy5fc3R5bGVzaGVldERhdGE9dCx0aGlzfX0se2tleTpcInJlZnJlc2hJZnJhbWVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PVtdO3JldHVybiBPYmplY3QoZi5hKShcImlmcmFtZVwiKS5lYWNoKChmdW5jdGlvbigpe3ZhciBlPU9iamVjdChmLmEpKHRoaXMpLmF0dHIoXCJzcmNcIik7ZSYmdC5wdXNoKGUpfSkpLHQ9T2JqZWN0KGYuRGIpKHQpLHRoaXMuX2lmcmFtZURhdGE9dCx0aGlzfX0se2tleTpcInJlZnJlc2hMb2NhbFN0b3JhZ2VcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZWZyZXNoU3RvcmFnZShcImxvY2FsXCIpLHRoaXN9fSx7a2V5OlwicmVmcmVzaFNlc3Npb25TdG9yYWdlXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVmcmVzaFN0b3JhZ2UoXCJzZXNzaW9uXCIpLHRoaXN9fSx7a2V5OlwiX3JlZnJlc2hTdG9yYWdlXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPU9iamVjdChmLnJiKSh0LCExKTtpZihuKXt2YXIgaT1bXTtuPUpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkobikpLE9iamVjdChmLnUpKG4sKGZ1bmN0aW9uKHQsbil7T2JqZWN0KGYuWCkodCkmJihlLl9oaWRlRXJ1ZGFTZXR0aW5nJiYoT2JqZWN0KGYudGIpKG4sXCJlcnVkYVwiKXx8XCJhY3RpdmUtZXJ1ZGFcIj09PW4pfHxpLnB1c2goe2tleTpuLHZhbDpmZSh0LDIwMCl9KSl9KSksdGhpc1tcIl9cIit0K1wiU3RvcmVEYXRhXCJdPWl9fX0se2tleTpcInJlZnJlc2hDb29raWVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PVtdLGU9ZG9jdW1lbnQuY29va2llO3JldHVyblwiXCIhPT1PYmplY3QoZi5BYikoZSkmJk9iamVjdChmLnUpKGRvY3VtZW50LmNvb2tpZS5zcGxpdChcIjtcIiksKGZ1bmN0aW9uKGUpe2U9ZS5zcGxpdChcIj1cIik7dmFyIG49T2JqZWN0KGYuQWIpKGUuc2hpZnQoKSk7ZT1PYmplY3QoZi5wKShlLmpvaW4oXCI9XCIpKSx0LnB1c2goe2tleTpuLHZhbDplfSl9KSksdGhpcy5fY29va2llRGF0YT10LHRoaXN9fSx7a2V5OlwicmVmcmVzaEltYWdlXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD1bXSxlPXRoaXMuX3BlcmZvcm1hbmNlPXdpbmRvdy53ZWJraXRQZXJmb3JtYW5jZXx8d2luZG93LnBlcmZvcm1hbmNlO2UmJmUuZ2V0RW50cmllcz90aGlzLl9wZXJmb3JtYW5jZS5nZXRFbnRyaWVzKCkuZm9yRWFjaCgoZnVuY3Rpb24oZSl7KFwiaW1nXCI9PT1lLmluaXRpYXRvclR5cGV8fGdlKGUubmFtZSkpJiZ0LnB1c2goZS5uYW1lKX0pKTpPYmplY3QoZi5hKShcImltZ1wiKS5lYWNoKChmdW5jdGlvbigpe3ZhciBlPU9iamVjdChmLmEpKHRoaXMpLG49ZS5hdHRyKFwic3JjXCIpO1widHJ1ZVwiIT09ZS5kYXRhKFwiZXhjbHVkZVwiKSYmdC5wdXNoKG4pfSkpO3JldHVybih0PU9iamVjdChmLkRiKSh0KSkuc29ydCgpLHRoaXMuX2ltYWdlRGF0YT10LHRoaXN9fSx7a2V5Olwic2hvd1wiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGIoKShjKCkoZS5wcm90b3R5cGUpLFwic2hvd1wiLHRoaXMpLmNhbGwodGhpcyksdGhpcy5fb2JzZXJ2ZUVsZW1lbnQmJnRoaXMuX2VuYWJsZU9ic2VydmVyKCksdGhpcy5yZWZyZXNoKCl9fSx7a2V5OlwiaGlkZVwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Rpc2FibGVPYnNlcnZlcigpLGIoKShjKCkoZS5wcm90b3R5cGUpLFwiaGlkZVwiLHRoaXMpLmNhbGwodGhpcyl9fSx7a2V5OlwiX2JpbmRFdmVudFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXRoaXMsbj10aGlzLl8kZWwsaT10aGlzLl9jb250YWluZXI7ZnVuY3Rpb24gcih0LGUpe3ZhciBuPWkuZ2V0KFwic291cmNlc1wiKTtpZihuKXJldHVybiBuLnNldCh0LGUpLGkuc2hvd1Rvb2woXCJzb3VyY2VzXCIpLCEwfWZ1bmN0aW9uIGEodCl7cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKGkuZ2V0KFwic291cmNlc1wiKSl7ZS5wcmV2ZW50RGVmYXVsdCgpO3ZhciBuPU9iamVjdChmLmEpKHRoaXMpLmF0dHIoXCJocmVmXCIpO1wiaWZyYW1lXCI9PT10fHxPYmplY3QoZi5JKShuKT9yKFwiaWZyYW1lXCIsbik6T2JqZWN0KGYuaSkoe3VybDpuLHN1Y2Nlc3M6ZnVuY3Rpb24oZSl7cih0LGUpfSxkYXRhVHlwZTpcInJhd1wifSl9fX1uLm9uKFwiY2xpY2tcIixcIi5lcnVkYS1yZWZyZXNoLWxvY2FsLXN0b3JhZ2VcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5yZWZyZXNoTG9jYWxTdG9yYWdlKCkuX3JlbmRlcigpfSkpLm9uKFwiY2xpY2tcIixcIi5lcnVkYS1yZWZyZXNoLXNlc3Npb24tc3RvcmFnZVwiLChmdW5jdGlvbigpe3JldHVybiB0LnJlZnJlc2hTZXNzaW9uU3RvcmFnZSgpLl9yZW5kZXIoKX0pKS5vbihcImNsaWNrXCIsXCIuZXJ1ZGEtcmVmcmVzaC1jb29raWVcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5yZWZyZXNoQ29va2llKCkuX3JlbmRlcigpfSkpLm9uKFwiY2xpY2tcIixcIi5lcnVkYS1yZWZyZXNoLXNjcmlwdFwiLChmdW5jdGlvbigpe3JldHVybiB0LnJlZnJlc2hTY3JpcHQoKS5fcmVuZGVyKCl9KSkub24oXCJjbGlja1wiLFwiLmVydWRhLXJlZnJlc2gtc3R5bGVzaGVldFwiLChmdW5jdGlvbigpe3JldHVybiB0LnJlZnJlc2hTdHlsZXNoZWV0KCkuX3JlbmRlcigpfSkpLm9uKFwiY2xpY2tcIixcIi5lcnVkYS1yZWZyZXNoLWlmcmFtZVwiLChmdW5jdGlvbigpe3JldHVybiB0LnJlZnJlc2hJZnJhbWUoKS5fcmVuZGVyKCl9KSkub24oXCJjbGlja1wiLFwiLmVydWRhLXJlZnJlc2gtaW1hZ2VcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5yZWZyZXNoSW1hZ2UoKS5fcmVuZGVyKCl9KSkub24oXCJjbGlja1wiLFwiLmVydWRhLXNlYXJjaFwiLChmdW5jdGlvbigpe3ZhciB0PU9iamVjdChmLmEpKHRoaXMpLmRhdGEoXCJ0eXBlXCIpLG49cHJvbXB0KFwiRmlsdGVyXCIpO2lmKCFPYmplY3QoZi5TKShuKSl7c3dpdGNoKG49T2JqZWN0KGYuQWIpKG4pLHQpe2Nhc2VcImxvY2FsXCI6ZS5fbG9jYWxTdG9yZVNlYXJjaEtleXdvcmQ9bjticmVhaztjYXNlXCJzZXNzaW9uXCI6ZS5fc2Vzc2lvblN0b3JlU2VhcmNoS2V5d29yZD1uO2JyZWFrO2Nhc2VcImNvb2tpZVwiOmUuX2Nvb2tpZVNlYXJjaEtleXdvcmQ9bn1lLl9yZW5kZXIoKX19KSkub24oXCJjbGlja1wiLFwiLmVydWRhLWRlbGV0ZS1zdG9yYWdlXCIsKGZ1bmN0aW9uKCl7dmFyIHQ9T2JqZWN0KGYuYSkodGhpcyksbj10LmRhdGEoXCJrZXlcIik7XCJsb2NhbFwiPT09dC5kYXRhKFwidHlwZVwiKT8obG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0obiksZS5yZWZyZXNoTG9jYWxTdG9yYWdlKCkuX3JlbmRlcigpKTooc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbShuKSxlLnJlZnJlc2hTZXNzaW9uU3RvcmFnZSgpLl9yZW5kZXIoKSl9KSkub24oXCJjbGlja1wiLFwiLmVydWRhLWRlbGV0ZS1jb29raWVcIiwoZnVuY3Rpb24oKXt2YXIgdD1PYmplY3QoZi5hKSh0aGlzKS5kYXRhKFwia2V5XCIpO09iamVjdChmLnBiKSh0KSxlLnJlZnJlc2hDb29raWUoKS5fcmVuZGVyKCl9KSkub24oXCJjbGlja1wiLFwiLmVydWRhLWNsZWFyLXN0b3JhZ2VcIiwoZnVuY3Rpb24oKXtcImxvY2FsXCI9PT1PYmplY3QoZi5hKSh0aGlzKS5kYXRhKFwidHlwZVwiKT8oT2JqZWN0KGYudSkoZS5fbG9jYWxTdG9yZURhdGEsKGZ1bmN0aW9uKHQpe3JldHVybiBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSh0LmtleSl9KSksZS5yZWZyZXNoTG9jYWxTdG9yYWdlKCkuX3JlbmRlcigpKTooT2JqZWN0KGYudSkoZS5fc2Vzc2lvblN0b3JlRGF0YSwoZnVuY3Rpb24odCl7cmV0dXJuIHNlc3Npb25TdG9yYWdlLnJlbW92ZUl0ZW0odC5rZXkpfSkpLGUucmVmcmVzaFNlc3Npb25TdG9yYWdlKCkuX3JlbmRlcigpKX0pKS5vbihcImNsaWNrXCIsXCIuZXJ1ZGEtY2xlYXItY29va2llXCIsKGZ1bmN0aW9uKCl7T2JqZWN0KGYudSkodC5fY29va2llRGF0YSwoZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdChmLnBiKSh0LmtleSl9KSksdC5yZWZyZXNoQ29va2llKCkuX3JlbmRlcigpfSkpLm9uKFwiY2xpY2tcIixcIi5lcnVkYS1zdG9yYWdlLXZhbFwiLChmdW5jdGlvbigpe3ZhciB0PU9iamVjdChmLmEpKHRoaXMpLGU9dC5kYXRhKFwia2V5XCIpLG49XCJsb2NhbFwiPT09dC5kYXRhKFwidHlwZVwiKT9sb2NhbFN0b3JhZ2UuZ2V0SXRlbShlKTpzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKGUpO3RyeXtyKFwib2JqZWN0XCIsSlNPTi5wYXJzZShuKSl9Y2F0Y2godCl7cihcInJhd1wiLG4pfX0pKS5vbihcImNsaWNrXCIsXCIuZXJ1ZGEtaW1nLWxpbmtcIiwoZnVuY3Rpb24oKXtyKFwiaW1nXCIsT2JqZWN0KGYuYSkodGhpcykuYXR0cihcInNyY1wiKSl9KSkub24oXCJjbGlja1wiLFwiLmVydWRhLWNzcy1saW5rXCIsYShcImNzc1wiKSkub24oXCJjbGlja1wiLFwiLmVydWRhLWpzLWxpbmtcIixhKFwianNcIikpLm9uKFwiY2xpY2tcIixcIi5lcnVkYS1pZnJhbWUtbGlua1wiLGEoXCJpZnJhbWVcIikpLGYua2Iub24oXCJjaGFuZ2VcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5fcmVuZGVyKCl9KSl9fSx7a2V5OlwiX3JtQ2ZnXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmNvbmZpZyxlPXRoaXMuX2NvbnRhaW5lci5nZXQoXCJzZXR0aW5nc1wiKTtlJiZlLnJlbW92ZSh0LFwiaGlkZUVydWRhU2V0dGluZ1wiKS5yZW1vdmUodCxcIm9ic2VydmVFbGVtZW50XCIpLnJlbW92ZShcIlJlc291cmNlc1wiKX19LHtrZXk6XCJfaW5pdENmZ1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXRoaXMuY29uZmlnPU0uY3JlYXRlQ2ZnKFwicmVzb3VyY2VzXCIse2hpZGVFcnVkYVNldHRpbmc6ITAsb2JzZXJ2ZUVsZW1lbnQ6ITB9KTtlLmdldChcImhpZGVFcnVkYVNldHRpbmdcIikmJih0aGlzLl9oaWRlRXJ1ZGFTZXR0aW5nPSEwKSxlLmdldChcIm9ic2VydmVFbGVtZW50XCIpfHwodGhpcy5fb2JzZXJ2ZUVsZW1lbnQ9ITEpLGUub24oXCJjaGFuZ2VcIiwoZnVuY3Rpb24oZSxuKXtzd2l0Y2goZSl7Y2FzZVwiaGlkZUVydWRhU2V0dGluZ1wiOnJldHVybiB2b2lkKHQuX2hpZGVFcnVkYVNldHRpbmc9bik7Y2FzZVwib2JzZXJ2ZUVsZW1lbnRcIjpyZXR1cm4gdC5fb2JzZXJ2ZUVsZW1lbnQ9bixuP3QuX2VuYWJsZU9ic2VydmVyKCk6dC5fZGlzYWJsZU9ic2VydmVyKCl9fSkpLHRoaXMuX2NvbnRhaW5lci5nZXQoXCJzZXR0aW5nc1wiKS50ZXh0KFwiUmVzb3VyY2VzXCIpLnN3aXRjaChlLFwiaGlkZUVydWRhU2V0dGluZ1wiLFwiSGlkZSBFcnVkYSBTZXR0aW5nXCIpLnN3aXRjaChlLFwib2JzZXJ2ZUVsZW1lbnRcIixcIkF1dG8gUmVmcmVzaCBFbGVtZW50c1wiKS5zZXBhcmF0b3IoKX19LHtrZXk6XCJfcmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9jb29raWVEYXRhLGU9dGhpcy5fc2NyaXB0RGF0YSxuPXRoaXMuX3N0eWxlc2hlZXREYXRhLGk9dGhpcy5faW1hZ2VEYXRhLHI9dGhpcy5fbG9jYWxTdG9yZVNlYXJjaEtleXdvcmQsYT10aGlzLl9zZXNzaW9uU3RvcmVTZWFyY2hLZXl3b3JkLG89dGhpcy5fY29va2llU2VhcmNoS2V5d29yZDtmdW5jdGlvbiBzKHQsZSl7cmV0dXJuKGU9T2JqZWN0KGYuZWIpKGUpKT9PYmplY3QoZi5CKSh0LChmdW5jdGlvbih0KXt2YXIgbj10LmtleSxpPXQudmFsO3JldHVybiBPYmplY3QoZi5tKShPYmplY3QoZi5lYikobiksZSl8fE9iamVjdChmLm0pKE9iamVjdChmLmViKShpKSxlKX0pKTp0fXRoaXMuX3JlbmRlckh0bWwodGhpcy5fdHBsKHtsb2NhbFN0b3JlRGF0YTpzKHRoaXMuX2xvY2FsU3RvcmVEYXRhLHIpLGxvY2FsU3RvcmVTZWFyY2hLZXl3b3JkOnIsc2Vzc2lvblN0b3JlRGF0YTpzKHRoaXMuX3Nlc3Npb25TdG9yZURhdGEsYSksc2Vzc2lvblN0b3JlU2VhcmNoS2V5d29yZDphLGNvb2tpZURhdGE6cyh0LG8pLGNvb2tpZVNlYXJjaEtleXdvcmQ6byxjb29raWVTdGF0ZTpwZShcImNvb2tpZVwiLHQubGVuZ3RoKSxzY3JpcHREYXRhOmUsc2NyaXB0U3RhdGU6cGUoXCJzY3JpcHRcIixlLmxlbmd0aCksc3R5bGVzaGVldERhdGE6bixzdHlsZXNoZWV0U3RhdGU6cGUoXCJzdHlsZXNoZWV0XCIsbi5sZW5ndGgpLGlmcmFtZURhdGE6dGhpcy5faWZyYW1lRGF0YSxpbWFnZURhdGE6aSxpbWFnZVN0YXRlOnBlKFwiaW1hZ2VcIixpLmxlbmd0aCl9KSl9fSx7a2V5OlwiX3JlbmRlckh0bWxcIix2YWx1ZTpmdW5jdGlvbih0KXt0IT09dGhpcy5fbGFzdEh0bWwmJih0aGlzLl9sYXN0SHRtbD10LHRoaXMuXyRlbC5odG1sKHQpKX19LHtrZXk6XCJfaW5pdE9ic2VydmVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuX29ic2VydmVyPW5ldyBmLmYoKGZ1bmN0aW9uKGUpe3ZhciBuPSExO09iamVjdChmLnUpKGUsKGZ1bmN0aW9uKGUpe3QuX2hhbmRsZU11dGF0aW9uKGUpJiYobj0hMCl9KSksbiYmdC5fcmVuZGVyKCl9KSl9fSx7a2V5OlwiX2hhbmRsZU11dGF0aW9uXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztpZighVXQodC50YXJnZXQpKXt2YXIgbj1mdW5jdGlvbih0KXtzd2l0Y2goZnVuY3Rpb24odCl7cmV0dXJuIHQudGFnTmFtZT90LnRhZ05hbWUudG9Mb3dlckNhc2UoKTpcIlwifSh0KSl7Y2FzZVwic2NyaXB0XCI6cmV0dXJuIGUucmVmcmVzaFNjcmlwdCgpLCEwO2Nhc2VcImltZ1wiOnJldHVybiBlLnJlZnJlc2hJbWFnZSgpLCEwO2Nhc2VcImxpbmtcIjpyZXR1cm4gZS5yZWZyZXNoU3R5bGVzaGVldCgpLCEwfXJldHVybiExfTtpZihcImF0dHJpYnV0ZXNcIj09PXQudHlwZSl7aWYobih0LnRhcmdldCkpcmV0dXJuITB9ZWxzZSBpZihcImNoaWxkTGlzdFwiPT09dC50eXBlKXtpZihuKHQudGFyZ2V0KSlyZXR1cm4hMDt2YXIgaT1PYmplY3QoZi53YikodC5hZGRlZE5vZGVzKTtpPU9iamVjdChmLmwpKGksT2JqZWN0KGYud2IpKHQucmVtb3ZlZE5vZGVzKSk7dmFyIHI9ITAsYT0hMSxvPXZvaWQgMDt0cnl7Zm9yKHZhciBzLHU9aVtTeW1ib2wuaXRlcmF0b3JdKCk7IShyPShzPXUubmV4dCgpKS5kb25lKTtyPSEwKXtpZihuKHMudmFsdWUpKXJldHVybiEwfX1jYXRjaCh0KXthPSEwLG89dH1maW5hbGx5e3RyeXtyfHxudWxsPT11LnJldHVybnx8dS5yZXR1cm4oKX1maW5hbGx5e2lmKGEpdGhyb3cgb319fXJldHVybiExfX19LHtrZXk6XCJfZW5hYmxlT2JzZXJ2ZXJcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX29ic2VydmVyLm9ic2VydmUoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHthdHRyaWJ1dGVzOiEwLGNoaWxkTGlzdDohMCxzdWJ0cmVlOiEwfSl9fSx7a2V5OlwiX2Rpc2FibGVPYnNlcnZlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fb2JzZXJ2ZXIuZGlzY29ubmVjdCgpfX1dKSxlfSh5KTtmdW5jdGlvbiBwZSh0LGUpe2lmKDA9PT1lKXJldHVyblwiXCI7dmFyIG49MCxpPTA7c3dpdGNoKHQpe2Nhc2VcImNvb2tpZVwiOm49MzAsaT02MDticmVhaztjYXNlXCJzY3JpcHRcIjpuPTUsaT0xMDticmVhaztjYXNlXCJzdHlsZXNoZWV0XCI6bj00LGk9ODticmVhaztjYXNlXCJpbWFnZVwiOm49NTAsaT0xMDB9cmV0dXJuIGU+PWk/XCJkYW5nZXJcIjplPj1uP1wid2FyblwiOlwib2tcIn12YXIgZGUsZmU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5sZW5ndGg8ZT90OnQuc2xpY2UoMCxlKStcIi4uLlwifSx2ZT0vXFwuKGpwZWd8anBnfGdpZnxwbmcpJC8sZ2U9ZnVuY3Rpb24odCl7cmV0dXJuIHZlLnRlc3QodCl9LG1lPU9iamVjdChmLnMpKCksYmU9W3tuYW1lOlwiTG9jYXRpb25cIix2YWw6ZnVuY3Rpb24oKXtyZXR1cm4gT2JqZWN0KGYudykobG9jYXRpb24uaHJlZil9fSx7bmFtZTpcIlVzZXIgQWdlbnRcIix2YWw6bmF2aWdhdG9yLnVzZXJBZ2VudH0se25hbWU6XCJEZXZpY2VcIix2YWw6W1wiPHRhYmxlPjx0Ym9keT5cIiwnPHRyPjx0ZCBjbGFzcz1cImVydWRhLWRldmljZS1rZXlcIj5zY3JlZW48L3RkPjx0ZD4nLmNvbmNhdChzY3JlZW4ud2lkdGgsXCIgKiBcIikuY29uY2F0KHNjcmVlbi5oZWlnaHQsXCI8L3RkPjwvdHI+XCIpLFwiPHRyPjx0ZD52aWV3cG9ydDwvdGQ+PHRkPlwiLmNvbmNhdCh3aW5kb3cuaW5uZXJXaWR0aCxcIiAqIFwiKS5jb25jYXQod2luZG93LmlubmVySGVpZ2h0LFwiPC90ZD48L3RyPlwiKSxcIjx0cj48dGQ+cGl4ZWwgcmF0aW88L3RkPjx0ZD5cIi5jb25jYXQod2luZG93LmRldmljZVBpeGVsUmF0aW8sXCI8L3RkPjwvdHI+XCIpLFwiPC90Ym9keT48L3RhYmxlPlwiXS5qb2luKFwiXCIpfSx7bmFtZTpcIlN5c3RlbVwiLHZhbDpbXCI8dGFibGU+PHRib2R5PlwiLCc8dHI+PHRkIGNsYXNzPVwiZXJ1ZGEtc3lzdGVtLWtleVwiPm9zPC90ZD48dGQ+Jy5jb25jYXQoT2JqZWN0KGYudCkoKSxcIjwvdGQ+PC90cj5cIiksXCI8dHI+PHRkPmJyb3dzZXI8L3RkPjx0ZD5cIi5jb25jYXQobWUubmFtZStcIiBcIittZS52ZXJzaW9uLFwiPC90ZD48L3RyPlwiKSxcIjwvdGJvZHk+PC90YWJsZT5cIl0uam9pbihcIlwiKX0se25hbWU6XCJBYm91dFwiLHZhbDonPGEgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS9saXJpbGlyaS9lcnVkYVwiIHRhcmdldD1cIl9ibGFua1wiPkVydWRhIHYyLjIuMTwvYT4nfV0seWU9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3ZhciB0O3JldHVybiByKCkodGhpcyxlKSwodD11KCkodGhpcyxjKCkoZSkuY2FsbCh0aGlzKSkpLl9zdHlsZT1OKG4oODYpKSx0Lm5hbWU9XCJpbmZvXCIsdC5fdHBsPW4oODcpLHQuX2luZm9zPVtdLHR9cmV0dXJuIGgoKShlLHQpLG8oKShlLFt7a2V5OlwiaW5pdFwiLHZhbHVlOmZ1bmN0aW9uKHQpe2IoKShjKCkoZS5wcm90b3R5cGUpLFwiaW5pdFwiLHRoaXMpLmNhbGwodGhpcyx0KSx0aGlzLl9hZGREZWZJbmZvKCl9fSx7a2V5OlwiZGVzdHJveVwiLHZhbHVlOmZ1bmN0aW9uKCl7YigpKGMoKShlLnByb3RvdHlwZSksXCJkZXN0cm95XCIsdGhpcykuY2FsbCh0aGlzKSxOLnJlbW92ZSh0aGlzLl9zdHlsZSl9fSx7a2V5OlwiYWRkXCIsdmFsdWU6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLl9pbmZvcyxpPSExO3JldHVybiBPYmplY3QoZi51KShuLChmdW5jdGlvbihuKXt0PT09bi5uYW1lJiYobi52YWw9ZSxpPSEwKX0pKSxpfHxuLnB1c2goe25hbWU6dCx2YWw6ZX0pLHRoaXMuX3JlbmRlcigpLHRoaXN9fSx7a2V5OlwiZ2V0XCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGUsbj10aGlzLl9pbmZvcztyZXR1cm4gT2JqZWN0KGYuWSkodCk/T2JqZWN0KGYuaykobik6KE9iamVjdChmLnUpKG4sKGZ1bmN0aW9uKG4pe3Q9PT1uLm5hbWUmJihlPW4udmFsKX0pKSxlKX19LHtrZXk6XCJyZW1vdmVcIix2YWx1ZTpmdW5jdGlvbih0KXtmb3IodmFyIGU9dGhpcy5faW5mb3Msbj1lLmxlbmd0aC0xO24+PTA7bi0tKWVbbl0ubmFtZT09PXQmJmUuc3BsaWNlKG4sMSk7cmV0dXJuIHRoaXMuX3JlbmRlcigpLHRoaXN9fSx7a2V5OlwiY2xlYXJcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9pbmZvcz1bXSx0aGlzLl9yZW5kZXIoKSx0aGlzfX0se2tleTpcIl9hZGREZWZJbmZvXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO09iamVjdChmLnUpKGJlLChmdW5jdGlvbihlKXtyZXR1cm4gdC5hZGQoZS5uYW1lLGUudmFsKX0pKX19LHtrZXk6XCJfcmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD1bXTtPYmplY3QoZi51KSh0aGlzLl9pbmZvcywoZnVuY3Rpb24oZSl7dmFyIG49ZS5uYW1lLGk9ZS52YWw7T2JqZWN0KGYuTikoaSkmJihpPWkoKSksdC5wdXNoKHtuYW1lOm4sdmFsOml9KX0pKSx0aGlzLl9yZW5kZXJIdG1sKHRoaXMuX3RwbCh7aW5mb3M6dH0pKX19LHtrZXk6XCJfcmVuZGVySHRtbFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3QhPT10aGlzLl9sYXN0SHRtbCYmKHRoaXMuX2xhc3RIdG1sPXQsdGhpcy5fJGVsLmh0bWwodCkpfX1dKSxlfSh5KSx3ZT1mdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7dmFyIHQ7cmV0dXJuIHIoKSh0aGlzLGUpLCh0PXUoKSh0aGlzLGMoKShlKS5jYWxsKHRoaXMpKSkuX3N0eWxlPU4obig4OCkpLHQubmFtZT1cInNvdXJjZXNcIix0Ll9zaG93TGluZU51bT0hMCx0Ll9mb3JtYXRDb2RlPSEwLHQuX2luZGVudFNpemU9NCx0Ll9sb2FkVHBsKCksdH1yZXR1cm4gaCgpKGUsdCksbygpKGUsW3trZXk6XCJpbml0XCIsdmFsdWU6ZnVuY3Rpb24odCxuKXtiKCkoYygpKGUucHJvdG90eXBlKSxcImluaXRcIix0aGlzKS5jYWxsKHRoaXMsdCksdGhpcy5fY29udGFpbmVyPW4sdGhpcy5fYmluZEV2ZW50KCksdGhpcy5faW5pdENmZygpfX0se2tleTpcImRlc3Ryb3lcIix2YWx1ZTpmdW5jdGlvbigpe2IoKShjKCkoZS5wcm90b3R5cGUpLFwiZGVzdHJveVwiLHRoaXMpLmNhbGwodGhpcyksTi5yZW1vdmUodGhpcy5fc3R5bGUpLHRoaXMuX3JtQ2ZnKCl9fSx7a2V5Olwic2V0XCIsdmFsdWU6ZnVuY3Rpb24odCxlKXtpZihcImltZ1wiPT09dCl7dGhpcy5faXNGZXRjaGluZ0RhdGE9ITA7dmFyIG49bmV3IEltYWdlLGk9dGhpcztyZXR1cm4gbi5vbmxvYWQ9ZnVuY3Rpb24oKXtpLl9pc0ZldGNoaW5nRGF0YT0hMSxpLl9kYXRhPXt0eXBlOlwiaW1nXCIsdmFsOnt3aWR0aDp0aGlzLndpZHRoLGhlaWdodDp0aGlzLmhlaWdodCxzcmM6ZX19LGkuX3JlbmRlcigpfSxuLm9uZXJyb3I9ZnVuY3Rpb24oKXtpLl9pc0ZldGNoaW5nRGF0YT0hMX0sdm9pZChuLnNyYz1lKX1yZXR1cm4gdGhpcy5fZGF0YT17dHlwZTp0LHZhbDplfSx0aGlzLl9yZW5kZXIoKSx0aGlzfX0se2tleTpcInNob3dcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiBiKCkoYygpKGUucHJvdG90eXBlKSxcInNob3dcIix0aGlzKS5jYWxsKHRoaXMpLHRoaXMuX2RhdGF8fHRoaXMuX2lzRmV0Y2hpbmdEYXRhfHx0aGlzLl9yZW5kZXJEZWYoKSx0aGlzfX0se2tleTpcIl9yZW5kZXJEZWZcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7aWYodGhpcy5faHRtbClyZXR1cm4gdGhpcy5fZGF0YT17dHlwZTpcImh0bWxcIix2YWw6dGhpcy5faHRtbH0sdGhpcy5fcmVuZGVyKCk7dGhpcy5faXNHZXR0aW5nSHRtbHx8KHRoaXMuX2lzR2V0dGluZ0h0bWw9ITAsT2JqZWN0KGYuaSkoe3VybDpsb2NhdGlvbi5ocmVmLHN1Y2Nlc3M6ZnVuY3Rpb24oZSl7cmV0dXJuIHQuX2h0bWw9ZX0sZXJyb3I6ZnVuY3Rpb24oKXtyZXR1cm4gdC5faHRtbD1cIlNvcnJ5LCB1bmFibGUgdG8gZmV0Y2ggc291cmNlIGNvZGU6KFwifSxjb21wbGV0ZTpmdW5jdGlvbigpe3QuX2lzR2V0dGluZ0h0bWw9ITEsdC5fcmVuZGVyRGVmKCl9LGRhdGFUeXBlOlwicmF3XCJ9KSl9fSx7a2V5OlwiX2JpbmRFdmVudFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLl9jb250YWluZXIub24oXCJzaG93VG9vbFwiLChmdW5jdGlvbihlLG4pe2UhPT10Lm5hbWUmJm4ubmFtZT09PXQubmFtZSYmZGVsZXRlIHQuX2RhdGF9KSl9fSx7a2V5OlwiX2xvYWRUcGxcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX2NvZGVUcGw9big4OSksdGhpcy5faW1nVHBsPW4oOTApLHRoaXMuX29ialRwbD1uKDkxKSx0aGlzLl9yYXdUcGw9big5MiksdGhpcy5faWZyYW1lVHBsPW4oOTMpfX0se2tleTpcIl9ybUNmZ1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5jb25maWcsZT10aGlzLl9jb250YWluZXIuZ2V0KFwic2V0dGluZ3NcIik7ZSYmZS5yZW1vdmUodCxcInNob3dMaW5lTnVtXCIpLnJlbW92ZSh0LFwiZm9ybWF0Q29kZVwiKS5yZW1vdmUodCxcImluZGVudFNpemVcIikucmVtb3ZlKFwiU291cmNlc1wiKX19LHtrZXk6XCJfaW5pdENmZ1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXRoaXMuY29uZmlnPU0uY3JlYXRlQ2ZnKFwic291cmNlc1wiLHtzaG93TGluZU51bTohMCxmb3JtYXRDb2RlOiEwLGluZGVudFNpemU6NH0pO2UuZ2V0KFwic2hvd0xpbmVOdW1cIil8fCh0aGlzLl9zaG93TGluZU51bT0hMSksZS5nZXQoXCJmb3JtYXRDb2RlXCIpfHwodGhpcy5fZm9ybWF0Q29kZT0hMSksdGhpcy5faW5kZW50U2l6ZT1lLmdldChcImluZGVudFNpemVcIiksZS5vbihcImNoYW5nZVwiLChmdW5jdGlvbihlLG4pe3N3aXRjaChlKXtjYXNlXCJzaG93TGluZU51bVwiOnJldHVybiB2b2lkKHQuX3Nob3dMaW5lTnVtPW4pO2Nhc2VcImZvcm1hdENvZGVcIjpyZXR1cm4gdm9pZCh0Ll9mb3JtYXRDb2RlPW4pO2Nhc2VcImluZGVudFNpemVcIjpyZXR1cm4gdm9pZCh0Ll9pbmRlbnRTaXplPStuKX19KSksdGhpcy5fY29udGFpbmVyLmdldChcInNldHRpbmdzXCIpLnRleHQoXCJTb3VyY2VzXCIpLnN3aXRjaChlLFwic2hvd0xpbmVOdW1cIixcIlNob3cgTGluZSBOdW1iZXJzXCIpLnN3aXRjaChlLFwiZm9ybWF0Q29kZVwiLFwiQmVhdXRpZnkgQ29kZVwiKS5zZWxlY3QoZSxcImluZGVudFNpemVcIixcIkluZGVudCBTaXplXCIsW1wiMlwiLFwiNFwiXSkuc2VwYXJhdG9yKCl9fSx7a2V5OlwiX3JlbmRlclwiLHZhbHVlOmZ1bmN0aW9uKCl7c3dpdGNoKHRoaXMuX2lzSW5pdD0hMCx0aGlzLl9kYXRhLnR5cGUpe2Nhc2VcImh0bWxcIjpjYXNlXCJqc1wiOmNhc2VcImNzc1wiOnJldHVybiB0aGlzLl9yZW5kZXJDb2RlKCk7Y2FzZVwiaW1nXCI6cmV0dXJuIHRoaXMuX3JlbmRlckltZygpO2Nhc2VcIm9iamVjdFwiOnJldHVybiB0aGlzLl9yZW5kZXJPYmooKTtjYXNlXCJyYXdcIjpyZXR1cm4gdGhpcy5fcmVuZGVyUmF3KCk7Y2FzZVwiaWZyYW1lXCI6cmV0dXJuIHRoaXMuX3JlbmRlcklmcmFtZSgpfX19LHtrZXk6XCJfcmVuZGVySW1nXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl9yZW5kZXJIdG1sKHRoaXMuX2ltZ1RwbCh0aGlzLl9kYXRhLnZhbCkpfX0se2tleTpcIl9yZW5kZXJDb2RlXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9kYXRhLGU9dGhpcy5faW5kZW50U2l6ZSxuPXQudmFsLGk9dC52YWwubGVuZ3RoO2lmKGk8eGUmJnRoaXMuX2Zvcm1hdENvZGUpe3N3aXRjaCh0LnR5cGUpe2Nhc2VcImh0bWxcIjpuPVouYS5odG1sKG4se3VuZm9ybWF0dGVkOltdLGluZGVudF9zaXplOmV9KTticmVhaztjYXNlXCJjc3NcIjpuPVouYS5jc3Mobix7aW5kZW50X3NpemU6ZX0pO2JyZWFrO2Nhc2VcImpzXCI6bj1aKCkobix7aW5kZW50X3NpemU6ZX0pfXZhciByPU4uZ2V0Q3VyVGhlbWUoKTtuPU9iamVjdChmLkYpKG4sdC50eXBlLHtrZXl3b3JkOlwiY29sb3I6XCIuY29uY2F0KHIua2V5d29yZENvbG9yKSxudW1iZXI6XCJjb2xvcjpcIi5jb25jYXQoci5udW1iZXJDb2xvciksb3BlcmF0b3I6XCJjb2xvcjpcIi5jb25jYXQoci5vcGVyYXRvckNvbG9yKSxjb21tZW50OlwiY29sb3I6XCIuY29uY2F0KHIuY29tbWVudENvbG9yKSxzdHJpbmc6XCJjb2xvcjpcIi5jb25jYXQoci5zdHJpbmdDb2xvcil9KX1lbHNlIG49T2JqZWN0KGYudykobik7aTxrZSYmdGhpcy5fc2hvd0xpbmVOdW0mJihuPW4uc3BsaXQoXCJcXG5cIikubWFwKChmdW5jdGlvbih0LGUpe3JldHVyblwiXCI9PT1PYmplY3QoZi5BYikodCkmJih0PVwiJm5ic3A7XCIpLHtpZHg6ZSsxLHZhbDp0fX0pKSksdGhpcy5fcmVuZGVySHRtbCh0aGlzLl9jb2RlVHBsKHtjb2RlOm4sc2hvd0xpbmVOdW06aTxrZSYmdGhpcy5fc2hvd0xpbmVOdW19KSl9fSx7a2V5OlwiX3JlbmRlck9ialwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fcmVuZGVySHRtbCh0aGlzLl9vYmpUcGwoKSwhMSk7dmFyIHQ9dGhpcy5fZGF0YS52YWw7dHJ5e09iamVjdChmLlgpKHQpJiYodD1KU09OLnBhcnNlKHQpKX1jYXRjaCh0KXt9bmV3IGV0LmEodGhpcy5fJGVsLmZpbmQoXCIuZXJ1ZGEtanNvblwiKS5nZXQoMCkse3VuZW51bWVyYWJsZTohMCxhY2Nlc3NHZXR0ZXI6ITB9KS5zZXQodCl9fSx7a2V5OlwiX3JlbmRlclJhd1wiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fcmVuZGVySHRtbCh0aGlzLl9yYXdUcGwoe3ZhbDp0aGlzLl9kYXRhLnZhbH0pKX19LHtrZXk6XCJfcmVuZGVySWZyYW1lXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl9yZW5kZXJIdG1sKHRoaXMuX2lmcmFtZVRwbCh7c3JjOnRoaXMuX2RhdGEudmFsfSkpfX0se2tleTpcIl9yZW5kZXJIdG1sXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPSEoYXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0pfHxhcmd1bWVudHNbMV07biYmdD09PXRoaXMuX2xhc3RIdG1sfHwodGhpcy5fbGFzdEh0bWw9dCx0aGlzLl8kZWwuaHRtbCh0KSxzZXRUaW1lb3V0KChmdW5jdGlvbigpe3JldHVybiBlLl8kZWwuZ2V0KDApLnNjcm9sbFRvcD0wfSksMCkpfX1dKSxlfSh5KSx4ZT0xZTUsa2U9NGU1O2UuZGVmYXVsdD17aW5pdDpmdW5jdGlvbigpe3ZhciB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSxlPXQuY29udGFpbmVyLG49dC50b29sLGk9dC5hdXRvU2NhbGUscj12b2lkIDA9PT1pfHxpLGE9dC51c2VTaGFkb3dEb20sbz12b2lkIDA9PT1hfHxhO3RoaXMuX2lzSW5pdHx8KHRoaXMuX2lzSW5pdD0hMCx0aGlzLl9zY2FsZT0xLHRoaXMuX2luaXRDb250YWluZXIoZSxvKSx0aGlzLl9pbml0U3R5bGUoKSx0aGlzLl9pbml0RGV2VG9vbHMoKSx0aGlzLl9pbml0RW50cnlCdG4oKSx0aGlzLl9pbml0U2V0dGluZ3MoKSx0aGlzLl9pbml0VG9vbHMobiksdGhpcy5fcmVnaXN0ZXJMaXN0ZW5lcigpLHImJnRoaXMuX2F1dG9TY2FsZSgpKX0sX2lzSW5pdDohMSx2ZXJzaW9uOlwiMi4yLjFcIix1dGlsOmYucSxUb29sOnksQ29uc29sZTprdCxFbGVtZW50czpxdCxOZXR3b3JrOkx0LFNvdXJjZXM6d2UsUmVzb3VyY2VzOmhlLEluZm86eWUsU25pcHBldHM6X2UsU2V0dGluZ3M6TSxnZXQ6ZnVuY3Rpb24odCl7aWYodGhpcy5fY2hlY2tJbml0KCkpe2lmKFwiZW50cnlCdG5cIj09PXQpcmV0dXJuIHRoaXMuX2VudHJ5QnRuO3ZhciBlPXRoaXMuX2RldlRvb2xzO3JldHVybiB0P2UuZ2V0KHQpOmV9fSxhZGQ6ZnVuY3Rpb24odCl7aWYodGhpcy5fY2hlY2tJbml0KCkpcmV0dXJuIE9iamVjdChmLk4pKHQpJiYodD10KHRoaXMpKSx0aGlzLl9kZXZUb29scy5hZGQodCksdGhpc30scmVtb3ZlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9kZXZUb29scy5yZW1vdmUodCksdGhpc30sc2hvdzpmdW5jdGlvbih0KXtpZih0aGlzLl9jaGVja0luaXQoKSl7dmFyIGU9dGhpcy5fZGV2VG9vbHM7cmV0dXJuIHQ/ZS5zaG93VG9vbCh0KTplLnNob3coKSx0aGlzfX0saGlkZTpmdW5jdGlvbigpe2lmKHRoaXMuX2NoZWNrSW5pdCgpKXJldHVybiB0aGlzLl9kZXZUb29scy5oaWRlKCksdGhpc30sZGVzdHJveTpmdW5jdGlvbigpe3RoaXMuX2RldlRvb2xzLmRlc3Ryb3koKSxkZWxldGUgdGhpcy5fZGV2VG9vbHMsdGhpcy5fZW50cnlCdG4uZGVzdHJveSgpLGRlbGV0ZSB0aGlzLl9lbnRyeUJ0bix0aGlzLl91bnJlZ2lzdGVyTGlzdGVuZXIoKSx0aGlzLl8kZWwucmVtb3ZlKCksTi5jbGVhcigpLHRoaXMuX2lzSW5pdD0hMX0sc2NhbGU6ZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdChmLlQpKHQpPyh0aGlzLl9zY2FsZT10LGcuZW1pdChnLlNDQUxFLHQpLHRoaXMpOnRoaXMuX3NjYWxlfSxwb3NpdGlvbjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9lbnRyeUJ0bjtyZXR1cm4gT2JqZWN0KGYuVSkodCk/KGUuc2V0UG9zKHQpLHRoaXMpOmUuZ2V0UG9zKCl9LF9hdXRvU2NhbGU6ZnVuY3Rpb24oKXtPYmplY3QoZi5QKSgpJiZ0aGlzLnNjYWxlKDEvT2JqZWN0KGYuRmIpKCkpfSxfcmVnaXN0ZXJMaXN0ZW5lcjpmdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5fYWRkTGlzdGVuZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdC5hZGQuYXBwbHkodCxhcmd1bWVudHMpfSx0aGlzLl9zaG93TGlzdGVuZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdC5zaG93LmFwcGx5KHQsYXJndW1lbnRzKX0sZy5vbihnLkFERCx0aGlzLl9hZGRMaXN0ZW5lciksZy5vbihnLlNIT1csdGhpcy5fc2hvd0xpc3RlbmVyKSxnLm9uKGcuU0NBTEUsTi5zZXRTY2FsZSl9LF91bnJlZ2lzdGVyTGlzdGVuZXI6ZnVuY3Rpb24oKXtnLm9mZihnLkFERCx0aGlzLl9hZGRMaXN0ZW5lciksZy5vZmYoZy5TSE9XLHRoaXMuX3Nob3dMaXN0ZW5lciksZy5vZmYoZy5TQ0FMRSxOLnNldFNjYWxlKX0sX2NoZWNrSW5pdDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9pc0luaXR8fEIuZXJyb3IoJ1BsZWFzZSBjYWxsIFwiZXJ1ZGEuaW5pdCgpXCIgZmlyc3QnKSx0aGlzLl9pc0luaXR9LF9pbml0Q29udGFpbmVyOmZ1bmN0aW9uKHQsZSl7dmFyIGk7dHx8KHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuYXBwZW5kQ2hpbGQodCksdC5zdHlsZS5hbGw9XCJpbml0aWFsXCIpLGUmJih0LmF0dGFjaFNoYWRvdz9pPXQuYXR0YWNoU2hhZG93KHttb2RlOlwib3BlblwifSk6dC5jcmVhdGVTaGFkb3dSb290JiYoaT10LmNyZWF0ZVNoYWRvd1Jvb3QoKSksaSYmKE4uY29udGFpbmVyPWRvY3VtZW50LmhlYWQsTihuKDI2KSksdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGkuYXBwZW5kQ2hpbGQodCksdGhpcy5fc2hhZG93Um9vdD1pKSksT2JqZWN0LmFzc2lnbih0LHtpZDpcImVydWRhXCIsY2xhc3NOYW1lOlwiZXJ1ZGEtY29udGFpbmVyXCIsY29udGVudEVkaXRhYmxlOiExfSksXCJpb3NcIj09PU9iamVjdChmLnMpKCkubmFtZSYmdC5zZXRBdHRyaWJ1dGUoXCJvbnRvdWNoc3RhcnRcIixcIlwiKSx0aGlzLl8kZWw9T2JqZWN0KGYuYSkodCl9LF9pbml0RGV2VG9vbHM6ZnVuY3Rpb24oKXt0aGlzLl9kZXZUb29scz1uZXcgSCh0aGlzLl8kZWwpfSxfaW5pdFN0eWxlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fJGVsO3RoaXMuX3NoYWRvd1Jvb3Q/KE4uY29udGFpbmVyPXRoaXMuX3NoYWRvd1Jvb3QsTihcIjpob3N0IHsgYWxsOiBpbml0aWFsIH1cIikpOih0LmFwcGVuZCgnPGRpdiBjbGFzcz1cIicuY29uY2F0KFwiZXJ1ZGEtc3R5bGUtY29udGFpbmVyXCIsJ1wiPjwvZGl2PicpKSxOLmNvbnRhaW5lcj10LmZpbmQoXCIuXCIuY29uY2F0KFwiZXJ1ZGEtc3R5bGUtY29udGFpbmVyXCIpKS5nZXQoMCkpLE4obig5NCkrbig5NSkrbig5NikrbigyNikpfSxfaW5pdEVudHJ5QnRuOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLl9lbnRyeUJ0bj1uZXcgeih0aGlzLl8kZWwpLHRoaXMuX2VudHJ5QnRuLm9uKFwiY2xpY2tcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5fZGV2VG9vbHMudG9nZ2xlKCl9KSl9LF9pbml0U2V0dGluZ3M6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9kZXZUb29scyxlPW5ldyBNO3QuYWRkKGUpLHRoaXMuX2VudHJ5QnRuLmluaXRDZmcoZSksdC5pbml0Q2ZnKGUpfSxfaW5pdFRvb2xzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTpbXCJjb25zb2xlXCIsXCJlbGVtZW50c1wiLFwibmV0d29ya1wiLFwicmVzb3VyY2VzXCIsXCJzb3VyY2VzXCIsXCJpbmZvXCIsXCJzbmlwcGV0c1wiXTtlPU9iamVjdChmLndiKShlKTt2YXIgbj10aGlzLl9kZXZUb29scztlLmZvckVhY2goKGZ1bmN0aW9uKGUpe3ZhciBpPXRbT2JqZWN0KGYuRWIpKGUpXTt0cnl7aSYmbi5hZGQobmV3IGkpfWNhdGNoKHQpe09iamVjdChmLmhiKSgoZnVuY3Rpb24oKXtCLmVycm9yKFwiU29tZXRoaW5nIHdyb25nIHdoZW4gaW5pdGlhbGl6aW5nIHRvb2wgXCIuY29uY2F0KGUsXCI6XCIpLHQubWVzc2FnZSl9KSl9fSkpLG4uc2hvd1Rvb2woZVswXXx8XCJzZXR0aW5nc1wiKX19O2RlPWYucSxPYmplY3QuYXNzaWduKGRlLHtiZWF1dGlmeTpaLmEsZXZhbENzczpOLGlzRXJ1ZGFFbDpVdH0pfV0pfSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJ1ZGEuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==