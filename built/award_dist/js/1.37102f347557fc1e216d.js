(window.webpackJsonp=window.webpackJsonp||[]).push([[1],[,,,,,,,,function(n,e,t){"use strict";t.r(e);var o=t(11);let{r_name:a,r_data:r,r_changeName:i,r_changeData:s}=t(12);var c={components:{test2:()=>t.e(2).then(t.bind(null,16))},mounted(){setTimeout(()=>{console.log(o.c,o.b)},1e3)},methods:{changeImportHandler(){console.log(o.c,"test_index",18),Object(o.a)("com1")},changeRequireHandler(){console.log(a,"test_index",32),console.log(r),i("com1"),s({id:"index",name:"index"})}}},d=(t(14),t(13)),u=Object(d.a)(c,(function(){var n=this.$createElement,e=this._self._c||n;return e("section",{staticClass:"test-wrapper"},[e("test2")],1)}),[],!1,null,"4efbe1d0",null);e.default=u.exports},function(n,e,t){},,function(n,e,t){"use strict";t.d(e,"b",(function(){return a})),t.d(e,"c",(function(){return o})),t.d(e,"a",(function(){return r}));let o="anna",a={id:Math.random()+"1",name:"anna"};function r(n){o=n}setTimeout(()=>{o="bolb",a.id=Math.random()+"2"},500)},function(n,e){let t="anna",o={name:t,id:"111"};n.exports={r_name:t,r_data:o,r_changeName:function(n){t=n},r_changeData:function(n){o=Object.assign(o,n)}},setTimeout(()=>{t="tony",o.id="222"},500)},function(n,e,t){"use strict";function o(n,e,t,o,a,r,i,s){var c,d="function"==typeof n?n.options:n;if(e&&(d.render=e,d.staticRenderFns=t,d._compiled=!0),o&&(d.functional=!0),r&&(d._scopeId="data-v-"+r),i?(c=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),a&&a.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(i)},d._ssrRegister=c):a&&(c=s?function(){a.call(this,this.$root.$options.shadowRoot)}:a),c)if(d.functional){d._injectStyles=c;var u=d.render;d.render=function(n,e){return c.call(e),u(n,e)}}else{var l=d.beforeCreate;d.beforeCreate=l?[].concat(l,c):[c]}return{exports:n,options:d}}t.d(e,"a",(function(){return o}))},function(n,e,t){"use strict";var o=t(9);t.n(o).a}]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdGVzdF9pbmRleC52dWU/MDk5NiIsIndlYnBhY2s6Ly8vLi9zcmMvdGVzdF9pbmRleC52dWU/N2ZkMCIsIndlYnBhY2s6Ly8vLi9zcmMvdGVzdF9pbmRleC52dWU/OTdjMSIsIndlYnBhY2s6Ly8vLi9zcmMvdGVzdF9pbmRleC52dWUiLCJ3ZWJwYWNrOi8vLy4vc3JjLzlfdGVzdC9tb2R1bGVfaW1wb3J0LmpzIiwid2VicGFjazovLy8uL3NyYy85X3Rlc3QvbW9kdWxlX3JlcXVpcmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvdGVzdF9pbmRleC52dWU/MWJiOCJdLCJuYW1lcyI6WyJyX25hbWUiLCJyX2RhdGEiLCJyX2NoYW5nZU5hbWUiLCJyX2NoYW5nZURhdGEiLCJjb21wb25lbnRzIiwidGVzdDIiLCJzZXRUaW1lb3V0IiwiY29uc29sZSIsImxvZyIsIm1ldGhvZHMiLCJpZCIsIm5hbWUiLCJjb21wb25lbnQiLCJfaCIsInRoaXMiLCIkY3JlYXRlRWxlbWVudCIsIl9jIiwiX3NlbGYiLCJzdGF0aWNDbGFzcyIsImRhdGEiLCJNYXRoIiwicmFuZG9tIiwiY2hhbmdlTmFtZSIsInBhcmFtIiwibW9kdWxlIiwiZXhwb3J0cyIsIk9iamVjdCIsImFzc2lnbiIsIm5vcm1hbGl6ZUNvbXBvbmVudCIsInNjcmlwdEV4cG9ydHMiLCJyZW5kZXIiLCJzdGF0aWNSZW5kZXJGbnMiLCJmdW5jdGlvbmFsVGVtcGxhdGUiLCJpbmplY3RTdHlsZXMiLCJzY29wZUlkIiwibW9kdWxlSWRlbnRpZmllciIsInNoYWRvd01vZGUiLCJob29rIiwib3B0aW9ucyIsIl9jb21waWxlZCIsImZ1bmN0aW9uYWwiLCJfc2NvcGVJZCIsImNvbnRleHQiLCIkdm5vZGUiLCJzc3JDb250ZXh0IiwicGFyZW50IiwiX19WVUVfU1NSX0NPTlRFWFRfXyIsImNhbGwiLCJfcmVnaXN0ZXJlZENvbXBvbmVudHMiLCJhZGQiLCJfc3NyUmVnaXN0ZXIiLCIkcm9vdCIsIiRvcHRpb25zIiwic2hhZG93Um9vdCIsIl9pbmplY3RTdHlsZXMiLCJvcmlnaW5hbFJlbmRlciIsImgiLCJleGlzdGluZyIsImJlZm9yZUNyZWF0ZSIsImNvbmNhdCJdLCJtYXBwaW5ncyI6InFHQUFBLEksUUNTQSxJQUFJLE9BQ0ZBLEVBQU0sT0FDTkMsRUFBTSxhQUNOQyxFQUFZLGFBQ1pDLEdBQ0UsRUFBUSxJQUVHLElDaEJxUixFRGdCclIsQ0FDYkMsV0FBWSxDQUNWQyxNQUFPLElBQU0sOEJBR2YsVUFFRUMsV0FBVyxLQUNUQyxRQUFRQyxJQUFJLElBQU0sTUFDakIsTUFHTEMsUUFBUyxDQUNQLHNCQUNFRixRQUFRQyxJQUFJLElBQU0sYUFBYyxJQUNoQyxZQUFXLFNBR2IsdUJBQ0VELFFBQVFDLElBQUlSLEVBQVEsYUFBYyxJQUNsQ08sUUFBUUMsSUFBSVAsR0FDWkMsRUFBYSxRQUNiQyxFQUFhLENBQ1hPLEdBQUksUUFDSkMsS0FBTSxhLGdCRWhDVkMsRUFBWSxZQUNkLEdIVFcsV0FBYSxJQUFpQkMsRUFBVEMsS0FBZ0JDLGVBQW1CQyxFQUFuQ0YsS0FBMENHLE1BQU1ELElBQUlILEVBQUcsT0FBT0csRUFBRyxVQUFVLENBQUNFLFlBQVksZ0JBQWdCLENBQUNGLEVBQUcsVUFBVSxLQUNsSSxJR1dwQixFQUNBLEtBQ0EsV0FDQSxNQUlhLFVBQUFKLEUseURDbkJmLDBHQUFJRCxFQUFPLE9BQ1BRLEVBQU8sQ0FDVFQsR0FBSVUsS0FBS0MsU0FBVyxJQUNwQlYsS0FBTSxRQUdSLFNBQVNXLEVBQVdDLEdBQ2xCWixFQUFPWSxFQVFUakIsV0FBVyxLQUNUSyxFQUFPLE9BQ1BRLEVBQUtULEdBQVFVLEtBQUtDLFNBQVIsS0FDVCxNLGNDbEJILElBQUlWLEVBQU8sT0FDUFEsRUFBTyxDQUNUUixLQUFNQSxFQUNORCxHQUFJLE9BV05jLEVBQU9DLFFBQVUsQ0FDZnpCLE9BQVFXLEVBQ1JWLE9BQVFrQixFQUNSakIsYUFYRixTQUFvQnFCLEdBQ2xCWixFQUFPWSxHQVdQcEIsYUFSRixTQUFvQm9CLEdBQ2xCSixFQUFPTyxPQUFPQyxPQUFPUixFQUFNSSxLQVM3QmpCLFdBQVcsS0FDVEssRUFBTyxPQUNQUSxFQUFLVCxHQUFLLE9BQ1QsTSw2QkNqQlksU0FBU2tCLEVBQ3RCQyxFQUNBQyxFQUNBQyxFQUNBQyxFQUNBQyxFQUNBQyxFQUNBQyxFQUNBQyxHQUdBLElBcUJJQyxFQXJCQUMsRUFBbUMsbUJBQWxCVCxFQUNqQkEsRUFBY1MsUUFDZFQsRUFpREosR0E5Q0lDLElBQ0ZRLEVBQVFSLE9BQVNBLEVBQ2pCUSxFQUFRUCxnQkFBa0JBLEVBQzFCTyxFQUFRQyxXQUFZLEdBSWxCUCxJQUNGTSxFQUFRRSxZQUFhLEdBSW5CTixJQUNGSSxFQUFRRyxTQUFXLFVBQVlQLEdBSTdCQyxHQUNGRSxFQUFPLFNBQVVLLElBRWZBLEVBQ0VBLEdBQ0M1QixLQUFLNkIsUUFBVTdCLEtBQUs2QixPQUFPQyxZQUMzQjlCLEtBQUsrQixRQUFVL0IsS0FBSytCLE9BQU9GLFFBQVU3QixLQUFLK0IsT0FBT0YsT0FBT0MsYUFFWixvQkFBeEJFLHNCQUNyQkosRUFBVUkscUJBR1JiLEdBQ0ZBLEVBQWFjLEtBQUtqQyxLQUFNNEIsR0FHdEJBLEdBQVdBLEVBQVFNLHVCQUNyQk4sRUFBUU0sc0JBQXNCQyxJQUFJZCxJQUt0Q0csRUFBUVksYUFBZWIsR0FDZEosSUFDVEksRUFBT0QsRUFDSCxXQUFjSCxFQUFhYyxLQUFLakMsS0FBTUEsS0FBS3FDLE1BQU1DLFNBQVNDLGFBQzFEcEIsR0FHRkksRUFDRixHQUFJQyxFQUFRRSxXQUFZLENBR3RCRixFQUFRZ0IsY0FBZ0JqQixFQUV4QixJQUFJa0IsRUFBaUJqQixFQUFRUixPQUM3QlEsRUFBUVIsT0FBUyxTQUFtQzBCLEVBQUdkLEdBRXJELE9BREFMLEVBQUtVLEtBQUtMLEdBQ0hhLEVBQWVDLEVBQUdkLFFBRXRCLENBRUwsSUFBSWUsRUFBV25CLEVBQVFvQixhQUN2QnBCLEVBQVFvQixhQUFlRCxFQUNuQixHQUFHRSxPQUFPRixFQUFVcEIsR0FDcEIsQ0FBQ0EsR0FJVCxNQUFPLENBQ0xaLFFBQVNJLEVBQ1RTLFFBQVNBLEdBMUZiLG1DLDZCQ0FBLGtCQUE0ZCIsImZpbGUiOiJhd2FyZF9kaXN0L2pzLzEuMzcxMDJmMzQ3NTU3ZmMxZTIxNmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnc2VjdGlvbicse3N0YXRpY0NsYXNzOlwidGVzdC13cmFwcGVyXCJ9LFtfYygndGVzdDInKV0sMSl9XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsIi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG5pbXBvcnQgeyBuYW1lLCBkYXRhLCBjaGFuZ2VOYW1lIH0gZnJvbSBcIi4vOV90ZXN0L21vZHVsZV9pbXBvcnQuanNcIjtcblxubGV0IHtcbiAgcl9uYW1lLFxuICByX2RhdGEsXG4gIHJfY2hhbmdlTmFtZSxcbiAgcl9jaGFuZ2VEYXRhXG59ID0gcmVxdWlyZShcIi4vOV90ZXN0L21vZHVsZV9yZXF1aXJlLmpzXCIpO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGNvbXBvbmVudHM6IHtcbiAgICB0ZXN0MjogKCkgPT4gaW1wb3J0KFwiLi90ZXN0X2NvbTIudnVlXCIpXG4gIH0sXG5cbiAgbW91bnRlZCgpIHtcbiAgICAvLyBjb25zb2xlLmxvZyhcInRlc3RfaW5kZXgudnVlIG1vdW50ZWRcIiwgOSk7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhuYW1lLCBkYXRhKTtcbiAgICB9LCAxMDAwKTtcbiAgfSxcblxuICBtZXRob2RzOiB7XG4gICAgY2hhbmdlSW1wb3J0SGFuZGxlcigpIHtcbiAgICAgIGNvbnNvbGUubG9nKG5hbWUsIFwidGVzdF9pbmRleFwiLCAxOCk7XG4gICAgICBjaGFuZ2VOYW1lKFwiY29tMVwiKTtcbiAgICB9LFxuXG4gICAgY2hhbmdlUmVxdWlyZUhhbmRsZXIoKSB7XG4gICAgICBjb25zb2xlLmxvZyhyX25hbWUsIFwidGVzdF9pbmRleFwiLCAzMik7XG4gICAgICBjb25zb2xlLmxvZyhyX2RhdGEpO1xuICAgICAgcl9jaGFuZ2VOYW1lKFwiY29tMVwiKTtcbiAgICAgIHJfY2hhbmdlRGF0YSh7XG4gICAgICAgIGlkOiBcImluZGV4XCIsXG4gICAgICAgIG5hbWU6IFwiaW5kZXhcIlxuICAgICAgfSk7XG4gICAgfVxuXG4gIH1cbn07IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi9ub2RlX21vZHVsZXMvd2VicGFjay1kaXN0cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMS0wIS4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uL25vZGVfbW9kdWxlcy93ZWJwYWNrLWRpc3RzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTAhLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi90ZXN0X2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi9ub2RlX21vZHVsZXMvd2VicGFjay1kaXN0cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMS0wIS4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uL25vZGVfbW9kdWxlcy93ZWJwYWNrLWRpc3RzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTAhLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi90ZXN0X2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vdGVzdF9pbmRleC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NGVmYmUxZDAmc2NvcGVkPXRydWUmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vdGVzdF9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL3Rlc3RfaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5pbXBvcnQgc3R5bGUwIGZyb20gXCIuL3Rlc3RfaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NGVmYmUxZDAmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCI0ZWZiZTFkMFwiLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsImxldCBuYW1lID0gJ2FubmEnO1xubGV0IGRhdGEgPSB7XG4gIGlkOiBNYXRoLnJhbmRvbSgpICsgJzEnLFxuICBuYW1lOiAnYW5uYSdcbn07XG5cbmZ1bmN0aW9uIGNoYW5nZU5hbWUocGFyYW0pIHtcbiAgbmFtZSA9IHBhcmFtO1xufVxuXG5mdW5jdGlvbiBjaGFuZ2VEYXRhKHBhcmFtKSB7XG4gIGRhdGEgPSBwYXJhbTtcbn1cblxuZXhwb3J0IHsgZGF0YSwgbmFtZSwgY2hhbmdlTmFtZSwgY2hhbmdlRGF0YSB9O1xuc2V0VGltZW91dCgoKSA9PiB7XG4gIG5hbWUgPSAnYm9sYic7XG4gIGRhdGEuaWQgPSBgJHtNYXRoLnJhbmRvbSgpfTJgO1xufSwgNTAwKTsiLCJsZXQgbmFtZSA9ICdhbm5hJztcbmxldCBkYXRhID0ge1xuICBuYW1lOiBuYW1lLFxuICBpZDogJzExMSdcbn07XG5cbmZ1bmN0aW9uIGNoYW5nZU5hbWUocGFyYW0pIHtcbiAgbmFtZSA9IHBhcmFtO1xufVxuXG5mdW5jdGlvbiBjaGFuZ2VEYXRhKHBhcmFtKSB7XG4gIGRhdGEgPSBPYmplY3QuYXNzaWduKGRhdGEsIHBhcmFtKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHJfbmFtZTogbmFtZSxcbiAgcl9kYXRhOiBkYXRhLFxuICByX2NoYW5nZU5hbWU6IGNoYW5nZU5hbWUsXG4gIHJfY2hhbmdlRGF0YTogY2hhbmdlRGF0YVxufTtcbnNldFRpbWVvdXQoKCkgPT4ge1xuICBuYW1lID0gJ3RvbnknO1xuICBkYXRhLmlkID0gJzIyMic7XG59LCA1MDApOyIsIi8qIGdsb2JhbHMgX19WVUVfU1NSX0NPTlRFWFRfXyAqL1xuXG4vLyBJTVBPUlRBTlQ6IERvIE5PVCB1c2UgRVMyMDE1IGZlYXR1cmVzIGluIHRoaXMgZmlsZSAoZXhjZXB0IGZvciBtb2R1bGVzKS5cbi8vIFRoaXMgbW9kdWxlIGlzIGEgcnVudGltZSB1dGlsaXR5IGZvciBjbGVhbmVyIGNvbXBvbmVudCBtb2R1bGUgb3V0cHV0IGFuZCB3aWxsXG4vLyBiZSBpbmNsdWRlZCBpbiB0aGUgZmluYWwgd2VicGFjayB1c2VyIGJ1bmRsZS5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbm9ybWFsaXplQ29tcG9uZW50IChcbiAgc2NyaXB0RXhwb3J0cyxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZ1bmN0aW9uYWxUZW1wbGF0ZSxcbiAgaW5qZWN0U3R5bGVzLFxuICBzY29wZUlkLFxuICBtb2R1bGVJZGVudGlmaWVyLCAvKiBzZXJ2ZXIgb25seSAqL1xuICBzaGFkb3dNb2RlIC8qIHZ1ZS1jbGkgb25seSAqL1xuKSB7XG4gIC8vIFZ1ZS5leHRlbmQgY29uc3RydWN0b3IgZXhwb3J0IGludGVyb3BcbiAgdmFyIG9wdGlvbnMgPSB0eXBlb2Ygc2NyaXB0RXhwb3J0cyA9PT0gJ2Z1bmN0aW9uJ1xuICAgID8gc2NyaXB0RXhwb3J0cy5vcHRpb25zXG4gICAgOiBzY3JpcHRFeHBvcnRzXG5cbiAgLy8gcmVuZGVyIGZ1bmN0aW9uc1xuICBpZiAocmVuZGVyKSB7XG4gICAgb3B0aW9ucy5yZW5kZXIgPSByZW5kZXJcbiAgICBvcHRpb25zLnN0YXRpY1JlbmRlckZucyA9IHN0YXRpY1JlbmRlckZuc1xuICAgIG9wdGlvbnMuX2NvbXBpbGVkID0gdHJ1ZVxuICB9XG5cbiAgLy8gZnVuY3Rpb25hbCB0ZW1wbGF0ZVxuICBpZiAoZnVuY3Rpb25hbFRlbXBsYXRlKSB7XG4gICAgb3B0aW9ucy5mdW5jdGlvbmFsID0gdHJ1ZVxuICB9XG5cbiAgLy8gc2NvcGVkSWRcbiAgaWYgKHNjb3BlSWQpIHtcbiAgICBvcHRpb25zLl9zY29wZUlkID0gJ2RhdGEtdi0nICsgc2NvcGVJZFxuICB9XG5cbiAgdmFyIGhvb2tcbiAgaWYgKG1vZHVsZUlkZW50aWZpZXIpIHsgLy8gc2VydmVyIGJ1aWxkXG4gICAgaG9vayA9IGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICAvLyAyLjMgaW5qZWN0aW9uXG4gICAgICBjb250ZXh0ID1cbiAgICAgICAgY29udGV4dCB8fCAvLyBjYWNoZWQgY2FsbFxuICAgICAgICAodGhpcy4kdm5vZGUgJiYgdGhpcy4kdm5vZGUuc3NyQ29udGV4dCkgfHwgLy8gc3RhdGVmdWxcbiAgICAgICAgKHRoaXMucGFyZW50ICYmIHRoaXMucGFyZW50LiR2bm9kZSAmJiB0aGlzLnBhcmVudC4kdm5vZGUuc3NyQ29udGV4dCkgLy8gZnVuY3Rpb25hbFxuICAgICAgLy8gMi4yIHdpdGggcnVuSW5OZXdDb250ZXh0OiB0cnVlXG4gICAgICBpZiAoIWNvbnRleHQgJiYgdHlwZW9mIF9fVlVFX1NTUl9DT05URVhUX18gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGNvbnRleHQgPSBfX1ZVRV9TU1JfQ09OVEVYVF9fXG4gICAgICB9XG4gICAgICAvLyBpbmplY3QgY29tcG9uZW50IHN0eWxlc1xuICAgICAgaWYgKGluamVjdFN0eWxlcykge1xuICAgICAgICBpbmplY3RTdHlsZXMuY2FsbCh0aGlzLCBjb250ZXh0KVxuICAgICAgfVxuICAgICAgLy8gcmVnaXN0ZXIgY29tcG9uZW50IG1vZHVsZSBpZGVudGlmaWVyIGZvciBhc3luYyBjaHVuayBpbmZlcnJlbmNlXG4gICAgICBpZiAoY29udGV4dCAmJiBjb250ZXh0Ll9yZWdpc3RlcmVkQ29tcG9uZW50cykge1xuICAgICAgICBjb250ZXh0Ll9yZWdpc3RlcmVkQ29tcG9uZW50cy5hZGQobW9kdWxlSWRlbnRpZmllcilcbiAgICAgIH1cbiAgICB9XG4gICAgLy8gdXNlZCBieSBzc3IgaW4gY2FzZSBjb21wb25lbnQgaXMgY2FjaGVkIGFuZCBiZWZvcmVDcmVhdGVcbiAgICAvLyBuZXZlciBnZXRzIGNhbGxlZFxuICAgIG9wdGlvbnMuX3NzclJlZ2lzdGVyID0gaG9va1xuICB9IGVsc2UgaWYgKGluamVjdFN0eWxlcykge1xuICAgIGhvb2sgPSBzaGFkb3dNb2RlXG4gICAgICA/IGZ1bmN0aW9uICgpIHsgaW5qZWN0U3R5bGVzLmNhbGwodGhpcywgdGhpcy4kcm9vdC4kb3B0aW9ucy5zaGFkb3dSb290KSB9XG4gICAgICA6IGluamVjdFN0eWxlc1xuICB9XG5cbiAgaWYgKGhvb2spIHtcbiAgICBpZiAob3B0aW9ucy5mdW5jdGlvbmFsKSB7XG4gICAgICAvLyBmb3IgdGVtcGxhdGUtb25seSBob3QtcmVsb2FkIGJlY2F1c2UgaW4gdGhhdCBjYXNlIHRoZSByZW5kZXIgZm4gZG9lc24ndFxuICAgICAgLy8gZ28gdGhyb3VnaCB0aGUgbm9ybWFsaXplclxuICAgICAgb3B0aW9ucy5faW5qZWN0U3R5bGVzID0gaG9va1xuICAgICAgLy8gcmVnaXN0ZXIgZm9yIGZ1bmN0aW9uYWwgY29tcG9uZW50IGluIHZ1ZSBmaWxlXG4gICAgICB2YXIgb3JpZ2luYWxSZW5kZXIgPSBvcHRpb25zLnJlbmRlclxuICAgICAgb3B0aW9ucy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXJXaXRoU3R5bGVJbmplY3Rpb24gKGgsIGNvbnRleHQpIHtcbiAgICAgICAgaG9vay5jYWxsKGNvbnRleHQpXG4gICAgICAgIHJldHVybiBvcmlnaW5hbFJlbmRlcihoLCBjb250ZXh0KVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBpbmplY3QgY29tcG9uZW50IHJlZ2lzdHJhdGlvbiBhcyBiZWZvcmVDcmVhdGUgaG9va1xuICAgICAgdmFyIGV4aXN0aW5nID0gb3B0aW9ucy5iZWZvcmVDcmVhdGVcbiAgICAgIG9wdGlvbnMuYmVmb3JlQ3JlYXRlID0gZXhpc3RpbmdcbiAgICAgICAgPyBbXS5jb25jYXQoZXhpc3RpbmcsIGhvb2spXG4gICAgICAgIDogW2hvb2tdXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBleHBvcnRzOiBzY3JpcHRFeHBvcnRzLFxuICAgIG9wdGlvbnM6IG9wdGlvbnNcbiAgfVxufVxuIiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9sb2FkZXIuanM/P3JlZi0tNC0wIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzIS4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi9ub2RlX21vZHVsZXMvd2VicGFjay1kaXN0cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0wIS4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vdGVzdF9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD00ZWZiZTFkMCZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvbG9hZGVyLmpzPz9yZWYtLTQtMCEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcyEuLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vbm9kZV9tb2R1bGVzL3dlYnBhY2stZGlzdHMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMCEuLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3Rlc3RfaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NGVmYmUxZDAmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiIl0sInNvdXJjZVJvb3QiOiIifQ==