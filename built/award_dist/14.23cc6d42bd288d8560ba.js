(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{113:function(t,e,a){"use strict";var i=a(34);a.n(i).a},142:function(t,e,a){"use strict";a.r(e);var i=a(17),n=a(3);const s="108.8371912900,34.2032353700",o=[610103,610104,610113];var r={components:{assess:()=>a.e(23).then(a.bind(null,145))},data:()=>({areaInfo:{},buildings:[],gardens:[],driveRoutes:[],tabs:[{key:"list",label:"所有房间",color:"rgba(43, 116, 215, 1)"},{key:"map",label:"地图查看",color:"rgba(254, 148, 73, 1)"},{key:"assess",label:"评价",color:"rgba(115, 163, 9, 1)"}],curTabKey:"assess",mapObj:null,pathObj:null}),async mounted(){document.title="高德",this._initPrevPage(),this._getBuildingInfo(),await this._initMapScript(),await this._initMapUi(),this._initGardens(),await this._initDriveRoute()},methods:{...Object(n.c)("estate",["setCurArea"]),_initPrevPage(){let t=this.$route.query.areaInfo;this.areaInfo=JSON.parse(t),console.log(this.areaInfo,15),this.setCurArea(this.areaInfo)},_getBuildingInfo(){i.a.get(`/xian/estateBuildings?areaId=${this.areaInfo.areaId}`).then(t=>{200===t.status&&(this.buildings=t.data,console.log(this.buildings,136))})},async _initMapScript(){return new Promise((t,e)=>{window.onLoad=async()=>(this._initMapContainer(),t());let a=document.createElement("script");a.charset="utf-8",a.src="https://webapi.amap.com/maps?v=1.4.15&key=17569efbd54a284b8bd0ce338ae71616&callback=onLoad",document.head.appendChild(a)})},_initMapContainer(){let t=this._initLocation(s),e=this._initLocation(this.areaInfo.location);this.mapObj=new AMap.Map("map-container",{zoom:11,center:[(Number(t[0])+Number(e[0]))/2,(Number(t[1])+Number(e[1]))/2],mapStyle:"amap://styles/light"})},async _initMapUi(){return new Promise((t,e)=>{let a=document.createElement("script");a.charset="utf-8",a.src="https://webapi.amap.com/ui/1.0/main.js?v=1.0.11",document.head.appendChild(a);let i=this;a.onload=()=>{AMapUI.loadUI(["overlay/SimpleMarker"],(function(e){return new e({iconTheme:"default",iconStyle:"orange",map:i.mapObj,position:i._initLocation(s),label:{content:"高新软件园",offset:new AMap.Pixel(-10,-20)}}),new e({iconTheme:"default",iconStyle:"orange",map:i.mapObj,position:i._initLocation(i.areaInfo.location),label:{content:i.areaInfo.label,offset:new AMap.Pixel(-10,-20)}}),t()}))}})},_testMarker(){},_initPathLns(){let t=this;AMapUI.load(["ui/misc/PathSimplifier","lib/$"],(function(e,a){let i=new e({zIndex:100,map:t.mapObj,getPath:(t,e)=>t.path,renderOptions:{renderAllPointsIfNumberBelow:100}});i.setData([{name:"路线0",path:[...t.driveRoutes]}]);i.createPathNavigator(0,{loop:!0,speed:5e3})}))},_initDistrict(){let t=this;AMapUI.load(["ui/geo/DistrictExplorer","lib/$"],(function(e){let a=new e({map:t.mapObj});var i=["#3366cc","#dc3912","#ff9900","#aa9900","#ff1901","#aa0101","red","green"];o.map((t,e)=>{a.loadAreaNode(t,(function(t,n){a.renderSubFeatures(n,(function(t,e){return console.log(t.properties.name,237),{cursor:"default",bubble:!0,strokeColor:"blue",strokeOpacity:1,strokeWeight:1,fillColor:"red",fillOpacity:.35}})),a.renderParentFeature(n,{cursor:"default",bubble:!0,strokeColor:null,strokeOpacity:1,strokeWeight:1,fillColor:i[e],fillOpacity:.35})}))})}))},_initGardens(){i.a.get(`/xian/aroundGarden?originLocation=${this.areaInfo.location}`).then(t=>{if(200===t.status&&(this.gardens=t.data,this.gardens&&this.gardens.length>0)){let t=this;AMapUI.loadUI(["overlay/SvgMarker"],(function(e){t.gardens.map((a,i)=>{var n=new e.Shape.Circle({height:16,strokeWidth:1,strokeColor:"#fff",fillColor:"#177261"});n.getCenter();new e(n,{map:t.mapObj,position:t._initLocation(a.location),containerClassNames:"shape-Circle",iconLabel:{innerHTML:i+1,style:{color:"#fff",fontSize:"12px"}}})})}))}})},_initDriveRoute(){i.a.get(`/xian/drivingRoute?originLocation=${this.areaInfo.location}&destination=${s}`).then(t=>{200===t.status&&t.data.steps&&t.data.steps.length>0&&(t.data.steps.forEach(t=>{if(t.polyline){this._formatPolyline(t.polyline);this.driveRoutes.push(...this._formatPolyline(t.polyline))}}),this._initPathLns())})},_initLocation:t=>t.split(","),_formatPolyline(t){return t.split(";").map(t=>{let e=this._initLocation(t);return[Number(e[0]),Number(e[1])]})},getAreaLabel(){if(this.areaInfo.label){return this.areaInfo.label.replace(/(&middot;|&ldquo;|&rdquo;)/g,"")}return this.areaInfo.label},changeTab(t){this.curTabKey=t.key,console.log(this.curTabKey,368)},backHandler(){this.$router.go(-1)}}},l=(a(113),a(5)),c=Object(l.a)(r,(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("section",{staticClass:"area-wrapper"},[a("section",{staticClass:"content"},[t.tabs&&t.tabs.length>0?a("section",{staticClass:"tabs"},t._l(t.tabs,(function(e){return a("section",{key:e.key,staticClass:"tabs-item",class:e.key,style:"background:"+e.color,on:{click:function(a){return t.changeTab(e)}}},[t._v(t._s(e.label))])})),0):t._e(),t._v(" "),t.buildings&&t.buildings.length>0&&"list"===t.curTabKey?a("section",{staticClass:"horz building-title"},[a("section",{staticClass:"name"},[t._v("房间号")]),t._v(" "),a("section",{staticClass:"space"},[t._v("面积")]),t._v(" "),a("section",{staticClass:"unit-price"},[t._v("单价(元)")]),t._v(" "),a("section",{staticClass:"total-price"},[t._v("总价(万元)")])]):t._e(),t._v(" "),t.buildings&&t.buildings.length>0&&"list"===t.curTabKey?a("section",{staticClass:"building-list"},t._l(t.buildings,(function(e,i){return a("section",{key:i,staticClass:"building-list-item horz"},[a("section",{staticClass:"name"},[t._v(t._s(e.buildingId))]),t._v(" "),a("section",{staticClass:"space"},[t._v(t._s(e.space))]),t._v(" "),a("section",{staticClass:"unit-price"},[t._v(t._s(e.unitPrice))]),t._v(" "),a("section",{staticClass:"total-price"},[t._v(t._s(Math.ceil(parseInt(e.totalPrice)/1e4)))])])})),0):t._e(),t._v(" "),a("section",{directives:[{name:"show",rawName:"v-show",value:"map"===t.curTabKey,expression:"curTabKey === 'map'"}],staticClass:"map-con"},[t.gardens&&t.gardens.length>0?a("section",{staticClass:"garden"},t._l(t.gardens,(function(e,i){return a("section",{key:i,staticClass:"garden-item"},[a("section",{staticClass:"garden-item-icon"},[t._v(t._s(i+1))]),t._v(" "),a("section",{staticClass:"garden-item-label"},[t._v(t._s(e.name)+",距离"+t._s(e.distance)+"米")])])})),0):t._e(),t._v(" "),a("section",{staticClass:"map-container",attrs:{id:"map-container"}})]),t._v(" "),a("section",{directives:[{name:"show",rawName:"v-show",value:"assess"===t.curTabKey,expression:"curTabKey === 'assess'"}],staticClass:"assess-con con"},[a("assess",{attrs:{assess:t.areaInfo.assess},on:{updateArea:function(e){return t.setCurArea(t.areaInfo)}}})],1)])])}),[],!1,null,"8495c4b2",null);e.default=c.exports},17:function(t,e,a){"use strict";var i=a(18);let n=a.n(i).a.create({timeout:3e4,headers:{}});e.a=n},34:function(t,e,a){var i=a(8),n=a(35);"string"==typeof(n=n.__esModule?n.default:n)&&(n=[[t.i,n,""]]);var s={insert:"head",singleton:!1},o=i(n,s),r=n.locals?n.locals:{};n.locals||t.hot.accept(35,(function(){var e=a(35);"string"==typeof(e=e.__esModule?e.default:e)&&(e=[[t.i,e,""]]),o(e)})),t.hot.dispose((function(){o()})),t.exports=r},35:function(t,e,a){(e=a(9)(!1)).push([t.i,"section[data-v-8495c4b2]{display:block;overflow:hidden;margin:0;padding:0;box-sizing:border-box}.area-wrapper[data-v-8495c4b2]{width:100%;height:100%;background:rgba(9,41,114,0.95);display:flex;flex-direction:column}.header[data-v-8495c4b2]{flex-shrink:1;position:relative;line-height:30px;padding:10px 40px;font-size:18px;font-weight:600;color:rgba(245,245,245,0.9);text-align:center}.header-icon[data-v-8495c4b2]{color:rgba(245,245,245,0.9);position:absolute;left:10px}.content[data-v-8495c4b2]{flex:1;display:flex;flex-direction:column;margin:0px 3px;border-radius:15px 15px 3px 3px;background:rgba(255,255,255,0.98)}.tabs[data-v-8495c4b2]{flex-shrink:1;display:flex;justify-content:space-around;padding:10px 10px 5px;color:rgba(255,255,255,0.8)}.tabs-item[data-v-8495c4b2]{padding:0px 10px;height:45px;line-height:45px;text-align:center;flex:1}.tabs .list[data-v-8495c4b2]{color:rgba(255,255,255,0.85)}.tabs section[data-v-8495c4b2]:first-child{border-radius:20px 0px 0px 20px}.tabs section[data-v-8495c4b2]:last-child{border-radius:0px 20px 20px 0px}.horz[data-v-8495c4b2]{display:flex;justify-content:space-between}.horz .name[data-v-8495c4b2],.horz .space[data-v-8495c4b2],.horz .unit-price[data-v-8495c4b2],.horz .total-price[data-v-8495c4b2]{flex:1;text-align:center}.building-title[data-v-8495c4b2]{padding:0px 10px;line-height:30px;border-top:1px #3f74b9 solid;border-bottom:1px #3f74b9 solid;background-color:#2b74d7;color:rgba(255,255,255,0.9)}.building-title .name[data-v-8495c4b2],.building-title .space[data-v-8495c4b2],.building-title .unit-price[data-v-8495c4b2]{border-right:1px rgba(63,116,185,0.8) solid}.building-list[data-v-8495c4b2]{flex:1;flex-shrink:1;overflow-y:scroll;padding-bottom:10px;background:rgba(255,255,255,0.9)}.building-list .building-list-item[data-v-8495c4b2]{padding:0px 10px;line-height:36px;border-bottom:1px rgba(43,116,215,0.4) solid}.building-list .building-list-item .name[data-v-8495c4b2],.building-list .building-list-item .space[data-v-8495c4b2],.building-list .building-list-item .unit-price[data-v-8495c4b2]{border-right:1px rgba(43,116,215,0.4) solid}.con[data-v-8495c4b2]{flex:1}.map-con[data-v-8495c4b2]{padding:0px 5px 5px;flex:1;display:flex;flex-direction:column}.garden[data-v-8495c4b2]{flex-shrink:1;font-size:14px;color:rgba(0,0,0,0.8);padding-bottom:10px;overflow-y:hidden}.garden-item[data-v-8495c4b2]{line-height:26px;display:flex}.garden-item-icon[data-v-8495c4b2]{width:20px;background:#177261;color:#fff;border-radius:50%;text-align:center;height:20px;line-height:20px;margin:3px 10px}.map-container[data-v-8495c4b2]{width:100%;flex:1;overflow:scroll;position:relative}.amap-markers[data-v-8495c4b2]{overflow:visible !important}\n",""]),t.exports=e}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,