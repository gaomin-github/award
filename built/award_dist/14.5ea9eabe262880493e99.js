(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{117:function(t,e,o){"use strict";o.r(e);var n=o(208),s=o.n(n),i={props:{jsUrl:{type:String,default:""}},data:()=>({remoteJsonUrl:"http://192.168.31.252:9080/lottie.json",remoteJsUrl:"http://192.168.31.252:9080/jsDemoA.js",jsonImgUrl:"./q4-bg.json",style:{height:""}}),mounted(){this._loadJsonImg()},methods:{_loadJsonImg(){let t=this;this.$refs.lottieCon;o(209)(""+this.jsUrl).then(e=>{this.style={height:`${e.h/2}px`},requestAnimationFrame(()=>{console.log(this.style,44),s.a.loadAnimation({container:t.$refs.lottieCon,renderer:"canvas",loop:!1,autoplay:!0,animationData:e,className:"canvas-default",rendererSettings:{}})})})},_loadRemoteJs(){let t=document.createElement("script");t.src=this.jsUrl,window.executeJson=t=>{console.log("executeJson",t,26)},document.getElementsByTagName("head")[0].append(t)},_loadRemoteJson(){o.e(0).then(o.t.bind(null,191,3)).then(t=>{s.a.loadAnimation({container:this.$refs.lottieCon,renderer:"svg",loop:!0,autoplay:!0,animationData:t,rendererSettings:{}});this.$emit("animCreated",this.animObj)})},_loadLocalJson(){}}},a=(o(210),o(5)),l=Object(a.a)(i,(function(){var t=this.$createElement;return(this._self._c||t)("section",{ref:"lottieCon",staticClass:"lottie-wrapper",style:this.style})}),[],!1,null,"693999c8",null);e.default=l.exports},209:function(t,e,o){var n={".":[70,9],"./":[70,9],"./demo":[191,3,0],"./demo.json":[191,3,0],"./index":[70,9],"./index.vue":[70,9],"./jsDemo":[192,7,3],"./jsDemo.js":[192,7,3],"./lottieComponent":[117,9],"./lottieComponent.vue":[117,9],"./q4-bg":[193,3,5],"./q4-bg.json":[193,3,5],"./q8-bg-3":[194,3,6],"./q8-bg-3.json":[194,3,6],"./q9-huawei-bg1":[195,3,7],"./q9-huawei-bg1.json":[195,3,7],"./q9-mi-new-bg1":[196,3,8],"./q9-mi-new-bg1.json":[196,3,8],"./q9-mi-new-bg2":[197,3,9],"./q9-mi-new-bg2.json":[197,3,9],"./q9-mi-old-bg1":[198,3,10],"./q9-mi-old-bg1.json":[198,3,10],"./q9-mi-old-bg2":[199,3,11],"./q9-mi-old-bg2.json":[199,3,11],"./q9-oneplus-bg1":[200,3,12],"./q9-oneplus-bg1.json":[200,3,12]};function s(t){if(!o.o(n,t))return Promise.resolve().then((function(){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}));var e=n[t],s=e[0];return Promise.all(e.slice(2).map(o.e)).then((function(){return o.t(s,e[1])}))}s.keys=function(){return Object.keys(n)},s.id=209,t.exports=s},210:function(t,e,o){"use strict";var n=o(75);o.n(n).a},211:function(t,e,o){"use strict";var n=o(77);o.n(n).a},70:function(t,e,o){"use strict";o.r(e);var n={components:{lottieComponent:o(117).default},mounted(){document.title="lottie Demo"},data:()=>({jsUrlList:["./q8-bg-3.json"]})},s=(o(211),o(5)),i=Object(s.a)(n,(function(){var t=this.$createElement,e=this._self._c||t;return e("section",{staticClass:"animate-wrapper"},this._l(this.jsUrlList,(function(t,o){return e("section",{key:o},[e("lottie-component",{staticClass:"img-item",attrs:{jsUrl:t}})],1)})),0)}),[],!1,null,"114552af",null);e.default=i.exports},75:function(t,e,o){var n=o(7),s=o(76);"string"==typeof(s=s.__esModule?s.default:s)&&(s=[[t.i,s,""]]);var i={insert:"head",singleton:!1},a=n(s,i),l=s.locals?s.locals:{};s.locals||t.hot.accept(76,(function(){var e=o(76);"string"==typeof(e=e.__esModule?e.default:e)&&(e=[[t.i,e,""]]),a(e)})),t.hot.dispose((function(){a()})),t.exports=l},76:function(t,e,o){(e=o(8)(!1)).push([t.i,".lottie-wrapper[data-v-693999c8]{height:600px}\n",""]),t.exports=e},77:function(t,e,o){var n=o(7),s=o(78);"string"==typeof(s=s.__esModule?s.default:s)&&(s=[[t.i,s,""]]);var i={insert:"head",singleton:!1},a=n(s,i),l=s.locals?s.locals:{};s.locals||t.hot.accept(78,(function(){var e=o(78);"string"==typeof(e=e.__esModule?e.default:e)&&(e=[[t.i,e,""]]),a(e)})),t.hot.dispose((function(){a()})),t.exports=l},78:function(t,e,o){(e=o(8)(!1)).push([t.i,"section[data-v-114552af]{display:block;overflow:hidden;box-sizing:border-box}.animate-wrapper[data-v-114552af]{height:100%;overflow-y:scroll}.img-item[data-v-114552af]{height:600px;border:1px red solid}\n",""]),t.exports=e}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,