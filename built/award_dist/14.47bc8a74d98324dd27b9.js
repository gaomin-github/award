(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{117:function(e,t,o){"use strict";o.r(t);var n=o(208),s=o.n(n),i={props:{jsUrl:{type:String,default:""}},data:()=>({remoteJsonUrl:"http://192.168.31.252:9080/lottie.json",remoteJsUrl:"http://192.168.31.252:9080/jsDemoA.js",jsonImgUrl:"./q4-bg.json",style:{height:""}}),mounted(){this._loadJsonImg()},methods:{_loadJsonImg(){let e=this;this.$refs.lottieCon;o(209)(""+this.jsUrl).then(t=>{this.style={height:`${t.h/2}px`},requestAnimationFrame(()=>{console.log(this.style,44),s.a.loadAnimation({container:e.$refs.lottieCon,renderer:"canvas",loop:!1,autoplay:!0,animationData:t,className:"canvas-default",rendererSettings:{}})})})},_loadRemoteJs(){let e=document.createElement("script");e.src=this.jsUrl,window.executeJson=e=>{console.log("executeJson",e,26)},document.getElementsByTagName("head")[0].append(e)},_loadRemoteJson(){o.e(0).then(o.t.bind(null,191,3)).then(e=>{s.a.loadAnimation({container:this.$refs.lottieCon,renderer:"svg",loop:!0,autoplay:!0,animationData:e,rendererSettings:{}});this.$emit("animCreated",this.animObj)})},_loadLocalJson(){}}},a=(o(210),o(5)),l=Object(a.a)(i,(function(){var e=this.$createElement;return(this._self._c||e)("section",{ref:"lottieCon",staticClass:"lottie-wrapper",style:this.style})}),[],!1,null,"28f4dfc9",null);t.default=l.exports},209:function(e,t,o){var n={".":[70,9],"./":[70,9],"./demo":[191,3,0],"./demo.json":[191,3,0],"./index":[70,9],"./index.vue":[70,9],"./jsDemo":[192,7,3],"./jsDemo.js":[192,7,3],"./lottieComponent":[117,9],"./lottieComponent.vue":[117,9],"./q4-bg":[193,3,5],"./q4-bg.json":[193,3,5],"./q8-bg-3":[194,3,6],"./q8-bg-3.json":[194,3,6],"./q9-huawei-bg1":[195,3,7],"./q9-huawei-bg1.json":[195,3,7],"./q9-mi-new-bg1":[196,3,8],"./q9-mi-new-bg1.json":[196,3,8],"./q9-mi-new-bg2":[197,3,9],"./q9-mi-new-bg2.json":[197,3,9],"./q9-mi-old-bg1":[198,3,10],"./q9-mi-old-bg1.json":[198,3,10],"./q9-mi-old-bg2":[199,3,11],"./q9-mi-old-bg2.json":[199,3,11],"./q9-oneplus-bg1":[200,3,12],"./q9-oneplus-bg1.json":[200,3,12]};function s(e){if(!o.o(n,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=n[e],s=t[0];return Promise.all(t.slice(2).map(o.e)).then((function(){return o.t(s,t[1])}))}s.keys=function(){return Object.keys(n)},s.id=209,e.exports=s},210:function(e,t,o){"use strict";var n=o(75);o.n(n).a},211:function(e,t,o){"use strict";var n=o(77);o.n(n).a},70:function(e,t,o){"use strict";o.r(t);var n={components:{lottieComponent:o(117).default},mounted(){document.title="lottie Demo"},data:()=>({jsUrlList:["./q8-bg-3.json"]})},s=(o(211),o(5)),i=Object(s.a)(n,(function(){var e=this.$createElement,t=this._self._c||e;return t("section",{staticClass:"animate-wrapper"},[this._v("\n    this is lottie img test 123\n    "),this._l(this.jsUrlList,(function(e,o){return t("section",{key:o},[t("lottie-component",{staticClass:"img-item",attrs:{jsUrl:e}})],1)}))],2)}),[],!1,null,"e0165ec8",null);t.default=i.exports},75:function(e,t,o){var n=o(7),s=o(76);"string"==typeof(s=s.__esModule?s.default:s)&&(s=[[e.i,s,""]]);var i={insert:"head",singleton:!1},a=n(s,i),l=s.locals?s.locals:{};s.locals||e.hot.accept(76,(function(){var t=o(76);"string"==typeof(t=t.__esModule?t.default:t)&&(t=[[e.i,t,""]]),a(t)})),e.hot.dispose((function(){a()})),e.exports=l},76:function(e,t,o){(t=o(8)(!1)).push([e.i,".lottie-wrapper[data-v-28f4dfc9]{height:600px}\n",""]),e.exports=t},77:function(e,t,o){var n=o(7),s=o(78);"string"==typeof(s=s.__esModule?s.default:s)&&(s=[[e.i,s,""]]);var i={insert:"head",singleton:!1},a=n(s,i),l=s.locals?s.locals:{};s.locals||e.hot.accept(78,(function(){var t=o(78);"string"==typeof(t=t.__esModule?t.default:t)&&(t=[[e.i,t,""]]),a(t)})),e.hot.dispose((function(){a()})),e.exports=l},78:function(e,t,o){(t=o(8)(!1)).push([e.i,"section[data-v-e0165ec8]{display:block;overflow:hidden;box-sizing:border-box}.animate-wrapper[data-v-e0165ec8]{height:100%;overflow-y:scroll}.img-item[data-v-e0165ec8]{height:600px;border:1px red solid}\n",""]),e.exports=t}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,