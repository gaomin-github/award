(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{121:function(e,t,s){"use strict";var i=s(48);s.n(i).a},122:function(e,t,s){"use strict";var i=s(50);s.n(i).a},123:function(e,t,s){"use strict";var i=s(52);s.n(i).a},132:function(e,t,s){"use strict";s.r(t);var i={props:{value:{type:Number,default:0}}},a=(s(121),s(5)),o=Object(a.a)(i,(function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"progress-wrapper"},[t("svg",{attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 105 10"}},[t("line",{staticClass:"progress-path ",attrs:{x1:"5",y1:"5",x2:"100",y2:"5"}}),this._v(" "),this.value?t("line",{staticClass:"progress-path valid",attrs:{x1:"5",y1:"5",x2:"100","stroke-dasharray":100*this.value+" 500",y2:"5"}}):this._e()])])}),[],!1,null,"2215f8b0",null).exports;var r={components:{uiProgress:o},props:{imgUrl:String,imgLoading:{type:Boolean,default:!1}},data:()=>({loadingValue:0,timerTask:null,touchStartTime:0,showDel:!1}),watch:{imgUrl(e,t){console.log("49"),console.log(e,49)}},mounted(){},methods:{chooseImg(){this.$refs.imgPicker.click()},changeImg(e){this.$emit("changeLoading",!0);let t=[],s=this.$refs.imgPicker.files;if(s&&0!==s.length)for(let e in s)if(e<s.length){let i=s[e],a={id:Math.random(),fileObj:i};t.push(a),this.loadingValue=t.length/s.length,t.length===s.length&&(this.$emit("chooseImg",t),requestAnimationFrame(()=>{this.$emit("changeImgLoading",!1),this.loadingValue=0}))}},handleTouchStart(){this.imgUrl&&(this.touchStartTime=(new Date).getTime(),this.timerTask=setTimeout(()=>{this.showDel=!0},1e3))},handleTouchEnd(){(new Date).getTime()-this.touchStartTime<1e3&&(this.showDel=!1,clearTimeout(this.timerTask),this.timerTask=null)},handleDropFile(){this.$emit("dropImg",this.imgUrl)}}},n=(s(122),Object(a.a)(r,(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"img-uploader-wrapper"},[e.imgUrl?s("img",{class:["assess-img",e.showDel?"assess-img-del":""],attrs:{src:e.imgUrl},on:{touchstart:e.handleTouchStart,touchend:e.handleTouchEnd}}):e._e(),e._v(" "),e.imgUrl?e._e():s("div",{staticClass:"assess-bg",on:{click:e.chooseImg}},[e._v("+")]),e._v(" "),e.imgUrl?e._e():s("input",{ref:"imgPicker",staticStyle:{opacity:"0"},attrs:{type:"file",accept:"image/*",multiple:"multiple"},on:{change:e.changeImg}}),e._v(" "),!e.imgUrl&&e.imgLoading?s("div",{staticClass:"loading"},[s("ui-progress",{attrs:{value:e.loadingValue}})],1):e._e(),e._v(" "),e.showDel?s("div",{staticClass:"del"},[s("i",{staticClass:"icon fa fa-times",on:{click:e.handleDropFile}})]):e._e()])}),[],!1,null,"d5e1226c",null));t.default=n.exports},151:function(e,t,s){"use strict";s.r(t);var i=s(17),a=s(3),o=s(20),r=(s(132),{components:{headerTool:()=>s.e(2).then(s.bind(null,153)),imgUploader:()=>Promise.resolve().then(s.bind(null,132))},data:()=>({content:"",worth:0,process:0,pics:[],curPics:[],curPicPath:[],imgLoading:!1}),computed:{...Object(a.d)("weekly",["scheduleList","taskId","curSchedule","subId"])},mounted(){this._prevData(),this.$refs.content.focus()},beforeDestroy(){this.back()},methods:{...Object(a.c)("weekly",["updateSchedule","updateEditing"]),back(){if(console.log(this.curPicPath,111),this.curPicPath&&this.curPicPath.length>0){let e=new Date,t=`${e.getFullYear()}-${e.getMonth()+1}-${e.getDay()}`;t=t.replace(/\b(?=\d(\s|\:|\-|\b))/g,0),this.pics.push({createTime:t,urls:this.curPicPath})}this.curPicPath=[],this._saveSchedule(),this.updateEditing(!1)},_prevData(){this.content=this.curSchedule.content,this.worth=this.curSchedule.worth,this.process=this.curSchedule.process,this.pics=this.curSchedule.pics||[],console.log(this.pics,128)},inputHandler(){Object(o.a)(()=>{this._saveSchedule()},500)()},_saveSchedule(){this.updateSchedule(Object.assign(this.curSchedule,{content:this.content,worth:this.worth,process:this.process,pics:this.pics}));let e=encodeURIComponent(JSON.stringify(this.scheduleList));i.a.get(`/task/updateTask?taskId=${this.taskId}&scheduleStr=${e}`).then(e=>{if(200===e.status)return e.data})},changeImgLoading(e){console.log(e,174),this.imgLoading=e},async chooseImg(e){this.curPics.push(...e);let t=new FormData;e.map(e=>{t.append("file",e.fileObj)}),t.append("path","pictures/weekly"),Object(i.a)({url:"/common/file",method:"post",data:t,headers:{"content-type":"multipart/form-data"}}).then(e=>{200===e.status&&(this.curPicPath.push(...e.data),this.imgLoading=!1)})},deleteImg(e){Object(i.a)({url:"/common/dropfile",method:"post",data:{filePath:e}}).then(t=>{if(200===t.status&&t.data){let t=this.curPicPath.findIndex(t=>t===e);this.curPicPath.splice(t,1),this.imgLoading=!1}})}}}),n=(s(123),s(5)),c=Object(n.a)(r,(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"editor-wrapper"},[s("header-tool",{on:{back:e.back}}),e._v(" "),s("div",{staticClass:"container"},[s("div",{staticClass:"grade"},[s("div",{staticClass:"grade-progress"},[s("svg",{attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 105 10"}},[s("line",{staticClass:"grade-progress-path",attrs:{x1:"5",y1:"5",x2:"100",y2:"5"}}),e._v(" "),e.process&&e.worth?s("line",{staticClass:"grade-progress-path valid",attrs:{x1:"5",y1:"5",x2:"100","stroke-dasharray":(e.process<e.worth?100*e.process/e.worth:100)+" 500",y2:"5"}}):e._e()])]),e._v(" "),s("div",{staticClass:"grade-worth"},[e._v("\n        总分\n        "),s("input",{directives:[{name:"model",rawName:"v-model",value:e.worth,expression:"worth"}],attrs:{type:"number"},domProps:{value:e.worth},on:{input:function(t){t.target.composing||(e.worth=t.target.value)}}})]),e._v(" "),s("div",{staticClass:"grade-process"},[e._v("\n        ,现得分\n        "),s("span",[s("input",{directives:[{name:"model",rawName:"v-model",value:e.process,expression:"process"}],attrs:{type:"number"},domProps:{value:e.process},on:{input:function(t){t.target.composing||(e.process=t.target.value)}}})])])]),e._v(" "),s("textarea",{directives:[{name:"model",rawName:"v-model",value:e.content,expression:"content"}],ref:"content",staticClass:"content",attrs:{placeholder:"add some content"},domProps:{value:e.content},on:{input:[function(t){t.target.composing||(e.content=t.target.value)},e.inputHandler]}}),e._v(" "),s("div",{staticClass:"schedule"},[e.curPicPath&&e.curPicPath.length>0?s("div",{staticClass:"schedule-cur"},[e._l(e.curPicPath,(function(t){return s("img-uploader",{key:t,staticClass:"schedule-cur-item",attrs:{imgUrl:t},on:{chooseImg:e.chooseImg,dropImg:e.deleteImg}})})),e._v(" "),s("img-uploader",{staticClass:"schedule-cur-item",attrs:{imgLoading:e.imgLoading},on:{chooseImg:e.chooseImg,changeLoading:e.changeImgLoading}})],2):s("img-uploader",{staticClass:"schedule-cur-item",attrs:{imgLoading:e.imgLoading},on:{chooseImg:e.chooseImg,changeLoading:e.changeImgLoading}})],1),e._v(" "),e.pics&&e.pics.length>0?s("div",{staticClass:"schedule history"},e._l(e.pics,(function(t,i){return s("div",{key:i,staticClass:"history-item"},[s("div",{staticClass:"history-item-time"},[e._v(e._s(t.createTime))]),e._v(" "),t.urls&&t.urls.length>0?s("div",{staticClass:"history-item-pics"},e._l(t.urls,(function(e){return s("img-uploader",{key:e,staticClass:"history-item-pics-item",attrs:{imgUrl:e}})})),1):e._e()])})),0):e._e()])],1)}),[],!1,null,"cf68433c",null);t.default=c.exports},17:function(e,t,s){"use strict";var i=s(18);let a=s.n(i).a.create({timeout:3e4,headers:{}});t.a=a},20:function(e,t,s){"use strict";s.d(t,"a",(function(){return a}));let i=(new Date).getTime();function a(e,t){return function(){(new Date).getTime()-i<=t||(i=(new Date).getTime(),e(arguments))}}},48:function(e,t,s){var i=s(8),a=s(49);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},r=i(a,o),n=a.locals?a.locals:{};a.locals||e.hot.accept(49,(function(){var t=s(49);"string"==typeof(t=t.__esModule?t.default:t)&&(t=[[e.i,t,""]]),r(t)})),e.hot.dispose((function(){r()})),e.exports=n},49:function(e,t,s){(t=s(9)(!1)).push([e.i,"div[data-v-2215f8b0]{display:block;box-sizing:border-box;overflow:hidden}@keyframes valid_path-data-v-2215f8b0{to{stroke-dasharray:0 500}}.progress-wrapper[data-v-2215f8b0]{width:100%;height:100%}svg[data-v-2215f8b0]{width:100%;height:100%}.progress-path[data-v-2215f8b0]{stroke-width:5;stroke-linecap:round;stroke:#999}.valid[data-v-2215f8b0]{stroke:#429037;animation:valid_path-data-v-2215f8b0 1s ease reverse}\n",""]),e.exports=t},50:function(e,t,s){var i=s(8),a=s(51);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},r=i(a,o),n=a.locals?a.locals:{};a.locals||e.hot.accept(51,(function(){var t=s(51);"string"==typeof(t=t.__esModule?t.default:t)&&(t=[[e.i,t,""]]),r(t)})),e.hot.dispose((function(){r()})),e.exports=n},51:function(e,t,s){(t=s(9)(!1)).push([e.i,"@import url(https://cdn.bootcss.com/font-awesome/4.7.0/css/font-awesome.css);"]),t.push([e.i,"section[data-v-d5e1226c],div[data-v-d5e1226c]{display:block;overflow:hidden;margin:0;padding:0;box-sizing:border-box}.img-uploader-wrapper[data-v-d5e1226c]{width:100%;height:100%;position:relative;border-radius:10px;overflow:visible}.loading[data-v-d5e1226c]{position:absolute;top:0px;left:0px;right:0px;bottom:0px;padding:0px 20px;background:#eee;border-radius:10px;border:1px #ccc solid;display:flex;align-items:center}.del[data-v-d5e1226c]{position:absolute;top:0px;left:0px;right:0px;bottom:0px;overflow:visible !important}.del .icon[data-v-d5e1226c]{display:block;position:absolute;box-sizing:border-box;top:-30px;right:-30px;width:65px;height:55px;padding:20px 20px 0px 20px;color:#999;font-size:16px;font-weight:300}.assess-img[data-v-d5e1226c]{display:block;width:100%;height:100%;transition:all 0.3s ease}.assess-img-del[data-v-d5e1226c]{width:80%;height:80%;transform:translate(12%, 12%)}.assess-bg[data-v-d5e1226c]{display:flex;align-items:center;justify-content:center;width:100%;height:100%;line-height:100%;font-size:50px;font-weight:200;background:#eee;color:#999}.assess-bg[data-v-d5e1226c]:before{display:inline}\n",""]),e.exports=t},52:function(e,t,s){var i=s(8),a=s(53);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1},r=i(a,o),n=a.locals?a.locals:{};a.locals||e.hot.accept(53,(function(){var t=s(53);"string"==typeof(t=t.__esModule?t.default:t)&&(t=[[e.i,t,""]]),r(t)})),e.hot.dispose((function(){r()})),e.exports=n},53:function(e,t,s){(t=s(9)(!1)).push([e.i,'@keyframes valid_path-data-v-cf68433c{to{stroke-dasharray:0 500}}.editor-wrapper[data-v-cf68433c]{height:100%;display:flex;flex-direction:column;position:absolute;padding:10px;background:#f2f5f9}textarea[data-v-cf68433c]{appearance:none;border:none;outline:none;width:100%;height:100%;box-sizing:border-box}.container[data-v-cf68433c]{flex:1;flex-shrink:1;overflow-y:scroll}.grade[data-v-cf68433c]{height:50px;display:flex;align-items:center}.grade-progress[data-v-cf68433c]{flex:1;flex-shrink:1}.grade-progress svg[data-v-cf68433c]{width:100%;height:100%}.grade-progress-path[data-v-cf68433c]{stroke-width:5;stroke-linecap:round;stroke:#999}.grade-progress .valid[data-v-cf68433c]{stroke:red;transition:all 3s ease;animation:valid_path-data-v-cf68433c 1s ease reverse}.grade input[type="number"][data-v-cf68433c]{appearance:none;margin:0;padding:0;outline:0;line-height:30px;font-size:16px;width:36px;border:none;border-bottom:1px #999 solid;text-align:center;background:none}.grade-worth[data-v-cf68433c]{flex-shrink:1}.grade-process[data-v-cf68433c]{flex-shrink:1}.content[data-v-cf68433c]{height:180px;overflow-y:scroll;padding:0px 5px;margin-top:10px;border:1px #b4afaf solid;line-height:28px;font-size:14px;border-radius:5px}.schedule[data-v-cf68433c]{background:#fff}.schedule-item[data-v-cf68433c]{width:100px;height:100px}.schedule-cur[data-v-cf68433c]{display:flex;flex-wrap:wrap}.schedule-cur-item[data-v-cf68433c]{margin:10px 5px;width:100px;height:100px}.history-item-time[data-v-cf68433c]{line-height:30px;font-size:24px}.history-item-pics[data-v-cf68433c]{display:flex}.history-item-pics-item[data-v-cf68433c]{width:100px;height:100px;margin:10px 8px}\n',""]),e.exports=t}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,