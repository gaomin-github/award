(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{113:function(e,t,a){"use strict";var i=a(34);a.n(i).a},145:function(e,t,a){"use strict";a.r(t);var i=a(17),n=a(3);const s="108.8371912900,34.2032353700",o=[610103,610104,610113];var r={components:{assess:()=>a.e(23).then(a.bind(null,142))},data:()=>({areaInfo:{},buildings:[],gardens:[],driveRoutes:[],tabs:[{key:"list",label:"所有房间",color:"rgba(43, 116, 215, 1)"},{key:"map",label:"地图查看",color:"rgba(254, 148, 73, 1)"},{key:"assess",label:"评价",color:"rgba(115, 163, 9, 1)"}],curTabKey:"assess",mapObj:null,pathObj:null}),async mounted(){document.title="高德",this._initPrevPage(),this._getBuildingInfo(),await this._initMapScript(),await this._initMapUi(),this._initGardens(),await this._initDriveRoute()},methods:{...Object(n.c)("estate",["setCurArea"]),_initPrevPage(){let e=this.$route.query.areaInfo;this.areaInfo=JSON.parse(e),console.log(this.areaInfo,15),this.setCurArea(this.areaInfo)},_getBuildingInfo(){i.a.get(`/xian/estateBuildings?areaId=${this.areaInfo.areaId}`).then(e=>{200===e.status&&(this.buildings=e.data,console.log(this.buildings,136))})},async _initMapScript(){return new Promise((e,t)=>{window.onLoad=async()=>(this._initMapContainer(),e());let a=document.createElement("script");a.charset="utf-8",a.src="https://webapi.amap.com/maps?v=1.4.15&key=17569efbd54a284b8bd0ce338ae71616&callback=onLoad",document.head.appendChild(a)})},_initMapContainer(){let e=this._initLocation(s),t=this._initLocation(this.areaInfo.location);this.mapObj=new AMap.Map("map-container",{zoom:11,center:[(Number(e[0])+Number(t[0]))/2,(Number(e[1])+Number(t[1]))/2],mapStyle:"amap://styles/light"})},async _initMapUi(){return new Promise((e,t)=>{let a=document.createElement("script");a.charset="utf-8",a.src="https://webapi.amap.com/ui/1.0/main.js?v=1.0.11",document.head.appendChild(a);let i=this;a.onload=()=>{AMapUI.loadUI(["overlay/SimpleMarker"],(function(t){return new t({iconTheme:"default",iconStyle:"orange",map:i.mapObj,position:i._initLocation(s),label:{content:"高新软件园",offset:new AMap.Pixel(-10,-20)}}),new t({iconTheme:"default",iconStyle:"orange",map:i.mapObj,position:i._initLocation(i.areaInfo.location),label:{content:i.areaInfo.label,offset:new AMap.Pixel(-10,-20)}}),e()}))}})},_testMarker(){},_initPathLns(){let e=this;AMapUI.load(["ui/misc/PathSimplifier","lib/$"],(function(t,a){let i=new t({zIndex:100,map:e.mapObj,getPath:(e,t)=>e.path,renderOptions:{renderAllPointsIfNumberBelow:100}});i.setData([{name:"路线0",path:[...e.driveRoutes]}]);i.createPathNavigator(0,{loop:!0,speed:5e3})}))},_initDistrict(){let e=this;AMapUI.load(["ui/geo/DistrictExplorer","lib/$"],(function(t){let a=new t({map:e.mapObj});var i=["#3366cc","#dc3912","#ff9900","#aa9900","#ff1901","#aa0101","red","green"];o.map((e,t)=>{a.loadAreaNode(e,(function(e,n){a.renderSubFeatures(n,(function(e,t){return console.log(e.properties.name,237),{cursor:"default",bubble:!0,strokeColor:"blue",strokeOpacity:1,strokeWeight:1,fillColor:"red",fillOpacity:.35}})),a.renderParentFeature(n,{cursor:"default",bubble:!0,strokeColor:null,strokeOpacity:1,strokeWeight:1,fillColor:i[t],fillOpacity:.35})}))})}))},_initGardens(){i.a.get(`/xian/aroundGarden?originLocation=${this.areaInfo.location}`).then(e=>{if(200===e.status&&(this.gardens=e.data,this.gardens&&this.gardens.length>0)){let e=this;AMapUI.loadUI(["overlay/SvgMarker"],(function(t){e.gardens.map((a,i)=>{var n=new t.Shape.Circle({height:16,strokeWidth:1,strokeColor:"#fff",fillColor:"#177261"});n.getCenter();new t(n,{map:e.mapObj,position:e._initLocation(a.location),containerClassNames:"shape-Circle",iconLabel:{innerHTML:i+1,style:{color:"#fff",fontSize:"12px"}}})})}))}})},_initDriveRoute(){i.a.get(`/xian/drivingRoute?originLocation=${this.areaInfo.location}&destination=${s}`).then(e=>{200===e.status&&e.data.steps&&e.data.steps.length>0&&(e.data.steps.forEach(e=>{if(e.polyline){this._formatPolyline(e.polyline);this.driveRoutes.push(...this._formatPolyline(e.polyline))}}),this._initPathLns())})},_initLocation:e=>e.split(","),_formatPolyline(e){return e.split(";").map(e=>{let t=this._initLocation(e);return[Number(t[0]),Number(t[1])]})},getAreaLabel(){if(this.areaInfo.label){return this.areaInfo.label.replace(/(&middot;|&ldquo;|&rdquo;)/g,"")}return this.areaInfo.label},changeTab(e){this.curTabKey=e.key,console.log(this.curTabKey,368)},backHandler(){this.$router.go(-1)}}},l=(a(113),a(5)),c=Object(l.a)(r,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("section",{staticClass:"area-wrapper"},[a("section",{staticClass:"content"},[e.tabs&&e.tabs.length>0?a("section",{staticClass:"tabs"},e._l(e.tabs,(function(t){return a("section",{key:t.key,staticClass:"tabs-item",class:t.key,style:"background:"+t.color,on:{click:function(a){return e.changeTab(t)}}},[e._v(e._s(t.label))])})),0):e._e(),e._v(" "),e.buildings&&e.buildings.length>0&&"list"===e.curTabKey?a("section",{staticClass:"horz building-title"},[a("section",{staticClass:"name"},[e._v("房间号")]),e._v(" "),a("section",{staticClass:"space"},[e._v("面积")]),e._v(" "),a("section",{staticClass:"unit-price"},[e._v("单价(元)")]),e._v(" "),a("section",{staticClass:"total-price"},[e._v("总价(万元)")])]):e._e(),e._v(" "),e.buildings&&e.buildings.length>0&&"list"===e.curTabKey?a("section",{staticClass:"building-list"},e._l(e.buildings,(function(t,i){return a("section",{key:i,staticClass:"building-list-item horz"},[a("section",{staticClass:"name"},[e._v(e._s(t.buildingId))]),e._v(" "),a("section",{staticClass:"space"},[e._v(e._s(t.space))]),e._v(" "),a("section",{staticClass:"unit-price"},[e._v(e._s(t.unitPrice))]),e._v(" "),a("section",{staticClass:"total-price"},[e._v(e._s(Math.ceil(parseInt(t.totalPrice)/1e4)))])])})),0):e._e(),e._v(" "),a("section",{directives:[{name:"show",rawName:"v-show",value:"map"===e.curTabKey,expression:"curTabKey === 'map'"}],staticClass:"map-con"},[e.gardens&&e.gardens.length>0?a("section",{staticClass:"garden"},e._l(e.gardens,(function(t,i){return a("section",{key:i,staticClass:"garden-item"},[a("section",{staticClass:"garden-item-icon"},[e._v(e._s(i+1))]),e._v(" "),a("section",{staticClass:"garden-item-label"},[e._v(e._s(t.name)+",距离"+e._s(t.distance)+"米")])])})),0):e._e(),e._v(" "),a("section",{staticClass:"map-container",attrs:{id:"map-container"}})]),e._v(" "),a("section",{directives:[{name:"show",rawName:"v-show",value:"assess"===e.curTabKey,expression:"curTabKey === 'assess'"}],staticClass:"assess-con con"},[a("assess",{attrs:{assess:e.areaInfo.assess},on:{updateArea:function(t){return e.setCurArea(e.areaInfo)}}})],1)])])}),[],!1,null,"bc61e37e",null);t.default=c.exports},17:function(e,t,a){"use strict";var i=a(18);let n=a.n(i).a.create({timeout:3e4,headers:{}});t.a=n},34:function(e,t,a){var i=a(8),n=a(35);"string"==typeof(n=n.__esModule?n.default:n)&&(n=[[e.i,n,""]]);var s={insert:"head",singleton:!1},o=i(n,s),r=n.locals?n.locals:{};n.locals||e.hot.accept(35,(function(){var t=a(35);"string"==typeof(t=t.__esModule?t.default:t)&&(t=[[e.i,t,""]]),o(t)})),e.hot.dispose((function(){o()})),e.exports=r},35:function(e,t,a){(t=a(9)(!1)).push([e.i,"section[data-v-bc61e37e]{display:block;overflow:hidden;margin:0;padding:0;box-sizing:border-box}.area-wrapper[data-v-bc61e37e]{width:100%;height:100%;background:rgba(9,41,114,0.95);display:flex;flex-direction:column}.header[data-v-bc61e37e]{flex-shrink:1;position:relative;line-height:30px;padding:10px 40px;font-size:18px;font-weight:600;color:rgba(245,245,245,0.9);text-align:center}.header-icon[data-v-bc61e37e]{color:rgba(245,245,245,0.9);position:absolute;left:10px}.content[data-v-bc61e37e]{flex:1;display:flex;flex-direction:column;margin:0px 3px;border-radius:15px 15px 3px 3px;background:rgba(255,255,255,0.98)}.tabs[data-v-bc61e37e]{flex-shrink:1;display:flex;justify-content:space-around;padding:10px 10px 5px;color:rgba(255,255,255,0.8)}.tabs-item[data-v-bc61e37e]{padding:0px 10px;height:45px;line-height:45px;text-align:center;flex:1}.tabs .list[data-v-bc61e37e]{color:rgba(255,255,255,0.85)}.tabs section[data-v-bc61e37e]:first-child{border-radius:20px 0px 0px 20px}.tabs section[data-v-bc61e37e]:last-child{border-radius:0px 20px 20px 0px}.horz[data-v-bc61e37e]{display:flex;justify-content:space-between}.horz .name[data-v-bc61e37e],.horz .space[data-v-bc61e37e],.horz .unit-price[data-v-bc61e37e],.horz .total-price[data-v-bc61e37e]{flex:1;text-align:center}.building-title[data-v-bc61e37e]{padding:0px 10px;line-height:30px;border-top:1px #3f74b9 solid;border-bottom:1px #3f74b9 solid;background-color:#2b74d7;color:rgba(255,255,255,0.9)}.building-title .name[data-v-bc61e37e],.building-title .space[data-v-bc61e37e],.building-title .unit-price[data-v-bc61e37e]{border-right:1px rgba(63,116,185,0.8) solid}.building-list[data-v-bc61e37e]{flex:1;flex-shrink:1;overflow-y:scroll;padding-bottom:10px;background:rgba(255,255,255,0.9)}.building-list .building-list-item[data-v-bc61e37e]{padding:0px 10px;line-height:36px;border-bottom:1px rgba(43,116,215,0.4) solid}.building-list .building-list-item .name[data-v-bc61e37e],.building-list .building-list-item .space[data-v-bc61e37e],.building-list .building-list-item .unit-price[data-v-bc61e37e]{border-right:1px rgba(43,116,215,0.4) solid}.con[data-v-bc61e37e]{flex:1}.map-con[data-v-bc61e37e]{padding:0px 5px 5px;flex:1;display:flex;flex-direction:column}.garden[data-v-bc61e37e]{flex-shrink:1;font-size:14px;color:rgba(0,0,0,0.8);padding-bottom:10px;overflow-y:hidden}.garden-item[data-v-bc61e37e]{line-height:26px;display:flex}.garden-item-icon[data-v-bc61e37e]{width:20px;background:#177261;color:#fff;border-radius:50%;text-align:center;height:20px;line-height:20px;margin:3px 10px}.map-container[data-v-bc61e37e]{width:100%;flex:1;overflow:scroll;position:relative}.amap-markers[data-v-bc61e37e]{overflow:visible !important}\n",""]),e.exports=t}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,