(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{124:function(e,t,a){"use strict";var s=a(54);a.n(s).a},125:function(e,t,a){"use strict";var s=a(56);a.n(s).a},126:function(e,t,a){"use strict";var s=a(58);a.n(s).a},135:function(e,t,a){"use strict";a.r(t);var s=a(3),o=a(20),n=a(17),i={data:()=>({touchStartX:0,touchEndX:0,iconInfos:[{bg:"rgba(248,169,97,1)",icon:"book"},{bg:"rgba(172,97,248,1)",icon:"language"},{bg:"rgba(247,35,111,1)",icon:"cutlery"},{bg:"rgba(0,178,255,1)",icon:"bell"}]}),props:{schedule:{type:Object,default:()=>({})},order:{type:Number,default:0}},model:{prop:"schedule",event:"update"},computed:{...Object(s.d)("weekly",["editing"])},mounted(){console.log(this.order,73)},methods:{...Object(s.c)("weekly",["updateCurSchedule","updateEditing","initTask","insertSchedule","updateSchedule","deleteSchedule"]),editScheduleContent(){this.updateCurSchedule(this.schedule),this.updateEditing(!0)},editScheduleNum(){this.$emit("editScheduleNum",this.schedule)},handleTouchStart(e){this.touchStartX=e.targetTouches[0].pageX,console.log(e.targetTouches[0].pageX,"-----start----")},handleTouchMove(e){this.touchEndX=e.targetTouches[0].pageX,console.log(e.targetTouches[0].pageX,"-----move----")},handleTouchEnd(e){console.log("handleTouchEnd"),console.log(`touchStartX:${this.touchStartX},toucheEndX:${this.touchEndX}`)}}},d=(a(124),a(5)),r=Object(d.a)(i,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{class:["schedule-wrapper schedule-item",e.order%2==0?"odd":"even"],on:{touchstart:e.handleTouchStart,touchmove:e.handleTouchMove,touchend:e.handleTouchEnd,click:e.editScheduleContent}},[a("i",{class:["icon","fa","fa-"+e.iconInfos[e.order%4].icon],style:{background:e.iconInfos[e.order%4].bg}}),e._v(" "),a("div",{class:["content",e.schedule.content?"":"content_blank"]},[e._v("\n    "+e._s(e.schedule.content||"add some schedules ~")+"\n")]),e._v(" "),a("div",{staticClass:"grade"})])}),[],!1,null,"07afeb42",null).exports,c={props:{score:{type:Number,default:0}}},l=(a(125),{components:{headerTool:()=>a.e(2).then(a.bind(null,153)),schedule:r,circleChart:Object(d.a)(c,(function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"circle-chart-wrapper"},[t("svg",{attrs:{xmlns:"http://www.w3.org/2000/svg"}},[t("circle",{staticClass:"circle_path_bg"}),this._v(" "),t("circle",{staticClass:"circle_path",attrs:{"stroke-dasharray":200*this.score+" 500"}}),this._v(" "),1===this.score?t("path",{staticClass:"circle_mark_full",attrs:{d:"M 25 23 L 30 38 L 48 20"}}):t("text",{staticClass:"circle_mark",attrs:{x:"23",y:"35"}},[this._v("\n      "+this._s(Math.ceil(100*this.score))+"\n    ")])])])}),[],!1,null,"09a6f4a4",null).exports},data:()=>({}),computed:{...Object(s.d)("weekly",["scheduleList","taskId","curUser"]),...Object(s.b)("weekly",["totalValue","score"])},mounted(){this._initTask()},beforeDestroy(){this._saveTask()},methods:{...Object(s.c)("weekly",["initTask","insertSchedule","updateSchedule","deleteSchedule","updateCurUser"]),back(){let e=[];e=this.scheduleList&&this.scheduleList.length>1?this.scheduleList.filter((e,t)=>!!(e.content&&e.content.length>0)):this.scheduleList,this.initTask({taskId:this.taskId,schedules:e}),this._saveTask(),this.updateCurUser(null)},_initTask(){n.a.get(`/task/task?userId=${this.curUser.userId}`).then(e=>{200===e.status&&e.data?(this.initTask(e.data[0]),console.log(this.scheduleList,104)):n.a.get(`/task/createTask?userId=${this.curUser.userId}`).then(e=>{200===e.status&&e.data&&this.initTask(e.data)})})},addSchedule(){let e={subId:Math.random(),content:"",worth:null,process:null};this.insertSchedule(e)},editScheduleNum(e){Object(o.a)(()=>{e=this._checkNum(e),this.updateSchedule(e),this._saveTask()},500)()},_saveTask(){let e=encodeURIComponent(JSON.stringify(this.scheduleList));n.a.get(`/task/updateTask?taskId=${this.taskId}&scheduleStr=${e}`).then(e=>{if(200===e.status)return e.data})},_checkNum:e=>(Number(e.worth)<Number(e.process)||Number(e.worth)<0||Number(e.process)<0?e.errStatus=!0:e.errStatus=!1,e)}}),u=(a(126),Object(d.a)(l,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"task-wrapper"},[a("header",{staticClass:"user"}),e._v(" "),a("div",{staticClass:"content"},[a("div",{staticClass:"title"},[e._v("\n                Your Schedules\n            ")]),e._v(" "),e.scheduleList?a("div",{staticClass:"schedule"},e._l(e.scheduleList,(function(t,s){return a("schedule",{key:t.subId,staticClass:"schedule-item",attrs:{order:s},on:{editScheduleNum:e.editScheduleNum,deleteSchedule:e.deleteSchedule},model:{value:e.scheduleList[s],callback:function(t){e.$set(e.scheduleList,s,t)},expression:"scheduleList[index]"}})})),1):e._e()]),e._v(" "),a("i",{staticClass:"icon fa fa-plus",on:{click:e.addSchedule}})])}),[],!1,null,"84810196",null));t.default=u.exports},17:function(e,t,a){"use strict";var s=a(18);let o=a.n(s).a.create({timeout:3e4,headers:{}});t.a=o},20:function(e,t,a){"use strict";a.d(t,"a",(function(){return o}));let s=(new Date).getTime();function o(e,t){return function(){(new Date).getTime()-s<=t||(s=(new Date).getTime(),e(arguments))}}},54:function(e,t,a){var s=a(8),o=a(55);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var n={insert:"head",singleton:!1},i=s(o,n),d=o.locals?o.locals:{};o.locals||e.hot.accept(55,(function(){var t=a(55);"string"==typeof(t=t.__esModule?t.default:t)&&(t=[[e.i,t,""]]),i(t)})),e.hot.dispose((function(){i()})),e.exports=d},55:function(e,t,a){(t=a(9)(!1)).push([e.i,"section[data-v-07afeb42],div[data-v-07afeb42],header[data-v-07afeb42],p[data-v-07afeb42]{display:block;overflow:hidden;margin:0;padding:0}input[data-v-07afeb42],textarea[data-v-07afeb42]{appearance:none;background:none;border:none;outline:none;height:100%;font-size:14px}[data-v-07afeb42]::-webkit-input-placeholder{color:#999}.schedule-item[data-v-07afeb42]{height:70px;border-radius:5px;display:flex;align-items:center;padding-left:5px}.icon[data-v-07afeb42]{display:block;flex-shrink:1;box-sizing:border-box;width:38px;height:38px;margin:0px 5px;line-height:38px;color:#fff;border-radius:50%;text-align:center;font-size:18px;font-weight:800}.content[data-v-07afeb42]{flex:1;color:#434856;font-size:16px;white-space:nowrap;text-overflow:ellipsis}.content_blank[data-v-07afeb42]{color:#b3b9cb;font-size:16px}.grade[data-v-07afeb42]{width:100px;border:1px red solid}.even[data-v-07afeb42]{background:#f8f8f8}.odd[data-v-07afeb42]{background:#fff}.number-err[data-v-07afeb42]{border-bottom:2px red dashed}\n",""]),e.exports=t},56:function(e,t,a){var s=a(8),o=a(57);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var n={insert:"head",singleton:!1},i=s(o,n),d=o.locals?o.locals:{};o.locals||e.hot.accept(57,(function(){var t=a(57);"string"==typeof(t=t.__esModule?t.default:t)&&(t=[[e.i,t,""]]),i(t)})),e.hot.dispose((function(){i()})),e.exports=d},57:function(e,t,a){(t=a(9)(!1)).push([e.i,"svg[data-v-09a6f4a4]{width:65px;height:65px}@keyframes path-data-v-09a6f4a4{to{stroke-dasharray:0 500}}.circle_path[data-v-09a6f4a4],.circle_path_bg[data-v-09a6f4a4]{cx:31;cy:31;r:30;fill:none;stroke-width:3}.circle_path_bg[data-v-09a6f4a4]{stroke:#efefef}.circle_path[data-v-09a6f4a4]{stroke:#429037;animation:path-data-v-09a6f4a4 2s ease reverse;stroke-linecap:round}.circle_mark[data-v-09a6f4a4]{fill:#429037}.circle_mark_full[data-v-09a6f4a4]{fill:none;stroke:#429037;stroke-width:4;x:30;y:30}\n",""]),e.exports=t},58:function(e,t,a){var s=a(8),o=a(59);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var n={insert:"head",singleton:!1},i=s(o,n),d=o.locals?o.locals:{};o.locals||e.hot.accept(59,(function(){var t=a(59);"string"==typeof(t=t.__esModule?t.default:t)&&(t=[[e.i,t,""]]),i(t)})),e.hot.dispose((function(){i()})),e.exports=d},59:function(e,t,a){(t=a(9)(!1)).push([e.i,".task-wrapper[data-v-84810196]{position:absolute;width:100%;height:100%;background:#f2f5f9;display:flex;flex-direction:column}div[data-v-84810196],header[data-v-84810196],nav[data-v-84810196],p[data-v-84810196]{display:block;overflow:hidden;margin:0;padding:0;box-sizing:border-box}input[data-v-84810196],textarea[data-v-84810196]{appearance:none;background:none;border:none;outline:none;height:100%;font-size:14px}header[data-v-84810196],.user[data-v-84810196]{display:flex;padding:10px}header-info[data-v-84810196],.user-info[data-v-84810196]{flex:1;flex-shrink:1}header-info-name[data-v-84810196],.user-info-name[data-v-84810196]{line-height:34px;font-size:18px;color:#5a5253;font-weight:600}header-info-name span[data-v-84810196],.user-info-name span[data-v-84810196]{font-size:22px}header-info-score[data-v-84810196],.user-info-score[data-v-84810196]{line-height:24px;font-size:14px;color:#444645}header-info-score span[data-v-84810196],.user-info-score span[data-v-84810196]{color:#dc1818}header-score[data-v-84810196],.user-score[data-v-84810196]{margin-top:10px;flex-shrink:1;min-width:100px}nav[data-v-84810196]{display:flex;position:relative;line-height:42px;border-radius:5px 5px 0 0;background-color:#429037}nav .prev[data-v-84810196]{font-size:14px;position:absolute;left:10px;color:#f5ecb1;font-size:15px}nav .cur[data-v-84810196]{font-size:16px;text-align:center;width:100%;color:#f5ecb1;font-weight:600;font-size:18px}.content[data-v-84810196]{flex:1;border:1px red solid;border-radius:15px;margin:10px 10px 20px;overflow-y:scroll;background:#fff}.content .title[data-v-84810196]{font-size:24px;font-weight:500;line-height:41px;color:#414755}.content .schedule[data-v-84810196]{flex:1;margin-top:10px}.schedule[data-v-84810196]{padding:10px 15px}.icon[data-v-84810196]{flex-shrink:1;box-sizing:border-box;color:#fff;width:42px;height:42px;line-height:42px;border-radius:50%;text-align:center;font-size:28px;background:#429037}.result[data-v-84810196]{margin:20px 10px}.number-err[data-v-84810196]{border-bottom:1px red dashed}\n",""]),e.exports=t}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,